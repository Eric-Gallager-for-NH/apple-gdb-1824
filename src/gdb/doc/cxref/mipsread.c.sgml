<!DOCTYPE LINUXDOC SYSTEM>

<!-- This SGML file generated by cxref (version 1.6e). -->
<!-- cxref program (c) Andrew M. Bishop 1995-2014. -->

<!--
Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF mipsread.c
CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
-->

<article>

<title>Cross reference for mipsread.c of gdb.cxref.
<author>cxref

<sect>File mipsread.c
<descrip>
<tag>References Functions:</tag>
<itemize>
<item>default_symfile_offsets()  :  symfile.c
<item>mipscoff_new_init()  :  mipsread.c
<item>mipscoff_symfile_finish()  :  mipsread.c
<item>mipscoff_symfile_init()  :  mipsread.c
<item>mipscoff_symfile_read()  :  mipsread.c
</itemize>
</descrip>

<sect1>Included Files

<p>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<itemize>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
<item><tt>#include &lt;sys/time.h&gt;</tt>
<item><tt>#include &lt;time.h&gt;</tt>
<item><tt>#include &lt;sys/types.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
<item><tt>#include &lt;errno.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
<item><tt>#include &lt;regex.h&gt;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;unistd.h&gt;</tt>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;gdb_locale.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<item><tt>#include &lt;locale.h&gt;</tt>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../gdb/signals.h&quot;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &quot;../include/libiberty.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/symcat.h&quot;</tt>
</itemize>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
<item><tt>#include &quot;ui-file.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;xm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/xm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &lt;mach/mach.h&gt;</tt>
<item><tt>#include &lt;signal.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;nm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/i386/nm-i386.h&quot;</tt>
<item><tt>#include &quot;macosx/nm-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;tm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/tm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;macosx/i386-macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/i386-macosx-thread-status.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &lt;mach/mach_types.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
<item><tt>#include &lt;inttypes.h&gt;</tt>
<item><tt>#include &lt;mach/mach_vm.h&gt;</tt>
<item><tt>#include &lt;mach/kmod.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;macosx/tm-i386-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;../include/fopen-bin.h&quot;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdlib.h&gt;</tt>
<item><tt>#include &quot;gdbarch.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_string.h&quot;</tt>
<itemize>
<item><tt>#include &lt;string.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;objfiles.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &lt;uuid/uuid.h&gt;</tt>
<item><tt>#include &quot;gdb_obstack.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/obstack.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;symfile.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;symtab.h&quot;</tt>
</itemize>
<item><tt>#include &quot;inlining.h&quot;</tt>
<itemize>
<item><tt>#include &lt;block.h&gt;</tt>
<item><tt>#include &quot;frame.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/floatformat.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;gdb_regex.h&quot;</tt>
<itemize>
<item><tt>#include &lt;regex.h&gt;</tt>
</itemize>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;gdbtypes.h&quot;</tt>
<item><tt>#include &quot;expression.h&quot;</tt>
<itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
</itemize>
</itemize>
</itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
</itemize>
<item><tt>#include &lt;sqlite3.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;buildsym.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;stabsread.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;../include/coff/sym.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;../include/coff/internal.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;../include/coff/ecoff.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;../bfd/libcoff.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/bfdlink.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;../bfd/libecoff.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/bfdlink.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;../include/elf/common.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;../include/elf/mips.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/elf/reloc-macros.h&quot;</tt>
</itemize>
</itemize>

<sect1>Typedef Elfalpha_External_Sym

<p>
<tt>typedef struct {...} Elfalpha_External_Sym</tt><newline>
<itemize>
<item><tt>struct</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>unsigned char st_name[4];</tt><newline>
<item><tt>unsigned char st_pad[4];</tt><newline>
<item><tt>unsigned char st_value[8];</tt><newline>
<item><tt>unsigned char st_size[4];</tt><newline>
<item><tt>unsigned char st_info[1];</tt><newline>
<item><tt>unsigned char st_other[1];</tt><newline>
<item><tt>unsigned char st_shndx[2];</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Typedef Elfalpha_External_Dyn

<p>
<tt>typedef struct {...} Elfalpha_External_Dyn</tt><newline>
<itemize>
<item><tt>struct</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>unsigned char d_tag[4];</tt><newline>
<item><tt>unsigned char d_pad[4];</tt><newline>
<item><tt>union</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>unsigned char d_ptr[8];</tt><newline>
<item><tt>unsigned char d_val[4];</tt><newline>
<item><tt>}</tt><newline>
</itemize>
<item><tt>d_un;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Type struct alphacoff_dynsecinfo

<p>
<itemize>
<item><tt>struct alphacoff_dynsecinfo</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>asection* sym_sect;</tt><newline>
<item><tt>asection* str_sect;</tt><newline>
<item><tt>asection* dyninfo_sect;</tt><newline>
<item><tt>asection* got_sect;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Local Variables

<p>
<bf>ecoff_sym_fns</bf><newline>
<tt>static struct sym_fns ecoff_sym_fns</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>_initialize_mipsread()
</itemize>
</descrip>

<sect1>Global Function _initialize_mipsread()

<p><tt>void _initialize_mipsread ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>mipsread.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>add_symtab_fns()  :  symfile.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>ecoff_sym_fns  :  mipsread.c
</itemize>
</descrip>

<sect1>Local Function alphacoff_locate_sections()

<p><tt>static void alphacoff_locate_sections ( bfd* ignore_abfd, asection* sectp, void* sip )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>strcmp()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>read_alphacoff_dynamic_symtab()  :  mipsread.c
</itemize>
</descrip>

<sect1>Local Function mipscoff_new_init()

<p><tt>static void mipscoff_new_init ( struct objfile* ignore )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>buildsym_new_init()  :  buildsym.c
<item>stabsread_new_init()  :  stabsread.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>mipsread.c
</itemize>
</descrip>

<sect1>Local Function mipscoff_symfile_finish()

<p><tt>static void mipscoff_symfile_finish ( struct objfile* objfile )</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>mipsread.c
</itemize>
</descrip>

<sect1>Local Function mipscoff_symfile_init()

<p><tt>static void mipscoff_symfile_init ( struct objfile* objfile )</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>mipsread.c
</itemize>
</descrip>

<sect1>Local Function mipscoff_symfile_read()

<p><tt>static void mipscoff_symfile_read ( struct objfile* objfile, int mainline )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>do_cleanups()  :  utils.c
<item>error()  :  utils.c
<item>init_minimal_symbol_collection()  :  minsyms.c
<item>install_minimal_symbols()  :  minsyms.c
<item>make_cleanup_discard_minimal_symbols()  :  minsyms.c
<item>mdebug_build_psymtabs()  :  mdebugread.c
<item>read_alphacoff_dynamic_symtab()  :  mipsread.c
<item>bfd_errmsg(), bfd_get_error()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>mipsread.c
</itemize>
</descrip>

<sect1>Local Function read_alphacoff_dynamic_symtab()

<p><tt>static void read_alphacoff_dynamic_symtab ( struct section_offsets* section_offsets, struct objfile* objfile )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>mipsread.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>do_cleanups()  :  utils.c
<item>executable_objfile()  :  objfiles.c
<item>internal_error()  :  utils.c
<item>make_cleanup()  :  utils.c
<item>prim_record_minimal_symbol()  :  minsyms.c
<item>xmalloc()  :  utils.c
<item>__builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk(), bfd_get_arch(), bfd_get_section_contents(), bfd_map_over_sections()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>mipscoff_symfile_read()  :  mipsread.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>alphacoff_locate_sections()  :  mipsread.c
<item>xfree()  :  utils.c
</itemize>
</descrip>

</article>
