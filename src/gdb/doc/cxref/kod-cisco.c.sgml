<!DOCTYPE LINUXDOC SYSTEM>

<!-- This SGML file generated by cxref (version 1.6e). -->
<!-- cxref program (c) Andrew M. Bishop 1995-2014. -->

<!--
Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF kod-cisco.c
CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
-->

<article>

<title>Cross reference for kod-cisco.c of gdb.cxref.
<author>cxref

<sect>File kod-cisco.c

<sect1>Included Files

<p>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<itemize>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
<item><tt>#include &lt;sys/time.h&gt;</tt>
<item><tt>#include &lt;time.h&gt;</tt>
<item><tt>#include &lt;sys/types.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
<item><tt>#include &lt;errno.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
<item><tt>#include &lt;regex.h&gt;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;unistd.h&gt;</tt>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;gdb_locale.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<item><tt>#include &lt;locale.h&gt;</tt>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../gdb/signals.h&quot;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &quot;../include/libiberty.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/symcat.h&quot;</tt>
</itemize>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
<item><tt>#include &quot;ui-file.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;xm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/xm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &lt;mach/mach.h&gt;</tt>
<item><tt>#include &lt;signal.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;nm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/i386/nm-i386.h&quot;</tt>
<item><tt>#include &quot;macosx/nm-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;tm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/tm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;macosx/i386-macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/i386-macosx-thread-status.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &lt;mach/mach_types.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
<item><tt>#include &lt;inttypes.h&gt;</tt>
<item><tt>#include &lt;mach/mach_vm.h&gt;</tt>
<item><tt>#include &lt;mach/kmod.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;macosx/tm-i386-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;../include/fopen-bin.h&quot;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdlib.h&gt;</tt>
<item><tt>#include &quot;gdbarch.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_string.h&quot;</tt>
<itemize>
<item><tt>#include &lt;string.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;kod.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &lt;stdlib.h&gt;</tt>
</itemize>

<sect1>Preprocessor definitions

<p>
<tt>#define PBUFSIZ 400</tt><newline>

<sect1>Local Variables

<p>
<bf>gdb_kod_display</bf><newline>
<tt>static void (*gdb_kod_display)(const char*)</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>bad_packet()
<item>cisco_kod_open()
<item>cisco_kod_request()
</itemize>
</descrip>
<p>
<bf>gdb_kod_query</bf><newline>
<tt>static void (*gdb_kod_query)(const char*,char*,int*)</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>cisco_kod_open()
<item>cisco_kod_request()
</itemize>
</descrip>

<sect1>Global Function cisco_kod_close()

<p><tt>void cisco_kod_close ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>kod.h
</itemize>
<tag>Used in:</tag>
<itemize>
<item>load_kod_library()  :  kod.c
</itemize>
</descrip>

<sect1>Global Function cisco_kod_open()

<p><tt>char* cisco_kod_open ( kod_display_callback_ftype* display_func, kod_query_callback_ftype* query_func )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>kod.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>strcmp(), xstrdup()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>load_kod_library()  :  kod.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_kod_display  :  kod-cisco.c
<item>gdb_kod_query  :  kod-cisco.c
</itemize>
</descrip>

<sect1>Global Function cisco_kod_request()

<p><tt>void cisco_kod_request ( const char* arg, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>kod.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>bad_packet()  :  kod-cisco.c
<item>xfree()  :  utils.c
<item>xrealloc()  :  utils.c
<item>__builtin___strcat_chk(), __builtin___strcpy_chk(), __builtin_object_size(), __inline_strcat_chk(), __inline_strcpy_chk(), strcmp(), strlen(), strncmp(), strtol(), xstrdup()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>load_kod_library()  :  kod.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_kod_display  :  kod-cisco.c
<item>gdb_kod_query  :  kod-cisco.c
</itemize>
</descrip>

<sect1>Local Function bad_packet()

<p><tt>static void bad_packet ( void )</tt><newline>
<descrip>
<tag>Called by:</tag>
<itemize>
<item>cisco_kod_request()  :  kod-cisco.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_kod_display  :  kod-cisco.c
</itemize>
</descrip>

</article>
