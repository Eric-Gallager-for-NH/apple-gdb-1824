{\rtf\ansi
\deff0
{\fonttbl
{\f0\froman Times New Roman;}
{\f1\fmodern Courier New;}
}
{\stylesheet
{\s0\f0\fs24 Normal;}
{\s1\f0\fs40\b\sb400\sa200\keepn\keep Heading 1;}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Heading 2;}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Heading 3;}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Heading 4;}
{\s5\f1\fs20\ql\sb50\sa50 Code;}
}
{\info{\comment
 This RTF file generated by cxref (version 1.6e).
 cxref program (c) Andrew M. Bishop 1995-2014.
 Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF cp-name-parser.c
 CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
}}
\paperw11880\paperh16848\margl1440\margr1440\margt1440\margb1440
\sectd\plain
\s0\f0\fs24
{\s1\f0\fs40\b\sb400\sa200\keepn\keep File cp-name-parser.c\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Included Files\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <stdlib.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <unistd.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../include/safe-ctype.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../include/demangle.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Preprocessor definitions\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYBISON 1\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYBISON_VERSION "3.3.2"\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYSKELETON_NAME "yacc.c"\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYPURE 0\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYPUSH 0\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYPULL 1\par}
{\s5\f1\fs20\ql\sb50\sa50 #define HAVE_DECL_BASENAME 0\par}
{\s5\f1\fs20\ql\sb50\sa50 #define d_grab\par}
{\s5\f1\fs20\ql\sb50\sa50 #define QUAL_CONST 1\par}
{\s5\f1\fs20\ql\sb50\sa50 #define QUAL_RESTRICT 2\par}
{\s5\f1\fs20\ql\sb50\sa50 #define QUAL_VOLATILE 4\par}
{\s5\f1\fs20\ql\sb50\sa50 #define INT_CHAR\par}
{\s5\f1\fs20\ql\sb50\sa50 #define INT_SHORT\par}
{\s5\f1\fs20\ql\sb50\sa50 #define INT_LONG\par}
{\s5\f1\fs20\ql\sb50\sa50 #define INT_LLONG\par}
{\s5\f1\fs20\ql\sb50\sa50 #define INT_SIGNED\par}
{\s5\f1\fs20\ql\sb50\sa50 #define INT_UNSIGNED\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yymaxdepth cpname_maxdepth\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yyparse cpname_parse\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yylex cpname_lex\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yyerror cpname_error\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yylval cpname_lval\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yychar cpname_char\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yydebug cpname_debug\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yypact cpname_pact\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yyr1 cpname_r1\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yyr2 cpname_r2\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yydef cpname_def\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yychk cpname_chk\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yypgo cpname_pgo\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yyact cpname_act\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yyexca cpname_exca\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yyerrflag cpname_errflag\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yynerrs cpname_nerrs\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yyps cpname_ps\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yypv cpname_pv\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yys cpname_s\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yy_yys cpname_yys\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yystate cpname_state\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yytmp cpname_tmp\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yyv cpname_v\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yy_yyv cpname_yyv\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yyval cpname_val\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yylloc cpname_lloc\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yyreds cpname_reds\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yytoks cpname_toks\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yyname cpname_name\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yyrule cpname_rule\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yylhs cpname_yylhs\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yylen cpname_yylen\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yydefred cpname_yydefred\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yydgoto cpname_yydgoto\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yysindex cpname_yysindex\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yyrindex cpname_yyrindex\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yygindex cpname_yygindex\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yytable cpname_yytable\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yycheck cpname_yycheck\par}
{\s5\f1\fs20\ql\sb50\sa50 #define d_left( dc )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define d_right( dc )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YY_NULLPTR\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYERROR_VERBOSE 0\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YY_YY_Y_TAB_H_INCLUDED\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYDEBUG 1\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYTOKENTYPE\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYSTYPE_IS_TRIVIAL 1\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYSTYPE_IS_DECLARED 1\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYSIZE_T __SIZE_TYPE__\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYSIZE_MAXIMUM\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YY_( Msgid )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YY_ATTRIBUTE( Spec )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YY_ATTRIBUTE_PURE\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YY_ATTRIBUTE_UNUSED\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYUSE( E )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YY_INITIAL_VALUE( Value )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YY_IGNORE_MAYBE_UNINITIALIZED_END\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYSTACK_ALLOC YYMALLOC\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYSTACK_FREE YYFREE\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYMALLOC xmalloc\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYFREE xfree\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYSTACK_GAP_MAXIMUM\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYSTACK_BYTES( N )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYCOPY_NEEDED 1\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYSTACK_RELOCATE( Stack_alloc, Stack )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYCOPY( Dst, Src, Count )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYFINAL 85\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYLAST 1165\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYNTOKENS 76\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYNNTS 40\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYNRULES 195\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYNSTATES 330\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYUNDEFTOK 2\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYMAXUTOK 308\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYTRANSLATE( YYX )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYPACT_NINF -204\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yypact_value_is_default( Yystate )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYTABLE_NINF -1\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yytable_value_is_error( Yytable_value )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yyerrok\par}
{\s5\f1\fs20\ql\sb50\sa50 #define yyclearin\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYEMPTY -2\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYEOF 0\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYACCEPT\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYABORT\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYERROR\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYRECOVERING\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYBACKUP( Token, Value )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYTERROR 1\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYERRCODE 256\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYFPRINTF fprintf\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYDPRINTF( Args )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YY_LOCATION_PRINT( File, Loc )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YY_SYMBOL_PRINT( Title, Type, Value, Location )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YY_STACK_PRINT( Bottom, Top )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YY_REDUCE_PRINT( Rule )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYINITDEPTH 200\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYMAXDEPTH 10000\par}
{\s5\f1\fs20\ql\sb50\sa50 #define YYPOPSTACK( N )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define HANDLE_QUAL( TYPE, MTYPE, QUAL )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define HANDLE_SPECIAL( string, comp )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define HANDLE_TOKEN2( string, token )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define HANDLE_TOKEN3( string, token )\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Type definitions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct demangle_info\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct demangle_info}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int used;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct demangle_component comps[1];}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type enum yytokentype\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 enum yytokentype}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 INT;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 FLOAT;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 NAME;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 STRUCT;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 CLASS;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 UNION;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 ENUM;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 SIZEOF;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 UNSIGNED;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 COLONCOLON;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 TEMPLATE;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 ERROR;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 NEW;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 DELETE;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 OPERATOR;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 STATIC_CAST;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 REINTERPRET_CAST;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 DYNAMIC_CAST;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 SIGNED_KEYWORD;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 LONG;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 SHORT;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 INT_KEYWORD;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 CONST_KEYWORD;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 VOLATILE_KEYWORD;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 DOUBLE_KEYWORD;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 BOOL;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 ELLIPSIS;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 RESTRICT;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 VOID;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 FLOAT_KEYWORD;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 CHAR;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 WCHAR_T;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 ASSIGN_MODIFY;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 TRUEKEYWORD;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 FALSEKEYWORD;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 DEMANGLER_SPECIAL;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 CONSTRUCTION_VTABLE;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 CONSTRUCTION_IN;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 GLOBAL;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 OROR;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 ANDAND;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 EQUAL;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 NOTEQUAL;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 LEQ;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 GEQ;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 LSH;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 RSH;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 UNARY;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 INCREMENT;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 DECREMENT;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 ARROW;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct nested\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct nested}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct demangle_component* comp;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct demangle_component** last;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type union YYSTYPE\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 union YYSTYPE}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct demangle_component* comp;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct nested}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
		{\s5\f1\fs20\ql\sb50\sa50 struct demangle_component* comp;}\cell\cell\row
		{\s5\f1\fs20\ql\sb50\sa50 struct demangle_component** last;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 nested;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
		{\s5\f1\fs20\ql\sb50\sa50 struct demangle_component* comp;}\cell\cell\row
		{\s5\f1\fs20\ql\sb50\sa50 struct demangle_component* last;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 nested1;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
		{\s5\f1\fs20\ql\sb50\sa50 struct demangle_component* comp;}\cell\cell\row
		{\s5\f1\fs20\ql\sb50\sa50 struct demangle_component** last;}\cell\cell\row
		{\s5\f1\fs20\ql\sb50\sa50 struct nested fn;}\cell\cell\row
		{\s5\f1\fs20\ql\sb50\sa50 struct demangle_component* start;}\cell\cell\row
		{\s5\f1\fs20\ql\sb50\sa50 int fold_flag;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 abstract;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int lval;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
		{\s5\f1\fs20\ql\sb50\sa50 int val;}\cell\cell\row
		{\s5\f1\fs20\ql\sb50\sa50 struct demangle_component* type;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 typed_val_int;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 const char* opname;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Typedef YYSTYPE\par}
{\s5\f1\fs20\ql\sb50\sa50 typedef union YYSTYPE YYSTYPE\par}
See:	Type union YYSTYPE\par
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type enum demangle_component_type_extensions\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 enum demangle_component_type_extensions}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 GLOBAL_CONSTRUCTORS;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 GLOBAL_DESTRUCTORS;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Typedef yytype_uint8\par}
{\s5\f1\fs20\ql\sb50\sa50 typedef unsigned char yytype_uint8\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Typedef yytype_int8\par}
{\s5\f1\fs20\ql\sb50\sa50 typedef signed char yytype_int8\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Typedef yytype_uint16\par}
{\s5\f1\fs20\ql\sb50\sa50 typedef unsigned short yytype_uint16\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Typedef yytype_int16\par}
{\s5\f1\fs20\ql\sb50\sa50 typedef short yytype_int16\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type union yyalloc\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 union yyalloc}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 yytype_int16 yyss_alloc;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 YYSTYPE yyvs_alloc;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Variables\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable cpname_debug\par}
{\s5\f1\fs20\ql\sb50\sa50 int cpname_debug\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell cp-name-parser.c\cell\cell\row
Used in:\cell cpname_parse()\cell cp-name-parser.c\cell\row
\cell yydestruct()\cell cp-name-parser.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable cpname_lval\par}
{\s5\f1\fs20\ql\sb50\sa50 YYSTYPE cpname_lval\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell cp-name-parser.c\cell\cell\row
Used in:\cell cpname_lex()\cell cp-name-parser.c\cell\row
\cell cpname_parse()\cell cp-name-parser.c\cell\row
\cell parse_number()\cell cp-name-parser.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable cpname_char\par}
{\s5\f1\fs20\ql\sb50\sa50 int cpname_char\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell cp-name-parser.c\cell\cell\row
Used in:\cell cpname_parse()\cell cp-name-parser.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable cpname_nerrs\par}
{\s5\f1\fs20\ql\sb50\sa50 int cpname_nerrs\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell cp-name-parser.c\cell\cell\row
Used in:\cell cpname_parse()\cell cp-name-parser.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable lexptr\par}
{\s5\f1\fs20\ql\sb50\sa50 static const char* lexptr\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell ada_error()\cell\cell\row
\cell ada_lex()\cell\cell\row
\cell c_error()\cell\cell\row
\cell c_lex()\cell\cell\row
\cell cp_demangled_name_to_comp()\cell\cell\row
\cell cpname_lex()\cell\cell\row
\cell f_error()\cell\cell\row
\cell f_lex()\cell\cell\row
\cell finished_macro_expansion()\cell\cell\row
\cell java_error()\cell\cell\row
\cell java_lex()\cell\cell\row
\cell m2_error()\cell\cell\row
\cell m2_lex()\cell\cell\row
\cell match_string_literal()\cell\cell\row
\cell objc_error()\cell\cell\row
\cell objc_lex()\cell\cell\row
\cell parse_exp_in_context()\cell\cell\row
\cell parse_number()\cell\cell\row
\cell pascal_error()\cell\cell\row
\cell pascal_lex()\cell\cell\row
\cell scan_macro_expansion()\cell\cell\row
\cell scm_lreadparen()\cell\cell\row
\cell scm_lreadr()\cell\cell\row
\cell scm_parse()\cell\cell\row
\cell scm_read_token()\cell\cell\row
\cell scm_skip_ws()\cell\cell\row
\cell yy_get_next_buffer()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable prev_lexptr\par}
{\s5\f1\fs20\ql\sb50\sa50 static const char* prev_lexptr\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell c_error()\cell\cell\row
\cell c_lex()\cell\cell\row
\cell cp_demangled_name_to_comp()\cell\cell\row
\cell cpname_error()\cell\cell\row
\cell cpname_lex()\cell\cell\row
\cell f_error()\cell\cell\row
\cell f_lex()\cell\cell\row
\cell java_error()\cell\cell\row
\cell java_lex()\cell\cell\row
\cell m2_error()\cell\cell\row
\cell m2_lex()\cell\cell\row
\cell parse_exp_in_context()\cell\cell\row
\cell pascal_error()\cell\cell\row
\cell pascal_lex()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable error_lexptr\par}
{\s5\f1\fs20\ql\sb50\sa50 static const char* error_lexptr\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell cp_demangled_name_to_comp()\cell\cell\row
\cell cpname_error()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable global_errmsg\par}
{\s5\f1\fs20\ql\sb50\sa50 static const char* global_errmsg\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell cp_demangled_name_to_comp()\cell\cell\row
\cell cpname_error()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable demangle_info\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct demangle_info* demangle_info\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell cp_demangled_name_to_comp()\cell\cell\row
\cell fill_comp()\cell\cell\row
\cell make_builtin_type()\cell\cell\row
\cell make_dtor()\cell\cell\row
\cell make_empty()\cell\cell\row
\cell make_name()\cell\cell\row
\cell make_operator()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable global_result\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct demangle_component* global_result\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell cp_demangled_name_to_comp()\cell\cell\row
\cell cpname_parse()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable yytranslate\par}
{\s5\f1\fs20\ql\sb50\sa50 static const yytype_uint8 yytranslate[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell cpname_parse()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable yyrline\par}
{\s5\f1\fs20\ql\sb50\sa50 static const yytype_uint16 yyrline[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell yy_reduce_print()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable yytname\par}
{\s5\f1\fs20\ql\sb50\sa50 static const char* const yytname[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell yy_symbol_print()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable cpname_pact\par}
{\s5\f1\fs20\ql\sb50\sa50 static const yytype_int16 cpname_pact[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell cpname_parse()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable yydefact\par}
{\s5\f1\fs20\ql\sb50\sa50 static const yytype_uint8 yydefact[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell cpname_parse()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable yypgoto\par}
{\s5\f1\fs20\ql\sb50\sa50 static const yytype_int16 yypgoto[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell cpname_parse()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable yydefgoto\par}
{\s5\f1\fs20\ql\sb50\sa50 static const yytype_int16 yydefgoto[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell cpname_parse()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable cpname_yytable\par}
{\s5\f1\fs20\ql\sb50\sa50 static const yytype_uint16 cpname_yytable[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell cpname_parse()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable cpname_yycheck\par}
{\s5\f1\fs20\ql\sb50\sa50 static const yytype_int16 cpname_yycheck[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell cpname_parse()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable yystos\par}
{\s5\f1\fs20\ql\sb50\sa50 static const yytype_uint8 yystos[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell cpname_parse()\cell\cell\row
\cell yy_reduce_print()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable cpname_r1\par}
{\s5\f1\fs20\ql\sb50\sa50 static const yytype_uint8 cpname_r1[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell cpname_parse()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable cpname_r2\par}
{\s5\f1\fs20\ql\sb50\sa50 static const yytype_uint8 cpname_r2[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell cpname_parse()\cell\cell\row
\cell yy_reduce_print()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable backslashable\par}
{\s5\f1\fs20\ql\sb50\sa50 static char backslashable[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell c_parse_backslash()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable represented\par}
{\s5\f1\fs20\ql\sb50\sa50 static char represented[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell c_parse_backslash()\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Functions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function cp_comp_to_string()\par}
{\s5\f1\fs20\ql\sb50\sa50 char* cp_comp_to_string ( struct demangle_component* result, int estimated_len )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cp-name-parser.c\cell\cell\row
Calls: \cell xfree()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  __builtin___strcat_chk(), __builtin___strcpy_chk(), __builtin_object_size(), __inline_strcat_chk(), __inline_strcpy_chk(), cplus_demangle_print(), strlen()\cell\cell\row
Called by:\cell cp_canonicalize_string()\cell cp-support.c\cell\row
\cell cp_class_name_from_physname()\cell cp-support.c\cell\row
\cell cp_func_name()\cell cp-support.c\cell\row
\cell method_name_from_physname()\cell cp-support.c\cell\row
\cell remove_params()\cell cp-support.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function cp_demangled_name_to_comp()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct demangle_component* cp_demangled_name_to_comp ( const char* demangled_name, void** memory, const char** errmsg )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cp-name-parser.c\cell\cell\row
Calls: \cell allocate_info()\cell cp-name-parser.c\cell\row
\cell cpname_parse()\cell cp-name-parser.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell  __builtin___snprintf_chk(), __builtin___strcat_chk(), __builtin_object_size(), __inline_strcat_chk(), strlen()\cell\cell\row
Called by:\cell cp_canonicalize_string()\cell cp-support.c\cell\row
\cell cp_func_name()\cell cp-support.c\cell\row
\cell mangled_name_to_comp()\cell cp-support.c\cell\row
\cell remove_params()\cell cp-support.c\cell\row
Refs Var:\cell demangle_info\cell cp-name-parser.c\cell\row
\cell error_lexptr\cell cp-name-parser.c\cell\row
\cell global_errmsg\cell cp-name-parser.c\cell\row
\cell global_result\cell cp-name-parser.c\cell\row
\cell lexptr\cell cp-name-parser.c\cell\row
\cell prev_lexptr\cell cp-name-parser.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function cpname_parse()\par}
{\s5\f1\fs20\ql\sb50\sa50 int cpname_parse ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cp-name-parser.c\cell\cell\row
Calls: \cell cpname_error()\cell cp-name-parser.c\cell\row
\cell cpname_lex()\cell cp-name-parser.c\cell\row
\cell d_binary()\cell cp-name-parser.c\cell\row
\cell d_int_type()\cell cp-name-parser.c\cell\row
\cell d_qualify()\cell cp-name-parser.c\cell\row
\cell d_unary()\cell cp-name-parser.c\cell\row
\cell fill_comp()\cell cp-name-parser.c\cell\row
\cell make_builtin_type()\cell cp-name-parser.c\cell\row
\cell make_dtor()\cell cp-name-parser.c\cell\row
\cell make_empty()\cell cp-name-parser.c\cell\row
\cell make_name()\cell cp-name-parser.c\cell\row
\cell make_operator()\cell cp-name-parser.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell yy_reduce_print()\cell cp-name-parser.c\cell\row
\cell yy_stack_print()\cell cp-name-parser.c\cell\row
\cell yy_symbol_print()\cell cp-name-parser.c\cell\row
\cell yydestruct()\cell cp-name-parser.c\cell\row
\cell  __builtin_memcpy(), fprintf()\cell\cell\row
Called by:\cell cp_demangled_name_to_comp()\cell cp-name-parser.c\cell\row
Refs Var:\cell cpname_char\cell cp-name-parser.c\cell\row
\cell cpname_debug\cell cp-name-parser.c\cell\row
\cell cpname_lval\cell cp-name-parser.c\cell\row
\cell cpname_nerrs\cell cp-name-parser.c\cell\row
\cell cpname_pact\cell cp-name-parser.c\cell\row
\cell cpname_r1\cell cp-name-parser.c\cell\row
\cell cpname_r2\cell cp-name-parser.c\cell\row
\cell cpname_yycheck\cell cp-name-parser.c\cell\row
\cell cpname_yytable\cell cp-name-parser.c\cell\row
\cell global_result\cell cp-name-parser.c\cell\row
\cell yydefact\cell cp-name-parser.c\cell\row
\cell yydefgoto\cell cp-name-parser.c\cell\row
\cell yypgoto\cell cp-name-parser.c\cell\row
\cell yystos\cell cp-name-parser.c\cell\row
\cell yytranslate\cell cp-name-parser.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function d_qualify()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct demangle_component* d_qualify ( struct demangle_component* lhs, int qualifiers, int is_method )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cp-name-parser.c\cell\cell\row
Calls: \cell fill_comp()\cell cp-name-parser.c\cell\row
Called by:\cell cpname_parse()\cell cp-name-parser.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function allocate_info()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct demangle_info* allocate_info ( int comps )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell xmalloc()\cell utils.c\cell\row
Called by:\cell cp_demangled_name_to_comp()\cell cp-name-parser.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function c_parse_backslash()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int c_parse_backslash ( int host_char, int* target_char )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell  strchr()\cell\cell\row
Called by:\cell parse_escape()\cell cp-name-parser.c\cell\row
Refs Var:\cell backslashable\cell cp-name-parser.c\cell\row
\cell represented\cell cp-name-parser.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function cpname_error()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void cpname_error ( const char* msg )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cp-name-parser.c\cell\cell\row
Called by:\cell cpname_lex()\cell cp-name-parser.c\cell\row
\cell cpname_parse()\cell cp-name-parser.c\cell\row
Refs Var:\cell error_lexptr\cell cp-name-parser.c\cell\row
\cell global_errmsg\cell cp-name-parser.c\cell\row
\cell prev_lexptr\cell cp-name-parser.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function cpname_lex()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int cpname_lex ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cp-name-parser.c\cell\cell\row
Calls: \cell cpname_error()\cell cp-name-parser.c\cell\row
\cell fill_comp()\cell cp-name-parser.c\cell\row
\cell make_builtin_type()\cell cp-name-parser.c\cell\row
\cell make_name()\cell cp-name-parser.c\cell\row
\cell parse_escape()\cell cp-name-parser.c\cell\row
\cell parse_number()\cell cp-name-parser.c\cell\row
\cell symbol_end()\cell cp-name-parser.c\cell\row
\cell  __builtin___memcpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_memcpy_chk(), strncmp()\cell\cell\row
Called by:\cell cpname_parse()\cell cp-name-parser.c\cell\row
Refs Var:\cell cpname_lval\cell cp-name-parser.c\cell\row
\cell lexptr\cell cp-name-parser.c\cell\row
\cell prev_lexptr\cell cp-name-parser.c\cell\row
\cell  _sch_istable\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function d_binary()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct demangle_component* d_binary ( const char* name, struct demangle_component* lhs, struct demangle_component* rhs )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cp-name-parser.c\cell\cell\row
Calls: \cell fill_comp()\cell cp-name-parser.c\cell\row
\cell make_operator()\cell cp-name-parser.c\cell\row
Called by:\cell cpname_parse()\cell cp-name-parser.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function d_int_type()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct demangle_component* d_int_type ( int flags )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cp-name-parser.c\cell\cell\row
Calls: \cell make_builtin_type()\cell cp-name-parser.c\cell\row
Called by:\cell cpname_parse()\cell cp-name-parser.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function d_unary()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct demangle_component* d_unary ( const char* name, struct demangle_component* lhs )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cp-name-parser.c\cell\cell\row
Calls: \cell fill_comp()\cell cp-name-parser.c\cell\row
\cell make_operator()\cell cp-name-parser.c\cell\row
Called by:\cell cpname_parse()\cell cp-name-parser.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function fill_comp()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct demangle_component* fill_comp ( enum demangle_component_type d_type, struct demangle_component* lhs, struct demangle_component* rhs )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell  cplus_demangle_fill_component()\cell\cell\row
Called by:\cell cpname_lex()\cell cp-name-parser.c\cell\row
\cell cpname_parse()\cell cp-name-parser.c\cell\row
\cell d_binary()\cell cp-name-parser.c\cell\row
\cell d_qualify()\cell cp-name-parser.c\cell\row
\cell d_unary()\cell cp-name-parser.c\cell\row
\cell parse_number()\cell cp-name-parser.c\cell\row
Refs Var:\cell demangle_info\cell cp-name-parser.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function make_builtin_type()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct demangle_component* make_builtin_type ( const char* name )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell  cplus_demangle_fill_builtin_type()\cell\cell\row
Called by:\cell cpname_lex()\cell cp-name-parser.c\cell\row
\cell cpname_parse()\cell cp-name-parser.c\cell\row
\cell d_int_type()\cell cp-name-parser.c\cell\row
\cell parse_number()\cell cp-name-parser.c\cell\row
Refs Var:\cell demangle_info\cell cp-name-parser.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function make_dtor()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct demangle_component* make_dtor ( enum gnu_v3_dtor_kinds kind, struct demangle_component* name )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell  cplus_demangle_fill_dtor()\cell\cell\row
Called by:\cell cpname_parse()\cell cp-name-parser.c\cell\row
Refs Var:\cell demangle_info\cell cp-name-parser.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function make_empty()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct demangle_component* make_empty ( enum demangle_component_type d_type )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Called by:\cell cpname_parse()\cell cp-name-parser.c\cell\row
Refs Var:\cell demangle_info\cell cp-name-parser.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function make_name()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct demangle_component* make_name ( const char* name, int len )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell  cplus_demangle_fill_name()\cell\cell\row
Called by:\cell cpname_lex()\cell cp-name-parser.c\cell\row
\cell cpname_parse()\cell cp-name-parser.c\cell\row
\cell parse_number()\cell cp-name-parser.c\cell\row
Refs Var:\cell demangle_info\cell cp-name-parser.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function make_operator()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct demangle_component* make_operator ( const char* name, int args )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell  cplus_demangle_fill_operator()\cell\cell\row
Called by:\cell cpname_parse()\cell cp-name-parser.c\cell\row
\cell d_binary()\cell cp-name-parser.c\cell\row
\cell d_unary()\cell cp-name-parser.c\cell\row
Refs Var:\cell demangle_info\cell cp-name-parser.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function parse_escape()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int parse_escape ( const char** string_ptr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell c_parse_backslash()\cell cp-name-parser.c\cell\row
\cell parse_escape()\cell cp-name-parser.c\cell\row
Called by:\cell c_lex()\cell c-exp.c\cell\row
\cell cpname_lex()\cell cp-name-parser.c\cell\row
\cell get_character_constant()\cell macroexp.c\cell\row
\cell get_string_literal()\cell macroexp.c\cell\row
\cell java_lex()\cell jv-exp.c\cell\row
\cell objc_lex()\cell objc-exp.c\cell\row
\cell parse_escape()\cell cp-name-parser.c\cell\row
\cell pascal_lex()\cell p-exp.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function parse_number()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int parse_number ( const char* p, int len, int parsed_float )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell fill_comp()\cell cp-name-parser.c\cell\row
\cell make_builtin_type()\cell cp-name-parser.c\cell\row
\cell make_name()\cell cp-name-parser.c\cell\row
Called by:\cell cpname_lex()\cell cp-name-parser.c\cell\row
Refs Var:\cell cpname_lval\cell cp-name-parser.c\cell\row
\cell  _sch_istable, _sch_tolower\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function symbol_end()\par}
{\s5\f1\fs20\ql\sb50\sa50 static const char* symbol_end ( const char* lexptr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Called by:\cell cpname_lex()\cell cp-name-parser.c\cell\row
Refs Var:\cell  _sch_istable\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function yy_reduce_print()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void yy_reduce_print ( yytype_int16* yyssp, YYSTYPE* yyvsp, int cpname_rule )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell yy_symbol_print()\cell cp-name-parser.c\cell\row
\cell  fprintf()\cell\cell\row
Called by:\cell cpname_parse()\cell cp-name-parser.c\cell\row
Refs Var:\cell cpname_r2\cell cp-name-parser.c\cell\row
\cell yyrline\cell cp-name-parser.c\cell\row
\cell yystos\cell cp-name-parser.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function yy_stack_print()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void yy_stack_print ( yytype_int16* yybottom, yytype_int16* yytop )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell  fprintf()\cell\cell\row
Called by:\cell cpname_parse()\cell cp-name-parser.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function yy_symbol_print()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void yy_symbol_print ( FILE* yyo, int yytype, YYSTYPE const* const yyvaluep )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell yy_symbol_value_print()\cell cp-name-parser.c\cell\row
\cell  fprintf()\cell\cell\row
Called by:\cell cpname_parse()\cell cp-name-parser.c\cell\row
\cell yy_reduce_print()\cell cp-name-parser.c\cell\row
\cell yydestruct()\cell cp-name-parser.c\cell\row
Refs Var:\cell yytname\cell cp-name-parser.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function yy_symbol_value_print()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void yy_symbol_value_print ( FILE* yyo, int yytype, YYSTYPE const* const yyvaluep )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Called by:\cell yy_symbol_print()\cell cp-name-parser.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function yydestruct()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void yydestruct ( const char* yymsg, int yytype, YYSTYPE* yyvaluep )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell yy_symbol_print()\cell cp-name-parser.c\cell\row
\cell  fprintf()\cell\cell\row
Called by:\cell cpname_parse()\cell cp-name-parser.c\cell\row
Refs Var:\cell cpname_debug\cell cp-name-parser.c\cell\row
\intbl0
}
