<!DOCTYPE LINUXDOC SYSTEM>

<!-- This SGML file generated by cxref (version 1.6e). -->
<!-- cxref program (c) Andrew M. Bishop 1995-2014. -->

<!--
Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF reggroups.c
CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
-->

<article>

<title>Cross reference for reggroups.c of gdb.cxref.
<author>cxref

<sect>File reggroups.c
<descrip>
<tag>References Variables:</tag>
<itemize>
<item>all_group  :  reggroups.c
<item>float_group  :  reggroups.c
<item>general_group  :  reggroups.c
<item>restore_group  :  reggroups.c
<item>save_group  :  reggroups.c
<item>system_group  :  reggroups.c
<item>vector_group  :  reggroups.c
</itemize>
</descrip>

<sect1>Included Files

<p>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<itemize>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
<item><tt>#include &lt;sys/time.h&gt;</tt>
<item><tt>#include &lt;time.h&gt;</tt>
<item><tt>#include &lt;sys/types.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
<item><tt>#include &lt;errno.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
<item><tt>#include &lt;regex.h&gt;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;unistd.h&gt;</tt>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;gdb_locale.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<item><tt>#include &lt;locale.h&gt;</tt>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../gdb/signals.h&quot;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &quot;../include/libiberty.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/symcat.h&quot;</tt>
</itemize>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
<item><tt>#include &quot;ui-file.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;xm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/xm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &lt;mach/mach.h&gt;</tt>
<item><tt>#include &lt;signal.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;nm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/i386/nm-i386.h&quot;</tt>
<item><tt>#include &quot;macosx/nm-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;tm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/tm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;macosx/i386-macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/i386-macosx-thread-status.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &lt;mach/mach_types.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
<item><tt>#include &lt;inttypes.h&gt;</tt>
<item><tt>#include &lt;mach/mach_vm.h&gt;</tt>
<item><tt>#include &lt;mach/kmod.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;macosx/tm-i386-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;../include/fopen-bin.h&quot;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdlib.h&gt;</tt>
<item><tt>#include &quot;gdbarch.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;reggroups.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdbtypes.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_assert.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;regcache.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;command.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;gdbcmd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;command.h&quot;</tt>
<item><tt>#include &quot;ui-out.h&quot;</tt>
</itemize>
</itemize>

<sect1>Type struct reggroup

<p>
<itemize>
<item><tt>struct reggroup</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>const char* name;</tt><newline>
<item><tt>enum reggroup_type type;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Type struct reggroup_el

<p>
<itemize>
<item><tt>struct reggroup_el</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>struct reggroup* group;</tt><newline>
<item><tt>struct reggroup_el* next;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Type struct reggroups

<p>
<itemize>
<item><tt>struct reggroups</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>struct reggroup_el* first;</tt><newline>
<item><tt>struct reggroup_el** last;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Global Variable general_reggroup

<p>
<tt>struct reggroup* const general_reggroup</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>gdbarch.c
<item>infcmd.c
<item>regcache.c
<item>reggroups.c
<item>stack.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_reggroup()  :  reggroups.c
<item>default_print_registers_info()  :  infcmd.c
<item>default_register_reggroup_p()  :  reggroups.c
</itemize>
</descrip>

<sect1>Global Variable float_reggroup

<p>
<tt>struct reggroup* const float_reggroup</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>gdbarch.c
<item>infcmd.c
<item>regcache.c
<item>reggroups.c
<item>stack.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_reggroup()  :  reggroups.c
<item>default_register_reggroup_p()  :  reggroups.c
<item>print_float_info()  :  infcmd.c
</itemize>
</descrip>

<sect1>Global Variable system_reggroup

<p>
<tt>struct reggroup* const system_reggroup</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>gdbarch.c
<item>infcmd.c
<item>regcache.c
<item>reggroups.c
<item>stack.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_reggroup()  :  reggroups.c
</itemize>
</descrip>

<sect1>Global Variable vector_reggroup

<p>
<tt>struct reggroup* const vector_reggroup</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>gdbarch.c
<item>infcmd.c
<item>regcache.c
<item>reggroups.c
<item>stack.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_reggroup()  :  reggroups.c
<item>default_register_reggroup_p()  :  reggroups.c
<item>print_vector_info()  :  infcmd.c
</itemize>
</descrip>

<sect1>Global Variable all_reggroup

<p>
<tt>struct reggroup* const all_reggroup</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>gdbarch.c
<item>infcmd.c
<item>regcache.c
<item>reggroups.c
<item>stack.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_reggroup()  :  reggroups.c
<item>default_print_registers_info()  :  infcmd.c
<item>default_register_reggroup_p()  :  reggroups.c
<item>frame_info()  :  stack.c
</itemize>
</descrip>

<sect1>Global Variable save_reggroup

<p>
<tt>struct reggroup* const save_reggroup</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>gdbarch.c
<item>infcmd.c
<item>regcache.c
<item>reggroups.c
<item>stack.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_reggroup()  :  reggroups.c
<item>default_register_reggroup_p()  :  reggroups.c
<item>regcache_save()  :  regcache.c
</itemize>
</descrip>

<sect1>Global Variable restore_reggroup

<p>
<tt>struct reggroup* const restore_reggroup</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>gdbarch.c
<item>infcmd.c
<item>regcache.c
<item>reggroups.c
<item>stack.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_reggroup()  :  reggroups.c
<item>default_register_reggroup_p()  :  reggroups.c
<item>regcache_restore()  :  regcache.c
</itemize>
</descrip>

<sect1>Local Variables

<p>
<bf>reggroups_data</bf><newline>
<tt>static struct gdbarch_data* reggroups_data</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>_initialize_reggroup()
<item>reggroup_add()
<item>reggroup_next()
</itemize>
</descrip>
<p>
<bf>default_groups</bf><newline>
<tt>static struct reggroups default_groups</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>_initialize_reggroup()
<item>reggroup_next()
</itemize>
</descrip>
<p>
<bf>general_group</bf><newline>
<tt>static struct reggroup general_group</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>reggroups.c
</itemize>
</descrip>
<p>
<bf>float_group</bf><newline>
<tt>static struct reggroup float_group</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>reggroups.c
</itemize>
</descrip>
<p>
<bf>system_group</bf><newline>
<tt>static struct reggroup system_group</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>reggroups.c
</itemize>
</descrip>
<p>
<bf>vector_group</bf><newline>
<tt>static struct reggroup vector_group</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>reggroups.c
</itemize>
</descrip>
<p>
<bf>all_group</bf><newline>
<tt>static struct reggroup all_group</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>reggroups.c
</itemize>
</descrip>
<p>
<bf>save_group</bf><newline>
<tt>static struct reggroup save_group</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>reggroups.c
</itemize>
</descrip>
<p>
<bf>restore_group</bf><newline>
<tt>static struct reggroup restore_group</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>reggroups.c
</itemize>
</descrip>

<sect1>Global Function _initialize_reggroup()

<p><tt>void _initialize_reggroup ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>reggroups.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>add_group()  :  reggroups.c
<item>gdbarch_data_register_post_init()  :  gdbarch.c
<item>xmalloc()  :  utils.c
<item>add_cmd()
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>maintenance_print_reggroups()  :  reggroups.c
<item>reggroups_init()  :  reggroups.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>all_reggroup  :  reggroups.c
<item>default_groups  :  reggroups.c
<item>float_reggroup  :  reggroups.c
<item>general_reggroup  :  reggroups.c
<item>reggroups_data  :  reggroups.c
<item>restore_reggroup  :  reggroups.c
<item>save_reggroup  :  reggroups.c
<item>system_reggroup  :  reggroups.c
<item>vector_reggroup  :  reggroups.c
<item>maintenanceprintlist
</itemize>
</descrip>

<sect1>Global Function default_register_reggroup_p()

<p><tt>int default_register_reggroup_p ( struct gdbarch* gdbarch, int regnum, struct reggroup* group )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>reggroups.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>gdbarch_num_regs()  :  gdbarch.c
<item>gdbarch_register_name()  :  gdbarch.c
<item>register_type()  :  regcache.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>gdbarch.c
<item>gdbarch_alloc()  :  gdbarch.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>all_reggroup  :  reggroups.c
<item>current_gdbarch  :  gdbarch.c
<item>float_reggroup  :  reggroups.c
<item>general_reggroup  :  reggroups.c
<item>restore_reggroup  :  reggroups.c
<item>save_reggroup  :  reggroups.c
<item>vector_reggroup  :  reggroups.c
</itemize>
</descrip>

<sect1>Global Function reggroup_add()

<p><tt>void reggroup_add ( struct gdbarch* gdbarch, struct reggroup* group )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>reggroups.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>add_group()  :  reggroups.c
<item>deprecated_set_gdbarch_data()  :  gdbarch.c
<item>gdbarch_obstack_zalloc()  :  gdbarch.c
<item>new_gdbarch_data()  :  gdbarch.c
<item>reggroups_init()  :  reggroups.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>reggroups_data  :  reggroups.c
</itemize>
</descrip>

<sect1>Global Function reggroup_name()

<p><tt>const char* reggroup_name ( struct reggroup* group )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>reggroups.h
</itemize>
<tag>Called by:</tag>
<itemize>
<item>regcache_dump()  :  regcache.c
<item>reggroups_dump()  :  reggroups.c
<item>registers_info()  :  infcmd.c
</itemize>
</descrip>

<sect1>Global Function reggroup_new()

<p><tt>struct reggroup* reggroup_new ( const char* name, enum reggroup_type type )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>reggroups.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xmalloc()  :  utils.c
</itemize>
</descrip>

<sect1>Global Function reggroup_next()

<p><tt>struct reggroup* reggroup_next ( struct gdbarch* gdbarch, struct reggroup* last )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>reggroups.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
<item>new_gdbarch_data()  :  gdbarch.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>regcache_dump()  :  regcache.c
<item>reggroups_dump()  :  reggroups.c
<item>registers_info()  :  infcmd.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>default_groups  :  reggroups.c
<item>reggroups_data  :  reggroups.c
</itemize>
</descrip>

<sect1>Global Function reggroup_type()

<p><tt>enum reggroup_type reggroup_type ( struct reggroup* group )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>reggroups.h
</itemize>
<tag>Called by:</tag>
<itemize>
<item>reggroups_dump()  :  reggroups.c
</itemize>
</descrip>

<sect1>Local Function add_group()

<p><tt>static void add_group ( struct reggroups* groups, struct reggroup* group, struct reggroup_el* el )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>_initialize_reggroup()  :  reggroups.c
<item>reggroup_add()  :  reggroups.c
</itemize>
</descrip>

<sect1>Local Function maintenance_print_reggroups()

<p><tt>static void maintenance_print_reggroups ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>gdb_fopen()  :  ui-file.c
<item>perror_with_name()  :  utils.c
<item>reggroups_dump()  :  reggroups.c
<item>ui_file_delete()  :  ui-file.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_reggroup()  :  reggroups.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
<item>gdb_stdout  :  main.c
</itemize>
</descrip>

<sect1>Local Function reggroups_dump()

<p><tt>static void reggroups_dump ( struct gdbarch* gdbarch, struct ui_file* file )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>fprintf_unfiltered()  :  utils.c
<item>internal_error()  :  utils.c
<item>reggroup_name()  :  reggroups.c
<item>reggroup_next()  :  reggroups.c
<item>reggroup_type()  :  reggroups.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>maintenance_print_reggroups()  :  reggroups.c
</itemize>
</descrip>

<sect1>Local Function reggroups_init()

<p><tt>static void* reggroups_init ( struct gdbarch* gdbarch )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>gdbarch_obstack_zalloc()  :  gdbarch.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>reggroup_add()  :  reggroups.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_reggroup()  :  reggroups.c
</itemize>
</descrip>

</article>
