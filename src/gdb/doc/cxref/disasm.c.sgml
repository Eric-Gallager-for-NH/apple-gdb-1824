<!DOCTYPE LINUXDOC SYSTEM>

<!-- This SGML file generated by cxref (version 1.6e). -->
<!-- cxref program (c) Andrew M. Bishop 1995-2014. -->

<!--
Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF disasm.c
CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
-->

<article>

<title>Cross reference for disasm.c of gdb.cxref.
<author>cxref

<sect>File disasm.c

<sect1>Included Files

<p>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<itemize>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
<item><tt>#include &lt;sys/time.h&gt;</tt>
<item><tt>#include &lt;time.h&gt;</tt>
<item><tt>#include &lt;sys/types.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
<item><tt>#include &lt;errno.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
<item><tt>#include &lt;regex.h&gt;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;unistd.h&gt;</tt>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;gdb_locale.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<item><tt>#include &lt;locale.h&gt;</tt>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../gdb/signals.h&quot;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &quot;../include/libiberty.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/symcat.h&quot;</tt>
</itemize>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
<item><tt>#include &quot;ui-file.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;xm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/xm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &lt;mach/mach.h&gt;</tt>
<item><tt>#include &lt;signal.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;nm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/i386/nm-i386.h&quot;</tt>
<item><tt>#include &quot;macosx/nm-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;tm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/tm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;macosx/i386-macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/i386-macosx-thread-status.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &lt;mach/mach_types.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
<item><tt>#include &lt;inttypes.h&gt;</tt>
<item><tt>#include &lt;mach/mach_vm.h&gt;</tt>
<item><tt>#include &lt;mach/kmod.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;macosx/tm-i386-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;../include/fopen-bin.h&quot;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdlib.h&gt;</tt>
<item><tt>#include &quot;gdbarch.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;target.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;dcache.h&quot;</tt>
<item><tt>#include &quot;memattr.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/floatformat.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;gdb_regex.h&quot;</tt>
<itemize>
<item><tt>#include &lt;regex.h&gt;</tt>
</itemize>
<item><tt>#include &quot;frame.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
</itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;gdbtypes.h&quot;</tt>
<item><tt>#include &quot;expression.h&quot;</tt>
<itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
</itemize>
</itemize>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;value.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;ui-out.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_string.h&quot;</tt>
<itemize>
<item><tt>#include &lt;string.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;disasm.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdbcore.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;../include/dis-asm.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdio.h&gt;</tt>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_assert.h&quot;</tt>
</itemize>

<sect1>Type struct dis_line_entry

<p>
<itemize>
<item><tt>struct dis_line_entry</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>int line;</tt><newline>
<item><tt>CORE_ADDR start_pc;</tt><newline>
<item><tt>CORE_ADDR end_pc;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Global Function find_pc_offset()

<p><tt>int find_pc_offset ( CORE_ADDR start, CORE_ADDR* result, int offset, int funclimit, int peeklimit )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>disasm.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>do_cleanups()  :  utils.c
<item>find_pc_partial_function_no_inlined()  :  blockframe.c
<item>gdb_disassemble_info_null()  :  disasm.c
<item>gdbarch_instruction_length()  :  disasm.c
<item>gdbarch_print_insn()  :  gdbarch.c
<item>internal_error()  :  utils.c
<item>make_cleanup()  :  utils.c
<item>ui_out_is_mi_like_p()  :  ui-out.c
<item>xmalloc()  :  utils.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>xfree()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
<item>uiout  :  ui-out.c
</itemize>
</descrip>

<sect1>Global Function gdb_disassembly()

<p><tt>void gdb_disassembly ( struct ui_out* uiout, CORE_ADDR low, CORE_ADDR high, int mixed_source_and_assembly, int how_many )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>disasm.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>do_assembly_only()  :  disasm.c
<item>do_cleanups()  :  utils.c
<item>do_mixed_source_and_assembly()  :  disasm.c
<item>find_pc_symtab()  :  symtab.c
<item>gdb_disassemble_info()  :  disasm.c
<item>gdb_flush()  :  ui-file.c
<item>make_cleanup_ui_out_stream_delete()  :  ui-out.c
<item>ui_out_stream_new()  :  ui-out.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
<item>gdb_stdout  :  main.c
</itemize>
</descrip>

<sect1>Global Function gdb_print_insn()

<p><tt>int gdb_print_insn ( CORE_ADDR memaddr, struct ui_file* stream )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>disasm.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>do_cleanups()  :  utils.c
<item>gdb_disassemble_info()  :  disasm.c
<item>gdbarch_print_insn()  :  gdbarch.c
<item>make_cleanup_ui_out_stream_delete()  :  ui-out.c
<item>make_cleanup_ui_out_tuple_begin_end()  :  ui-out.c
<item>ui_file_rewind()  :  ui-file.c
<item>ui_out_field_stream()  :  ui-out.c
<item>ui_out_message()  :  ui-out.c
<item>ui_out_stream_new()  :  ui-out.c
<item>ui_out_text()  :  ui-out.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>print_formatted()  :  printcmd.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
<item>uiout  :  ui-out.c
</itemize>
</descrip>

<sect1>Local Function compare_lines()

<p><tt>static int compare_lines ( const void* mle1p, const void* mle2p )</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>do_mixed_source_and_assembly()  :  disasm.c
</itemize>
</descrip>

<sect1>Local Function dis_asm_memory_error()

<p><tt>static void dis_asm_memory_error ( int status, bfd_vma memaddr, struct disassemble_info* info )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>memory_error()  :  corefile.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>gdb_disassemble_info()  :  disasm.c
</itemize>
</descrip>

<sect1>Local Function dis_asm_print_address()

<p><tt>static void dis_asm_print_address ( bfd_vma addr, struct disassemble_info* info )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>print_address()  :  printcmd.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>gdb_disassemble_info()  :  disasm.c
</itemize>
</descrip>

<sect1>Local Function dis_asm_read_memory()

<p><tt>static int dis_asm_read_memory ( bfd_vma memaddr, gdb_byte* myaddr, unsigned int len, struct disassemble_info* info )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>target_read_memory()  :  target/target.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>gdb_disassemble_info()  :  disasm.c
</itemize>
</descrip>

<sect1>Local Function do_assembly_only()

<p><tt>static void do_assembly_only ( struct ui_out* uiout, struct disassemble_info* di, CORE_ADDR low, CORE_ADDR high, int how_many, struct ui_stream* stb )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>do_cleanups()  :  utils.c
<item>dump_insns()  :  disasm.c
<item>make_cleanup_ui_out_list_begin_end()  :  ui-out.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>gdb_disassembly()  :  disasm.c
</itemize>
</descrip>

<sect1>Local Function do_mixed_source_and_assembly()

<p><tt>static void do_mixed_source_and_assembly ( struct ui_out* uiout, struct disassemble_info* di, int nlines, struct linetable_entry* le, CORE_ADDR low, CORE_ADDR high, struct symtab* symtab, int how_many, struct ui_stream* stb )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>do_cleanups()  :  utils.c
<item>dump_insns()  :  disasm.c
<item>find_pc_line()  :  symtab.c
<item>make_cleanup()  :  utils.c
<item>make_cleanup_ui_out_list_begin_end()  :  ui-out.c
<item>make_cleanup_ui_out_tuple_begin_end()  :  ui-out.c
<item>print_source_lines()  :  source.c
<item>ui_out_text()  :  ui-out.c
<item>__builtin_alloca(), qsort()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>gdb_disassembly()  :  disasm.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>compare_lines()  :  disasm.c
<item>null_cleanup()  :  utils.c
</itemize>
</descrip>

<sect1>Local Function dump_insns()

<p><tt>static int dump_insns ( struct ui_out* uiout, struct disassemble_info* di, CORE_ADDR low, CORE_ADDR high, int how_many, struct ui_stream* stb )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>build_address_symbolic()  :  printcmd.c
<item>do_cleanups()  :  utils.c
<item>gdbarch_print_insn()  :  gdbarch.c
<item>make_cleanup_ui_out_tuple_begin_end()  :  ui-out.c
<item>quit()  :  utils.c
<item>ui_file_rewind()  :  ui-file.c
<item>ui_out_field_core_addr()  :  ui-out.c
<item>ui_out_field_int()  :  ui-out.c
<item>ui_out_field_stream()  :  ui-out.c
<item>ui_out_field_string()  :  ui-out.c
<item>ui_out_message()  :  ui-out.c
<item>ui_out_text()  :  ui-out.c
<item>warning()  :  utils.c
<item>xfree()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>do_assembly_only()  :  disasm.c
<item>do_mixed_source_and_assembly()  :  disasm.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
<item>quit_flag  :  utils.c
</itemize>
</descrip>

<sect1>Local Function fprintf_disasm()

<p><tt>static int fprintf_disasm ( void* stream, const char* format, ... )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>disasm.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>vfprintf_filtered()  :  utils.c
<item>__builtin_va_end(), __builtin_va_start()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>gdb_disassemble_info()  :  disasm.c
</itemize>
</descrip>

<sect1>Local Function gdb_disassemble_info()

<p><tt>static struct disassemble_info gdb_disassemble_info ( struct gdbarch* gdbarch, struct ui_file* file )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>gdbarch_bfd_arch_info()  :  gdbarch.c
<item>gdbarch_byte_order()  :  gdbarch.c
<item>disassemble_init_for_target(), init_disassemble_info()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>gdb_disassemble_info_null()  :  disasm.c
<item>gdb_disassembly()  :  disasm.c
<item>gdb_print_insn()  :  disasm.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>dis_asm_memory_error()  :  disasm.c
<item>dis_asm_print_address()  :  disasm.c
<item>dis_asm_read_memory()  :  disasm.c
<item>fprintf_disasm()  :  disasm.c
</itemize>
</descrip>

<sect1>Local Function gdb_disassemble_info_null()

<p><tt>static struct disassemble_info gdb_disassemble_info_null ( struct gdbarch* gdbarch )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>gdb_disassemble_info()  :  disasm.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>find_pc_offset()  :  disasm.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_null  :  main.c
</itemize>
</descrip>

<sect1>Local Function gdbarch_instruction_length()

<p><tt>static int gdbarch_instruction_length ( struct gdbarch* gdbarch )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>gdbarch_bfd_arch_info()  :  gdbarch.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>find_pc_offset()  :  disasm.c
</itemize>
</descrip>

</article>
