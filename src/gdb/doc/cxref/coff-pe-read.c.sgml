<!DOCTYPE LINUXDOC SYSTEM>

<!-- This SGML file generated by cxref (version 1.6e). -->
<!-- cxref program (c) Andrew M. Bishop 1995-2014. -->

<!--
Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF coff-pe-read.c
CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
-->

<article>

<title>Cross reference for coff-pe-read.c of gdb.cxref.
<author>cxref

<sect>File coff-pe-read.c

<sect1>Included Files

<p>
<itemize>
<item><tt>#include &quot;coff-pe-read.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/symcat.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<itemize>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
<item><tt>#include &lt;sys/time.h&gt;</tt>
<item><tt>#include &lt;time.h&gt;</tt>
<item><tt>#include &lt;sys/types.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
<item><tt>#include &lt;errno.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
<item><tt>#include &lt;regex.h&gt;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;unistd.h&gt;</tt>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;gdb_locale.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<item><tt>#include &lt;locale.h&gt;</tt>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../gdb/signals.h&quot;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &quot;../include/libiberty.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
<item><tt>#include &quot;ui-file.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;xm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/xm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &lt;mach/mach.h&gt;</tt>
<item><tt>#include &lt;signal.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;nm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/i386/nm-i386.h&quot;</tt>
<item><tt>#include &quot;macosx/nm-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;tm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/tm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;macosx/i386-macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/i386-macosx-thread-status.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &lt;mach/mach_types.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
<item><tt>#include &lt;inttypes.h&gt;</tt>
<item><tt>#include &lt;mach/mach_vm.h&gt;</tt>
<item><tt>#include &lt;mach/kmod.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;macosx/tm-i386-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;../include/fopen-bin.h&quot;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdlib.h&gt;</tt>
<item><tt>#include &quot;gdbarch.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;gdbtypes.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;symfile.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;symtab.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;objfiles.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &lt;uuid/uuid.h&gt;</tt>
<item><tt>#include &quot;gdb_obstack.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/obstack.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;symfile.h&quot;</tt>
<item><tt>#include &quot;inlining.h&quot;</tt>
<itemize>
<item><tt>#include &lt;block.h&gt;</tt>
<item><tt>#include &quot;frame.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/floatformat.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;gdb_regex.h&quot;</tt>
<itemize>
<item><tt>#include &lt;regex.h&gt;</tt>
</itemize>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;gdbtypes.h&quot;</tt>
<item><tt>#include &quot;expression.h&quot;</tt>
<itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
</itemize>
</itemize>
</itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
</itemize>
<item><tt>#include &lt;sqlite3.h&gt;</tt>
</itemize>
</itemize>

<sect1>Preprocessor definitions

<p>
<tt>#define PE_SECTION_INDEX_TEXT 0</tt><newline>
<p>
<tt>#define PE_SECTION_INDEX_DATA 1</tt><newline>
<p>
<tt>#define PE_SECTION_INDEX_BSS 2</tt><newline>
<p>
<tt>#define PE_SECTION_TABLE_SIZE 3</tt><newline>
<p>
<tt>#define PE_SECTION_INDEX_INVALID -1</tt><newline>

<sect1>Type struct read_pe_section_data

<p>
<itemize>
<item><tt>struct read_pe_section_data</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>CORE_ADDR vma_offset;</tt><newline>
<item><tt>unsigned long rva_start;</tt><newline>
<item><tt>unsigned long rva_end;</tt><newline>
<item><tt>enum minimal_symbol_type ms_type;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Global Function read_pe_exported_syms()

<p><tt>void read_pe_exported_syms ( struct objfile* objfile )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>coff-pe-read.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>add_pe_exported_sym()  :  coff-pe-read.c
<item>do_cleanups()  :  utils.c
<item>make_cleanup()  :  utils.c
<item>objfile_text_section_offset()  :  objfiles.c
<item>pe_as32()  :  coff-pe-read.c
<item>pe_get16()  :  coff-pe-read.c
<item>pe_get32()  :  coff-pe-read.c
<item>printf_filtered()  :  utils.c
<item>read_pe_section_index()  :  coff-pe-read.c
<item>read_pe_truncate_name()  :  coff-pe-read.c
<item>wrap_here()  :  utils.c
<item>xmalloc()  :  utils.c
<item>bfd_bread(), bfd_map_over_sections(), bfd_seek(), strcmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>coff_symtab_read()  :  coffread.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>get_section_vmas()  :  coff-pe-read.c
<item>xfree()  :  utils.c
</itemize>
</descrip>

<sect1>Local Function add_pe_exported_sym()

<p><tt>static void add_pe_exported_sym ( char* sym_name, unsigned long func_rva, const struct read_pe_section_data* section_data, const char* dll_name, struct objfile* objfile )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>prim_record_minimal_symbol()  :  minsyms.c
<item>xfree()  :  utils.c
<item>xmalloc()  :  utils.c
<item>__builtin___strcpy_chk(), __builtin___strncpy_chk(), __builtin_object_size(), __inline_strcpy_chk(), __inline_strncpy_chk(), strlen()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>read_pe_exported_syms()  :  coff-pe-read.c
</itemize>
</descrip>

<sect1>Local Function get_section_vmas()

<p><tt>static void get_section_vmas ( bfd* abfd, asection* sectp, void* context )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>read_pe_section_index()  :  coff-pe-read.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>read_pe_exported_syms()  :  coff-pe-read.c
</itemize>
</descrip>

<sect1>Local Function pe_as32()

<p><tt>static unsigned int pe_as32 ( void* ptr )</tt><newline>
<descrip>
<tag>Called by:</tag>
<itemize>
<item>read_pe_exported_syms()  :  coff-pe-read.c
</itemize>
</descrip>

<sect1>Local Function pe_get16()

<p><tt>static unsigned int pe_get16 ( bfd* abfd, int where )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>bfd_bread(), bfd_seek()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>read_pe_exported_syms()  :  coff-pe-read.c
</itemize>
</descrip>

<sect1>Local Function pe_get32()

<p><tt>static unsigned int pe_get32 ( bfd* abfd, int where )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>bfd_bread(), bfd_seek()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>read_pe_exported_syms()  :  coff-pe-read.c
</itemize>
</descrip>

<sect1>Local Function read_pe_section_index()

<p><tt>static int read_pe_section_index ( const char* section_name )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>strcmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>get_section_vmas()  :  coff-pe-read.c
<item>read_pe_exported_syms()  :  coff-pe-read.c
</itemize>
</descrip>

<sect1>Local Function read_pe_truncate_name()

<p><tt>static void read_pe_truncate_name ( char* dll_name )</tt><newline>
<descrip>
<tag>Called by:</tag>
<itemize>
<item>read_pe_exported_syms()  :  coff-pe-read.c
</itemize>
</descrip>

</article>
