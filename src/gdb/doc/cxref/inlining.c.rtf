{\rtf\ansi
\deff0
{\fonttbl
{\f0\froman Times New Roman;}
{\f1\fmodern Courier New;}
}
{\stylesheet
{\s0\f0\fs24 Normal;}
{\s1\f0\fs40\b\sb400\sa200\keepn\keep Heading 1;}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Heading 2;}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Heading 3;}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Heading 4;}
{\s5\f1\fs20\ql\sb50\sa50 Code;}
}
{\info{\comment
 This RTF file generated by cxref (version 1.6e).
 cxref program (c) Andrew M. Bishop 1995-2014.
 Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF inlining.c
 CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
}}
\paperw11880\paperh16848\margl1440\margr1440\margt1440\margb1440
\sectd\plain
\s0\f0\fs24
{\s1\f0\fs40\b\sb400\sa200\keepn\keep File inlining.c\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Refs Func:\cell inlined_frame_prev_register()\cell frame.c\cell\row
\cell inlined_frame_sniffer()\cell inlining.c\cell\row
\cell inlined_frame_this_id()\cell inlining.c\cell\row
Refs Var:\cell inlined_frame_unwinder\cell inlining.c\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Included Files\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <errno.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <unistd.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_locale.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <locale.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../gdb/signals.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/symcat.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-file.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "xm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/xm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "nm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/i386/nm-i386.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/nm-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "tm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/tm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-tdep.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-tdep.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-thread-status.h"\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_types.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <inttypes.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_vm.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/kmod.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/tm-i386-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/fopen-bin.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdlib.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbarch.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <ctype.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/floatformat.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_regex.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "gdbtypes.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "expression.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "breakpoint.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb-events.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "symfile.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "source.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../include/demangle.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "inferior.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "breakpoint.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "target.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "dcache.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "memattr.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_assert.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "frame-unwind.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "annotate.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbtypes.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "ui-out.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "inlining.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <block.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "objfiles.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <uuid/uuid.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_obstack.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/obstack.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symfile.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "inlining.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sqlite3.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdbthread.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "breakpoint.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "inlining.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "complaints.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "buildsym.h"\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Type definitions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct rb_tree_node_list\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct rb_tree_node_list}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct rb_tree_node* node;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct rb_tree_node_list* next;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct record_list\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct record_list}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct inlined_call_stack_record* record;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct record_list* next;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct pending_node\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct pending_node}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct linetable_entry* entry;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct symtab* s;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct pending_node* next;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Variables\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable global_inlined_call_stack\par}
{\s5\f1\fs20\ql\sb50\sa50 struct inlined_function_data global_inlined_call_stack\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell ada-exp.c\cell\cell\row
\cell ada-lang.c\cell\cell\row
\cell blockframe.c\cell\cell\row
\cell breakpoint.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell c-exp.c\cell\cell\row
\cell coff-pe-read.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell corefile.c\cell\cell\row
\cell cp-namespace.c\cell\cell\row
\cell cp-support.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell dummy-frame.c\cell\cell\row
\cell dwarf2-frame.c\cell\cell\row
\cell dwarf2expr.c\cell\cell\row
\cell dwarf2loc.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell f-exp.c\cell\cell\row
\cell frame-unwind.c\cell\cell\row
\cell frame.c\cell\cell\row
\cell gdbtypes.c\cell\cell\row
\cell infcall.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell inflow.c\cell\cell\row
\cell infrun.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell jv-exp.c\cell\cell\row
\cell jv-lang.c\cell\cell\row
\cell linespec.c\cell\cell\row
\cell m2-exp.c\cell\cell\row
\cell macrotab.c\cell\cell\row
\cell maint.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell minsyms.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objc-exp.c\cell\cell\row
\cell objc-lang.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell p-exp.c\cell\cell\row
\cell printcmd.c\cell\cell\row
\cell remote.c\cell\cell\row
\cell solib.c\cell\cell\row
\cell source.c\cell\cell\row
\cell stabsread.c\cell\cell\row
\cell stack.c\cell\cell\row
\cell symfile-mem.c\cell\cell\row
\cell symfile.c\cell\cell\row
\cell symmisc.c\cell\cell\row
\cell symtab.c\cell\cell\row
\cell target/target.c\cell\cell\row
\cell target/x86-shared-tdep.c\cell\cell\row
\cell thread.c\cell\cell\row
\cell top.c\cell\cell\row
\cell tracepoint.c\cell\cell\row
\cell tramp-frame.c\cell\cell\row
\cell valops.c\cell\cell\row
\cell varobj.c\cell\cell\row
Used in:\cell add_item_to_inlined_subroutine_stack()\cell inlining.c\cell\row
\cell adjust_current_inlined_subroutine_stack_position()\cell inlining.c\cell\row
\cell at_inlined_call_site_p()\cell inlining.c\cell\row
\cell bpstat_stop_status()\cell breakpoint.c\cell\row
\cell clear_inlined_subroutine_print_frames()\cell inlining.c\cell\row
\cell copy_inlined_call_stack_record()\cell inlining.c\cell\row
\cell current_inlined_bottom_call_site_line()\cell inlining.c\cell\row
\cell current_inlined_subroutine_call_site_line()\cell inlining.c\cell\row
\cell current_inlined_subroutine_call_stack_end_pc()\cell inlining.c\cell\row
\cell current_inlined_subroutine_call_stack_eof_pc()\cell inlining.c\cell\row
\cell current_inlined_subroutine_call_stack_start_pc()\cell inlining.c\cell\row
\cell current_inlined_subroutine_calling_function_name()\cell inlining.c\cell\row
\cell current_inlined_subroutine_function_name()\cell inlining.c\cell\row
\cell current_inlined_subroutine_stack_position()\cell inlining.c\cell\row
\cell current_inlined_subroutine_stack_size()\cell inlining.c\cell\row
\cell current_inlined_subroutine_stack_symtab()\cell inlining.c\cell\row
\cell find_correct_current_position()\cell inlining.c\cell\row
\cell finish_inlined_subroutine_command()\cell infcmd.c\cell\row
\cell flush_inlined_subroutine_frames()\cell inlining.c\cell\row
\cell func_sym_has_inlining()\cell inlining.c\cell\row
\cell in_inlined_function_call_p()\cell inlining.c\cell\row
\cell inlined_frame_sniffer()\cell inlining.c\cell\row
\cell inlined_frame_this_id()\cell inlining.c\cell\row
\cell inlined_function_address_ranges_properly_contained()\cell inlining.c\cell\row
\cell inlined_function_call_stack_pc()\cell inlining.c\cell\row
\cell inlined_function_end_of_inlined_code_p()\cell inlining.c\cell\row
\cell inlined_function_initialize_call_stack()\cell inlining.c\cell\row
\cell inlined_function_reinitialize_call_stack()\cell inlining.c\cell\row
\cell inlined_function_reset_frame_stack()\cell inlining.c\cell\row
\cell inlined_function_update_call_stack()\cell inlining.c\cell\row
\cell inlined_function_update_call_stack_pc()\cell inlining.c\cell\row
\cell inlined_subroutine_adjust_position_for_breakpoint()\cell inlining.c\cell\row
\cell inlined_subroutine_restore_after_dummy_call()\cell inlining.c\cell\row
\cell inlined_subroutine_save_before_dummy_call()\cell inlining.c\cell\row
\cell last_inlined_call_site_filename()\cell inlining.c\cell\row
\cell print_inlined_frame()\cell inlining.c\cell\row
\cell print_inlined_frames_lite()\cell inlining.c\cell\row
\cell record_ranges_contains_pc()\cell inlining.c\cell\row
\cell rest_of_line_contains_inlined_subroutine()\cell inlining.c\cell\row
\cell restore_thread_inlined_call_stack()\cell inlining.c\cell\row
\cell save_thread_inlined_call_stack()\cell inlining.c\cell\row
\cell step_1_inlining()\cell infcmd.c\cell\row
\cell step_into_current_inlined_subroutine()\cell inlining.c\cell\row
\cell step_once()\cell infcmd.c\cell\row
\cell verify_stack()\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable stepping_into_inlined_subroutine\par}
{\s5\f1\fs20\ql\sb50\sa50 int stepping_into_inlined_subroutine\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell ada-exp.c\cell\cell\row
\cell ada-lang.c\cell\cell\row
\cell blockframe.c\cell\cell\row
\cell breakpoint.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell c-exp.c\cell\cell\row
\cell coff-pe-read.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell corefile.c\cell\cell\row
\cell cp-namespace.c\cell\cell\row
\cell cp-support.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell dummy-frame.c\cell\cell\row
\cell dwarf2-frame.c\cell\cell\row
\cell dwarf2expr.c\cell\cell\row
\cell dwarf2loc.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell f-exp.c\cell\cell\row
\cell frame-unwind.c\cell\cell\row
\cell frame.c\cell\cell\row
\cell gdbtypes.c\cell\cell\row
\cell infcall.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell inflow.c\cell\cell\row
\cell infrun.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell jv-exp.c\cell\cell\row
\cell jv-lang.c\cell\cell\row
\cell linespec.c\cell\cell\row
\cell m2-exp.c\cell\cell\row
\cell macrotab.c\cell\cell\row
\cell maint.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell minsyms.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objc-exp.c\cell\cell\row
\cell objc-lang.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell p-exp.c\cell\cell\row
\cell printcmd.c\cell\cell\row
\cell remote.c\cell\cell\row
\cell solib.c\cell\cell\row
\cell source.c\cell\cell\row
\cell stabsread.c\cell\cell\row
\cell stack.c\cell\cell\row
\cell symfile-mem.c\cell\cell\row
\cell symfile.c\cell\cell\row
\cell symmisc.c\cell\cell\row
\cell symtab.c\cell\cell\row
\cell target/target.c\cell\cell\row
\cell target/x86-shared-tdep.c\cell\cell\row
\cell thread.c\cell\cell\row
\cell top.c\cell\cell\row
\cell tracepoint.c\cell\cell\row
\cell tramp-frame.c\cell\cell\row
\cell valops.c\cell\cell\row
\cell varobj.c\cell\cell\row
Used in:\cell execute_command()\cell top.c\cell\row
\cell inlined_function_update_call_stack()\cell inlining.c\cell\row
\cell step_1_inlining()\cell infcmd.c\cell\row
\cell step_once()\cell infcmd.c\cell\row
\cell verify_stack()\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable inlined_step_range_end\par}
{\s5\f1\fs20\ql\sb50\sa50 CORE_ADDR inlined_step_range_end\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell ada-exp.c\cell\cell\row
\cell ada-lang.c\cell\cell\row
\cell blockframe.c\cell\cell\row
\cell breakpoint.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell c-exp.c\cell\cell\row
\cell coff-pe-read.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell corefile.c\cell\cell\row
\cell cp-namespace.c\cell\cell\row
\cell cp-support.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell dummy-frame.c\cell\cell\row
\cell dwarf2-frame.c\cell\cell\row
\cell dwarf2expr.c\cell\cell\row
\cell dwarf2loc.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell f-exp.c\cell\cell\row
\cell frame-unwind.c\cell\cell\row
\cell frame.c\cell\cell\row
\cell gdbtypes.c\cell\cell\row
\cell infcall.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell inflow.c\cell\cell\row
\cell infrun.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell jv-exp.c\cell\cell\row
\cell jv-lang.c\cell\cell\row
\cell linespec.c\cell\cell\row
\cell m2-exp.c\cell\cell\row
\cell macrotab.c\cell\cell\row
\cell maint.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell minsyms.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objc-exp.c\cell\cell\row
\cell objc-lang.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell p-exp.c\cell\cell\row
\cell printcmd.c\cell\cell\row
\cell remote.c\cell\cell\row
\cell solib.c\cell\cell\row
\cell source.c\cell\cell\row
\cell stabsread.c\cell\cell\row
\cell stack.c\cell\cell\row
\cell symfile-mem.c\cell\cell\row
\cell symfile.c\cell\cell\row
\cell symmisc.c\cell\cell\row
\cell symtab.c\cell\cell\row
\cell target/target.c\cell\cell\row
\cell target/x86-shared-tdep.c\cell\cell\row
\cell thread.c\cell\cell\row
\cell top.c\cell\cell\row
\cell tracepoint.c\cell\cell\row
\cell tramp-frame.c\cell\cell\row
\cell valops.c\cell\cell\row
\cell varobj.c\cell\cell\row
Used in:\cell inlined_function_update_call_stack()\cell inlining.c\cell\row
\cell restore_thread_inlined_call_stack()\cell inlining.c\cell\row
\cell save_thread_inlined_call_stack()\cell inlining.c\cell\row
\cell step_1_inlining()\cell infcmd.c\cell\row
\cell step_once()\cell infcmd.c\cell\row
\cell verify_stack()\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable inlined_frame_unwind\par}
{\s5\f1\fs20\ql\sb50\sa50 const struct frame_unwind* const inlined_frame_unwind\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell ada-exp.c\cell\cell\row
\cell ada-lang.c\cell\cell\row
\cell blockframe.c\cell\cell\row
\cell breakpoint.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell c-exp.c\cell\cell\row
\cell coff-pe-read.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell corefile.c\cell\cell\row
\cell cp-namespace.c\cell\cell\row
\cell cp-support.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell dummy-frame.c\cell\cell\row
\cell dwarf2-frame.c\cell\cell\row
\cell dwarf2expr.c\cell\cell\row
\cell dwarf2loc.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell f-exp.c\cell\cell\row
\cell frame-unwind.c\cell\cell\row
\cell frame.c\cell\cell\row
\cell gdbtypes.c\cell\cell\row
\cell infcall.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell inflow.c\cell\cell\row
\cell infrun.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell jv-exp.c\cell\cell\row
\cell jv-lang.c\cell\cell\row
\cell linespec.c\cell\cell\row
\cell m2-exp.c\cell\cell\row
\cell macrotab.c\cell\cell\row
\cell maint.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell minsyms.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objc-exp.c\cell\cell\row
\cell objc-lang.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell p-exp.c\cell\cell\row
\cell printcmd.c\cell\cell\row
\cell remote.c\cell\cell\row
\cell solib.c\cell\cell\row
\cell source.c\cell\cell\row
\cell stabsread.c\cell\cell\row
\cell stack.c\cell\cell\row
\cell symfile-mem.c\cell\cell\row
\cell symfile.c\cell\cell\row
\cell symmisc.c\cell\cell\row
\cell symtab.c\cell\cell\row
\cell target/target.c\cell\cell\row
\cell target/x86-shared-tdep.c\cell\cell\row
\cell thread.c\cell\cell\row
\cell top.c\cell\cell\row
\cell tracepoint.c\cell\cell\row
\cell tramp-frame.c\cell\cell\row
\cell valops.c\cell\cell\row
\cell varobj.c\cell\cell\row
Used in:\cell frame_unwind_init()\cell frame-unwind.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep External Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable addressprint\par}
{\s5\f1\fs20\ql\sb50\sa50 extern int addressprint\par}
\trowd\trgaph120\cellx1440\cellx5220
\intbl\plain
Defined in:\cell valprint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable temp_frame_stack\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct inlined_function_data temp_frame_stack\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell add_item_to_temp_frame_stack()\cell\cell\row
\cell copy_temp_frame_stack_record()\cell\cell\row
\cell current_inlined_bottom_call_site_line()\cell\cell\row
\cell current_inlined_subroutine_call_site_line()\cell\cell\row
\cell current_inlined_subroutine_call_stack_end_pc()\cell\cell\row
\cell current_inlined_subroutine_call_stack_eof_pc()\cell\cell\row
\cell current_inlined_subroutine_call_stack_start_pc()\cell\cell\row
\cell current_inlined_subroutine_calling_function_name()\cell\cell\row
\cell current_inlined_subroutine_function_name()\cell\cell\row
\cell current_inlined_subroutine_stack_symtab()\cell\cell\row
\cell current_tmp_frame_stack_position()\cell\cell\row
\cell flush_inlined_subroutine_frames()\cell\cell\row
\cell func_sym_has_inlining()\cell\cell\row
\cell inlined_frame_sniffer_helper()\cell\cell\row
\cell inlined_frame_this_id()\cell\cell\row
\cell inlined_function_initialize_call_stack()\cell\cell\row
\cell inlined_function_reset_frame_stack()\cell\cell\row
\cell last_inlined_call_site_filename()\cell\cell\row
\cell print_inlined_frame()\cell\cell\row
\cell print_inlined_frames_lite()\cell\cell\row
\cell reset_temp_frame_stack()\cell\cell\row
\cell tmp_frame_in_inlined_function_call_p()\cell\cell\row
\cell tmp_frame_record_ranges_contains_pc()\cell\cell\row
\cell update_tmp_frame_stack()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable saved_call_stack\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct inlined_function_data saved_call_stack\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell add_item_to_inlined_subroutine_stack()\cell\cell\row
\cell inlined_function_initialize_call_stack()\cell\cell\row
\cell inlined_subroutine_restore_after_dummy_call()\cell\cell\row
\cell inlined_subroutine_save_before_dummy_call()\cell\cell\row
\cell reset_saved_call_stack()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable call_stack_initialized\par}
{\s5\f1\fs20\ql\sb50\sa50 static int call_stack_initialized\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell inlined_function_call_stack_initialized_p()\cell\cell\row
\cell inlined_function_initialize_call_stack()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable inlined_frame_unwinder\par}
{\s5\f1\fs20\ql\sb50\sa50 static const struct frame_unwind inlined_frame_unwinder\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell inlining.c\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Functions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function add_symbol_to_inlined_subroutine_list()\par}
{\s5\f1\fs20\ql\sb50\sa50 void add_symbol_to_inlined_subroutine_list ( struct symbol* sym, struct pending** list )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Calls: \cell xmalloc()\cell utils.c\cell\row
Called by:\cell read_inlined_subroutine_scope()\cell dwarf2read.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function adjust_current_inlined_subroutine_stack_position()\par}
{\s5\f1\fs20\ql\sb50\sa50 void adjust_current_inlined_subroutine_stack_position ( int i )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Called by:\cell finish_inlined_subroutine_command()\cell infcmd.c\cell\row
\cell inlined_function_update_call_stack()\cell inlining.c\cell\row
\cell insert_step_resume_breakpoint_at_sal()\cell infrun.c\cell\row
\cell return_command()\cell stack.c\cell\row
\cell step_into_current_inlined_subroutine()\cell inlining.c\cell\row
Refs Var:\cell global_inlined_call_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function at_inlined_call_site_p()\par}
{\s5\f1\fs20\ql\sb50\sa50 int at_inlined_call_site_p ( char** file_name, int* line_num, int* column )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Calls: \cell current_inlined_subroutine_stack_position()\cell inlining.c\cell\row
Called by:\cell bpstat_stop_status()\cell breakpoint.c\cell\row
\cell handle_inferior_event()\cell infrun.c\cell\row
\cell print_frame()\cell stack.c\cell\row
\cell print_frame_info()\cell stack.c\cell\row
\cell step_1_inlining()\cell infcmd.c\cell\row
\cell step_1_no_inlining()\cell infcmd.c\cell\row
\cell step_once()\cell infcmd.c\cell\row
Refs Var:\cell global_inlined_call_stack\cell inlining.c\cell\row
\cell stop_pc\cell infcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function block_inlined_function()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct symbol* block_inlined_function ( struct block* bl, struct bfd_section* section )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Calls: \cell find_pc_sect_line()\cell symtab.c\cell\row
\cell objfile_get_first()\cell objfiles.c\cell\row
\cell objfile_get_next()\cell objfiles.c\cell\row
\cell rb_tree_find_all_exact_matches()\cell inlining.c\cell\row
Called by:\cell find_pc_sect_function()\cell blockframe.c\cell\row
\cell get_frame_function_inlined()\cell blockframe.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function check_for_additional_inlined_breakpoint_locations()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct symtabs_and_lines check_for_additional_inlined_breakpoint_locations ( struct symtabs_and_lines sals, char** addr_string, struct expression** cond, char** cond_string, char*** new_addr_string, struct expression*** new_cond, char*** new_cond_string )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Calls: \cell find_pc_line()\cell symtab.c\cell\row
\cell objfile_get_first()\cell objfiles.c\cell\row
\cell objfile_get_next()\cell objfiles.c\cell\row
\cell search_tree_for_name()\cell inlining.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell xrealloc()\cell utils.c\cell\row
\cell  strcmp(), xstrdup()\cell\cell\row
Called by:\cell create_breakpoints()\cell breakpoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function clear_inlined_subroutine_print_frames()\par}
{\s5\f1\fs20\ql\sb50\sa50 void clear_inlined_subroutine_print_frames ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Calls: \cell current_inlined_subroutine_stack_position()\cell inlining.c\cell\row
Called by:\cell current_frame_command()\cell stack.c\cell\row
\cell do_captured_thread_select()\cell thread.c\cell\row
\cell down_command()\cell stack.c\cell\row
\cell finish_tfind_command()\cell tracepoint.c\cell\row
\cell frame_command()\cell stack.c\cell\row
\cell info_threads_command()\cell thread.c\cell\row
\cell normal_stop()\cell infrun.c\cell\row
\cell restore_current_thread()\cell thread.c\cell\row
\cell select_and_print_frame()\cell stack.c\cell\row
\cell up_command()\cell stack.c\cell\row
Refs Var:\cell global_inlined_call_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function current_inlined_bottom_call_site_line()\par}
{\s5\f1\fs20\ql\sb50\sa50 int current_inlined_bottom_call_site_line ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Called by:\cell print_frame()\cell stack.c\cell\row
Refs Var:\cell global_inlined_call_stack\cell inlining.c\cell\row
\cell temp_frame_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function current_inlined_subroutine_call_site_line()\par}
{\s5\f1\fs20\ql\sb50\sa50 int current_inlined_subroutine_call_site_line ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Called by:\cell bpstat_stop_status()\cell breakpoint.c\cell\row
\cell return_command()\cell stack.c\cell\row
Refs Var:\cell global_inlined_call_stack\cell inlining.c\cell\row
\cell temp_frame_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function current_inlined_subroutine_call_stack_end_pc()\par}
{\s5\f1\fs20\ql\sb50\sa50 CORE_ADDR current_inlined_subroutine_call_stack_end_pc ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Called by:\cell find_frame_sal()\cell frame.c\cell\row
\cell step_1_inlining()\cell infcmd.c\cell\row
\cell step_once()\cell infcmd.c\cell\row
Refs Var:\cell global_inlined_call_stack\cell inlining.c\cell\row
\cell temp_frame_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function current_inlined_subroutine_call_stack_eof_pc()\par}
{\s5\f1\fs20\ql\sb50\sa50 CORE_ADDR current_inlined_subroutine_call_stack_eof_pc ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Calls: \cell record_end_pc()\cell inlining.c\cell\row
Refs Var:\cell global_inlined_call_stack\cell inlining.c\cell\row
\cell temp_frame_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function current_inlined_subroutine_call_stack_start_pc()\par}
{\s5\f1\fs20\ql\sb50\sa50 CORE_ADDR current_inlined_subroutine_call_stack_start_pc ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Called by:\cell handle_inferior_event()\cell infrun.c\cell\row
\cell normal_stop()\cell infrun.c\cell\row
\cell step_1_inlining()\cell infcmd.c\cell\row
\cell step_once()\cell infcmd.c\cell\row
Refs Var:\cell global_inlined_call_stack\cell inlining.c\cell\row
\cell temp_frame_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function current_inlined_subroutine_calling_function_name()\par}
{\s5\f1\fs20\ql\sb50\sa50 char* current_inlined_subroutine_calling_function_name ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Called by:\cell return_command()\cell stack.c\cell\row
Refs Var:\cell global_inlined_call_stack\cell inlining.c\cell\row
\cell temp_frame_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function current_inlined_subroutine_function_name()\par}
{\s5\f1\fs20\ql\sb50\sa50 char* current_inlined_subroutine_function_name ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Called by:\cell return_command()\cell stack.c\cell\row
Refs Var:\cell global_inlined_call_stack\cell inlining.c\cell\row
\cell temp_frame_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function current_inlined_subroutine_stack_position()\par}
{\s5\f1\fs20\ql\sb50\sa50 int current_inlined_subroutine_stack_position ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Called by:\cell at_inlined_call_site_p()\cell inlining.c\cell\row
\cell clear_inlined_subroutine_print_frames()\cell inlining.c\cell\row
\cell finish_inlined_subroutine_command()\cell infcmd.c\cell\row
\cell flush_inlined_subroutine_frames()\cell inlining.c\cell\row
\cell in_inlined_function_call_p()\cell inlining.c\cell\row
\cell inlined_frame_sniffer()\cell inlining.c\cell\row
\cell inlined_function_end_of_inlined_code_p()\cell inlining.c\cell\row
\cell inlined_function_update_call_stack()\cell inlining.c\cell\row
\cell rest_of_line_contains_inlined_subroutine()\cell inlining.c\cell\row
\cell step_1_inlining()\cell infcmd.c\cell\row
\cell step_into_current_inlined_subroutine()\cell inlining.c\cell\row
\cell step_once()\cell infcmd.c\cell\row
Refs Var:\cell global_inlined_call_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function current_inlined_subroutine_stack_size()\par}
{\s5\f1\fs20\ql\sb50\sa50 int current_inlined_subroutine_stack_size ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Called by:\cell inlined_function_end_of_inlined_code_p()\cell inlining.c\cell\row
\cell inlined_function_update_call_stack()\cell inlining.c\cell\row
\cell save_thread_inlined_call_stack()\cell inlining.c\cell\row
\cell step_1_inlining()\cell infcmd.c\cell\row
\cell step_once()\cell infcmd.c\cell\row
Refs Var:\cell global_inlined_call_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function current_inlined_subroutine_stack_symtab()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct symtab* current_inlined_subroutine_stack_symtab ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Refs Var:\cell global_inlined_call_stack\cell inlining.c\cell\row
\cell temp_frame_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function find_next_inlined_subroutine()\par}
{\s5\f1\fs20\ql\sb50\sa50 void find_next_inlined_subroutine ( CORE_ADDR pc, CORE_ADDR* inline_start_pc, CORE_ADDR end_of_line )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Calls: \cell find_pc_line()\cell symtab.c\cell\row
\cell rb_tree_find_all_nodes_in_between()\cell inlining.c\cell\row
Called by:\cell step_1_inlining()\cell infcmd.c\cell\row
\cell step_once()\cell infcmd.c\cell\row
Refs Var:\cell stop_pc\cell infcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function flush_inlined_subroutine_frames()\par}
{\s5\f1\fs20\ql\sb50\sa50 void flush_inlined_subroutine_frames ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Calls: \cell current_inlined_subroutine_stack_position()\cell inlining.c\cell\row
Called by:\cell flush_cached_frames()\cell frame.c\cell\row
\cell inlined_function_reset_frame_stack()\cell inlining.c\cell\row
\cell restore_inferior_status()\cell infrun.c\cell\row
\cell restore_thread_inlined_call_stack()\cell inlining.c\cell\row
Refs Var:\cell global_inlined_call_stack\cell inlining.c\cell\row
\cell temp_frame_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function func_sym_has_inlining()\par}
{\s5\f1\fs20\ql\sb50\sa50 int func_sym_has_inlining ( struct symbol* func_sym, struct frame_info* fi )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Calls: \cell frame_relative_level()\cell frame.c\cell\row
\cell get_frame_pc()\cell frame.c\cell\row
\cell  strcmp()\cell\cell\row
Refs Var:\cell global_inlined_call_stack\cell inlining.c\cell\row
\cell temp_frame_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function func_sym_is_inlined_function()\par}
{\s5\f1\fs20\ql\sb50\sa50 int func_sym_is_inlined_function ( struct symbol* function )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Calls: \cell find_pc_section()\cell objfiles.c\cell\row
\cell rb_tree_find_all_exact_matches()\cell inlining.c\cell\row
\cell  strcmp()\cell\cell\row
Called by:\cell find_function_in_inferior()\cell valops.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function in_inlined_function_call_p()\par}
{\s5\f1\fs20\ql\sb50\sa50 int in_inlined_function_call_p ( CORE_ADDR* inline_end_pc )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Calls: \cell address_range_ending_pc()\cell inlining.c\cell\row
\cell current_inlined_subroutine_stack_position()\cell inlining.c\cell\row
\cell record_ranges_contains_pc()\cell inlining.c\cell\row
Called by:\cell finish_command()\cell infcmd.c\cell\row
\cell inlined_frame_sniffer()\cell inlining.c\cell\row
\cell print_frame()\cell stack.c\cell\row
\cell return_command()\cell stack.c\cell\row
\cell step_1_inlining()\cell infcmd.c\cell\row
\cell step_once()\cell infcmd.c\cell\row
Refs Var:\cell global_inlined_call_stack\cell inlining.c\cell\row
\cell stop_pc\cell infcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function inlined_frame_sniffer()\par}
{\s5\f1\fs20\ql\sb50\sa50 int inlined_frame_sniffer ( const struct frame_unwind* self, struct frame_info* next_frame, void** this_prologue_cache )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.c\cell\cell\row
Calls: \cell current_inlined_subroutine_stack_position()\cell inlining.c\cell\row
\cell gdbarch_unwind_pc()\cell gdbarch.c\cell\row
\cell gdbarch_unwind_pc_p()\cell gdbarch.c\cell\row
\cell in_inlined_function_call_p()\cell inlining.c\cell\row
\cell inlined_frame_sniffer_helper()\cell inlining.c\cell\row
Used in:\cell inlining.c\cell\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\cell global_inlined_call_stack\cell inlining.c\cell\row
\cell step_range_end\cell infcmd.c\cell\row
\cell step_range_start\cell infcmd.c\cell\row
\cell stop_pc\cell infcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function inlined_frame_this_id()\par}
{\s5\f1\fs20\ql\sb50\sa50 void inlined_frame_this_id ( struct frame_info* next_frame, void** this_prologue_cache, struct frame_id* this_id )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.c\cell\cell\row
Calls: \cell frame_relative_level()\cell frame.c\cell\row
\cell gdbarch_unwind_dummy_id()\cell gdbarch.c\cell\row
\cell get_frame_arch()\cell frame.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell record_end_pc()\cell inlining.c\cell\row
Used in:\cell inlining.c\cell\cell\row
Refs Var:\cell global_inlined_call_stack\cell inlining.c\cell\row
\cell temp_frame_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function inlined_function_add_function_names()\par}
{\s5\f1\fs20\ql\sb50\sa50 void inlined_function_add_function_names ( struct objfile* objfile, CORE_ADDR low_pc, CORE_ADDR high_pc, int line, int column, const char* fn_name, const char* calling_fn_name, struct address_range_list* ranges, struct symbol* func_sym )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Calls: \cell complaint()\cell complaints.c\cell\row
\cell paddr_nz()\cell utils.c\cell\row
\cell rb_tree_find_all_matching_nodes()\cell inlining.c\cell\row
\cell rb_tree_insert()\cell dwarf2read.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  strcmp(), xstrdup()\cell\cell\row
Called by:\cell check_inlined_function_calls()\cell dwarf2read.c\cell\row
Refs Var:\cell symfile_complaints\cell complaints.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function inlined_function_call_stack_initialized_p()\par}
{\s5\f1\fs20\ql\sb50\sa50 int inlined_function_call_stack_initialized_p ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Called by:\cell run_command_1()\cell infcmd.c\cell\row
Refs Var:\cell call_stack_initialized\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function inlined_function_call_stack_pc()\par}
{\s5\f1\fs20\ql\sb50\sa50 CORE_ADDR inlined_function_call_stack_pc ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Called by:\cell handle_inferior_event()\cell infrun.c\cell\row
\cell normal_stop()\cell infrun.c\cell\row
\cell prepare_to_proceed()\cell infrun.c\cell\row
\cell switch_to_thread()\cell thread.c\cell\row
Refs Var:\cell global_inlined_call_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function inlined_function_end_of_inlined_code_p()\par}
{\s5\f1\fs20\ql\sb50\sa50 int inlined_function_end_of_inlined_code_p ( CORE_ADDR pc )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Calls: \cell current_inlined_subroutine_stack_position()\cell inlining.c\cell\row
\cell current_inlined_subroutine_stack_size()\cell inlining.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell record_end_pc()\cell inlining.c\cell\row
Called by:\cell insert_step_resume_breakpoint_at_sal()\cell infrun.c\cell\row
Refs Var:\cell global_inlined_call_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function inlined_function_find_first_line()\par}
{\s5\f1\fs20\ql\sb50\sa50 int inlined_function_find_first_line ( struct symtab_and_line sal )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Called by:\cell step_1_inlining()\cell infcmd.c\cell\row
\cell step_once()\cell infcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function inlined_function_initialize_call_stack()\par}
{\s5\f1\fs20\ql\sb50\sa50 void inlined_function_initialize_call_stack ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Calls: \cell xmalloc()\cell utils.c\cell\row
\cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk()\cell\cell\row
Called by:\cell run_command_1()\cell infcmd.c\cell\row
Refs Var:\cell call_stack_initialized\cell inlining.c\cell\row
\cell global_inlined_call_stack\cell inlining.c\cell\row
\cell saved_call_stack\cell inlining.c\cell\row
\cell temp_frame_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function inlined_function_reinitialize_call_stack()\par}
{\s5\f1\fs20\ql\sb50\sa50 void inlined_function_reinitialize_call_stack ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Calls: \cell reset_saved_call_stack()\cell inlining.c\cell\row
\cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk()\cell\cell\row
Called by:\cell inlined_function_update_call_stack()\cell inlining.c\cell\row
\cell restore_thread_inlined_call_stack()\cell inlining.c\cell\row
\cell run_command_1()\cell infcmd.c\cell\row
\cell verify_stack()\cell inlining.c\cell\row
Refs Var:\cell global_inlined_call_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function inlined_function_reset_frame_stack()\par}
{\s5\f1\fs20\ql\sb50\sa50 void inlined_function_reset_frame_stack ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Calls: \cell flush_inlined_subroutine_frames()\cell inlining.c\cell\row
Called by:\cell backtrace_command_1()\cell stack.c\cell\row
Refs Var:\cell global_inlined_call_stack\cell inlining.c\cell\row
\cell temp_frame_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function inlined_function_update_call_stack()\par}
{\s5\f1\fs20\ql\sb50\sa50 void inlined_function_update_call_stack ( CORE_ADDR pc )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Calls: \cell add_item_to_inlined_subroutine_stack()\cell inlining.c\cell\row
\cell adjust_current_inlined_subroutine_stack_position()\cell inlining.c\cell\row
\cell current_inlined_subroutine_stack_position()\cell inlining.c\cell\row
\cell current_inlined_subroutine_stack_size()\cell inlining.c\cell\row
\cell find_correct_current_position()\cell inlining.c\cell\row
\cell find_pc_overlay()\cell symfile.c\cell\row
\cell find_pc_sect_symtab()\cell symtab.c\cell\row
\cell frame_id_eq()\cell frame.c\cell\row
\cell get_current_frame()\cell frame.c\cell\row
\cell get_frame_id()\cell frame.c\cell\row
\cell inlined_function_reinitialize_call_stack()\cell inlining.c\cell\row
\cell inlined_function_update_call_stack_pc()\cell inlining.c\cell\row
\cell insert_pending_node()\cell inlining.c\cell\row
\cell overlay_mapped_address()\cell symfile.c\cell\row
\cell pc_in_unmapped_range()\cell symfile.c\cell\row
\cell record_ranges_contains_pc()\cell inlining.c\cell\row
\cell step_into_current_inlined_subroutine()\cell inlining.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk()\cell\cell\row
Called by:\cell handle_inferior_event()\cell infrun.c\cell\row
\cell normal_stop()\cell infrun.c\cell\row
\cell prepare_to_proceed()\cell infrun.c\cell\row
\cell print_inlined_frames_lite()\cell inlining.c\cell\row
\cell restore_thread_inlined_call_stack()\cell inlining.c\cell\row
\cell switch_to_thread()\cell thread.c\cell\row
Refs Var:\cell dwarf2_allow_inlined_stepping\cell dwarf2read.c\cell\row
\cell global_inlined_call_stack\cell inlining.c\cell\row
\cell inlined_step_range_end\cell inlining.c\cell\row
\cell step_frame_id\cell infcmd.c\cell\row
\cell step_range_end\cell infcmd.c\cell\row
\cell step_range_start\cell infcmd.c\cell\row
\cell stepping_into_inlined_subroutine\cell inlining.c\cell\row
\cell stepping_over_inlined_subroutine\cell infcmd.c\cell\row
\cell stop_pc\cell infcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function inlined_function_update_call_stack_pc()\par}
{\s5\f1\fs20\ql\sb50\sa50 void inlined_function_update_call_stack_pc ( CORE_ADDR new_pc )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Called by:\cell inlined_function_update_call_stack()\cell inlining.c\cell\row
Refs Var:\cell global_inlined_call_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function inlined_subroutine_adjust_position_for_breakpoint()\par}
{\s5\f1\fs20\ql\sb50\sa50 void inlined_subroutine_adjust_position_for_breakpoint ( struct breakpoint* b )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Calls: \cell internal_error()\cell utils.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  __builtin___snprintf_chk(), __builtin_object_size(), isdigit(), strcmp(), strlen(), strrchr(), strstr(), xstrdup()\cell\cell\row
Called by:\cell bpstat_stop_status()\cell breakpoint.c\cell\row
Refs Var:\cell global_inlined_call_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function inlined_subroutine_free_objfile_call_sites()\par}
{\s5\f1\fs20\ql\sb50\sa50 void inlined_subroutine_free_objfile_call_sites ( struct rb_tree_node* root )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Calls: \cell inlined_subroutine_free_objfile_call_sites()\cell inlining.c\cell\row
\cell xfree()\cell utils.c\cell\row
Called by:\cell free_objfile_internal()\cell objfiles.c\cell\row
\cell inlined_subroutine_free_objfile_call_sites()\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function inlined_subroutine_free_objfile_data()\par}
{\s5\f1\fs20\ql\sb50\sa50 void inlined_subroutine_free_objfile_data ( struct rb_tree_node* root )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Calls: \cell inlined_subroutine_free_objfile_data()\cell inlining.c\cell\row
\cell xfree()\cell utils.c\cell\row
Called by:\cell free_objfile_internal()\cell objfiles.c\cell\row
\cell inlined_subroutine_free_objfile_data()\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function inlined_subroutine_objfile_relocate()\par}
{\s5\f1\fs20\ql\sb50\sa50 void inlined_subroutine_objfile_relocate ( struct objfile* objfile, struct rb_tree_node* tree_node, struct section_offsets* deltas )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Calls: \cell executable_objfile()\cell objfiles.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell update_inlined_data_addresses()\cell inlining.c\cell\row
Called by:\cell objfile_relocate()\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function inlined_subroutine_restore_after_dummy_call()\par}
{\s5\f1\fs20\ql\sb50\sa50 void inlined_subroutine_restore_after_dummy_call ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Calls: \cell internal_error()\cell utils.c\cell\row
\cell reset_saved_call_stack()\cell inlining.c\cell\row
\cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk(), xstrdup()\cell\cell\row
Called by:\cell hand_function_call()\cell infcall.c\cell\row
\cell normal_stop()\cell infrun.c\cell\row
\cell restore_inferior_status()\cell infrun.c\cell\row
\cell return_command()\cell stack.c\cell\row
Refs Var:\cell global_inlined_call_stack\cell inlining.c\cell\row
\cell saved_call_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function inlined_subroutine_save_before_dummy_call()\par}
{\s5\f1\fs20\ql\sb50\sa50 void inlined_subroutine_save_before_dummy_call ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Calls: \cell  xstrdup()\cell\cell\row
Called by:\cell dummy_frame_push()\cell dummy-frame.c\cell\row
\cell save_inferior_status()\cell infrun.c\cell\row
Refs Var:\cell global_inlined_call_stack\cell inlining.c\cell\row
\cell saved_call_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function is_at_stepping_ranges_end()\par}
{\s5\f1\fs20\ql\sb50\sa50 int is_at_stepping_ranges_end ( CORE_ADDR pc )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Called by:\cell handle_inferior_event()\cell infrun.c\cell\row
Refs Var:\cell stepping_ranges\cell infcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function is_within_stepping_ranges()\par}
{\s5\f1\fs20\ql\sb50\sa50 int is_within_stepping_ranges ( CORE_ADDR pc )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Called by:\cell handle_inferior_event()\cell infrun.c\cell\row
Refs Var:\cell stepping_ranges\cell infcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function last_inlined_call_site_filename()\par}
{\s5\f1\fs20\ql\sb50\sa50 char* last_inlined_call_site_filename ( struct frame_info* fi )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Calls: \cell frame_relative_level()\cell frame.c\cell\row
Called by:\cell print_frame()\cell stack.c\cell\row
Refs Var:\cell global_inlined_call_stack\cell inlining.c\cell\row
\cell temp_frame_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function print_inlined_frame()\par}
{\s5\f1\fs20\ql\sb50\sa50 void print_inlined_frame ( struct frame_info* fi, int print_level, enum print_what print_what, int print_args, struct symtab_and_line sal, int call_site_line )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Calls: \cell do_cleanups()\cell utils.c\cell\row
\cell find_pc_function()\cell blockframe.c\cell\row
\cell fprintf_symbol_filtered()\cell utils.c\cell\row
\cell frame_relative_level()\cell frame.c\cell\row
\cell get_frame_base()\cell frame.c\cell\row
\cell get_frame_pc()\cell frame.c\cell\row
\cell make_cleanup_ui_out_stream_delete()\cell ui-out.c\cell\row
\cell make_cleanup_ui_out_tuple_begin_end()\cell ui-out.c\cell\row
\cell symtab_to_fullname()\cell source.c\cell\row
\cell ui_out_field_core_addr()\cell ui-out.c\cell\row
\cell ui_out_field_fmt_int()\cell ui-out.c\cell\row
\cell ui_out_field_int()\cell ui-out.c\cell\row
\cell ui_out_field_stream()\cell ui-out.c\cell\row
\cell ui_out_field_string()\cell ui-out.c\cell\row
\cell ui_out_is_mi_like_p()\cell ui-out.c\cell\row
\cell ui_out_stream_new()\cell ui-out.c\cell\row
\cell ui_out_text()\cell ui-out.c\cell\row
\cell ui_out_wrap_hint()\cell ui-out.c\cell\row
\cell update_tmp_frame_stack()\cell inlining.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  __builtin___snprintf_chk(), __builtin_object_size(), annotate_frame_address(), annotate_frame_address_end(), annotate_frame_args(), annotate_frame_begin(), annotate_frame_function_name(), annotate_frame_source_begin(), annotate_frame_source_end(), annotate_frame_source_file(), annotate_frame_source_file_end(), annotate_frame_source_line(), print_frame_more_info_hook(), strlen()\cell\cell\row
Called by:\cell print_frame()\cell stack.c\cell\row
\cell step_once()\cell infcmd.c\cell\row
Refs Var:\cell addressprint\cell valprint.c\cell\row
\cell global_inlined_call_stack\cell inlining.c\cell\row
\cell print_frame_more_info_hook\cell top.c\cell\row
\cell stop_pc\cell infcmd.c\cell\row
\cell temp_frame_stack\cell inlining.c\cell\row
\cell uiout\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function print_inlined_frames_lite()\par}
{\s5\f1\fs20\ql\sb50\sa50 void print_inlined_frames_lite ( struct ui_out* uiout, int with_names, int* frame_num, CORE_ADDR pc, CORE_ADDR fp )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Calls: \cell do_cleanups()\cell utils.c\cell\row
\cell find_pc_sect_section()\cell objfiles.c\cell\row
\cell inlined_function_update_call_stack()\cell inlining.c\cell\row
\cell make_cleanup_ui_out_tuple_begin_end()\cell ui-out.c\cell\row
\cell ui_out_field_core_addr()\cell ui-out.c\cell\row
\cell ui_out_field_int()\cell ui-out.c\cell\row
\cell ui_out_field_string()\cell ui-out.c\cell\row
\cell ui_out_text()\cell ui-out.c\cell\row
\cell update_tmp_frame_stack()\cell inlining.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  __builtin___snprintf_chk(), __builtin_object_size(), strlen()\cell\cell\row
Refs Var:\cell global_inlined_call_stack\cell inlining.c\cell\row
\cell temp_frame_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function rest_of_line_contains_inlined_subroutine()\par}
{\s5\f1\fs20\ql\sb50\sa50 int rest_of_line_contains_inlined_subroutine ( CORE_ADDR* end_of_line )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Calls: \cell current_inlined_subroutine_stack_position()\cell inlining.c\cell\row
\cell find_line_pc()\cell symtab.c\cell\row
\cell find_pc_line()\cell symtab.c\cell\row
\cell rb_tree_find_all_nodes_in_between()\cell inlining.c\cell\row
\cell record_end_pc()\cell inlining.c\cell\row
Called by:\cell step_1_inlining()\cell infcmd.c\cell\row
\cell step_once()\cell infcmd.c\cell\row
Refs Var:\cell dwarf2_allow_inlined_stepping\cell dwarf2read.c\cell\row
\cell global_inlined_call_stack\cell inlining.c\cell\row
\cell stop_pc\cell infcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function restore_thread_inlined_call_stack()\par}
{\s5\f1\fs20\ql\sb50\sa50 void restore_thread_inlined_call_stack ( ptid_t ptid )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Calls: \cell find_thread_id()\cell thread.c\cell\row
\cell flush_inlined_subroutine_frames()\cell inlining.c\cell\row
\cell inlined_function_reinitialize_call_stack()\cell inlining.c\cell\row
\cell inlined_function_update_call_stack()\cell inlining.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell pid_to_thread_id()\cell thread.c\cell\row
\cell read_pc_pid()\cell regcache.c\cell\row
\cell  __builtin___memcpy_chk(), __builtin___memset_chk(), __builtin_object_size(), __inline_memcpy_chk(), __inline_memset_chk()\cell\cell\row
Called by:\cell load_infrun_state()\cell thread.c\cell\row
\cell switch_to_thread()\cell thread.c\cell\row
Refs Var:\cell global_inlined_call_stack\cell inlining.c\cell\row
\cell inlined_step_range_end\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function save_thread_inlined_call_stack()\par}
{\s5\f1\fs20\ql\sb50\sa50 void save_thread_inlined_call_stack ( ptid_t ptid )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Calls: \cell current_inlined_subroutine_stack_size()\cell inlining.c\cell\row
\cell find_thread_id()\cell thread.c\cell\row
\cell pid_to_thread_id()\cell thread.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  __builtin___memcpy_chk(), __builtin_object_size(), __inline_memcpy_chk()\cell\cell\row
Called by:\cell save_infrun_state()\cell thread.c\cell\row
\cell switch_to_thread()\cell thread.c\cell\row
Refs Var:\cell global_inlined_call_stack\cell inlining.c\cell\row
\cell inlined_step_range_end\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function step_into_current_inlined_subroutine()\par}
{\s5\f1\fs20\ql\sb50\sa50 void step_into_current_inlined_subroutine ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.h\cell\cell\row
Calls: \cell adjust_current_inlined_subroutine_stack_position()\cell inlining.c\cell\row
\cell current_inlined_subroutine_stack_position()\cell inlining.c\cell\row
Called by:\cell inlined_function_update_call_stack()\cell inlining.c\cell\row
\cell step_1_inlining()\cell infcmd.c\cell\row
\cell step_once()\cell infcmd.c\cell\row
Refs Var:\cell global_inlined_call_stack\cell inlining.c\cell\row
\cell stop_pc\cell infcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function add_item_to_inlined_subroutine_stack()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void add_item_to_inlined_subroutine_stack ( struct linetable_entry* item, struct symtab* s, struct bfd_section* section )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.c\cell\cell\row
Calls: \cell copy_inlined_call_stack_record()\cell inlining.c\cell\row
\cell find_function_names_and_address_ranges()\cell inlining.c\cell\row
\cell find_pc_symtab()\cell symtab.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell verify_stack()\cell inlining.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell xrealloc()\cell utils.c\cell\row
\cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk()\cell\cell\row
Called by:\cell inlined_function_update_call_stack()\cell inlining.c\cell\row
Refs Var:\cell global_inlined_call_stack\cell inlining.c\cell\row
\cell saved_call_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function add_item_to_temp_frame_stack()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void add_item_to_temp_frame_stack ( struct linetable_entry* item, struct symtab* s, struct bfd_section* section )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell copy_temp_frame_stack_record()\cell inlining.c\cell\row
\cell find_function_names_and_address_ranges()\cell inlining.c\cell\row
\cell find_pc_symtab()\cell symtab.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell xrealloc()\cell utils.c\cell\row
\cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk()\cell\cell\row
Called by:\cell update_tmp_frame_stack()\cell inlining.c\cell\row
Refs Var:\cell temp_frame_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function add_to_list()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void add_to_list ( struct inlined_call_stack_record* new_record, struct record_list** found_records )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell xmalloc()\cell utils.c\cell\row
Called by:\cell search_tree_for_name()\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function address_range_ending_pc()\par}
{\s5\f1\fs20\ql\sb50\sa50 static CORE_ADDR address_range_ending_pc ( struct address_range_list* ranges )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell find_pc_line()\cell symtab.c\cell\row
Called by:\cell in_inlined_function_call_p()\cell inlining.c\cell\row
\cell record_end_pc()\cell inlining.c\cell\row
\cell tmp_frame_in_inlined_function_call_p()\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function copy_inlined_call_stack_record()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void copy_inlined_call_stack_record ( int from, int to )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell internal_error()\cell utils.c\cell\row
\cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk()\cell\cell\row
Called by:\cell add_item_to_inlined_subroutine_stack()\cell inlining.c\cell\row
Refs Var:\cell global_inlined_call_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function copy_temp_frame_stack_record()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void copy_temp_frame_stack_record ( int from, int to )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell internal_error()\cell utils.c\cell\row
\cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk()\cell\cell\row
Called by:\cell add_item_to_temp_frame_stack()\cell inlining.c\cell\row
Refs Var:\cell temp_frame_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function current_tmp_frame_stack_position()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int current_tmp_frame_stack_position ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Called by:\cell inlined_frame_sniffer_helper()\cell inlining.c\cell\row
\cell tmp_frame_in_inlined_function_call_p()\cell inlining.c\cell\row
Refs Var:\cell temp_frame_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function find_correct_current_position()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int find_correct_current_position ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.c\cell\cell\row
Calls: \cell record_end_pc()\cell inlining.c\cell\row
\cell record_ranges_contains_pc()\cell inlining.c\cell\row
Called by:\cell inlined_function_update_call_stack()\cell inlining.c\cell\row
Refs Var:\cell global_inlined_call_stack\cell inlining.c\cell\row
\cell stop_pc\cell infcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function find_function_names_and_address_ranges()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void find_function_names_and_address_ranges ( struct objfile* objfile, struct inlined_call_stack_record* record )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.c\cell\cell\row
Calls: \cell rb_tree_find_all_matching_nodes()\cell inlining.c\cell\row
\cell xfree()\cell utils.c\cell\row
Called by:\cell add_item_to_inlined_subroutine_stack()\cell inlining.c\cell\row
\cell add_item_to_temp_frame_stack()\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function inlined_frame_sniffer_helper()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int inlined_frame_sniffer_helper ( struct frame_info* next_frame, CORE_ADDR pc )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell current_tmp_frame_stack_position()\cell inlining.c\cell\row
\cell tmp_frame_in_inlined_function_call_p()\cell inlining.c\cell\row
\cell update_tmp_frame_stack()\cell inlining.c\cell\row
Called by:\cell inlined_frame_sniffer()\cell inlining.c\cell\row
Refs Var:\cell temp_frame_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function inlined_function_address_ranges_properly_contained()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int inlined_function_address_ranges_properly_contained ( int outer, int inner )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Called by:\cell verify_stack()\cell inlining.c\cell\row
Refs Var:\cell global_inlined_call_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function insert_pending_node()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void insert_pending_node ( struct pending_node* node, struct pending_node** list )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.c\cell\cell\row
Called by:\cell inlined_function_update_call_stack()\cell inlining.c\cell\row
\cell update_tmp_frame_stack()\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function rb_tree_find_all_exact_matches()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void rb_tree_find_all_exact_matches ( struct rb_tree_node* root, CORE_ADDR key, CORE_ADDR third_key, struct rb_tree_node_list** matches )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.c\cell\cell\row
Calls: \cell rb_tree_find_all_exact_matches()\cell inlining.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
Called by:\cell block_inlined_function()\cell inlining.c\cell\row
\cell func_sym_is_inlined_function()\cell inlining.c\cell\row
\cell rb_tree_find_all_exact_matches()\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function rb_tree_find_all_matching_nodes()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void rb_tree_find_all_matching_nodes ( struct rb_tree_node* root, CORE_ADDR key, int secondary_key, CORE_ADDR third_key, struct rb_tree_node_list** matches )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell rb_tree_find_all_matching_nodes()\cell inlining.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
Called by:\cell find_function_names_and_address_ranges()\cell inlining.c\cell\row
\cell inlined_function_add_function_names()\cell inlining.c\cell\row
\cell rb_tree_find_all_matching_nodes()\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function rb_tree_find_all_nodes_in_between()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void rb_tree_find_all_nodes_in_between ( struct rb_tree_node* root, CORE_ADDR start, CORE_ADDR end, struct rb_tree_node_list** matches )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.c\cell\cell\row
Calls: \cell rb_tree_find_all_nodes_in_between()\cell inlining.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
Called by:\cell find_next_inlined_subroutine()\cell inlining.c\cell\row
\cell rb_tree_find_all_nodes_in_between()\cell inlining.c\cell\row
\cell rest_of_line_contains_inlined_subroutine()\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function rb_tree_find_next_node()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct rb_tree_node* rb_tree_find_next_node ( struct rb_tree_node* root, long long key, int secondary_key, long long third_key )\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function record_end_pc()\par}
{\s5\f1\fs20\ql\sb50\sa50 static CORE_ADDR record_end_pc ( struct inlined_call_stack_record record )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell address_range_ending_pc()\cell inlining.c\cell\row
Called by:\cell current_inlined_subroutine_call_stack_eof_pc()\cell inlining.c\cell\row
\cell find_correct_current_position()\cell inlining.c\cell\row
\cell inlined_frame_this_id()\cell inlining.c\cell\row
\cell inlined_function_end_of_inlined_code_p()\cell inlining.c\cell\row
\cell rest_of_line_contains_inlined_subroutine()\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function record_ranges_contains_pc()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int record_ranges_contains_pc ( int i, CORE_ADDR pc )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Called by:\cell find_correct_current_position()\cell inlining.c\cell\row
\cell in_inlined_function_call_p()\cell inlining.c\cell\row
\cell inlined_function_update_call_stack()\cell inlining.c\cell\row
Refs Var:\cell global_inlined_call_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function reset_saved_call_stack()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void reset_saved_call_stack ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk()\cell\cell\row
Called by:\cell inlined_function_reinitialize_call_stack()\cell inlining.c\cell\row
\cell inlined_subroutine_restore_after_dummy_call()\cell inlining.c\cell\row
Refs Var:\cell saved_call_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function reset_temp_frame_stack()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void reset_temp_frame_stack ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.c\cell\cell\row
Calls: \cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk()\cell\cell\row
Called by:\cell update_tmp_frame_stack()\cell inlining.c\cell\row
Refs Var:\cell temp_frame_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function search_tree_for_name()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void search_tree_for_name ( struct rb_tree_node* root, char* name, struct record_list** found_records )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell add_to_list()\cell inlining.c\cell\row
\cell search_tree_for_name()\cell inlining.c\cell\row
\cell  strcmp()\cell\cell\row
Called by:\cell check_for_additional_inlined_breakpoint_locations()\cell inlining.c\cell\row
\cell search_tree_for_name()\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function tmp_frame_in_inlined_function_call_p()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int tmp_frame_in_inlined_function_call_p ( CORE_ADDR cur_pc, CORE_ADDR* inline_end_pc )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell address_range_ending_pc()\cell inlining.c\cell\row
\cell current_tmp_frame_stack_position()\cell inlining.c\cell\row
\cell tmp_frame_record_ranges_contains_pc()\cell inlining.c\cell\row
Called by:\cell inlined_frame_sniffer_helper()\cell inlining.c\cell\row
Refs Var:\cell temp_frame_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function tmp_frame_record_ranges_contains_pc()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int tmp_frame_record_ranges_contains_pc ( int i, CORE_ADDR cur_pc )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Called by:\cell tmp_frame_in_inlined_function_call_p()\cell inlining.c\cell\row
Refs Var:\cell temp_frame_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function update_inlined_data_addresses()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void update_inlined_data_addresses ( CORE_ADDR offset, struct rb_tree_node* tree )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell update_inlined_data_addresses()\cell inlining.c\cell\row
Called by:\cell inlined_subroutine_objfile_relocate()\cell inlining.c\cell\row
\cell update_inlined_data_addresses()\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function update_tmp_frame_stack()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void update_tmp_frame_stack ( CORE_ADDR pc )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell add_item_to_temp_frame_stack()\cell inlining.c\cell\row
\cell find_pc_overlay()\cell symfile.c\cell\row
\cell find_pc_sect_symtab()\cell symtab.c\cell\row
\cell insert_pending_node()\cell inlining.c\cell\row
\cell overlay_mapped_address()\cell symfile.c\cell\row
\cell pc_in_unmapped_range()\cell symfile.c\cell\row
\cell reset_temp_frame_stack()\cell inlining.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
Called by:\cell inlined_frame_sniffer_helper()\cell inlining.c\cell\row
\cell print_inlined_frame()\cell inlining.c\cell\row
\cell print_inlined_frames_lite()\cell inlining.c\cell\row
Refs Var:\cell dwarf2_allow_inlined_stepping\cell dwarf2read.c\cell\row
\cell temp_frame_stack\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function verify_stack()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void verify_stack ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell inlining.c\cell\cell\row
Calls: \cell flush_cached_frames()\cell frame.c\cell\row
\cell inlined_function_address_ranges_properly_contained()\cell inlining.c\cell\row
\cell inlined_function_reinitialize_call_stack()\cell inlining.c\cell\row
\cell internal_error()\cell utils.c\cell\row
Called by:\cell add_item_to_inlined_subroutine_stack()\cell inlining.c\cell\row
Refs Var:\cell dwarf2_allow_inlined_stepping\cell dwarf2read.c\cell\row
\cell finishing_inlined_subroutine\cell infcmd.c\cell\row
\cell global_inlined_call_stack\cell inlining.c\cell\row
\cell inlined_step_range_end\cell inlining.c\cell\row
\cell stepping_into_inlined_subroutine\cell inlining.c\cell\row
\cell stepping_over_inlined_subroutine\cell infcmd.c\cell\row
\intbl0
}
