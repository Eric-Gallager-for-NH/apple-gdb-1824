{\rtf\ansi
\deff0
{\fonttbl
{\f0\froman Times New Roman;}
{\f1\fmodern Courier New;}
}
{\stylesheet
{\s0\f0\fs24 Normal;}
{\s1\f0\fs40\b\sb400\sa200\keepn\keep Heading 1;}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Heading 2;}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Heading 3;}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Heading 4;}
{\s5\f1\fs20\ql\sb50\sa50 Code;}
}
{\info{\comment
 This RTF file generated by cxref (version 1.6e).
 cxref program (c) Andrew M. Bishop 1995-2014.
 Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF cp-abi.c
 CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
}}
\paperw11880\paperh16848\margl1440\margr1440\margt1440\margb1440
\sectd\plain
\s0\f0\fs24
{\s1\f0\fs40\b\sb400\sa200\keepn\keep File cp-abi.c\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Included Files\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <errno.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <unistd.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_locale.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <locale.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../gdb/signals.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/symcat.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-file.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "xm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/xm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "nm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/i386/nm-i386.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/nm-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "tm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/tm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-tdep.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-tdep.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-thread-status.h"\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_types.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <inttypes.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_vm.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/kmod.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/tm-i386-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/fopen-bin.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdlib.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbarch.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/floatformat.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_regex.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbtypes.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "expression.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "cp-abi.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "command.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdbcmd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "command.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-out.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "ui-out.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_string.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Preprocessor definitions\par}
{\s5\f1\fs20\ql\sb50\sa50 #define CP_ABI_MAX 8\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Variables\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable current_cp_abi\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct cp_abi_ops current_cp_abi\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell baseclass_offset()\cell\cell\row
\cell cp_abi_is_auto_p()\cell\cell\row
\cell is_constructor_name()\cell\cell\row
\cell is_destructor_name()\cell\cell\row
\cell is_operator_name()\cell\cell\row
\cell is_vtable_name()\cell\cell\row
\cell set_cp_abi_as_auto_default()\cell\cell\row
\cell show_cp_abi_cmd()\cell\cell\row
\cell switch_to_cp_abi()\cell\cell\row
\cell value_rtti_type()\cell\cell\row
\cell value_virtual_fn_field()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable auto_cp_abi\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct cp_abi_ops auto_cp_abi\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_cp_abi()\cell\cell\row
\cell set_cp_abi_as_auto_default()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable cp_abis\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct cp_abi_ops* cp_abis[8]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell find_cp_abi()\cell\cell\row
\cell list_cp_abis()\cell\cell\row
\cell register_cp_abi()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable num_cp_abis\par}
{\s5\f1\fs20\ql\sb50\sa50 static int num_cp_abis\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell find_cp_abi()\cell\cell\row
\cell list_cp_abis()\cell\cell\row
\cell register_cp_abi()\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Functions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function _initialize_cp_abi()\par}
{\s5\f1\fs20\ql\sb50\sa50 void _initialize_cp_abi ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cp-abi.c\cell\cell\row
Calls: \cell register_cp_abi()\cell cp-abi.c\cell\row
\cell switch_to_cp_abi()\cell cp-abi.c\cell\row
\cell  add_cmd()\cell\cell\row
Refs Func:\cell set_cp_abi_cmd()\cell cp-abi.c\cell\row
\cell show_cp_abi_cmd()\cell cp-abi.c\cell\row
Refs Var:\cell auto_cp_abi\cell cp-abi.c\cell\row
\cell  setlist, showlist\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function baseclass_offset()\par}
{\s5\f1\fs20\ql\sb50\sa50 int baseclass_offset ( struct type* type, int index, const bfd_byte* valaddr, CORE_ADDR address )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cp-abi.h\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
Called by:\cell cp_print_value()\cell cp-valprint.c\cell\row
\cell find_method_list()\cell valops.c\cell\row
\cell gnuv2_baseclass_offset()\cell gnu-v2-abi.c\cell\row
\cell pascal_object_print_value()\cell p-valprint.c\cell\row
\cell search_struct_field()\cell valops.c\cell\row
\cell search_struct_method()\cell valops.c\cell\row
Refs Var:\cell current_cp_abi\cell cp-abi.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function cp_abi_is_auto_p()\par}
{\s5\f1\fs20\ql\sb50\sa50 int cp_abi_is_auto_p ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cp-abi.h\cell\cell\row
Calls: \cell  strcmp()\cell\cell\row
Called by:\cell install_minimal_symbols()\cell minsyms.c\cell\row
Refs Var:\cell current_cp_abi\cell cp-abi.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function is_constructor_name()\par}
{\s5\f1\fs20\ql\sb50\sa50 enum ctor_kinds is_constructor_name ( const char* name )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cp-abi.h\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
Called by:\cell add_constructors()\cell linespec.c\cell\row
\cell c_type_print_base()\cell c-typeprint.c\cell\row
\cell gdb_mangle_name()\cell symtab.c\cell\row
\cell java_type_print_base()\cell jv-typeprint.c\cell\row
Refs Var:\cell current_cp_abi\cell cp-abi.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function is_destructor_name()\par}
{\s5\f1\fs20\ql\sb50\sa50 enum dtor_kinds is_destructor_name ( const char* name )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cp-abi.h\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
Called by:\cell add_matching_methods()\cell linespec.c\cell\row
\cell c_type_print_base()\cell c-typeprint.c\cell\row
\cell gdb_mangle_name()\cell symtab.c\cell\row
\cell get_destructor_fn_field()\cell gdbtypes.c\cell\row
\cell java_type_print_base()\cell jv-typeprint.c\cell\row
\cell read_member_functions()\cell stabsread.c\cell\row
Refs Var:\cell current_cp_abi\cell cp-abi.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function is_operator_name()\par}
{\s5\f1\fs20\ql\sb50\sa50 int is_operator_name ( const char* name )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cp-abi.h\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
Called by:\cell find_method()\cell linespec.c\cell\row
\cell gdb_mangle_name()\cell symtab.c\cell\row
Refs Var:\cell current_cp_abi\cell cp-abi.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function is_vtable_name()\par}
{\s5\f1\fs20\ql\sb50\sa50 int is_vtable_name ( const char* name )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cp-abi.h\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
Called by:\cell gnuv2_value_rtti_type()\cell gnu-v2-abi.c\cell\row
\cell record_minimal_symbol()\cell dbxread.c\cell\row
Refs Var:\cell current_cp_abi\cell cp-abi.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function register_cp_abi()\par}
{\s5\f1\fs20\ql\sb50\sa50 int register_cp_abi ( struct cp_abi_ops* abi )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cp-abi.h\cell\cell\row
Calls: \cell internal_error()\cell utils.c\cell\row
Called by:\cell _initialize_cp_abi()\cell cp-abi.c\cell\row
\cell _initialize_gnu_v2_abi()\cell gnu-v2-abi.c\cell\row
\cell _initialize_gnu_v3_abi()\cell gnu-v3-abi.c\cell\row
\cell _initialize_hpacc_abi()\cell hpacc-abi.c\cell\row
Refs Var:\cell cp_abis\cell cp-abi.c\cell\row
\cell num_cp_abis\cell cp-abi.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function set_cp_abi_as_auto_default()\par}
{\s5\f1\fs20\ql\sb50\sa50 void set_cp_abi_as_auto_default ( const char* short_name )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cp-abi.h\cell\cell\row
Calls: \cell find_cp_abi()\cell cp-abi.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell switch_to_cp_abi()\cell cp-abi.c\cell\row
\cell xasprintf()\cell utils.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell  strcmp()\cell\cell\row
Called by:\cell _initialize_gnu_v2_abi()\cell gnu-v2-abi.c\cell\row
\cell install_minimal_symbols()\cell minsyms.c\cell\row
Refs Var:\cell auto_cp_abi\cell cp-abi.c\cell\row
\cell current_cp_abi\cell cp-abi.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function value_rtti_type()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct type* value_rtti_type ( struct value* v, int* full, int* top, int* using_enc )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cp-abi.h\cell\cell\row
Called by:\cell c_value_print()\cell c-valprint.c\cell\row
\cell value_full_object()\cell valops.c\cell\row
\cell value_rtti_target_type()\cell valops.c\cell\row
\cell whatis_exp()\cell typeprint.c\cell\row
Refs Var:\cell current_cp_abi\cell cp-abi.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function value_virtual_fn_field()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct value* value_virtual_fn_field ( struct value** arg1p, struct fn_field* f, int j, struct type* type, int offset )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cp-abi.h\cell\cell\row
Called by:\cell evaluate_subexp_standard()\cell eval.c\cell\row
\cell find_overload_match()\cell valops.c\cell\row
\cell search_struct_method()\cell valops.c\cell\row
Refs Var:\cell current_cp_abi\cell cp-abi.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function find_cp_abi()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct cp_abi_ops* find_cp_abi ( const char* short_name )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cp-abi.c\cell\cell\row
Calls: \cell  strcmp()\cell\cell\row
Called by:\cell set_cp_abi_as_auto_default()\cell cp-abi.c\cell\row
\cell switch_to_cp_abi()\cell cp-abi.c\cell\row
Refs Var:\cell cp_abis\cell cp-abi.c\cell\row
\cell num_cp_abis\cell cp-abi.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function list_cp_abis()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void list_cp_abis ( int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell do_cleanups()\cell utils.c\cell\row
\cell make_cleanup_ui_out_tuple_begin_end()\cell ui-out.c\cell\row
\cell ui_out_field_string()\cell ui-out.c\cell\row
\cell ui_out_text()\cell ui-out.c\cell\row
\cell  strlen()\cell\cell\row
Called by:\cell set_cp_abi_cmd()\cell cp-abi.c\cell\row
Refs Var:\cell cp_abis\cell cp-abi.c\cell\row
\cell num_cp_abis\cell cp-abi.c\cell\row
\cell uiout\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_cp_abi_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void set_cp_abi_cmd ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell error()\cell utils.c\cell\row
\cell list_cp_abis()\cell cp-abi.c\cell\row
\cell switch_to_cp_abi()\cell cp-abi.c\cell\row
Used in:\cell _initialize_cp_abi()\cell cp-abi.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_cp_abi_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_cp_abi_cmd ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell ui_out_field_string()\cell ui-out.c\cell\row
\cell ui_out_text()\cell ui-out.c\cell\row
Used in:\cell _initialize_cp_abi()\cell cp-abi.c\cell\row
Refs Var:\cell current_cp_abi\cell cp-abi.c\cell\row
\cell uiout\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function switch_to_cp_abi()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int switch_to_cp_abi ( const char* short_name )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell find_cp_abi()\cell cp-abi.c\cell\row
Called by:\cell _initialize_cp_abi()\cell cp-abi.c\cell\row
\cell set_cp_abi_as_auto_default()\cell cp-abi.c\cell\row
\cell set_cp_abi_cmd()\cell cp-abi.c\cell\row
Refs Var:\cell current_cp_abi\cell cp-abi.c\cell\row
\intbl0
}
