{\rtf\ansi
\deff0
{\fonttbl
{\f0\froman Times New Roman;}
{\f1\fmodern Courier New;}
}
{\stylesheet
{\s0\f0\fs24 Normal;}
{\s1\f0\fs40\b\sb400\sa200\keepn\keep Heading 1;}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Heading 2;}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Heading 3;}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Heading 4;}
{\s5\f1\fs20\ql\sb50\sa50 Code;}
}
{\info{\comment
 This RTF file generated by cxref (version 1.6e).
 cxref program (c) Andrew M. Bishop 1995-2014.
 Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF charset.c
 CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
}}
\paperw11880\paperh16848\margl1440\margr1440\margt1440\margb1440
\sectd\plain
\s0\f0\fs24
{\s1\f0\fs40\b\sb400\sa200\keepn\keep File charset.c\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Included Files\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <errno.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <unistd.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_locale.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <locale.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../gdb/signals.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/symcat.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-file.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "xm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/xm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "nm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/i386/nm-i386.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/nm-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "tm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/tm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-tdep.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-tdep.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-thread-status.h"\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_types.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <inttypes.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_vm.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/kmod.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/tm-i386-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/fopen-bin.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdlib.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbarch.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "charset.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdbcmd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "command.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-out.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_assert.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_string.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <ctype.h>\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Preprocessor definitions\par}
{\s5\f1\fs20\ql\sb50\sa50 #define GDB_DEFAULT_HOST_CHARSET "UTF-8"\par}
{\s5\f1\fs20\ql\sb50\sa50 #define GDB_DEFAULT_TARGET_CHARSET "UTF-8"\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Type definitions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct charset\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct charset}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct charset* next;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 const char* name;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int valid_host_charset;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int (*host_char_print_literally)(void* baton,int host_char);}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 void* host_char_print_literally_baton;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int (*target_char_to_control_char)(void* baton,int target_char,int* target_ctrl_char);}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 void* target_char_to_control_char_baton;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct translation\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct translation}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct translation* next;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 const char* from;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 const char* to;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 const char* (*c_target_char_has_backslash_escape)(void* baton,int target_char);}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 void* c_target_char_has_backslash_escape_baton;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int (*c_parse_backslash)(void* baton,int host_char,int* target_char);}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 void* c_parse_backslash_baton;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int (*convert_char)(void* baton,int from,int* to);}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 void* convert_char_baton;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct cached_iconv\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct cached_iconv}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 char nothing;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Variables\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable host_charset_name\par}
{\s5\f1\fs20\ql\sb50\sa50 static const char* host_charset_name\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_charset()\cell\cell\row
\cell set_charset_sfunc()\cell\cell\row
\cell set_host_charset_sfunc()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable target_charset_name\par}
{\s5\f1\fs20\ql\sb50\sa50 static const char* target_charset_name\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_charset()\cell\cell\row
\cell set_charset_sfunc()\cell\cell\row
\cell set_target_charset_sfunc()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable host_charset_enum\par}
{\s5\f1\fs20\ql\sb50\sa50 static const char* host_charset_enum[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_charset()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable target_charset_enum\par}
{\s5\f1\fs20\ql\sb50\sa50 static const char* target_charset_enum[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_charset()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable all_charsets\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct charset* all_charsets\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell lookup_charset()\cell\cell\row
\cell register_charset()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable all_translations\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct translation* all_translations\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell lookup_translation()\cell\cell\row
\cell register_translation()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable backslashable\par}
{\s5\f1\fs20\ql\sb50\sa50 static char backslashable[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell default_c_parse_backslash()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable backslashed\par}
{\s5\f1\fs20\ql\sb50\sa50 static const char* backslashed[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell default_c_target_char_has_backslash_escape()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable represented\par}
{\s5\f1\fs20\ql\sb50\sa50 static char represented[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell default_c_parse_backslash()\cell\cell\row
\cell default_c_target_char_has_backslash_escape()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable ascii_to_iso_8859_1_table\par}
{\s5\f1\fs20\ql\sb50\sa50 static int ascii_to_iso_8859_1_table[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_charset()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable ascii_to_ebcdic_us_table\par}
{\s5\f1\fs20\ql\sb50\sa50 static int ascii_to_ebcdic_us_table[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_charset()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable ascii_to_ibm1047_table\par}
{\s5\f1\fs20\ql\sb50\sa50 static int ascii_to_ibm1047_table[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_charset()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable iso_8859_1_to_ascii_table\par}
{\s5\f1\fs20\ql\sb50\sa50 static int iso_8859_1_to_ascii_table[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_charset()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable iso_8859_1_to_ebcdic_us_table\par}
{\s5\f1\fs20\ql\sb50\sa50 static int iso_8859_1_to_ebcdic_us_table[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_charset()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable iso_8859_1_to_ibm1047_table\par}
{\s5\f1\fs20\ql\sb50\sa50 static int iso_8859_1_to_ibm1047_table[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_charset()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable ebcdic_us_to_ascii_table\par}
{\s5\f1\fs20\ql\sb50\sa50 static int ebcdic_us_to_ascii_table[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_charset()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable ebcdic_us_to_iso_8859_1_table\par}
{\s5\f1\fs20\ql\sb50\sa50 static int ebcdic_us_to_iso_8859_1_table[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_charset()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable ebcdic_us_to_ibm1047_table\par}
{\s5\f1\fs20\ql\sb50\sa50 static int ebcdic_us_to_ibm1047_table[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_charset()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable ibm1047_to_ascii_table\par}
{\s5\f1\fs20\ql\sb50\sa50 static int ibm1047_to_ascii_table[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_charset()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable ibm1047_to_iso_8859_1_table\par}
{\s5\f1\fs20\ql\sb50\sa50 static int ibm1047_to_iso_8859_1_table[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_charset()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable ibm1047_to_ebcdic_us_table\par}
{\s5\f1\fs20\ql\sb50\sa50 static int ibm1047_to_ebcdic_us_table[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_charset()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable current_host_charset\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct charset* current_host_charset\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell host_char_print_literally()\cell\cell\row
\cell host_charset()\cell\cell\row
\cell set_host_and_target_charsets()\cell\cell\row
\cell set_target_charset()\cell\cell\row
\cell show_charset()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable current_target_charset\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct charset* current_target_charset\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell set_host_and_target_charsets()\cell\cell\row
\cell set_host_charset()\cell\cell\row
\cell show_charset()\cell\cell\row
\cell target_char_to_control_char()\cell\cell\row
\cell target_charset()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable c_target_char_has_backslash_escape_func\par}
{\s5\f1\fs20\ql\sb50\sa50 static const char* (*c_target_char_has_backslash_escape_func)(void* baton,int target_char)\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell c_target_char_has_backslash_escape()\cell\cell\row
\cell set_host_and_target_charsets()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable c_target_char_has_backslash_escape_baton\par}
{\s5\f1\fs20\ql\sb50\sa50 static void* c_target_char_has_backslash_escape_baton\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell c_target_char_has_backslash_escape()\cell\cell\row
\cell set_host_and_target_charsets()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable c_parse_backslash_func\par}
{\s5\f1\fs20\ql\sb50\sa50 static int (*c_parse_backslash_func)(void* baton,int host_char,int* target_char)\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell c_parse_backslash()\cell\cell\row
\cell set_host_and_target_charsets()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable c_parse_backslash_baton\par}
{\s5\f1\fs20\ql\sb50\sa50 static void* c_parse_backslash_baton\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell c_parse_backslash()\cell\cell\row
\cell set_host_and_target_charsets()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable host_char_to_target_func\par}
{\s5\f1\fs20\ql\sb50\sa50 static int (*host_char_to_target_func)(void* baton,int host_char,int* target_char)\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell host_char_to_target()\cell\cell\row
\cell set_host_and_target_charsets()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable host_char_to_target_baton\par}
{\s5\f1\fs20\ql\sb50\sa50 static void* host_char_to_target_baton\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell host_char_to_target()\cell\cell\row
\cell set_host_and_target_charsets()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable target_char_to_host_func\par}
{\s5\f1\fs20\ql\sb50\sa50 static int (*target_char_to_host_func)(void* baton,int target_char,int* host_char)\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell set_host_and_target_charsets()\cell\cell\row
\cell target_char_to_host()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable target_char_to_host_baton\par}
{\s5\f1\fs20\ql\sb50\sa50 static void* target_char_to_host_baton\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell set_host_and_target_charsets()\cell\cell\row
\cell target_char_to_host()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable cached_iconv_host_to_target\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct cached_iconv cached_iconv_host_to_target\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell set_host_and_target_charsets()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable cached_iconv_target_to_host\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct cached_iconv cached_iconv_target_to_host\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell set_host_and_target_charsets()\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Functions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function _initialize_charset()\par}
{\s5\f1\fs20\ql\sb50\sa50 void _initialize_charset ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell charset.c\cell\cell\row
Calls: \cell ebcdic_family_charset()\cell charset.c\cell\row
\cell iso_8859_family_charset()\cell charset.c\cell\row
\cell register_charset()\cell charset.c\cell\row
\cell register_iconv_charsets()\cell charset.c\cell\row
\cell register_translation()\cell charset.c\cell\row
\cell set_host_charset()\cell charset.c\cell\row
\cell set_target_charset()\cell charset.c\cell\row
\cell simple_charset()\cell charset.c\cell\row
\cell simple_table_translation()\cell charset.c\cell\row
\cell utf_8_family_charset()\cell charset.c\cell\row
\cell  add_setshow_enum_cmd()\cell\cell\row
Refs Func:\cell ascii_print_literally()\cell charset.c\cell\row
\cell ascii_to_control()\cell charset.c\cell\row
\cell set_charset_sfunc()\cell charset.c\cell\row
\cell set_host_charset_sfunc()\cell charset.c\cell\row
\cell set_target_charset_sfunc()\cell charset.c\cell\row
\cell show_charset()\cell charset.c\cell\row
\cell show_host_charset_name()\cell charset.c\cell\row
\cell show_target_charset_name()\cell charset.c\cell\row
Refs Var:\cell ascii_to_ebcdic_us_table\cell charset.c\cell\row
\cell ascii_to_ibm1047_table\cell charset.c\cell\row
\cell ascii_to_iso_8859_1_table\cell charset.c\cell\row
\cell ebcdic_us_to_ascii_table\cell charset.c\cell\row
\cell ebcdic_us_to_ibm1047_table\cell charset.c\cell\row
\cell ebcdic_us_to_iso_8859_1_table\cell charset.c\cell\row
\cell host_charset_enum\cell charset.c\cell\row
\cell host_charset_name\cell charset.c\cell\row
\cell ibm1047_to_ascii_table\cell charset.c\cell\row
\cell ibm1047_to_ebcdic_us_table\cell charset.c\cell\row
\cell ibm1047_to_iso_8859_1_table\cell charset.c\cell\row
\cell iso_8859_1_to_ascii_table\cell charset.c\cell\row
\cell iso_8859_1_to_ebcdic_us_table\cell charset.c\cell\row
\cell iso_8859_1_to_ibm1047_table\cell charset.c\cell\row
\cell target_charset_enum\cell charset.c\cell\row
\cell target_charset_name\cell charset.c\cell\row
\cell  setlist, showlist\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function c_parse_backslash()\par}
{\s5\f1\fs20\ql\sb50\sa50 int c_parse_backslash ( int host_char, int* target_char )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell charset.h\cell\cell\row
Called by:\cell parse_escape()\cell utils.c\cell\row
Refs Var:\cell c_parse_backslash_baton\cell charset.c\cell\row
\cell c_parse_backslash_func\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function c_target_char_has_backslash_escape()\par}
{\s5\f1\fs20\ql\sb50\sa50 const char* c_target_char_has_backslash_escape ( int target_char )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell charset.h\cell\cell\row
Called by:\cell c_emit_char()\cell c-lang.c\cell\row
Refs Var:\cell c_target_char_has_backslash_escape_baton\cell charset.c\cell\row
\cell c_target_char_has_backslash_escape_func\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function host_char_print_literally()\par}
{\s5\f1\fs20\ql\sb50\sa50 int host_char_print_literally ( int host_char )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell charset.h\cell\cell\row
Called by:\cell c_emit_char()\cell c-lang.c\cell\row
Refs Var:\cell current_host_charset\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function host_char_to_target()\par}
{\s5\f1\fs20\ql\sb50\sa50 int host_char_to_target ( int host_char, int* target_char )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell charset.h\cell\cell\row
Called by:\cell c_lex()\cell c-exp.c\cell\row
\cell default_c_parse_backslash()\cell charset.c\cell\row
\cell parse_escape()\cell utils.c\cell\row
Refs Var:\cell host_char_to_target_baton\cell charset.c\cell\row
\cell host_char_to_target_func\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function host_charset()\par}
{\s5\f1\fs20\ql\sb50\sa50 const char* host_charset ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell charset.h\cell\cell\row
Called by:\cell parse_escape()\cell utils.c\cell\row
\cell show_charset()\cell charset.c\cell\row
Refs Var:\cell current_host_charset\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function target_char_to_control_char()\par}
{\s5\f1\fs20\ql\sb50\sa50 int target_char_to_control_char ( int target_char, int* target_ctrl_char )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell charset.h\cell\cell\row
Called by:\cell parse_escape()\cell utils.c\cell\row
Refs Var:\cell current_target_charset\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function target_char_to_host()\par}
{\s5\f1\fs20\ql\sb50\sa50 int target_char_to_host ( int target_char, int* host_char )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell charset.h\cell\cell\row
Called by:\cell c_emit_char()\cell c-lang.c\cell\row
\cell default_c_target_char_has_backslash_escape()\cell charset.c\cell\row
Refs Var:\cell target_char_to_host_baton\cell charset.c\cell\row
\cell target_char_to_host_func\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function target_charset()\par}
{\s5\f1\fs20\ql\sb50\sa50 const char* target_charset ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell charset.h\cell\cell\row
Called by:\cell c_lex()\cell c-exp.c\cell\row
\cell no_control_char_error()\cell utils.c\cell\row
\cell parse_escape()\cell utils.c\cell\row
\cell show_charset()\cell charset.c\cell\row
Refs Var:\cell current_target_charset\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function ascii_print_literally()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int ascii_print_literally ( void* baton, int c )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_charset()\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function ascii_to_control()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int ascii_to_control ( void* baton, int c, int* ctrl_char )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_charset()\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function cached_iconv_convert()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int cached_iconv_convert ( struct cached_iconv* ci, int from_char, int* to_char )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell internal_error()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function check_iconv_cache()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int check_iconv_cache ( struct cached_iconv* ci, struct charset* from, struct charset* to )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell  __error()\cell\cell\row
Called by:\cell set_host_and_target_charsets()\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function check_valid_host_charset()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void check_valid_host_charset ( struct charset* cs )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell error()\cell utils.c\cell\row
Called by:\cell set_charset_sfunc()\cell charset.c\cell\row
\cell set_host_charset()\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function default_c_parse_backslash()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int default_c_parse_backslash ( void* baton, int host_char, int* target_char )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell host_char_to_target()\cell charset.c\cell\row
\cell  strchr()\cell\cell\row
Used in:\cell set_host_and_target_charsets()\cell charset.c\cell\row
Refs Var:\cell backslashable\cell charset.c\cell\row
\cell represented\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function default_c_target_char_has_backslash_escape()\par}
{\s5\f1\fs20\ql\sb50\sa50 static const char* default_c_target_char_has_backslash_escape ( void* baton, int target_char )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell target_char_to_host()\cell charset.c\cell\row
\cell  strchr()\cell\cell\row
Used in:\cell set_host_and_target_charsets()\cell charset.c\cell\row
Refs Var:\cell backslashed\cell charset.c\cell\row
\cell represented\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function ebcdic_family_charset()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct charset* ebcdic_family_charset ( const char* name )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell simple_charset()\cell charset.c\cell\row
Called by:\cell _initialize_charset()\cell charset.c\cell\row
Refs Func:\cell ebcdic_print_literally()\cell charset.c\cell\row
\cell ebcdic_to_control()\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function ebcdic_print_literally()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int ebcdic_print_literally ( void* baton, int c )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell ebcdic_family_charset()\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function ebcdic_to_control()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int ebcdic_to_control ( void* baton, int c, int* ctrl_char )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell ebcdic_family_charset()\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function iconv_convert()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int iconv_convert ( void* baton, int from_char, int* to_char )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell warning()\cell utils.c\cell\row
Used in:\cell set_host_and_target_charsets()\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function identity_either_char_to_other()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int identity_either_char_to_other ( void* baton, int either_char, int* other_char )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell set_host_and_target_charsets()\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function iso_8859_family_charset()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct charset* iso_8859_family_charset ( const char* name )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell simple_charset()\cell charset.c\cell\row
Called by:\cell _initialize_charset()\cell charset.c\cell\row
Refs Func:\cell iso_8859_print_literally()\cell charset.c\cell\row
\cell iso_8859_to_control()\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function iso_8859_print_literally()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int iso_8859_print_literally ( void* baton, int c )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell iso_8859_family_charset()\cell charset.c\cell\row
Refs Var:\cell sevenbit_strings\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function iso_8859_to_control()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int iso_8859_to_control ( void* baton, int c, int* ctrl_char )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell iso_8859_family_charset()\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function lookup_charset()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct charset* lookup_charset ( const char* name )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell  strcmp()\cell\cell\row
Called by:\cell lookup_charset_or_error()\cell charset.c\cell\row
Refs Var:\cell all_charsets\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function lookup_charset_or_error()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct charset* lookup_charset_or_error ( const char* name )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell error()\cell utils.c\cell\row
\cell lookup_charset()\cell charset.c\cell\row
Called by:\cell set_charset_sfunc()\cell charset.c\cell\row
\cell set_host_charset()\cell charset.c\cell\row
\cell set_target_charset()\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function lookup_translation()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct translation* lookup_translation ( const char* from, const char* to )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell  strcmp()\cell\cell\row
Called by:\cell set_host_and_target_charsets()\cell charset.c\cell\row
Refs Var:\cell all_translations\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function register_charset()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void register_charset ( struct charset* cs )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Called by:\cell _initialize_charset()\cell charset.c\cell\row
Refs Var:\cell all_charsets\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function register_iconv_charsets()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void register_iconv_charsets ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Called by:\cell _initialize_charset()\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function register_translation()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void register_translation ( struct translation* t )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Called by:\cell _initialize_charset()\cell charset.c\cell\row
Refs Var:\cell all_translations\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_charset_sfunc()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void set_charset_sfunc ( const char* charset, int from_tty, struct cmd_list_element* c )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell check_valid_host_charset()\cell charset.c\cell\row
\cell lookup_charset_or_error()\cell charset.c\cell\row
\cell set_host_and_target_charsets()\cell charset.c\cell\row
Used in:\cell _initialize_charset()\cell charset.c\cell\row
Refs Var:\cell host_charset_name\cell charset.c\cell\row
\cell target_charset_name\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_host_and_target_charsets()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void set_host_and_target_charsets ( struct charset* host, struct charset* target )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell check_iconv_cache()\cell charset.c\cell\row
\cell error()\cell utils.c\cell\row
\cell lookup_translation()\cell charset.c\cell\row
Called by:\cell set_charset_sfunc()\cell charset.c\cell\row
\cell set_host_charset()\cell charset.c\cell\row
\cell set_target_charset()\cell charset.c\cell\row
Refs Func:\cell default_c_parse_backslash()\cell charset.c\cell\row
\cell default_c_target_char_has_backslash_escape()\cell charset.c\cell\row
\cell iconv_convert()\cell charset.c\cell\row
\cell identity_either_char_to_other()\cell charset.c\cell\row
Refs Var:\cell c_parse_backslash_baton\cell charset.c\cell\row
\cell c_parse_backslash_func\cell charset.c\cell\row
\cell c_target_char_has_backslash_escape_baton\cell charset.c\cell\row
\cell c_target_char_has_backslash_escape_func\cell charset.c\cell\row
\cell cached_iconv_host_to_target\cell charset.c\cell\row
\cell cached_iconv_target_to_host\cell charset.c\cell\row
\cell current_host_charset\cell charset.c\cell\row
\cell current_target_charset\cell charset.c\cell\row
\cell host_char_to_target_baton\cell charset.c\cell\row
\cell host_char_to_target_func\cell charset.c\cell\row
\cell target_char_to_host_baton\cell charset.c\cell\row
\cell target_char_to_host_func\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_host_charset()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void set_host_charset ( const char* charset )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell check_valid_host_charset()\cell charset.c\cell\row
\cell lookup_charset_or_error()\cell charset.c\cell\row
\cell set_host_and_target_charsets()\cell charset.c\cell\row
Called by:\cell _initialize_charset()\cell charset.c\cell\row
\cell set_host_charset_sfunc()\cell charset.c\cell\row
Refs Var:\cell current_target_charset\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_host_charset_sfunc()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void set_host_charset_sfunc ( const char* charset, int from_tty, struct cmd_list_element* c )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell set_host_charset()\cell charset.c\cell\row
Used in:\cell _initialize_charset()\cell charset.c\cell\row
Refs Var:\cell host_charset_name\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_target_charset()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void set_target_charset ( const char* charset )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell lookup_charset_or_error()\cell charset.c\cell\row
\cell set_host_and_target_charsets()\cell charset.c\cell\row
Called by:\cell _initialize_charset()\cell charset.c\cell\row
\cell set_target_charset_sfunc()\cell charset.c\cell\row
Refs Var:\cell current_host_charset\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_target_charset_sfunc()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void set_target_charset_sfunc ( const char* charset, int from_tty, struct cmd_list_element* c )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell set_target_charset()\cell charset.c\cell\row
Used in:\cell _initialize_charset()\cell charset.c\cell\row
Refs Var:\cell target_charset_name\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_charset()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_charset ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* name )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell fprintf_filtered()\cell utils.c\cell\row
\cell host_charset()\cell charset.c\cell\row
\cell target_charset()\cell charset.c\cell\row
Used in:\cell _initialize_charset()\cell charset.c\cell\row
Refs Var:\cell current_host_charset\cell charset.c\cell\row
\cell current_target_charset\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_host_charset_name()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_host_charset_name ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell fprintf_filtered()\cell utils.c\cell\row
Used in:\cell _initialize_charset()\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_target_charset_name()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_target_charset_name ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell fprintf_filtered()\cell utils.c\cell\row
Used in:\cell _initialize_charset()\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function simple_charset()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct charset* simple_charset ( const char* name, int valid_host_charset, int (*host_char_print_literally)(void* baton,int host_char), void* host_char_print_literally_baton, int (*target_char_to_control_char)(void* baton,int target_char,int* target_ctrl_char), void* target_char_to_control_char_baton )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell xmalloc()\cell utils.c\cell\row
\cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk()\cell\cell\row
Called by:\cell _initialize_charset()\cell charset.c\cell\row
\cell ebcdic_family_charset()\cell charset.c\cell\row
\cell iso_8859_family_charset()\cell charset.c\cell\row
\cell utf_8_family_charset()\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function simple_table_translation()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct translation* simple_table_translation ( const char* from, const char* to, int* table )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell table_translation()\cell charset.c\cell\row
Called by:\cell _initialize_charset()\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function table_convert_char()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int table_convert_char ( void* baton, int from, int* to )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell table_translation()\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function table_translation()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct translation* table_translation ( const char* from, const char* to, int* table, const char* (*c_target_char_has_backslash_escape)(void* baton,int target_char), void* c_target_char_has_backslash_escape_baton, int (*c_parse_backslash)(void* baton,int host_char,int* target_char), void* c_parse_backslash_baton )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell xmalloc()\cell utils.c\cell\row
\cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk()\cell\cell\row
Called by:\cell simple_table_translation()\cell charset.c\cell\row
Refs Func:\cell table_convert_char()\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function utf_8_family_charset()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct charset* utf_8_family_charset ( const char* name )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell simple_charset()\cell charset.c\cell\row
Called by:\cell _initialize_charset()\cell charset.c\cell\row
Refs Func:\cell utf_8_print_literally()\cell charset.c\cell\row
\cell utf_8_to_control()\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function utf_8_print_literally()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int utf_8_print_literally ( void* baton, int c )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell utf_8_family_charset()\cell charset.c\cell\row
Refs Var:\cell sevenbit_strings\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function utf_8_to_control()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int utf_8_to_control ( void* baton, int c, int* ctrl_char )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell utf_8_family_charset()\cell charset.c\cell\row
\intbl0
}
