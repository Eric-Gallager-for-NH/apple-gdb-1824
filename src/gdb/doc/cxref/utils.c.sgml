<!DOCTYPE LINUXDOC SYSTEM>

<!-- This SGML file generated by cxref (version 1.6e). -->
<!-- cxref program (c) Andrew M. Bishop 1995-2014. -->

<!--
Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF utils.c
CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
-->

<article>

<title>Cross reference for utils.c of gdb.cxref.
<author>cxref

<sect>File utils.c

<sect1>Included Files

<p>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<itemize>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
<item><tt>#include &lt;sys/time.h&gt;</tt>
<item><tt>#include &lt;time.h&gt;</tt>
<item><tt>#include &lt;sys/types.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
<item><tt>#include &lt;errno.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
<item><tt>#include &lt;regex.h&gt;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;unistd.h&gt;</tt>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;gdb_locale.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<item><tt>#include &lt;locale.h&gt;</tt>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../gdb/signals.h&quot;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &quot;../include/libiberty.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/symcat.h&quot;</tt>
</itemize>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
<item><tt>#include &quot;ui-file.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;xm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/xm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &lt;mach/mach.h&gt;</tt>
<item><tt>#include &lt;signal.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;nm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/i386/nm-i386.h&quot;</tt>
<item><tt>#include &quot;macosx/nm-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;tm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/tm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;macosx/i386-macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/i386-macosx-thread-status.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &lt;mach/mach_types.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
<item><tt>#include &lt;inttypes.h&gt;</tt>
<item><tt>#include &lt;mach/mach_vm.h&gt;</tt>
<item><tt>#include &lt;mach/kmod.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;macosx/tm-i386-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;../include/fopen-bin.h&quot;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdlib.h&gt;</tt>
<item><tt>#include &quot;gdbarch.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_assert.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &lt;ctype.h&gt;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_string.h&quot;</tt>
<itemize>
<item><tt>#include &lt;string.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;event-top.h&quot;</tt>
<itemize>
<item><tt>#include &lt;signal.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;exceptions.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;ui-out.h&quot;</tt>
<item><tt>#include &lt;setjmp.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &lt;execinfo.h&gt;</tt>
</itemize>
<itemize>
<item><tt>#include &lt;sys/resource.h&gt;</tt>
</itemize>
<itemize>
<item><tt>#include &lt;uuid/uuid.h&gt;</tt>
</itemize>
<itemize>
<item><tt>#include &lt;regex.h&gt;</tt>
</itemize>
<itemize>
<item><tt>#include &lt;stdint.h&gt;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;macosx/xm-macosx.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &lt;signal.h&gt;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdbcmd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;command.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
<item><tt>#include &quot;ui-out.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;serial.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;target.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;dcache.h&quot;</tt>
<item><tt>#include &quot;memattr.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/floatformat.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;gdb_regex.h&quot;</tt>
<itemize>
<item><tt>#include &lt;regex.h&gt;</tt>
</itemize>
<item><tt>#include &quot;frame.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
</itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;gdbtypes.h&quot;</tt>
<item><tt>#include &quot;expression.h&quot;</tt>
<itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
</itemize>
</itemize>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;../include/demangle.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/libiberty.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;expression.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;language.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;charset.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;annotate.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;gdbtypes.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;../include/filenames.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/hashtab.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;symfile.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;symtab.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;inferior.h&quot;</tt>
<itemize>
<item><tt>#include &quot;breakpoint.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
<item><tt>#include &quot;gdb-events.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;target.h&quot;</tt>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &lt;sys/param.h&gt;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_curses.h&quot;</tt>
<itemize>
<item><tt>#include &lt;ncurses.h&gt;</tt>
<item><tt>#include &lt;term.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;ui-out.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;cli-out.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;../readline/readline.h&quot;</tt>
<itemize>
<item><tt>#include &lt;../readline/rlstdc.h&gt;</tt>
<item><tt>#include &lt;../readline/rltypedefs.h&gt;</tt>
<item><tt>#include &lt;../readline/keymaps.h&gt;</tt>
<item><tt>#include &lt;../readline/tilde.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;../bfd/mach-o.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<item><tt>#include &lt;mach-o/loader.h&gt;</tt>
</itemize>
</itemize>

<sect1>Preprocessor definitions

<p>
<tt>#define NO_POISON 1</tt><newline>
<p>
<tt>#define NUMCELLS 16</tt><newline>
<p>
<tt>#define CELLSIZE 50</tt><newline>
<p>
<tt>#define USE_REALPATH</tt><newline>

<sect1>Type struct internal_problem

<p>
<itemize>
<item><tt>struct internal_problem</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>const char* name;</tt><newline>
<item><tt>enum auto_boolean should_quit;</tt><newline>
<item><tt>enum auto_boolean should_dump_core;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Global Variable quit_flag

<p>
<tt>int quit_flag</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bcache.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>charset.c
<item>cli-out.c
<item>coff-pe-read.c
<item>coffread.c
<item>complaints.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>demangle.c
<item>dictionary.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>environ.c
<item>eval.c
<item>event-loop.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>interps.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod-cisco.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macrocmd.c
<item>macroexp.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>observer.c
<item>osabi.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>reggroups.c
<item>remote-fileio.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>ser-base.c
<item>ser-unix.c
<item>serial.c
<item>solib-null.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>ui-file.c
<item>ui-out.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>ada_lookup_symbol_list()  :  ada-lang.c
<item>ada_val_print_1()  :  ada-valprint.c
<item>add_local_symbols()  :  tracepoint.c
<item>async_request_quit()  :  event-top.c
<item>backtrace_command_1()  :  stack.c
<item>c_printstr()  :  c-lang.c
<item>c_type_print_base()  :  c-typeprint.c
<item>c_type_print_varspec_prefix()  :  c-typeprint.c
<item>c_type_print_varspec_suffix()  :  c-typeprint.c
<item>c_val_print()  :  c-valprint.c
<item>captured_main()  :  main.c
<item>classes_info()  :  objc-lang.c
<item>coff_symtab_read()  :  coffread.c
<item>command_handler()  :  event-top.c
<item>command_loop()  :  top.c
<item>cp_print_class_member()  :  cp-valprint.c
<item>decode_line_2()  :  linespec.c
<item>do_examine()  :  printcmd.c
<item>dump_insns()  :  disasm.c
<item>encode_actions()  :  tracepoint.c
<item>f_printstr()  :  f-lang.c
<item>f_type_print_base()  :  f-typeprint.c
<item>f_type_print_varspec_prefix()  :  f-typeprint.c
<item>f_type_print_varspec_suffix()  :  f-typeprint.c
<item>find_methods()  :  objc-lang.c
<item>getpkt_sane()  :  remote.c
<item>handle_sigint()  :  event-top.c
<item>java_type_print_base()  :  jv-typeprint.c
<item>load_progress()  :  symfile.c
<item>m2_printstr()  :  m2-lang.c
<item>make_symbol_completion_list()  :  symtab.c
<item>make_symbol_overload_list_qualified()  :  cp-support.c
<item>map_args_over_tracepoints()  :  tracepoint.c
<item>objc_printstr()  :  objc-lang.c
<item>pascal_object_print_class_member()  :  p-valprint.c
<item>pascal_printstr()  :  p-lang.c
<item>pascal_type_print_base()  :  p-typeprint.c
<item>pascal_type_print_varspec_prefix()  :  p-typeprint.c
<item>pascal_type_print_varspec_suffix()  :  p-typeprint.c
<item>pascal_val_print()  :  p-valprint.c
<item>print_enum_type()  :  ada-typeprint.c
<item>print_frame()  :  stack.c
<item>print_frame_args()  :  stack.c
<item>print_frame_nameless_args()  :  stack.c
<item>print_object_command()  :  objc-lang.c
<item>print_record_field_types()  :  ada-typeprint.c
<item>printf_command()  :  printcmd.c
<item>printstr()  :  ada-valprint.c
<item>query()  :  utils.c
<item>read_dbx_symtab()  :  dbxread.c
<item>read_ofile_symtab()  :  dbxread.c
<item>read_ofile_symtab_from_oso()  :  dbxread.c
<item>remote_get_noisy_reply()  :  tracepoint.c
<item>request_quit()  :  utils.c
<item>resume()  :  infrun.c
<item>scan_file_globals()  :  stabsread.c
<item>scope_info()  :  tracepoint.c
<item>search_symbols()  :  symtab.c
<item>selectors_info()  :  objc-lang.c
<item>signals_info()  :  infrun.c
<item>simplified_command_loop()  :  top.c
<item>stringify_collection_list()  :  tracepoint.c
<item>symtab_symbol_info()  :  symtab.c
<item>target_read()  :  target/target.c
<item>target_write_with_progress()  :  target/target.c
<item>trace_dump_command()  :  tracepoint.c
<item>trace_start_command()  :  tracepoint.c
<item>tracepoint_save_command()  :  tracepoint.c
<item>val_print()  :  valprint.c
<item>val_print_string()  :  valprint.c
<item>validate_actionline()  :  tracepoint.c
</itemize>
</descrip>

<sect1>Global Variable immediate_quit

<p>
<tt>int immediate_quit</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bcache.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>charset.c
<item>cli-out.c
<item>coff-pe-read.c
<item>coffread.c
<item>complaints.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>demangle.c
<item>dictionary.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>environ.c
<item>eval.c
<item>event-loop.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>interps.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod-cisco.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macrocmd.c
<item>macroexp.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>observer.c
<item>osabi.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>reggroups.c
<item>remote-fileio.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>ser-base.c
<item>ser-unix.c
<item>serial.c
<item>solib-null.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>ui-file.c
<item>ui-out.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>async_request_quit()  :  event-top.c
<item>command_line_input()  :  top.c
<item>handle_sigint()  :  event-top.c
<item>maintenance_print_msymbols()  :  symmisc.c
<item>maintenance_print_objfiles()  :  symmisc.c
<item>maintenance_print_psymbols()  :  symmisc.c
<item>maintenance_print_symbols()  :  symmisc.c
<item>print_objfile_statistics()  :  symmisc.c
<item>print_symbol_bcache_statistics()  :  symmisc.c
<item>prompt_for_continue()  :  utils.c
<item>read_actions()  :  tracepoint.c
<item>remote_start_remote()  :  remote.c
<item>request_quit()  :  utils.c
</itemize>
</descrip>

<sect1>Global Variable sevenbit_strings

<p>
<tt>int sevenbit_strings</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bcache.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>charset.c
<item>cli-out.c
<item>coff-pe-read.c
<item>coffread.c
<item>complaints.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>demangle.c
<item>dictionary.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>environ.c
<item>eval.c
<item>event-loop.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>interps.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod-cisco.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macrocmd.c
<item>macroexp.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>observer.c
<item>osabi.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>reggroups.c
<item>remote-fileio.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>ser-base.c
<item>ser-unix.c
<item>serial.c
<item>solib-null.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>ui-file.c
<item>ui-out.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>f_emit_char()  :  f-lang.c
<item>initialize_utils()  :  utils.c
<item>iso_8859_print_literally()  :  charset.c
<item>m2_emit_char()  :  m2-lang.c
<item>objc_emit_char()  :  objc-lang.c
<item>pascal_one_char()  :  p-lang.c
<item>pascal_printstr()  :  p-lang.c
<item>printchar()  :  utils.c
<item>utf_8_print_literally()  :  charset.c
</itemize>
</descrip>

<sect1>Global Variable cmd_continuation

<p>
<tt>struct continuation* cmd_continuation</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bcache.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>charset.c
<item>cli-out.c
<item>coff-pe-read.c
<item>coffread.c
<item>complaints.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>demangle.c
<item>dictionary.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>environ.c
<item>eval.c
<item>event-loop.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>interps.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod-cisco.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macrocmd.c
<item>macroexp.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>observer.c
<item>osabi.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>reggroups.c
<item>remote-fileio.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>ser-base.c
<item>ser-unix.c
<item>serial.c
<item>solib-null.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>ui-file.c
<item>ui-out.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>add_continuation()  :  utils.c
<item>discard_all_continuations()  :  utils.c
<item>do_all_continuations()  :  utils.c
</itemize>
</descrip>

<sect1>Global Variable intermediate_continuation

<p>
<tt>struct continuation* intermediate_continuation</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bcache.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>charset.c
<item>cli-out.c
<item>coff-pe-read.c
<item>coffread.c
<item>complaints.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>demangle.c
<item>dictionary.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>environ.c
<item>eval.c
<item>event-loop.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>interps.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod-cisco.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macrocmd.c
<item>macroexp.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>observer.c
<item>osabi.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>reggroups.c
<item>remote-fileio.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>ser-base.c
<item>ser-unix.c
<item>serial.c
<item>solib-null.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>ui-file.c
<item>ui-out.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>add_intermediate_continuation()  :  utils.c
<item>discard_all_intermediate_continuations()  :  utils.c
<item>do_all_intermediate_continuations()  :  utils.c
</itemize>
</descrip>

<sect1>Global Variable demangle

<p>
<tt>int demangle</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bcache.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>charset.c
<item>cli-out.c
<item>coff-pe-read.c
<item>coffread.c
<item>complaints.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>demangle.c
<item>dictionary.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>environ.c
<item>eval.c
<item>event-loop.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>interps.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod-cisco.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macrocmd.c
<item>macroexp.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>observer.c
<item>osabi.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>reggroups.c
<item>remote-fileio.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>ser-base.c
<item>ser-unix.c
<item>serial.c
<item>solib-null.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>ui-file.c
<item>ui-out.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>ada_evaluate_subexp()  :  ada-lang.c
<item>ada_typedef_print()  :  ada-typeprint.c
<item>break_command_2()  :  breakpoint.c
<item>build_address_symbolic()  :  printcmd.c
<item>c_val_print()  :  c-valprint.c
<item>compare_classes()  :  objc-lang.c
<item>compare_search_syms()  :  symtab.c
<item>compare_selectors()  :  objc-lang.c
<item>decode_line_2()  :  linespec.c
<item>define_symbol()  :  stabsread.c
<item>dwarf2_tracepoint_var_ref()  :  dwarf2loc.c
<item>f_val_print()  :  f-valprint.c
<item>find_function_start_sal()  :  symtab.c
<item>find_method()  :  linespec.c
<item>finish_block()  :  buildsym.c
<item>fprintf_symbol_filtered()  :  utils.c
<item>frame_info()  :  stack.c
<item>gen_var_ref()  :  ax-gdb.c
<item>hand_function_call()  :  infcall.c
<item>initialize_utils()  :  utils.c
<item>java_val_print()  :  jv-valprint.c
<item>jump_command()  :  infcmd.c
<item>locate_var_value()  :  findvar.c
<item>maintenance_cplus_namespace()  :  cp-namespace.c
<item>maintenance_translate_address()  :  maint.c
<item>pascal_val_print()  :  p-valprint.c
<item>print_block_frame_labels()  :  stack.c
<item>print_block_frame_locals()  :  stack.c
<item>print_frame()  :  stack.c
<item>print_frame_arg_vars()  :  stack.c
<item>print_frame_args()  :  stack.c
<item>print_function_pointer_address()  :  c-valprint.c
<item>print_msymbol_info()  :  symtab.c
<item>print_one_breakpoint()  :  breakpoint.c
<item>print_subexp_standard()  :  expprint.c
<item>print_symbol()  :  symmisc.c
<item>print_symbol_info()  :  symtab.c
<item>rbreak_command()  :  symtab.c
<item>resolve_subexp()  :  ada-lang.c
<item>return_command()  :  stack.c
<item>sym_info()  :  printcmd.c
<item>tracepoints_info()  :  tracepoint.c
<item>typedef_print()  :  typeprint.c
<item>user_select_syms()  :  ada-lang.c
<item>value_of_variable()  :  valops.c
</itemize>
</descrip>

<sect1>Global Variable asm_demangle

<p>
<tt>int asm_demangle</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bcache.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>charset.c
<item>cli-out.c
<item>coff-pe-read.c
<item>coffread.c
<item>complaints.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>demangle.c
<item>dictionary.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>environ.c
<item>eval.c
<item>event-loop.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>interps.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod-cisco.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macrocmd.c
<item>macroexp.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>observer.c
<item>osabi.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>reggroups.c
<item>remote-fileio.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>ser-base.c
<item>ser-unix.c
<item>serial.c
<item>solib-null.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>ui-file.c
<item>ui-out.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>build_address_symbolic()  :  printcmd.c
<item>initialize_utils()  :  utils.c
</itemize>
</descrip>

<sect1>Global Variable error_pre_print

<p>
<tt>const char* error_pre_print</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bcache.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>charset.c
<item>cli-out.c
<item>coff-pe-read.c
<item>coffread.c
<item>complaints.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>demangle.c
<item>dictionary.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>environ.c
<item>eval.c
<item>event-loop.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>interps.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod-cisco.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macrocmd.c
<item>macroexp.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>observer.c
<item>osabi.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>reggroups.c
<item>remote-fileio.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>ser-base.c
<item>ser-unix.c
<item>serial.c
<item>solib-null.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>ui-file.c
<item>ui-out.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>captured_main()  :  main.c
</itemize>
</descrip>

<sect1>Global Variable quit_pre_print

<p>
<tt>const char* quit_pre_print</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bcache.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>charset.c
<item>cli-out.c
<item>coff-pe-read.c
<item>coffread.c
<item>complaints.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>demangle.c
<item>dictionary.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>environ.c
<item>eval.c
<item>event-loop.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>interps.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod-cisco.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macrocmd.c
<item>macroexp.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>observer.c
<item>osabi.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>reggroups.c
<item>remote-fileio.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>ser-base.c
<item>ser-unix.c
<item>serial.c
<item>solib-null.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>ui-file.c
<item>ui-out.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>captured_main()  :  main.c
</itemize>
</descrip>

<sect1>Global Variable warning_pre_print

<p>
<tt>const char* warning_pre_print</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bcache.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>charset.c
<item>cli-out.c
<item>coff-pe-read.c
<item>coffread.c
<item>complaints.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>demangle.c
<item>dictionary.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>environ.c
<item>eval.c
<item>event-loop.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>interps.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod-cisco.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macrocmd.c
<item>macroexp.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>observer.c
<item>osabi.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>reggroups.c
<item>remote-fileio.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>ser-base.c
<item>ser-unix.c
<item>serial.c
<item>solib-null.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>ui-file.c
<item>ui-out.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>captured_main()  :  main.c
<item>vwarning()  :  utils.c
</itemize>
</descrip>

<sect1>Global Variable deprecated_error_begin_hook

<p>
<tt>void (*deprecated_error_begin_hook)(void)</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bcache.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>charset.c
<item>cli-out.c
<item>coff-pe-read.c
<item>coffread.c
<item>complaints.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>demangle.c
<item>dictionary.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>environ.c
<item>eval.c
<item>event-loop.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>interps.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod-cisco.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macrocmd.c
<item>macroexp.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>observer.c
<item>osabi.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>reggroups.c
<item>remote-fileio.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>ser-base.c
<item>ser-unix.c
<item>serial.c
<item>solib-null.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>ui-file.c
<item>ui-out.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>clear_interpreter_hooks()  :  interps.c
</itemize>
</descrip>

<sect1>Global Variable job_control

<p>
<tt>int job_control</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>event-top.c
<item>inflow.c
<item>ser-unix.c
<item>top.c
<item>utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_inflow()  :  inflow.c
<item>command_line_handler()  :  event-top.c
<item>command_line_input()  :  top.c
<item>gdb_setpgid()  :  inflow.c
<item>quit()  :  utils.c
<item>terminal_inferior()  :  inflow.c
<item>terminal_ours_1()  :  inflow.c
</itemize>
</descrip>

<sect1>Global Variable pagination_enabled

<p>
<tt>int pagination_enabled</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>fputs_maybe_filtered()  :  utils.c
<item>initialize_utils()  :  utils.c
<item>pagination_off_command()  :  utils.c
<item>pagination_on_command()  :  utils.c
</itemize>
</descrip>

<sect1>Local Variables

<p>
<bf>cleanup_chain</bf><newline>
<tt>static struct cleanup* cleanup_chain</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>discard_cleanups()
<item>do_cleanups()
<item>make_cleanup()
<item>make_cleanup_free_section_addr_info()
<item>make_cleanup_freeargv()
<item>make_cleanup_restore_uiout()
<item>make_cleanup_set_restore_scheduler_locking_mode()
<item>make_cleanup_ui_file_delete()
<item>make_cleanup_ui_out_delete()
<item>restore_cleanups()
<item>save_cleanups()
</itemize>
</descrip>
<p>
<bf>final_cleanup_chain</bf><newline>
<tt>static struct cleanup* final_cleanup_chain</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>discard_final_cleanups()
<item>do_final_cleanups()
<item>make_final_cleanup()
<item>restore_final_cleanups()
<item>save_final_cleanups()
</itemize>
</descrip>
<p>
<bf>run_cleanup_chain</bf><newline>
<tt>static struct cleanup* run_cleanup_chain</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>do_run_cleanups()
<item>make_run_cleanup()
</itemize>
</descrip>
<p>
<bf>exec_cleanup_chain</bf><newline>
<tt>static struct cleanup* exec_cleanup_chain</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>do_exec_cleanups()
<item>make_exec_cleanup()
</itemize>
</descrip>
<p>
<bf>exec_error_cleanup_chain</bf><newline>
<tt>static struct cleanup* exec_error_cleanup_chain</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>discard_exec_error_cleanups()
<item>do_exec_error_cleanups()
<item>make_exec_error_cleanup()
</itemize>
</descrip>
<p>
<bf>hand_call_cleanup_chain</bf><newline>
<tt>static struct cleanup* hand_call_cleanup_chain</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>discard_hand_call_cleanups()
<item>do_hand_call_cleanups()
<item>make_hand_call_cleanup()
</itemize>
</descrip>
<p>
<bf>internal_error_problem</bf><newline>
<tt>static struct internal_problem internal_error_problem</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>internal_verror()
</itemize>
</descrip>
<p>
<bf>internal_warning_problem</bf><newline>
<tt>static struct internal_problem internal_warning_problem</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>internal_vwarning()
</itemize>
</descrip>
<p>
<bf>lines_per_page</bf><newline>
<tt>static unsigned int lines_per_page</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>fputs_maybe_filtered()
<item>init_page_info()
<item>initialize_utils()
<item>macosx_resize_window_handler()
<item>set_screen_size()
</itemize>
</descrip>
<p>
<bf>chars_per_line</bf><newline>
<tt>static unsigned int chars_per_line</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>fputs_maybe_filtered()
<item>init_page_info()
<item>initialize_utils()
<item>macosx_resize_window_handler()
<item>puts_filtered_tabular()
<item>set_screen_size()
<item>set_width()
<item>wrap_here()
</itemize>
</descrip>
<p>
<bf>lines_printed</bf><newline>
<tt>static unsigned int lines_printed</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>fputs_maybe_filtered()
<item>reinitialize_more_filter()
</itemize>
</descrip>
<p>
<bf>chars_printed</bf><newline>
<tt>static unsigned int chars_printed</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>begin_line()
<item>fputs_maybe_filtered()
<item>puts_filtered_tabular()
<item>reinitialize_more_filter()
<item>wrap_here()
</itemize>
</descrip>
<p>
<bf>wrap_buffer</bf><newline>
<tt>static char* wrap_buffer</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>fputs_maybe_filtered()
<item>set_width()
<item>wrap_here()
</itemize>
</descrip>
<p>
<bf>wrap_pointer</bf><newline>
<tt>static char* wrap_pointer</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>fputs_maybe_filtered()
<item>set_width()
<item>wrap_here()
</itemize>
</descrip>
<p>
<bf>wrap_indent</bf><newline>
<tt>static const char* wrap_indent</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>fputs_maybe_filtered()
<item>wrap_here()
</itemize>
</descrip>
<p>
<bf>wrap_column</bf><newline>
<tt>static int wrap_column</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>fputs_maybe_filtered()
<item>wrap_here()
</itemize>
</descrip>
<p>
<bf>thirty_two</bf><newline>
<tt>static int thirty_two</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>phex()
<item>phex_nz()
</itemize>
</descrip>
<p>
<bf>orig_file_rlimit</bf><newline>
<tt>static rlim_t orig_file_rlimit</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>restore_file_rlimit()
<item>unlimit_file_rlimit()
</itemize>
</descrip>
<p>
<bf>rebuf</bf><newline>
<tt>static regex_t rebuf</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>re_comp()
<item>re_exec()
</itemize>
</descrip>
<p>
<bf>rebuf_needs_freeing</bf><newline>
<tt>static int rebuf_needs_freeing</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>re_comp()
</itemize>
</descrip>
<p>
<bf>regex_fmt</bf><newline>
<tt>static int regex_fmt</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>re_comp()
<item>re_set_syntax()
</itemize>
</descrip>

<sect1>Global Function add_continuation()

<p><tt>void add_continuation ( void (*continuation_hook)(struct continuation_arg*), struct continuation_arg* arg_list )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xmalloc()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>bpstat_do_actions()  :  breakpoint.c
<item>command_handler()  :  event-top.c
<item>finish_command()  :  infcmd.c
<item>finish_inlined_subroutine_command()  :  infcmd.c
<item>until_break_command()  :  breakpoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>cmd_continuation  :  utils.c
</itemize>
</descrip>

<sect1>Global Function add_intermediate_continuation()

<p><tt>void add_intermediate_continuation ( void (*continuation_hook)(struct continuation_arg*), struct continuation_arg* arg_list )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xmalloc()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>re_exec_once()  :  infcmd.c
<item>step_once()  :  infcmd.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>intermediate_continuation  :  utils.c
</itemize>
</descrip>

<sect1>Global Function align_down()

<p><tt>unsigned long align_down ( unsigned long v, int n )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
</itemize>
</descrip>

<sect1>Global Function align_up()

<p><tt>unsigned long align_up ( unsigned long v, int n )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
</itemize>
</descrip>

<sect1>Global Function begin_line()

<p><tt>void begin_line ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>puts_filtered()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>classes_info()  :  objc-lang.c
<item>internal_vproblem()  :  utils.c
<item>selectors_info()  :  objc-lang.c
<item>vcomplaint()  :  complaints.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>chars_printed  :  utils.c
</itemize>
</descrip>

<sect1>Global Function breakup_args()

<p><tt>void breakup_args ( char* scratch, int* argc, char** argv )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_macosx_create_inferior()  :  remote.c
</itemize>
</descrip>

<sect1>Global Function bundle_basename()

<p><tt>const char* bundle_basename ( const char* filepath )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>strrchr_bounded()  :  utils.c
<item>strrstr()  :  utils.c
<item>isalpha(), strchr(), strrchr()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>objfile_matches_name()  :  objfiles.c
<item>tell_breakpoints_objfile_changed_internal()  :  breakpoint.c
</itemize>
</descrip>

<sect1>Global Function core_addr_to_string()

<p><tt>const char* core_addr_to_string ( const CORE_ADDR addr )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>get_cell()  :  utils.c
<item>phex()  :  utils.c
<item>__builtin___strcat_chk(), __builtin___strcpy_chk(), __builtin_object_size(), __inline_strcat_chk(), __inline_strcpy_chk()
</itemize>
</descrip>

<sect1>Global Function core_addr_to_string_nz()

<p><tt>const char* core_addr_to_string_nz ( const CORE_ADDR addr )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>get_cell()  :  utils.c
<item>phex_nz()  :  utils.c
<item>__builtin___strcat_chk(), __builtin___strcpy_chk(), __builtin_object_size(), __inline_strcat_chk(), __inline_strcpy_chk()
</itemize>
</descrip>

<sect1>Global Function discard_all_continuations()

<p><tt>void discard_all_continuations ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xfree()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>inferior_event_handler()  :  inf-loop.c
<item>stdin_event_handler()  :  event-top.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>cmd_continuation  :  utils.c
</itemize>
</descrip>

<sect1>Global Function discard_all_intermediate_continuations()

<p><tt>void discard_all_intermediate_continuations ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xfree()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>intermediate_continuation  :  utils.c
</itemize>
</descrip>

<sect1>Global Function discard_cleanups()

<p><tt>void discard_cleanups ( struct cleanup* old_chain )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>discard_my_cleanups()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>break_command_2()  :  breakpoint.c
<item>decode_line_2()  :  linespec.c
<item>do_captured_breakpoint()  :  breakpoint.c
<item>dwarf_decode_line_header()  :  dwarf2read.c
<item>encode_actions()  :  tracepoint.c
<item>expr_to_agent()  :  ax-gdb.c
<item>find_oload_champ_namespace_loop()  :  valops.c
<item>frame_save_as_regcache()  :  frame.c
<item>gather_arguments()  :  macroexp.c
<item>gen_trace_for_expr()  :  ax-gdb.c
<item>hand_function_call()  :  infcall.c
<item>load_full_comp_unit()  :  dwarf2read.c
<item>macro_expand()  :  macroexp.c
<item>macro_expand_next()  :  macroexp.c
<item>make_symbol_overload_list()  :  cp-support.c
<item>objc_read_trampoline_region()  :  objc-lang.c
<item>open_bfd_from_oso()  :  dbxread.c
<item>parse_exp_in_context()  :  parse.c
<item>read_actions()  :  tracepoint.c
<item>reread_symbols_for_objfile()  :  symfile.c
<item>resume()  :  infrun.c
<item>search_symbols()  :  symtab.c
<item>set_raw_tracepoint()  :  tracepoint.c
<item>solib_load_unload_1()  :  breakpoint.c
<item>symbol_file_add_with_addrs_or_offsets_using_objfile()  :  symfile.c
<item>syms_from_objfile()  :  symfile.c
<item>trace_dump_command()  :  tracepoint.c
<item>val_print_string()  :  valprint.c
<item>varobj_create()  :  varobj.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>cleanup_chain  :  utils.c
</itemize>
</descrip>

<sect1>Global Function discard_exec_error_cleanups()

<p><tt>void discard_exec_error_cleanups ( struct cleanup* old_chain )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>discard_my_cleanups()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>exec_error_cleanup_chain  :  utils.c
</itemize>
</descrip>

<sect1>Global Function discard_final_cleanups()

<p><tt>void discard_final_cleanups ( struct cleanup* old_chain )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>discard_my_cleanups()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>final_cleanup_chain  :  utils.c
</itemize>
</descrip>

<sect1>Global Function discard_hand_call_cleanups()

<p><tt>void discard_hand_call_cleanups ( struct cleanup* old_chain )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>discard_my_cleanups()  :  utils.c
<item>printf_unfiltered()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>debug_handcall_setup  :  infrun.c
<item>hand_call_cleanup_chain  :  utils.c
</itemize>
</descrip>

<sect1>Global Function discard_my_cleanups()

<p><tt>void discard_my_cleanups ( struct cleanup** pmy_chain, struct cleanup* old_chain )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xfree()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>discard_cleanups()  :  utils.c
<item>discard_exec_error_cleanups()  :  utils.c
<item>discard_final_cleanups()  :  utils.c
<item>discard_hand_call_cleanups()  :  utils.c
</itemize>
</descrip>

<sect1>Global Function do_all_continuations()

<p><tt>void do_all_continuations ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xfree()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>inferior_event_handler()  :  inf-loop.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>cmd_continuation  :  utils.c
</itemize>
</descrip>

<sect1>Global Function do_all_intermediate_continuations()

<p><tt>void do_all_intermediate_continuations ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xfree()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>inferior_event_handler()  :  inf-loop.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>intermediate_continuation  :  utils.c
</itemize>
</descrip>

<sect1>Global Function do_cleanups()

<p><tt>void do_cleanups ( struct cleanup* old_chain )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>do_my_cleanups()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>ada_print_floating()  :  ada-valprint.c
<item>add_dsym_command()  :  symfile.c
<item>add_kext_command()  :  symfile.c
<item>add_symbol_file_command()  :  symfile.c
<item>agent_command()  :  ax-gdb.c
<item>allocate_space_in_inferior_malloc()  :  valops.c
<item>append_psymbols_as_msymbols()  :  symfile.c
<item>backtrace_command()  :  stack.c
<item>bpstat_do_actions()  :  breakpoint.c
<item>bpstat_stop_status()  :  breakpoint.c
<item>break_command_2()  :  breakpoint.c
<item>breakpoint_1()  :  breakpoint.c
<item>breakpoint_print_commands()  :  breakpoint.c
<item>breakpoint_re_set_all()  :  breakpoint.c
<item>breakpoint_re_set_one()  :  breakpoint.c
<item>breakpoint_update()  :  breakpoint.c
<item>c_preprocess_and_parse()  :  c-lang.c
<item>c_value_of_root()  :  varobj.c
<item>c_value_of_variable()  :  varobj.c
<item>captured_command_loop()  :  main.c
<item>captured_main()  :  main.c
<item>check_bfd_for_matching_uuid()  :  symfile.c
<item>check_safe_call()  :  valops.c
<item>coff_symfile_read()  :  coffread.c
<item>command_handler()  :  event-top.c
<item>command_loop()  :  top.c
<item>commands_command()  :  breakpoint.c
<item>compare_sections_command()  :  remote.c
<item>convert_sect_addrs_to_offsets_via_on_disk_file()  :  symfile.c
<item>core_file_command()  :  corefile.c
<item>dbx_psymtab_to_symtab()  :  dbxread.c
<item>dbx_psymtab_to_symtab_1()  :  dbxread.c
<item>dbx_symfile_read()  :  dbxread.c
<item>decode_all_digits()  :  linespec.c
<item>decode_all_digits_exhaustive()  :  linespec.c
<item>default_memory_insert_breakpoint()  :  mem-break.c
<item>default_memory_remove_breakpoint()  :  mem-break.c
<item>default_xfer_partial()  :  target/target.c
<item>delete_breakpoint()  :  breakpoint.c
<item>detach_breakpoints()  :  breakpoint.c
<item>determine_class_name()  :  dwarf2read.c
<item>do_assembly_only()  :  disasm.c
<item>do_captured_breakpoint()  :  breakpoint.c
<item>do_captured_list_thread_ids()  :  thread.c
<item>do_check_is_thread_unsafe()  :  valops.c
<item>do_end_debugger_mode()  :  objc-lang.c
<item>do_mixed_source_and_assembly()  :  disasm.c
<item>dump_insns()  :  disasm.c
<item>dwarf2_build_psymtabs_hard()  :  dwarf2read.c
<item>dwarf2_frame_cache()  :  dwarf2-frame.c
<item>dwarf2_scan_inlined_section_for_psymbols()  :  dwarf2read.c
<item>dwarf2_scan_pubtype_for_psymbols()  :  dwarf2read.c
<item>dwarf2_start_subfile()  :  dwarf2read.c
<item>dwarf_build_psymtabs()  :  dwarfread.c
<item>elf_symfile_read()  :  elfread.c
<item>elf_symtab_read()  :  elfread.c
<item>elfmdebug_build_psymtabs()  :  mdebugread.c
<item>elfstab_build_psymtabs()  :  dbxread.c
<item>encode_actions()  :  tracepoint.c
<item>expand()  :  macroexp.c
<item>fill_symbuf()  :  dbxread.c
<item>find_debug_info_for_pst()  :  dwarf2read.c
<item>find_implementation()  :  objc-lang.c
<item>find_kext_loadaddrs_from_kernel()  :  symfile.c
<item>find_methods()  :  objc-lang.c
<item>find_oload_champ_namespace_loop()  :  valops.c
<item>find_overload_match()  :  valops.c
<item>find_pc_offset()  :  disasm.c
<item>find_source_lines()  :  source.c
<item>finish_command()  :  infcmd.c
<item>frame_pop()  :  frame.c
<item>future_break_command()  :  breakpoint.c
<item>gdb_breakpoint()  :  breakpoint.c
<item>gdb_disassembly()  :  disasm.c
<item>gdb_print_insn()  :  disasm.c
<item>generic_load()  :  symfile.c
<item>get_class_address_from_object()  :  objc-lang.c
<item>hand_function_call()  :  infcall.c
<item>handle_command()  :  infrun.c
<item>info_macro_command()  :  macrocmd.c
<item>insert_bp_location()  :  breakpoint.c
<item>invoke_block_command()  :  printcmd.c
<item>list_cp_abis()  :  cp-abi.c
<item>list_interpreter_cmd()  :  interps.c
<item>load_comp_unit()  :  dwarf2read.c
<item>load_full_comp_unit()  :  dwarf2read.c
<item>load_progress()  :  symfile.c
<item>load_section_callback()  :  symfile.c
<item>lookup_objc_class()  :  objc-lang.c
<item>lookup_symbol_in_language()  :  ada-lang.c
<item>macro_expand_command()  :  macrocmd.c
<item>macro_expand_next()  :  macroexp.c
<item>macro_expand_once_command()  :  macrocmd.c
<item>maintenance_print_msymbols()  :  symmisc.c
<item>maintenance_print_psymbols()  :  symmisc.c
<item>maintenance_print_symbols()  :  symmisc.c
<item>maintenance_print_type()  :  typeprint.c
<item>make_cleanup_init_objc_exception_catcher()  :  objc-lang.c
<item>make_cleanup_set_restore_debugger_mode()  :  objc-lang.c
<item>maybe_expand()  :  macroexp.c
<item>mention()  :  breakpoint.c
<item>minsym_found()  :  linespec.c
<item>minsyms_found()  :  linespec.c
<item>mipscoff_symfile_read()  :  mipsread.c
<item>new_objc_runtime_find_impl()  :  objc-lang.c
<item>new_objc_runtime_get_classname()  :  objc-lang.c
<item>nlm_symfile_read()  :  nlmread.c
<item>nlm_symtab_read()  :  nlmread.c
<item>objc_fixup_ivar_offset()  :  objc-lang.c
<item>objc_setup_safe_print()  :  objc-lang.c
<item>open_bfd_from_oso()  :  dbxread.c
<item>oso_scan_partial_symtab()  :  dbxread.c
<item>output_command()  :  printcmd.c
<item>parse_and_eval()  :  eval.c
<item>parse_and_eval_address()  :  eval.c
<item>parse_and_eval_address_1()  :  eval.c
<item>parse_and_eval_long()  :  eval.c
<item>parse_breakpoint_sals()  :  breakpoint.c
<item>parse_exp_in_context()  :  parse.c
<item>parse_frame_specification_1()  :  stack.c
<item>parse_partial_symbols()  :  mdebugread.c
<item>parse_to_comma_and_eval()  :  eval.c
<item>print_address_symbolic()  :  printcmd.c
<item>print_command_1()  :  printcmd.c
<item>print_frame()  :  stack.c
<item>print_frame_args()  :  stack.c
<item>print_frame_info()  :  stack.c
<item>print_inlined_frame()  :  inlining.c
<item>print_inlined_frames_lite()  :  inlining.c
<item>print_it_typical()  :  breakpoint.c
<item>print_object_command()  :  objc-lang.c
<item>print_one_breakpoint()  :  breakpoint.c
<item>print_return_value()  :  infcmd.c
<item>print_stop_reason()  :  infrun.c
<item>printf_command()  :  printcmd.c
<item>process_full_comp_unit()  :  dwarf2read.c
<item>psymtab_to_symtab()  :  symfile.c
<item>psymtab_to_symtab_1()  :  mdebugread.c
<item>ptype_command()  :  typeprint.c
<item>rbr_break_command()  :  breakpoint.c
<item>rbreak_command()  :  symtab.c
<item>re_enable_breakpoints_in_shlibs()  :  breakpoint.c
<item>read_alphacoff_dynamic_symtab()  :  mipsread.c
<item>read_array_type()  :  dwarf2read.c
<item>read_command_file()  :  top.c
<item>read_dbx_dynamic_symtab()  :  dbxread.c
<item>read_dbx_symtab()  :  dbxread.c
<item>read_file_scope()  :  dwarf2read.c
<item>read_func_scope()  :  dwarf2read.c
<item>read_namespace()  :  dwarf2read.c
<item>read_objc_object()  :  objc-lang.c
<item>read_ofile_symtab()  :  dwarfread.c
<item>read_ofile_symtab_from_oso()  :  dbxread.c
<item>read_oso_nlists()  :  dbxread.c
<item>read_pe_exported_syms()  :  coff-pe-read.c
<item>read_struct_type()  :  stabsread.c
<item>read_structure_type()  :  dwarf2read.c
<item>read_type_die()  :  dwarf2read.c
<item>reattach_breakpoints()  :  breakpoint.c
<item>regcache_dump()  :  regcache.c
<item>remote_macosx_create_inferior()  :  remote.c
<item>remote_vcont_resume()  :  remote.c
<item>report_timer_internal()  :  maint.c
<item>resolve_pending_breakpoint()  :  breakpoint.c
<item>safe_check_is_thread_unsafe()  :  valops.c
<item>save_breakpoints_command()  :  breakpoint.c
<item>set_command()  :  printcmd.c
<item>simplified_command_loop()  :  top.c
<item>slide_objfile()  :  objfiles.c
<item>solib_load_unload_1()  :  breakpoint.c
<item>solib_map_sections()  :  solib.c
<item>stabsect_build_psymtabs()  :  dbxread.c
<item>step_1_inlining()  :  infcmd.c
<item>step_1_no_inlining()  :  infcmd.c
<item>symbol_file_add_with_addrs_or_offsets_using_objfile()  :  symfile.c
<item>symbol_file_command()  :  symfile.c
<item>symtab_symbol_info()  :  symtab.c
<item>thread_apply_all_command()  :  thread.c
<item>thread_apply_command()  :  thread.c
<item>trace_find_line_command()  :  tracepoint.c
<item>trace_start_command()  :  tracepoint.c
<item>type_sprint()  :  typeprint.c
<item>ui_out_field_stream()  :  ui-out.c
<item>until_break_command()  :  breakpoint.c
<item>val_print_string()  :  valprint.c
<item>validate_actionline()  :  tracepoint.c
<item>varobj_create()  :  varobj.c
<item>varobj_delete_objfiles_vars()  :  varobj.c
<item>varobj_evaluate_expression()  :  varobj.c
<item>varobj_evaluate_type()  :  varobj.c
<item>varobj_parse_exp_1()  :  varobj.c
<item>varobj_set_value()  :  varobj.c
<item>vcomplaint()  :  complaints.c
<item>verify_gdbarch()  :  gdbarch.c
<item>vfprintf_maybe_filtered()  :  utils.c
<item>vfprintf_unfiltered()  :  utils.c
<item>wait_for_inferior()  :  infrun.c
<item>whatis_exp()  :  typeprint.c
<item>x_command()  :  printcmd.c
<item>xdb_handle_command()  :  infrun.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>cleanup_chain  :  utils.c
</itemize>
</descrip>

<sect1>Global Function do_exec_cleanups()

<p><tt>void do_exec_cleanups ( struct cleanup* old_chain )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>do_my_cleanups()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>fetch_inferior_event()  :  infrun.c
<item>finish_command_continuation()  :  infcmd.c
<item>finish_inlined_subroutine_command()  :  infcmd.c
<item>finish_inlined_subroutine_command_continuation()  :  infcmd.c
<item>step_1_continuation()  :  infcmd.c
<item>until_break_command_continuation()  :  breakpoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>exec_cleanup_chain  :  utils.c
</itemize>
</descrip>

<sect1>Global Function do_exec_error_cleanups()

<p><tt>void do_exec_error_cleanups ( struct cleanup* old_chain )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>do_my_cleanups()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>complete_execution()  :  inf-loop.c
<item>inferior_event_handler()  :  inf-loop.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>exec_error_cleanup_chain  :  utils.c
</itemize>
</descrip>

<sect1>Global Function do_final_cleanups()

<p><tt>void do_final_cleanups ( struct cleanup* old_chain )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>do_my_cleanups()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>quit_target()  :  top.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>final_cleanup_chain  :  utils.c
</itemize>
</descrip>

<sect1>Global Function do_hand_call_cleanups()

<p><tt>void do_hand_call_cleanups ( struct cleanup* old_chain )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>do_my_cleanups()  :  utils.c
<item>printf_unfiltered()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>bpstat_stop_status()  :  breakpoint.c
<item>keep_going()  :  infrun.c
<item>make_cleanup_set_restore_debugger_mode()  :  objc-lang.c
<item>proceed()  :  infrun.c
<item>run_command_1()  :  infcmd.c
<item>set_non_blocking_mode_func()  :  objc-lang.c
<item>switch_to_thread()  :  thread.c
<item>target_detach()  :  target/target.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>debug_handcall_setup  :  infrun.c
<item>hand_call_cleanup_chain  :  utils.c
</itemize>
</descrip>

<sect1>Global Function do_run_cleanups()

<p><tt>void do_run_cleanups ( struct cleanup* old_chain )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>do_my_cleanups()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>run_command_1()  :  infcmd.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>run_cleanup_chain  :  utils.c
</itemize>
</descrip>

<sect1>Global Function error()

<p><tt>void error ( const char* string, ... )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>__builtin_va_end(), __builtin_va_start(), throw_verror()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>_ada_parse()  :  ada-exp.c
<item>access_value_history()  :  value.c
<item>ada_coerce_to_simple_array()  :  ada-lang.c
<item>ada_decoded_op_name()  :  ada-lang.c
<item>ada_encode()  :  ada-lang.c
<item>ada_error()  :  ada-exp.c
<item>ada_evaluate_subexp()  :  ada-lang.c
<item>ada_get_field_index()  :  ada-lang.c
<item>ada_lex()  :  ada-exp.c
<item>ada_lookup_struct_elt_type()  :  ada-lang.c
<item>ada_main_name()  :  ada-lang.c
<item>ada_print_scalar()  :  ada-valprint.c
<item>ada_simple_renamed_entity()  :  ada-lang.c
<item>ada_template_to_fixed_record_type_1()  :  ada-lang.c
<item>ada_value_assign()  :  ada-lang.c
<item>ada_value_binop()  :  ada-lang.c
<item>ada_value_equal()  :  ada-lang.c
<item>ada_value_ptr_subscript()  :  ada-lang.c
<item>ada_value_struct_elt()  :  ada-lang.c
<item>ada_value_subscript()  :  ada-lang.c
<item>ada_vax_float_print_function()  :  ada-lang.c
<item>add_dsym_command()  :  symfile.c
<item>add_kext_command()  :  symfile.c
<item>add_path()  :  source.c
<item>add_register()  :  tracepoint.c
<item>add_shared_symbol_files_command()  :  symfile.c
<item>add_symbol_file_command()  :  symfile.c
<item>add_symbol_file_from_memory_command()  :  symfile-mem.c
<item>address_info()  :  printcmd.c
<item>address_space_name_to_int()  :  gdbtypes.c
<item>advance_command()  :  infcmd.c
<item>agent_command()  :  ax-gdb.c
<item>allocate_objfile_internal()  :  objfiles.c
<item>allocate_space_in_inferior_malloc()  :  valops.c
<item>async_float_handler()  :  event-top.c
<item>attach_command()  :  infcmd.c
<item>ax_const_d()  :  ax-general.c
<item>ax_label()  :  ax-general.c
<item>ax_print()  :  ax-general.c
<item>ax_reg()  :  ax-general.c
<item>ax_trace_quick()  :  ax-general.c
<item>backtrace_command_1()  :  stack.c
<item>baseclass_offset()  :  cp-abi.c
<item>block_lookup()  :  ada-exp.c
<item>break_command_1()  :  breakpoint.c
<item>break_command_2()  :  breakpoint.c
<item>c_error()  :  c-exp.c
<item>c_lex()  :  c-exp.c
<item>c_parse()  :  c-exp.c
<item>c_path_expr_of_child()  :  varobj.c
<item>c_type_of_child()  :  varobj.c
<item>c_type_print_varspec_prefix()  :  c-typeprint.c
<item>c_type_print_varspec_suffix()  :  c-typeprint.c
<item>c_val_print()  :  c-valprint.c
<item>c_value_of_child()  :  varobj.c
<item>calc_f77_array_dims()  :  eval.c
<item>captured_main()  :  main.c
<item>cast_into_complex()  :  valops.c
<item>catch_command_1()  :  breakpoint.c
<item>catch_exception_command_1()  :  breakpoint.c
<item>catch_exec_command_1()  :  breakpoint.c
<item>catch_fork_command_1()  :  breakpoint.c
<item>catch_load_command_1()  :  breakpoint.c
<item>catch_unload_command_1()  :  breakpoint.c
<item>check_field()  :  valops.c
<item>check_size()  :  ada-lang.c
<item>check_stub_method()  :  gdbtypes.c
<item>check_valid_host_charset()  :  charset.c
<item>cisco_kod_open()  :  kod-cisco.c
<item>classes_info()  :  objc-lang.c
<item>clear_command()  :  breakpoint.c
<item>coerce_for_assign()  :  ada-lang.c
<item>coff_symfile_read()  :  coffread.c
<item>coff_symtab_read()  :  coffread.c
<item>coffstab_build_psymtabs()  :  dbxread.c
<item>collect_pseudocommand()  :  tracepoint.c
<item>commands_command()  :  breakpoint.c
<item>commands_from_control_command()  :  breakpoint.c
<item>compare_classes()  :  objc-lang.c
<item>compare_sections_command()  :  remote.c
<item>compare_selectors()  :  objc-lang.c
<item>condition_command()  :  breakpoint.c
<item>condition_command_1()  :  breakpoint.c
<item>construct_inferior_arguments()  :  infcmd.c
<item>continue_command()  :  infcmd.c
<item>core_file_attach()  :  corefile.c
<item>core_file_command()  :  corefile.c
<item>cp_print_class_method()  :  cp-valprint.c
<item>cp_print_value()  :  cp-valprint.c
<item>cplus_path_expr_of_child()  :  varobj.c
<item>cplus_value_of_child()  :  varobj.c
<item>create_breakpoints()  :  breakpoint.c
<item>create_exception_catchpoint()  :  breakpoint.c
<item>db_read_attribute_value()  :  dwarf2read.c
<item>dbx_symfile_init()  :  dbxread.c
<item>decode_all_variables()  :  linespec.c
<item>decode_compound()  :  linespec.c
<item>decode_dollar()  :  linespec.c
<item>decode_line_1()  :  linespec.c
<item>decode_line_2()  :  linespec.c
<item>decode_line_spec()  :  symtab.c
<item>decode_line_spec_1()  :  breakpoint.c
<item>decode_packed_array()  :  ada-lang.c
<item>decode_variable()  :  linespec.c
<item>default_memory_insert_breakpoint()  :  mem-break.c
<item>default_memory_remove_breakpoint()  :  mem-break.c
<item>default_skip_permanent_breakpoint()  :  infrun.c
<item>delete_display()  :  printcmd.c
<item>desc_bounds()  :  ada-lang.c
<item>destructor_name_p()  :  valops.c
<item>detach_breakpoints()  :  breakpoint.c
<item>die_containing_type()  :  dwarf2read.c
<item>die_type()  :  dwarf2read.c
<item>disable_display_command()  :  printcmd.c
<item>discrete_type_high_bound()  :  ada-lang.c
<item>discrete_type_low_bound()  :  ada-lang.c
<item>do_captured_breakpoint()  :  breakpoint.c
<item>do_captured_list_thread_ids()  :  thread.c
<item>do_captured_thread_select()  :  thread.c
<item>do_enable_breakpoint()  :  breakpoint.c
<item>do_monitor_command()  :  target/target.c
<item>down_silently_base()  :  stack.c
<item>dummy_find_memory_regions()  :  target/target.c
<item>dummy_func_to_use_unused_top_c_funcs()  :  top.c
<item>dummy_make_corefile_notes()  :  target/target.c
<item>dump_packets_command()  :  remote.c
<item>dwarf2_find_comp_unit()  :  dwarf2read.c
<item>dwarf2_find_containing_comp_unit()  :  dwarf2read.c
<item>dwarf2_fundamental_type()  :  dwarf2read.c
<item>dwarf2_kext_psymtab_to_symtab()  :  dwarf2read.c
<item>dwarf2_read_address()  :  dwarf2expr.c
<item>dwarf2_read_section()  :  dwarf2read.c
<item>dwarf2_scan_inlined_section_for_psymbols()  :  dwarf2read.c
<item>dwarf2_tracepoint_var_ref()  :  dwarf2loc.c
<item>dwarf_build_psymtabs()  :  dwarfread.c
<item>dwarf_expr_fetch()  :  dwarf2expr.c
<item>dwarf_expr_frame_base()  :  dwarf2loc.c
<item>dwarf_expr_pop()  :  dwarf2expr.c
<item>dwarf_expr_tls_address()  :  dwarf2loc.c
<item>dwarf_fundamental_type()  :  dwarfread.c
<item>elf_symtab_read()  :  elfread.c
<item>elfmdebug_build_psymtabs()  :  mdebugread.c
<item>elfstab_build_psymtabs()  :  dbxread.c
<item>enable_display()  :  printcmd.c
<item>encode_actions()  :  tracepoint.c
<item>end_actions_pseudocommand()  :  tracepoint.c
<item>end_msglist()  :  objc-lang.c
<item>error_stream()  :  utils.c
<item>evaluate_struct_tuple()  :  eval.c
<item>evaluate_subexp_for_address()  :  eval.c
<item>evaluate_subexp_for_sizeof()  :  eval.c
<item>evaluate_subexp_java()  :  jv-lang.c
<item>evaluate_subexp_standard()  :  eval.c
<item>execute_command()  :  top.c
<item>execute_stack_op()  :  dwarf2expr.c
<item>expand()  :  macroexp.c
<item>extract_signed_integer_with_byte_order()  :  findvar.c
<item>extract_unsigned_integer_with_byte_order()  :  findvar.c
<item>f77_create_arrayprint_offset_tbl()  :  f-valprint.c
<item>f77_get_dynamic_length_of_aggregate()  :  f-valprint.c
<item>f77_get_dynamic_lowerbound()  :  f-valprint.c
<item>f77_get_dynamic_upperbound()  :  f-valprint.c
<item>f77_print_array()  :  f-valprint.c
<item>f_error()  :  f-exp.c
<item>f_lex()  :  f-exp.c
<item>f_parse()  :  f-exp.c
<item>f_type_print_base()  :  f-typeprint.c
<item>f_val_print()  :  f-valprint.c
<item>fetch_register_using_p()  :  remote.c
<item>fill_symbuf()  :  dbxread.c
<item>find_default_run_target()  :  target/target.c
<item>find_field()  :  ax-gdb.c
<item>find_function_addr()  :  infcall.c
<item>find_function_in_inferior()  :  valops.c
<item>find_function_start_sal()  :  symtab.c
<item>find_kext_files_by_bundle()  :  symfile.c
<item>find_kext_files_by_symfile()  :  symfile.c
<item>find_kext_loadaddrs_from_kernel()  :  symfile.c
<item>find_method_list()  :  valops.c
<item>find_name_end()  :  stabsread.c
<item>find_overload_match()  :  valops.c
<item>find_partial_die_in_comp_unit()  :  dwarf2read.c
<item>find_rt_vbase_offset()  :  valops.c
<item>find_size_for_pointer_math()  :  valarith.c
<item>find_sym_fns()  :  symfile.c
<item>find_text_range()  :  dbxread.c
<item>finish_command()  :  infcmd.c
<item>finish_inlined_subroutine_command()  :  infcmd.c
<item>finish_tfind_command()  :  tracepoint.c
<item>float_handler()  :  top.c
<item>floatformat_from_length()  :  doublest.c
<item>follow_die_ref()  :  dwarf2read.c
<item>follow_exec()  :  infrun.c
<item>forward_search_command()  :  source.c
<item>frame_pop()  :  frame.c
<item>fromhex()  :  remote.c
<item>gather_arguments()  :  macroexp.c
<item>gdb_check()  :  utils.c
<item>gdb_kod_query()  :  kod.c
<item>gen_add()  :  ax-gdb.c
<item>gen_address_of()  :  ax-gdb.c
<item>gen_binop()  :  ax-gdb.c
<item>gen_cast()  :  ax-gdb.c
<item>gen_complement()  :  ax-gdb.c
<item>gen_expr()  :  ax-gdb.c
<item>gen_logical_not()  :  ax-gdb.c
<item>gen_repeat()  :  ax-gdb.c
<item>gen_struct_ref()  :  ax-gdb.c
<item>gen_sub()  :  ax-gdb.c
<item>gen_var_ref()  :  ax-gdb.c
<item>generic_ext()  :  ax-general.c
<item>generic_load()  :  symfile.c
<item>get_character_constant()  :  macroexp.c
<item>get_comment()  :  macroexp.c
<item>get_current_frame()  :  frame.c
<item>get_exec_file()  :  corefile.c
<item>get_field()  :  doublest.c
<item>get_java_object_type()  :  jv-lang.c
<item>get_kext_bundle_ident_and_binary_path()  :  symfile.c
<item>get_number_or_range()  :  breakpoint.c
<item>get_offsets()  :  remote.c
<item>get_prev_frame_1()  :  frame.c
<item>get_selected_frame()  :  frame.c
<item>get_selections()  :  ada-lang.c
<item>get_string_literal()  :  macroexp.c
<item>get_var_value()  :  ada-lang.c
<item>getpkt_sane()  :  remote.c
<item>gnuv2_virtual_fn_field()  :  gnu-v2-abi.c
<item>gnuv3_baseclass_offset()  :  gnu-v3-abi.c
<item>gnuv3_virtual_fn_field()  :  gnu-v3-abi.c
<item>hand_function_call()  :  infcall.c
<item>handle_command()  :  infrun.c
<item>hpacc_value_rtti_type()  :  hpacc-abi.c
<item>hpacc_virtual_fn_field()  :  hpacc-abi.c
<item>ignore_command()  :  breakpoint.c
<item>info_common_command()  :  f-valprint.c
<item>info_macro_command()  :  macrocmd.c
<item>init_array_element()  :  eval.c
<item>install_variable()  :  varobj.c
<item>interp_set()  :  interps.c
<item>interp_set_ui_out()  :  interps.c
<item>interpreter_exec_cmd()  :  interps.c
<item>invoke_block_command()  :  printcmd.c
<item>is_constructor_name()  :  cp-abi.c
<item>is_destructor_name()  :  cp-abi.c
<item>is_operator_name()  :  cp-abi.c
<item>is_vtable_name()  :  cp-abi.c
<item>java_error()  :  jv-exp.c
<item>java_lex()  :  jv-exp.c
<item>java_parse()  :  jv-exp.c
<item>java_primitive_type()  :  jv-lang.c
<item>java_type_from_name()  :  jv-exp.c
<item>java_value_string()  :  jv-lang.c
<item>jump_command()  :  infcmd.c
<item>kill_command()  :  inflow.c
<item>kill_if_already_running()  :  infcmd.c
<item>kill_or_be_killed()  :  target/target.c
<item>load_kod_library()  :  kod.c
<item>load_progress()  :  symfile.c
<item>load_section_callback()  :  symfile.c
<item>locate_first_half()  :  linespec.c
<item>locate_var_value()  :  findvar.c
<item>loclist_tracepoint_var_ref()  :  dwarf2loc.c
<item>longest_to_int()  :  valprint.c
<item>lookup_cached_function()  :  value.c
<item>lookup_charset_or_error()  :  charset.c
<item>lookup_enum()  :  gdbtypes.c
<item>lookup_fundamental_type()  :  gdbtypes.c
<item>lookup_struct()  :  gdbtypes.c
<item>lookup_struct_elt_type()  :  gdbtypes.c
<item>lookup_struct_typedef()  :  objc-lang.c
<item>lookup_symtab()  :  symtab.c
<item>lookup_template_type()  :  gdbtypes.c
<item>lookup_typename()  :  gdbtypes.c
<item>lookup_union()  :  gdbtypes.c
<item>m2_error()  :  m2-exp.c
<item>m2_lex()  :  m2-exp.c
<item>m2_parse()  :  m2-exp.c
<item>macro_define_command()  :  macrocmd.c
<item>macro_expand_command()  :  macrocmd.c
<item>macro_expand_once()  :  macroexp.c
<item>macro_expand_once_command()  :  macrocmd.c
<item>macro_list_command()  :  macrocmd.c
<item>macro_undef_command()  :  macrocmd.c
<item>maintenance_print_msymbols()  :  symmisc.c
<item>maintenance_print_psymbols()  :  symmisc.c
<item>maintenance_print_symbols()  :  symmisc.c
<item>maintenance_set_profile_cmd()  :  maint.c
<item>maintenance_translate_address()  :  maint.c
<item>make_cleanup_start_report_timer()  :  maint.c
<item>make_cleanup_ui_out_suppress_output()  :  utils.c
<item>map_overlay_command()  :  symfile.c
<item>mem_command()  :  memattr.c
<item>mem_delete_command()  :  memattr.c
<item>mem_disable_command()  :  memattr.c
<item>mem_enable_command()  :  memattr.c
<item>mipscoff_symfile_read()  :  mipsread.c
<item>name_lookup()  :  ada-exp.c
<item>nlm_symtab_read()  :  nlmread.c
<item>no_control_char_error()  :  utils.c
<item>noprocess()  :  target/target.c
<item>nosupport_runtime()  :  target/target.c
<item>objc_error()  :  objc-exp.c
<item>objc_lex()  :  objc-exp.c
<item>objc_parse()  :  objc-exp.c
<item>open_source_file_fullpath()  :  source.c
<item>operator_chars()  :  symtab.c
<item>operator_length_standard()  :  parse.c
<item>oso_scan_partial_symtab()  :  dbxread.c
<item>overlay_load_command()  :  symfile.c
<item>pack_long()  :  value.c
<item>packet_command()  :  remote.c
<item>packet_ok()  :  remote.c
<item>parse_and_eval_type()  :  eval.c
<item>parse_breakpoint_sals()  :  breakpoint.c
<item>parse_escape()  :  utils.c
<item>parse_expression()  :  parse.c
<item>parse_expression_in_context()  :  parse.c
<item>parse_frame_specification_1()  :  stack.c
<item>parse_number()  :  p-exp.c
<item>partial_read_comp_unit_head()  :  dwarf2read.c
<item>pascal_error()  :  p-exp.c
<item>pascal_lex()  :  p-exp.c
<item>pascal_object_print_class_method()  :  p-valprint.c
<item>pascal_parse()  :  p-exp.c
<item>pascal_type_print_varspec_prefix()  :  p-typeprint.c
<item>pascal_type_print_varspec_suffix()  :  p-typeprint.c
<item>pascal_val_print()  :  p-valprint.c
<item>peek_die_abbrev()  :  dwarf2read.c
<item>perror_with_name()  :  utils.c
<item>pid_info()  :  infcmd.c
<item>pos_atr()  :  ada-lang.c
<item>print_float_info()  :  infcmd.c
<item>print_frame_label_vars()  :  stack.c
<item>print_object_command()  :  objc-lang.c
<item>print_octal_chars()  :  valprint.c
<item>print_scalar_formatted()  :  printcmd.c
<item>print_single_dwarf_location()  :  dwarf2loc.c
<item>print_source_lines_base()  :  source.c
<item>print_subexp_standard()  :  expprint.c
<item>print_type_scalar()  :  typeprint.c
<item>print_vector_info()  :  infcmd.c
<item>printf_command()  :  printcmd.c
<item>processAttribute()  :  ada-exp.c
<item>processInt()  :  ada-exp.c
<item>push_expression_name()  :  jv-exp.c
<item>push_qualified_expression_name()  :  jv-exp.c
<item>put_frame_register()  :  frame.c
<item>re_exec_1()  :  infcmd.c
<item>re_exec_once()  :  infcmd.c
<item>read_attribute_value()  :  dwarf2read.c
<item>read_const()  :  ax-general.c
<item>read_dbx_symtab()  :  dbxread.c
<item>read_full_die()  :  dwarf2read.c
<item>read_indirect_string()  :  dwarf2read.c
<item>read_ofile_symtab()  :  dwarfread.c
<item>read_ofile_symtab_from_oso()  :  dbxread.c
<item>read_sleb128()  :  dwarf2expr.c
<item>read_uleb128()  :  dwarf2expr.c
<item>read_var_value()  :  findvar.c
<item>readchar()  :  remote.c
<item>registers_info()  :  infcmd.c
<item>remote_async_wait()  :  remote.c
<item>remote_detach()  :  remote.c
<item>remote_disconnect()  :  remote.c
<item>remote_fetch_registers()  :  remote.c
<item>remote_get_noisy_reply()  :  tracepoint.c
<item>remote_insert_hw_breakpoint()  :  remote.c
<item>remote_insert_watchpoint()  :  remote.c
<item>remote_macosx_attach()  :  remote.c
<item>remote_macosx_create_inferior()  :  remote.c
<item>remote_open_1()  :  remote.c
<item>remote_rcmd()  :  remote.c
<item>remote_remove_hw_breakpoint()  :  remote.c
<item>remote_remove_watchpoint()  :  remote.c
<item>remote_send()  :  remote.c
<item>remote_store_registers()  :  remote.c
<item>remote_threads_info()  :  remote.c
<item>remote_wait()  :  remote.c
<item>remote_xfer_partial()  :  remote.c
<item>remove_all_typedefs()  :  gdbtypes.c
<item>remove_symbol_file_command()  :  symfile.c
<item>reread_symbols_for_objfile()  :  symfile.c
<item>resolve_sal_pc()  :  breakpoint.c
<item>resolve_subexp()  :  ada-lang.c
<item>return_command()  :  stack.c
<item>reverse_search_command()  :  source.c
<item>run_command_1()  :  infcmd.c
<item>save_breakpoints_command()  :  breakpoint.c
<item>scm_lookup_name()  :  scm-lang.c
<item>scm_lreadparen()  :  scm-exp.c
<item>scm_lreadr()  :  scm-exp.c
<item>scm_unpack()  :  scm-lang.c
<item>scope_info()  :  tracepoint.c
<item>search_struct_field()  :  valops.c
<item>search_struct_method()  :  valops.c
<item>search_symbols()  :  symtab.c
<item>select_source_symtab()  :  source.c
<item>selectors_info()  :  objc-lang.c
<item>set_case_str()  :  language.c
<item>set_cp_abi_cmd()  :  cp-abi.c
<item>set_default_source_symtab_and_line()  :  source.c
<item>set_ext_lang_command()  :  symfile.c
<item>set_gdbarch_from_file()  :  arch-utils.c
<item>set_history_size_command()  :  top.c
<item>set_host_and_target_charsets()  :  charset.c
<item>set_ignore_count()  :  breakpoint.c
<item>set_input_radix_1()  :  valprint.c
<item>set_interpreter_cmd()  :  interps.c
<item>set_language_command()  :  language.c
<item>set_max_remote_packet_size()  :  remote.c
<item>set_memory_packet_size()  :  remote.c
<item>set_output_radix_1()  :  valprint.c
<item>set_range_str()  :  language.c
<item>set_remote_debugflags_command()  :  remote.c
<item>set_schedlock_helper()  :  infrun.c
<item>set_scheduler_locking_mode()  :  infrun.c
<item>set_system_call_allowed()  :  remote-fileio.c
<item>set_type_str()  :  language.c
<item>show_system_call_allowed()  :  remote-fileio.c
<item>signal_command()  :  infcmd.c
<item>simple_read_overlay_table()  :  symfile.c
<item>skip_one_die()  :  dwarf2read.c
<item>solib_add()  :  solib.c
<item>solib_map_sections()  :  solib.c
<item>sources_info()  :  symtab.c
<item>stabsect_build_psymtabs()  :  dbxread.c
<item>start_command()  :  infcmd.c
<item>step_1_inlining()  :  infcmd.c
<item>step_1_no_inlining()  :  infcmd.c
<item>step_once()  :  infcmd.c
<item>string_to_operator()  :  ada-exp.c
<item>substitute_args()  :  macroexp.c
<item>symbol_file_add_from_memory()  :  symfile-mem.c
<item>symbol_file_add_with_addrs_or_offsets_using_objfile()  :  symfile.c
<item>symbol_file_clear()  :  symfile.c
<item>symbol_file_command()  :  symfile.c
<item>symbol_found()  :  linespec.c
<item>symbols_found()  :  linespec.c
<item>symfile_bfd_open()  :  symfile.c
<item>tag_type_to_type()  :  dwarf2read.c
<item>target_preopen()  :  target/target.c
<item>tcomplain()  :  target/target.c
<item>thread_apply_all_command()  :  thread.c
<item>thread_apply_command()  :  thread.c
<item>thread_command()  :  thread.c
<item>to_fixed_array_type()  :  ada-lang.c
<item>trace_command()  :  tracepoint.c
<item>trace_dump_command()  :  tracepoint.c
<item>trace_error()  :  tracepoint.c
<item>trace_find_command()  :  tracepoint.c
<item>trace_find_line_command()  :  tracepoint.c
<item>trace_find_outside_command()  :  tracepoint.c
<item>trace_find_pc_command()  :  tracepoint.c
<item>trace_find_range_command()  :  tracepoint.c
<item>trace_find_tracepoint_command()  :  tracepoint.c
<item>trace_pass_command()  :  tracepoint.c
<item>trace_start_command()  :  tracepoint.c
<item>trace_status_command()  :  tracepoint.c
<item>trace_stop_command()  :  tracepoint.c
<item>tracepoint_save_command()  :  tracepoint.c
<item>trad_frame_get_prev_register()  :  trad-frame.c
<item>typedef_print()  :  typeprint.c
<item>undisplay_command()  :  printcmd.c
<item>unk_lang_create_fundamental_type()  :  language.c
<item>unk_lang_emit_char()  :  language.c
<item>unk_lang_error()  :  language.c
<item>unk_lang_print_type()  :  language.c
<item>unk_lang_printchar()  :  language.c
<item>unk_lang_printstr()  :  language.c
<item>unk_lang_val_print()  :  language.c
<item>unk_lang_value_print()  :  language.c
<item>unmap_overlay_command()  :  symfile.c
<item>unpack_long()  :  value.c
<item>until_break_command()  :  breakpoint.c
<item>until_command()  :  infcmd.c
<item>until_next_command()  :  infcmd.c
<item>up_silently_base()  :  stack.c
<item>user_select_syms()  :  ada-lang.c
<item>using_struct_return()  :  value.c
<item>validate_actionline()  :  tracepoint.c
<item>validate_format()  :  printcmd.c
<item>value_addr()  :  valops.c
<item>value_array()  :  valops.c
<item>value_as_double()  :  value.c
<item>value_assign()  :  valops.c
<item>value_at()  :  valops.c
<item>value_at_lazy()  :  valops.c
<item>value_binop()  :  valarith.c
<item>value_cast_1()  :  valops.c
<item>value_coerce_array()  :  valops.c
<item>value_coerce_function()  :  valops.c
<item>value_complement()  :  valarith.c
<item>value_concat()  :  valarith.c
<item>value_equal()  :  valarith.c
<item>value_find_oload_method_list()  :  valops.c
<item>value_fn_field()  :  value.c
<item>value_from_double()  :  value.c
<item>value_from_longest()  :  value.c
<item>value_in()  :  valarith.c
<item>value_ind()  :  valops.c
<item>value_less()  :  valarith.c
<item>value_namespace_elt()  :  valops.c
<item>value_neg()  :  valarith.c
<item>value_nsstring()  :  objc-lang.c
<item>value_of_builtin_frame_ps_reg()  :  std-regs.c
<item>value_of_builtin_frame_sp_reg()  :  std-regs.c
<item>value_of_child()  :  varobj.c
<item>value_of_local()  :  valops.c
<item>value_of_this()  :  valops.c
<item>value_of_variable()  :  valops.c
<item>value_pos()  :  valarith.c
<item>value_repeat()  :  valops.c
<item>value_slice()  :  valops.c
<item>value_struct_elt()  :  valops.c
<item>value_struct_elt_for_reference()  :  valops.c
<item>value_sub()  :  valarith.c
<item>value_subscript()  :  valarith.c
<item>value_subscript_packed()  :  ada-lang.c
<item>value_subscripted_rvalue()  :  valarith.c
<item>value_val_atr()  :  ada-lang.c
<item>value_x_binop()  :  valarith.c
<item>value_x_unop()  :  valarith.c
<item>varobj_get_handle()  :  varobj.c
<item>varobj_lookup_struct_elt_type_by_index()  :  varobj.c
<item>varobj_value_struct_elt_by_index()  :  varobj.c
<item>watch_command_1()  :  breakpoint.c
<item>while_stepping_pseudocommand()  :  tracepoint.c
<item>write_object_renaming()  :  ada-exp.c
</itemize>
</descrip>

<sect1>Global Function error_stream()

<p><tt>void error_stream ( struct ui_file* stream )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>make_cleanup()  :  utils.c
<item>ui_file_xstrdup()  :  ui-file.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>cplusplus_error()  :  linespec.c
<item>delete_breakpoint()  :  breakpoint.c
<item>memory_error()  :  corefile.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>xfree()  :  utils.c
</itemize>
</descrip>

<sect1>Global Function fatal()

<p><tt>void fatal ( const char* string, ... )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>__builtin_va_end(), __builtin_va_start(), throw_vfatal()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>quit()  :  utils.c
</itemize>
</descrip>

<sect1>Global Function fprintf_filtered()

<p><tt>void fprintf_filtered ( struct ui_file* stream, const char* format, ... )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>vfprintf_filtered()  :  utils.c
<item>__builtin_va_end(), __builtin_va_start()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>ada_dump_subexp_body()  :  ada-lang.c
<item>ada_emit_char()  :  ada-valprint.c
<item>ada_print_floating()  :  ada-valprint.c
<item>ada_print_scalar()  :  ada-valprint.c
<item>ada_print_subexp()  :  ada-lang.c
<item>ada_print_type()  :  ada-typeprint.c
<item>ada_typedef_print()  :  ada-typeprint.c
<item>ada_val_print_1()  :  ada-valprint.c
<item>ada_value_print()  :  ada-valprint.c
<item>ax_print()  :  ax-general.c
<item>c_emit_char()  :  c-lang.c
<item>c_printstr()  :  c-lang.c
<item>c_type_print_args()  :  c-typeprint.c
<item>c_type_print_base()  :  c-typeprint.c
<item>c_type_print_modifier()  :  c-typeprint.c
<item>c_type_print_varspec_prefix()  :  c-typeprint.c
<item>c_type_print_varspec_suffix()  :  c-typeprint.c
<item>c_val_print()  :  c-valprint.c
<item>c_value_print()  :  c-valprint.c
<item>catch_info()  :  stack.c
<item>complaints_show_value()  :  complaints.c
<item>cp_print_class_member()  :  cp-valprint.c
<item>cp_print_class_method()  :  cp-valprint.c
<item>cp_print_hpacc_virtual_table_entries()  :  cp-valprint.c
<item>cp_print_value()  :  cp-valprint.c
<item>cp_print_value_fields()  :  cp-valprint.c
<item>cp_type_print_derivation_info()  :  c-typeprint.c
<item>cp_type_print_method_args()  :  c-typeprint.c
<item>default_print_registers_info()  :  infcmd.c
<item>delete_breakpoint()  :  breakpoint.c
<item>dump_msymbols()  :  symmisc.c
<item>dump_prefix_expression()  :  expprint.c
<item>dump_protocol_log()  :  remote.c
<item>dump_psymtab()  :  symmisc.c
<item>dump_raw_expression()  :  expprint.c
<item>dump_subexp()  :  expprint.c
<item>dump_subexp_body_standard()  :  expprint.c
<item>dump_symtab_1()  :  symmisc.c
<item>f77_create_arrayprint_offset_tbl()  :  f-valprint.c
<item>f77_print_array_1()  :  f-valprint.c
<item>f_emit_char()  :  f-lang.c
<item>f_printstr()  :  f-lang.c
<item>f_type_print_base()  :  f-typeprint.c
<item>f_type_print_varspec_prefix()  :  f-typeprint.c
<item>f_type_print_varspec_suffix()  :  f-typeprint.c
<item>f_val_print()  :  f-valprint.c
<item>find_oload_champ()  :  valops.c
<item>gdb_print_host_address()  :  utils.c
<item>hardwire_print_tty_state()  :  ser-unix.c
<item>info_macro_command()  :  macrocmd.c
<item>insert_bp_location()  :  breakpoint.c
<item>java_emit_char()  :  jv-lang.c
<item>java_print_value_fields()  :  jv-valprint.c
<item>java_type_print_base()  :  jv-typeprint.c
<item>java_type_print_derivation_info()  :  jv-typeprint.c
<item>java_value_print()  :  jv-valprint.c
<item>locexpr_describe_location()  :  dwarf2loc.c
<item>loclist_describe_location()  :  dwarf2loc.c
<item>m2_emit_char()  :  m2-lang.c
<item>m2_printstr()  :  m2-lang.c
<item>maintenance_print_msymbols()  :  symmisc.c
<item>make_cleanup_set_restore_debugger_mode()  :  objc-lang.c
<item>memory_error()  :  corefile.c
<item>objc_emit_char()  :  objc-lang.c
<item>objc_printstr()  :  objc-lang.c
<item>pascal_object_print_class_member()  :  p-valprint.c
<item>pascal_object_print_class_method()  :  p-valprint.c
<item>pascal_object_print_value()  :  p-valprint.c
<item>pascal_object_print_value_fields()  :  p-valprint.c
<item>pascal_one_char()  :  p-lang.c
<item>pascal_print_func_args()  :  p-typeprint.c
<item>pascal_printstr()  :  p-lang.c
<item>pascal_type_print_base()  :  p-typeprint.c
<item>pascal_type_print_derivation_info()  :  p-typeprint.c
<item>pascal_type_print_varspec_prefix()  :  p-typeprint.c
<item>pascal_type_print_varspec_suffix()  :  p-typeprint.c
<item>pascal_val_print()  :  p-valprint.c
<item>pascal_value_print()  :  p-valprint.c
<item>print_address_demangle()  :  printcmd.c
<item>print_address_symbolic()  :  printcmd.c
<item>print_array_type()  :  ada-typeprint.c
<item>print_binary_chars()  :  valprint.c
<item>print_block_frame_labels()  :  stack.c
<item>print_block_frame_locals()  :  stack.c
<item>print_choices()  :  ada-typeprint.c
<item>print_decimal_chars()  :  valprint.c
<item>print_dynamic_range_bound()  :  ada-typeprint.c
<item>print_enum_type()  :  ada-typeprint.c
<item>print_equivalent_f77_float_type()  :  f-typeprint.c
<item>print_field_values()  :  ada-valprint.c
<item>print_fixed_point_type()  :  ada-typeprint.c
<item>print_float_info()  :  infcmd.c
<item>print_floating()  :  valprint.c
<item>print_floating_in_hex()  :  valprint.c
<item>print_frame_arg_vars()  :  stack.c
<item>print_frame_label_vars()  :  stack.c
<item>print_frame_local_vars()  :  stack.c
<item>print_frame_nameless_args()  :  stack.c
<item>print_func_type()  :  ada-typeprint.c
<item>print_gdb_version()  :  top.c
<item>print_hex_chars_with_byte_order()  :  valprint.c
<item>print_octal_chars()  :  valprint.c
<item>print_optional_low_bound()  :  ada-valprint.c
<item>print_ostype()  :  valprint.c
<item>print_partial_symbols()  :  symmisc.c
<item>print_range()  :  ada-typeprint.c
<item>print_range_bound()  :  ada-typeprint.c
<item>print_range_type_named()  :  ada-typeprint.c
<item>print_record()  :  ada-valprint.c
<item>print_record_field_types()  :  ada-typeprint.c
<item>print_record_type()  :  ada-typeprint.c
<item>print_scalar_formatted()  :  printcmd.c
<item>print_single_dwarf_location()  :  dwarf2loc.c
<item>print_subexp_standard()  :  expprint.c
<item>print_symbol()  :  symmisc.c
<item>print_type_scalar()  :  typeprint.c
<item>print_unchecked_union_type()  :  ada-typeprint.c
<item>print_variant_clauses()  :  ada-typeprint.c
<item>print_variant_part()  :  ada-typeprint.c
<item>print_vax_floating_point_type()  :  ada-typeprint.c
<item>print_vector_info()  :  infcmd.c
<item>printstr()  :  ada-valprint.c
<item>range_error()  :  language.c
<item>rank_one_type()  :  gdbtypes.c
<item>read_frame()  :  remote.c
<item>remote_backtrace_self()  :  remote.c
<item>scm_ipruk()  :  scm-valprint.c
<item>scm_printchar()  :  scm-lang.c
<item>scm_printstr()  :  scm-lang.c
<item>scm_scmval_print()  :  scm-valprint.c
<item>scope_info()  :  tracepoint.c
<item>show_addressprint()  :  valprint.c
<item>show_annotation_level()  :  top.c
<item>show_architecture()  :  arch-utils.c
<item>show_asm_demangle()  :  utils.c
<item>show_async_command_editing_p()  :  top.c
<item>show_auto_solib_add()  :  solib.c
<item>show_backtrace_limit()  :  frame.c
<item>show_backtrace_past_entry()  :  frame.c
<item>show_backtrace_past_main()  :  frame.c
<item>show_can_use_hw_watchpoints()  :  breakpoint.c
<item>show_caution()  :  top.c
<item>show_chars_per_line()  :  utils.c
<item>show_charset()  :  charset.c
<item>show_coerce_float_to_double_p()  :  infcall.c
<item>show_debug_debugmap()  :  dwarf2read.c
<item>show_debug_file_directory()  :  symfile.c
<item>show_debug_infrun()  :  infrun.c
<item>show_debug_x86bt()  :  target/x86-shared-tdep.c
<item>show_demangle()  :  utils.c
<item>show_demangling_style_names()  :  demangle.c
<item>show_download_write_size()  :  symfile.c
<item>show_dwarf2_max_cache_age()  :  dwarf2read.c
<item>show_exec_done_display_p()  :  top.c
<item>show_expressiondebug()  :  parse.c
<item>show_ext_args()  :  symfile.c
<item>show_follow_fork_mode_string()  :  infrun.c
<item>show_frame_debug()  :  frame.c
<item>show_gdbarch_debug()  :  gdbarch.c
<item>show_gnutarget_string()  :  corefile.c
<item>show_history_filename()  :  top.c
<item>show_history_size()  :  top.c
<item>show_host_charset_name()  :  charset.c
<item>show_input_radix()  :  valprint.c
<item>show_lines_per_page()  :  utils.c
<item>show_lines_to_list()  :  source.c
<item>show_maintenance_profile_p()  :  maint.c
<item>show_max_symbolic_offset()  :  printcmd.c
<item>show_new_async_prompt()  :  top.c
<item>show_objectprint()  :  cp-valprint.c
<item>show_observer_debug()  :  observer.c
<item>show_opaque_type_resolution()  :  gdbtypes.c
<item>show_osabi()  :  osabi.c
<item>show_output_radix()  :  valprint.c
<item>show_overload_debug()  :  gdbtypes.c
<item>show_overload_resolution()  :  valops.c
<item>show_pagination_enabled()  :  utils.c
<item>show_pascal_static_field_print()  :  p-valprint.c
<item>show_pathname_substitutions()  :  source.c
<item>show_pending_break_support()  :  breakpoint.c
<item>show_pp_source_pos()  :  macrocmd.c
<item>show_prettyprint_arrays()  :  valprint.c
<item>show_prettyprint_structs()  :  valprint.c
<item>show_print_max()  :  valprint.c
<item>show_print_symbol_filename()  :  printcmd.c
<item>show_repeat_count_threshold()  :  valprint.c
<item>show_scheduler_mode()  :  infrun.c
<item>show_sevenbit_strings()  :  utils.c
<item>show_solib_search_path()  :  solib.c
<item>show_static_field_print()  :  cp-valprint.c
<item>show_step_stop_if_no_debug()  :  infrun.c
<item>show_stop_on_solib_events()  :  infrun.c
<item>show_stop_print_at_null()  :  valprint.c
<item>show_symbol_reloading()  :  symfile.c
<item>show_target_charset_name()  :  charset.c
<item>show_targetdebug()  :  target/target.c
<item>show_trust_readonly()  :  target/target.c
<item>show_unionprint()  :  valprint.c
<item>show_unwind_on_signal_p()  :  infcall.c
<item>show_varobjdebug()  :  varobj.c
<item>show_vtblprint()  :  cp-valprint.c
<item>show_watchdog()  :  maint.c
<item>show_write_history_p()  :  top.c
<item>target_xfer_partial()  :  target/target.c
<item>type_error()  :  language.c
<item>typedef_print()  :  typeprint.c
<item>val_print()  :  valprint.c
<item>val_print_array_elements()  :  valprint.c
<item>val_print_packed_array_elements()  :  ada-valprint.c
<item>val_print_string()  :  valprint.c
<item>value_check_printable()  :  valprint.c
<item>vcomplaint()  :  complaints.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>fputstr_filtered()  :  utils.c
</itemize>
</descrip>

<sect1>Global Function fprintf_symbol_filtered()

<p><tt>void fprintf_symbol_filtered ( struct ui_file* stream, const char* name, enum language lang, int arg_mode )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fputs_filtered()  :  utils.c
<item>language_def()  :  language.c
<item>language_demangle()  :  language.c
<item>xfree()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>address_info()  :  printcmd.c
<item>cp_print_value_fields()  :  cp-valprint.c
<item>cp_type_print_method_args()  :  c-typeprint.c
<item>frame_info()  :  stack.c
<item>java_print_value_fields()  :  jv-valprint.c
<item>pascal_object_print_value_fields()  :  p-valprint.c
<item>print_field_values()  :  ada-valprint.c
<item>print_frame()  :  stack.c
<item>print_frame_args()  :  stack.c
<item>print_inlined_frame()  :  inlining.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>demangle  :  utils.c
</itemize>
</descrip>

<sect1>Global Function fprintf_unfiltered()

<p><tt>void fprintf_unfiltered ( struct ui_file* stream, const char* format, ... )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>vfprintf_unfiltered()  :  utils.c
<item>__builtin_va_end(), __builtin_va_start()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>ada_lookup_struct_elt_type()  :  ada-lang.c
<item>add_language()  :  language.c
<item>add_path()  :  source.c
<item>async_remote_interrupt()  :  remote.c
<item>async_remote_interrupt_twice()  :  remote.c
<item>captured_main()  :  main.c
<item>check_binary_download()  :  remote.c
<item>check_inlined_function_calls()  :  dwarf2read.c
<item>convert_oso_map_to_final_map()  :  dwarf2read.c
<item>cplusplus_error()  :  linespec.c
<item>create_kext_addr_map()  :  dwarf2read.c
<item>create_new_frame()  :  frame.c
<item>create_sentinel_frame()  :  frame.c
<item>dbx_psymtab_to_symtab()  :  dbxread.c
<item>dbx_psymtab_to_symtab_1()  :  dbxread.c
<item>debug_check_is_objfile_loaded()  :  target/target.c
<item>debug_free_thread_inferior_status()  :  target/target.c
<item>debug_keep_going()  :  target/target.c
<item>debug_load_solib()  :  target/target.c
<item>debug_print_register()  :  target/target.c
<item>debug_restore_thread_inferior_status()  :  target/target.c
<item>debug_save_thread_inferior_status()  :  target/target.c
<item>debug_to_acknowledge_created_inferior()  :  target/target.c
<item>debug_to_attach()  :  target/target.c
<item>debug_to_can_run()  :  target/target.c
<item>debug_to_can_use_hw_breakpoint()  :  target/target.c
<item>debug_to_close()  :  target/target.c
<item>debug_to_create_inferior()  :  target/target.c
<item>debug_to_detach()  :  target/target.c
<item>debug_to_disconnect()  :  target/target.c
<item>debug_to_enable_exception_callback()  :  target/target.c
<item>debug_to_files_info()  :  target/target.c
<item>debug_to_find_exception_catchpoints()  :  target/target.c
<item>debug_to_follow_fork()  :  target/target.c
<item>debug_to_get_current_exception_event()  :  target/target.c
<item>debug_to_has_exited()  :  target/target.c
<item>debug_to_insert_breakpoint()  :  target/target.c
<item>debug_to_insert_exec_catchpoint()  :  target/target.c
<item>debug_to_insert_fork_catchpoint()  :  target/target.c
<item>debug_to_insert_hw_breakpoint()  :  target/target.c
<item>debug_to_insert_vfork_catchpoint()  :  target/target.c
<item>debug_to_insert_watchpoint()  :  target/target.c
<item>debug_to_kill()  :  target/target.c
<item>debug_to_load()  :  target/target.c
<item>debug_to_lookup_symbol()  :  target/target.c
<item>debug_to_mourn_inferior()  :  target/target.c
<item>debug_to_notice_signals()  :  target/target.c
<item>debug_to_open()  :  target/target.c
<item>debug_to_pid_to_exec_file()  :  target/target.c
<item>debug_to_pid_to_str()  :  target/target.c
<item>debug_to_post_attach()  :  target/target.c
<item>debug_to_post_startup_inferior()  :  target/target.c
<item>debug_to_prepare_to_store()  :  target/target.c
<item>debug_to_rcmd()  :  target/target.c
<item>debug_to_region_size_ok_for_hw_watchpoint()  :  target/target.c
<item>debug_to_remove_breakpoint()  :  target/target.c
<item>debug_to_remove_exec_catchpoint()  :  target/target.c
<item>debug_to_remove_fork_catchpoint()  :  target/target.c
<item>debug_to_remove_hw_breakpoint()  :  target/target.c
<item>debug_to_remove_vfork_catchpoint()  :  target/target.c
<item>debug_to_remove_watchpoint()  :  target/target.c
<item>debug_to_reported_exec_events_per_exec_call()  :  target/target.c
<item>debug_to_resume()  :  target/target.c
<item>debug_to_stop()  :  target/target.c
<item>debug_to_stopped_by_watchpoint()  :  target/target.c
<item>debug_to_stopped_data_address()  :  target/target.c
<item>debug_to_store_registers()  :  target/target.c
<item>debug_to_terminal_inferior()  :  target/target.c
<item>debug_to_terminal_info()  :  target/target.c
<item>debug_to_terminal_init()  :  target/target.c
<item>debug_to_terminal_ours()  :  target/target.c
<item>debug_to_terminal_ours_for_output()  :  target/target.c
<item>debug_to_terminal_save_ours()  :  target/target.c
<item>debug_to_thread_alive()  :  target/target.c
<item>debug_to_wait()  :  target/target.c
<item>delete_breakpoint()  :  breakpoint.c
<item>deprecated_debug_xfer_memory()  :  target/target.c
<item>deprecated_update_frame_base_hack()  :  frame.c
<item>deprecated_update_frame_pc_hack()  :  frame.c
<item>disable_current_display()  :  printcmd.c
<item>do_end_debugger_mode()  :  objc-lang.c
<item>do_reset_debug_mode_flag()  :  objc-lang.c
<item>dump_die()  :  dwarf2read.c
<item>dump_endian_bytes()  :  regcache.c
<item>dump_psymtab()  :  symmisc.c
<item>dwarf2_record_line()  :  dwarf2read.c
<item>find_arch_by_info()  :  gdbarch.c
<item>find_implementation()  :  objc-lang.c
<item>find_implementation_from_class()  :  objc-lang.c
<item>flush_cached_frames()  :  frame.c
<item>fprint_dummy_frames()  :  dummy-frame.c
<item>fprint_field()  :  frame.c
<item>fprint_frame()  :  frame.c
<item>fprint_frame_id()  :  frame.c
<item>fprint_frame_type()  :  frame.c
<item>frame_debug_got_null_frame()  :  frame.c
<item>frame_func_unwind()  :  frame.c
<item>frame_id_eq()  :  frame.c
<item>frame_id_inner()  :  frame.c
<item>frame_id_p()  :  frame.c
<item>frame_pc_unwind()  :  frame.c
<item>frame_register_unwind()  :  frame.c
<item>gdbarch_addr_bit()  :  gdbarch.c
<item>gdbarch_addr_bits_remove()  :  gdbarch.c
<item>gdbarch_address_class_name_to_type_flags()  :  gdbarch.c
<item>gdbarch_address_class_type_flags()  :  gdbarch.c
<item>gdbarch_address_class_type_flags_to_name()  :  gdbarch.c
<item>gdbarch_address_to_pointer()  :  gdbarch.c
<item>gdbarch_adjust_breakpoint_address()  :  gdbarch.c
<item>gdbarch_adjust_ehframe_regnum()  :  gdbarch.c
<item>gdbarch_believe_pcc_promotion()  :  gdbarch.c
<item>gdbarch_bfd_arch_info()  :  gdbarch.c
<item>gdbarch_bfd_vma_bit()  :  gdbarch.c
<item>gdbarch_breakpoint_from_pc()  :  gdbarch.c
<item>gdbarch_byte_order()  :  gdbarch.c
<item>gdbarch_call_dummy_location()  :  gdbarch.c
<item>gdbarch_cannot_fetch_register()  :  gdbarch.c
<item>gdbarch_cannot_step_breakpoint()  :  gdbarch.c
<item>gdbarch_cannot_store_register()  :  gdbarch.c
<item>gdbarch_char_signed()  :  gdbarch.c
<item>gdbarch_coff_make_msymbol_special()  :  gdbarch.c
<item>gdbarch_construct_inferior_arguments()  :  gdbarch.c
<item>gdbarch_convert_from_func_ptr_addr()  :  gdbarch.c
<item>gdbarch_convert_register_p()  :  gdbarch.c
<item>gdbarch_dbx_make_msymbol_special()  :  gdbarch.c
<item>gdbarch_decr_pc_after_break()  :  gdbarch.c
<item>gdbarch_deprecated_extract_return_value()  :  gdbarch.c
<item>gdbarch_deprecated_extract_struct_value_address()  :  gdbarch.c
<item>gdbarch_deprecated_fp_regnum()  :  gdbarch.c
<item>gdbarch_deprecated_function_start_offset()  :  gdbarch.c
<item>gdbarch_deprecated_push_arguments()  :  gdbarch.c
<item>gdbarch_deprecated_reg_struct_has_addr()  :  gdbarch.c
<item>gdbarch_deprecated_register_byte()  :  gdbarch.c
<item>gdbarch_deprecated_register_size()  :  gdbarch.c
<item>gdbarch_deprecated_saved_pc_after_call()  :  gdbarch.c
<item>gdbarch_deprecated_stack_align()  :  gdbarch.c
<item>gdbarch_deprecated_store_return_value()  :  gdbarch.c
<item>gdbarch_deprecated_store_struct_return()  :  gdbarch.c
<item>gdbarch_deprecated_use_struct_convention()  :  gdbarch.c
<item>gdbarch_double_bit()  :  gdbarch.c
<item>gdbarch_double_format()  :  gdbarch.c
<item>gdbarch_dump()  :  gdbarch.c
<item>gdbarch_dwarf2_reg_to_regnum()  :  gdbarch.c
<item>gdbarch_dwarf_reg_to_regnum()  :  gdbarch.c
<item>gdbarch_ecoff_reg_to_regnum()  :  gdbarch.c
<item>gdbarch_elf_make_msymbol_special()  :  gdbarch.c
<item>gdbarch_extract_return_value()  :  gdbarch.c
<item>gdbarch_fetch_pointer_argument()  :  gdbarch.c
<item>gdbarch_fetch_tls_load_module_address()  :  gdbarch.c
<item>gdbarch_float_bit()  :  gdbarch.c
<item>gdbarch_float_format()  :  gdbarch.c
<item>gdbarch_fp0_regnum()  :  gdbarch.c
<item>gdbarch_frame_align()  :  gdbarch.c
<item>gdbarch_frame_args_skip()  :  gdbarch.c
<item>gdbarch_frame_num_args()  :  gdbarch.c
<item>gdbarch_frame_red_zone_size()  :  gdbarch.c
<item>gdbarch_get_longjmp_target()  :  gdbarch.c
<item>gdbarch_have_nonsteppable_watchpoint()  :  gdbarch.c
<item>gdbarch_in_function_epilogue_p()  :  gdbarch.c
<item>gdbarch_in_solib_return_trampoline()  :  gdbarch.c
<item>gdbarch_info_fill()  :  arch-utils.c
<item>gdbarch_inner_than()  :  gdbarch.c
<item>gdbarch_int_bit()  :  gdbarch.c
<item>gdbarch_integer_to_address()  :  gdbarch.c
<item>gdbarch_long_bit()  :  gdbarch.c
<item>gdbarch_long_double_bit()  :  gdbarch.c
<item>gdbarch_long_double_format()  :  gdbarch.c
<item>gdbarch_long_long_bit()  :  gdbarch.c
<item>gdbarch_memory_insert_breakpoint()  :  gdbarch.c
<item>gdbarch_memory_remove_breakpoint()  :  gdbarch.c
<item>gdbarch_name_of_malloc()  :  gdbarch.c
<item>gdbarch_num_pseudo_regs()  :  gdbarch.c
<item>gdbarch_num_regs()  :  gdbarch.c
<item>gdbarch_osabi()  :  gdbarch.c
<item>gdbarch_pc_regnum()  :  gdbarch.c
<item>gdbarch_pointer_to_address()  :  gdbarch.c
<item>gdbarch_print_float_info()  :  gdbarch.c
<item>gdbarch_print_insn()  :  gdbarch.c
<item>gdbarch_print_registers_info()  :  gdbarch.c
<item>gdbarch_print_vector_info()  :  gdbarch.c
<item>gdbarch_ps_regnum()  :  gdbarch.c
<item>gdbarch_pseudo_register_read()  :  gdbarch.c
<item>gdbarch_pseudo_register_write()  :  gdbarch.c
<item>gdbarch_ptr_bit()  :  gdbarch.c
<item>gdbarch_push_dummy_call()  :  gdbarch.c
<item>gdbarch_push_dummy_code()  :  gdbarch.c
<item>gdbarch_read_pc()  :  gdbarch.c
<item>gdbarch_read_sp()  :  gdbarch.c
<item>gdbarch_register()  :  gdbarch.c
<item>gdbarch_register_bytes_ok()  :  gdbarch.c
<item>gdbarch_register_name()  :  gdbarch.c
<item>gdbarch_register_reggroup_p()  :  gdbarch.c
<item>gdbarch_register_sim_regno()  :  gdbarch.c
<item>gdbarch_register_to_value()  :  gdbarch.c
<item>gdbarch_register_type()  :  gdbarch.c
<item>gdbarch_regset_from_core_section()  :  gdbarch.c
<item>gdbarch_remote_translate_xfer_address()  :  gdbarch.c
<item>gdbarch_return_value()  :  gdbarch.c
<item>gdbarch_sdb_reg_to_regnum()  :  gdbarch.c
<item>gdbarch_short_bit()  :  gdbarch.c
<item>gdbarch_single_step_through_delay()  :  gdbarch.c
<item>gdbarch_skip_prologue()  :  gdbarch.c
<item>gdbarch_skip_prologue_addr_ctx()  :  gdbarch.c
<item>gdbarch_skip_solib_resolver()  :  gdbarch.c
<item>gdbarch_skip_trampoline_code()  :  gdbarch.c
<item>gdbarch_smash_text_address()  :  gdbarch.c
<item>gdbarch_software_single_step()  :  gdbarch.c
<item>gdbarch_sp_regnum()  :  gdbarch.c
<item>gdbarch_stab_reg_to_regnum()  :  gdbarch.c
<item>gdbarch_stabs_argument_has_addr()  :  gdbarch.c
<item>gdbarch_store_return_value()  :  gdbarch.c
<item>gdbarch_unwind_dummy_id()  :  gdbarch.c
<item>gdbarch_unwind_pc()  :  gdbarch.c
<item>gdbarch_unwind_sp()  :  gdbarch.c
<item>gdbarch_update_p()  :  arch-utils.c
<item>gdbarch_value_to_register()  :  gdbarch.c
<item>gdbarch_virtual_frame_pointer()  :  gdbarch.c
<item>gdbarch_write_pc()  :  gdbarch.c
<item>get_class_address_from_object()  :  objc-lang.c
<item>get_frame_id()  :  frame.c
<item>get_prev_frame_1()  :  frame.c
<item>getpkt_sane()  :  remote.c
<item>handle_inferior_event()  :  infrun.c
<item>hardwire_raw()  :  ser-unix.c
<item>insert_bp_location()  :  breakpoint.c
<item>insert_breakpoints()  :  breakpoint.c
<item>insert_step_resume_breakpoint_at_frame()  :  infrun.c
<item>make_cleanup_set_restore_debugger_mode()  :  objc-lang.c
<item>memory_error()  :  corefile.c
<item>new_gdbarch_tdep()  :  gdbarch.c
<item>new_objc_runtime_class_getClass()  :  objc-lang.c
<item>new_objc_runtime_find_impl()  :  objc-lang.c
<item>objc_fixup_ivar_offset()  :  objc-lang.c
<item>objc_setup_safe_print()  :  objc-lang.c
<item>observer_notify_executable_changed()  :  observer.c
<item>observer_notify_inferior_created()  :  observer.c
<item>observer_notify_normal_stop()  :  observer.c
<item>observer_notify_solib_loaded()  :  observer.c
<item>observer_notify_solib_unloaded()  :  observer.c
<item>observer_notify_target_changed()  :  observer.c
<item>packet_ok()  :  remote.c
<item>parser_fprintf()  :  parse.c
<item>pop_target()  :  target/target.c
<item>prepare_to_wait()  :  infrun.c
<item>print_subexp_standard()  :  expprint.c
<item>print_sys_errmsg()  :  utils.c
<item>proceed()  :  infrun.c
<item>push_target()  :  target/target.c
<item>putpkt_binary()  :  remote.c
<item>puts_debug()  :  utils.c
<item>read_objc_object()  :  objc-lang.c
<item>record_line()  :  buildsym.c
<item>regcache_dump()  :  regcache.c
<item>reggroups_dump()  :  reggroups.c
<item>remote_fetch_registers()  :  remote.c
<item>remote_interrupt()  :  remote.c
<item>remote_stop()  :  remote.c
<item>reschedule()  :  ser-base.c
<item>resume()  :  infrun.c
<item>save_breakpoints_command()  :  breakpoint.c
<item>ser_base_async()  :  ser-base.c
<item>serial_logchar()  :  serial.c
<item>serial_readchar()  :  serial.c
<item>stop_stepping()  :  infrun.c
<item>target_xfer_partial()  :  target/target.c
<item>terminal_inferior()  :  inflow.c
<item>translate_common_symbol_debug_map_address()  :  dwarf2read.c
<item>translate_debug_map_address()  :  dwarf2read.c
<item>translate_debug_map_address_with_tuple()  :  dwarf2read.c
<item>uninstall_variable()  :  varobj.c
<item>varobj_update()  :  varobj.c
<item>verify_gdbarch()  :  gdbarch.c
<item>vwarning()  :  utils.c
<item>wait_for_inferior()  :  infrun.c
<item>write_one_breakpoint()  :  breakpoint.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>fputstr_unfiltered()  :  utils.c
<item>fputstrn_unfiltered()  :  utils.c
</itemize>
</descrip>

<sect1>Global Function fprintfi_filtered()

<p><tt>void fprintfi_filtered ( int spaces, struct ui_file* stream, const char* format, ... )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>print_spaces_filtered()  :  utils.c
<item>vfprintf_filtered()  :  utils.c
<item>__builtin_va_end(), __builtin_va_start()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>c_type_print_base()  :  c-typeprint.c
<item>java_type_print_base()  :  jv-typeprint.c
<item>pascal_type_print_base()  :  p-typeprint.c
</itemize>
</descrip>

<sect1>Global Function fputc_filtered()

<p><tt>int fputc_filtered ( int c, struct ui_file* stream )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fputs_filtered()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>c_printchar()  :  c-lang.c
<item>field_separator()  :  cli-out.c
<item>java_emit_char()  :  jv-lang.c
<item>putchar_filtered()  :  utils.c
</itemize>
</descrip>

<sect1>Global Function fputc_unfiltered()

<p><tt>int fputc_unfiltered ( int c, struct ui_file* stream )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>ui_file_write()  :  ui-file.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>deprecated_debug_xfer_memory()  :  target/target.c
<item>fputs_maybe_filtered()  :  utils.c
<item>putpkt_binary()  :  remote.c
<item>puts_debug()  :  utils.c
<item>remote_rcmd()  :  remote.c
<item>save_breakpoints_command()  :  breakpoint.c
<item>serial_logchar()  :  serial.c
<item>target_xfer_partial()  :  target/target.c
<item>write_one_breakpoint()  :  breakpoint.c
</itemize>
</descrip>

<sect1>Global Function fputs_filtered()

<p><tt>void fputs_filtered ( const char* linebuffer, struct ui_file* stream )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fputs_maybe_filtered()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>ada_print_scalar()  :  ada-valprint.c
<item>ada_print_subexp()  :  ada-lang.c
<item>ada_printchar()  :  ada-valprint.c
<item>ada_val_print_1()  :  ada-valprint.c
<item>ax_print()  :  ax-general.c
<item>c_emit_char()  :  c-lang.c
<item>c_print_type()  :  c-typeprint.c
<item>c_print_typename_possibly_quoted()  :  c-typeprint.c
<item>c_printstr()  :  c-lang.c
<item>c_type_print_base()  :  c-typeprint.c
<item>c_type_print_varspec_prefix()  :  c-typeprint.c
<item>c_type_print_varspec_suffix()  :  c-typeprint.c
<item>c_val_print()  :  c-valprint.c
<item>cli_text()  :  cli-out.c
<item>cp_print_class_member()  :  cp-valprint.c
<item>cp_print_class_method()  :  cp-valprint.c
<item>cp_print_hpacc_virtual_table_entries()  :  cp-valprint.c
<item>cp_print_static_field()  :  cp-valprint.c
<item>cp_print_value()  :  cp-valprint.c
<item>cp_print_value_fields()  :  cp-valprint.c
<item>cp_type_print_derivation_info()  :  c-typeprint.c
<item>cp_type_print_method_args()  :  c-typeprint.c
<item>dbx_psymtab_to_symtab_1()  :  dbxread.c
<item>default_print_registers_info()  :  infcmd.c
<item>deprecated_print_address_numeric()  :  printcmd.c
<item>dump_msymbols()  :  symmisc.c
<item>dump_prefix_expression()  :  expprint.c
<item>dwarf2_debug_map_psymtab_to_symtab()  :  dwarf2read.c
<item>dwarf2_kext_psymtab_to_symtab()  :  dwarf2read.c
<item>f_emit_char()  :  f-lang.c
<item>f_print_type()  :  f-typeprint.c
<item>f_printchar()  :  f-lang.c
<item>f_printstr()  :  f-lang.c
<item>f_type_print_base()  :  f-typeprint.c
<item>f_val_print()  :  f-valprint.c
<item>fprintf_symbol_filtered()  :  utils.c
<item>fputc_filtered()  :  utils.c
<item>getpkt_sane()  :  remote.c
<item>info_macro_command()  :  macrocmd.c
<item>java_emit_char()  :  jv-lang.c
<item>java_print_type()  :  jv-typeprint.c
<item>java_print_value_fields()  :  jv-valprint.c
<item>java_type_print_base()  :  jv-typeprint.c
<item>java_type_print_derivation_info()  :  jv-typeprint.c
<item>java_val_print()  :  jv-valprint.c
<item>java_value_print()  :  jv-valprint.c
<item>kill_command()  :  inflow.c
<item>m2_emit_char()  :  m2-lang.c
<item>m2_printchar()  :  m2-lang.c
<item>m2_printstr()  :  m2-lang.c
<item>macro_expand_command()  :  macrocmd.c
<item>macro_expand_once_command()  :  macrocmd.c
<item>objc_emit_char()  :  objc-lang.c
<item>objc_printchar()  :  objc-lang.c
<item>objc_printstr()  :  objc-lang.c
<item>output_source_filename()  :  symtab.c
<item>pascal_emit_char()  :  p-lang.c
<item>pascal_object_print_class_member()  :  p-valprint.c
<item>pascal_object_print_class_method()  :  p-valprint.c
<item>pascal_object_print_static_field()  :  p-valprint.c
<item>pascal_object_print_value()  :  p-valprint.c
<item>pascal_object_print_value_fields()  :  p-valprint.c
<item>pascal_one_char()  :  p-lang.c
<item>pascal_print_func_args()  :  p-typeprint.c
<item>pascal_print_type()  :  p-typeprint.c
<item>pascal_printchar()  :  p-lang.c
<item>pascal_printstr()  :  p-lang.c
<item>pascal_type_print_base()  :  p-typeprint.c
<item>pascal_type_print_derivation_info()  :  p-typeprint.c
<item>pascal_type_print_method_args()  :  p-typeprint.c
<item>pascal_type_print_varspec_prefix()  :  p-typeprint.c
<item>pascal_val_print()  :  p-valprint.c
<item>print_address_symbolic()  :  printcmd.c
<item>print_block_frame_labels()  :  stack.c
<item>print_block_frame_locals()  :  stack.c
<item>print_enum_type()  :  ada-typeprint.c
<item>print_field_values()  :  ada-valprint.c
<item>print_floating()  :  valprint.c
<item>print_floating_in_hex()  :  valprint.c
<item>print_frame_arg_vars()  :  stack.c
<item>print_func_type()  :  ada-typeprint.c
<item>print_function_pointer_address()  :  c-valprint.c
<item>print_hex_chars_with_byte_order()  :  valprint.c
<item>print_longest()  :  valprint.c
<item>print_octal_chars()  :  valprint.c
<item>print_partial_symbols()  :  symmisc.c
<item>print_scalar_formatted()  :  printcmd.c
<item>print_spaces_filtered()  :  utils.c
<item>print_subexp_standard()  :  expprint.c
<item>print_symbol_info()  :  symtab.c
<item>print_type_scalar()  :  typeprint.c
<item>printstr()  :  ada-valprint.c
<item>psymtab_to_symtab_1()  :  mdebugread.c
<item>puts_filtered()  :  utils.c
<item>puts_filtered_tabular()  :  utils.c
<item>read_frame()  :  remote.c
<item>scm_scmlist_print()  :  scm-valprint.c
<item>scm_scmval_print()  :  scm-valprint.c
<item>target_command()  :  target/target.c
<item>tracepoints_info()  :  tracepoint.c
<item>val_print_string()  :  valprint.c
<item>vcomplaint()  :  complaints.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>fputstr_filtered()  :  utils.c
</itemize>
</descrip>

<sect1>Global Function fputstr_filtered()

<p><tt>void fputstr_filtered ( const char* str, int quoter, struct ui_file* stream )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>printchar()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>print_packet()  :  remote.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>fprintf_filtered()  :  utils.c
<item>fputs_filtered()  :  utils.c
</itemize>
</descrip>

<sect1>Global Function fputstr_unfiltered()

<p><tt>void fputstr_unfiltered ( const char* str, int quoter, struct ui_file* stream )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>printchar()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>getpkt_sane()  :  remote.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>fprintf_unfiltered()  :  utils.c
<item>fputs_unfiltered()  :  ui-file.c
</itemize>
</descrip>

<sect1>Global Function fputstrn_unfiltered()

<p><tt>void fputstrn_unfiltered ( const char* str, int n, int quoter, struct ui_file* stream )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>printchar()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>putpkt_binary()  :  remote.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>fprintf_unfiltered()  :  utils.c
<item>fputs_unfiltered()  :  ui-file.c
</itemize>
</descrip>

<sect1>Global Function free_current_contents()

<p><tt>void free_current_contents ( void* ptr )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
<item>xfree()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>free_variable()  :  varobj.c
<item>varobj_create()  :  varobj.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>agent_command()  :  ax-gdb.c
<item>c_preprocess_and_parse()  :  c-lang.c
<item>coff_symfile_read()  :  coffread.c
<item>dbx_psymtab_to_symtab()  :  dbxread.c
<item>dwarf2_add_member_fn()  :  dwarf2read.c
<item>elfstab_build_psymtabs()  :  dbxread.c
<item>encode_actions()  :  tracepoint.c
<item>expand()  :  macroexp.c
<item>gather_arguments()  :  macroexp.c
<item>info_macro_command()  :  macrocmd.c
<item>macro_expand_command()  :  macrocmd.c
<item>macro_expand_once_command()  :  macrocmd.c
<item>maintenance_print_type()  :  typeprint.c
<item>output_command()  :  printcmd.c
<item>parse_and_eval()  :  eval.c
<item>parse_and_eval_address()  :  eval.c
<item>parse_and_eval_address_1()  :  eval.c
<item>parse_and_eval_long()  :  eval.c
<item>parse_exp_in_context()  :  parse.c
<item>parse_to_comma_and_eval()  :  eval.c
<item>print_address_symbolic()  :  printcmd.c
<item>print_command_1()  :  printcmd.c
<item>print_object_command()  :  objc-lang.c
<item>printf_command()  :  printcmd.c
<item>ptype_command()  :  typeprint.c
<item>read_array_type()  :  dwarf2read.c
<item>set_command()  :  printcmd.c
<item>validate_actionline()  :  tracepoint.c
<item>whatis_exp()  :  typeprint.c
<item>x_command()  :  printcmd.c
</itemize>
</descrip>

<sect1>Global Function free_uuids_array()

<p><tt>void free_uuids_array ( uint8_t** uuids )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xfree()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>find_kext_loadaddrs_from_kernel()  :  symfile.c
</itemize>
</descrip>

<sect1>Global Function gcalloc()

<p><tt>void* gcalloc ( size_t number, size_t size )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>utils.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xmcalloc()  :  utils.c
</itemize>
</descrip>

<sect1>Global Function gdb_check()

<p><tt>void gdb_check ( const char* str, const char* file, unsigned int line, const char* func )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
</itemize>
</descrip>

<sect1>Global Function gdb_check_fatal()

<p><tt>void gdb_check_fatal ( const char* str, const char* file, unsigned int line, const char* func )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>dummy_func_to_use_unused_top_c_funcs()  :  top.c
<item>jump_command()  :  infcmd.c
<item>objfile_add_to_ordered_sections()  :  objfiles.c
<item>open_source_file_fullpath()  :  source.c
<item>packet_ok()  :  remote.c
<item>remove_solib_event_breakpoints()  :  breakpoint.c
</itemize>
</descrip>

<sect1>Global Function gdb_print_host_address()

<p><tt>void gdb_print_host_address ( const void* addr, struct ui_file* stream )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fprintf_filtered()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>ada_dump_subexp_body()  :  ada-lang.c
<item>dump_fn_fieldlists()  :  gdbtypes.c
<item>dump_objfile()  :  symmisc.c
<item>dump_prefix_expression()  :  expprint.c
<item>dump_psymtab()  :  symmisc.c
<item>dump_raw_expression()  :  expprint.c
<item>dump_subexp_body_standard()  :  expprint.c
<item>dump_symtab_1()  :  symmisc.c
<item>fprint_dummy_frames()  :  dummy-frame.c
<item>fprint_frame()  :  frame.c
<item>print_cplus_stuff()  :  gdbtypes.c
<item>print_symbol()  :  symmisc.c
<item>recursive_dump_type()  :  gdbtypes.c
</itemize>
</descrip>

<sect1>Global Function gdb_realpath()

<p><tt>char* gdb_realpath ( const char* filename )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>__builtin_alloca(), pathconf(), realpath(), xstrdup()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>lookup_partial_symtab()  :  symtab.c
<item>lookup_partial_symtab_all()  :  symtab.c
<item>lookup_symtab()  :  symtab.c
<item>lookup_symtab_all()  :  symtab.c
<item>xfullpath()  :  utils.c
</itemize>
</descrip>

<sect1>Global Function get_binary_file_uuids()

<p><tt>uint8_t** get_binary_file_uuids ( const char* filename )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>symfile_bfd_open()  :  symfile.c
<item>xfree()  :  utils.c
<item>xmalloc()  :  utils.c
<item>xrealloc()  :  utils.c
<item>__builtin___memcpy_chk(), __builtin___memset_chk(), __builtin_object_size(), __inline_memcpy_chk(), __inline_memset_chk(), bfd_check_format(), bfd_close(), bfd_mach_o_get_uuid(), bfd_openr_next_archived_file(), exceptions_state_mc_action_iter(), exceptions_state_mc_action_iter_1(), exceptions_state_mc_init(), file_exists_p(), sigsetjmp(), strcmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>find_kext_loadaddrs_from_kernel()  :  symfile.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>uiout  :  ui-out.c
</itemize>
</descrip>

<sect1>Global Function gfree()

<p><tt>void gfree ( void* ptr )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>utils.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xmfree()  :  utils.c
</itemize>
</descrip>

<sect1>Global Function gmalloc()

<p><tt>void* gmalloc ( size_t size )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>utils.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xmmalloc()  :  utils.c
</itemize>
</descrip>

<sect1>Global Function gnu_debuglink_crc32()

<p><tt>unsigned long gnu_debuglink_crc32 ( unsigned long crc, unsigned char* buf, size_t len )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
</descrip>

<sect1>Global Function grealloc()

<p><tt>void* grealloc ( void* ptr, size_t size )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>utils.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xmrealloc()  :  utils.c
</itemize>
</descrip>

<sect1>Global Function hex_string()

<p><tt>char* hex_string ( long num )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>get_cell()  :  utils.c
<item>phex_nz()  :  utils.c
<item>xsnprintf()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>hand_function_call()  :  infcall.c
<item>int_string()  :  utils.c
<item>make_blockvector()  :  buildsym.c
<item>paddress()  :  utils.c
<item>paddress_with_arch()  :  utils.c
<item>parse_partial_symbols()  :  mdebugread.c
<item>process_one_symbol()  :  dbxread.c
<item>program_info()  :  infcmd.c
<item>read_dbx_symtab()  :  dbxread.c
</itemize>
</descrip>

<sect1>Global Function hex_string_custom()

<p><tt>char* hex_string_custom ( long num, int width )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>get_cell()  :  utils.c
<item>internal_error()  :  utils.c
<item>phex_nz()  :  utils.c
<item>__builtin___memset_chk(), __builtin___strcpy_chk(), __builtin_object_size(), __inline_memset_chk(), __inline_strcpy_chk(), strlen()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>breakpoint_adjustment_warning()  :  breakpoint.c
<item>info_sharedlibrary_command()  :  solib.c
<item>int_string()  :  utils.c
<item>maint_print_section_info()  :  maint.c
<item>mem_info_command()  :  memattr.c
<item>print_msymbol_info()  :  symtab.c
<item>tracepoints_info()  :  tracepoint.c
<item>ui_out_field_core_addr()  :  ui-out.c
<item>write_one_breakpoint()  :  breakpoint.c
</itemize>
</descrip>

<sect1>Global Function init_malloc()

<p><tt>void* init_malloc ( void* md )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Called by:</tag>
<itemize>
<item>captured_main()  :  main.c
</itemize>
</descrip>

<sect1>Global Function init_page_info()

<p><tt>void init_page_info ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>macosx_resize_window_handler()  :  utils.c
<item>set_screen_size()  :  utils.c
<item>set_width()  :  utils.c
<item>ui_file_isatty()  :  ui-file.c
<item>getenv(), rl_get_screen_size(), rl_reset_terminal(), tgetnum()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>initialize_utils()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>chars_per_line  :  utils.c
<item>gdb_stdout  :  main.c
<item>lines_per_page  :  utils.c
</itemize>
</descrip>

<sect1>Global Function initialize_utils()

<p><tt>void initialize_utils ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>init_page_info()  :  utils.c
<item>set_screen_size()  :  utils.c
<item>set_width()  :  utils.c
<item>add_com(), add_setshow_boolean_cmd(), add_setshow_uinteger_cmd()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>gdb_init()  :  top.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>pagination_off_command()  :  utils.c
<item>pagination_on_command()  :  utils.c
<item>set_height_command()  :  utils.c
<item>set_width_command()  :  utils.c
<item>show_asm_demangle()  :  utils.c
<item>show_chars_per_line()  :  utils.c
<item>show_demangle()  :  utils.c
<item>show_lines_per_page()  :  utils.c
<item>show_pagination_enabled()  :  utils.c
<item>show_sevenbit_strings()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>asm_demangle  :  utils.c
<item>chars_per_line  :  utils.c
<item>demangle  :  utils.c
<item>lines_per_page  :  utils.c
<item>pagination_enabled  :  utils.c
<item>sevenbit_strings  :  utils.c
<item>xdb_commands  :  main.c
<item>setlist, setprintlist, showlist, showprintlist
</itemize>
</descrip>

<sect1>Global Function int_string()

<p><tt>char* int_string ( long val, int radix, int is_signed, int width, int use_c_format )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>decimal2str()  :  utils.c
<item>hex_string()  :  utils.c
<item>hex_string_custom()  :  utils.c
<item>internal_error()  :  utils.c
<item>octal2str()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>print_longest()  :  valprint.c
</itemize>
</descrip>

<sect1>Global Function internal_error()

<p><tt>void internal_error ( const char* file, int line, const char* string, ... )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>internal_verror()  :  utils.c
<item>__builtin_va_end(), __builtin_va_start()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>_initialize_gdb_osabi()  :  osabi.c
<item>ada_array_arity()  :  ada-lang.c
<item>ada_array_bound_from_type()  :  ada-lang.c
<item>ada_array_element_type()  :  ada-lang.c
<item>ada_decode()  :  ada-lang.c
<item>ada_enum_name()  :  ada-lang.c
<item>ada_find_parallel_type()  :  ada-lang.c
<item>ada_in_variant()  :  ada-lang.c
<item>ada_is_aligner_type()  :  ada-lang.c
<item>ada_is_simple_array_type()  :  ada-lang.c
<item>ada_lookup_struct_elt_type()  :  ada-lang.c
<item>ada_search_struct_field()  :  ada-lang.c
<item>ada_template_to_fixed_record_type_1()  :  ada-lang.c
<item>ada_to_fixed_type()  :  ada-lang.c
<item>ada_type_match()  :  ada-lang.c
<item>ada_type_of_array()  :  ada-lang.c
<item>ada_value_primitive_field()  :  ada-lang.c
<item>ada_value_primitive_packed_val()  :  ada-lang.c
<item>ada_value_struct_elt()  :  ada-lang.c
<item>ada_variant_discrim_name()  :  ada-lang.c
<item>add_group()  :  reggroups.c
<item>add_item_to_inlined_subroutine_stack()  :  inlining.c
<item>add_item_to_temp_frame_stack()  :  inlining.c
<item>add_language()  :  language.c
<item>add_psymbol_with_dem_name_to_list()  :  symfile.c
<item>add_symbol_nonexpandable()  :  dictionary.c
<item>align_down()  :  utils.c
<item>align_up()  :  utils.c
<item>alloc_gdbarch_data()  :  gdbarch.c
<item>alloc_type()  :  gdbtypes.c
<item>allocate_bp_location()  :  breakpoint.c
<item>allocate_psymtab()  :  symfile.c
<item>append_psymbols_as_msymbols()  :  symfile.c
<item>append_tokens_without_splicing()  :  macroexp.c
<item>append_user_reg()  :  user-regs.c
<item>blockvector_for_pc_sect()  :  block.c
<item>bpstat_find_step_resume_breakpoint()  :  breakpoint.c
<item>bpstat_get_triggered_catchpoints()  :  breakpoint.c
<item>bpstat_what_to_do()  :  breakpoint.c
<item>breakpoint_re_set_one()  :  breakpoint.c
<item>breakpoints_relocate()  :  breakpoint.c
<item>build_builtin_bitfield()  :  gdbtypes.c
<item>build_builtin_enum()  :  gdbtypes.c
<item>build_complex()  :  gdbtypes.c
<item>build_flt()  :  gdbtypes.c
<item>build_gdb_vtable_type()  :  gnu-v3-abi.c
<item>build_section_addr_info_from_section_table()  :  symfile.c
<item>build_target_sections_from_bfd()  :  bfd-target.c
<item>c_make_name_of_child()  :  varobj.c
<item>c_number_of_children()  :  varobj.c
<item>c_path_expr_of_child()  :  varobj.c
<item>c_preprocess_and_parse()  :  c-lang.c
<item>c_type_of_child()  :  varobj.c
<item>c_value_of_child()  :  varobj.c
<item>c_value_of_variable()  :  varobj.c
<item>c_variable_editable()  :  varobj.c
<item>cached_iconv_convert()  :  charset.c
<item>cashier_psymtab()  :  symfile.c
<item>catch_load_command_1()  :  breakpoint.c
<item>catch_unload_command_1()  :  breakpoint.c
<item>check_duplicates()  :  breakpoint.c
<item>check_inlined_function_calls()  :  dwarf2read.c
<item>check_note()  :  osabi.c
<item>check_size()  :  ada-lang.c
<item>clear_complaints()  :  complaints.c
<item>clear_header_list()  :  ui-out.c
<item>clear_objfile_data()  :  objfiles.c
<item>cli_table_begin()  :  cli-out.c
<item>coff_end_symtab()  :  coffread.c
<item>coff_symtab_read()  :  coffread.c
<item>coffstab_build_psymtabs()  :  dbxread.c
<item>compare_locations()  :  macrotab.c
<item>convert_actual()  :  ada-lang.c
<item>convert_floatformat_to_doublest()  :  doublest.c
<item>convert_oso_map_to_final_map()  :  dwarf2read.c
<item>convert_typed_floating()  :  doublest.c
<item>copy_inlined_call_stack_record()  :  inlining.c
<item>copy_temp_frame_stack_record()  :  inlining.c
<item>core_file_command()  :  corefile.c
<item>cp_add_using()  :  cp-namespace.c
<item>cp_entire_prefix_len()  :  cp-support.c
<item>cp_lookup_nested_type()  :  cp-namespace.c
<item>cplus_make_name_of_child()  :  varobj.c
<item>cplus_real_type_index_for_fake_child_index()  :  varobj.c
<item>cplus_type_of_child()  :  varobj.c
<item>cplus_value_of_variable()  :  varobj.c
<item>cplus_variable_editable()  :  varobj.c
<item>create_all_comp_units()  :  dwarf2read.c
<item>create_kext_addr_map()  :  dwarf2read.c
<item>create_name()  :  dwarfread.c
<item>create_range_type()  :  gdbtypes.c
<item>cs_to_section()  :  coffread.c
<item>current_gdbarch_swap_in_hack()  :  gdbarch.c
<item>current_gdbarch_swap_out_hack()  :  gdbarch.c
<item>db_error()  :  dwarf2read.c
<item>db_read_n_bytes()  :  dwarf2read.c
<item>dbx_fixup_type()  :  stabsread.c
<item>decimal2str()  :  utils.c
<item>decode_all_variables()  :  linespec.c
<item>decode_format()  :  printcmd.c
<item>decode_frame_entry_1()  :  dwarf2-frame.c
<item>decode_locdesc()  :  dwarf2read.c
<item>decode_objc()  :  linespec.c
<item>default_double_format()  :  arch-utils.c
<item>default_float_format()  :  arch-utils.c
<item>define_symbol()  :  stabsread.c
<item>delete_breakpoint()  :  breakpoint.c
<item>deprecated_current_gdbarch_select_hack()  :  gdbarch.c
<item>deprecated_read_register_gen()  :  regcache.c
<item>deprecated_serial_fd()  :  serial.c
<item>deprecated_set_gdbarch_data()  :  gdbarch.c
<item>deprecated_write_register_gen()  :  regcache.c
<item>desc_bound_bitpos()  :  ada-lang.c
<item>desc_bound_bitsize()  :  ada-lang.c
<item>desc_bounds_type()  :  ada-lang.c
<item>desc_data_type()  :  ada-lang.c
<item>dict_create_hashed()  :  dictionary.c
<item>disable_exception_catch()  :  breakpoint.c
<item>do_end_debugger_mode()  :  objc-lang.c
<item>dummy_frame_prev_register()  :  dummy-frame.c
<item>dummy_frame_this_id()  :  dummy-frame.c
<item>dump_endian_bytes()  :  regcache.c
<item>dump_psymtab()  :  symmisc.c
<item>dwarf2_find_containing_comp_unit()  :  dwarf2read.c
<item>dwarf2_frame_cache()  :  dwarf2-frame.c
<item>dwarf2_frame_find_fde()  :  dwarf2-frame.c
<item>dwarf2_frame_prev_register()  :  dwarf2-frame.c
<item>dwarf2_read_abbrevs()  :  dwarf2read.c
<item>dwarf2_symbol_mark_computed()  :  dwarf2read.c
<item>dwarf_alloc_abbrev()  :  dwarf2read.c
<item>dwarf_build_psymtabs()  :  dwarfread.c
<item>dwarf_decode_macros()  :  dwarf2read.c
<item>elf_symtab_read()  :  elfread.c
<item>encoding_for_size()  :  dwarf2-frame.c
<item>end_psymtab()  :  dbxread.c
<item>end_symtab()  :  buildsym.c
<item>ensure_lval()  :  ada-lang.c
<item>equivalence_table_add()  :  symmisc.c
<item>evaluate_subexp_standard()  :  eval.c
<item>exception_catchpoints_enabled()  :  breakpoint.c
<item>execute_cfa_program()  :  dwarf2-frame.c
<item>execute_stack_op()  :  dwarf2expr.c
<item>expand()  :  macroexp.c
<item>extract_typed_address()  :  findvar.c
<item>extract_typed_floating()  :  doublest.c
<item>f_print_type()  :  f-typeprint.c
<item>fat_pntr_bounds_bitpos()  :  ada-lang.c
<item>filename_seen()  :  symtab.c
<item>fill_in_die_info()  :  dwarf2read.c
<item>find_arch_by_info()  :  gdbarch.c
<item>find_debug_info_for_pst()  :  dwarf2read.c
<item>find_field()  :  ax-gdb.c
<item>find_imps()  :  objc-lang.c
<item>find_line_pc_range()  :  symtab.c
<item>find_methods()  :  objc-lang.c
<item>find_oload_champ_namespace_loop()  :  valops.c
<item>find_overload_match()  :  valops.c
<item>find_pc_offset()  :  disasm.c
<item>find_pc_sect_line()  :  symtab.c
<item>find_stab_function_addr()  :  dbxread.c
<item>find_struct_field()  :  ada-lang.c
<item>find_text_range()  :  dbxread.c
<item>finish_command()  :  infcmd.c
<item>finish_command_continuation()  :  infcmd.c
<item>finish_inlined_subroutine_command()  :  infcmd.c
<item>finish_inlined_subroutine_command_continuation()  :  infcmd.c
<item>finished_macro_expansion()  :  c-lang.c
<item>floatformat_from_doublest()  :  doublest.c
<item>floatformat_from_type()  :  doublest.c
<item>floatformat_is_nan()  :  doublest.c
<item>floatformat_is_negative()  :  doublest.c
<item>floatformat_mantissa()  :  doublest.c
<item>floatformat_normalize_byteorder()  :  doublest.c
<item>floatformat_to_doublest()  :  doublest.c
<item>fputs_maybe_filtered()  :  utils.c
<item>frame_cache_hack()  :  frame.c
<item>frame_info()  :  stack.c
<item>frame_obstack_zalloc()  :  frame.c
<item>frame_pc_unwind()  :  frame.c
<item>frame_register()  :  frame.c
<item>frame_register_unwind()  :  frame.c
<item>frame_sp_unwind()  :  frame.c
<item>frame_unwind_find_by_frame()  :  frame-unwind.c
<item>free_buffer()  :  macroexp.c
<item>free_current_contents()  :  utils.c
<item>free_namespace_block()  :  cp-namespace.c
<item>gdb_check_fatal()  :  utils.c
<item>gdb_wait_for_event()  :  event-loop.c
<item>gdbarch_addr_bit()  :  gdbarch.c
<item>gdbarch_addr_bits_remove()  :  gdbarch.c
<item>gdbarch_address_class_name_to_type_flags()  :  gdbarch.c
<item>gdbarch_address_class_name_to_type_flags_p()  :  gdbarch.c
<item>gdbarch_address_class_type_flags()  :  gdbarch.c
<item>gdbarch_address_class_type_flags_p()  :  gdbarch.c
<item>gdbarch_address_class_type_flags_to_name()  :  gdbarch.c
<item>gdbarch_address_class_type_flags_to_name_p()  :  gdbarch.c
<item>gdbarch_address_to_pointer()  :  gdbarch.c
<item>gdbarch_adjust_breakpoint_address()  :  gdbarch.c
<item>gdbarch_adjust_breakpoint_address_p()  :  gdbarch.c
<item>gdbarch_adjust_ehframe_regnum()  :  gdbarch.c
<item>gdbarch_believe_pcc_promotion()  :  gdbarch.c
<item>gdbarch_bfd_arch_info()  :  gdbarch.c
<item>gdbarch_bfd_vma_bit()  :  gdbarch.c
<item>gdbarch_breakpoint_from_pc()  :  gdbarch.c
<item>gdbarch_byte_order()  :  gdbarch.c
<item>gdbarch_call_dummy_location()  :  gdbarch.c
<item>gdbarch_cannot_fetch_register()  :  gdbarch.c
<item>gdbarch_cannot_step_breakpoint()  :  gdbarch.c
<item>gdbarch_cannot_store_register()  :  gdbarch.c
<item>gdbarch_char_signed()  :  gdbarch.c
<item>gdbarch_coff_make_msymbol_special()  :  gdbarch.c
<item>gdbarch_construct_inferior_arguments()  :  gdbarch.c
<item>gdbarch_convert_from_func_ptr_addr()  :  gdbarch.c
<item>gdbarch_convert_register_p()  :  gdbarch.c
<item>gdbarch_dbx_make_msymbol_special()  :  gdbarch.c
<item>gdbarch_decr_pc_after_break()  :  gdbarch.c
<item>gdbarch_deprecated_extract_return_value()  :  gdbarch.c
<item>gdbarch_deprecated_extract_struct_value_address()  :  gdbarch.c
<item>gdbarch_deprecated_extract_struct_value_address_p()  :  gdbarch.c
<item>gdbarch_deprecated_fp_regnum()  :  gdbarch.c
<item>gdbarch_deprecated_function_start_offset()  :  gdbarch.c
<item>gdbarch_deprecated_push_arguments()  :  gdbarch.c
<item>gdbarch_deprecated_push_arguments_p()  :  gdbarch.c
<item>gdbarch_deprecated_reg_struct_has_addr()  :  gdbarch.c
<item>gdbarch_deprecated_reg_struct_has_addr_p()  :  gdbarch.c
<item>gdbarch_deprecated_register_byte()  :  gdbarch.c
<item>gdbarch_deprecated_register_byte_p()  :  gdbarch.c
<item>gdbarch_deprecated_register_size()  :  gdbarch.c
<item>gdbarch_deprecated_saved_pc_after_call()  :  gdbarch.c
<item>gdbarch_deprecated_saved_pc_after_call_p()  :  gdbarch.c
<item>gdbarch_deprecated_stack_align()  :  gdbarch.c
<item>gdbarch_deprecated_stack_align_p()  :  gdbarch.c
<item>gdbarch_deprecated_store_return_value()  :  gdbarch.c
<item>gdbarch_deprecated_store_struct_return()  :  gdbarch.c
<item>gdbarch_deprecated_store_struct_return_p()  :  gdbarch.c
<item>gdbarch_deprecated_use_struct_convention()  :  gdbarch.c
<item>gdbarch_double_bit()  :  gdbarch.c
<item>gdbarch_double_format()  :  gdbarch.c
<item>gdbarch_dwarf2_reg_to_regnum()  :  gdbarch.c
<item>gdbarch_dwarf_reg_to_regnum()  :  gdbarch.c
<item>gdbarch_ecoff_reg_to_regnum()  :  gdbarch.c
<item>gdbarch_elf_make_msymbol_special()  :  gdbarch.c
<item>gdbarch_extract_return_value()  :  gdbarch.c
<item>gdbarch_fetch_pointer_argument()  :  gdbarch.c
<item>gdbarch_fetch_pointer_argument_p()  :  gdbarch.c
<item>gdbarch_fetch_tls_load_module_address()  :  gdbarch.c
<item>gdbarch_fetch_tls_load_module_address_p()  :  gdbarch.c
<item>gdbarch_find_by_info()  :  gdbarch.c
<item>gdbarch_float_bit()  :  gdbarch.c
<item>gdbarch_float_format()  :  gdbarch.c
<item>gdbarch_fp0_regnum()  :  gdbarch.c
<item>gdbarch_frame_align()  :  gdbarch.c
<item>gdbarch_frame_align_p()  :  gdbarch.c
<item>gdbarch_frame_args_skip()  :  gdbarch.c
<item>gdbarch_frame_num_args()  :  gdbarch.c
<item>gdbarch_frame_num_args_p()  :  gdbarch.c
<item>gdbarch_frame_red_zone_size()  :  gdbarch.c
<item>gdbarch_free()  :  gdbarch.c
<item>gdbarch_get_longjmp_target()  :  gdbarch.c
<item>gdbarch_get_longjmp_target_p()  :  gdbarch.c
<item>gdbarch_have_nonsteppable_watchpoint()  :  gdbarch.c
<item>gdbarch_in_function_epilogue_p()  :  gdbarch.c
<item>gdbarch_in_solib_return_trampoline()  :  gdbarch.c
<item>gdbarch_info_fill()  :  arch-utils.c
<item>gdbarch_inner_than()  :  gdbarch.c
<item>gdbarch_int_bit()  :  gdbarch.c
<item>gdbarch_integer_to_address()  :  gdbarch.c
<item>gdbarch_integer_to_address_p()  :  gdbarch.c
<item>gdbarch_long_bit()  :  gdbarch.c
<item>gdbarch_long_double_bit()  :  gdbarch.c
<item>gdbarch_long_double_format()  :  gdbarch.c
<item>gdbarch_long_long_bit()  :  gdbarch.c
<item>gdbarch_lookup_osabi_from_bfd()  :  osabi.c
<item>gdbarch_memory_insert_breakpoint()  :  gdbarch.c
<item>gdbarch_memory_remove_breakpoint()  :  gdbarch.c
<item>gdbarch_name_of_malloc()  :  gdbarch.c
<item>gdbarch_num_pseudo_regs()  :  gdbarch.c
<item>gdbarch_num_regs()  :  gdbarch.c
<item>gdbarch_obstack_zalloc()  :  gdbarch.c
<item>gdbarch_osabi()  :  gdbarch.c
<item>gdbarch_pc_regnum()  :  gdbarch.c
<item>gdbarch_pointer_to_address()  :  gdbarch.c
<item>gdbarch_print_float_info()  :  gdbarch.c
<item>gdbarch_print_float_info_p()  :  gdbarch.c
<item>gdbarch_print_insn()  :  gdbarch.c
<item>gdbarch_print_registers_info()  :  gdbarch.c
<item>gdbarch_print_vector_info()  :  gdbarch.c
<item>gdbarch_print_vector_info_p()  :  gdbarch.c
<item>gdbarch_printable_names()  :  gdbarch.c
<item>gdbarch_ps_regnum()  :  gdbarch.c
<item>gdbarch_pseudo_register_read()  :  gdbarch.c
<item>gdbarch_pseudo_register_read_p()  :  gdbarch.c
<item>gdbarch_pseudo_register_write()  :  gdbarch.c
<item>gdbarch_pseudo_register_write_p()  :  gdbarch.c
<item>gdbarch_ptr_bit()  :  gdbarch.c
<item>gdbarch_push_dummy_call()  :  gdbarch.c
<item>gdbarch_push_dummy_call_p()  :  gdbarch.c
<item>gdbarch_push_dummy_code()  :  gdbarch.c
<item>gdbarch_push_dummy_code_p()  :  gdbarch.c
<item>gdbarch_read_pc()  :  gdbarch.c
<item>gdbarch_read_pc_p()  :  gdbarch.c
<item>gdbarch_read_sp()  :  gdbarch.c
<item>gdbarch_read_sp_p()  :  gdbarch.c
<item>gdbarch_register()  :  gdbarch.c
<item>gdbarch_register_bytes_ok()  :  gdbarch.c
<item>gdbarch_register_bytes_ok_p()  :  gdbarch.c
<item>gdbarch_register_name()  :  gdbarch.c
<item>gdbarch_register_osabi()  :  osabi.c
<item>gdbarch_register_reggroup_p()  :  gdbarch.c
<item>gdbarch_register_sim_regno()  :  gdbarch.c
<item>gdbarch_register_to_value()  :  gdbarch.c
<item>gdbarch_register_type()  :  gdbarch.c
<item>gdbarch_register_type_p()  :  gdbarch.c
<item>gdbarch_regset_from_core_section()  :  gdbarch.c
<item>gdbarch_regset_from_core_section_p()  :  gdbarch.c
<item>gdbarch_remote_translate_xfer_address()  :  gdbarch.c
<item>gdbarch_return_value()  :  gdbarch.c
<item>gdbarch_return_value_p()  :  gdbarch.c
<item>gdbarch_sdb_reg_to_regnum()  :  gdbarch.c
<item>gdbarch_short_bit()  :  gdbarch.c
<item>gdbarch_single_step_through_delay()  :  gdbarch.c
<item>gdbarch_single_step_through_delay_p()  :  gdbarch.c
<item>gdbarch_skip_prologue()  :  gdbarch.c
<item>gdbarch_skip_prologue_addr_ctx()  :  gdbarch.c
<item>gdbarch_skip_prologue_addr_ctx_p()  :  gdbarch.c
<item>gdbarch_skip_solib_resolver()  :  gdbarch.c
<item>gdbarch_skip_trampoline_code()  :  gdbarch.c
<item>gdbarch_smash_text_address()  :  gdbarch.c
<item>gdbarch_software_single_step()  :  gdbarch.c
<item>gdbarch_software_single_step_p()  :  gdbarch.c
<item>gdbarch_sp_regnum()  :  gdbarch.c
<item>gdbarch_stab_reg_to_regnum()  :  gdbarch.c
<item>gdbarch_stabs_argument_has_addr()  :  gdbarch.c
<item>gdbarch_store_return_value()  :  gdbarch.c
<item>gdbarch_unwind_dummy_id()  :  gdbarch.c
<item>gdbarch_unwind_dummy_id_p()  :  gdbarch.c
<item>gdbarch_unwind_pc()  :  gdbarch.c
<item>gdbarch_unwind_pc_p()  :  gdbarch.c
<item>gdbarch_unwind_sp()  :  gdbarch.c
<item>gdbarch_unwind_sp_p()  :  gdbarch.c
<item>gdbarch_value_to_register()  :  gdbarch.c
<item>gdbarch_virtual_frame_pointer()  :  gdbarch.c
<item>gdbarch_write_pc()  :  gdbarch.c
<item>gen_bitfield_ref()  :  ax-gdb.c
<item>gen_deref()  :  ax-gdb.c
<item>gen_expr()  :  ax-gdb.c
<item>gen_fetch()  :  ax-gdb.c
<item>gen_var_ref()  :  ax-gdb.c
<item>generic_elf_osabi_sniff_abi_tag_sections()  :  osabi.c
<item>generic_push_dummy_code()  :  infcall.c
<item>generic_register_byte()  :  arch-utils.c
<item>generic_register_size()  :  arch-utils.c
<item>generic_target_write_pc()  :  regcache.c
<item>get_array_bounds()  :  gdbtypes.c
<item>get_character_constant()  :  macroexp.c
<item>get_field()  :  doublest.c
<item>get_frame_pc()  :  frame.c
<item>get_frame_type()  :  frame.c
<item>get_join_type()  :  varobj.c
<item>get_objfile_data()  :  objfiles.c
<item>get_offsets()  :  remote.c
<item>get_prev_frame()  :  frame.c
<item>get_prev_frame_1()  :  frame.c
<item>get_selected_frame()  :  frame.c
<item>get_string_literal()  :  macroexp.c
<item>get_target_memory_unsigned()  :  target/target.c
<item>get_token()  :  macroexp.c
<item>get_type_deref()  :  varobj.c
<item>gnu_v3_update_exception_catchpoints()  :  breakpoint.c
<item>hand_function_call()  :  infcall.c
<item>handle_inferior_event()  :  infrun.c
<item>has_vtable()  :  gdbtypes.c
<item>hex_string_custom()  :  utils.c
<item>info_sharedlibrary_command()  :  solib.c
<item>init_composite_type()  :  gdbtypes.c
<item>init_objfile_sect_indices()  :  symfile.c
<item>init_regcache_descr()  :  regcache.c
<item>initialize_cu_func_list()  :  dwarf2read.c
<item>initialize_current_architecture()  :  arch-utils.c
<item>inlined_frame_this_id()  :  inlining.c
<item>inlined_function_end_of_inlined_code_p()  :  inlining.c
<item>inlined_subroutine_adjust_position_for_breakpoint()  :  inlining.c
<item>inlined_subroutine_objfile_relocate()  :  inlining.c
<item>inlined_subroutine_restore_after_dummy_call()  :  inlining.c
<item>insert_catchpoint()  :  breakpoint.c
<item>insert_step_resume_breakpoint_at_sal()  :  infrun.c
<item>int_string()  :  utils.c
<item>internal_vproblem()  :  utils.c
<item>interp_add()  :  interps.c
<item>interp_set()  :  interps.c
<item>is_root_p()  :  varobj.c
<item>java_link_class_type()  :  jv-lang.c
<item>java_make_name_of_child()  :  varobj.c
<item>java_parse()  :  jv-exp.c
<item>java_type_of_child()  :  varobj.c
<item>legacy_register_sim_regno()  :  arch-utils.c
<item>legacy_return_value()  :  arch-utils.c
<item>legacy_store_return_value()  :  arch-utils.c
<item>legacy_virtual_frame_pointer()  :  arch-utils.c
<item>lesseq_defined_than()  :  ada-lang.c
<item>link_objfile()  :  objfiles.c
<item>list_all_visible_commons()  :  f-valprint.c
<item>list_overlays_command()  :  symfile.c
<item>locate_var_value()  :  findvar.c
<item>locval()  :  dwarfread.c
<item>lookup_namespace_scope()  :  cp-namespace.c
<item>lookup_partial_symbol()  :  symtab.c
<item>lookup_repository_type()  :  dwarf2read.c
<item>lookup_symbol_aux_psymtabs()  :  symtab.c
<item>lookup_symbol_aux_symtabs()  :  symtab.c
<item>macro_bcache_free()  :  macrotab.c
<item>macro_free()  :  macrotab.c
<item>macro_main()  :  macrotab.c
<item>macro_set_main()  :  macrotab.c
<item>maintenance_internal_error()  :  maint.c
<item>make_cleanup_set_restore_debugger_mode()  :  objc-lang.c
<item>make_my_cleanup()  :  utils.c
<item>make_qualified_type()  :  gdbtypes.c
<item>mark_async_signal_handler()  :  event-loop.c
<item>maybe_expand()  :  macroexp.c
<item>mem_file_delete()  :  ui-file.c
<item>mem_file_put()  :  ui-file.c
<item>mem_file_rewind()  :  ui-file.c
<item>mem_file_write()  :  ui-file.c
<item>mention()  :  breakpoint.c
<item>minsyms_found()  :  linespec.c
<item>my_value_equal()  :  varobj.c
<item>new_gdbarch_data()  :  gdbarch.c
<item>new_symbol()  :  mdebugread.c
<item>no_get_frame_base()  :  dwarf2-frame.c
<item>no_get_tls_address()  :  dwarf2-frame.c
<item>nomem()  :  utils.c
<item>normal_stop()  :  infrun.c
<item>objc_invalidate_objc_class()  :  objc-lang.c
<item>objc_read_trampoline_region()  :  objc-lang.c
<item>objfile_alloc_data()  :  objfiles.c
<item>objfile_bss_section_offset()  :  objfiles.c
<item>objfile_data_section_offset()  :  objfiles.c
<item>objfile_free_data()  :  objfiles.c
<item>objfile_init_hitlist()  :  objfiles.c
<item>objfile_relocate()  :  objfiles.c
<item>objfile_rodata_section_offset()  :  objfiles.c
<item>objfile_section_offset()  :  objfiles.c
<item>objfile_text_section_offset()  :  objfiles.c
<item>obsavestring()  :  symfile.c
<item>octal2str()  :  utils.c
<item>open_dwarf_repository()  :  dwarf2read.c
<item>packed_array_type()  :  ada-lang.c
<item>packet_ok()  :  remote.c
<item>packet_reg_from_regnum()  :  remote.c
<item>parse_method()  :  objc-lang.c
<item>parse_partial_symbols()  :  mdebugread.c
<item>parse_selector()  :  objc-lang.c
<item>parse_symbol()  :  mdebugread.c
<item>path_expr_of_root()  :  varobj.c
<item>pop_context()  :  buildsym.c
<item>pop_level()  :  ui-out.c
<item>pop_subfile()  :  buildsym.c
<item>pop_target()  :  target/target.c
<item>prim_record_minimal_symbol()  :  minsyms.c
<item>prim_record_minimal_symbol_and_info()  :  minsyms.c
<item>print_args_stub()  :  stack.c
<item>print_bcache_statistics()  :  bcache.c
<item>print_bp_stop_message()  :  breakpoint.c
<item>print_dynamic_range_bound()  :  ada-typeprint.c
<item>print_longest()  :  valprint.c
<item>print_one_breakpoint()  :  breakpoint.c
<item>print_one_exception_catchpoint()  :  breakpoint.c
<item>print_return_value()  :  infcmd.c
<item>print_scalar_formatted()  :  printcmd.c
<item>print_single_dwarf_location()  :  dwarf2loc.c
<item>print_stop_reason()  :  infrun.c
<item>process_die()  :  dwarf2read.c
<item>process_full_comp_unit()  :  dwarf2read.c
<item>process_one_symbol()  :  dbxread.c
<item>psymtab_to_symtab()  :  symfile.c
<item>psymtab_to_symtab_1()  :  mdebugread.c
<item>push_level()  :  ui-out.c
<item>push_subfile()  :  buildsym.c
<item>push_target()  :  target/target.c
<item>put_field()  :  doublest.c
<item>put_objfile_before()  :  objfiles.c
<item>puts_filtered_tabular()  :  utils.c
<item>range_error()  :  language.c
<item>rb_delete_fixup()  :  dwarf2read.c
<item>rb_tree_remove_node()  :  dwarf2read.c
<item>rbreak_command()  :  symtab.c
<item>read_1_byte()  :  dwarf2read.c
<item>read_address()  :  dwarf2read.c
<item>read_alphacoff_dynamic_symtab()  :  mipsread.c
<item>read_baseclasses()  :  stabsread.c
<item>read_dbx_symtab()  :  dbxread.c
<item>read_encoded_value()  :  dwarf2-frame.c
<item>read_file_scope()  :  dwarf2read.c
<item>read_indirect_string()  :  dwarf2read.c
<item>read_initial_length()  :  dwarf2read.c
<item>read_n_bytes()  :  dwarf2read.c
<item>read_objc_method_list_method()  :  objc-lang.c
<item>read_offset()  :  dwarf2read.c
<item>read_ofile_symtab()  :  dwarfread.c
<item>read_ofile_symtab_from_oso()  :  dbxread.c
<item>read_partial_die()  :  dwarf2read.c
<item>read_pc_pid()  :  regcache.c
<item>read_sp()  :  regcache.c
<item>read_string()  :  dwarf2read.c
<item>read_tag_pointer_type()  :  dwarf2read.c
<item>read_tag_string_type()  :  dwarfread.c
<item>read_var_value()  :  findvar.c
<item>record_minimal_symbol()  :  mdebugread.c
<item>regcache_cooked_read()  :  regcache.c
<item>regcache_cooked_read_part()  :  regcache.c
<item>regcache_cooked_read_signed()  :  regcache.c
<item>regcache_cooked_read_unsigned()  :  regcache.c
<item>regcache_cooked_write()  :  regcache.c
<item>regcache_cooked_write_part()  :  regcache.c
<item>regcache_cooked_write_signed()  :  regcache.c
<item>regcache_cooked_write_unsigned()  :  regcache.c
<item>regcache_cpy()  :  regcache.c
<item>regcache_cpy_no_passthrough()  :  regcache.c
<item>regcache_dump()  :  regcache.c
<item>regcache_dup()  :  regcache.c
<item>regcache_dup_no_passthrough()  :  regcache.c
<item>regcache_raw_collect()  :  regcache.c
<item>regcache_raw_read()  :  regcache.c
<item>regcache_raw_read_part()  :  regcache.c
<item>regcache_raw_read_signed()  :  regcache.c
<item>regcache_raw_read_unsigned()  :  regcache.c
<item>regcache_raw_supply()  :  regcache.c
<item>regcache_raw_write()  :  regcache.c
<item>regcache_raw_write_part()  :  regcache.c
<item>regcache_raw_write_signed()  :  regcache.c
<item>regcache_raw_write_unsigned()  :  regcache.c
<item>regcache_restore()  :  regcache.c
<item>regcache_save()  :  regcache.c
<item>regcache_valid_p()  :  regcache.c
<item>regcache_xfer_part()  :  regcache.c
<item>regcache_xmalloc()  :  regcache.c
<item>reggroup_next()  :  reggroups.c
<item>reggroups_dump()  :  reggroups.c
<item>register_cp_abi()  :  cp-abi.c
<item>register_offset_hack()  :  regcache.c
<item>register_size()  :  regcache.c
<item>register_type()  :  regcache.c
<item>remote_async()  :  remote.c
<item>remote_fetch_registers()  :  remote.c
<item>remote_insert_hw_breakpoint()  :  remote.c
<item>remote_insert_watchpoint()  :  remote.c
<item>remote_remove_hw_breakpoint()  :  remote.c
<item>remote_remove_watchpoint()  :  remote.c
<item>remote_threads_extra_info()  :  remote.c
<item>remote_vcont_resume()  :  remote.c
<item>remote_write_bytes()  :  remote.c
<item>remote_xfer_partial()  :  remote.c
<item>remove_child_from_parent()  :  varobj.c
<item>remove_duplicates()  :  breakpoint.c
<item>replace_psymbols_with_correct_psymbols()  :  symfile.c
<item>replace_type()  :  gdbtypes.c
<item>resize_buffer()  :  macroexp.c
<item>restore_step_resume_breakpoint()  :  infrun.c
<item>restore_thread_inlined_call_stack()  :  inlining.c
<item>return_command()  :  stack.c
<item>scan()  :  macroexp.c
<item>scan_discrim_bound()  :  ada-lang.c
<item>scan_macro_expansion()  :  c-lang.c
<item>select_source_symtab()  :  source.c
<item>sentinel_frame_this_id()  :  sentinel-frame.c
<item>serial_readchar()  :  serial.c
<item>set_architecture()  :  arch-utils.c
<item>set_architecture_from_string()  :  arch-utils.c
<item>set_cp_abi_as_auto_default()  :  cp-abi.c
<item>set_die_type()  :  dwarf2read.c
<item>set_endian()  :  arch-utils.c
<item>set_objfile_data()  :  objfiles.c
<item>set_osabi()  :  osabi.c
<item>set_register_cached()  :  regcache.c
<item>set_repository_cu_language()  :  dwarf2read.c
<item>signed_address_type()  :  dwarf2expr.c
<item>size_of_encoded_value()  :  dwarf2-frame.c
<item>static_unwrap_type()  :  ada-lang.c
<item>stdio_file_delete()  :  ui-file.c
<item>stdio_file_flush()  :  ui-file.c
<item>stdio_file_fputs()  :  ui-file.c
<item>stdio_file_isatty()  :  ui-file.c
<item>stdio_file_read()  :  ui-file.c
<item>stdio_file_write()  :  ui-file.c
<item>step_1_inlining()  :  infcmd.c
<item>step_once()  :  infcmd.c
<item>stop_report_timer()  :  maint.c
<item>store_register_using_P()  :  remote.c
<item>store_typed_address()  :  findvar.c
<item>store_typed_floating()  :  doublest.c
<item>string_to_core_addr()  :  utils.c
<item>stringify_collection_list()  :  tracepoint.c
<item>substitute_args()  :  macroexp.c
<item>symbol_file_add_main_1()  :  symfile.c
<item>syms_from_objfile()  :  symfile.c
<item>target_xfer_partial()  :  target/target.c
<item>tee_file_delete()  :  ui-file.c
<item>tee_file_flush()  :  ui-file.c
<item>tee_file_fputs()  :  ui-file.c
<item>tee_file_isatty()  :  ui-file.c
<item>tee_file_write()  :  ui-file.c
<item>to_fixed_range_type()  :  ada-lang.c
<item>to_static_fixed_type()  :  ada-lang.c
<item>tramp_frame_prepend_unwinder()  :  tramp-frame.c
<item>translate_debug_map_address_with_tuple()  :  dwarf2read.c
<item>type_error()  :  language.c
<item>typecmp()  :  valops.c
<item>ui_file_data()  :  ui-file.c
<item>ui_out_begin()  :  ui-out.c
<item>ui_out_table_begin()  :  ui-out.c
<item>ui_out_table_body()  :  ui-out.c
<item>ui_out_table_end()  :  ui-out.c
<item>ui_out_table_header()  :  ui-out.c
<item>unlink_objfile()  :  objfiles.c
<item>unqualified_name_from_comp()  :  cp-support.c
<item>unsigned_address_type()  :  dwarf2expr.c
<item>update_current_target()  :  target/target.c
<item>update_exception_catchpoints()  :  breakpoint.c
<item>update_inlined_function_line_table_entry()  :  symtab.c
<item>val_elt_addr()  :  valprint.c
<item>value_aggregate_elt()  :  valops.c
<item>value_concat()  :  valarith.c
<item>value_fn_field()  :  value.c
<item>value_of_builtin_frame_reg()  :  std-regs.c
<item>value_of_user_reg()  :  user-regs.c
<item>value_subscript()  :  valarith.c
<item>value_subscripted_rvalue()  :  valarith.c
<item>varobj_get_type_index_from_fake_child()  :  varobj.c
<item>vcomplaint()  :  complaints.c
<item>verify_field()  :  ui-out.c
<item>verify_gdbarch()  :  gdbarch.c
<item>verify_stack()  :  inlining.c
<item>watch_command_1()  :  breakpoint.c
<item>watchpoint_to_Z_packet()  :  remote.c
<item>wild_match()  :  ada-lang.c
<item>wrap_here()  :  utils.c
<item>write_one_breakpoint()  :  breakpoint.c
<item>x86_frame_prev_register()  :  target/x86-shared-tdep.c
<item>xsnprintf()  :  utils.c
<item>xstrvprintf()  :  utils.c
</itemize>
</descrip>

<sect1>Global Function internal_verror()

<p><tt>void internal_verror ( const char* file, int line, const char* fmt, va_list ap )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>internal_vproblem()  :  utils.c
<item>deprecated_throw_reason()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>internal_error()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>internal_error_problem  :  utils.c
</itemize>
</descrip>

<sect1>Global Function internal_vwarning()

<p><tt>void internal_vwarning ( const char* file, int line, const char* fmt, va_list ap )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>internal_vproblem()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>internal_warning()  :  utils.c
<item>vcomplaint()  :  complaints.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>internal_warning_problem  :  utils.c
</itemize>
</descrip>

<sect1>Global Function internal_warning()

<p><tt>void internal_warning ( const char* file, int line, const char* string, ... )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>internal_vwarning()  :  utils.c
<item>__builtin_va_end(), __builtin_va_start()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>maintenance_internal_warning()  :  maint.c
</itemize>
</descrip>

<sect1>Global Function macosx_resize_window_handler()

<p><tt>void macosx_resize_window_handler ( void* d )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>macosx/xm-macosx.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>macosx_resize_window()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>init_page_info()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>async_init_signals()  :  event-top.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>chars_per_line  :  utils.c
<item>lines_per_page  :  utils.c
</itemize>
</descrip>

<sect1>Global Function make_cleanup()

<p><tt>struct cleanup* make_cleanup ( make_cleanup_ftype* function, void* arg )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>make_my_cleanup()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>add_dsym_command()  :  symfile.c
<item>add_kext_command()  :  symfile.c
<item>add_path()  :  source.c
<item>add_symbol_file_command()  :  symfile.c
<item>agent_command()  :  ax-gdb.c
<item>bpstat_do_actions()  :  breakpoint.c
<item>bpstat_stop_status()  :  breakpoint.c
<item>break_command_2()  :  breakpoint.c
<item>breakpoint_re_set_all()  :  breakpoint.c
<item>breakpoint_re_set_one()  :  breakpoint.c
<item>breakpoint_update()  :  breakpoint.c
<item>c_preprocess_and_parse()  :  c-lang.c
<item>clear_command()  :  breakpoint.c
<item>coff_locate_sections()  :  coffread.c
<item>coff_symfile_read()  :  coffread.c
<item>command_handler()  :  event-top.c
<item>command_loop()  :  top.c
<item>commands_command()  :  breakpoint.c
<item>compare_sections_command()  :  remote.c
<item>dbx_psymtab_to_symtab()  :  dbxread.c
<item>dbx_psymtab_to_symtab_1()  :  dbxread.c
<item>dbx_symfile_read()  :  dbxread.c
<item>decode_line_2()  :  linespec.c
<item>default_memory_insert_breakpoint()  :  mem-break.c
<item>default_memory_remove_breakpoint()  :  mem-break.c
<item>default_setup_safe_print()  :  target/target.c
<item>default_xfer_partial()  :  target/target.c
<item>delete_breakpoint()  :  breakpoint.c
<item>determine_class_name()  :  dwarf2read.c
<item>do_captured_breakpoint()  :  breakpoint.c
<item>do_mixed_source_and_assembly()  :  disasm.c
<item>dwarf2_add_field()  :  dwarf2read.c
<item>dwarf2_add_member_fn()  :  dwarf2read.c
<item>dwarf2_build_psymtabs_hard()  :  dwarf2read.c
<item>dwarf2_frame_cache()  :  dwarf2-frame.c
<item>dwarf2_start_subfile()  :  dwarf2read.c
<item>dwarf_build_psymtabs()  :  dwarfread.c
<item>dwarf_decode_line_header()  :  dwarf2read.c
<item>dwarf_decode_lines()  :  dwarf2read.c
<item>elf_symfile_read()  :  elfread.c
<item>elf_symtab_read()  :  elfread.c
<item>elfstab_build_psymtabs()  :  dbxread.c
<item>encode_actions()  :  tracepoint.c
<item>error_stream()  :  utils.c
<item>expand()  :  macroexp.c
<item>fill_symbuf()  :  dbxread.c
<item>find_debug_info_for_pst()  :  dwarf2read.c
<item>find_kext_loadaddrs_from_kernel()  :  symfile.c
<item>find_oload_champ_namespace_loop()  :  valops.c
<item>find_overload_match()  :  valops.c
<item>find_pc_offset()  :  disasm.c
<item>find_source_lines()  :  source.c
<item>future_break_command()  :  breakpoint.c
<item>gather_arguments()  :  macroexp.c
<item>gdb_breakpoint()  :  breakpoint.c
<item>generic_load()  :  symfile.c
<item>hand_function_call()  :  infcall.c
<item>info_macro_command()  :  macrocmd.c
<item>insert_bp_location()  :  breakpoint.c
<item>internal_vproblem()  :  utils.c
<item>invoke_block_command()  :  printcmd.c
<item>java_parse()  :  jv-exp.c
<item>load_comp_unit()  :  dwarf2read.c
<item>load_full_comp_unit()  :  dwarf2read.c
<item>load_progress()  :  symfile.c
<item>load_section_callback()  :  symfile.c
<item>lookup_partial_symtab()  :  symtab.c
<item>lookup_partial_symtab_all()  :  symtab.c
<item>lookup_struct_elt_type()  :  gdbtypes.c
<item>lookup_symbol_in_language()  :  ada-lang.c
<item>lookup_symtab()  :  symtab.c
<item>lookup_symtab_all()  :  symtab.c
<item>macro_expand()  :  macroexp.c
<item>macro_expand_command()  :  macrocmd.c
<item>macro_expand_next()  :  macroexp.c
<item>macro_expand_once_command()  :  macrocmd.c
<item>maintenance_print_msymbols()  :  symmisc.c
<item>maintenance_print_psymbols()  :  symmisc.c
<item>maintenance_print_symbols()  :  symmisc.c
<item>maintenance_print_type()  :  typeprint.c
<item>make_cleanup_bfd_close()  :  utils.c
<item>make_cleanup_close()  :  utils.c
<item>make_cleanup_delete_breakpoint()  :  breakpoint.c
<item>make_cleanup_discard_minimal_symbols()  :  minsyms.c
<item>make_cleanup_enable_disable_bpts_during_operation()  :  breakpoint.c
<item>make_cleanup_free_actions()  :  tracepoint.c
<item>make_cleanup_free_agent_expr()  :  ax-general.c
<item>make_cleanup_free_bincl_list()  :  dbxread.c
<item>make_cleanup_free_objfile()  :  objfiles.c
<item>make_cleanup_free_search_symbols()  :  symtab.c
<item>make_cleanup_free_variable()  :  varobj.c
<item>make_cleanup_init_objc_exception_catcher()  :  objc-lang.c
<item>make_cleanup_objfile_init_clear_hitlist()  :  objfiles.c
<item>make_cleanup_regcache_xfree()  :  regcache.c
<item>make_cleanup_restore_current_thread()  :  thread.c
<item>make_cleanup_restore_inferior_status()  :  infrun.c
<item>make_cleanup_restore_language()  :  language.c
<item>make_cleanup_restrict_to_objfile()  :  objfiles.c
<item>make_cleanup_restrict_to_objfile_by_name()  :  objfiles.c
<item>make_cleanup_restrict_to_objfile_list()  :  objfiles.c
<item>make_cleanup_set_restore_debugger_mode()  :  objc-lang.c
<item>make_cleanup_set_restore_print_closure()  :  eval.c
<item>make_cleanup_set_restore_unwind_on_signal()  :  infcall.c
<item>make_cleanup_start_report_timer()  :  maint.c
<item>make_cleanup_suppress_hook_stop()  :  infrun.c
<item>make_cleanup_ui_out_end()  :  ui-out.c
<item>make_cleanup_ui_out_notify_begin_end()  :  ui-out.c
<item>make_cleanup_ui_out_stream_delete()  :  ui-out.c
<item>make_cleanup_ui_out_suppress_output()  :  utils.c
<item>make_cleanup_ui_out_table_begin_end()  :  ui-out.c
<item>make_symbol_overload_list()  :  cp-support.c
<item>maybe_expand()  :  macroexp.c
<item>minsym_found()  :  linespec.c
<item>minsyms_found()  :  linespec.c
<item>new_objc_runtime_find_impl()  :  objc-lang.c
<item>new_objc_runtime_get_classname()  :  objc-lang.c
<item>nlm_symtab_read()  :  nlmread.c
<item>objc_fixup_ivar_offset()  :  objc-lang.c
<item>objc_read_trampoline_region()  :  objc-lang.c
<item>objc_setup_safe_print()  :  objc-lang.c
<item>open_bfd_from_oso()  :  dbxread.c
<item>output_command()  :  printcmd.c
<item>parse_and_eval()  :  eval.c
<item>parse_and_eval_address()  :  eval.c
<item>parse_and_eval_address_1()  :  eval.c
<item>parse_and_eval_long()  :  eval.c
<item>parse_breakpoint_sals()  :  breakpoint.c
<item>parse_exp_in_context()  :  parse.c
<item>parse_frame_specification_1()  :  stack.c
<item>parse_partial_symbols()  :  mdebugread.c
<item>parse_to_comma_and_eval()  :  eval.c
<item>print_address_symbolic()  :  printcmd.c
<item>print_command_1()  :  printcmd.c
<item>print_object_command()  :  objc-lang.c
<item>printf_command()  :  printcmd.c
<item>process_full_comp_unit()  :  dwarf2read.c
<item>psymtab_to_symtab()  :  symfile.c
<item>psymtab_to_symtab_1()  :  mdebugread.c
<item>ptype_command()  :  typeprint.c
<item>rbr_break_command()  :  breakpoint.c
<item>rbreak_command()  :  symtab.c
<item>re_enable_breakpoints_in_shlibs()  :  breakpoint.c
<item>read_alphacoff_dynamic_symtab()  :  mipsread.c
<item>read_array_type()  :  dwarf2read.c
<item>read_baseclasses()  :  stabsread.c
<item>read_command_file()  :  top.c
<item>read_dbx_dynamic_symtab()  :  dbxread.c
<item>read_dbx_symtab()  :  dbxread.c
<item>read_file_scope()  :  dwarf2read.c
<item>read_func_scope()  :  dwarf2read.c
<item>read_member_functions()  :  stabsread.c
<item>read_namespace()  :  dwarf2read.c
<item>read_ofile_symtab()  :  dwarfread.c
<item>read_pe_exported_syms()  :  coff-pe-read.c
<item>read_struct_fields()  :  stabsread.c
<item>read_struct_type()  :  stabsread.c
<item>read_structure_type()  :  dwarf2read.c
<item>read_type_die()  :  dwarf2read.c
<item>regcache_dump()  :  regcache.c
<item>remote_macosx_create_inferior()  :  remote.c
<item>remote_vcont_resume()  :  remote.c
<item>remove_symbol_file_command()  :  symfile.c
<item>renaming_is_visible()  :  ada-lang.c
<item>reopen_exec_file()  :  corefile.c
<item>reread_symbols_for_objfile()  :  symfile.c
<item>resolve_pending_breakpoint()  :  breakpoint.c
<item>resume()  :  infrun.c
<item>save_breakpoints_command()  :  breakpoint.c
<item>save_inferior_ptid()  :  infrun.c
<item>set_command()  :  printcmd.c
<item>set_language_command()  :  language.c
<item>set_raw_tracepoint()  :  tracepoint.c
<item>simplified_command_loop()  :  top.c
<item>slide_objfile()  :  objfiles.c
<item>solib_load_unload_1()  :  breakpoint.c
<item>solib_map_sections()  :  solib.c
<item>stabsect_build_psymtabs()  :  dbxread.c
<item>stabsect_read_strtab_from_oso()  :  dbxread.c
<item>start_timer()  :  maint.c
<item>step_1_inlining()  :  infcmd.c
<item>step_1_no_inlining()  :  infcmd.c
<item>symbol_file_add_from_memory()  :  symfile-mem.c
<item>symbol_file_add_with_addrs_or_offsets_using_objfile()  :  symfile.c
<item>symfile_bfd_open()  :  symfile.c
<item>syms_from_objfile()  :  symfile.c
<item>thread_apply_all_command()  :  thread.c
<item>thread_apply_command()  :  thread.c
<item>trace_dump_command()  :  tracepoint.c
<item>trace_find_line_command()  :  tracepoint.c
<item>trace_start_command()  :  tracepoint.c
<item>ui_out_field_stream()  :  ui-out.c
<item>val_print_string()  :  valprint.c
<item>validate_actionline()  :  tracepoint.c
<item>varobj_create()  :  varobj.c
<item>varobj_lookup_struct_elt_type_by_index()  :  varobj.c
<item>vcomplaint()  :  complaints.c
<item>verify_gdbarch()  :  gdbarch.c
<item>vfprintf_maybe_filtered()  :  utils.c
<item>vfprintf_unfiltered()  :  utils.c
<item>wait_for_inferior()  :  infrun.c
<item>whatis_exp()  :  typeprint.c
<item>x_command()  :  printcmd.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>cleanup_chain  :  utils.c
</itemize>
</descrip>

<sect1>Global Function make_cleanup_bfd_close()

<p><tt>struct cleanup* make_cleanup_bfd_close ( bfd* abfd )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>make_cleanup()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>convert_sect_addrs_to_offsets_via_on_disk_file()  :  symfile.c
<item>generic_load()  :  symfile.c
<item>symbol_file_add_with_addrs_or_offsets_using_objfile()  :  symfile.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>do_bfd_close_cleanup()  :  utils.c
</itemize>
</descrip>

<sect1>Global Function make_cleanup_close()

<p><tt>struct cleanup* make_cleanup_close ( int fd )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>make_cleanup()  :  utils.c
<item>xmalloc()  :  utils.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>do_close_cleanup()  :  utils.c
</itemize>
</descrip>

<sect1>Global Function make_cleanup_free_section_addr_info()

<p><tt>struct cleanup* make_cleanup_free_section_addr_info ( struct section_addr_info* addrs )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>make_my_cleanup()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>add_kext_command()  :  symfile.c
<item>symbol_file_add_with_addrs_or_offsets_using_objfile()  :  symfile.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>do_free_section_addr_info()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>cleanup_chain  :  utils.c
</itemize>
</descrip>

<sect1>Global Function make_cleanup_freeargv()

<p><tt>struct cleanup* make_cleanup_freeargv ( char** arg )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>make_my_cleanup()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>add_dsym_command()  :  symfile.c
<item>add_kext_command()  :  symfile.c
<item>add_symbol_file_command()  :  symfile.c
<item>backtrace_command()  :  stack.c
<item>core_file_command()  :  corefile.c
<item>handle_command()  :  infrun.c
<item>invoke_block_command()  :  printcmd.c
<item>maintenance_print_msymbols()  :  symmisc.c
<item>maintenance_print_psymbols()  :  symmisc.c
<item>maintenance_print_symbols()  :  symmisc.c
<item>save_breakpoints_command()  :  breakpoint.c
<item>symbol_file_command()  :  symfile.c
<item>xdb_handle_command()  :  infrun.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>do_freeargv()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>cleanup_chain  :  utils.c
</itemize>
</descrip>

<sect1>Global Function make_cleanup_restore_uiout()

<p><tt>struct cleanup* make_cleanup_restore_uiout ( struct ui_out* old_uiout )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>make_my_cleanup()  :  utils.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>do_restore_uiout_cleanup()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>cleanup_chain  :  utils.c
</itemize>
</descrip>

<sect1>Global Function make_cleanup_set_restore_scheduler_locking_mode()

<p><tt>struct cleanup* make_cleanup_set_restore_scheduler_locking_mode ( enum scheduler_locking_mode new_mode )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>make_my_cleanup()  :  utils.c
<item>set_scheduler_locking_mode()  :  infrun.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>c_value_of_root()  :  varobj.c
<item>do_end_debugger_mode()  :  objc-lang.c
<item>get_class_address_from_object()  :  objc-lang.c
<item>lookup_objc_class()  :  objc-lang.c
<item>make_cleanup_set_restore_debugger_mode()  :  objc-lang.c
<item>new_objc_runtime_find_impl()  :  objc-lang.c
<item>new_objc_runtime_get_classname()  :  objc-lang.c
<item>objc_setup_safe_print()  :  objc-lang.c
<item>varobj_create()  :  varobj.c
<item>varobj_set_value()  :  varobj.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>do_set_schedlock_mode()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>cleanup_chain  :  utils.c
</itemize>
</descrip>

<sect1>Global Function make_cleanup_ui_file_delete()

<p><tt>struct cleanup* make_cleanup_ui_file_delete ( struct ui_file* arg )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>make_my_cleanup()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>ada_print_floating()  :  ada-valprint.c
<item>c_value_of_variable()  :  varobj.c
<item>cplusplus_error()  :  linespec.c
<item>delete_breakpoint()  :  breakpoint.c
<item>insert_breakpoints()  :  breakpoint.c
<item>maintenance_print_msymbols()  :  symmisc.c
<item>maintenance_print_psymbols()  :  symmisc.c
<item>maintenance_print_symbols()  :  symmisc.c
<item>memory_error()  :  corefile.c
<item>save_breakpoints_command()  :  breakpoint.c
<item>type_sprint()  :  typeprint.c
<item>verify_gdbarch()  :  gdbarch.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>do_ui_file_delete()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>cleanup_chain  :  utils.c
</itemize>
</descrip>

<sect1>Global Function make_cleanup_ui_out_delete()

<p><tt>struct cleanup* make_cleanup_ui_out_delete ( struct ui_out* arg )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>make_my_cleanup()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>save_breakpoints_command()  :  breakpoint.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>do_ui_out_delete()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>cleanup_chain  :  utils.c
</itemize>
</descrip>

<sect1>Global Function make_cleanup_ui_out_suppress_output()

<p><tt>struct cleanup* make_cleanup_ui_out_suppress_output ( struct ui_out* cur_uiout )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>cli_out_new()  :  cli-out.c
<item>error()  :  utils.c
<item>make_cleanup()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>get_class_address_from_object()  :  objc-lang.c
<item>make_cleanup_init_objc_exception_catcher()  :  objc-lang.c
<item>new_objc_runtime_find_impl()  :  objc-lang.c
<item>new_objc_runtime_get_classname()  :  objc-lang.c
<item>read_objc_object()  :  objc-lang.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>do_restore_output()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_null  :  main.c
<item>uiout  :  ui-out.c
</itemize>
</descrip>

<sect1>Global Function make_exec_cleanup()

<p><tt>struct cleanup* make_exec_cleanup ( make_cleanup_ftype* function, void* arg )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>make_my_cleanup()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>fetch_inferior_event()  :  infrun.c
<item>make_exec_cleanup_delete_breakpoint()  :  breakpoint.c
<item>step_1_inlining()  :  infcmd.c
<item>step_1_no_inlining()  :  infcmd.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>exec_cleanup_chain  :  utils.c
</itemize>
</descrip>

<sect1>Global Function make_exec_error_cleanup()

<p><tt>struct cleanup* make_exec_error_cleanup ( make_cleanup_ftype* function, void* arg )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>make_my_cleanup()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>async_disable_stdin()  :  event-top.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>exec_error_cleanup_chain  :  utils.c
</itemize>
</descrip>

<sect1>Global Function make_final_cleanup()

<p><tt>struct cleanup* make_final_cleanup ( make_cleanup_ftype* function, void* arg )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>make_my_cleanup()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>final_cleanup_chain  :  utils.c
</itemize>
</descrip>

<sect1>Global Function make_hand_call_cleanup()

<p><tt>struct cleanup* make_hand_call_cleanup ( make_cleanup_ftype* function, void* arg )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>make_my_cleanup()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>make_cleanup_set_restore_debugger_mode()  :  objc-lang.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>hand_call_cleanup_chain  :  utils.c
</itemize>
</descrip>

<sect1>Global Function make_my_cleanup()

<p><tt>struct cleanup* make_my_cleanup ( struct cleanup** pmy_chain, make_cleanup_ftype* function, void* arg )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
<item>xmalloc()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>make_cleanup()  :  utils.c
<item>make_cleanup_free_section_addr_info()  :  utils.c
<item>make_cleanup_freeargv()  :  utils.c
<item>make_cleanup_restore_uiout()  :  utils.c
<item>make_cleanup_set_restore_scheduler_locking_mode()  :  utils.c
<item>make_cleanup_ui_file_delete()  :  utils.c
<item>make_cleanup_ui_out_delete()  :  utils.c
<item>make_exec_cleanup()  :  utils.c
<item>make_exec_error_cleanup()  :  utils.c
<item>make_final_cleanup()  :  utils.c
<item>make_hand_call_cleanup()  :  utils.c
<item>make_run_cleanup()  :  utils.c
</itemize>
</descrip>

<sect1>Global Function make_run_cleanup()

<p><tt>struct cleanup* make_run_cleanup ( make_cleanup_ftype* function, void* arg )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>make_my_cleanup()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>update_solib_list()  :  solib.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>run_cleanup_chain  :  utils.c
</itemize>
</descrip>

<sect1>Global Function myread()

<p><tt>int myread ( int desc, char* addr, int len )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>read()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>find_source_lines()  :  source.c
</itemize>
</descrip>

<sect1>Global Function n_spaces()

<p><tt>char* n_spaces ( int n )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xfree()  :  utils.c
<item>xmalloc()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>cp_print_value_fields()  :  cp-valprint.c
<item>java_print_value_fields()  :  jv-valprint.c
<item>java_value_print()  :  jv-valprint.c
<item>pascal_object_print_value_fields()  :  p-valprint.c
<item>print_field_values()  :  ada-valprint.c
<item>print_spaces()  :  utils.c
<item>print_spaces_filtered()  :  utils.c
<item>val_print_array_elements()  :  valprint.c
<item>val_print_packed_array_elements()  :  ada-valprint.c
</itemize>
</descrip>

<sect1>Global Function nomem()

<p><tt>void nomem ( long size )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>add_kext_command()  :  symfile.c
<item>add_symbol_file_command()  :  symfile.c
<item>backtrace_command()  :  stack.c
<item>core_file_command()  :  corefile.c
<item>handle_command()  :  infrun.c
<item>maintenance_print_msymbols()  :  symmisc.c
<item>maintenance_print_psymbols()  :  symmisc.c
<item>maintenance_print_symbols()  :  symmisc.c
<item>save_breakpoints_command()  :  breakpoint.c
<item>symbol_file_command()  :  symfile.c
<item>xcalloc()  :  utils.c
<item>xdb_handle_command()  :  infrun.c
<item>xmalloc()  :  utils.c
<item>xmcalloc()  :  utils.c
<item>xmmalloc()  :  utils.c
<item>xmrealloc()  :  utils.c
<item>xrealloc()  :  utils.c
<item>xstrvprintf()  :  utils.c
</itemize>
</descrip>

<sect1>Global Function nquery()

<p><tt>int nquery ( const char* ctlstr, ... )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>defaulted_query()  :  utils.c
<item>__builtin_va_end(), __builtin_va_start()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>break_command_2()  :  breakpoint.c
</itemize>
</descrip>

<sect1>Global Function null_cleanup()

<p><tt>void null_cleanup ( void* arg )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Used in:</tag>
<itemize>
<item>add_kext_command()  :  symfile.c
<item>add_symbol_file_command()  :  symfile.c
<item>break_command_2()  :  breakpoint.c
<item>breakpoint_re_set_one()  :  breakpoint.c
<item>command_handler()  :  event-top.c
<item>command_loop()  :  top.c
<item>default_setup_safe_print()  :  target/target.c
<item>do_captured_breakpoint()  :  breakpoint.c
<item>do_mixed_source_and_assembly()  :  disasm.c
<item>dwarf2_start_subfile()  :  dwarf2read.c
<item>expand()  :  macroexp.c
<item>hand_function_call()  :  infcall.c
<item>make_cleanup_restrict_to_objfile_by_name()  :  objfiles.c
<item>make_cleanup_set_restore_debugger_mode()  :  objc-lang.c
<item>make_cleanup_start_report_timer()  :  maint.c
<item>minsym_found()  :  linespec.c
<item>minsyms_found()  :  linespec.c
<item>objc_setup_safe_print()  :  objc-lang.c
<item>parse_breakpoint_sals()  :  breakpoint.c
<item>read_array_type()  :  dwarf2read.c
<item>read_file_scope()  :  dwarf2read.c
<item>read_namespace()  :  dwarf2read.c
<item>read_struct_type()  :  stabsread.c
<item>read_structure_type()  :  dwarf2read.c
<item>regcache_dump()  :  regcache.c
<item>simplified_command_loop()  :  top.c
<item>slide_objfile()  :  objfiles.c
<item>solib_load_unload_1()  :  breakpoint.c
<item>stabsect_read_strtab_from_oso()  :  dbxread.c
<item>start_timer()  :  maint.c
<item>trace_dump_command()  :  tracepoint.c
<item>val_print_string()  :  valprint.c
<item>varobj_create()  :  varobj.c
</itemize>
</descrip>

<sect1>Global Function paddr()

<p><tt>char* paddr ( CORE_ADDR addr )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>gdbarch_addr_bit()  :  gdbarch.c
<item>phex()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>compare_sections_command()  :  remote.c
<item>convert_oso_map_to_final_map()  :  dwarf2read.c
<item>create_breakpoints()  :  breakpoint.c
<item>create_thread_event_breakpoint()  :  breakpoint.c
<item>debug_keep_going()  :  target/target.c
<item>execute_cfa_program()  :  dwarf2-frame.c
<item>handle_inferior_event()  :  infrun.c
<item>load_progress()  :  symfile.c
<item>maint_print_section_info()  :  maint.c
<item>maintenance_translate_address()  :  maint.c
<item>record_minimal_symbol()  :  dbxread.c
<item>syms_from_objfile()  :  symfile.c
<item>translate_debug_map_address_with_tuple()  :  dwarf2read.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
</itemize>
</descrip>

<sect1>Global Function paddr_d()

<p><tt>char* paddr_d ( long addr )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>decimal2str()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>debug_print_register()  :  target/target.c
<item>gdbarch_dump()  :  gdbarch.c
<item>target_xfer_partial()  :  target/target.c
</itemize>
</descrip>

<sect1>Global Function paddr_nz()

<p><tt>char* paddr_nz ( CORE_ADDR addr )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>gdbarch_addr_bit()  :  gdbarch.c
<item>phex_nz()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>add_symbol_file_command()  :  symfile.c
<item>add_vsyscall_page()  :  symfile-mem.c
<item>create_kext_addr_map()  :  dwarf2read.c
<item>create_new_frame()  :  frame.c
<item>debug_load_solib()  :  target/target.c
<item>debug_print_register()  :  target/target.c
<item>debug_to_insert_breakpoint()  :  target/target.c
<item>debug_to_remove_breakpoint()  :  target/target.c
<item>deprecated_debug_xfer_memory()  :  target/target.c
<item>deprecated_update_frame_base_hack()  :  frame.c
<item>deprecated_update_frame_pc_hack()  :  frame.c
<item>dump_objfile()  :  symmisc.c
<item>dwarf2_record_line()  :  dwarf2read.c
<item>find_implementation()  :  objc-lang.c
<item>find_implementation_from_class()  :  objc-lang.c
<item>find_pc_sect_symtab()  :  symtab.c
<item>finish_block()  :  buildsym.c
<item>fprint_field()  :  frame.c
<item>fprint_frame()  :  frame.c
<item>frame_func_unwind()  :  frame.c
<item>frame_pc_unwind()  :  frame.c
<item>frame_register_unwind()  :  frame.c
<item>gdbarch_dump()  :  gdbarch.c
<item>generic_load()  :  symfile.c
<item>get_class_address_from_object()  :  objc-lang.c
<item>hand_function_call()  :  infcall.c
<item>handle_inferior_event()  :  infrun.c
<item>inlined_function_add_function_names()  :  inlining.c
<item>insert_step_resume_breakpoint_at_frame()  :  infrun.c
<item>java_value_print()  :  jv-valprint.c
<item>load_section_callback()  :  symfile.c
<item>locexpr_describe_location()  :  dwarf2loc.c
<item>loclist_describe_location()  :  dwarf2loc.c
<item>new_objc_runtime_class_getClass()  :  objc-lang.c
<item>new_objc_runtime_find_impl()  :  objc-lang.c
<item>objc_fixup_ivar_offset()  :  objc-lang.c
<item>objfile_delete_from_ordered_sections()  :  objfiles.c
<item>print_object_command()  :  objc-lang.c
<item>print_single_dwarf_location()  :  dwarf2loc.c
<item>print_symbol()  :  symmisc.c
<item>proceed()  :  infrun.c
<item>rb_print_node()  :  dwarf2read.c
<item>read_objc_object()  :  objc-lang.c
<item>remote_check_symbols()  :  remote.c
<item>remove_breakpoints()  :  breakpoint.c
<item>scm_ipruk()  :  scm-valprint.c
<item>scm_scmval_print()  :  scm-valprint.c
<item>target_xfer_partial()  :  target/target.c
<item>translate_common_symbol_debug_map_address()  :  dwarf2read.c
<item>translate_debug_map_address()  :  dwarf2read.c
<item>watch_command_1()  :  breakpoint.c
<item>x86_analyze_prologue()  :  target/x86-shared-tdep.c
<item>x86_frame_prev_register()  :  target/x86-shared-tdep.c
<item>x86_frame_this_id()  :  target/x86-shared-tdep.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
</itemize>
</descrip>

<sect1>Global Function paddr_u()

<p><tt>char* paddr_u ( CORE_ADDR addr )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>decimal2str()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>maintenance_translate_address()  :  maint.c
<item>parse_breakpoint_sals()  :  breakpoint.c
</itemize>
</descrip>

<sect1>Global Function paddress()

<p><tt>const char* paddress ( CORE_ADDR addr )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>gdbarch_addr_bit()  :  gdbarch.c
<item>hex_string()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>deprecated_print_address_numeric()  :  printcmd.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
</itemize>
</descrip>

<sect1>Global Function paddress_with_arch()

<p><tt>const char* paddress_with_arch ( struct gdbarch* gdbarch, CORE_ADDR addr )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>gdbarch_addr_bit()  :  gdbarch.c
<item>hex_string()  :  utils.c
</itemize>
</descrip>

<sect1>Global Function parse_escape()

<p><tt>int parse_escape ( const char** string_ptr )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>c_parse_backslash()  :  cp-name-parser.c
<item>error()  :  utils.c
<item>host_char_to_target()  :  charset.c
<item>host_charset()  :  charset.c
<item>no_control_char_error()  :  utils.c
<item>parse_escape()  :  utils.c
<item>target_char_to_control_char()  :  charset.c
<item>target_charset()  :  charset.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>c_lex()  :  c-exp.c
<item>get_character_constant()  :  macroexp.c
<item>get_string_literal()  :  macroexp.c
<item>java_lex()  :  jv-exp.c
<item>objc_lex()  :  objc-exp.c
<item>parse_escape()  :  utils.c
<item>pascal_lex()  :  p-exp.c
</itemize>
</descrip>

<sect1>Global Function perror_with_name()

<p><tt>void perror_with_name ( const char* string )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>safe_strerror()  :  utils.c
<item>__builtin___strcat_chk(), __builtin___strcpy_chk(), __builtin_alloca(), __builtin_object_size(), __error(), __inline_strcat_chk(), __inline_strcpy_chk(), bfd_set_error(), strlen()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>coff_symtab_read()  :  coffread.c
<item>coffstab_build_psymtabs()  :  dbxread.c
<item>dbx_symfile_init()  :  dbxread.c
<item>dbx_symfile_read()  :  dbxread.c
<item>dwarf2_scan_inlined_section_for_psymbols()  :  dwarf2read.c
<item>dwarf2_scan_pubtype_for_psymbols()  :  dwarf2read.c
<item>elfstab_build_psymtabs()  :  dbxread.c
<item>fill_symbuf()  :  dbxread.c
<item>find_source_lines()  :  source.c
<item>forward_search_command()  :  source.c
<item>gdb_wait_for_event()  :  event-loop.c
<item>generic_load()  :  symfile.c
<item>maintenance_print_architecture()  :  maint.c
<item>maintenance_print_dummy_frames()  :  dummy-frame.c
<item>maintenance_print_msymbols()  :  symmisc.c
<item>maintenance_print_psymbols()  :  symmisc.c
<item>maintenance_print_reggroups()  :  reggroups.c
<item>maintenance_print_symbols()  :  symmisc.c
<item>print_source_lines_base()  :  source.c
<item>putpkt_binary()  :  remote.c
<item>readchar()  :  remote.c
<item>regcache_print()  :  regcache.c
<item>remote_open_1()  :  remote.c
<item>reverse_search_command()  :  source.c
<item>serial_open()  :  serial.c
<item>solib_map_sections()  :  solib.c
<item>stabsect_build_psymtabs()  :  dbxread.c
<item>stabsect_read_strtab_from_oso()  :  dbxread.c
<item>symfile_bfd_open()  :  symfile.c
</itemize>
</descrip>

<sect1>Global Function phex()

<p><tt>char* phex ( unsigned long l, int sizeof_l )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>get_cell()  :  utils.c
<item>phex()  :  utils.c
<item>xsnprintf()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>core_addr_to_string()  :  utils.c
<item>paddr()  :  utils.c
<item>phex()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>thirty_two  :  utils.c
</itemize>
</descrip>

<sect1>Global Function phex_nz()

<p><tt>char* phex_nz ( unsigned long l, int sizeof_l )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>get_cell()  :  utils.c
<item>phex_nz()  :  utils.c
<item>xsnprintf()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>core_addr_to_string_nz()  :  utils.c
<item>hex_string()  :  utils.c
<item>hex_string_custom()  :  utils.c
<item>memory_error()  :  corefile.c
<item>paddr_nz()  :  utils.c
<item>phex_nz()  :  utils.c
<item>remote_wait()  :  remote.c
<item>remote_xfer_partial()  :  remote.c
<item>store_register_using_P()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>thirty_two  :  utils.c
</itemize>
</descrip>

<sect1>Global Function print_spaces()

<p><tt>void print_spaces ( int n, struct ui_file* file )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fputs_unfiltered()  :  ui-file.c
<item>n_spaces()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>dump_symtab_1()  :  symmisc.c
<item>print_symbol()  :  symmisc.c
</itemize>
</descrip>

<sect1>Global Function print_spaces_filtered()

<p><tt>void print_spaces_filtered ( int n, struct ui_file* stream )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fputs_filtered()  :  utils.c
<item>n_spaces()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>ada_val_print_1()  :  ada-valprint.c
<item>c_type_print_base()  :  c-typeprint.c
<item>c_val_print()  :  c-valprint.c
<item>cli_spaces()  :  cli-out.c
<item>cp_print_value()  :  cp-valprint.c
<item>cp_print_value_fields()  :  cp-valprint.c
<item>default_print_registers_info()  :  infcmd.c
<item>fprintfi_filtered()  :  utils.c
<item>java_print_value_fields()  :  jv-valprint.c
<item>java_type_print_base()  :  jv-typeprint.c
<item>pascal_object_print_value()  :  p-valprint.c
<item>pascal_object_print_value_fields()  :  p-valprint.c
<item>pascal_type_print_base()  :  p-typeprint.c
<item>pascal_val_print()  :  p-valprint.c
<item>print_field_values()  :  ada-valprint.c
<item>print_record()  :  ada-valprint.c
<item>printfi_filtered()  :  utils.c
<item>val_print_array_elements()  :  valprint.c
<item>val_print_packed_array_elements()  :  ada-valprint.c
</itemize>
</descrip>

<sect1>Global Function print_sys_errmsg()

<p><tt>void print_sys_errmsg ( const char* string, int errcode )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fprintf_unfiltered()  :  utils.c
<item>gdb_flush()  :  ui-file.c
<item>safe_strerror()  :  utils.c
<item>__builtin___strcat_chk(), __builtin___strcpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_strcat_chk(), __inline_strcpy_chk(), strlen()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>add_path()  :  source.c
<item>new_tty()  :  inflow.c
<item>print_source_lines_base()  :  source.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stderr  :  main.c
<item>gdb_stdout  :  main.c
</itemize>
</descrip>

<sect1>Global Function printf_filtered()

<p><tt>void printf_filtered ( const char* format, ... )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>vfprintf_filtered()  :  utils.c
<item>__builtin_va_end(), __builtin_va_start()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>ada_resolve_function()  :  ada-lang.c
<item>add_kext_command()  :  symfile.c
<item>add_memrange()  :  tracepoint.c
<item>add_register()  :  tracepoint.c
<item>add_symbol_file_command()  :  symfile.c
<item>address_info()  :  printcmd.c
<item>backtrace_command_1()  :  stack.c
<item>basic_lookup_transparent_type()  :  symtab.c
<item>bpstat_stop_status()  :  breakpoint.c
<item>breakpoint_re_set_one()  :  breakpoint.c
<item>captured_main()  :  main.c
<item>child_terminal_info()  :  inflow.c
<item>classes_info()  :  objc-lang.c
<item>collect_symbol()  :  tracepoint.c
<item>compare_sections_command()  :  remote.c
<item>condition_command_1()  :  breakpoint.c
<item>continue_command()  :  infcmd.c
<item>dbx_psymtab_to_symtab()  :  dbxread.c
<item>dbx_psymtab_to_symtab_1()  :  dbxread.c
<item>decode_line_2()  :  linespec.c
<item>defaulted_query()  :  utils.c
<item>describe_other_breakpoints()  :  breakpoint.c
<item>disable_breakpoints_in_shlibs()  :  breakpoint.c
<item>display_info()  :  printcmd.c
<item>do_enable_breakpoint()  :  breakpoint.c
<item>do_examine()  :  printcmd.c
<item>do_one_display()  :  printcmd.c
<item>dump_fn_fieldlists()  :  gdbtypes.c
<item>dump_objfile()  :  symmisc.c
<item>dwarf2_debug_map_psymtab_to_symtab()  :  dwarf2read.c
<item>dwarf2_kext_psymtab_to_symtab()  :  dwarf2read.c
<item>dwarf2_psymtab_to_symtab()  :  dwarf2read.c
<item>dwarf_psymtab_to_symtab()  :  dwarfread.c
<item>encode_actions()  :  tracepoint.c
<item>execute_command()  :  top.c
<item>find_implementation_from_class()  :  objc-lang.c
<item>finish_command()  :  infcmd.c
<item>finish_tfind_command()  :  tracepoint.c
<item>forward_search_command()  :  source.c
<item>frame_info()  :  stack.c
<item>func_command()  :  stack.c
<item>gdb_kod_display()  :  kod.c
<item>get_number_trailer()  :  breakpoint.c
<item>get_tracepoint_by_number()  :  tracepoint.c
<item>go_command()  :  infcmd.c
<item>handle_inferior_event()  :  infrun.c
<item>ignore_command()  :  breakpoint.c
<item>info_common_command()  :  f-valprint.c
<item>info_ext_lang_command()  :  symfile.c
<item>insert_bp_location()  :  breakpoint.c
<item>internal_vproblem()  :  utils.c
<item>invoke_block_command()  :  printcmd.c
<item>jump_command()  :  infcmd.c
<item>kill_command()  :  inflow.c
<item>kod_set_os()  :  kod.c
<item>line_info()  :  source.c
<item>list_all_visible_commons()  :  f-valprint.c
<item>list_overlays_command()  :  symfile.c
<item>lookup_symbol_aux_psymtabs()  :  symtab.c
<item>lookup_symtab_all()  :  symtab.c
<item>maint_print_section_info()  :  maint.c
<item>maintenance_check_symtabs()  :  symmisc.c
<item>maintenance_do_deprecate()  :  maint.c
<item>maintenance_info_psymtabs()  :  symmisc.c
<item>maintenance_info_sections()  :  maint.c
<item>maintenance_info_symtabs()  :  symmisc.c
<item>maintenance_translate_address()  :  maint.c
<item>mdebug_psymtab_to_symtab()  :  mdebugread.c
<item>mem_info_command()  :  memattr.c
<item>mention()  :  breakpoint.c
<item>normal_stop()  :  infrun.c
<item>objc_init_trampoline_observer()  :  objc-lang.c
<item>output_source_filename()  :  symtab.c
<item>parse_external()  :  mdebugread.c
<item>prim_record_minimal_symbol_and_info()  :  minsyms.c
<item>print_bcache_statistics()  :  bcache.c
<item>print_bfd_flags()  :  maint.c
<item>print_bit_vector()  :  gdbtypes.c
<item>print_bound_type()  :  gdbtypes.c
<item>print_command_1()  :  printcmd.c
<item>print_cplus_stuff()  :  gdbtypes.c
<item>print_exception_catchpoint()  :  breakpoint.c
<item>print_formatted()  :  printcmd.c
<item>print_it_typical()  :  breakpoint.c
<item>print_mention_exception_catchpoint()  :  breakpoint.c
<item>print_msymbol_info()  :  symtab.c
<item>print_object_command()  :  objc-lang.c
<item>print_objfile_statistics()  :  symmisc.c
<item>print_percentage()  :  bcache.c
<item>print_symbol_bcache_statistics()  :  symmisc.c
<item>print_symbol_info()  :  symtab.c
<item>printf_command()  :  printcmd.c
<item>program_info()  :  infcmd.c
<item>psymtab_to_symtab_1()  :  mdebugread.c
<item>ptype_command()  :  typeprint.c
<item>push_remote_macosx_target()  :  remote.c
<item>push_remote_target()  :  remote.c
<item>query()  :  utils.c
<item>rbreak_command()  :  symtab.c
<item>re_enable_breakpoints_in_shlibs()  :  breakpoint.c
<item>read_frame()  :  remote.c
<item>read_pe_exported_syms()  :  coff-pe-read.c
<item>record_minimal_symbol()  :  dbxread.c
<item>recursive_dump_type()  :  gdbtypes.c
<item>reg_flush_command()  :  regcache.c
<item>remote_async_wait()  :  remote.c
<item>remote_wait()  :  remote.c
<item>resolve_pending_breakpoint()  :  breakpoint.c
<item>resolve_subexp()  :  ada-lang.c
<item>reverse_search_command()  :  source.c
<item>save_breakpoints_command()  :  breakpoint.c
<item>scope_info()  :  tracepoint.c
<item>selectors_info()  :  objc-lang.c
<item>set_environment_command()  :  infcmd.c
<item>set_ignore_count()  :  breakpoint.c
<item>set_input_radix_1()  :  valprint.c
<item>set_output_radix_1()  :  valprint.c
<item>set_radix()  :  valprint.c
<item>show_commands()  :  top.c
<item>show_convenience()  :  value.c
<item>show_language_command()  :  language.c
<item>show_max_remote_packet_size()  :  remote.c
<item>show_memory_packet_size()  :  remote.c
<item>show_no_ack_mode_cmd()  :  remote.c
<item>show_packet_config_cmd()  :  remote.c
<item>show_radix()  :  valprint.c
<item>show_remote_debugflags_command()  :  remote.c
<item>show_values()  :  value.c
<item>sig_print_header()  :  infrun.c
<item>sig_print_info()  :  infrun.c
<item>signal_command()  :  infcmd.c
<item>signals_info()  :  infrun.c
<item>slide_objfile()  :  objfiles.c
<item>source_info()  :  source.c
<item>sources_info()  :  symtab.c
<item>step_1_inlining()  :  infcmd.c
<item>step_1_no_inlining()  :  infcmd.c
<item>step_once()  :  infcmd.c
<item>stop_command()  :  breakpoint.c
<item>stopat_command()  :  breakpoint.c
<item>stopin_command()  :  breakpoint.c
<item>stringify_collection_list()  :  tracepoint.c
<item>sym_info()  :  printcmd.c
<item>syms_from_objfile()  :  symfile.c
<item>symtab_symbol_info()  :  symtab.c
<item>thread_apply_all_command()  :  thread.c
<item>thread_apply_command()  :  thread.c
<item>thread_command()  :  thread.c
<item>trace_actions_command()  :  tracepoint.c
<item>trace_command()  :  tracepoint.c
<item>trace_dump_command()  :  tracepoint.c
<item>trace_find_line_command()  :  tracepoint.c
<item>trace_find_outside_command()  :  tracepoint.c
<item>trace_find_range_command()  :  tracepoint.c
<item>trace_mention()  :  tracepoint.c
<item>trace_pass_command()  :  tracepoint.c
<item>tracepoint_save_command()  :  tracepoint.c
<item>tracepoints_info()  :  tracepoint.c
<item>unset_command()  :  infcmd.c
<item>whatis_exp()  :  typeprint.c
<item>x86_analyze_prologue()  :  target/x86-shared-tdep.c
<item>x86_frame_prev_register()  :  target/x86-shared-tdep.c
<item>x86_frame_this_id()  :  target/x86-shared-tdep.c
<item>xdb_handle_command()  :  infrun.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdout  :  main.c
</itemize>
</descrip>

<sect1>Global Function printf_unfiltered()

<p><tt>void printf_unfiltered ( const char* format, ... )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>vfprintf_unfiltered()  :  utils.c
<item>__builtin_va_end(), __builtin_va_start()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>add_symbol_file_command()  :  symfile.c
<item>async_stop_sig()  :  event-top.c
<item>captured_main()  :  main.c
<item>check_field()  :  valops.c
<item>clear_command()  :  breakpoint.c
<item>command_handler()  :  event-top.c
<item>command_line_handler()  :  event-top.c
<item>command_line_handler_continuation()  :  event-top.c
<item>command_line_input()  :  top.c
<item>command_loop()  :  top.c
<item>create_mem_region()  :  memattr.c
<item>decode_line_2()  :  linespec.c
<item>default_terminal_info()  :  target/target.c
<item>disable_display()  :  printcmd.c
<item>discard_hand_call_cleanups()  :  utils.c
<item>display_info()  :  printcmd.c
<item>do_hand_call_cleanups()  :  utils.c
<item>enable_display()  :  printcmd.c
<item>find_implementation_from_class()  :  objc-lang.c
<item>first_component_command()  :  cp-support.c
<item>follow_exec()  :  infrun.c
<item>get_selections()  :  ada-lang.c
<item>get_tracepoint_by_number()  :  tracepoint.c
<item>getpkt_sane()  :  remote.c
<item>handle_command()  :  infrun.c
<item>handle_file_event()  :  event-loop.c
<item>inferior_event_handler()  :  inf-loop.c
<item>info_sharedlibrary_command()  :  solib.c
<item>kill_or_be_killed()  :  target/target.c
<item>language_info()  :  language.c
<item>macro_command()  :  macrocmd.c
<item>maint_cplus_command()  :  cp-support.c
<item>maintenance_command()  :  maint.c
<item>maintenance_cplus_namespace()  :  cp-namespace.c
<item>maintenance_demangle()  :  maint.c
<item>maintenance_deprecate()  :  maint.c
<item>maintenance_info_command()  :  maint.c
<item>maintenance_interval_display()  :  maint.c
<item>maintenance_print_command()  :  maint.c
<item>maintenance_set_cmd()  :  maint.c
<item>maintenance_space_display()  :  maint.c
<item>maintenance_time_display()  :  maint.c
<item>maintenance_undeprecate()  :  maint.c
<item>map_breakpoint_numbers()  :  breakpoint.c
<item>map_overlay_command()  :  symfile.c
<item>mdebug_build_psymtabs()  :  mdebugread.c
<item>mem_delete()  :  memattr.c
<item>mem_disable()  :  memattr.c
<item>mem_enable()  :  memattr.c
<item>mem_info_command()  :  memattr.c
<item>overlay_auto_command()  :  symfile.c
<item>overlay_command()  :  symfile.c
<item>overlay_manual_command()  :  symfile.c
<item>overlay_off_command()  :  symfile.c
<item>print_command_1()  :  printcmd.c
<item>prompt_for_continue()  :  utils.c
<item>reread_symbols_for_objfile()  :  symfile.c
<item>serial_set_cmd()  :  serial.c
<item>set_architecture()  :  arch-utils.c
<item>set_check()  :  language.c
<item>set_demangling_command()  :  demangle.c
<item>set_endian()  :  arch-utils.c
<item>set_history()  :  top.c
<item>set_language_command()  :  language.c
<item>set_print()  :  valprint.c
<item>set_scheduler_locking_mode()  :  infrun.c
<item>show_case_command()  :  language.c
<item>show_convenience()  :  value.c
<item>show_endian()  :  arch-utils.c
<item>show_range_command()  :  language.c
<item>show_system_call_allowed()  :  remote-fileio.c
<item>show_type_command()  :  language.c
<item>solib_add()  :  solib.c
<item>solib_read_symbols()  :  solib.c
<item>stdin_event_handler()  :  event-top.c
<item>stop_sig()  :  top.c
<item>symbol_file_add_with_addrs_or_offsets_using_objfile()  :  symfile.c
<item>symbol_file_clear()  :  symfile.c
<item>target_info()  :  target/target.c
<item>user_select_syms()  :  ada-lang.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdout  :  main.c
</itemize>
</descrip>

<sect1>Global Function printfi_filtered()

<p><tt>void printfi_filtered ( int spaces, const char* format, ... )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>print_spaces_filtered()  :  utils.c
<item>vfprintf_filtered()  :  utils.c
<item>__builtin_va_end(), __builtin_va_start()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>dump_fn_fieldlists()  :  gdbtypes.c
<item>print_cplus_stuff()  :  gdbtypes.c
<item>recursive_dump_type()  :  gdbtypes.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdout  :  main.c
</itemize>
</descrip>

<sect1>Global Function putchar_filtered()

<p><tt>int putchar_filtered ( int c )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fputc_filtered()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdout  :  main.c
</itemize>
</descrip>

<sect1>Global Function putchar_unfiltered()

<p><tt>int putchar_unfiltered ( int c )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>ui_file_write()  :  ui-file.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>clear_command()  :  breakpoint.c
<item>putpkt_binary()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdout  :  main.c
</itemize>
</descrip>

<sect1>Global Function puts_debug()

<p><tt>void puts_debug ( const char* prefix, const char* string, const char* suffix )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fprintf_unfiltered()  :  utils.c
<item>fputc_unfiltered()  :  utils.c
<item>fputs_unfiltered()  :  ui-file.c
<item>isprint(), strcmp()
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdlog  :  main.c
</itemize>
</descrip>

<sect1>Global Function puts_filtered()

<p><tt>void puts_filtered ( const char* string )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fputs_filtered()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>begin_line()  :  utils.c
<item>environment_info()  :  infcmd.c
<item>frame_info()  :  stack.c
<item>list_overlays_command()  :  symfile.c
<item>maintenance_check_symtabs()  :  symmisc.c
<item>packet_command()  :  remote.c
<item>path_info()  :  infcmd.c
<item>print_bit_vector()  :  gdbtypes.c
<item>print_cplus_stuff()  :  gdbtypes.c
<item>print_packet()  :  remote.c
<item>printf_command()  :  printcmd.c
<item>read_frame()  :  remote.c
<item>recursive_dump_type()  :  gdbtypes.c
<item>remote_detach()  :  remote.c
<item>remote_disconnect()  :  remote.c
<item>remote_files_info()  :  remote.c
<item>remote_open_1()  :  remote.c
<item>show_directories()  :  source.c
<item>wrap_here()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdout  :  main.c
</itemize>
</descrip>

<sect1>Global Function puts_filtered_tabular()

<p><tt>void puts_filtered_tabular ( char* string, int width, int right )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fputs_filtered()  :  utils.c
<item>internal_error()  :  utils.c
<item>__builtin_alloca(), strlen()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>classes_info()  :  objc-lang.c
<item>selectors_info()  :  objc-lang.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>chars_per_line  :  utils.c
<item>chars_printed  :  utils.c
<item>gdb_stdout  :  main.c
</itemize>
</descrip>

<sect1>Global Function puts_unfiltered()

<p><tt>void puts_unfiltered ( const char* string )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fputs_unfiltered()  :  ui-file.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>command_line_handler()  :  event-top.c
<item>command_line_input()  :  top.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdout  :  main.c
</itemize>
</descrip>

<sect1>Global Function puuid()

<p><tt>char* puuid ( uint8_t* uuid )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>get_cell()  :  utils.c
<item>uuid_unparse_upper()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>find_kext_files_by_symfile()  :  symfile.c
</itemize>
</descrip>

<sect1>Global Function query()

<p><tt>int query ( const char* ctlstr, ... )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>gdb_flush()  :  ui-file.c
<item>input_from_terminal_p()  :  top.c
<item>printf_filtered()  :  utils.c
<item>vfprintf_filtered()  :  utils.c
<item>wrap_here()  :  utils.c
<item>__builtin_va_end(), __builtin_va_start(), clearerr(), deprecated_query_hook(), fgetc()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>add_symbol_file_command()  :  symfile.c
<item>attach_command()  :  infcmd.c
<item>delete_command()  :  breakpoint.c
<item>delete_trace_command()  :  tracepoint.c
<item>directory_command()  :  source.c
<item>handle_command()  :  infrun.c
<item>internal_vproblem()  :  utils.c
<item>interrupt_query()  :  remote.c
<item>jump_command()  :  infcmd.c
<item>kill_command()  :  inflow.c
<item>kill_if_already_running()  :  infcmd.c
<item>kill_or_be_killed()  :  target/target.c
<item>maintenance_dump_me()  :  maint.c
<item>mem_delete_command()  :  memattr.c
<item>quit_confirm()  :  top.c
<item>return_command()  :  stack.c
<item>set_memory_packet_size()  :  remote.c
<item>symbol_file_add_with_addrs_or_offsets_using_objfile()  :  symfile.c
<item>symbol_file_clear()  :  symfile.c
<item>target_preopen()  :  target/target.c
<item>undisplay_command()  :  printcmd.c
<item>unset_environment_command()  :  infcmd.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>annotation_level  :  stack.c
<item>deprecated_query_hook  :  top.c
<item>gdb_stdout  :  main.c
<item>quit_flag  :  utils.c
</itemize>
</descrip>

<sect1>Global Function quit()

<p><tt>void quit ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fatal()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>ada_lookup_symbol_list()  :  ada-lang.c
<item>ada_val_print_1()  :  ada-valprint.c
<item>add_local_symbols()  :  tracepoint.c
<item>async_request_quit()  :  event-top.c
<item>backtrace_command_1()  :  stack.c
<item>c_printstr()  :  c-lang.c
<item>c_type_print_base()  :  c-typeprint.c
<item>c_type_print_varspec_prefix()  :  c-typeprint.c
<item>c_type_print_varspec_suffix()  :  c-typeprint.c
<item>c_val_print()  :  c-valprint.c
<item>classes_info()  :  objc-lang.c
<item>coff_symtab_read()  :  coffread.c
<item>cp_print_class_member()  :  cp-valprint.c
<item>decode_line_2()  :  linespec.c
<item>do_examine()  :  printcmd.c
<item>dump_insns()  :  disasm.c
<item>encode_actions()  :  tracepoint.c
<item>f_printstr()  :  f-lang.c
<item>f_type_print_base()  :  f-typeprint.c
<item>f_type_print_varspec_prefix()  :  f-typeprint.c
<item>f_type_print_varspec_suffix()  :  f-typeprint.c
<item>find_methods()  :  objc-lang.c
<item>getpkt_sane()  :  remote.c
<item>java_type_print_base()  :  jv-typeprint.c
<item>m2_printstr()  :  m2-lang.c
<item>make_symbol_completion_list()  :  symtab.c
<item>make_symbol_overload_list_qualified()  :  cp-support.c
<item>map_args_over_tracepoints()  :  tracepoint.c
<item>objc_printstr()  :  objc-lang.c
<item>pascal_object_print_class_member()  :  p-valprint.c
<item>pascal_printstr()  :  p-lang.c
<item>pascal_type_print_base()  :  p-typeprint.c
<item>pascal_type_print_varspec_prefix()  :  p-typeprint.c
<item>pascal_type_print_varspec_suffix()  :  p-typeprint.c
<item>pascal_val_print()  :  p-valprint.c
<item>print_enum_type()  :  ada-typeprint.c
<item>print_frame()  :  stack.c
<item>print_frame_args()  :  stack.c
<item>print_frame_nameless_args()  :  stack.c
<item>print_object_command()  :  objc-lang.c
<item>print_record_field_types()  :  ada-typeprint.c
<item>printf_command()  :  printcmd.c
<item>printstr()  :  ada-valprint.c
<item>read_dbx_symtab()  :  dbxread.c
<item>read_ofile_symtab()  :  dbxread.c
<item>read_ofile_symtab_from_oso()  :  dbxread.c
<item>remote_get_noisy_reply()  :  tracepoint.c
<item>request_quit()  :  utils.c
<item>resume()  :  infrun.c
<item>scan_file_globals()  :  stabsread.c
<item>scope_info()  :  tracepoint.c
<item>search_symbols()  :  symtab.c
<item>selectors_info()  :  objc-lang.c
<item>signals_info()  :  infrun.c
<item>stringify_collection_list()  :  tracepoint.c
<item>symtab_symbol_info()  :  symtab.c
<item>target_read()  :  target/target.c
<item>target_write_with_progress()  :  target/target.c
<item>trace_dump_command()  :  tracepoint.c
<item>trace_start_command()  :  tracepoint.c
<item>tracepoint_save_command()  :  tracepoint.c
<item>val_print()  :  valprint.c
<item>val_print_string()  :  valprint.c
<item>validate_actionline()  :  tracepoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_target  :  target/target.c
<item>job_control  :  utils.c
</itemize>
</descrip>

<sect1>Global Function re_comp()

<p><tt>const char* re_comp ( const char* str )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>__builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk(), regcomp(), regfree()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>classes_info()  :  objc-lang.c
<item>current_exception_should_stop()  :  breakpoint.c
<item>forward_search_command()  :  source.c
<item>maintenance_info_psymtabs()  :  symmisc.c
<item>maintenance_info_symtabs()  :  symmisc.c
<item>reverse_search_command()  :  source.c
<item>search_symbols()  :  symtab.c
<item>selectors_info()  :  objc-lang.c
<item>solib_add()  :  solib.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>rebuf  :  utils.c
<item>rebuf_needs_freeing  :  utils.c
<item>regex_fmt  :  utils.c
</itemize>
</descrip>

<sect1>Global Function re_exec()

<p><tt>int re_exec ( const char* str )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>__builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk(), regexec()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>classes_info()  :  objc-lang.c
<item>current_exception_should_stop()  :  breakpoint.c
<item>forward_search_command()  :  source.c
<item>maintenance_info_psymtabs()  :  symmisc.c
<item>maintenance_info_symtabs()  :  symmisc.c
<item>reverse_search_command()  :  source.c
<item>search_symbols()  :  symtab.c
<item>selectors_info()  :  objc-lang.c
<item>solib_add()  :  solib.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>rebuf  :  utils.c
</itemize>
</descrip>

<sect1>Global Function re_search_oneshot()

<p><tt>int re_search_oneshot ( regex_t* patbuf, const char* str, int size, int start, int range, void* regs )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>__builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk(), regexec()
</itemize>
</descrip>

<sect1>Global Function re_set_syntax()

<p><tt>int re_set_syntax ( int newflags )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Called by:</tag>
<itemize>
<item>_initialize_source()  :  source.c
<item>current_exception_should_stop()  :  breakpoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>regex_fmt  :  utils.c
</itemize>
</descrip>

<sect1>Global Function reinitialize_more_filter()

<p><tt>void reinitialize_more_filter ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Called by:</tag>
<itemize>
<item>command_handler()  :  event-top.c
<item>command_loop()  :  top.c
<item>prompt_for_continue()  :  utils.c
<item>simplified_command_loop()  :  top.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>chars_printed  :  utils.c
<item>lines_printed  :  utils.c
</itemize>
</descrip>

<sect1>Global Function request_quit()

<p><tt>void request_quit ( int signo )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>quit()  :  utils.c
<item>signal()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>request_quit()  :  utils.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>request_quit()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>immediate_quit  :  utils.c
<item>quit_flag  :  utils.c
</itemize>
</descrip>

<sect1>Global Function restore_cleanups()

<p><tt>void restore_cleanups ( struct cleanup* chain )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>restore_my_cleanups()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>cleanup_chain  :  utils.c
</itemize>
</descrip>

<sect1>Global Function restore_file_rlimit()

<p><tt>void restore_file_rlimit ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>getrlimit(), setrlimit()
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>orig_file_rlimit  :  utils.c
</itemize>
</descrip>

<sect1>Global Function restore_final_cleanups()

<p><tt>void restore_final_cleanups ( struct cleanup* chain )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>restore_my_cleanups()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>final_cleanup_chain  :  utils.c
</itemize>
</descrip>

<sect1>Global Function restore_my_cleanups()

<p><tt>void restore_my_cleanups ( struct cleanup** pmy_chain, struct cleanup* chain )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Called by:</tag>
<itemize>
<item>restore_cleanups()  :  utils.c
<item>restore_final_cleanups()  :  utils.c
</itemize>
</descrip>

<sect1>Global Function safe_strerror()

<p><tt>char* safe_strerror ( int errnum )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xsnprintf()  :  utils.c
<item>strerror()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>add_dsym_command()  :  symfile.c
<item>delete_breakpoint()  :  breakpoint.c
<item>hardwire_raw()  :  ser-unix.c
<item>init_history()  :  top.c
<item>insert_bp_location()  :  breakpoint.c
<item>memory_error()  :  corefile.c
<item>open_bfd_from_oso()  :  dbxread.c
<item>perror_with_name()  :  utils.c
<item>print_sys_errmsg()  :  utils.c
<item>reopen_exec_file()  :  corefile.c
<item>save_breakpoints_command()  :  breakpoint.c
<item>serial_logchar()  :  serial.c
<item>terminal_inferior()  :  inflow.c
<item>terminal_ours_1()  :  inflow.c
<item>tracepoint_save_command()  :  tracepoint.c
<item>unlimit_file_rlimit()  :  utils.c
<item>val_print_string()  :  valprint.c
<item>value_binop()  :  valarith.c
</itemize>
</descrip>

<sect1>Global Function save_cleanups()

<p><tt>struct cleanup* save_cleanups ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>save_my_cleanups()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>cleanup_chain  :  utils.c
</itemize>
</descrip>

<sect1>Global Function save_final_cleanups()

<p><tt>struct cleanup* save_final_cleanups ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>save_my_cleanups()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>final_cleanup_chain  :  utils.c
</itemize>
</descrip>

<sect1>Global Function save_my_cleanups()

<p><tt>struct cleanup* save_my_cleanups ( struct cleanup** pmy_chain )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Called by:</tag>
<itemize>
<item>save_cleanups()  :  utils.c
<item>save_final_cleanups()  :  utils.c
</itemize>
</descrip>

<sect1>Global Function savestring()

<p><tt>char* savestring ( const char* ptr, size_t size )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xmalloc()  :  utils.c
<item>__builtin___memcpy_chk(), __builtin_object_size(), __inline_memcpy_chk()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>_initialize_language()  :  language.c
<item>add_new_header_file()  :  dbxread.c
<item>add_path()  :  source.c
<item>attach_command()  :  infcmd.c
<item>break_command_2()  :  breakpoint.c
<item>breakpoint_re_set_one()  :  breakpoint.c
<item>c_make_name_of_child()  :  varobj.c
<item>coff_start_symtab()  :  coffread.c
<item>command_line_handler()  :  event-top.c
<item>complete_symtab()  :  coffread.c
<item>condition_command_1()  :  breakpoint.c
<item>cp_add_using()  :  cp-namespace.c
<item>cplus_make_name_of_child()  :  varobj.c
<item>create_breakpoints()  :  breakpoint.c
<item>create_exception_catchpoint()  :  breakpoint.c
<item>create_exec_event_catchpoint()  :  breakpoint.c
<item>create_fork_vfork_event_catchpoint()  :  breakpoint.c
<item>decode_line_2()  :  linespec.c
<item>handle_inferior_event()  :  infrun.c
<item>init_history()  :  top.c
<item>init_main()  :  top.c
<item>parse_breakpoint_sals()  :  breakpoint.c
<item>parse_frame_specification_1()  :  stack.c
<item>patch_subfile_names()  :  buildsym.c
<item>pop_prompt()  :  event-top.c
<item>push_prompt()  :  event-top.c
<item>read_member_functions()  :  stabsread.c
<item>record_debugformat()  :  buildsym.c
<item>record_producer()  :  buildsym.c
<item>set_async_prompt()  :  event-top.c
<item>set_demangling_command()  :  demangle.c
<item>set_demangling_style()  :  demangle.c
<item>set_environment_command()  :  infcmd.c
<item>set_gnutarget()  :  corefile.c
<item>set_inferior_io_terminal()  :  infcmd.c
<item>set_language_command()  :  language.c
<item>set_prompt()  :  top.c
<item>set_raw_breakpoint()  :  breakpoint.c
<item>set_raw_tracepoint()  :  tracepoint.c
<item>solib_load_unload_1()  :  breakpoint.c
<item>start_subfile()  :  buildsym.c
<item>stringify_collection_list()  :  tracepoint.c
<item>trace_command()  :  tracepoint.c
<item>value_of_root()  :  varobj.c
<item>varobj_create()  :  varobj.c
<item>varobj_get_type_internal()  :  varobj.c
<item>watch_command_1()  :  breakpoint.c
</itemize>
</descrip>

<sect1>Global Function set_screen_size()

<p><tt>void set_screen_size ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>rl_get_screen_size(), rl_set_screen_size()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>init_page_info()  :  utils.c
<item>initialize_utils()  :  utils.c
<item>set_height_command()  :  utils.c
<item>set_width_command()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>chars_per_line  :  utils.c
<item>lines_per_page  :  utils.c
</itemize>
</descrip>

<sect1>Global Function set_width()

<p><tt>void set_width ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xmalloc()  :  utils.c
<item>xrealloc()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>init_page_info()  :  utils.c
<item>initialize_utils()  :  utils.c
<item>set_width_command()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>chars_per_line  :  utils.c
<item>wrap_buffer  :  utils.c
<item>wrap_pointer  :  utils.c
</itemize>
</descrip>

<sect1>Global Function strcmp_iw()

<p><tt>int strcmp_iw ( const char* string1, const char* string2 )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>isspace()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>check_field_in()  :  valops.c
<item>find_method_list()  :  valops.c
<item>find_methods()  :  linespec.c
<item>gnu_v3_update_exception_catchpoints()  :  breakpoint.c
<item>iter_name_first_hashed()  :  dictionary.c
<item>iter_name_next_hashed()  :  dictionary.c
<item>iter_name_next_linear()  :  dictionary.c
<item>lookup_minimal_symbol()  :  minsyms.c
<item>lookup_minimal_symbol_all()  :  minsyms.c
<item>lookup_partial_symbol()  :  symtab.c
<item>lookup_struct_elt_type()  :  gdbtypes.c
<item>search_struct_field()  :  valops.c
<item>search_struct_method()  :  valops.c
<item>value_objc_target_type()  :  objc-lang.c
</itemize>
</descrip>

<sect1>Global Function strcmp_iw_ordered()

<p><tt>int strcmp_iw_ordered ( const char* string1, const char* string2 )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>isspace()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>compare_psymbols()  :  symfile.c
<item>lookup_partial_symbol()  :  symtab.c
</itemize>
</descrip>

<sect1>Global Function streq()

<p><tt>int streq ( const char* lhs, const char* rhs )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>strcmp()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_ada_language()  :  ada-lang.c
<item>create_demangled_names_hash()  :  symtab.c
</itemize>
</descrip>

<sect1>Global Function string_to_core_addr()

<p><tt>CORE_ADDR string_to_core_addr ( const char* my_string )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
<item>isdigit(), tolower()
</itemize>
</descrip>

<sect1>Global Function strlen_paddr()

<p><tt>int strlen_paddr ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>gdbarch_addr_bit()  :  gdbarch.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
</itemize>
</descrip>

<sect1>Global Function subset_compare()

<p><tt>int subset_compare ( char* string_to_compare, const char* template_string )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>strlen(), strncmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>backtrace_command()  :  stack.c
</itemize>
</descrip>

<sect1>Global Function unlimit_file_rlimit()

<p><tt>void unlimit_file_rlimit ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>safe_strerror()  :  utils.c
<item>warning()  :  utils.c
<item>__error(), bfd_set_cache_max_open(), getrlimit(), setrlimit()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>captured_main()  :  main.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>orig_file_rlimit  :  utils.c
</itemize>
</descrip>

<sect1>Global Function verror()

<p><tt>void verror ( const char* string, va_list args )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>throw_verror()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>range_error()  :  language.c
<item>type_error()  :  language.c
</itemize>
</descrip>

<sect1>Global Function vfatal()

<p><tt>void vfatal ( const char* string, va_list args )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>throw_vfatal()
</itemize>
</descrip>

<sect1>Global Function vfprintf_filtered()

<p><tt>void vfprintf_filtered ( struct ui_file* stream, const char* format, va_list args )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>vfprintf_maybe_filtered()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>cli_field_fmt()  :  cli-out.c
<item>cli_text_fmt()  :  cli-out.c
<item>defaulted_query()  :  utils.c
<item>fprintf_disasm()  :  disasm.c
<item>fprintf_filtered()  :  utils.c
<item>fprintfi_filtered()  :  utils.c
<item>out_field_fmt()  :  cli-out.c
<item>printf_filtered()  :  utils.c
<item>printfi_filtered()  :  utils.c
<item>query()  :  utils.c
<item>range_error()  :  language.c
<item>type_error()  :  language.c
</itemize>
</descrip>

<sect1>Global Function vfprintf_unfiltered()

<p><tt>void vfprintf_unfiltered ( struct ui_file* stream, const char* format, va_list args )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>do_cleanups()  :  utils.c
<item>fputs_unfiltered()  :  ui-file.c
<item>make_cleanup()  :  utils.c
<item>xstrvprintf()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>cli_message()  :  cli-out.c
<item>cplusplus_error()  :  linespec.c
<item>fprintf_unfiltered()  :  utils.c
<item>parser_fprintf()  :  parse.c
<item>printf_unfiltered()  :  utils.c
<item>vprintf_unfiltered()  :  utils.c
<item>vwarning()  :  utils.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>xfree()  :  utils.c
</itemize>
</descrip>

<sect1>Global Function vprintf_filtered()

<p><tt>void vprintf_filtered ( const char* format, va_list args )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>vfprintf_maybe_filtered()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdout  :  main.c
</itemize>
</descrip>

<sect1>Global Function vprintf_unfiltered()

<p><tt>void vprintf_unfiltered ( const char* format, va_list args )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>vfprintf_unfiltered()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdout  :  main.c
</itemize>
</descrip>

<sect1>Global Function vwarning()

<p><tt>void vwarning ( const char* string, va_list args )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fprintf_unfiltered()  :  utils.c
<item>fputs_unfiltered()  :  ui-file.c
<item>gdb_flush()  :  ui-file.c
<item>vfprintf_unfiltered()  :  utils.c
<item>wrap_here()  :  utils.c
<item>__builtin_va_end()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>lim_warning()  :  ada-lang.c
<item>range_error()  :  language.c
<item>type_error()  :  language.c
<item>vcomplaint()  :  complaints.c
<item>warning()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_target  :  target/target.c
<item>deprecated_warning_hook  :  top.c
<item>gdb_stderr  :  main.c
<item>gdb_stdout  :  main.c
<item>warning_pre_print  :  utils.c
</itemize>
</descrip>

<sect1>Global Function warning()

<p><tt>void warning ( const char* string, ... )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>vwarning()  :  utils.c
<item>__builtin_va_end(), __builtin_va_start()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>_initialize_symfile()  :  symfile.c
<item>ada_create_fundamental_type()  :  ada-lang.c
<item>ada_print_scalar()  :  ada-valprint.c
<item>ada_template_to_fixed_record_type_1()  :  ada-lang.c
<item>ada_value_assign()  :  ada-lang.c
<item>ada_value_primitive_packed_val()  :  ada-lang.c
<item>add_dsym_command()  :  symfile.c
<item>add_kext_command()  :  symfile.c
<item>add_local_symbols()  :  tracepoint.c
<item>add_path()  :  source.c
<item>add_symbol_file_command()  :  symfile.c
<item>add_vsyscall_page()  :  symfile-mem.c
<item>append_psymbols_as_msymbols()  :  symfile.c
<item>block_lookup()  :  ada-exp.c
<item>bpstat_stop_status()  :  breakpoint.c
<item>break_command_2()  :  breakpoint.c
<item>breakpoint_adjustment_warning()  :  breakpoint.c
<item>breakpoint_init_inferior()  :  breakpoint.c
<item>breakpoint_re_set_one()  :  breakpoint.c
<item>c_create_fundamental_type()  :  c-lang.c
<item>c_type_of_child()  :  varobj.c
<item>c_value_of_child()  :  varobj.c
<item>can_use_hardware_watchpoint()  :  breakpoint.c
<item>catch_exception_command_1()  :  breakpoint.c
<item>catch_load_command_1()  :  breakpoint.c
<item>catch_unload_command_1()  :  breakpoint.c
<item>change_annotation_level()  :  event-top.c
<item>check_bfd_for_matching_uuid()  :  symfile.c
<item>check_safe_call()  :  valops.c
<item>cleanup_undefined_arrays()  :  gdbtypes.c
<item>coffstab_build_psymtabs()  :  dbxread.c
<item>compare_sections_command()  :  remote.c
<item>compare_translation_final_addr()  :  dwarf2read.c
<item>convert_actual()  :  ada-lang.c
<item>convert_typed_floating()  :  doublest.c
<item>cp_lookup_rtti_type()  :  cp-support.c
<item>cp_print_value()  :  cp-valprint.c
<item>cp_print_value_fields()  :  cp-valprint.c
<item>cplus_path_expr_of_child()  :  varobj.c
<item>create_breakpoints()  :  breakpoint.c
<item>current_exception_should_stop()  :  breakpoint.c
<item>dbx_lookup_type()  :  stabsread.c
<item>dbx_psymtab_to_symtab_1()  :  dbxread.c
<item>decode_objc()  :  linespec.c
<item>deprecated_read_memory_nobpt()  :  breakpoint.c
<item>disable_breakpoints_in_shlibs()  :  breakpoint.c
<item>disable_breakpoints_in_unloaded_shlib()  :  breakpoint.c
<item>disable_command()  :  breakpoint.c
<item>dump_insns()  :  disasm.c
<item>dump_msymbols()  :  symmisc.c
<item>dwarf2_debug_map_psymtab_to_symtab()  :  dwarf2read.c
<item>dwarf2_psymtab_to_symtab()  :  dwarf2read.c
<item>dwarf2_scan_inlined_section_for_psymbols()  :  dwarf2read.c
<item>dwarf2_scan_pubtype_for_psymbols()  :  dwarf2read.c
<item>dwarf_psymtab_to_symtab()  :  dwarfread.c
<item>elfstab_build_psymtabs()  :  dbxread.c
<item>enable_command()  :  breakpoint.c
<item>evaluate_subexp_standard()  :  eval.c
<item>f_create_fundamental_type()  :  f-lang.c
<item>field_alignment()  :  ada-lang.c
<item>fill_symbuf()  :  dbxread.c
<item>find_implementation_from_class()  :  objc-lang.c
<item>find_kext_files_by_symfile()  :  symfile.c
<item>find_line_symtab()  :  symtab.c
<item>find_methods()  :  objc-lang.c
<item>find_objfile()  :  symfile.c
<item>find_overload_match()  :  valops.c
<item>find_pc_sect_line()  :  symtab.c
<item>find_pc_sect_symtab()  :  symtab.c
<item>find_source_lines()  :  source.c
<item>free_named_symtabs()  :  symfile.c
<item>free_objfile_internal()  :  objfiles.c
<item>free_so()  :  solib.c
<item>gdbarch_init_osabi()  :  osabi.c
<item>generic_observer_detach()  :  observer.c
<item>get_offsets()  :  remote.c
<item>gnuv3_rtti_type()  :  gnu-v3-abi.c
<item>hand_function_call()  :  infcall.c
<item>handle_inferior_event()  :  infrun.c
<item>iconv_convert()  :  charset.c
<item>inferior_event_handler()  :  inf-loop.c
<item>info_threads_command()  :  thread.c
<item>init_history()  :  top.c
<item>insert_bp_location()  :  breakpoint.c
<item>insert_breakpoints()  :  breakpoint.c
<item>lookup_minimal_symbol()  :  minsyms.c
<item>lookup_minimal_symbol_all()  :  minsyms.c
<item>lookup_minimal_symbol_by_pc_section_from_objfile()  :  minsyms.c
<item>lookup_psymbol_from_namestring()  :  dbxread.c
<item>lookup_symbol_aux_psymtabs()  :  symtab.c
<item>m2_create_fundamental_type()  :  m2-lang.c
<item>map_breakpoint_numbers()  :  breakpoint.c
<item>modify_field()  :  value.c
<item>new_objc_runtime_class_getClass()  :  objc-lang.c
<item>objc_check_safe_to_run_all_threads()  :  objc-lang.c
<item>objc_create_fundamental_type()  :  objc-lang.c
<item>objc_fixup_ivar_offset()  :  objc-lang.c
<item>objc_target_type_from_object()  :  objc-lang.c
<item>objfile_delete_from_ordered_sections()  :  objfiles.c
<item>objfile_relocate()  :  objfiles.c
<item>open_bfd_from_oso()  :  dbxread.c
<item>oso_scan_partial_symtab()  :  dbxread.c
<item>pascal_create_fundamental_type()  :  p-lang.c
<item>pascal_object_print_value()  :  p-valprint.c
<item>pascal_object_print_value_fields()  :  p-valprint.c
<item>path_expr_of_root()  :  varobj.c
<item>prim_record_minimal_symbol_and_info()  :  minsyms.c
<item>print_object_command()  :  objc-lang.c
<item>psymtab_to_symtab_1()  :  dwarfread.c
<item>rate_to_code()  :  ser-unix.c
<item>read_actions()  :  tracepoint.c
<item>read_dbx_symtab()  :  dbxread.c
<item>read_objc_object()  :  objc-lang.c
<item>read_ofile_symtab_from_oso()  :  dbxread.c
<item>read_oso_nlists()  :  dbxread.c
<item>read_target_long_array()  :  symfile.c
<item>read_type()  :  stabsread.c
<item>remote_async_wait()  :  remote.c
<item>remote_fetch_registers()  :  remote.c
<item>remote_get_threadlist()  :  remote.c
<item>remote_insert_watchpoint()  :  remote.c
<item>remote_macosx_create_inferior()  :  remote.c
<item>remote_remove_watchpoint()  :  remote.c
<item>remote_serial_open()  :  remote.c
<item>remote_threadlist_iterator()  :  remote.c
<item>remote_unpack_thread_info_response()  :  remote.c
<item>remote_wait()  :  remote.c
<item>remove_breakpoint()  :  breakpoint.c
<item>remove_breakpoints()  :  breakpoint.c
<item>reopen_exec_file()  :  corefile.c
<item>reread_symbols()  :  symfile.c
<item>reread_symbols_command()  :  symfile.c
<item>reread_symbols_for_objfile()  :  symfile.c
<item>restore_selected_frame()  :  infrun.c
<item>scan_partial_inlined_function_symbols()  :  dwarf2read.c
<item>set_architecture_from_string()  :  arch-utils.c
<item>set_case_command()  :  language.c
<item>set_demangling_command()  :  demangle.c
<item>set_pathname_substitution()  :  source.c
<item>set_range_command()  :  language.c
<item>set_type_command()  :  language.c
<item>simple_overlay_update_1()  :  symfile.c
<item>solib_load_unload_1()  :  breakpoint.c
<item>symbol_file_add_with_addrs_or_offsets_using_objfile()  :  symfile.c
<item>syms_from_objfile()  :  symfile.c
<item>terminal_inferior()  :  inflow.c
<item>terminal_ours_1()  :  inflow.c
<item>thread_apply_command()  :  thread.c
<item>trace_dump_command()  :  tracepoint.c
<item>tracepoint_save_command()  :  tracepoint.c
<item>uninstall_variable()  :  varobj.c
<item>unlimit_file_rlimit()  :  utils.c
<item>validate_actionline()  :  tracepoint.c
<item>validate_files()  :  corefile.c
<item>value_assign()  :  valops.c
<item>value_cast_1()  :  valops.c
<item>value_full_object()  :  valops.c
<item>value_static_field()  :  value.c
<item>value_subscript()  :  valarith.c
<item>varobj_create()  :  varobj.c
<item>varobj_delete()  :  varobj.c
<item>varobj_list()  :  varobj.c
</itemize>
</descrip>

<sect1>Global Function wrap_here()

<p><tt>void wrap_here ( const char* indent )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fputs_unfiltered()  :  ui-file.c
<item>internal_error()  :  utils.c
<item>puts_filtered()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>c_type_print_args()  :  c-typeprint.c
<item>c_type_print_base()  :  c-typeprint.c
<item>c_type_print_varspec_suffix()  :  c-typeprint.c
<item>captured_main()  :  main.c
<item>cli_wrap_hint()  :  cli-out.c
<item>command_line_handler()  :  event-top.c
<item>command_line_input()  :  top.c
<item>cp_print_value_fields()  :  cp-valprint.c
<item>dbx_psymtab_to_symtab_1()  :  dbxread.c
<item>defaulted_query()  :  utils.c
<item>dump_psymtab()  :  symmisc.c
<item>dwarf2_debug_map_psymtab_to_symtab()  :  dwarf2read.c
<item>dwarf2_kext_psymtab_to_symtab()  :  dwarf2read.c
<item>f_type_print_base()  :  f-typeprint.c
<item>fputs_maybe_filtered()  :  utils.c
<item>frame_info()  :  stack.c
<item>java_print_value_fields()  :  jv-valprint.c
<item>java_type_print_base()  :  jv-typeprint.c
<item>java_value_print()  :  jv-valprint.c
<item>line_info()  :  source.c
<item>maintenance_info_psymtabs()  :  symmisc.c
<item>maintenance_info_sections()  :  maint.c
<item>maintenance_info_symtabs()  :  symmisc.c
<item>output_command()  :  printcmd.c
<item>output_source_filename()  :  symtab.c
<item>pascal_object_print_value_fields()  :  p-valprint.c
<item>pascal_print_func_args()  :  p-typeprint.c
<item>pascal_type_print_base()  :  p-typeprint.c
<item>print_array_type()  :  ada-typeprint.c
<item>print_enum_type()  :  ada-typeprint.c
<item>print_field_values()  :  ada-valprint.c
<item>print_formatted()  :  printcmd.c
<item>print_func_type()  :  ada-typeprint.c
<item>psymtab_to_symtab_1()  :  mdebugread.c
<item>query()  :  utils.c
<item>read_actions()  :  tracepoint.c
<item>read_pe_exported_syms()  :  coff-pe-read.c
<item>symbol_file_add_with_addrs_or_offsets_using_objfile()  :  symfile.c
<item>trace_find_line_command()  :  tracepoint.c
<item>tracepoints_info()  :  tracepoint.c
<item>val_print_array_elements()  :  valprint.c
<item>val_print_packed_array_elements()  :  ada-valprint.c
<item>vcomplaint()  :  complaints.c
<item>vwarning()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>chars_per_line  :  utils.c
<item>chars_printed  :  utils.c
<item>gdb_stdout  :  main.c
<item>wrap_buffer  :  utils.c
<item>wrap_column  :  utils.c
<item>wrap_indent  :  utils.c
<item>wrap_pointer  :  utils.c
</itemize>
</descrip>

<sect1>Global Function xasprintf()

<p><tt>void xasprintf ( char** ret, const char* format, ... )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xstrvprintf()  :  utils.c
<item>__builtin_va_end(), __builtin_va_start()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>add_vsyscall_page()  :  symfile-mem.c
<item>minsym_found()  :  linespec.c
<item>minsyms_found()  :  linespec.c
<item>set_cp_abi_as_auto_default()  :  cp-abi.c
</itemize>
</descrip>

<sect1>Global Function xcalloc()

<p><tt>void* xcalloc ( size_t number, size_t size )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>../include/libiberty.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>nomem()  :  utils.c
<item>calloc()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>_initialize_demangler()  :  demangle.c
<item>break_command_2()  :  breakpoint.c
<item>build_dummy_objfile()  :  dwarf2read.c
<item>dict_create_hashed_expandable()  :  dictionary.c
<item>do_captured_breakpoint()  :  breakpoint.c
<item>equivalence_table_initialize()  :  symmisc.c
<item>expand_hashtable()  :  dictionary.c
<item>find_equivalent_msymbol()  :  symmisc.c
<item>find_method()  :  linespec.c
<item>new_dwarf_expr_context()  :  dwarf2expr.c
<item>objfile_alloc_data()  :  objfiles.c
<item>parse_breakpoint_sals()  :  breakpoint.c
<item>print_bcache_statistics()  :  bcache.c
<item>regcache_xmalloc()  :  regcache.c
<item>xzalloc()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_ada_language()  :  ada-lang.c
<item>create_demangled_names_hash()  :  symtab.c
</itemize>
</descrip>

<sect1>Global Function xfree()

<p><tt>void xfree ( void* ptr )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>../include/libiberty.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>free()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>_ada_parse()  :  ada-exp.c
<item>add_kext_command()  :  symfile.c
<item>add_matching_methods()  :  linespec.c
<item>add_msglist()  :  objc-lang.c
<item>add_partial_symbol()  :  dwarf2read.c
<item>add_path()  :  source.c
<item>add_pe_exported_sym()  :  coff-pe-read.c
<item>adjust_prompts_for_optimized_code()  :  event-top.c
<item>ax_reqs()  :  ax-general.c
<item>backtrace_command()  :  stack.c
<item>bpstat_clear()  :  breakpoint.c
<item>bpstat_get_triggered_catchpoints()  :  breakpoint.c
<item>break_command_2()  :  breakpoint.c
<item>breakpoint_re_set_one()  :  breakpoint.c
<item>c_parse()  :  c-exp.c
<item>c_type_print_base()  :  c-typeprint.c
<item>c_value_of_root()  :  varobj.c
<item>captured_main()  :  main.c
<item>catch_info()  :  stack.c
<item>check_stub_method()  :  gdbtypes.c
<item>cisco_kod_request()  :  kod-cisco.c
<item>cleanup_oso_data()  :  dbxread.c
<item>clear_displays()  :  printcmd.c
<item>clear_header_list()  :  ui-out.c
<item>clear_internalvars()  :  value.c
<item>clear_new_breakpoint_list()  :  breakpoint.c
<item>clear_restrict_list()  :  objfiles.c
<item>clear_value_history()  :  value.c
<item>coff_symfile_finish()  :  coffread.c
<item>coff_symtab_read()  :  coffread.c
<item>command_line_handler()  :  event-top.c
<item>command_line_input()  :  top.c
<item>complete_symtab()  :  coffread.c
<item>condition_command_1()  :  breakpoint.c
<item>convert_oso_map_to_final_map()  :  dwarf2read.c
<item>cp_canonicalize_string()  :  cp-support.c
<item>cp_class_name_from_physname()  :  cp-support.c
<item>cp_comp_to_string()  :  cp-name-parser.c
<item>cp_copy_usings()  :  cp-namespace.c
<item>cp_demangled_name_to_comp()  :  cp-name-parser.c
<item>cp_func_name()  :  cp-support.c
<item>cp_print_class_method()  :  cp-valprint.c
<item>cpname_parse()  :  cp-name-parser.c
<item>cppop()  :  varobj.c
<item>create_all_comp_units()  :  dwarf2read.c
<item>create_breakpoints()  :  breakpoint.c
<item>create_kext_addr_map()  :  dwarf2read.c
<item>dbx_symfile_finish()  :  dbxread.c
<item>decode_line_1()  :  linespec.c
<item>delete_async_signal_handler()  :  event-loop.c
<item>delete_breakpoint()  :  breakpoint.c
<item>delete_file_handler()  :  event-loop.c
<item>delete_mem_region()  :  memattr.c
<item>delete_timer()  :  event-loop.c
<item>delete_variable_1()  :  varobj.c
<item>determine_prefix()  :  dwarf2read.c
<item>directory_command()  :  source.c
<item>discard_all_continuations()  :  utils.c
<item>discard_all_intermediate_continuations()  :  utils.c
<item>discard_inferior_status()  :  infrun.c
<item>discard_my_cleanups()  :  utils.c
<item>do_all_continuations()  :  utils.c
<item>do_all_intermediate_continuations()  :  utils.c
<item>do_cleanup_end()  :  ui-out.c
<item>do_close_cleanup()  :  utils.c
<item>do_discard_minimal_symbols_cleanup()  :  minsyms.c
<item>do_my_cleanups()  :  utils.c
<item>do_restore_current_thread_cleanup()  :  thread.c
<item>do_serial_close()  :  serial.c
<item>dummy_frame_push()  :  dummy-frame.c
<item>dump_insns()  :  disasm.c
<item>dwarf2_frame_state_free()  :  dwarf2-frame.c
<item>dwarf2_frame_state_free_regs()  :  dwarf2-frame.c
<item>dwarf2_read_abbrevs()  :  dwarf2read.c
<item>dwarf2_release_queue()  :  dwarf2read.c
<item>dwarf2_start_subfile()  :  dwarf2read.c
<item>dwarf_build_psymtabs()  :  dwarfread.c
<item>elf_symfile_finish()  :  elfread.c
<item>end_arglist()  :  parse.c
<item>end_msglist()  :  objc-lang.c
<item>end_oso_pst_list()  :  dbxread.c
<item>end_stabs()  :  stabsread.c
<item>end_symtab()  :  buildsym.c
<item>equivalence_table_delete()  :  symmisc.c
<item>execute_cfa_program()  :  dwarf2-frame.c
<item>expand_hashtable()  :  dictionary.c
<item>f_parse()  :  f-exp.c
<item>filename_completer()  :  completer.c
<item>fill_symbuf()  :  dbxread.c
<item>find_and_open_source()  :  source.c
<item>find_equivalent_msymbol()  :  symmisc.c
<item>find_function_names_and_address_ranges()  :  inlining.c
<item>find_kext_files_by_bundle()  :  symfile.c
<item>find_method()  :  linespec.c
<item>find_oload_champ()  :  valops.c
<item>find_oload_champ_namespace_loop()  :  valops.c
<item>find_pc_sect_line()  :  symtab.c
<item>finish_global_stabs()  :  stabsread.c
<item>finished_macro_expansion()  :  c-lang.c
<item>fixup_section()  :  symtab.c
<item>forget_cached_source_info()  :  source.c
<item>fprintf_symbol_filtered()  :  utils.c
<item>free_actions()  :  tracepoint.c
<item>free_actions_list()  :  tracepoint.c
<item>free_agent_expr()  :  ax-general.c
<item>free_bincl_list()  :  dbxread.c
<item>free_buffer()  :  macroexp.c
<item>free_current_contents()  :  utils.c
<item>free_die_list()  :  dwarf2read.c
<item>free_display()  :  printcmd.c
<item>free_dwarf_expr_context()  :  dwarf2expr.c
<item>free_elfinfo()  :  elfread.c
<item>free_environ()  :  environ.c
<item>free_funcalls()  :  parse.c
<item>free_hashed_expandable()  :  dictionary.c
<item>free_header_files()  :  dbxread.c
<item>free_line_header()  :  dwarf2read.c
<item>free_linear_expandable()  :  dictionary.c
<item>free_linetab()  :  coffread.c
<item>free_objfile()  :  objfiles.c
<item>free_objfile_internal()  :  objfiles.c
<item>free_one_comp_unit()  :  dwarf2read.c
<item>free_rb_tree_data()  :  objc-lang.c
<item>free_search_symbols()  :  symtab.c
<item>free_section_addr_info()  :  symfile.c
<item>free_so()  :  solib.c
<item>free_stringtab()  :  coffread.c
<item>free_symtab()  :  symmisc.c
<item>free_symtab_block()  :  symmisc.c
<item>free_thread()  :  thread.c
<item>free_utypes()  :  dwarfread.c
<item>free_uuids_array()  :  utils.c
<item>free_variable()  :  varobj.c
<item>func_command()  :  stack.c
<item>gdb_readline()  :  top.c
<item>gdb_readline2()  :  event-top.c
<item>gdbarch_free()  :  gdbarch.c
<item>get_binary_file_uuids()  :  utils.c
<item>get_inferior_args()  :  infcmd.c
<item>get_kext_bundle_ident_and_binary_path()  :  symfile.c
<item>guess_structure_name()  :  dwarf2read.c
<item>hand_function_call()  :  infcall.c
<item>handle_inferior_event()  :  infrun.c
<item>handle_timer_event()  :  event-loop.c
<item>init_psymbol_list()  :  symfile.c
<item>initialize_protocol_log()  :  remote.c
<item>inlined_function_add_function_names()  :  inlining.c
<item>inlined_subroutine_adjust_position_for_breakpoint()  :  inlining.c
<item>inlined_subroutine_free_objfile_call_sites()  :  inlining.c
<item>inlined_subroutine_free_objfile_data()  :  inlining.c
<item>internal_vproblem()  :  utils.c
<item>interp_set()  :  interps.c
<item>interpreter_completer()  :  interps.c
<item>java_class_name_from_physname()  :  jv-lang.c
<item>java_parse()  :  jv-exp.c
<item>java_type_print_base()  :  jv-typeprint.c
<item>jump_command()  :  infcmd.c
<item>kod_set_os()  :  kod.c
<item>line_completion_function()  :  completer.c
<item>line_info()  :  source.c
<item>location_completer()  :  completer.c
<item>lookup_partial_symtab_all()  :  symtab.c
<item>lookup_psymbol_from_namestring()  :  dbxread.c
<item>lookup_symbol()  :  symtab.c
<item>lookup_symbol_all()  :  symtab.c
<item>lookup_symtab_all()  :  symtab.c
<item>m2_parse()  :  m2-exp.c
<item>macro_bcache_free()  :  macrotab.c
<item>macro_free()  :  macrotab.c
<item>macro_start_file()  :  dwarf2read.c
<item>maintenance_demangle()  :  maint.c
<item>maintenance_do_deprecate()  :  maint.c
<item>maintenance_interval_display()  :  maint.c
<item>mangled_name_to_comp()  :  cp-support.c
<item>mem_file_delete()  :  ui-file.c
<item>method_name_from_physname()  :  cp-support.c
<item>n_spaces()  :  utils.c
<item>name_lookup()  :  ada-exp.c
<item>nlm_symfile_finish()  :  nlmread.c
<item>null_free_so()  :  solib-null.c
<item>objc_clear_trampoline_data()  :  objc-lang.c
<item>objc_demangle()  :  objc-lang.c
<item>objc_parse()  :  objc-exp.c
<item>objfile_add_to_ordered_sections()  :  objfiles.c
<item>objfile_clear_hitlist()  :  objfiles.c
<item>objfile_clear_restrict_list()  :  objfiles.c
<item>objfile_delete_from_ordered_sections()  :  objfiles.c
<item>objfile_free_data()  :  objfiles.c
<item>objfile_relocate()  :  objfiles.c
<item>objfile_remove_from_restrict_list()  :  objfiles.c
<item>openp()  :  source.c
<item>oso_statics_pop()  :  dbxread.c
<item>overload_list_add_symbol()  :  cp-support.c
<item>parse_macro_definition()  :  dwarf2read.c
<item>parse_number()  :  f-exp.c
<item>parse_partial_symbols()  :  mdebugread.c
<item>pascal_lex()  :  p-exp.c
<item>pascal_object_print_class_method()  :  p-valprint.c
<item>pascal_parse()  :  p-exp.c
<item>pascal_val_print()  :  p-valprint.c
<item>patch_type()  :  coffread.c
<item>path_command()  :  infcmd.c
<item>pop_current_type()  :  p-exp.c
<item>pop_prompt()  :  event-top.c
<item>pop_subfile()  :  buildsym.c
<item>pop_timer()  :  maint.c
<item>print_bcache_statistics()  :  bcache.c
<item>print_decimal_chars()  :  valprint.c
<item>print_inlined_frames_lite()  :  inlining.c
<item>print_subexp_standard()  :  expprint.c
<item>process_dies()  :  dwarfread.c
<item>process_enumeration_scope()  :  dwarf2read.c
<item>process_event()  :  event-loop.c
<item>process_queue()  :  dwarf2read.c
<item>prompt_for_continue()  :  utils.c
<item>rb_print_tree()  :  dwarf2read.c
<item>read_args()  :  stabsread.c
<item>read_dbx_symtab()  :  dbxread.c
<item>read_member_functions()  :  stabsread.c
<item>read_ofile_symtab()  :  dwarfread.c
<item>read_ofile_symtab_from_oso()  :  dbxread.c
<item>read_oso_nlists()  :  dbxread.c
<item>really_free_pendings()  :  buildsym.c
<item>regcache_xfree()  :  regcache.c
<item>remote_fileio_func_read()  :  remote-fileio.c
<item>remote_fileio_func_write()  :  remote-fileio.c
<item>remove_duplicates()  :  breakpoint.c
<item>remove_params()  :  cp-support.c
<item>replace_operator_with_call()  :  ada-lang.c
<item>report_timer_internal()  :  maint.c
<item>reread_separate_symbols()  :  symfile.c
<item>reread_symbols_for_objfile()  :  symfile.c
<item>reset_child_selector_cache()  :  objc-lang.c
<item>restore_inferior_ptid()  :  infrun.c
<item>restore_inferior_status()  :  infrun.c
<item>run_command_1()  :  infcmd.c
<item>run_no_args_command()  :  infcmd.c
<item>scan_compilation_units()  :  dwarfread.c
<item>select_source_symtab()  :  source.c
<item>serial_open()  :  serial.c
<item>serial_printf()  :  serial.c
<item>set_async_prompt()  :  event-top.c
<item>set_case_str()  :  language.c
<item>set_cp_abi_as_auto_default()  :  cp-abi.c
<item>set_demangling_command()  :  demangle.c
<item>set_demangling_style()  :  demangle.c
<item>set_environment_command()  :  infcmd.c
<item>set_ext_lang_command()  :  symfile.c
<item>set_gnutarget()  :  corefile.c
<item>set_in_environ()  :  environ.c
<item>set_inferior_io_terminal()  :  infcmd.c
<item>set_internalvar()  :  value.c
<item>set_lang_str()  :  language.c
<item>set_main_name()  :  symtab.c
<item>set_range_str()  :  language.c
<item>set_type_str()  :  language.c
<item>simple_free_overlay_table()  :  symfile.c
<item>sort_search_symbols()  :  symtab.c
<item>stdio_file_delete()  :  ui-file.c
<item>struct_type()  :  dwarfread.c
<item>symbol_file_add_with_addrs_or_offsets_using_objfile()  :  symfile.c
<item>symbol_init_demangled_name()  :  symtab.c
<item>symbol_set_names()  :  symtab.c
<item>symfile_bfd_open()  :  symfile.c
<item>target_bfd_xclose()  :  bfd-target.c
<item>tee_file_delete()  :  ui-file.c
<item>terminal_init_inferior_with_pgrp()  :  inflow.c
<item>terminal_ours_1()  :  inflow.c
<item>terminal_save_ours()  :  inflow.c
<item>tracepoint_operation()  :  tracepoint.c
<item>tracepoint_save_command()  :  tracepoint.c
<item>ui_file_delete()  :  ui-file.c
<item>ui_out_delete()  :  ui-out.c
<item>ui_out_stream_delete()  :  ui-out.c
<item>ui_out_table_end()  :  ui-out.c
<item>uninstall_variable()  :  varobj.c
<item>unset_in_environ()  :  environ.c
<item>until_break_command()  :  breakpoint.c
<item>update_exception_catchpoints()  :  breakpoint.c
<item>value_clear_inferior_string_pool()  :  valops.c
<item>value_free()  :  value.c
<item>value_objc_target_type()  :  objc-lang.c
<item>value_of_child()  :  varobj.c
<item>varobj_changelist_pop()  :  varobj.c
<item>varobj_delete_objfiles_vars()  :  varobj.c
<item>varobj_fixup_value()  :  varobj.c
<item>varobj_set_value()  :  varobj.c
<item>varobj_type_is_equal_p()  :  varobj.c
<item>virtual_base_list()  :  gdbtypes.c
<item>vpop()  :  varobj.c
<item>watch_command_1()  :  breakpoint.c
<item>xdb_handle_command()  :  infrun.c
<item>xfree_observer_list_node()  :  observer.c
<item>xfullpath()  :  utils.c
<item>yyxfree()  :  ada-exp.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_ada_exp()  :  ada-exp.c
<item>_initialize_ada_language()  :  ada-lang.c
<item>_initialize_cp_valprint()  :  cp-valprint.c
<item>_initialize_frame()  :  frame.c
<item>ada_lookup_symbol_list()  :  ada-lang.c
<item>ada_parse()  :  ada-exp.c
<item>add_dsym_command()  :  symfile.c
<item>add_path()  :  source.c
<item>add_symbol_file_command()  :  symfile.c
<item>bpstat_stop_status()  :  breakpoint.c
<item>break_command_2()  :  breakpoint.c
<item>breakpoint_re_set_all()  :  breakpoint.c
<item>breakpoint_update()  :  breakpoint.c
<item>build_dummy_cu()  :  dwarf2read.c
<item>build_dummy_objfile()  :  dwarf2read.c
<item>clear_command()  :  breakpoint.c
<item>coff_locate_sections()  :  coffread.c
<item>commands_command()  :  breakpoint.c
<item>compare_sections_command()  :  remote.c
<item>create_demangled_names_hash()  :  symtab.c
<item>create_objfile_using_objfile()  :  objfiles.c
<item>decode_line_2()  :  linespec.c
<item>default_xfer_partial()  :  target/target.c
<item>delete_breakpoint()  :  breakpoint.c
<item>determine_class_name()  :  dwarf2read.c
<item>do_captured_breakpoint()  :  breakpoint.c
<item>dwarf2_add_field()  :  dwarf2read.c
<item>dwarf2_add_member_fn()  :  dwarf2read.c
<item>dwarf2_build_psymtabs_hard()  :  dwarf2read.c
<item>dwarf2_read_abbrevs()  :  dwarf2read.c
<item>dwarf2_start_subfile()  :  dwarf2read.c
<item>dwarf_build_psymtabs()  :  dwarfread.c
<item>dwarf_decode_lines()  :  dwarf2read.c
<item>elf_symtab_read()  :  elfread.c
<item>error_stream()  :  utils.c
<item>find_debug_info_for_pst()  :  dwarf2read.c
<item>find_kext_loadaddrs_from_kernel()  :  symfile.c
<item>find_oload_champ_namespace_loop()  :  valops.c
<item>find_overload_match()  :  valops.c
<item>find_pc_offset()  :  disasm.c
<item>find_source_lines()  :  source.c
<item>flush_cached_frames()  :  frame.c
<item>gdbarch_alloc()  :  gdbarch.c
<item>generic_load()  :  symfile.c
<item>insert_bp_location()  :  breakpoint.c
<item>internal_vproblem()  :  utils.c
<item>invoke_block_command()  :  printcmd.c
<item>java_parse()  :  jv-exp.c
<item>load_comp_unit()  :  dwarf2read.c
<item>load_full_comp_unit()  :  dwarf2read.c
<item>load_progress()  :  symfile.c
<item>load_section_callback()  :  symfile.c
<item>lookup_partial_symtab()  :  symtab.c
<item>lookup_partial_symtab_all()  :  symtab.c
<item>lookup_struct_elt_type()  :  gdbtypes.c
<item>lookup_symtab()  :  symtab.c
<item>lookup_symtab_all()  :  symtab.c
<item>maintenance_print_msymbols()  :  symmisc.c
<item>maintenance_print_psymbols()  :  symmisc.c
<item>maintenance_print_symbols()  :  symmisc.c
<item>make_symbol_overload_list()  :  cp-support.c
<item>maybe_expand()  :  macroexp.c
<item>minsym_found()  :  linespec.c
<item>minsyms_found()  :  linespec.c
<item>nlm_symtab_read()  :  nlmread.c
<item>objc_clear_caches()  :  objc-lang.c
<item>objc_fixup_ivar_offset()  :  objc-lang.c
<item>objc_read_trampoline_region()  :  objc-lang.c
<item>open_bfd_from_oso()  :  dbxread.c
<item>parse_frame_specification_1()  :  stack.c
<item>parse_partial_symbols()  :  mdebugread.c
<item>psymtab_to_symtab_1()  :  mdebugread.c
<item>re_enable_breakpoints_in_shlibs()  :  breakpoint.c
<item>read_alphacoff_dynamic_symtab()  :  mipsread.c
<item>read_baseclasses()  :  stabsread.c
<item>read_dbx_dynamic_symtab()  :  dbxread.c
<item>read_dbx_symtab()  :  dbxread.c
<item>read_func_scope()  :  dwarf2read.c
<item>read_member_functions()  :  stabsread.c
<item>read_namespace()  :  dwarf2read.c
<item>read_ofile_symtab()  :  dwarfread.c
<item>read_pe_exported_syms()  :  coff-pe-read.c
<item>read_struct_fields()  :  stabsread.c
<item>read_structure_type()  :  dwarf2read.c
<item>read_type_die()  :  dwarf2read.c
<item>recursive_dump_type()  :  gdbtypes.c
<item>regcache_dump()  :  regcache.c
<item>remote_macosx_create_inferior()  :  remote.c
<item>remote_vcont_resume()  :  remote.c
<item>remove_symbol_file_command()  :  symfile.c
<item>renaming_is_visible()  :  ada-lang.c
<item>reopen_exec_file()  :  corefile.c
<item>reread_symbols_for_objfile()  :  symfile.c
<item>save_breakpoints_command()  :  breakpoint.c
<item>set_language_command()  :  language.c
<item>set_raw_tracepoint()  :  tracepoint.c
<item>slide_objfile()  :  objfiles.c
<item>solib_load_unload_1()  :  breakpoint.c
<item>solib_map_sections()  :  solib.c
<item>symbol_file_add_from_memory()  :  symfile-mem.c
<item>symbol_file_add_with_addrs_or_offsets_using_objfile()  :  symfile.c
<item>symfile_bfd_open()  :  symfile.c
<item>syms_from_objfile()  :  symfile.c
<item>thread_apply_all_command()  :  thread.c
<item>thread_apply_command()  :  thread.c
<item>trace_find_line_command()  :  tracepoint.c
<item>ui_out_field_stream()  :  ui-out.c
<item>val_print_string()  :  valprint.c
<item>validate_actionline()  :  tracepoint.c
<item>varobj_lookup_struct_elt_type_by_index()  :  varobj.c
<item>vcomplaint()  :  complaints.c
<item>verify_gdbarch()  :  gdbarch.c
<item>vfprintf_maybe_filtered()  :  utils.c
<item>vfprintf_unfiltered()  :  utils.c
</itemize>
</descrip>

<sect1>Global Function xfullpath()

<p><tt>char* xfullpath ( const char* filename )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>gdb_realpath()  :  utils.c
<item>xfree()  :  utils.c
<item>__builtin___strncpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_strncpy_chk(), concat(), lbasename(), strlen(), xstrdup()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>lookup_partial_symtab()  :  symtab.c
<item>lookup_partial_symtab_all()  :  symtab.c
<item>lookup_symtab()  :  symtab.c
<item>lookup_symtab_all()  :  symtab.c
<item>maintenance_print_msymbols()  :  symmisc.c
<item>openp()  :  source.c
</itemize>
</descrip>

<sect1>Global Function xmalloc()

<p><tt>void* xmalloc ( size_t size )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>../include/libiberty.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>nomem()  :  utils.c
<item>malloc()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>_ada_parse()  :  ada-exp.c
<item>_initialize_gdbtypes()  :  gdbtypes.c
<item>_initialize_parse()  :  parse.c
<item>_initialize_reggroup()  :  reggroups.c
<item>_initialize_ser_hardwire()  :  ser-unix.c
<item>_initialize_stabsread()  :  stabsread.c
<item>_initialize_tracepoint()  :  tracepoint.c
<item>_initialize_varobj()  :  varobj.c
<item>ada_simple_renamed_entity()  :  ada-lang.c
<item>ada_template_to_fixed_record_type_1()  :  ada-lang.c
<item>add_bits_piece()  :  dwarf2expr.c
<item>add_breakpoint_to_new_list()  :  breakpoint.c
<item>add_class_to_cache()  :  objc-lang.c
<item>add_classname_to_cache()  :  objc-lang.c
<item>add_continuation()  :  utils.c
<item>add_equiv_psym()  :  dwarf2read.c
<item>add_file_name()  :  dwarf2read.c
<item>add_filename_to_list()  :  symtab.c
<item>add_implementation_to_cache()  :  objc-lang.c
<item>add_include_dir()  :  dwarf2read.c
<item>add_intermediate_continuation()  :  utils.c
<item>add_item_to_inlined_subroutine_stack()  :  inlining.c
<item>add_item_to_temp_frame_stack()  :  inlining.c
<item>add_language()  :  language.c
<item>add_msglist()  :  objc-lang.c
<item>add_new_header_file()  :  dbxread.c
<item>add_one_pathname_substitution()  :  source.c
<item>add_oso_pst_to_list()  :  dbxread.c
<item>add_pe_exported_sym()  :  coff-pe-read.c
<item>add_piece()  :  dwarf2expr.c
<item>add_real_class_to_cache()  :  objc-lang.c
<item>add_symbol_file_command()  :  symfile.c
<item>add_symbol_to_inlined_subroutine_list()  :  inlining.c
<item>add_symbol_to_list()  :  buildsym.c
<item>add_target()  :  target/target.c
<item>add_thread()  :  thread.c
<item>add_to_list()  :  inlining.c
<item>adjust_prompts_for_optimized_code()  :  event-top.c
<item>alloc_section_addr_info()  :  symfile.c
<item>alloc_type()  :  gdbtypes.c
<item>alloc_type_instance()  :  gdbtypes.c
<item>allocate_bp_location()  :  breakpoint.c
<item>allocate_cplus_struct_type()  :  gdbtypes.c
<item>allocate_info()  :  cp-name-parser.c
<item>allocate_signal_set()  :  infrun.c
<item>allocate_string_in_inferior()  :  valops.c
<item>append_header_to_list()  :  ui-out.c
<item>attach_fields_to_type()  :  stabsread.c
<item>ax_reqs()  :  ax-general.c
<item>backtrace_command()  :  stack.c
<item>bpstat_alloc()  :  breakpoint.c
<item>bpstat_copy()  :  breakpoint.c
<item>bpstat_get_triggered_catchpoints()  :  breakpoint.c
<item>break_command_1()  :  breakpoint.c
<item>break_command_2()  :  breakpoint.c
<item>build_builtin_bitfield()  :  gdbtypes.c
<item>build_builtin_enum()  :  gdbtypes.c
<item>build_canonical_line_spec()  :  linespec.c
<item>build_dummy_cu()  :  dwarf2read.c
<item>build_dummy_objfile()  :  dwarf2read.c
<item>build_gdb_vtable_type()  :  gnu-v3-abi.c
<item>build_objfile_section_table()  :  objfiles.c
<item>c_parse()  :  c-exp.c
<item>c_path_expr_of_child()  :  varobj.c
<item>c_type_print_base()  :  c-typeprint.c
<item>captured_main()  :  main.c
<item>check_for_additional_inlined_breakpoint_locations()  :  inlining.c
<item>check_stub_method()  :  gdbtypes.c
<item>check_stub_method_group()  :  gdbtypes.c
<item>clear_command()  :  breakpoint.c
<item>cli_command_loop()  :  event-top.c
<item>cli_out_new()  :  cli-out.c
<item>cli_quoted_out_new()  :  cli-out.c
<item>coff_locate_sections()  :  coffread.c
<item>coff_read_enum_type()  :  coffread.c
<item>coff_read_struct_type()  :  coffread.c
<item>coff_symfile_init()  :  coffread.c
<item>coff_symfile_read()  :  coffread.c
<item>coff_symtab_read()  :  coffread.c
<item>command_handler()  :  event-top.c
<item>command_line_handler()  :  event-top.c
<item>command_line_input()  :  top.c
<item>compare_sections_command()  :  remote.c
<item>completion_list_add_name()  :  symtab.c
<item>construct_inferior_arguments()  :  infcmd.c
<item>convert_oso_map_to_final_map()  :  dwarf2read.c
<item>convert_sect_addrs_to_offsets_via_on_disk_file()  :  symfile.c
<item>copy_exp()  :  jv-exp.c
<item>copy_sal()  :  symtab.c
<item>copy_string()  :  dwarf2read.c
<item>cp_add_using()  :  cp-namespace.c
<item>cp_comp_to_string()  :  cp-name-parser.c
<item>cplus_path_expr_of_child()  :  varobj.c
<item>cpname_parse()  :  cp-name-parser.c
<item>cppush()  :  varobj.c
<item>create_all_comp_units()  :  dwarf2read.c
<item>create_array_type()  :  gdbtypes.c
<item>create_async_signal_handler()  :  event-loop.c
<item>create_cached_function()  :  value.c
<item>create_file_handler()  :  event-loop.c
<item>create_kext_addr_map()  :  dwarf2read.c
<item>create_mem_region()  :  memattr.c
<item>create_objfile()  :  objfiles.c
<item>create_range_type()  :  gdbtypes.c
<item>create_set_type()  :  gdbtypes.c
<item>create_timer()  :  event-loop.c
<item>db_error()  :  dwarf2read.c
<item>db_lookup_type()  :  dwarf2read.c
<item>db_read_attribute_value()  :  dwarf2read.c
<item>dbx_lookup_type()  :  stabsread.c
<item>dbx_symfile_init()  :  dbxread.c
<item>decode_all_digits()  :  linespec.c
<item>decode_all_digits_exhaustive()  :  linespec.c
<item>decode_all_variables()  :  linespec.c
<item>decode_dollar()  :  linespec.c
<item>decode_indirect()  :  linespec.c
<item>decode_line_1()  :  linespec.c
<item>decode_line_2()  :  linespec.c
<item>decode_objc()  :  linespec.c
<item>default_xfer_partial()  :  target/target.c
<item>define_symbol()  :  stabsread.c
<item>delete_file_handler()  :  event-loop.c
<item>deprecated_register_gdbarch_swap()  :  gdbarch.c
<item>dict_create_hashed_expandable()  :  dictionary.c
<item>dict_create_linear_expandable()  :  dictionary.c
<item>display_command()  :  printcmd.c
<item>do_ui_file_xstrdup()  :  ui-file.c
<item>dwarf2_add_field()  :  dwarf2read.c
<item>dwarf2_add_member_fn()  :  dwarf2read.c
<item>dwarf2_add_to_list_of_inlined_calls()  :  dwarf2read.c
<item>dwarf2_attach_fields_to_type()  :  dwarf2read.c
<item>dwarf2_attach_fn_fields_to_type()  :  dwarf2read.c
<item>dwarf2_frame_cache()  :  dwarf2-frame.c
<item>dwarf2_frame_state_copy_regs()  :  dwarf2-frame.c
<item>dwarf2_get_pc_bounds()  :  dwarf2read.c
<item>dwarf2_read_abbrevs()  :  dwarf2read.c
<item>dwarf_alloc_die()  :  dwarf2read.c
<item>dwarf_build_psymtabs()  :  dwarfread.c
<item>dwarf_decode_line_header()  :  dwarf2read.c
<item>elf_symfile_read()  :  elfread.c
<item>elf_symtab_read()  :  elfread.c
<item>equivalence_table_add()  :  symmisc.c
<item>execute_cfa_program()  :  dwarf2-frame.c
<item>extend_psymbol_list()  :  symmisc.c
<item>f_parse()  :  f-exp.c
<item>file_full_name()  :  dwarf2read.c
<item>filename_completer()  :  completer.c
<item>filename_seen()  :  symtab.c
<item>fill_in_die_info()  :  dwarf2read.c
<item>fill_symbuf()  :  dbxread.c
<item>find_arch_by_info()  :  gdbarch.c
<item>find_complaint()  :  complaints.c
<item>find_kext_files_by_bundle()  :  symfile.c
<item>find_method()  :  linespec.c
<item>find_oload_champ()  :  valops.c
<item>find_pc_offset()  :  disasm.c
<item>find_pc_sect_line()  :  symtab.c
<item>find_source_lines()  :  source.c
<item>finish_block()  :  buildsym.c
<item>finish_command()  :  infcmd.c
<item>finish_inlined_subroutine_command()  :  infcmd.c
<item>fixup_section()  :  symtab.c
<item>forward_search_command()  :  source.c
<item>func_command()  :  stack.c
<item>gather_arguments()  :  macroexp.c
<item>gdb_create_event()  :  event-loop.c
<item>gdb_mangle_name()  :  symtab.c
<item>gdb_readline()  :  top.c
<item>gdb_readline2()  :  event-top.c
<item>gdbarch_alloc()  :  gdbarch.c
<item>gdbarch_data_register()  :  gdbarch.c
<item>gdbarch_register()  :  gdbarch.c
<item>gdbarch_register_osabi()  :  osabi.c
<item>gdbarch_register_osabi_sniffer()  :  osabi.c
<item>generic_load()  :  symfile.c
<item>get_binary_file_uuids()  :  utils.c
<item>get_complaints()  :  complaints.c
<item>get_kext_bundle_ident_and_binary_path()  :  symfile.c
<item>get_repository_name()  :  dwarf2read.c
<item>growbuf_by_size()  :  f-exp.c
<item>hardwire_get_tty_state()  :  ser-unix.c
<item>increment_use_count()  :  dwarf2read.c
<item>init_bincl_list()  :  dbxread.c
<item>init_buffer()  :  macroexp.c
<item>init_environ()  :  environ.c
<item>init_filename_language_table()  :  symfile.c
<item>init_header_files()  :  dbxread.c
<item>init_lineno()  :  coffread.c
<item>init_psymbol_list()  :  symfile.c
<item>init_stringtab()  :  coffread.c
<item>initialize_protocol_log()  :  remote.c
<item>initialize_repositories()  :  dwarf2read.c
<item>inlined_function_add_function_names()  :  inlining.c
<item>inlined_function_initialize_call_stack()  :  inlining.c
<item>inlined_function_update_call_stack()  :  inlining.c
<item>inlined_subroutine_adjust_position_for_breakpoint()  :  inlining.c
<item>install_variable()  :  varobj.c
<item>interp_new()  :  interps.c
<item>interpreter_completer()  :  interps.c
<item>invoke_block_command()  :  printcmd.c
<item>java_class_name_from_physname()  :  jv-lang.c
<item>java_demangle_type_signature()  :  jv-lang.c
<item>java_link_class_type()  :  jv-lang.c
<item>java_parse()  :  jv-exp.c
<item>line_info()  :  source.c
<item>load_comp_unit()  :  dwarf2read.c
<item>load_full_comp_unit()  :  dwarf2read.c
<item>load_progress()  :  symfile.c
<item>load_section_callback()  :  symfile.c
<item>location_completer()  :  completer.c
<item>lookup_block_symbol_all()  :  symtab.c
<item>lookup_child_selector()  :  objc-lang.c
<item>lookup_internalvar()  :  value.c
<item>lookup_minimal_symbol_all()  :  minsyms.c
<item>lookup_partial_symtab_all()  :  symtab.c
<item>lookup_repository_type()  :  dwarf2read.c
<item>lookup_symtab_all()  :  symtab.c
<item>m2_parse()  :  m2-exp.c
<item>macro_alloc()  :  macrotab.c
<item>macro_bcache()  :  macrotab.c
<item>make_cleanup_close()  :  utils.c
<item>make_cleanup_restore_current_thread()  :  thread.c
<item>make_cleanup_restrict_to_objfile()  :  objfiles.c
<item>make_cleanup_restrict_to_objfile_by_name()  :  objfiles.c
<item>make_cleanup_restrict_to_objfile_list()  :  objfiles.c
<item>make_cleanup_ui_out_end()  :  ui-out.c
<item>make_environ()  :  environ.c
<item>make_file_symbol_completion_list()  :  symtab.c
<item>make_my_cleanup()  :  utils.c
<item>make_source_files_completion_list()  :  symtab.c
<item>make_symbol_completion_list()  :  symtab.c
<item>make_symbol_overload_list()  :  cp-support.c
<item>maybe_expand()  :  macroexp.c
<item>mem_file_new()  :  ui-file.c
<item>mem_file_write()  :  ui-file.c
<item>minsym_found()  :  linespec.c
<item>minsyms_found()  :  linespec.c
<item>n_spaces()  :  utils.c
<item>new_agent_expr()  :  ax-general.c
<item>new_dwarf_expr_context()  :  dwarf2expr.c
<item>new_linetable()  :  mdebugread.c
<item>new_macro_table()  :  macrotab.c
<item>new_root_variable()  :  varobj.c
<item>new_variable()  :  varobj.c
<item>nlm_symtab_read()  :  nlmread.c
<item>objc_demangle()  :  objc-lang.c
<item>objc_fixup_ivar_offset()  :  objc-lang.c
<item>objc_parse()  :  objc-exp.c
<item>objc_read_trampoline_region()  :  objc-lang.c
<item>objfile_add_special_psym()  :  objfiles.c
<item>objfile_add_to_ordered_sections()  :  objfiles.c
<item>objfile_add_to_restrict_list()  :  objfiles.c
<item>objfile_delete_from_ordered_sections()  :  objfiles.c
<item>objfile_init_hitlist()  :  objfiles.c
<item>objfile_relocate()  :  objfiles.c
<item>open_dwarf_repository()  :  dwarf2read.c
<item>parse_archive_name()  :  dbxread.c
<item>parse_breakpoint_sals()  :  breakpoint.c
<item>parse_exp_in_context()  :  parse.c
<item>parse_macro_definition()  :  dwarf2read.c
<item>parse_nested_classes_for_hpacc()  :  parse.c
<item>parse_partial_symbols()  :  mdebugread.c
<item>parse_symbol()  :  mdebugread.c
<item>parse_type()  :  mdebugread.c
<item>pascal_parse()  :  p-exp.c
<item>pascal_val_print()  :  p-valprint.c
<item>patch_type()  :  coffread.c
<item>path_expr_of_root()  :  varobj.c
<item>poll_timers()  :  event-loop.c
<item>prim_record_minimal_symbol_and_info()  :  minsyms.c
<item>print_decimal_chars()  :  valprint.c
<item>print_inlined_frame()  :  inlining.c
<item>print_inlined_frames_lite()  :  inlining.c
<item>printf_command()  :  printcmd.c
<item>process_dies()  :  dwarfread.c
<item>process_enumeration_scope()  :  dwarf2read.c
<item>psymtab_to_symtab_1()  :  mdebugread.c
<item>push_current_type()  :  p-exp.c
<item>push_front_restrict_list()  :  objfiles.c
<item>push_subfile()  :  buildsym.c
<item>push_timer()  :  maint.c
<item>queue_comp_unit()  :  dwarf2read.c
<item>rank_function()  :  gdbtypes.c
<item>rb_print_tree()  :  dwarf2read.c
<item>rb_tree_find_all_exact_matches()  :  inlining.c
<item>rb_tree_find_all_matching_nodes()  :  inlining.c
<item>rb_tree_find_all_nodes_in_between()  :  inlining.c
<item>rb_tree_remove_node()  :  dwarf2read.c
<item>re_exec_once()  :  infcmd.c
<item>read_actions()  :  tracepoint.c
<item>read_alphacoff_dynamic_symtab()  :  mipsread.c
<item>read_baseclasses()  :  stabsread.c
<item>read_dbx_dynamic_symtab()  :  dbxread.c
<item>read_dbx_symtab()  :  dbxread.c
<item>read_enum_type()  :  stabsread.c
<item>read_file_scope()  :  dwarfread.c
<item>read_full_die()  :  dwarf2read.c
<item>read_in_db_abbrev_table()  :  dwarf2read.c
<item>read_member_functions()  :  stabsread.c
<item>read_ofile_symtab()  :  dwarfread.c
<item>read_ofile_symtab_from_oso()  :  dbxread.c
<item>read_oso_nlists()  :  dbxread.c
<item>read_pe_exported_syms()  :  coff-pe-read.c
<item>read_struct_fields()  :  stabsread.c
<item>read_subroutine_type()  :  dwarf2read.c
<item>read_type()  :  stabsread.c
<item>record_latest_value()  :  value.c
<item>record_line()  :  buildsym.c
<item>regcache_xmalloc()  :  regcache.c
<item>reggroup_new()  :  reggroups.c
<item>register_objfile_data()  :  objfiles.c
<item>remote_fileio_func_read()  :  remote-fileio.c
<item>remote_fileio_func_write()  :  remote-fileio.c
<item>remote_fileio_init_fd_map()  :  remote-fileio.c
<item>remote_macosx_create_inferior()  :  remote.c
<item>remote_vcont_resume()  :  remote.c
<item>remove_duplicates()  :  breakpoint.c
<item>replace_operator_with_call()  :  ada-lang.c
<item>sal_macro_scope()  :  macroscope.c
<item>save_breakpoints_command()  :  breakpoint.c
<item>save_child_in_parent()  :  varobj.c
<item>save_inferior_ptid()  :  infrun.c
<item>save_inferior_status()  :  infrun.c
<item>save_thread_inlined_call_stack()  :  inlining.c
<item>savestring()  :  utils.c
<item>scan_compilation_units()  :  dwarfread.c
<item>search_symbols()  :  symtab.c
<item>ser_base_get_tty_state()  :  ser-base.c
<item>serial_fdopen()  :  serial.c
<item>serial_open()  :  serial.c
<item>set_async_prompt()  :  event-top.c
<item>set_in_environ()  :  environ.c
<item>set_raw_breakpoint()  :  breakpoint.c
<item>set_raw_tracepoint()  :  tracepoint.c
<item>set_width()  :  utils.c
<item>simple_charset()  :  charset.c
<item>simple_read_overlay_table()  :  symfile.c
<item>slide_objfile()  :  objfiles.c
<item>solib_load_unload_1()  :  breakpoint.c
<item>sort_search_symbols()  :  symtab.c
<item>specify_exec_file_hook()  :  corefile.c
<item>stabsect_build_psymtabs()  :  dbxread.c
<item>stabsect_read_strtab_from_oso()  :  dbxread.c
<item>start_arglist()  :  parse.c
<item>start_msglist()  :  objc-lang.c
<item>start_subfile()  :  buildsym.c
<item>start_symtab()  :  buildsym.c
<item>stdio_file_new()  :  ui-file.c
<item>step_once()  :  infcmd.c
<item>stringify_collection_list()  :  tracepoint.c
<item>struct_type()  :  dwarfread.c
<item>symbol_found()  :  linespec.c
<item>symbols_found()  :  linespec.c
<item>table_translation()  :  charset.c
<item>target_read_string()  :  target/target.c
<item>target_resize_to_sections()  :  target/target.c
<item>tee_file_new()  :  ui-file.c
<item>template_to_static_fixed_type()  :  ada-lang.c
<item>to_record_with_fixed_variant_part()  :  ada-lang.c
<item>trace_find_line_command()  :  tracepoint.c
<item>typename_concat()  :  dwarf2read.c
<item>ui_file_new()  :  ui-file.c
<item>ui_out_new()  :  ui-out.c
<item>ui_out_stream_new()  :  ui-out.c
<item>until_break_command()  :  breakpoint.c
<item>update_tmp_frame_stack()  :  inlining.c
<item>uptok()  :  p-exp.c
<item>user_reg_add_builtin()  :  user-regs.c
<item>val_print_string()  :  valprint.c
<item>varobj_add_to_changelist()  :  varobj.c
<item>varobj_changelist_init()  :  varobj.c
<item>varobj_delete()  :  varobj.c
<item>varobj_fixup_value()  :  varobj.c
<item>varobj_list()  :  varobj.c
<item>varobj_list_children()  :  varobj.c
<item>virtual_base_list()  :  gdbtypes.c
<item>virtual_base_list_aux()  :  gdbtypes.c
<item>vpush()  :  varobj.c
<item>watch_command_1()  :  breakpoint.c
<item>write_object_renaming()  :  ada-exp.c
<item>xalloc_observer_list_node()  :  observer.c
<item>xdb_handle_command()  :  infrun.c
<item>xget_renaming_scope()  :  ada-lang.c
<item>yyalloc()  :  ada-exp.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_ada_exp()  :  ada-exp.c
<item>_initialize_ada_language()  :  ada-lang.c
<item>_initialize_cp_valprint()  :  cp-valprint.c
<item>_initialize_frame()  :  frame.c
<item>ada_lookup_symbol_list()  :  ada-lang.c
<item>ada_parse()  :  ada-exp.c
<item>build_dummy_cu()  :  dwarf2read.c
<item>build_dummy_objfile()  :  dwarf2read.c
<item>create_objfile_using_objfile()  :  objfiles.c
<item>dwarf2_build_psymtabs_hard()  :  dwarf2read.c
<item>dwarf2_read_abbrevs()  :  dwarf2read.c
<item>find_debug_info_for_pst()  :  dwarf2read.c
<item>flush_cached_frames()  :  frame.c
<item>gdbarch_alloc()  :  gdbarch.c
<item>load_comp_unit()  :  dwarf2read.c
<item>load_full_comp_unit()  :  dwarf2read.c
<item>recursive_dump_type()  :  gdbtypes.c
<item>reread_symbols_for_objfile()  :  symfile.c
</itemize>
</descrip>

<sect1>Global Function xmcalloc()

<p><tt>void* xmcalloc ( void* md, size_t number, size_t size )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>mcalloc()  :  utils.c
<item>nomem()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>bcache_xmalloc()  :  bcache.c
<item>gcalloc()  :  utils.c
</itemize>
</descrip>

<sect1>Global Function xmfree()

<p><tt>void xmfree ( void* md, void* ptr )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>mfree()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>bcache_xfree()  :  bcache.c
<item>expand_hash_table()  :  bcache.c
<item>gfree()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>bcache_xmalloc()  :  bcache.c
</itemize>
</descrip>

<sect1>Global Function xmmalloc()

<p><tt>void* xmmalloc ( void* md, size_t size )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>mmalloc()  :  utils.c
<item>nomem()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>expand_hash_table()  :  bcache.c
<item>gmalloc()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>bcache_xmalloc()  :  bcache.c
</itemize>
</descrip>

<sect1>Global Function xmrealloc()

<p><tt>void* xmrealloc ( void* md, void* ptr, size_t size )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>mmalloc()  :  utils.c
<item>mrealloc()  :  utils.c
<item>nomem()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>grealloc()  :  utils.c
</itemize>
</descrip>

<sect1>Global Function xrealloc()

<p><tt>void* xrealloc ( void* ptr, size_t size )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>../include/libiberty.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>nomem()  :  utils.c
<item>malloc(), realloc()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>add_aexpr()  :  tracepoint.c
<item>add_bincl_to_list()  :  dbxread.c
<item>add_bits_piece()  :  dwarf2expr.c
<item>add_block()  :  mdebugread.c
<item>add_constructors()  :  linespec.c
<item>add_equiv_psym()  :  dwarf2read.c
<item>add_file_name()  :  dwarf2read.c
<item>add_filename_language()  :  symfile.c
<item>add_filename_to_list()  :  symtab.c
<item>add_include_dir()  :  dwarf2read.c
<item>add_item_to_inlined_subroutine_stack()  :  inlining.c
<item>add_item_to_temp_frame_stack()  :  inlining.c
<item>add_language()  :  language.c
<item>add_matching_methods()  :  linespec.c
<item>add_memrange()  :  tracepoint.c
<item>add_new_header_file()  :  dbxread.c
<item>add_one_pathname_substitution()  :  source.c
<item>add_oso_pst_to_list()  :  dbxread.c
<item>add_partial_symtab_to_array()  :  symtab.c
<item>add_piece()  :  dwarf2expr.c
<item>add_symbol_linear_expandable()  :  dictionary.c
<item>add_symtab_to_array()  :  symtab.c
<item>add_target()  :  target/target.c
<item>add_this_object_header_file()  :  dbxread.c
<item>add_to_containing_archive_cache()  :  dbxread.c
<item>add_undefined_array()  :  gdbtypes.c
<item>add_undefined_field()  :  stabsread.c
<item>add_undefined_type()  :  stabsread.c
<item>append_composite_type_field()  :  gdbtypes.c
<item>append_name()  :  gdbarch.c
<item>ax_reqs()  :  ax-general.c
<item>c_lex()  :  c-exp.c
<item>c_parse()  :  c-exp.c
<item>captured_main()  :  main.c
<item>check_for_additional_inlined_breakpoint_locations()  :  inlining.c
<item>check_type_stack_depth()  :  parse.c
<item>cisco_kod_request()  :  kod-cisco.c
<item>coff_lookup_type()  :  coffread.c
<item>collect_methods()  :  linespec.c
<item>command_line_handler()  :  event-top.c
<item>command_line_input()  :  top.c
<item>completion_list_add_name()  :  symtab.c
<item>completion_list_objc_symbol()  :  symtab.c
<item>copy_name()  :  parse.c
<item>create_all_comp_units()  :  dwarf2read.c
<item>create_file_handler()  :  event-loop.c
<item>dbx_lookup_type()  :  stabsread.c
<item>decode_all_digits_exhaustive()  :  linespec.c
<item>decoded_type_name()  :  ada-typeprint.c
<item>do_ui_file_xstrdup()  :  ui-file.c
<item>dwarf2_add_member_fn()  :  dwarf2read.c
<item>dwarf2_frame_state_alloc_regs()  :  dwarf2-frame.c
<item>dwarf2_get_pc_bounds()  :  dwarf2read.c
<item>dwarf2_read_abbrevs()  :  dwarf2read.c
<item>dwarf_expr_grow_stack()  :  dwarf2expr.c
<item>extend_psymbol_list()  :  symmisc.c
<item>f_parse()  :  f-exp.c
<item>filename_completer()  :  completer.c
<item>filename_seen()  :  symtab.c
<item>find_methods()  :  objc-lang.c
<item>find_source_lines()  :  source.c
<item>forward_search_command()  :  source.c
<item>gather_arguments()  :  macroexp.c
<item>gdb_readline()  :  top.c
<item>gdb_readline2()  :  event-top.c
<item>get_binary_file_uuids()  :  utils.c
<item>grow_expr()  :  ax-general.c
<item>grow_vect()  :  ada-lang.c
<item>growbuf_by_size()  :  f-exp.c
<item>init_environ()  :  environ.c
<item>init_timer()  :  maint.c
<item>initialize_current_architecture()  :  arch-utils.c
<item>insert_exp()  :  jv-exp.c
<item>interpreter_completer()  :  interps.c
<item>java_lex()  :  jv-exp.c
<item>location_completer()  :  completer.c
<item>mem_file_write()  :  ui-file.c
<item>objc_lex()  :  objc-exp.c
<item>objc_parse()  :  objc-exp.c
<item>objfile_add_special_psym()  :  objfiles.c
<item>objfile_add_to_hitlist()  :  objfiles.c
<item>objfile_add_to_ordered_sections()  :  objfiles.c
<item>overload_list_add_symbol()  :  cp-support.c
<item>parse_exp_in_context()  :  parse.c
<item>parse_macro_definition()  :  dwarf2read.c
<item>parse_partial_symbols()  :  mdebugread.c
<item>pascal_lex()  :  p-exp.c
<item>printf_command()  :  printcmd.c
<item>process_enumeration_scope()  :  dwarf2read.c
<item>push_context()  :  buildsym.c
<item>read_args()  :  stabsread.c
<item>read_array_type()  :  dwarf2read.c
<item>read_in_db_abbrev_table()  :  dwarf2read.c
<item>read_oso_nlists()  :  dbxread.c
<item>record_line()  :  buildsym.c
<item>ref_add()  :  stabsread.c
<item>remote_fileio_resize_fd_map()  :  remote-fileio.c
<item>resize_buffer()  :  macroexp.c
<item>resize_tempbuf()  :  ada-exp.c
<item>sals_pushback()  :  linespec.c
<item>set_in_environ()  :  environ.c
<item>set_namestring_1()  :  dbxread.c
<item>set_width()  :  utils.c
<item>shrink_linetable()  :  mdebugread.c
<item>specify_exec_file_hook()  :  corefile.c
<item>target_read_string()  :  target/target.c
<item>target_resize_to_sections()  :  target/target.c
<item>val_print_string()  :  valprint.c
<item>value_change_enclosing_type()  :  value.c
<item>write_exp_bitstring()  :  parse.c
<item>write_exp_elt()  :  parse.c
<item>write_exp_string()  :  parse.c
<item>yyxrealloc()  :  ada-exp.c
</itemize>
</descrip>

<sect1>Global Function xsnprintf()

<p><tt>int xsnprintf ( char* str, size_t size, const char* format, ... )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
<item>__builtin___vsnprintf_chk(), __builtin_object_size(), __builtin_va_end(), __builtin_va_start()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>compare_sections_command()  :  remote.c
<item>decimal2str()  :  utils.c
<item>extended_remote_restart()  :  remote.c
<item>hex_string()  :  utils.c
<item>normal_pid_to_str()  :  target/target.c
<item>octal2str()  :  utils.c
<item>phex()  :  utils.c
<item>phex_nz()  :  utils.c
<item>remote_check_symbols()  :  remote.c
<item>remote_pid_to_str()  :  remote.c
<item>remote_thread_alive()  :  remote.c
<item>remote_threads_extra_info()  :  remote.c
<item>safe_strerror()  :  utils.c
<item>set_thread()  :  remote.c
<item>store_register_using_P()  :  remote.c
</itemize>
</descrip>

<sect1>Global Function xstrprintf()

<p><tt>char* xstrprintf ( const char* format, ... )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xstrvprintf()  :  utils.c
<item>__builtin_va_end(), __builtin_va_start()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>add_packet_config_cmd()  :  remote.c
<item>bpstat_stop_status()  :  breakpoint.c
<item>breakpoint_re_set_all()  :  breakpoint.c
<item>breakpoint_update()  :  breakpoint.c
<item>c_make_name_of_child()  :  varobj.c
<item>c_value_of_variable()  :  varobj.c
<item>captured_main()  :  main.c
<item>commands_command()  :  breakpoint.c
<item>create_breakpoints()  :  breakpoint.c
<item>create_child()  :  varobj.c
<item>create_thread_event_breakpoint()  :  breakpoint.c
<item>delete_breakpoint()  :  breakpoint.c
<item>hand_function_call()  :  infcall.c
<item>insert_bp_location()  :  breakpoint.c
<item>internal_vproblem()  :  utils.c
<item>is_package_name()  :  ada-lang.c
<item>re_enable_breakpoints_in_shlibs()  :  breakpoint.c
<item>regcache_dump()  :  regcache.c
<item>remote_vcont_resume()  :  remote.c
<item>varobj_gen_name()  :  varobj.c
</itemize>
</descrip>

<sect1>Global Function xstrvprintf()

<p><tt>char* xstrvprintf ( const char* format, va_list ap )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
<item>nomem()  :  utils.c
<item>__error(), vasprintf()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>internal_vproblem()  :  utils.c
<item>serial_printf()  :  serial.c
<item>vcomplaint()  :  complaints.c
<item>vfprintf_maybe_filtered()  :  utils.c
<item>vfprintf_unfiltered()  :  utils.c
<item>xasprintf()  :  utils.c
<item>xstrprintf()  :  utils.c
</itemize>
</descrip>

<sect1>Global Function xzalloc()

<p><tt>void* xzalloc ( size_t size )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xcalloc()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>allocate_value()  :  value.c
<item>dummy_frame_push()  :  dummy-frame.c
<item>new_block()  :  mdebugread.c
<item>new_bvect()  :  mdebugread.c
<item>parse_partial_symbols()  :  mdebugread.c
<item>push_parse_stack()  :  mdebugread.c
<item>target_bfd_reopen()  :  bfd-target.c
</itemize>
</descrip>

<sect1>Global Function yquery()

<p><tt>int yquery ( const char* ctlstr, ... )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>defaulted_query()  :  utils.c
<item>__builtin_va_end(), __builtin_va_start()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>internal_vproblem()  :  utils.c
</itemize>
</descrip>

<sect1>Local Function decimal2str()

<p><tt>static char* decimal2str ( const char* sign, unsigned long addr, int8_t width )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>get_cell()  :  utils.c
<item>internal_error()  :  utils.c
<item>xsnprintf()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>int_string()  :  utils.c
<item>paddr_d()  :  utils.c
<item>paddr_u()  :  utils.c
</itemize>
</descrip>

<sect1>Local Function defaulted_query()

<p><tt>static int defaulted_query ( const char* ctlstr, const char defchar, va_list args )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>gdb_flush()  :  ui-file.c
<item>input_from_terminal_p()  :  top.c
<item>printf_filtered()  :  utils.c
<item>vfprintf_filtered()  :  utils.c
<item>wrap_here()  :  utils.c
<item>clearerr(), deprecated_query_hook(), fgetc()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>nquery()  :  utils.c
<item>yquery()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>annotation_level  :  stack.c
<item>deprecated_query_hook  :  top.c
<item>gdb_stdout  :  main.c
</itemize>
</descrip>

<sect1>Local Function do_bfd_close_cleanup()

<p><tt>static void do_bfd_close_cleanup ( void* arg )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>bfd_close()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>make_cleanup_bfd_close()  :  utils.c
</itemize>
</descrip>

<sect1>Local Function do_close_cleanup()

<p><tt>static void do_close_cleanup ( void* arg )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>xfree()  :  utils.c
<item>close()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>make_cleanup_close()  :  utils.c
</itemize>
</descrip>

<sect1>Local Function do_free_section_addr_info()

<p><tt>static void do_free_section_addr_info ( void* arg )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>free_section_addr_info()  :  symfile.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>make_cleanup_free_section_addr_info()  :  utils.c
</itemize>
</descrip>

<sect1>Local Function do_freeargv()

<p><tt>static void do_freeargv ( void* arg )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>freeargv()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>make_cleanup_freeargv()  :  utils.c
</itemize>
</descrip>

<sect1>Local Function do_my_cleanups()

<p><tt>static void do_my_cleanups ( struct cleanup** pmy_chain, struct cleanup* old_chain )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>utils.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xfree()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>do_cleanups()  :  utils.c
<item>do_exec_cleanups()  :  utils.c
<item>do_exec_error_cleanups()  :  utils.c
<item>do_final_cleanups()  :  utils.c
<item>do_hand_call_cleanups()  :  utils.c
<item>do_run_cleanups()  :  utils.c
</itemize>
</descrip>

<sect1>Local Function do_restore_output()

<p><tt>static void do_restore_output ( void* data )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>ui_file_rewind()  :  ui-file.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>make_cleanup_ui_out_suppress_output()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_null  :  main.c
<item>uiout  :  ui-out.c
</itemize>
</descrip>

<sect1>Local Function do_restore_uiout_cleanup()

<p><tt>static void do_restore_uiout_cleanup ( void* arg )</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>make_cleanup_restore_uiout()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>uiout  :  ui-out.c
</itemize>
</descrip>

<sect1>Local Function do_set_schedlock_mode()

<p><tt>static void do_set_schedlock_mode ( void* in_mode )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>set_scheduler_locking_mode()  :  infrun.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>make_cleanup_set_restore_scheduler_locking_mode()  :  utils.c
</itemize>
</descrip>

<sect1>Local Function do_ui_file_delete()

<p><tt>static void do_ui_file_delete ( void* arg )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>ui_file_delete()  :  ui-file.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>make_cleanup_ui_file_delete()  :  utils.c
</itemize>
</descrip>

<sect1>Local Function do_ui_out_delete()

<p><tt>static void do_ui_out_delete ( void* arg )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>ui_out_delete()  :  ui-out.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>make_cleanup_ui_out_delete()  :  utils.c
</itemize>
</descrip>

<sect1>Local Function fputs_maybe_filtered()

<p><tt>static void fputs_maybe_filtered ( const char* linebuffer, struct ui_file* stream, int filter )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>utils.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fputc_unfiltered()  :  utils.c
<item>fputs_unfiltered()  :  ui-file.c
<item>internal_error()  :  utils.c
<item>prompt_for_continue()  :  utils.c
<item>wrap_here()  :  utils.c
<item>strlen()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>fputs_filtered()  :  utils.c
<item>vfprintf_maybe_filtered()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>chars_per_line  :  utils.c
<item>chars_printed  :  utils.c
<item>gdb_stdout  :  main.c
<item>lines_per_page  :  utils.c
<item>lines_printed  :  utils.c
<item>pagination_enabled  :  utils.c
<item>wrap_buffer  :  utils.c
<item>wrap_column  :  utils.c
<item>wrap_indent  :  utils.c
<item>wrap_pointer  :  utils.c
</itemize>
</descrip>

<sect1>Local Function get_cell()

<p><tt>static char* get_cell ( void )</tt><newline>
<descrip>
<tag>Called by:</tag>
<itemize>
<item>core_addr_to_string()  :  utils.c
<item>core_addr_to_string_nz()  :  utils.c
<item>decimal2str()  :  utils.c
<item>hex_string()  :  utils.c
<item>hex_string_custom()  :  utils.c
<item>octal2str()  :  utils.c
<item>phex()  :  utils.c
<item>phex_nz()  :  utils.c
<item>puuid()  :  utils.c
</itemize>
</descrip>

<sect1>Local Function internal_vproblem()

<p><tt>static void internal_vproblem ( struct internal_problem* problem, const char* file, int line, const char* fmt, va_list ap )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>begin_line()  :  utils.c
<item>fputs_unfiltered()  :  ui-file.c
<item>internal_error()  :  utils.c
<item>make_cleanup()  :  utils.c
<item>printf_filtered()  :  utils.c
<item>query()  :  utils.c
<item>xfree()  :  utils.c
<item>xstrprintf()  :  utils.c
<item>xstrvprintf()  :  utils.c
<item>yquery()  :  utils.c
<item>abort(), backtrace(), backtrace_symbols_fd(), exit(), fork(), fprintf(), fputs(), vfprintf(), write()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>internal_verror()  :  utils.c
<item>internal_vwarning()  :  utils.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>xfree()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_target  :  target/target.c
<item>gdb_stderr  :  main.c
</itemize>
</descrip>

<sect1>Local Function mcalloc()

<p><tt>static void* mcalloc ( void* md, size_t number, size_t size )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>calloc()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>xmcalloc()  :  utils.c
</itemize>
</descrip>

<sect1>Local Function mfree()

<p><tt>static void mfree ( void* md, void* volatile ptr )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>free()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>xmfree()  :  utils.c
</itemize>
</descrip>

<sect1>Local Function mmalloc()

<p><tt>static void* mmalloc ( void* md, size_t size )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>malloc()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>mrealloc()  :  utils.c
<item>xmmalloc()  :  utils.c
<item>xmrealloc()  :  utils.c
</itemize>
</descrip>

<sect1>Local Function mrealloc()

<p><tt>static void* mrealloc ( void* md, void* volatile ptr, size_t size )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>mmalloc()  :  utils.c
<item>realloc()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>xmrealloc()  :  utils.c
</itemize>
</descrip>

<sect1>Local Function no_control_char_error()

<p><tt>static int no_control_char_error ( const char* start, const char* end )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>target_charset()  :  charset.c
<item>__builtin___memcpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_memcpy_chk()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>parse_escape()  :  utils.c
</itemize>
</descrip>

<sect1>Local Function octal2str()

<p><tt>static char* octal2str ( unsigned long addr, int8_t width )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>get_cell()  :  utils.c
<item>internal_error()  :  utils.c
<item>xsnprintf()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>int_string()  :  utils.c
</itemize>
</descrip>

<sect1>Local Function pagination_off_command()

<p><tt>static void pagination_off_command ( const char* arg, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>initialize_utils()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>pagination_enabled  :  utils.c
</itemize>
</descrip>

<sect1>Local Function pagination_on_command()

<p><tt>static void pagination_on_command ( const char* arg, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>initialize_utils()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>pagination_enabled  :  utils.c
</itemize>
</descrip>

<sect1>Local Function printchar()

<p><tt>static void printchar ( int c, void (*do_fputs)(const char*,struct ui_file*), void (*do_fprintf)(struct ui_file*,const char*,...), struct ui_file* stream, int quoter )</tt><newline>
<descrip>
<tag>Called by:</tag>
<itemize>
<item>fputstr_filtered()  :  utils.c
<item>fputstr_unfiltered()  :  utils.c
<item>fputstrn_unfiltered()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>sevenbit_strings  :  utils.c
</itemize>
</descrip>

<sect1>Local Function prompt_for_continue()

<p><tt>static void prompt_for_continue ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>utils.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>async_request_quit()  :  event-top.c
<item>dont_repeat()  :  top.c
<item>gdb_readline_wrapper()  :  top.c
<item>printf_unfiltered()  :  utils.c
<item>reinitialize_more_filter()  :  utils.c
<item>xfree()  :  utils.c
<item>__builtin___strcat_chk(), __builtin___strcpy_chk(), __builtin_object_size(), __inline_strcat_chk(), __inline_strcpy_chk()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>fputs_maybe_filtered()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>annotation_level  :  stack.c
<item>immediate_quit  :  utils.c
</itemize>
</descrip>

<sect1>Local Function set_height_command()

<p><tt>static void set_height_command ( const char* args, int from_tty, struct cmd_list_element* c )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>set_screen_size()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>initialize_utils()  :  utils.c
</itemize>
</descrip>

<sect1>Local Function set_width_command()

<p><tt>static void set_width_command ( const char* args, int from_tty, struct cmd_list_element* c )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>utils.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>set_screen_size()  :  utils.c
<item>set_width()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>initialize_utils()  :  utils.c
</itemize>
</descrip>

<sect1>Local Function show_asm_demangle()

<p><tt>static void show_asm_demangle ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>fprintf_filtered()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>initialize_utils()  :  utils.c
</itemize>
</descrip>

<sect1>Local Function show_chars_per_line()

<p><tt>static void show_chars_per_line ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>fprintf_filtered()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>initialize_utils()  :  utils.c
</itemize>
</descrip>

<sect1>Local Function show_demangle()

<p><tt>static void show_demangle ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>fprintf_filtered()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>initialize_utils()  :  utils.c
</itemize>
</descrip>

<sect1>Local Function show_lines_per_page()

<p><tt>static void show_lines_per_page ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>fprintf_filtered()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>initialize_utils()  :  utils.c
</itemize>
</descrip>

<sect1>Local Function show_pagination_enabled()

<p><tt>static void show_pagination_enabled ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>fprintf_filtered()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>initialize_utils()  :  utils.c
</itemize>
</descrip>

<sect1>Local Function show_sevenbit_strings()

<p><tt>static void show_sevenbit_strings ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>fprintf_filtered()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>initialize_utils()  :  utils.c
</itemize>
</descrip>

<sect1>Local Function strrchr_bounded()

<p><tt>static const char* strrchr_bounded ( const char* beg, const char* end, char c )</tt><newline>
<descrip>
<tag>Called by:</tag>
<itemize>
<item>bundle_basename()  :  utils.c
</itemize>
</descrip>

<sect1>Local Function strrstr()

<p><tt>static const char* strrstr ( const char* s, const char* r )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>strlen(), strstr()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>bundle_basename()  :  utils.c
</itemize>
</descrip>

<sect1>Local Function vfprintf_maybe_filtered()

<p><tt>static void vfprintf_maybe_filtered ( struct ui_file* stream, const char* format, va_list args, int filter )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>utils.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>do_cleanups()  :  utils.c
<item>fputs_maybe_filtered()  :  utils.c
<item>make_cleanup()  :  utils.c
<item>xstrvprintf()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>vfprintf_filtered()  :  utils.c
<item>vprintf_filtered()  :  utils.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>xfree()  :  utils.c
</itemize>
</descrip>

</article>
