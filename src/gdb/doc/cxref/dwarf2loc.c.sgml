<!DOCTYPE LINUXDOC SYSTEM>

<!-- This SGML file generated by cxref (version 1.6e). -->
<!-- cxref program (c) Andrew M. Bishop 1995-2014. -->

<!--
Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF dwarf2loc.c
CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
-->

<article>

<title>Cross reference for dwarf2loc.c of gdb.cxref.
<author>cxref

<sect>File dwarf2loc.c
<descrip>
<tag>References Functions:</tag>
<itemize>
<item>locexpr_describe_location()  :  dwarf2loc.c
<item>locexpr_read_needs_frame()  :  dwarf2loc.c
<item>locexpr_read_variable()  :  dwarf2loc.c
<item>locexpr_tracepoint_var_ref()  :  dwarf2loc.c
<item>loclist_describe_location()  :  dwarf2loc.c
<item>loclist_read_needs_frame()  :  dwarf2loc.c
<item>loclist_read_variable()  :  dwarf2loc.c
<item>loclist_tracepoint_var_ref()  :  dwarf2loc.c
</itemize>
</descrip>

<sect1>Included Files

<p>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<itemize>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
<item><tt>#include &lt;sys/time.h&gt;</tt>
<item><tt>#include &lt;time.h&gt;</tt>
<item><tt>#include &lt;sys/types.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
<item><tt>#include &lt;errno.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
<item><tt>#include &lt;regex.h&gt;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;unistd.h&gt;</tt>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;gdb_locale.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<item><tt>#include &lt;locale.h&gt;</tt>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../gdb/signals.h&quot;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &quot;../include/libiberty.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/symcat.h&quot;</tt>
</itemize>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
<item><tt>#include &quot;ui-file.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;xm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/xm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &lt;mach/mach.h&gt;</tt>
<item><tt>#include &lt;signal.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;nm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/i386/nm-i386.h&quot;</tt>
<item><tt>#include &quot;macosx/nm-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;tm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/tm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;macosx/i386-macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/i386-macosx-thread-status.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &lt;mach/mach_types.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
<item><tt>#include &lt;inttypes.h&gt;</tt>
<item><tt>#include &lt;mach/mach_vm.h&gt;</tt>
<item><tt>#include &lt;mach/kmod.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;macosx/tm-i386-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;../include/fopen-bin.h&quot;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdlib.h&gt;</tt>
<item><tt>#include &quot;gdbarch.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;ui-out.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;value.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/floatformat.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;gdb_regex.h&quot;</tt>
<itemize>
<item><tt>#include &lt;regex.h&gt;</tt>
</itemize>
<item><tt>#include &quot;frame.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
</itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;gdbtypes.h&quot;</tt>
<item><tt>#include &quot;expression.h&quot;</tt>
<itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
</itemize>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;frame.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdbcore.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;target.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;dcache.h&quot;</tt>
<item><tt>#include &quot;memattr.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;inferior.h&quot;</tt>
<itemize>
<item><tt>#include &quot;breakpoint.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
<item><tt>#include &quot;gdb-events.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;target.h&quot;</tt>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;ax.h&quot;</tt>
<itemize>
<item><tt>#include &quot;doublest.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;ax-gdb.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;regcache.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;objfiles.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &lt;uuid/uuid.h&gt;</tt>
<item><tt>#include &quot;gdb_obstack.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/obstack.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;symfile.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;symtab.h&quot;</tt>
</itemize>
<item><tt>#include &quot;inlining.h&quot;</tt>
<itemize>
<item><tt>#include &lt;block.h&gt;</tt>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
</itemize>
<item><tt>#include &lt;sqlite3.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;exceptions.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;ui-out.h&quot;</tt>
<item><tt>#include &lt;setjmp.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;../include/elf/dwarf2.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;dwarf2expr.h&quot;</tt>
<itemize>
<item><tt>#include &quot;dwarf2loc.h&quot;</tt>
<itemize>
<item><tt>#include &quot;dwarf2read.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
</itemize>
</itemize>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;dwarf2loc.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;dwarf2read.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_string.h&quot;</tt>
<itemize>
<item><tt>#include &lt;string.h&gt;</tt>
</itemize>
</itemize>

<sect1>Type struct dwarf_expr_baton

<p>
<itemize>
<item><tt>struct dwarf_expr_baton</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>struct frame_info* frame;</tt><newline>
<item><tt>struct objfile* objfile;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Type struct needs_frame_baton

<p>
<itemize>
<item><tt>struct needs_frame_baton</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>int needs_frame;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Global Variable dwarf2_locexpr_funcs

<p>
<tt>const struct symbol_ops dwarf2_locexpr_funcs</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>dwarf2_symbol_mark_computed()  :  dwarf2read.c
</itemize>
</descrip>

<sect1>Global Variable dwarf2_loclist_funcs

<p>
<tt>const struct symbol_ops dwarf2_loclist_funcs</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>dwarf2_symbol_mark_computed()  :  dwarf2read.c
<item>dwarf_expr_frame_base()  :  dwarf2loc.c
</itemize>
</descrip>

<sect1>Local Function dwarf2_evaluate_loc_desc()

<p><tt>static struct value* dwarf2_evaluate_loc_desc ( struct symbol* var, struct frame_info* frame, gdb_byte* data, unsigned short size, struct objfile* objfile )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>allocate_value()  :  value.c
<item>deprecated_value_address_hack()  :  value.c
<item>deprecated_value_lval_hack()  :  value.c
<item>dwarf_expr_eval()  :  dwarf2expr.c
<item>dwarf_expr_fetch()  :  dwarf2expr.c
<item>free_dwarf_expr_context()  :  dwarf2expr.c
<item>gdbarch_convert_register_p()  :  gdbarch.c
<item>gdbarch_dwarf2_reg_to_regnum()  :  gdbarch.c
<item>get_frame_register()  :  frame.c
<item>new_dwarf_expr_context()  :  dwarf2expr.c
<item>read_memory()  :  corefile.c
<item>set_value_lazy()  :  value.c
<item>set_value_optimized_out()  :  value.c
<item>set_var_status()  :  value.c
<item>value_contents_raw()  :  value.c
<item>value_from_register()  :  findvar.c
<item>__builtin___memcpy_chk(), __builtin_object_size(), __inline_memcpy_chk()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>locexpr_read_variable()  :  dwarf2loc.c
<item>loclist_read_variable()  :  dwarf2loc.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>dwarf_expr_frame_base()  :  dwarf2loc.c
<item>dwarf_expr_read_mem()  :  dwarf2loc.c
<item>dwarf_expr_read_reg()  :  dwarf2loc.c
<item>dwarf_expr_tls_address()  :  dwarf2loc.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
</itemize>
</descrip>

<sect1>Local Function dwarf2_loc_desc_needs_frame()

<p><tt>static int dwarf2_loc_desc_needs_frame ( gdb_byte* data, unsigned short size )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>dwarf_expr_eval()  :  dwarf2expr.c
<item>free_dwarf_expr_context()  :  dwarf2expr.c
<item>new_dwarf_expr_context()  :  dwarf2expr.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>locexpr_read_needs_frame()  :  dwarf2loc.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>needs_frame_frame_base()  :  dwarf2loc.c
<item>needs_frame_read_mem()  :  dwarf2loc.c
<item>needs_frame_read_reg()  :  dwarf2loc.c
<item>needs_frame_tls_address()  :  dwarf2loc.c
</itemize>
</descrip>

<sect1>Local Function dwarf2_tracepoint_var_ref()

<p><tt>static void dwarf2_tracepoint_var_ref ( struct symbol* symbol, struct agent_expr* ax, struct axs_value* value, gdb_byte* data, int size )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>ax_const_l()  :  ax-general.c
<item>ax_reg()  :  ax-general.c
<item>ax_simple()  :  ax-general.c
<item>error()  :  utils.c
<item>gdbarch_virtual_frame_pointer()  :  gdbarch.c
<item>read_sleb128()  :  dwarf2expr.c
<item>read_uleb128()  :  dwarf2expr.c
<item>symbol_natural_name()  :  symtab.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>locexpr_tracepoint_var_ref()  :  dwarf2loc.c
<item>loclist_tracepoint_var_ref()  :  dwarf2loc.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
<item>demangle  :  utils.c
</itemize>
</descrip>

<sect1>Local Function dwarf_expr_frame_base()

<p><tt>static void dwarf_expr_frame_base ( void* baton, gdb_byte** start, size_t* length )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>find_location_expression()  :  dwarf2loc.c
<item>get_frame_function()  :  blockframe.c
<item>get_frame_pc()  :  frame.c
<item>symbol_natural_name()  :  symtab.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>dwarf2_evaluate_loc_desc()  :  dwarf2loc.c
<item>locexpr_describe_location()  :  dwarf2loc.c
<item>loclist_describe_location()  :  dwarf2loc.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>dwarf2_loclist_funcs  :  dwarf2loc.c
</itemize>
</descrip>

<sect1>Local Function dwarf_expr_read_mem()

<p><tt>static void dwarf_expr_read_mem ( void* baton, gdb_byte* buf, CORE_ADDR addr, size_t len )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>read_memory()  :  corefile.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>dwarf2_evaluate_loc_desc()  :  dwarf2loc.c
<item>locexpr_describe_location()  :  dwarf2loc.c
<item>loclist_describe_location()  :  dwarf2loc.c
</itemize>
</descrip>

<sect1>Local Function dwarf_expr_read_reg()

<p><tt>static CORE_ADDR dwarf_expr_read_reg ( void* baton, int dwarf_regnum )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>extract_unsigned_integer()  :  findvar.c
<item>frame_register()  :  frame.c
<item>gdbarch_dwarf2_reg_to_regnum()  :  gdbarch.c
<item>register_size()  :  regcache.c
<item>__builtin_alloca()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>dwarf2_evaluate_loc_desc()  :  dwarf2loc.c
<item>locexpr_describe_location()  :  dwarf2loc.c
<item>loclist_describe_location()  :  dwarf2loc.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
</itemize>
</descrip>

<sect1>Local Function dwarf_expr_tls_address()

<p><tt>static CORE_ADDR dwarf_expr_tls_address ( void* baton, CORE_ADDR offset )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>gdbarch_fetch_tls_load_module_address()  :  gdbarch.c
<item>gdbarch_fetch_tls_load_module_address_p()  :  gdbarch.c
<item>exceptions_state_mc_action_iter(), exceptions_state_mc_action_iter_1(), exceptions_state_mc_init(), sigsetjmp(), throw_error(), throw_exception()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>dwarf2_evaluate_loc_desc()  :  dwarf2loc.c
<item>locexpr_describe_location()  :  dwarf2loc.c
<item>loclist_describe_location()  :  dwarf2loc.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
<item>current_target  :  target/target.c
<item>inferior_ptid  :  infcmd.c
<item>uiout  :  ui-out.c
</itemize>
</descrip>

<sect1>Local Function find_location_expression()

<p><tt>static gdb_byte* find_location_expression ( struct dwarf2_address_translation* baton, size_t* locexpr_length, CORE_ADDR pc )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>dwarf2_read_address()  :  dwarf2expr.c
<item>extract_unsigned_integer()  :  findvar.c
<item>gdbarch_addr_bit()  :  gdbarch.c
<item>objfile_text_section_offset()  :  objfiles.c
<item>translate_debug_map_address()  :  dwarf2read.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>dwarf_expr_frame_base()  :  dwarf2loc.c
<item>loclist_read_variable()  :  dwarf2loc.c
<item>loclist_tracepoint_var_ref()  :  dwarf2loc.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
</itemize>
</descrip>

<sect1>Local Function locexpr_describe_location()

<p><tt>static int locexpr_describe_location ( struct symbol* symbol, struct ui_file* stream )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>dwarf2_read_address()  :  dwarf2expr.c
<item>fprintf_filtered()  :  utils.c
<item>gdbarch_dwarf2_reg_to_regnum()  :  gdbarch.c
<item>gdbarch_register_name()  :  gdbarch.c
<item>new_dwarf_expr_context()  :  dwarf2expr.c
<item>paddr_nz()  :  utils.c
<item>print_single_dwarf_location()  :  dwarf2loc.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>dwarf2loc.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>dwarf_expr_frame_base()  :  dwarf2loc.c
<item>dwarf_expr_read_mem()  :  dwarf2loc.c
<item>dwarf_expr_read_reg()  :  dwarf2loc.c
<item>dwarf_expr_tls_address()  :  dwarf2loc.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
</itemize>
</descrip>

<sect1>Local Function locexpr_read_needs_frame()

<p><tt>static int locexpr_read_needs_frame ( struct symbol* symbol )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>dwarf2_loc_desc_needs_frame()  :  dwarf2loc.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>dwarf2loc.c
</itemize>
</descrip>

<sect1>Local Function locexpr_read_variable()

<p><tt>static struct value* locexpr_read_variable ( struct symbol* symbol, struct frame_info* frame )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>dwarf2_evaluate_loc_desc()  :  dwarf2loc.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>dwarf2loc.c
</itemize>
</descrip>

<sect1>Local Function locexpr_tracepoint_var_ref()

<p><tt>static void locexpr_tracepoint_var_ref ( struct symbol* symbol, struct agent_expr* ax, struct axs_value* value )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>dwarf2_tracepoint_var_ref()  :  dwarf2loc.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>dwarf2loc.c
</itemize>
</descrip>

<sect1>Local Function loclist_describe_location()

<p><tt>static int loclist_describe_location ( struct symbol* symbol, struct ui_file* stream )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>dwarf2_read_address()  :  dwarf2expr.c
<item>extract_unsigned_integer()  :  findvar.c
<item>fprintf_filtered()  :  utils.c
<item>free_dwarf_expr_context()  :  dwarf2expr.c
<item>gdbarch_addr_bit()  :  gdbarch.c
<item>new_dwarf_expr_context()  :  dwarf2expr.c
<item>objfile_text_section_offset()  :  objfiles.c
<item>paddr_nz()  :  utils.c
<item>print_single_dwarf_location()  :  dwarf2loc.c
<item>translate_debug_map_address()  :  dwarf2read.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>dwarf2loc.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>dwarf_expr_frame_base()  :  dwarf2loc.c
<item>dwarf_expr_read_mem()  :  dwarf2loc.c
<item>dwarf_expr_read_reg()  :  dwarf2loc.c
<item>dwarf_expr_tls_address()  :  dwarf2loc.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
</itemize>
</descrip>

<sect1>Local Function loclist_read_needs_frame()

<p><tt>static int loclist_read_needs_frame ( struct symbol* symbol )</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>dwarf2loc.c
</itemize>
</descrip>

<sect1>Local Function loclist_read_variable()

<p><tt>static struct value* loclist_read_variable ( struct symbol* symbol, struct frame_info* frame )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>allocate_value()  :  value.c
<item>deprecated_value_lval_hack()  :  value.c
<item>dwarf2_evaluate_loc_desc()  :  dwarf2loc.c
<item>find_location_expression()  :  dwarf2loc.c
<item>get_frame_pc()  :  frame.c
<item>set_value_optimized_out()  :  value.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>dwarf2loc.c
</itemize>
</descrip>

<sect1>Local Function loclist_tracepoint_var_ref()

<p><tt>static void loclist_tracepoint_var_ref ( struct symbol* symbol, struct agent_expr* ax, struct axs_value* value )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>dwarf2_tracepoint_var_ref()  :  dwarf2loc.c
<item>error()  :  utils.c
<item>find_location_expression()  :  dwarf2loc.c
<item>symbol_natural_name()  :  symtab.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>dwarf2loc.c
</itemize>
</descrip>

<sect1>Local Function needs_frame_frame_base()

<p><tt>static void needs_frame_frame_base ( void* baton, gdb_byte** start, size_t* length )</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>dwarf2_loc_desc_needs_frame()  :  dwarf2loc.c
</itemize>
</descrip>

<sect1>Local Function needs_frame_read_mem()

<p><tt>static void needs_frame_read_mem ( void* baton, gdb_byte* buf, CORE_ADDR addr, size_t len )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>__builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>dwarf2_loc_desc_needs_frame()  :  dwarf2loc.c
</itemize>
</descrip>

<sect1>Local Function needs_frame_read_reg()

<p><tt>static CORE_ADDR needs_frame_read_reg ( void* baton, int regnum )</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>dwarf2_loc_desc_needs_frame()  :  dwarf2loc.c
</itemize>
</descrip>

<sect1>Local Function needs_frame_tls_address()

<p><tt>static CORE_ADDR needs_frame_tls_address ( void* baton, CORE_ADDR offset )</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>dwarf2_loc_desc_needs_frame()  :  dwarf2loc.c
</itemize>
</descrip>

<sect1>Local Function print_single_dwarf_location()

<p><tt>static void print_single_dwarf_location ( struct ui_file* stream, gdb_byte** loc_ptr, gdb_byte* op_end, struct dwarf_expr_context* ctx )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>dwarf2loc.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>add_piece()  :  dwarf2expr.c
<item>dwarf2_read_address()  :  dwarf2expr.c
<item>dwarf_expr_fetch()  :  dwarf2expr.c
<item>dwarf_expr_pop()  :  dwarf2expr.c
<item>error()  :  utils.c
<item>extract_signed_integer()  :  findvar.c
<item>fprintf_filtered()  :  utils.c
<item>gdbarch_addr_bit()  :  gdbarch.c
<item>gdbarch_dwarf2_reg_to_regnum()  :  gdbarch.c
<item>gdbarch_register_name()  :  gdbarch.c
<item>internal_error()  :  utils.c
<item>paddr_nz()  :  utils.c
<item>read_sleb128()  :  dwarf2expr.c
<item>read_uleb128()  :  dwarf2expr.c
<item>signed_address_type()  :  dwarf2expr.c
<item>unsigned_address_type()  :  dwarf2expr.c
<item>value_as_long()  :  value.c
<item>value_binop()  :  valarith.c
<item>value_from_longest()  :  value.c
<item>__builtin_alloca()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>locexpr_describe_location()  :  dwarf2loc.c
<item>loclist_describe_location()  :  dwarf2loc.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
</itemize>
</descrip>

</article>
