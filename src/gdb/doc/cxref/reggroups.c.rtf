{\rtf\ansi
\deff0
{\fonttbl
{\f0\froman Times New Roman;}
{\f1\fmodern Courier New;}
}
{\stylesheet
{\s0\f0\fs24 Normal;}
{\s1\f0\fs40\b\sb400\sa200\keepn\keep Heading 1;}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Heading 2;}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Heading 3;}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Heading 4;}
{\s5\f1\fs20\ql\sb50\sa50 Code;}
}
{\info{\comment
 This RTF file generated by cxref (version 1.6e).
 cxref program (c) Andrew M. Bishop 1995-2014.
 Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF reggroups.c
 CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
}}
\paperw11880\paperh16848\margl1440\margr1440\margt1440\margb1440
\sectd\plain
\s0\f0\fs24
{\s1\f0\fs40\b\sb400\sa200\keepn\keep File reggroups.c\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Refs Var:\cell all_group\cell reggroups.c\cell\row
\cell float_group\cell reggroups.c\cell\row
\cell general_group\cell reggroups.c\cell\row
\cell restore_group\cell reggroups.c\cell\row
\cell save_group\cell reggroups.c\cell\row
\cell system_group\cell reggroups.c\cell\row
\cell vector_group\cell reggroups.c\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Included Files\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <errno.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <unistd.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_locale.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <locale.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../gdb/signals.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/symcat.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-file.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "xm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/xm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "nm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/i386/nm-i386.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/nm-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "tm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/tm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-tdep.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-tdep.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-thread-status.h"\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_types.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <inttypes.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_vm.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/kmod.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/tm-i386-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/fopen-bin.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdlib.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbarch.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "reggroups.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdbtypes.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_assert.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "regcache.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "command.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdbcmd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "command.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-out.h"\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Type definitions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct reggroup\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct reggroup}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 const char* name;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 enum reggroup_type type;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct reggroup_el\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct reggroup_el}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct reggroup* group;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct reggroup_el* next;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct reggroups\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct reggroups}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct reggroup_el* first;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct reggroup_el** last;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Variables\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable general_reggroup\par}
{\s5\f1\fs20\ql\sb50\sa50 struct reggroup* const general_reggroup\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell gdbarch.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell regcache.c\cell\cell\row
\cell reggroups.c\cell\cell\row
\cell stack.c\cell\cell\row
Used in:\cell _initialize_reggroup()\cell reggroups.c\cell\row
\cell default_print_registers_info()\cell infcmd.c\cell\row
\cell default_register_reggroup_p()\cell reggroups.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable float_reggroup\par}
{\s5\f1\fs20\ql\sb50\sa50 struct reggroup* const float_reggroup\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell gdbarch.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell regcache.c\cell\cell\row
\cell reggroups.c\cell\cell\row
\cell stack.c\cell\cell\row
Used in:\cell _initialize_reggroup()\cell reggroups.c\cell\row
\cell default_register_reggroup_p()\cell reggroups.c\cell\row
\cell print_float_info()\cell infcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable system_reggroup\par}
{\s5\f1\fs20\ql\sb50\sa50 struct reggroup* const system_reggroup\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell gdbarch.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell regcache.c\cell\cell\row
\cell reggroups.c\cell\cell\row
\cell stack.c\cell\cell\row
Used in:\cell _initialize_reggroup()\cell reggroups.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable vector_reggroup\par}
{\s5\f1\fs20\ql\sb50\sa50 struct reggroup* const vector_reggroup\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell gdbarch.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell regcache.c\cell\cell\row
\cell reggroups.c\cell\cell\row
\cell stack.c\cell\cell\row
Used in:\cell _initialize_reggroup()\cell reggroups.c\cell\row
\cell default_register_reggroup_p()\cell reggroups.c\cell\row
\cell print_vector_info()\cell infcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable all_reggroup\par}
{\s5\f1\fs20\ql\sb50\sa50 struct reggroup* const all_reggroup\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell gdbarch.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell regcache.c\cell\cell\row
\cell reggroups.c\cell\cell\row
\cell stack.c\cell\cell\row
Used in:\cell _initialize_reggroup()\cell reggroups.c\cell\row
\cell default_print_registers_info()\cell infcmd.c\cell\row
\cell default_register_reggroup_p()\cell reggroups.c\cell\row
\cell frame_info()\cell stack.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable save_reggroup\par}
{\s5\f1\fs20\ql\sb50\sa50 struct reggroup* const save_reggroup\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell gdbarch.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell regcache.c\cell\cell\row
\cell reggroups.c\cell\cell\row
\cell stack.c\cell\cell\row
Used in:\cell _initialize_reggroup()\cell reggroups.c\cell\row
\cell default_register_reggroup_p()\cell reggroups.c\cell\row
\cell regcache_save()\cell regcache.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable restore_reggroup\par}
{\s5\f1\fs20\ql\sb50\sa50 struct reggroup* const restore_reggroup\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell gdbarch.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell regcache.c\cell\cell\row
\cell reggroups.c\cell\cell\row
\cell stack.c\cell\cell\row
Used in:\cell _initialize_reggroup()\cell reggroups.c\cell\row
\cell default_register_reggroup_p()\cell reggroups.c\cell\row
\cell regcache_restore()\cell regcache.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable reggroups_data\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct gdbarch_data* reggroups_data\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_reggroup()\cell\cell\row
\cell reggroup_add()\cell\cell\row
\cell reggroup_next()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable default_groups\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct reggroups default_groups\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_reggroup()\cell\cell\row
\cell reggroup_next()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable general_group\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct reggroup general_group\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell reggroups.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable float_group\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct reggroup float_group\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell reggroups.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable system_group\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct reggroup system_group\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell reggroups.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable vector_group\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct reggroup vector_group\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell reggroups.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable all_group\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct reggroup all_group\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell reggroups.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable save_group\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct reggroup save_group\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell reggroups.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable restore_group\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct reggroup restore_group\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell reggroups.c\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Functions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function _initialize_reggroup()\par}
{\s5\f1\fs20\ql\sb50\sa50 void _initialize_reggroup ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell reggroups.c\cell\cell\row
Calls: \cell add_group()\cell reggroups.c\cell\row
\cell gdbarch_data_register_post_init()\cell gdbarch.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  add_cmd()\cell\cell\row
Refs Func:\cell maintenance_print_reggroups()\cell reggroups.c\cell\row
\cell reggroups_init()\cell reggroups.c\cell\row
Refs Var:\cell all_reggroup\cell reggroups.c\cell\row
\cell default_groups\cell reggroups.c\cell\row
\cell float_reggroup\cell reggroups.c\cell\row
\cell general_reggroup\cell reggroups.c\cell\row
\cell reggroups_data\cell reggroups.c\cell\row
\cell restore_reggroup\cell reggroups.c\cell\row
\cell save_reggroup\cell reggroups.c\cell\row
\cell system_reggroup\cell reggroups.c\cell\row
\cell vector_reggroup\cell reggroups.c\cell\row
\cell  maintenanceprintlist\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function default_register_reggroup_p()\par}
{\s5\f1\fs20\ql\sb50\sa50 int default_register_reggroup_p ( struct gdbarch* gdbarch, int regnum, struct reggroup* group )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell reggroups.h\cell\cell\row
Calls: \cell gdbarch_num_regs()\cell gdbarch.c\cell\row
\cell gdbarch_register_name()\cell gdbarch.c\cell\row
\cell register_type()\cell regcache.c\cell\row
Used in:\cell gdbarch.c\cell\cell\row
\cell gdbarch_alloc()\cell gdbarch.c\cell\row
Refs Var:\cell all_reggroup\cell reggroups.c\cell\row
\cell current_gdbarch\cell gdbarch.c\cell\row
\cell float_reggroup\cell reggroups.c\cell\row
\cell general_reggroup\cell reggroups.c\cell\row
\cell restore_reggroup\cell reggroups.c\cell\row
\cell save_reggroup\cell reggroups.c\cell\row
\cell vector_reggroup\cell reggroups.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function reggroup_add()\par}
{\s5\f1\fs20\ql\sb50\sa50 void reggroup_add ( struct gdbarch* gdbarch, struct reggroup* group )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell reggroups.h\cell\cell\row
Calls: \cell add_group()\cell reggroups.c\cell\row
\cell deprecated_set_gdbarch_data()\cell gdbarch.c\cell\row
\cell gdbarch_obstack_zalloc()\cell gdbarch.c\cell\row
\cell new_gdbarch_data()\cell gdbarch.c\cell\row
\cell reggroups_init()\cell reggroups.c\cell\row
Refs Var:\cell reggroups_data\cell reggroups.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function reggroup_name()\par}
{\s5\f1\fs20\ql\sb50\sa50 const char* reggroup_name ( struct reggroup* group )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell reggroups.h\cell\cell\row
Called by:\cell regcache_dump()\cell regcache.c\cell\row
\cell reggroups_dump()\cell reggroups.c\cell\row
\cell registers_info()\cell infcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function reggroup_new()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct reggroup* reggroup_new ( const char* name, enum reggroup_type type )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell reggroups.h\cell\cell\row
Calls: \cell xmalloc()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function reggroup_next()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct reggroup* reggroup_next ( struct gdbarch* gdbarch, struct reggroup* last )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell reggroups.h\cell\cell\row
Calls: \cell internal_error()\cell utils.c\cell\row
\cell new_gdbarch_data()\cell gdbarch.c\cell\row
Called by:\cell regcache_dump()\cell regcache.c\cell\row
\cell reggroups_dump()\cell reggroups.c\cell\row
\cell registers_info()\cell infcmd.c\cell\row
Refs Var:\cell default_groups\cell reggroups.c\cell\row
\cell reggroups_data\cell reggroups.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function reggroup_type()\par}
{\s5\f1\fs20\ql\sb50\sa50 enum reggroup_type reggroup_type ( struct reggroup* group )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell reggroups.h\cell\cell\row
Called by:\cell reggroups_dump()\cell reggroups.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function add_group()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void add_group ( struct reggroups* groups, struct reggroup* group, struct reggroup_el* el )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell internal_error()\cell utils.c\cell\row
Called by:\cell _initialize_reggroup()\cell reggroups.c\cell\row
\cell reggroup_add()\cell reggroups.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function maintenance_print_reggroups()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void maintenance_print_reggroups ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell gdb_fopen()\cell ui-file.c\cell\row
\cell perror_with_name()\cell utils.c\cell\row
\cell reggroups_dump()\cell reggroups.c\cell\row
\cell ui_file_delete()\cell ui-file.c\cell\row
Used in:\cell _initialize_reggroup()\cell reggroups.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\cell gdb_stdout\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function reggroups_dump()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void reggroups_dump ( struct gdbarch* gdbarch, struct ui_file* file )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell fprintf_unfiltered()\cell utils.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell reggroup_name()\cell reggroups.c\cell\row
\cell reggroup_next()\cell reggroups.c\cell\row
\cell reggroup_type()\cell reggroups.c\cell\row
Called by:\cell maintenance_print_reggroups()\cell reggroups.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function reggroups_init()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void* reggroups_init ( struct gdbarch* gdbarch )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell gdbarch_obstack_zalloc()\cell gdbarch.c\cell\row
Called by:\cell reggroup_add()\cell reggroups.c\cell\row
Used in:\cell _initialize_reggroup()\cell reggroups.c\cell\row
\intbl0
}
