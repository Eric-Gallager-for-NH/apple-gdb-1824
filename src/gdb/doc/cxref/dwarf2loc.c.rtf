{\rtf\ansi
\deff0
{\fonttbl
{\f0\froman Times New Roman;}
{\f1\fmodern Courier New;}
}
{\stylesheet
{\s0\f0\fs24 Normal;}
{\s1\f0\fs40\b\sb400\sa200\keepn\keep Heading 1;}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Heading 2;}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Heading 3;}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Heading 4;}
{\s5\f1\fs20\ql\sb50\sa50 Code;}
}
{\info{\comment
 This RTF file generated by cxref (version 1.6e).
 cxref program (c) Andrew M. Bishop 1995-2014.
 Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF dwarf2loc.c
 CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
}}
\paperw11880\paperh16848\margl1440\margr1440\margt1440\margb1440
\sectd\plain
\s0\f0\fs24
{\s1\f0\fs40\b\sb400\sa200\keepn\keep File dwarf2loc.c\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Refs Func:\cell locexpr_describe_location()\cell dwarf2loc.c\cell\row
\cell locexpr_read_needs_frame()\cell dwarf2loc.c\cell\row
\cell locexpr_read_variable()\cell dwarf2loc.c\cell\row
\cell locexpr_tracepoint_var_ref()\cell dwarf2loc.c\cell\row
\cell loclist_describe_location()\cell dwarf2loc.c\cell\row
\cell loclist_read_needs_frame()\cell dwarf2loc.c\cell\row
\cell loclist_read_variable()\cell dwarf2loc.c\cell\row
\cell loclist_tracepoint_var_ref()\cell dwarf2loc.c\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Included Files\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <errno.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <unistd.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_locale.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <locale.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../gdb/signals.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/symcat.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-file.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "xm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/xm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "nm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/i386/nm-i386.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/nm-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "tm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/tm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-tdep.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-tdep.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-thread-status.h"\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_types.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <inttypes.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_vm.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/kmod.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/tm-i386-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/fopen-bin.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdlib.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbarch.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "ui-out.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/floatformat.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_regex.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbtypes.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "expression.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdbcore.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "target.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "dcache.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "memattr.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "inferior.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "breakpoint.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "gdb-events.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "target.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "ax.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "ax-gdb.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "regcache.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "objfiles.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <uuid/uuid.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_obstack.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/obstack.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symfile.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "inlining.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <block.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sqlite3.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "exceptions.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-out.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <setjmp.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../include/elf/dwarf2.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "dwarf2expr.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "dwarf2loc.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "dwarf2read.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "dwarf2loc.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "dwarf2read.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_string.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Type definitions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct dwarf_expr_baton\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct dwarf_expr_baton}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct frame_info* frame;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct objfile* objfile;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct needs_frame_baton\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct needs_frame_baton}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int needs_frame;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Variables\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable dwarf2_locexpr_funcs\par}
{\s5\f1\fs20\ql\sb50\sa50 const struct symbol_ops dwarf2_locexpr_funcs\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell dwarf2-frame.c\cell\cell\row
\cell dwarf2expr.c\cell\cell\row
\cell dwarf2loc.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
Used in:\cell dwarf2_symbol_mark_computed()\cell dwarf2read.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable dwarf2_loclist_funcs\par}
{\s5\f1\fs20\ql\sb50\sa50 const struct symbol_ops dwarf2_loclist_funcs\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell dwarf2-frame.c\cell\cell\row
\cell dwarf2expr.c\cell\cell\row
\cell dwarf2loc.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
Used in:\cell dwarf2_symbol_mark_computed()\cell dwarf2read.c\cell\row
\cell dwarf_expr_frame_base()\cell dwarf2loc.c\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Functions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function dwarf2_evaluate_loc_desc()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct value* dwarf2_evaluate_loc_desc ( struct symbol* var, struct frame_info* frame, gdb_byte* data, unsigned short size, struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell allocate_value()\cell value.c\cell\row
\cell deprecated_value_address_hack()\cell value.c\cell\row
\cell deprecated_value_lval_hack()\cell value.c\cell\row
\cell dwarf_expr_eval()\cell dwarf2expr.c\cell\row
\cell dwarf_expr_fetch()\cell dwarf2expr.c\cell\row
\cell free_dwarf_expr_context()\cell dwarf2expr.c\cell\row
\cell gdbarch_convert_register_p()\cell gdbarch.c\cell\row
\cell gdbarch_dwarf2_reg_to_regnum()\cell gdbarch.c\cell\row
\cell get_frame_register()\cell frame.c\cell\row
\cell new_dwarf_expr_context()\cell dwarf2expr.c\cell\row
\cell read_memory()\cell corefile.c\cell\row
\cell set_value_lazy()\cell value.c\cell\row
\cell set_value_optimized_out()\cell value.c\cell\row
\cell set_var_status()\cell value.c\cell\row
\cell value_contents_raw()\cell value.c\cell\row
\cell value_from_register()\cell findvar.c\cell\row
\cell  __builtin___memcpy_chk(), __builtin_object_size(), __inline_memcpy_chk()\cell\cell\row
Called by:\cell locexpr_read_variable()\cell dwarf2loc.c\cell\row
\cell loclist_read_variable()\cell dwarf2loc.c\cell\row
Refs Func:\cell dwarf_expr_frame_base()\cell dwarf2loc.c\cell\row
\cell dwarf_expr_read_mem()\cell dwarf2loc.c\cell\row
\cell dwarf_expr_read_reg()\cell dwarf2loc.c\cell\row
\cell dwarf_expr_tls_address()\cell dwarf2loc.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function dwarf2_loc_desc_needs_frame()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int dwarf2_loc_desc_needs_frame ( gdb_byte* data, unsigned short size )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell dwarf_expr_eval()\cell dwarf2expr.c\cell\row
\cell free_dwarf_expr_context()\cell dwarf2expr.c\cell\row
\cell new_dwarf_expr_context()\cell dwarf2expr.c\cell\row
Called by:\cell locexpr_read_needs_frame()\cell dwarf2loc.c\cell\row
Refs Func:\cell needs_frame_frame_base()\cell dwarf2loc.c\cell\row
\cell needs_frame_read_mem()\cell dwarf2loc.c\cell\row
\cell needs_frame_read_reg()\cell dwarf2loc.c\cell\row
\cell needs_frame_tls_address()\cell dwarf2loc.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function dwarf2_tracepoint_var_ref()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void dwarf2_tracepoint_var_ref ( struct symbol* symbol, struct agent_expr* ax, struct axs_value* value, gdb_byte* data, int size )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell ax_const_l()\cell ax-general.c\cell\row
\cell ax_reg()\cell ax-general.c\cell\row
\cell ax_simple()\cell ax-general.c\cell\row
\cell error()\cell utils.c\cell\row
\cell gdbarch_virtual_frame_pointer()\cell gdbarch.c\cell\row
\cell read_sleb128()\cell dwarf2expr.c\cell\row
\cell read_uleb128()\cell dwarf2expr.c\cell\row
\cell symbol_natural_name()\cell symtab.c\cell\row
Called by:\cell locexpr_tracepoint_var_ref()\cell dwarf2loc.c\cell\row
\cell loclist_tracepoint_var_ref()\cell dwarf2loc.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\cell demangle\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function dwarf_expr_frame_base()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void dwarf_expr_frame_base ( void* baton, gdb_byte** start, size_t* length )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell error()\cell utils.c\cell\row
\cell find_location_expression()\cell dwarf2loc.c\cell\row
\cell get_frame_function()\cell blockframe.c\cell\row
\cell get_frame_pc()\cell frame.c\cell\row
\cell symbol_natural_name()\cell symtab.c\cell\row
Used in:\cell dwarf2_evaluate_loc_desc()\cell dwarf2loc.c\cell\row
\cell locexpr_describe_location()\cell dwarf2loc.c\cell\row
\cell loclist_describe_location()\cell dwarf2loc.c\cell\row
Refs Var:\cell dwarf2_loclist_funcs\cell dwarf2loc.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function dwarf_expr_read_mem()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void dwarf_expr_read_mem ( void* baton, gdb_byte* buf, CORE_ADDR addr, size_t len )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell read_memory()\cell corefile.c\cell\row
Used in:\cell dwarf2_evaluate_loc_desc()\cell dwarf2loc.c\cell\row
\cell locexpr_describe_location()\cell dwarf2loc.c\cell\row
\cell loclist_describe_location()\cell dwarf2loc.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function dwarf_expr_read_reg()\par}
{\s5\f1\fs20\ql\sb50\sa50 static CORE_ADDR dwarf_expr_read_reg ( void* baton, int dwarf_regnum )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell extract_unsigned_integer()\cell findvar.c\cell\row
\cell frame_register()\cell frame.c\cell\row
\cell gdbarch_dwarf2_reg_to_regnum()\cell gdbarch.c\cell\row
\cell register_size()\cell regcache.c\cell\row
\cell  __builtin_alloca()\cell\cell\row
Used in:\cell dwarf2_evaluate_loc_desc()\cell dwarf2loc.c\cell\row
\cell locexpr_describe_location()\cell dwarf2loc.c\cell\row
\cell loclist_describe_location()\cell dwarf2loc.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function dwarf_expr_tls_address()\par}
{\s5\f1\fs20\ql\sb50\sa50 static CORE_ADDR dwarf_expr_tls_address ( void* baton, CORE_ADDR offset )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell error()\cell utils.c\cell\row
\cell gdbarch_fetch_tls_load_module_address()\cell gdbarch.c\cell\row
\cell gdbarch_fetch_tls_load_module_address_p()\cell gdbarch.c\cell\row
\cell  exceptions_state_mc_action_iter(), exceptions_state_mc_action_iter_1(), exceptions_state_mc_init(), sigsetjmp(), throw_error(), throw_exception()\cell\cell\row
Used in:\cell dwarf2_evaluate_loc_desc()\cell dwarf2loc.c\cell\row
\cell locexpr_describe_location()\cell dwarf2loc.c\cell\row
\cell loclist_describe_location()\cell dwarf2loc.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\cell current_target\cell target/target.c\cell\row
\cell inferior_ptid\cell infcmd.c\cell\row
\cell uiout\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function find_location_expression()\par}
{\s5\f1\fs20\ql\sb50\sa50 static gdb_byte* find_location_expression ( struct dwarf2_address_translation* baton, size_t* locexpr_length, CORE_ADDR pc )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell dwarf2_read_address()\cell dwarf2expr.c\cell\row
\cell extract_unsigned_integer()\cell findvar.c\cell\row
\cell gdbarch_addr_bit()\cell gdbarch.c\cell\row
\cell objfile_text_section_offset()\cell objfiles.c\cell\row
\cell translate_debug_map_address()\cell dwarf2read.c\cell\row
Called by:\cell dwarf_expr_frame_base()\cell dwarf2loc.c\cell\row
\cell loclist_read_variable()\cell dwarf2loc.c\cell\row
\cell loclist_tracepoint_var_ref()\cell dwarf2loc.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function locexpr_describe_location()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int locexpr_describe_location ( struct symbol* symbol, struct ui_file* stream )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell dwarf2_read_address()\cell dwarf2expr.c\cell\row
\cell fprintf_filtered()\cell utils.c\cell\row
\cell gdbarch_dwarf2_reg_to_regnum()\cell gdbarch.c\cell\row
\cell gdbarch_register_name()\cell gdbarch.c\cell\row
\cell new_dwarf_expr_context()\cell dwarf2expr.c\cell\row
\cell paddr_nz()\cell utils.c\cell\row
\cell print_single_dwarf_location()\cell dwarf2loc.c\cell\row
Used in:\cell dwarf2loc.c\cell\cell\row
Refs Func:\cell dwarf_expr_frame_base()\cell dwarf2loc.c\cell\row
\cell dwarf_expr_read_mem()\cell dwarf2loc.c\cell\row
\cell dwarf_expr_read_reg()\cell dwarf2loc.c\cell\row
\cell dwarf_expr_tls_address()\cell dwarf2loc.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function locexpr_read_needs_frame()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int locexpr_read_needs_frame ( struct symbol* symbol )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell dwarf2_loc_desc_needs_frame()\cell dwarf2loc.c\cell\row
Used in:\cell dwarf2loc.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function locexpr_read_variable()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct value* locexpr_read_variable ( struct symbol* symbol, struct frame_info* frame )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell dwarf2_evaluate_loc_desc()\cell dwarf2loc.c\cell\row
Used in:\cell dwarf2loc.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function locexpr_tracepoint_var_ref()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void locexpr_tracepoint_var_ref ( struct symbol* symbol, struct agent_expr* ax, struct axs_value* value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell dwarf2_tracepoint_var_ref()\cell dwarf2loc.c\cell\row
Used in:\cell dwarf2loc.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function loclist_describe_location()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int loclist_describe_location ( struct symbol* symbol, struct ui_file* stream )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell dwarf2_read_address()\cell dwarf2expr.c\cell\row
\cell extract_unsigned_integer()\cell findvar.c\cell\row
\cell fprintf_filtered()\cell utils.c\cell\row
\cell free_dwarf_expr_context()\cell dwarf2expr.c\cell\row
\cell gdbarch_addr_bit()\cell gdbarch.c\cell\row
\cell new_dwarf_expr_context()\cell dwarf2expr.c\cell\row
\cell objfile_text_section_offset()\cell objfiles.c\cell\row
\cell paddr_nz()\cell utils.c\cell\row
\cell print_single_dwarf_location()\cell dwarf2loc.c\cell\row
\cell translate_debug_map_address()\cell dwarf2read.c\cell\row
Used in:\cell dwarf2loc.c\cell\cell\row
Refs Func:\cell dwarf_expr_frame_base()\cell dwarf2loc.c\cell\row
\cell dwarf_expr_read_mem()\cell dwarf2loc.c\cell\row
\cell dwarf_expr_read_reg()\cell dwarf2loc.c\cell\row
\cell dwarf_expr_tls_address()\cell dwarf2loc.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function loclist_read_needs_frame()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int loclist_read_needs_frame ( struct symbol* symbol )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell dwarf2loc.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function loclist_read_variable()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct value* loclist_read_variable ( struct symbol* symbol, struct frame_info* frame )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell allocate_value()\cell value.c\cell\row
\cell deprecated_value_lval_hack()\cell value.c\cell\row
\cell dwarf2_evaluate_loc_desc()\cell dwarf2loc.c\cell\row
\cell find_location_expression()\cell dwarf2loc.c\cell\row
\cell get_frame_pc()\cell frame.c\cell\row
\cell set_value_optimized_out()\cell value.c\cell\row
Used in:\cell dwarf2loc.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function loclist_tracepoint_var_ref()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void loclist_tracepoint_var_ref ( struct symbol* symbol, struct agent_expr* ax, struct axs_value* value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell dwarf2_tracepoint_var_ref()\cell dwarf2loc.c\cell\row
\cell error()\cell utils.c\cell\row
\cell find_location_expression()\cell dwarf2loc.c\cell\row
\cell symbol_natural_name()\cell symtab.c\cell\row
Used in:\cell dwarf2loc.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function needs_frame_frame_base()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void needs_frame_frame_base ( void* baton, gdb_byte** start, size_t* length )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell dwarf2_loc_desc_needs_frame()\cell dwarf2loc.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function needs_frame_read_mem()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void needs_frame_read_mem ( void* baton, gdb_byte* buf, CORE_ADDR addr, size_t len )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk()\cell\cell\row
Used in:\cell dwarf2_loc_desc_needs_frame()\cell dwarf2loc.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function needs_frame_read_reg()\par}
{\s5\f1\fs20\ql\sb50\sa50 static CORE_ADDR needs_frame_read_reg ( void* baton, int regnum )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell dwarf2_loc_desc_needs_frame()\cell dwarf2loc.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function needs_frame_tls_address()\par}
{\s5\f1\fs20\ql\sb50\sa50 static CORE_ADDR needs_frame_tls_address ( void* baton, CORE_ADDR offset )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell dwarf2_loc_desc_needs_frame()\cell dwarf2loc.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function print_single_dwarf_location()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void print_single_dwarf_location ( struct ui_file* stream, gdb_byte** loc_ptr, gdb_byte* op_end, struct dwarf_expr_context* ctx )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell dwarf2loc.c\cell\cell\row
Calls: \cell add_piece()\cell dwarf2expr.c\cell\row
\cell dwarf2_read_address()\cell dwarf2expr.c\cell\row
\cell dwarf_expr_fetch()\cell dwarf2expr.c\cell\row
\cell dwarf_expr_pop()\cell dwarf2expr.c\cell\row
\cell error()\cell utils.c\cell\row
\cell extract_signed_integer()\cell findvar.c\cell\row
\cell fprintf_filtered()\cell utils.c\cell\row
\cell gdbarch_addr_bit()\cell gdbarch.c\cell\row
\cell gdbarch_dwarf2_reg_to_regnum()\cell gdbarch.c\cell\row
\cell gdbarch_register_name()\cell gdbarch.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell paddr_nz()\cell utils.c\cell\row
\cell read_sleb128()\cell dwarf2expr.c\cell\row
\cell read_uleb128()\cell dwarf2expr.c\cell\row
\cell signed_address_type()\cell dwarf2expr.c\cell\row
\cell unsigned_address_type()\cell dwarf2expr.c\cell\row
\cell value_as_long()\cell value.c\cell\row
\cell value_binop()\cell valarith.c\cell\row
\cell value_from_longest()\cell value.c\cell\row
\cell  __builtin_alloca()\cell\cell\row
Called by:\cell locexpr_describe_location()\cell dwarf2loc.c\cell\row
\cell loclist_describe_location()\cell dwarf2loc.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\intbl0
}
