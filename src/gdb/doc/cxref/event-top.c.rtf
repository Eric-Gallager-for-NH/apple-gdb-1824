{\rtf\ansi
\deff0
{\fonttbl
{\f0\froman Times New Roman;}
{\f1\fmodern Courier New;}
}
{\stylesheet
{\s0\f0\fs24 Normal;}
{\s1\f0\fs40\b\sb400\sa200\keepn\keep Heading 1;}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Heading 2;}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Heading 3;}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Heading 4;}
{\s5\f1\fs20\ql\sb50\sa50 Code;}
}
{\info{\comment
 This RTF file generated by cxref (version 1.6e).
 cxref program (c) Andrew M. Bishop 1995-2014.
 Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF event-top.c
 CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
}}
\paperw11880\paperh16848\margl1440\margr1440\margt1440\margb1440
\sectd\plain
\s0\f0\fs24
{\s1\f0\fs40\b\sb400\sa200\keepn\keep File event-top.c\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Included Files\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <errno.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <unistd.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_locale.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <locale.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../gdb/signals.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/symcat.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-file.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "xm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/xm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "nm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/i386/nm-i386.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/nm-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "tm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/tm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-tdep.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-tdep.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-thread-status.h"\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_types.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <inttypes.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_vm.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/kmod.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/tm-i386-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/fopen-bin.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdlib.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbarch.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "top.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "inferior.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "breakpoint.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/floatformat.h"\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_regex.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "gdbtypes.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "expression.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "gdb-events.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "target.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "dcache.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "memattr.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "target.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "terminal.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <fcntl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sgtty.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/ioctl.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "event-loop.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "event-top.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "interps.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "exceptions.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "ui-out.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <setjmp.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "exceptions.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdbcmd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "command.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-out.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../readline/readline.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../readline/rlstdc.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../readline/rltypedefs.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../readline/keymaps.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../readline/tilde.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../readline/history.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../readline/rlstdc.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <readline/rltypedefs.h>\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Preprocessor definitions\par}
{\s5\f1\fs20\ql\sb50\sa50 #define SERVER_COMMAND_LENGTH 7\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Type definitions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct readline_input_state\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct readline_input_state}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 char* linebuffer;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 char* linebuffer_ptr;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Variables\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable gdb_prompt_is_optimized\par}
{\s5\f1\fs20\ql\sb50\sa50 int gdb_prompt_is_optimized\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell event-top.c\cell\cell\row
\cell frame.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell infrun.c\cell\cell\row
\cell interps.c\cell\cell\row
\cell main.c\cell\cell\row
\cell objc-exp.c\cell\cell\row
\cell p-exp.c\cell\cell\row
\cell source.c\cell\cell\row
\cell top.c\cell\cell\row
Used in:\cell adjust_prompts_for_optimized_code()\cell event-top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable async_command_editing_p\par}
{\s5\f1\fs20\ql\sb50\sa50 int async_command_editing_p\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell event-loop.c\cell\cell\row
\cell event-top.c\cell\cell\row
\cell inf-loop.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell infrun.c\cell\cell\row
\cell interps.c\cell\cell\row
\cell remote.c\cell\cell\row
\cell top.c\cell\cell\row
\cell utils.c\cell\cell\row
Used in:\cell change_line_handler()\cell event-top.c\cell\row
\cell cli_command_loop()\cell event-top.c\cell\row
\cell display_gdb_prompt()\cell event-top.c\cell\row
\cell gdb_setup_readline()\cell event-top.c\cell\row
\cell init_main()\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable exec_done_display_p\par}
{\s5\f1\fs20\ql\sb50\sa50 int exec_done_display_p\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell event-loop.c\cell\cell\row
\cell event-top.c\cell\cell\row
\cell inf-loop.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell infrun.c\cell\cell\row
\cell interps.c\cell\cell\row
\cell remote.c\cell\cell\row
\cell top.c\cell\cell\row
\cell utils.c\cell\cell\row
Used in:\cell inferior_event_handler()\cell inf-loop.c\cell\row
\cell init_main()\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable async_annotation_suffix\par}
{\s5\f1\fs20\ql\sb50\sa50 const char* async_annotation_suffix\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell event-loop.c\cell\cell\row
\cell event-top.c\cell\cell\row
\cell inf-loop.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell infrun.c\cell\cell\row
\cell interps.c\cell\cell\row
\cell remote.c\cell\cell\row
\cell top.c\cell\cell\row
\cell utils.c\cell\cell\row
Used in:\cell change_annotation_level()\cell event-top.c\cell\row
\cell command_line_handler()\cell event-top.c\cell\row
\cell init_main()\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable new_async_prompt\par}
{\s5\f1\fs20\ql\sb50\sa50 char* new_async_prompt\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell event-loop.c\cell\cell\row
\cell event-top.c\cell\cell\row
\cell inf-loop.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell infrun.c\cell\cell\row
\cell interps.c\cell\cell\row
\cell remote.c\cell\cell\row
\cell top.c\cell\cell\row
\cell utils.c\cell\cell\row
Used in:\cell init_main()\cell top.c\cell\row
\cell set_async_prompt()\cell event-top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable the_prompts\par}
{\s5\f1\fs20\ql\sb50\sa50 struct prompts the_prompts\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell event-loop.c\cell\cell\row
\cell event-top.c\cell\cell\row
\cell inf-loop.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell infrun.c\cell\cell\row
\cell interps.c\cell\cell\row
\cell remote.c\cell\cell\row
\cell top.c\cell\cell\row
\cell utils.c\cell\cell\row
Used in:\cell adjust_prompts_for_optimized_code()\cell event-top.c\cell\row
\cell change_annotation_level()\cell event-top.c\cell\row
\cell cli_command_loop()\cell event-top.c\cell\row
\cell display_gdb_prompt()\cell event-top.c\cell\row
\cell get_prompt()\cell top.c\cell\row
\cell init_main()\cell top.c\cell\row
\cell pop_prompt()\cell event-top.c\cell\row
\cell push_prompt()\cell event-top.c\cell\row
\cell set_async_prompt()\cell event-top.c\cell\row
\cell set_prompt()\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable call_readline\par}
{\s5\f1\fs20\ql\sb50\sa50 void (*call_readline)(void*)\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell event-loop.c\cell\cell\row
\cell event-top.c\cell\cell\row
\cell inf-loop.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell infrun.c\cell\cell\row
\cell interps.c\cell\cell\row
\cell remote.c\cell\cell\row
\cell top.c\cell\cell\row
\cell utils.c\cell\cell\row
Used in:\cell change_line_handler()\cell event-top.c\cell\row
\cell gdb_setup_readline()\cell event-top.c\cell\row
\cell stdin_event_handler()\cell event-top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable input_handler\par}
{\s5\f1\fs20\ql\sb50\sa50 void (*input_handler)(char*)\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell event-loop.c\cell\cell\row
\cell event-top.c\cell\cell\row
\cell inf-loop.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell infrun.c\cell\cell\row
\cell interps.c\cell\cell\row
\cell remote.c\cell\cell\row
\cell top.c\cell\cell\row
\cell utils.c\cell\cell\row
Used in:\cell change_line_handler()\cell event-top.c\cell\row
\cell cli_command_loop()\cell event-top.c\cell\row
\cell display_gdb_prompt()\cell event-top.c\cell\row
\cell gdb_readline2()\cell event-top.c\cell\row
\cell gdb_setup_readline()\cell event-top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable input_fd\par}
{\s5\f1\fs20\ql\sb50\sa50 int input_fd\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell event-loop.c\cell\cell\row
\cell event-top.c\cell\cell\row
\cell inf-loop.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell infrun.c\cell\cell\row
\cell interps.c\cell\cell\row
\cell remote.c\cell\cell\row
\cell top.c\cell\cell\row
\cell utils.c\cell\cell\row
Used in:\cell display_gdb_prompt()\cell event-top.c\cell\row
\cell gdb_disable_readline()\cell event-top.c\cell\row
\cell gdb_setup_readline()\cell event-top.c\cell\row
\cell remote_async_terminal_inferior()\cell remote.c\cell\row
\cell remote_async_terminal_ours()\cell remote.c\cell\row
\cell stdin_event_handler()\cell event-top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable after_char_processing_hook\par}
{\s5\f1\fs20\ql\sb50\sa50 void (*after_char_processing_hook)(void)\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell event-loop.c\cell\cell\row
\cell event-top.c\cell\cell\row
\cell inf-loop.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell infrun.c\cell\cell\row
\cell interps.c\cell\cell\row
\cell remote.c\cell\cell\row
\cell top.c\cell\cell\row
\cell utils.c\cell\cell\row
Used in:\cell gdb_readline_wrapper()\cell top.c\cell\row
\cell gdb_rl_operate_and_get_next()\cell top.c\cell\row
\cell gdb_rl_operate_and_get_next_completion()\cell top.c\cell\row
\cell rl_callback_read_char_wrapper()\cell event-top.c\cell\row
\cell start_event_loop()\cell event-loop.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable sigint_token\par}
{\s5\f1\fs20\ql\sb50\sa50 void* sigint_token\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell event-loop.c\cell\cell\row
\cell event-top.c\cell\cell\row
Used in:\cell async_init_signals()\cell event-top.c\cell\row
\cell handle_sigint()\cell event-top.c\cell\row
\cell sigint_taken_p()\cell event-loop.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable sighup_token\par}
{\s5\f1\fs20\ql\sb50\sa50 void* sighup_token\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell event-top.c\cell\cell\row
Used in:\cell async_init_signals()\cell event-top.c\cell\row
\cell handle_sighup()\cell event-top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable sigquit_token\par}
{\s5\f1\fs20\ql\sb50\sa50 void* sigquit_token\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell event-top.c\cell\cell\row
Used in:\cell async_init_signals()\cell event-top.c\cell\row
\cell handle_sigquit()\cell event-top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable sigfpe_token\par}
{\s5\f1\fs20\ql\sb50\sa50 void* sigfpe_token\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell event-top.c\cell\cell\row
Used in:\cell async_init_signals()\cell event-top.c\cell\row
\cell handle_sigfpe()\cell event-top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable sigwinch_token\par}
{\s5\f1\fs20\ql\sb50\sa50 void* sigwinch_token\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell event-top.c\cell\cell\row
Used in:\cell async_init_signals()\cell event-top.c\cell\row
\cell handle_sigwinch()\cell event-top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable sigtstp_token\par}
{\s5\f1\fs20\ql\sb50\sa50 void* sigtstp_token\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell event-top.c\cell\cell\row
Used in:\cell async_init_signals()\cell event-top.c\cell\row
\cell handle_stop_sig()\cell event-top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable more_to_come\par}
{\s5\f1\fs20\ql\sb50\sa50 int more_to_come\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell event-top.c\cell\cell\row
Used in:\cell command_line_handler()\cell event-top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable readline_input_state\par}
{\s5\f1\fs20\ql\sb50\sa50 struct readline_input_state readline_input_state\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell event-top.c\cell\cell\row
Used in:\cell command_line_handler()\cell event-top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable stdin_enabled\par}
{\s5\f1\fs20\ql\sb50\sa50 int stdin_enabled\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell event-top.c\cell\cell\row
Used in:\cell async_disable_stdin()\cell event-top.c\cell\row
\cell async_enable_stdin()\cell event-top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep External Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable line\par}
{\s5\f1\fs20\ql\sb50\sa50 extern char* line\par}
\trowd\trgaph120\cellx1440\cellx5220
\intbl\plain
Defined in:\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep External Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable linesize\par}
{\s5\f1\fs20\ql\sb50\sa50 extern size_t linesize\par}
\trowd\trgaph120\cellx1440\cellx5220
\intbl\plain
Defined in:\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep External Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable display_time\par}
{\s5\f1\fs20\ql\sb50\sa50 extern int display_time\par}
\trowd\trgaph120\cellx1440\cellx5220
\intbl\plain
Defined in:\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep External Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable display_space\par}
{\s5\f1\fs20\ql\sb50\sa50 extern int display_space\par}
\trowd\trgaph120\cellx1440\cellx5220
\intbl\plain
Defined in:\cell main.c\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Functions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function _initialize_event_loop()\par}
{\s5\f1\fs20\ql\sb50\sa50 void _initialize_event_loop ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-top.c\cell\cell\row
Refs Func:\cell cli_command_loop()\cell event-top.c\cell\row
Refs Var:\cell deprecated_command_loop_hook\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function adjust_prompts_for_optimized_code()\par}
{\s5\f1\fs20\ql\sb50\sa50 void adjust_prompts_for_optimized_code ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-top.h\cell\cell\row
Calls: \cell get_prompt()\cell top.c\cell\row
\cell push_prompt()\cell event-top.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  __builtin___snprintf_chk(), __builtin_object_size(), strlen(), strstr()\cell\cell\row
Called by:\cell display_gdb_prompt()\cell event-top.c\cell\row
Refs Var:\cell currently_inside_optimized_code\cell infrun.c\cell\row
\cell dwarf2_inform_debugging_optimized_code\cell dwarf2read.c\cell\row
\cell gdb_prompt_is_optimized\cell event-top.c\cell\row
\cell the_prompts\cell event-top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function async_disable_stdin()\par}
{\s5\f1\fs20\ql\sb50\sa50 void async_disable_stdin ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-top.h\cell\cell\row
Calls: \cell make_exec_error_cleanup()\cell utils.c\cell\row
\cell push_prompt()\cell event-top.c\cell\row
Called by:\cell advance_command()\cell infcmd.c\cell\row
\cell continue_command()\cell infcmd.c\cell\row
\cell finish_command()\cell infcmd.c\cell\row
\cell handle_inferior_event()\cell infrun.c\cell\row
\cell jump_command()\cell infcmd.c\cell\row
\cell re_exec_1()\cell infcmd.c\cell\row
\cell run_command_1()\cell infcmd.c\cell\row
\cell step_1_inlining()\cell infcmd.c\cell\row
\cell step_1_no_inlining()\cell infcmd.c\cell\row
\cell until_command()\cell infcmd.c\cell\row
Refs Func:\cell async_enable_stdin()\cell event-top.c\cell\row
Refs Var:\cell current_target\cell target/target.c\cell\row
\cell stdin_enabled\cell event-top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function async_enable_stdin()\par}
{\s5\f1\fs20\ql\sb50\sa50 void async_enable_stdin ( void* dummy )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-top.h\cell\cell\row
Calls: \cell pop_prompt()\cell event-top.c\cell\row
Called by:\cell run_command_1()\cell infcmd.c\cell\row
Used in:\cell async_disable_stdin()\cell event-top.c\cell\row
Refs Var:\cell current_target\cell target/target.c\cell\row
\cell stdin_enabled\cell event-top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function async_init_signals()\par}
{\s5\f1\fs20\ql\sb50\sa50 void async_init_signals ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-top.h\cell\cell\row
Calls: \cell create_async_signal_handler()\cell event-loop.c\cell\row
\cell  signal()\cell\cell\row
Called by:\cell gdb_init()\cell top.c\cell\row
Refs Func:\cell async_disconnect()\cell event-top.c\cell\row
\cell async_float_handler()\cell event-top.c\cell\row
\cell async_request_quit()\cell event-top.c\cell\row
\cell handle_sigfpe()\cell event-top.c\cell\row
\cell handle_sighup()\cell event-top.c\cell\row
\cell handle_sigint()\cell event-top.c\cell\row
\cell handle_sigquit()\cell event-top.c\cell\row
\cell handle_sigwinch()\cell event-top.c\cell\row
\cell macosx_resize_window_handler()\cell utils.c\cell\row
Refs Var:\cell sigfpe_token\cell event-top.c\cell\row
\cell sighup_token\cell event-top.c\cell\row
\cell sigint_token\cell event-top.c\cell\row
\cell sigquit_token\cell event-top.c\cell\row
\cell sigtstp_token\cell event-top.c\cell\row
\cell sigwinch_token\cell event-top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function async_request_quit()\par}
{\s5\f1\fs20\ql\sb50\sa50 void async_request_quit ( gdb_client_data arg )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-top.h\cell\cell\row
Calls: \cell quit()\cell utils.c\cell\row
Called by:\cell handle_sigint()\cell event-top.c\cell\row
\cell prompt_for_continue()\cell utils.c\cell\row
Used in:\cell async_init_signals()\cell event-top.c\cell\row
Refs Var:\cell immediate_quit\cell utils.c\cell\row
\cell quit_flag\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function cli_command_loop()\par}
{\s5\f1\fs20\ql\sb50\sa50 void cli_command_loop ( void* data )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-top.h\cell\cell\row
Calls: \cell display_gdb_prompt()\cell event-top.c\cell\row
\cell get_prompt()\cell top.c\cell\row
\cell start_event_loop()\cell event-loop.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  __builtin___strcat_chk(), __builtin___strcpy_chk(), __builtin_object_size(), __inline_strcat_chk(), __inline_strcpy_chk(), rl_callback_handler_install(), strlen()\cell\cell\row
Called by:\cell current_interp_command_loop()\cell interps.c\cell\row
Used in:\cell _initialize_event_loop()\cell event-top.c\cell\row
Refs Var:\cell async_command_editing_p\cell event-top.c\cell\row
\cell input_handler\cell event-top.c\cell\row
\cell the_prompts\cell event-top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function command_line_handler_continuation()\par}
{\s5\f1\fs20\ql\sb50\sa50 void command_line_handler_continuation ( struct continuation_arg* arg )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-top.c\cell\cell\row
Calls: \cell bpstat_do_actions()\cell breakpoint.c\cell\row
\cell printf_unfiltered()\cell utils.c\cell\row
\cell  get_run_time(), sbrk()\cell\cell\row
Used in:\cell command_handler()\cell event-top.c\cell\row
Refs Var:\cell display_space\cell main.c\cell\row
\cell display_time\cell main.c\cell\row
\cell lim_at_start\cell top.c\cell\row
\cell stop_bpstat\cell infcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function display_gdb_prompt()\par}
{\s5\f1\fs20\ql\sb50\sa50 void display_gdb_prompt ( char* new_prompt )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-top.h\cell\cell\row
Calls: \cell add_file_handler()\cell event-loop.c\cell\row
\cell adjust_prompts_for_optimized_code()\cell event-top.c\cell\row
\cell current_interp_display_prompt_p()\cell interps.c\cell\row
\cell delete_file_handler()\cell event-loop.c\cell\row
\cell fputs_unfiltered()\cell ui-file.c\cell\row
\cell gdb_flush()\cell ui-file.c\cell\row
\cell get_prompt()\cell top.c\cell\row
\cell  __builtin___strcat_chk(), __builtin___strcpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_strcat_chk(), __inline_strcpy_chk(), rl_callback_handler_install(), rl_callback_handler_remove(), strcmp(), strlen()\cell\cell\row
Called by:\cell cli_command_loop()\cell event-top.c\cell\row
\cell command_line_handler()\cell event-top.c\cell\row
\cell inferior_event_handler()\cell inf-loop.c\cell\row
\cell interp_set()\cell interps.c\cell\row
\cell start_event_loop()\cell event-loop.c\cell\row
Refs Func:\cell stdin_event_handler()\cell event-top.c\cell\row
Refs Var:\cell async_command_editing_p\cell event-top.c\cell\row
\cell current_target\cell target/target.c\cell\row
\cell gdb_stdout\cell main.c\cell\row
\cell input_fd\cell event-top.c\cell\row
\cell input_handler\cell event-top.c\cell\row
\cell sync_execution\cell infrun.c\cell\row
\cell target_executing\cell top.c\cell\row
\cell the_prompts\cell event-top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function gdb_disable_readline()\par}
{\s5\f1\fs20\ql\sb50\sa50 void gdb_disable_readline ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-top.h\cell\cell\row
Calls: \cell delete_file_handler()\cell event-loop.c\cell\row
\cell  rl_callback_handler_remove()\cell\cell\row
Refs Var:\cell input_fd\cell event-top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function gdb_readline2()\par}
{\s5\f1\fs20\ql\sb50\sa50 void gdb_readline2 ( gdb_client_data client_data )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-top.h\cell\cell\row
Calls: \cell xfree()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell xrealloc()\cell utils.c\cell\row
\cell  fgetc(), fileno(), isatty(), setbuf()\cell\cell\row
Used in:\cell change_line_handler()\cell event-top.c\cell\row
\cell gdb_setup_readline()\cell event-top.c\cell\row
Refs Var:\cell input_handler\cell event-top.c\cell\row
\cell instream\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function gdb_setup_readline()\par}
{\s5\f1\fs20\ql\sb50\sa50 void gdb_setup_readline ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-top.h\cell\cell\row
Calls: \cell add_file_handler()\cell event-loop.c\cell\row
\cell stdio_fileopen()\cell ui-file.c\cell\row
\cell  fileno(), isatty()\cell\cell\row
Refs Func:\cell command_line_handler()\cell event-top.c\cell\row
\cell gdb_readline2()\cell event-top.c\cell\row
\cell rl_callback_read_char_wrapper()\cell event-top.c\cell\row
\cell stdin_event_handler()\cell event-top.c\cell\row
Refs Var:\cell async_command_editing_p\cell event-top.c\cell\row
\cell call_readline\cell event-top.c\cell\row
\cell gdb_stderr\cell main.c\cell\row
\cell gdb_stdlog\cell main.c\cell\row
\cell gdb_stdout\cell main.c\cell\row
\cell gdb_stdtarg\cell main.c\cell\row
\cell input_fd\cell event-top.c\cell\row
\cell input_handler\cell event-top.c\cell\row
\cell instream\cell top.c\cell\row
\cell  rl_instream\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function handle_sigint()\par}
{\s5\f1\fs20\ql\sb50\sa50 void handle_sigint ( int sig )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-top.h\cell\cell\row
Calls: \cell async_request_quit()\cell event-top.c\cell\row
\cell mark_async_signal_handler_wrapper()\cell event-top.c\cell\row
\cell  signal()\cell\cell\row
Used in:\cell async_init_signals()\cell event-top.c\cell\row
\cell cleanup_sigint_signal_handler()\cell remote.c\cell\row
\cell handle_remote_sigint_twice()\cell remote.c\cell\row
\cell handle_sigint()\cell event-top.c\cell\row
Refs Func:\cell handle_sigint()\cell event-top.c\cell\row
Refs Var:\cell immediate_quit\cell utils.c\cell\row
\cell quit_flag\cell utils.c\cell\row
\cell sigint_token\cell event-top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function handle_stop_sig()\par}
{\s5\f1\fs20\ql\sb50\sa50 void handle_stop_sig ( int sig )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-top.h\cell\cell\row
Calls: \cell mark_async_signal_handler_wrapper()\cell event-top.c\cell\row
\cell  signal()\cell\cell\row
Used in:\cell async_stop_sig()\cell event-top.c\cell\row
\cell command_line_handler()\cell event-top.c\cell\row
\cell command_line_input()\cell top.c\cell\row
\cell handle_stop_sig()\cell event-top.c\cell\row
Refs Func:\cell handle_stop_sig()\cell event-top.c\cell\row
Refs Var:\cell sigtstp_token\cell event-top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function mark_async_signal_handler_wrapper()\par}
{\s5\f1\fs20\ql\sb50\sa50 void mark_async_signal_handler_wrapper ( void* token )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-top.h\cell\cell\row
Calls: \cell mark_async_signal_handler()\cell event-loop.c\cell\row
Called by:\cell handle_remote_sigint()\cell remote.c\cell\row
\cell handle_remote_sigint_twice()\cell remote.c\cell\row
\cell handle_sigfpe()\cell event-top.c\cell\row
\cell handle_sighup()\cell event-top.c\cell\row
\cell handle_sigint()\cell event-top.c\cell\row
\cell handle_sigquit()\cell event-top.c\cell\row
\cell handle_sigwinch()\cell event-top.c\cell\row
\cell handle_stop_sig()\cell event-top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function pop_prompt()\par}
{\s5\f1\fs20\ql\sb50\sa50 void pop_prompt ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-top.h\cell\cell\row
Calls: \cell savestring()\cell utils.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell  strcmp(), strlen()\cell\cell\row
Called by:\cell async_enable_stdin()\cell event-top.c\cell\row
\cell change_annotation_level()\cell event-top.c\cell\row
\cell command_line_handler()\cell event-top.c\cell\row
\cell set_async_prompt()\cell event-top.c\cell\row
Refs Var:\cell the_prompts\cell event-top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function push_prompt()\par}
{\s5\f1\fs20\ql\sb50\sa50 void push_prompt ( const char* prefix, const char* prompt, const char* suffix )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-top.h\cell\cell\row
Calls: \cell savestring()\cell utils.c\cell\row
\cell  strlen()\cell\cell\row
Called by:\cell adjust_prompts_for_optimized_code()\cell event-top.c\cell\row
\cell async_disable_stdin()\cell event-top.c\cell\row
\cell change_annotation_level()\cell event-top.c\cell\row
\cell command_line_handler()\cell event-top.c\cell\row
\cell set_async_prompt()\cell event-top.c\cell\row
Refs Var:\cell the_prompts\cell event-top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function set_async_annotation_level()\par}
{\s5\f1\fs20\ql\sb50\sa50 void set_async_annotation_level ( const char* args, int from_tty, struct cmd_list_element* c )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-top.h\cell\cell\row
Calls: \cell change_annotation_level()\cell event-top.c\cell\row
Called by:\cell init_main()\cell top.c\cell\row
Used in:\cell init_main()\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function set_async_editing_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 void set_async_editing_command ( const char* args, int from_tty, struct cmd_list_element* c )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-top.h\cell\cell\row
Calls: \cell change_line_handler()\cell event-top.c\cell\row
Used in:\cell init_main()\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function set_async_prompt()\par}
{\s5\f1\fs20\ql\sb50\sa50 void set_async_prompt ( const char* args, int from_tty, struct cmd_list_element* c )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-top.h\cell\cell\row
Calls: \cell pop_prompt()\cell event-top.c\cell\row
\cell push_prompt()\cell event-top.c\cell\row
\cell savestring()\cell utils.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  __builtin___snprintf_chk(), __builtin_object_size(), strlen(), strstr()\cell\cell\row
Used in:\cell init_main()\cell top.c\cell\row
Refs Var:\cell currently_inside_optimized_code\cell infrun.c\cell\row
\cell new_async_prompt\cell event-top.c\cell\row
\cell the_prompts\cell event-top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function stdin_event_handler()\par}
{\s5\f1\fs20\ql\sb50\sa50 void stdin_event_handler ( int error, gdb_client_data client_data )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-top.h\cell\cell\row
Calls: \cell delete_file_handler()\cell event-loop.c\cell\row
\cell discard_all_continuations()\cell utils.c\cell\row
\cell printf_unfiltered()\cell utils.c\cell\row
\cell  quit_command()\cell\cell\row
Used in:\cell display_gdb_prompt()\cell event-top.c\cell\row
\cell gdb_setup_readline()\cell event-top.c\cell\row
\cell remote_async_terminal_ours()\cell remote.c\cell\row
Refs Var:\cell call_readline\cell event-top.c\cell\row
\cell input_fd\cell event-top.c\cell\row
\cell instream\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function async_disconnect()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void async_disconnect ( gdb_client_data arg )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-top.c\cell\cell\row
Calls: \cell  catch_errors(), getpid(), kill(), signal()\cell\cell\row
Used in:\cell async_init_signals()\cell event-top.c\cell\row
Refs Func:\cell quit_cover()\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function async_do_nothing()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void async_do_nothing ( gdb_client_data arg )\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function async_float_handler()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void async_float_handler ( gdb_client_data arg )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-top.c\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
Used in:\cell async_init_signals()\cell event-top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function async_stop_sig()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void async_stop_sig ( gdb_client_data arg )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell dont_repeat()\cell top.c\cell\row
\cell gdb_flush()\cell ui-file.c\cell\row
\cell get_prompt()\cell top.c\cell\row
\cell printf_unfiltered()\cell utils.c\cell\row
\cell  getpid(), kill(), signal(), sigprocmask()\cell\cell\row
Refs Func:\cell handle_stop_sig()\cell event-top.c\cell\row
Refs Var:\cell gdb_stdout\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function change_annotation_level()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void change_annotation_level ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-top.c\cell\cell\row
Calls: \cell pop_prompt()\cell event-top.c\cell\row
\cell push_prompt()\cell event-top.c\cell\row
\cell warning()\cell utils.c\cell\row
\cell  __builtin___strcat_chk(), __builtin___strcpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_strcat_chk(), __inline_strcpy_chk(), strcmp(), strlen()\cell\cell\row
Called by:\cell set_async_annotation_level()\cell event-top.c\cell\row
Refs Var:\cell annotation_level\cell stack.c\cell\row
\cell async_annotation_suffix\cell event-top.c\cell\row
\cell the_prompts\cell event-top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function change_line_handler()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void change_line_handler ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-top.c\cell\cell\row
Calls: \cell  rl_callback_handler_remove()\cell\cell\row
Called by:\cell set_async_editing_command()\cell event-top.c\cell\row
Refs Func:\cell command_line_handler()\cell event-top.c\cell\row
\cell gdb_readline2()\cell event-top.c\cell\row
\cell rl_callback_read_char_wrapper()\cell event-top.c\cell\row
Refs Var:\cell async_command_editing_p\cell event-top.c\cell\row
\cell call_readline\cell event-top.c\cell\row
\cell input_handler\cell event-top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function command_handler()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void command_handler ( char* command )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-top.c\cell\cell\row
Calls: \cell add_continuation()\cell utils.c\cell\row
\cell bpstat_do_actions()\cell breakpoint.c\cell\row
\cell do_cleanups()\cell utils.c\cell\row
\cell execute_command()\cell top.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell printf_unfiltered()\cell utils.c\cell\row
\cell reinitialize_more_filter()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  fileno(), get_run_time(), isatty(), quit_command(), sbrk()\cell\cell\row
Called by:\cell command_line_handler()\cell event-top.c\cell\row
Refs Func:\cell command_line_handler_continuation()\cell event-top.c\cell\row
\cell null_cleanup()\cell utils.c\cell\row
Refs Var:\cell current_target\cell target/target.c\cell\row
\cell display_space\cell main.c\cell\row
\cell display_time\cell main.c\cell\row
\cell gdb_override_async\cell target/target.c\cell\row
\cell instream\cell top.c\cell\row
\cell lim_at_start\cell top.c\cell\row
\cell quit_flag\cell utils.c\cell\row
\cell stop_bpstat\cell infcmd.c\cell\row
\cell target_executing\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function command_line_handler()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void command_line_handler ( char* rl )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-top.c\cell\cell\row
Calls: \cell command_handler()\cell event-top.c\cell\row
\cell display_gdb_prompt()\cell event-top.c\cell\row
\cell gdb_flush()\cell ui-file.c\cell\row
\cell pop_prompt()\cell event-top.c\cell\row
\cell printf_unfiltered()\cell utils.c\cell\row
\cell push_prompt()\cell event-top.c\cell\row
\cell puts_unfiltered()\cell utils.c\cell\row
\cell savestring()\cell utils.c\cell\row
\cell wrap_here()\cell utils.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell xrealloc()\cell utils.c\cell\row
\cell  __builtin___strcpy_chk(), __builtin_object_size(), __inline_strcpy_chk(), add_history(), fileno(), history_expand(), isatty(), signal(), strlen(), strncmp()\cell\cell\row
Used in:\cell change_line_handler()\cell event-top.c\cell\row
\cell gdb_setup_readline()\cell event-top.c\cell\row
Refs Func:\cell handle_stop_sig()\cell event-top.c\cell\row
Refs Var:\cell annotation_level\cell stack.c\cell\row
\cell async_annotation_suffix\cell event-top.c\cell\row
\cell gdb_stderr\cell main.c\cell\row
\cell gdb_stdout\cell main.c\cell\row
\cell history_expansion_p\cell top.c\cell\row
\cell instream\cell top.c\cell\row
\cell job_control\cell utils.c\cell\row
\cell line\cell top.c\cell\row
\cell linesize\cell top.c\cell\row
\cell more_to_come\cell event-top.c\cell\row
\cell readline_input_state\cell event-top.c\cell\row
\cell server_command\cell top.c\cell\row
\cell source_file_name\cell top.c\cell\row
\cell source_line_number\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function handle_sigfpe()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void handle_sigfpe ( int sig )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-top.c\cell\cell\row
Calls: \cell mark_async_signal_handler_wrapper()\cell event-top.c\cell\row
\cell  signal()\cell\cell\row
Used in:\cell async_init_signals()\cell event-top.c\cell\row
\cell handle_sigfpe()\cell event-top.c\cell\row
Refs Func:\cell handle_sigfpe()\cell event-top.c\cell\row
Refs Var:\cell sigfpe_token\cell event-top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function handle_sighup()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void handle_sighup ( int sig )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-top.c\cell\cell\row
Calls: \cell mark_async_signal_handler_wrapper()\cell event-top.c\cell\row
\cell  signal()\cell\cell\row
Used in:\cell async_init_signals()\cell event-top.c\cell\row
\cell handle_sighup()\cell event-top.c\cell\row
Refs Func:\cell handle_sighup()\cell event-top.c\cell\row
Refs Var:\cell sighup_token\cell event-top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function handle_sigquit()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void handle_sigquit ( int sig )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-top.c\cell\cell\row
Calls: \cell mark_async_signal_handler_wrapper()\cell event-top.c\cell\row
\cell  signal()\cell\cell\row
Used in:\cell async_init_signals()\cell event-top.c\cell\row
\cell handle_sigquit()\cell event-top.c\cell\row
Refs Func:\cell handle_sigquit()\cell event-top.c\cell\row
Refs Var:\cell sigquit_token\cell event-top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function handle_sigwinch()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void handle_sigwinch ( int sig )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-top.c\cell\cell\row
Calls: \cell mark_async_signal_handler_wrapper()\cell event-top.c\cell\row
\cell  signal()\cell\cell\row
Used in:\cell async_init_signals()\cell event-top.c\cell\row
\cell handle_sigwinch()\cell event-top.c\cell\row
Refs Func:\cell handle_sigwinch()\cell event-top.c\cell\row
Refs Var:\cell sigwinch_token\cell event-top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function rl_callback_read_char_wrapper()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void rl_callback_read_char_wrapper ( gdb_client_data client_data )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-top.c\cell\cell\row
Calls: \cell  rl_callback_read_char()\cell\cell\row
Used in:\cell change_line_handler()\cell event-top.c\cell\row
\cell gdb_setup_readline()\cell event-top.c\cell\row
Refs Var:\cell after_char_processing_hook\cell event-top.c\cell\row
\intbl0
}
