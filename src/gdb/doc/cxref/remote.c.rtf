{\rtf\ansi
\deff0
{\fonttbl
{\f0\froman Times New Roman;}
{\f1\fmodern Courier New;}
}
{\stylesheet
{\s0\f0\fs24 Normal;}
{\s1\f0\fs40\b\sb400\sa200\keepn\keep Heading 1;}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Heading 2;}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Heading 3;}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Heading 4;}
{\s5\f1\fs20\ql\sb50\sa50 Code;}
}
{\info{\comment
 This RTF file generated by cxref (version 1.6e).
 cxref program (c) Andrew M. Bishop 1995-2014.
 Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF remote.c
 CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
}}
\paperw11880\paperh16848\margl1440\margr1440\margt1440\margb1440
\sectd\plain
\s0\f0\fs24
{\s1\f0\fs40\b\sb400\sa200\keepn\keep File remote.c\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Included Files\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <errno.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <unistd.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_locale.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <locale.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../gdb/signals.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/symcat.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-file.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "xm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/xm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "nm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/i386/nm-i386.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/nm-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "tm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/tm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-tdep.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-tdep.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-thread-status.h"\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_types.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <inttypes.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_vm.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/kmod.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/tm-i386-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/fopen-bin.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdlib.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbarch.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_string.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <ctype.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <fcntl.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "inferior.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "breakpoint.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/floatformat.h"\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_regex.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "gdbtypes.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "expression.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "gdb-events.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "target.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "dcache.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "memattr.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "symfile.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "exceptions.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-out.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <setjmp.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "target.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdbcmd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "command.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-out.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "objfiles.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <uuid/uuid.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_obstack.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/obstack.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symfile.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "inlining.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <block.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sqlite3.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb-stabs.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdbthread.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "breakpoint.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "inlining.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "remote.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/time.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "regcache.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_assert.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "observer.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "solib.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <ctype.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <sys/time.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "event-loop.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "event-top.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "inf-loop.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "serial.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdbcore.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "remote-fileio.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "objc-lang.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <Availability.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-tdep.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-nat-dyld.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-nat-mutils.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "memattr.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "target.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "inferior.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-nat-utils.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-nat-threads.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <pthread.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <mach/machine.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <mach-o/loader.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-nat-dyld-info.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <mach/machine.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <mach-o/loader.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-nat-dyld-path.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-nat-dyld-process.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <execinfo.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <libgen.h>\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Preprocessor definitions\par}
{\s5\f1\fs20\ql\sb50\sa50 #define PROTOCOL_LOG_BUFSIZE 3072\par}
{\s5\f1\fs20\ql\sb50\sa50 #define DEFAULT_MAX_REMOTE_PACKET_SIZE 2000\par}
{\s5\f1\fs20\ql\sb50\sa50 #define MAX_REMOTE_PACKET_SIZE 16384\par}
{\s5\f1\fs20\ql\sb50\sa50 #define MIN_REMOTE_PACKET_SIZE 20\par}
{\s5\f1\fs20\ql\sb50\sa50 #define MAGIC_NULL_PID 42000\par}
{\s5\f1\fs20\ql\sb50\sa50 #define OPAQUETHREADBYTES 8\par}
{\s5\f1\fs20\ql\sb50\sa50 #define TAG_THREADID 1\par}
{\s5\f1\fs20\ql\sb50\sa50 #define TAG_EXISTS 2\par}
{\s5\f1\fs20\ql\sb50\sa50 #define TAG_DISPLAY 4\par}
{\s5\f1\fs20\ql\sb50\sa50 #define TAG_THREADNAME 8\par}
{\s5\f1\fs20\ql\sb50\sa50 #define TAG_MOREDISPLAY 16\par}
{\s5\f1\fs20\ql\sb50\sa50 #define BUF_THREAD_ID_SIZE\par}
{\s5\f1\fs20\ql\sb50\sa50 #define TAG_THREADID 1\par}
{\s5\f1\fs20\ql\sb50\sa50 #define TAG_EXISTS 2\par}
{\s5\f1\fs20\ql\sb50\sa50 #define TAG_DISPLAY 4\par}
{\s5\f1\fs20\ql\sb50\sa50 #define TAG_THREADNAME 8\par}
{\s5\f1\fs20\ql\sb50\sa50 #define TAG_MOREDISPLAY 16\par}
{\s5\f1\fs20\ql\sb50\sa50 #define MAXTHREADLISTRESULTS 32\par}
{\s5\f1\fs20\ql\sb50\sa50 #define CRAZY_MAX_THREADS 1000\par}
{\s5\f1\fs20\ql\sb50\sa50 #define MAX_TRIES 3\par}
{\s5\f1\fs20\ql\sb50\sa50 #define INT_PRINT_MAX 20\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Type definitions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct packet_reg\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct packet_reg}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 long offset;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 long regnum;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 long pnum;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int in_g_packet;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct remote_state\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct remote_state}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 size_t sizeof_g_packet;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct packet_reg* regs;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 size_t actual_register_packet_size;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 size_t remote_packet_size;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int has_target;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type enum pkt_direction\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 enum pkt_direction}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 sent_from_gdb;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 received_by_gdb;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct protocol_log_entry\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct protocol_log_entry}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 enum pkt_direction direction;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct timeval tv;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 char mi_token[16];}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 char packet[3072];}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct protocol_log\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct protocol_log}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int head;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int max_ent;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct protocol_log_entry* ents;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct memory_packet_config\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct memory_packet_config}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 const char* name;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 size_t size;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int fixed_p;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type enum packet_support\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 enum packet_support}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 PACKET_SUPPORT_UNKNOWN;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 PACKET_ENABLE;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 PACKET_DISABLE;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct packet_config\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct packet_config}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 const char* name;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 const char* title;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 enum auto_boolean detect;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 enum packet_support support;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type enum packet_result\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 enum packet_result}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 PACKET_ERROR;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 PACKET_OK;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 PACKET_UNKNOWN;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type enum Z_packet_type\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 enum Z_packet_type}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 Z_PACKET_SOFTWARE_BP;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 Z_PACKET_HARDWARE_BP;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 Z_PACKET_WRITE_WP;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 Z_PACKET_READ_WP;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 Z_PACKET_ACCESS_WP;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 NR_Z_PACKET_TYPES;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Typedef threadref\par}
{\s5\f1\fs20\ql\sb50\sa50 typedef unsigned char threadref[8]\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Typedef gdb_threadref\par}
{\s5\f1\fs20\ql\sb50\sa50 typedef int gdb_threadref\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct gdb_ext_thread_info\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct gdb_ext_thread_info}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 threadref threadid;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int active;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 char display[256];}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 char shortname[32];}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 char more_display[256];}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Typedef rmt_thread_action\par}
{\s5\f1\fs20\ql\sb50\sa50 typedef int (*rmt_thread_action)(threadref* ref,void* context)\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Variables\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable deprecated_target_resume_hook\par}
{\s5\f1\fs20\ql\sb50\sa50 void (*deprecated_target_resume_hook)(void)\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell inf-loop.c\cell\cell\row
\cell remote-fileio.c\cell\cell\row
\cell remote.c\cell\cell\row
\cell tracepoint.c\cell\cell\row
Used in:\cell remote_resume()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable deprecated_target_wait_loop_hook\par}
{\s5\f1\fs20\ql\sb50\sa50 void (*deprecated_target_wait_loop_hook)(void)\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell inf-loop.c\cell\cell\row
\cell remote-fileio.c\cell\cell\row
\cell remote.c\cell\cell\row
\cell tracepoint.c\cell\cell\row
Used in:\cell remote_async_wait()\cell remote.c\cell\row
\cell remote_wait()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable current_remote_stats\par}
{\s5\f1\fs20\ql\sb50\sa50 struct remote_stats* current_remote_stats\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell inf-loop.c\cell\cell\row
\cell remote-fileio.c\cell\cell\row
\cell remote.c\cell\cell\row
\cell tracepoint.c\cell\cell\row
Used in:\cell add_pkt_to_protocol_log()\cell remote.c\cell\row
\cell end_remote_timer()\cell remote.c\cell\row
\cell getpkt_sane()\cell remote.c\cell\row
\cell putpkt_binary()\cell remote.c\cell\row
\cell remote_start_remote()\cell remote.c\cell\row
\cell remote_stop()\cell remote.c\cell\row
\cell start_remote_timer()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable total_packets_sent\par}
{\s5\f1\fs20\ql\sb50\sa50 uint64_t total_packets_sent\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell inf-loop.c\cell\cell\row
\cell remote-fileio.c\cell\cell\row
\cell remote.c\cell\cell\row
\cell tracepoint.c\cell\cell\row
Used in:\cell putpkt_binary()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable total_packets_received\par}
{\s5\f1\fs20\ql\sb50\sa50 uint64_t total_packets_received\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell inf-loop.c\cell\cell\row
\cell remote-fileio.c\cell\cell\row
\cell remote.c\cell\cell\row
\cell tracepoint.c\cell\cell\row
Used in:\cell getpkt_sane()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable remote_debugflags\par}
{\s5\f1\fs20\ql\sb50\sa50 char* remote_debugflags\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell remote.c\cell\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
\cell remote_start_remote()\cell remote.c\cell\row
\cell set_remote_debugflags_command()\cell remote.c\cell\row
\cell show_remote_debugflags_command()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable protocol_log\par}
{\s5\f1\fs20\ql\sb50\sa50 struct protocol_log protocol_log\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell remote.c\cell\cell\row
Used in:\cell add_pkt_to_protocol_log()\cell remote.c\cell\row
\cell dump_protocol_log()\cell remote.c\cell\row
\cell initialize_protocol_log()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable no_ack_mode\par}
{\s5\f1\fs20\ql\sb50\sa50 int no_ack_mode\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell remote.c\cell\cell\row
Used in:\cell getpkt_sane()\cell remote.c\cell\row
\cell putpkt_binary()\cell remote.c\cell\row
\cell read_frame()\cell remote.c\cell\row
\cell show_no_ack_mode_cmd()\cell remote.c\cell\row
\cell start_no_ack_mode()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable user_requested_no_ack_mode\par}
{\s5\f1\fs20\ql\sb50\sa50 enum auto_boolean user_requested_no_ack_mode\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell remote.c\cell\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
\cell remote_start_remote()\cell remote.c\cell\row
\cell set_no_ack_mode_cmd()\cell remote.c\cell\row
\cell show_no_ack_mode_cmd()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable remote_ops\par}
{\s5\f1\fs20\ql\sb50\sa50 struct target_ops remote_ops\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell remote.c\cell\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
\cell init_extended_remote_ops()\cell remote.c\cell\row
\cell init_remote_macosx_ops()\cell remote.c\cell\row
\cell init_remote_ops()\cell remote.c\cell\row
\cell remote_mourn()\cell remote.c\cell\row
\cell remote_open()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable kill_kludge\par}
{\s5\f1\fs20\ql\sb50\sa50 int kill_kludge\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell remote.c\cell\cell\row
Used in:\cell remote_async_kill()\cell remote.c\cell\row
\cell remote_async_wait()\cell remote.c\cell\row
\cell remote_kill()\cell remote.c\cell\row
\cell remote_wait()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable remote_hw_watchpoint_limit\par}
{\s5\f1\fs20\ql\sb50\sa50 int remote_hw_watchpoint_limit\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell remote.c\cell\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
\cell remote_check_watch_resources()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable remote_hw_breakpoint_limit\par}
{\s5\f1\fs20\ql\sb50\sa50 int remote_hw_breakpoint_limit\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell remote.c\cell\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
\cell remote_check_watch_resources()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep External Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable exec_bfd\par}
{\s5\f1\fs20\ql\sb50\sa50 extern bfd* exec_bfd\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep External Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable stepped_after_stopped_by_watchpoint\par}
{\s5\f1\fs20\ql\sb50\sa50 extern int stepped_after_stopped_by_watchpoint\par}
\trowd\trgaph120\cellx1440\cellx5220
\intbl\plain
Defined in:\cell infrun.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable remote_gdbarch_data_handle\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct gdbarch_data* remote_gdbarch_data_handle\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_remote()\cell\cell\row
\cell get_remote_state()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable g_max_remote_packet_size\par}
{\s5\f1\fs20\ql\sb50\sa50 static long g_max_remote_packet_size\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell init_remote_state()\cell\cell\row
\cell set_max_remote_packet_size()\cell\cell\row
\cell show_max_remote_packet_size()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable remote_watch_data_address\par}
{\s5\f1\fs20\ql\sb50\sa50 static CORE_ADDR remote_watch_data_address\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell remote_async_wait()\cell\cell\row
\cell remote_stopped_data_address()\cell\cell\row
\cell remote_wait()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable remote_stopped_by_watchpoint_p\par}
{\s5\f1\fs20\ql\sb50\sa50 static int remote_stopped_by_watchpoint_p\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell remote_async_wait()\cell\cell\row
\cell remote_stopped_by_watchpoint()\cell\cell\row
\cell remote_wait()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable extended_remote_ops\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct target_ops extended_remote_ops\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_remote()\cell\cell\row
\cell extended_remote_open()\cell\cell\row
\cell init_extended_remote_ops()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable remote_async_ops\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct target_ops remote_async_ops\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_remote()\cell\cell\row
\cell init_extended_async_remote_ops()\cell\cell\row
\cell init_remote_async_ops()\cell\cell\row
\cell remote_async_mourn()\cell\cell\row
\cell remote_async_open()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable extended_async_remote_ops\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct target_ops extended_async_remote_ops\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_remote()\cell\cell\row
\cell extended_remote_async_open()\cell\cell\row
\cell init_extended_async_remote_ops()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable wait_forever_enabled_p\par}
{\s5\f1\fs20\ql\sb50\sa50 static int wait_forever_enabled_p\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell remote_async_wait()\cell\cell\row
\cell remote_open_1()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable remote_break\par}
{\s5\f1\fs20\ql\sb50\sa50 static int remote_break\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_remote()\cell\cell\row
\cell remote_stop()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable remote_desc\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct serial* remote_desc\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell dump_packets_command()\cell\cell\row
\cell getpkt_sane()\cell\cell\row
\cell packet_command()\cell\cell\row
\cell putpkt_binary()\cell\cell\row
\cell readchar()\cell\cell\row
\cell remote_async()\cell\cell\row
\cell remote_async_kill()\cell\cell\row
\cell remote_can_async_p()\cell\cell\row
\cell remote_close()\cell\cell\row
\cell remote_detach()\cell\cell\row
\cell remote_disconnect()\cell\cell\row
\cell remote_is_async_p()\cell\cell\row
\cell remote_new_objfile()\cell\cell\row
\cell remote_open_1()\cell\cell\row
\cell remote_rcmd()\cell\cell\row
\cell remote_start_remote()\cell\cell\row
\cell remote_stop()\cell\cell\row
\cell remote_threads_extra_info()\cell\cell\row
\cell remote_threads_info()\cell\cell\row
\cell remote_xfer_partial()\cell\cell\row
\cell set_no_ack_mode_cmd()\cell\cell\row
\cell set_remote_debugflags_command()\cell\cell\row
\cell show_no_ack_mode_cmd()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable remote_address_size\par}
{\s5\f1\fs20\ql\sb50\sa50 static size_t remote_address_size\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_remote()\cell\cell\row
\cell build_remote_gdbarch_data()\cell\cell\row
\cell remote_address_masked()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable remote_async_terminal_ours_p\par}
{\s5\f1\fs20\ql\sb50\sa50 static int remote_async_terminal_ours_p\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell remote_async_terminal_inferior()\cell\cell\row
\cell remote_async_terminal_ours()\cell\cell\row
\cell remote_open_1()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable memory_write_packet_config\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct memory_packet_config memory_write_packet_config\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell get_memory_write_packet_size()\cell\cell\row
\cell set_memory_write_packet_size()\cell\cell\row
\cell show_memory_write_packet_size()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable memory_read_packet_config\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct memory_packet_config memory_read_packet_config\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell get_memory_read_packet_size()\cell\cell\row
\cell set_memory_read_packet_size()\cell\cell\row
\cell show_memory_read_packet_size()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable remote_protocol_vcont\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct packet_config remote_protocol_vcont\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_remote()\cell\cell\row
\cell init_all_packet_configs()\cell\cell\row
\cell remote_vcont_probe()\cell\cell\row
\cell remote_vcont_resume()\cell\cell\row
\cell set_remote_protocol_vcont_packet_cmd()\cell\cell\row
\cell show_remote_protocol_vcont_packet_cmd()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable remote_protocol_qSymbol\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct packet_config remote_protocol_qSymbol\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_remote()\cell\cell\row
\cell init_all_packet_configs()\cell\cell\row
\cell remote_check_symbols()\cell\cell\row
\cell set_remote_protocol_qSymbol_packet_cmd()\cell\cell\row
\cell show_remote_protocol_qSymbol_packet_cmd()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable remote_protocol_P\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct packet_config remote_protocol_P\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_remote()\cell\cell\row
\cell init_all_packet_configs()\cell\cell\row
\cell remote_prepare_to_store()\cell\cell\row
\cell remote_store_registers()\cell\cell\row
\cell set_remote_protocol_P_packet_cmd()\cell\cell\row
\cell show_remote_protocol_P_packet_cmd()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable remote_protocol_Z\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct packet_config remote_protocol_Z[NR_Z_PACKET_TYPES]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_remote()\cell\cell\row
\cell init_all_packet_configs()\cell\cell\row
\cell remote_insert_breakpoint()\cell\cell\row
\cell remote_insert_hw_breakpoint()\cell\cell\row
\cell remote_insert_watchpoint()\cell\cell\row
\cell remote_remove_breakpoint()\cell\cell\row
\cell remote_remove_hw_breakpoint()\cell\cell\row
\cell remote_remove_watchpoint()\cell\cell\row
\cell set_remote_protocol_Z_access_wp_packet_cmd()\cell\cell\row
\cell set_remote_protocol_Z_hardware_bp_packet_cmd()\cell\cell\row
\cell set_remote_protocol_Z_packet_cmd()\cell\cell\row
\cell set_remote_protocol_Z_read_wp_packet_cmd()\cell\cell\row
\cell set_remote_protocol_Z_software_bp_packet_cmd()\cell\cell\row
\cell set_remote_protocol_Z_write_wp_packet_cmd()\cell\cell\row
\cell show_remote_protocol_Z_access_wp_packet_cmd()\cell\cell\row
\cell show_remote_protocol_Z_hardware_bp_packet_cmd()\cell\cell\row
\cell show_remote_protocol_Z_packet_cmd()\cell\cell\row
\cell show_remote_protocol_Z_read_wp_packet_cmd()\cell\cell\row
\cell show_remote_protocol_Z_software_bp_packet_cmd()\cell\cell\row
\cell show_remote_protocol_Z_write_wp_packet_cmd()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable remote_Z_packet_detect\par}
{\s5\f1\fs20\ql\sb50\sa50 static enum auto_boolean remote_Z_packet_detect\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_remote()\cell\cell\row
\cell set_remote_protocol_Z_packet_cmd()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable remote_protocol_binary_download\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct packet_config remote_protocol_binary_download\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_remote()\cell\cell\row
\cell check_binary_download()\cell\cell\row
\cell init_all_packet_configs()\cell\cell\row
\cell remote_write_bytes()\cell\cell\row
\cell set_remote_protocol_binary_download_cmd()\cell\cell\row
\cell show_remote_protocol_binary_download_cmd()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable use_threadinfo_query\par}
{\s5\f1\fs20\ql\sb50\sa50 static int use_threadinfo_query\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell remote_open_1()\cell\cell\row
\cell remote_threads_info()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable use_threadextra_query\par}
{\s5\f1\fs20\ql\sb50\sa50 static int use_threadextra_query\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell remote_open_1()\cell\cell\row
\cell remote_threads_extra_info()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable remote_protocol_qPart_auxv\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct packet_config remote_protocol_qPart_auxv\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_remote()\cell\cell\row
\cell init_all_packet_configs()\cell\cell\row
\cell remote_xfer_partial()\cell\cell\row
\cell set_remote_protocol_qPart_auxv_packet_cmd()\cell\cell\row
\cell show_remote_protocol_qPart_auxv_packet_cmd()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable remote_protocol_qGetTLSAddr\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct packet_config remote_protocol_qGetTLSAddr\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_remote()\cell\cell\row
\cell init_all_packet_configs()\cell\cell\row
\cell remote_get_thread_local_address()\cell\cell\row
\cell set_remote_protocol_qGetTLSAddr_packet_cmd()\cell\cell\row
\cell show_remote_protocol_qGetTLSAddr_packet_cmd()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable remote_protocol_p\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct packet_config remote_protocol_p\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_remote()\cell\cell\row
\cell init_all_packet_configs()\cell\cell\row
\cell remote_fetch_registers()\cell\cell\row
\cell set_remote_protocol_p_packet_cmd()\cell\cell\row
\cell show_remote_protocol_p_packet_cmd()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable sigint_remote_twice_token\par}
{\s5\f1\fs20\ql\sb50\sa50 static void* sigint_remote_twice_token\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell cleanup_sigint_signal_handler()\cell\cell\row
\cell handle_remote_sigint()\cell\cell\row
\cell handle_remote_sigint_twice()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable sigint_remote_token\par}
{\s5\f1\fs20\ql\sb50\sa50 static void* sigint_remote_token\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell cleanup_sigint_signal_handler()\cell\cell\row
\cell handle_remote_sigint()\cell\cell\row
\cell initialize_sigint_signal_handler()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable general_thread\par}
{\s5\f1\fs20\ql\sb50\sa50 static int general_thread\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell record_currthread()\cell\cell\row
\cell remote_open_1()\cell\cell\row
\cell set_thread()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable continue_thread\par}
{\s5\f1\fs20\ql\sb50\sa50 static int continue_thread\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell remote_open_1()\cell\cell\row
\cell set_thread()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable hexchars\par}
{\s5\f1\fs20\ql\sb50\sa50 static const char hexchars[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell pack_hex_byte()\cell\cell\row
\cell pack_nibble()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable last_sent_signal\par}
{\s5\f1\fs20\ql\sb50\sa50 static enum target_signal last_sent_signal\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell remote_async_wait()\cell\cell\row
\cell remote_resume()\cell\cell\row
\cell remote_wait()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable last_sent_step\par}
{\s5\f1\fs20\ql\sb50\sa50 static int last_sent_step\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell remote_async_wait()\cell\cell\row
\cell remote_resume()\cell\cell\row
\cell remote_wait()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable ofunc\par}
{\s5\f1\fs20\ql\sb50\sa50 static void (*ofunc)(int)\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell remote_async_wait()\cell\cell\row
\cell remote_interrupt_twice()\cell\cell\row
\cell remote_wait()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable register_bytes_found\par}
{\s5\f1\fs20\ql\sb50\sa50 static int register_bytes_found\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell remote_fetch_registers()\cell\cell\row
\cell remote_store_registers()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable crc32_table\par}
{\s5\f1\fs20\ql\sb50\sa50 static unsigned long crc32_table[256]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell crc32()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable async_client_callback\par}
{\s5\f1\fs20\ql\sb50\sa50 static void (*async_client_callback)(enum inferior_event_type event_type,void* context)\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell remote_async()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable async_client_context\par}
{\s5\f1\fs20\ql\sb50\sa50 static void* async_client_context\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell remote_async()\cell\cell\row
\cell remote_async_serial_handler()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable remote_async_serial_handler\par}
{\s5\f1\fs20\ql\sb50\sa50 static serial_event_ftype remote_async_serial_handler\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell remote_async()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable remote_new_objfile_chain\par}
{\s5\f1\fs20\ql\sb50\sa50 static void (*remote_new_objfile_chain)(struct objfile*)\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_remote()\cell\cell\row
\cell remote_new_objfile()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable remote_macosx_ops\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct target_ops remote_macosx_ops\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_remote()\cell\cell\row
\cell init_remote_macosx_ops()\cell\cell\row
\cell remote_macosx_mourn()\cell\cell\row
\cell remote_macosx_open()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable remote_macosx_shortname\par}
{\s5\f1\fs20\ql\sb50\sa50 static const char* remote_macosx_shortname\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell init_remote_macosx_ops()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable remote_macosx_longname\par}
{\s5\f1\fs20\ql\sb50\sa50 static const char* remote_macosx_longname\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell init_remote_macosx_ops()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable remote_macosx_doc\par}
{\s5\f1\fs20\ql\sb50\sa50 static const char* remote_macosx_doc\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell init_remote_macosx_ops()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable remote_macosx_exec_dir\par}
{\s5\f1\fs20\ql\sb50\sa50 static char* remote_macosx_exec_dir\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_remote()\cell\cell\row
\cell remote_macosx_attach()\cell\cell\row
\cell remote_macosx_create_inferior()\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Functions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function _initialize_remote()\par}
{\s5\f1\fs20\ql\sb50\sa50 void _initialize_remote ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell add_packet_config_cmd()\cell remote.c\cell\row
\cell add_target()\cell target/target.c\cell\row
\cell deprecated_register_gdbarch_swap()\cell gdbarch.c\cell\row
\cell gdbarch_data_register_post_init()\cell gdbarch.c\cell\row
\cell init_extended_async_remote_ops()\cell remote.c\cell\row
\cell init_extended_remote_ops()\cell remote.c\cell\row
\cell init_remote_async_ops()\cell remote.c\cell\row
\cell init_remote_macosx_ops()\cell remote.c\cell\row
\cell init_remote_ops()\cell remote.c\cell\row
\cell initialize_remote_fileio()\cell remote-fileio.c\cell\row
\cell  add_cmd(), add_prefix_cmd(), add_setshow_auto_boolean_cmd(), add_setshow_boolean_cmd(), add_setshow_integer_cmd(), add_setshow_string_cmd(), add_setshow_string_noescape_cmd(), add_setshow_zinteger_cmd()\cell\cell\row
Refs Func:\cell build_remote_gdbarch_data()\cell remote.c\cell\row
\cell compare_sections_command()\cell remote.c\cell\row
\cell dump_packets_command()\cell remote.c\cell\row
\cell init_remote_state()\cell remote.c\cell\row
\cell packet_command()\cell remote.c\cell\row
\cell remote_new_objfile()\cell remote.c\cell\row
\cell set_max_remote_packet_size()\cell remote.c\cell\row
\cell set_memory_read_packet_size()\cell remote.c\cell\row
\cell set_memory_write_packet_size()\cell remote.c\cell\row
\cell set_no_ack_mode_cmd()\cell remote.c\cell\row
\cell set_remote_cmd()\cell remote.c\cell\row
\cell set_remote_debugflags_command()\cell remote.c\cell\row
\cell set_remote_protocol_P_packet_cmd()\cell remote.c\cell\row
\cell set_remote_protocol_Z_access_wp_packet_cmd()\cell remote.c\cell\row
\cell set_remote_protocol_Z_hardware_bp_packet_cmd()\cell remote.c\cell\row
\cell set_remote_protocol_Z_packet_cmd()\cell remote.c\cell\row
\cell set_remote_protocol_Z_read_wp_packet_cmd()\cell remote.c\cell\row
\cell set_remote_protocol_Z_software_bp_packet_cmd()\cell remote.c\cell\row
\cell set_remote_protocol_Z_write_wp_packet_cmd()\cell remote.c\cell\row
\cell set_remote_protocol_binary_download_cmd()\cell remote.c\cell\row
\cell set_remote_protocol_p_packet_cmd()\cell remote.c\cell\row
\cell set_remote_protocol_qGetTLSAddr_packet_cmd()\cell remote.c\cell\row
\cell set_remote_protocol_qPart_auxv_packet_cmd()\cell remote.c\cell\row
\cell set_remote_protocol_qSymbol_packet_cmd()\cell remote.c\cell\row
\cell set_remote_protocol_vcont_packet_cmd()\cell remote.c\cell\row
\cell show_max_remote_packet_size()\cell remote.c\cell\row
\cell show_memory_read_packet_size()\cell remote.c\cell\row
\cell show_memory_write_packet_size()\cell remote.c\cell\row
\cell show_no_ack_mode_cmd()\cell remote.c\cell\row
\cell show_remote_cmd()\cell remote.c\cell\row
\cell show_remote_debugflags_command()\cell remote.c\cell\row
\cell show_remote_protocol_P_packet_cmd()\cell remote.c\cell\row
\cell show_remote_protocol_Z_access_wp_packet_cmd()\cell remote.c\cell\row
\cell show_remote_protocol_Z_hardware_bp_packet_cmd()\cell remote.c\cell\row
\cell show_remote_protocol_Z_packet_cmd()\cell remote.c\cell\row
\cell show_remote_protocol_Z_read_wp_packet_cmd()\cell remote.c\cell\row
\cell show_remote_protocol_Z_software_bp_packet_cmd()\cell remote.c\cell\row
\cell show_remote_protocol_Z_write_wp_packet_cmd()\cell remote.c\cell\row
\cell show_remote_protocol_binary_download_cmd()\cell remote.c\cell\row
\cell show_remote_protocol_p_packet_cmd()\cell remote.c\cell\row
\cell show_remote_protocol_qGetTLSAddr_packet_cmd()\cell remote.c\cell\row
\cell show_remote_protocol_qPart_auxv_packet_cmd()\cell remote.c\cell\row
\cell show_remote_protocol_qSymbol_packet_cmd()\cell remote.c\cell\row
\cell show_remote_protocol_vcont_packet_cmd()\cell remote.c\cell\row
Refs Var:\cell deprecated_target_new_objfile_hook\cell symfile.c\cell\row
\cell extended_async_remote_ops\cell remote.c\cell\row
\cell extended_remote_ops\cell remote.c\cell\row
\cell remote_Z_packet_detect\cell remote.c\cell\row
\cell remote_address_size\cell remote.c\cell\row
\cell remote_async_ops\cell remote.c\cell\row
\cell remote_break\cell remote.c\cell\row
\cell remote_debugflags\cell remote.c\cell\row
\cell remote_gdbarch_data_handle\cell remote.c\cell\row
\cell remote_hw_breakpoint_limit\cell remote.c\cell\row
\cell remote_hw_watchpoint_limit\cell remote.c\cell\row
\cell remote_macosx_exec_dir\cell remote.c\cell\row
\cell remote_macosx_ops\cell remote.c\cell\row
\cell remote_new_objfile_chain\cell remote.c\cell\row
\cell remote_ops\cell remote.c\cell\row
\cell remote_protocol_P\cell remote.c\cell\row
\cell remote_protocol_Z\cell remote.c\cell\row
\cell remote_protocol_binary_download\cell remote.c\cell\row
\cell remote_protocol_p\cell remote.c\cell\row
\cell remote_protocol_qGetTLSAddr\cell remote.c\cell\row
\cell remote_protocol_qPart_auxv\cell remote.c\cell\row
\cell remote_protocol_qSymbol\cell remote.c\cell\row
\cell remote_protocol_vcont\cell remote.c\cell\row
\cell user_requested_no_ack_mode\cell remote.c\cell\row
\cell  cmdlist, maintenancelist, setlist, showlist\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function async_remote_interrupt_twice()\par}
{\s5\f1\fs20\ql\sb50\sa50 void async_remote_interrupt_twice ( gdb_client_data arg )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.h\cell\cell\row
Calls: \cell fprintf_unfiltered()\cell utils.c\cell\row
\cell interrupt_query()\cell remote.c\cell\row
\cell  signal()\cell\cell\row
Called by:\cell inferior_event_handler()\cell inf-loop.c\cell\row
Used in:\cell handle_remote_sigint()\cell remote.c\cell\row
Refs Func:\cell handle_remote_sigint()\cell remote.c\cell\row
Refs Var:\cell gdb_stdlog\cell main.c\cell\row
\cell remote_debug\cell top.c\cell\row
\cell target_executing\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function dump_packets_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 void dump_packets_command ( const char* unused, int fromtty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.h\cell\cell\row
Calls: \cell dump_protocol_log()\cell remote.c\cell\row
\cell error()\cell utils.c\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell remote_desc\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function getpkt()\par}
{\s5\f1\fs20\ql\sb50\sa50 void getpkt ( char* buf, long sizeof_buf, int forever )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.h\cell\cell\row
Calls: \cell getpkt_sane()\cell remote.c\cell\row
Called by:\cell check_binary_download()\cell remote.c\cell\row
\cell compare_sections_command()\cell remote.c\cell\row
\cell extended_remote_restart()\cell remote.c\cell\row
\cell get_offsets()\cell remote.c\cell\row
\cell packet_command()\cell remote.c\cell\row
\cell remote_async_wait()\cell remote.c\cell\row
\cell remote_check_symbols()\cell remote.c\cell\row
\cell remote_current_thread()\cell remote.c\cell\row
\cell remote_fetch_registers()\cell remote.c\cell\row
\cell remote_get_noisy_reply()\cell tracepoint.c\cell\row
\cell remote_get_thread_local_address()\cell remote.c\cell\row
\cell remote_get_threadinfo()\cell remote.c\cell\row
\cell remote_get_threadlist()\cell remote.c\cell\row
\cell remote_insert_breakpoint()\cell remote.c\cell\row
\cell remote_insert_hw_breakpoint()\cell remote.c\cell\row
\cell remote_insert_watchpoint()\cell remote.c\cell\row
\cell remote_macosx_create_inferior()\cell remote.c\cell\row
\cell remote_macosx_get_all_image_infos_addr()\cell remote.c\cell\row
\cell remote_open_1()\cell remote.c\cell\row
\cell remote_rcmd()\cell remote.c\cell\row
\cell remote_read_bytes()\cell remote.c\cell\row
\cell remote_remove_breakpoint()\cell remote.c\cell\row
\cell remote_remove_hw_breakpoint()\cell remote.c\cell\row
\cell remote_remove_watchpoint()\cell remote.c\cell\row
\cell remote_send()\cell remote.c\cell\row
\cell remote_set_transparent_ranges()\cell tracepoint.c\cell\row
\cell remote_thread_alive()\cell remote.c\cell\row
\cell remote_threads_extra_info()\cell remote.c\cell\row
\cell remote_threads_info()\cell remote.c\cell\row
\cell remote_vcont_probe()\cell remote.c\cell\row
\cell remote_wait()\cell remote.c\cell\row
\cell remote_write_bytes()\cell remote.c\cell\row
\cell remote_xfer_partial()\cell remote.c\cell\row
\cell send_disable_aslr()\cell remote.c\cell\row
\cell send_remote_debugflags_pkt()\cell remote.c\cell\row
\cell send_remote_max_payload_size()\cell remote.c\cell\row
\cell set_thread()\cell remote.c\cell\row
\cell start_no_ack_mode()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function int_to_threadref()\par}
{\s5\f1\fs20\ql\sb50\sa50 void int_to_threadref ( threadref* id, int value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Called by:\cell remote_threads_extra_info()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function push_remote_macosx_target()\par}
{\s5\f1\fs20\ql\sb50\sa50 void push_remote_macosx_target ( char* name, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell target.h\cell\cell\row
Calls: \cell printf_filtered()\cell utils.c\cell\row
\cell remote_macosx_open()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function push_remote_target()\par}
{\s5\f1\fs20\ql\sb50\sa50 void push_remote_target ( const char* name, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell target.h\cell\cell\row
Calls: \cell printf_filtered()\cell utils.c\cell\row
\cell remote_open()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function putpkt()\par}
{\s5\f1\fs20\ql\sb50\sa50 int putpkt ( const char* buf )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.h\cell\cell\row
Calls: \cell putpkt_binary()\cell remote.c\cell\row
\cell  strlen()\cell\cell\row
Called by:\cell compare_sections_command()\cell remote.c\cell\row
\cell extended_remote_restart()\cell remote.c\cell\row
\cell finish_tfind_command()\cell tracepoint.c\cell\row
\cell get_offsets()\cell remote.c\cell\row
\cell packet_command()\cell remote.c\cell\row
\cell remote_async_wait()\cell remote.c\cell\row
\cell remote_check_symbols()\cell remote.c\cell\row
\cell remote_current_thread()\cell remote.c\cell\row
\cell remote_fileio_reply()\cell remote-fileio.c\cell\row
\cell remote_get_thread_local_address()\cell remote.c\cell\row
\cell remote_get_threadinfo()\cell remote.c\cell\row
\cell remote_get_threadlist()\cell remote.c\cell\row
\cell remote_insert_breakpoint()\cell remote.c\cell\row
\cell remote_insert_hw_breakpoint()\cell remote.c\cell\row
\cell remote_insert_watchpoint()\cell remote.c\cell\row
\cell remote_macosx_attach()\cell remote.c\cell\row
\cell remote_macosx_create_inferior()\cell remote.c\cell\row
\cell remote_macosx_get_all_image_infos_addr()\cell remote.c\cell\row
\cell remote_macosx_query_qenvironment_hex_packet_supported()\cell remote.c\cell\row
\cell remote_open_1()\cell remote.c\cell\row
\cell remote_rcmd()\cell remote.c\cell\row
\cell remote_read_bytes()\cell remote.c\cell\row
\cell remote_remove_breakpoint()\cell remote.c\cell\row
\cell remote_remove_hw_breakpoint()\cell remote.c\cell\row
\cell remote_remove_watchpoint()\cell remote.c\cell\row
\cell remote_resume()\cell remote.c\cell\row
\cell remote_send()\cell remote.c\cell\row
\cell remote_set_transparent_ranges()\cell tracepoint.c\cell\row
\cell remote_start_remote()\cell remote.c\cell\row
\cell remote_thread_alive()\cell remote.c\cell\row
\cell remote_threads_extra_info()\cell remote.c\cell\row
\cell remote_threads_info()\cell remote.c\cell\row
\cell remote_vcont_probe()\cell remote.c\cell\row
\cell remote_vcont_resume()\cell remote.c\cell\row
\cell remote_wait()\cell remote.c\cell\row
\cell remote_xfer_partial()\cell remote.c\cell\row
\cell send_disable_aslr()\cell remote.c\cell\row
\cell send_remote_debugflags_pkt()\cell remote.c\cell\row
\cell send_remote_max_payload_size()\cell remote.c\cell\row
\cell set_thread()\cell remote.c\cell\row
\cell start_no_ack_mode()\cell remote.c\cell\row
\cell trace_start_command()\cell tracepoint.c\cell\row
\cell trace_status_command()\cell tracepoint.c\cell\row
\cell trace_stop_command()\cell tracepoint.c\cell\row
Used in:\cell remote_async_kill()\cell remote.c\cell\row
\cell remote_kill()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function remote_console_output()\par}
{\s5\f1\fs20\ql\sb50\sa50 void remote_console_output ( char* msg )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.h\cell\cell\row
Calls: \cell fputs_unfiltered()\cell ui-file.c\cell\row
\cell fromhex()\cell remote.c\cell\row
\cell gdb_flush()\cell ui-file.c\cell\row
Called by:\cell remote_async_wait()\cell remote.c\cell\row
\cell remote_get_noisy_reply()\cell tracepoint.c\cell\row
\cell remote_rcmd()\cell remote.c\cell\row
\cell remote_wait()\cell remote.c\cell\row
Refs Var:\cell gdb_stdtarg\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function remote_macosx_attach()\par}
{\s5\f1\fs20\ql\sb50\sa50 void remote_macosx_attach ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.h\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
\cell get_remote_state()\cell remote.c\cell\row
\cell getpkt_sane()\cell remote.c\cell\row
\cell pack_hex_byte()\cell remote.c\cell\row
\cell pack_string_as_ascii_hex()\cell remote.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell remote_macosx_complete_create_or_attach()\cell remote.c\cell\row
\cell  __builtin___snprintf_chk(), __builtin___strncpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_strncpy_chk(), strchr(), strlen(), strstr(), strtol()\cell\cell\row
Used in:\cell init_remote_macosx_ops()\cell remote.c\cell\row
Refs Var:\cell remote_macosx_exec_dir\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function remote_macosx_create_inferior()\par}
{\s5\f1\fs20\ql\sb50\sa50 void remote_macosx_create_inferior ( char* exec_file, char* allargs, char** env, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.h\cell\cell\row
Calls: \cell breakup_args()\cell utils.c\cell\row
\cell do_cleanups()\cell utils.c\cell\row
\cell error()\cell utils.c\cell\row
\cell get_remote_state()\cell remote.c\cell\row
\cell getpkt()\cell remote.c\cell\row
\cell getpkt_sane()\cell remote.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell pack_hex_byte()\cell remote.c\cell\row
\cell pack_string_as_ascii_hex()\cell remote.c\cell\row
\cell pop_target()\cell target/target.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell remote_macosx_complete_create_or_attach()\cell remote.c\cell\row
\cell remote_macosx_query_qenvironment_hex_packet_supported()\cell remote.c\cell\row
\cell send_disable_aslr()\cell remote.c\cell\row
\cell warning()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  __builtin___snprintf_chk(), __builtin___strcpy_chk(), __builtin_object_size(), __inline_strcpy_chk(), basename(), strlen(), xstrdup()\cell\cell\row
Used in:\cell init_remote_macosx_ops()\cell remote.c\cell\row
Refs Func:\cell xfree()\cell utils.c\cell\row
Refs Var:\cell remote_macosx_exec_dir\cell remote.c\cell\row
\cell remote_timeout\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function remote_macosx_get_all_image_infos_addr()\par}
{\s5\f1\fs20\ql\sb50\sa50 CORE_ADDR remote_macosx_get_all_image_infos_addr ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.h\cell\cell\row
Calls: \cell get_remote_state()\cell remote.c\cell\row
\cell getpkt()\cell remote.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell unpack_varlen_hex()\cell remote.c\cell\row
\cell  isxdigit()\cell\cell\row
Called by:\cell remote_macosx_complete_create_or_attach()\cell remote.c\cell\row
\cell remote_macosx_open()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function remote_read_bytes()\par}
{\s5\f1\fs20\ql\sb50\sa50 int remote_read_bytes ( CORE_ADDR memaddr, char* myaddr, int len )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.h\cell\cell\row
Calls: \cell get_memory_read_packet_size()\cell remote.c\cell\row
\cell getpkt()\cell remote.c\cell\row
\cell hex2bin()\cell remote.c\cell\row
\cell hexnumstr()\cell remote.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell remote_address_masked()\cell remote.c\cell\row
\cell  __builtin_alloca(), __error(), isxdigit()\cell\cell\row
Called by:\cell remote_fileio_func_open()\cell remote-fileio.c\cell\row
\cell remote_fileio_func_rename()\cell remote-fileio.c\cell\row
\cell remote_fileio_func_stat()\cell remote-fileio.c\cell\row
\cell remote_fileio_func_system()\cell remote-fileio.c\cell\row
\cell remote_fileio_func_unlink()\cell remote-fileio.c\cell\row
\cell remote_fileio_func_write()\cell remote-fileio.c\cell\row
\cell remote_xfer_memory()\cell remote.c\cell\row
\cell remote_xfer_partial()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function remote_write_bytes()\par}
{\s5\f1\fs20\ql\sb50\sa50 int remote_write_bytes ( CORE_ADDR memaddr, const gdb_byte* myaddr, int len )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.h\cell\cell\row
Calls: \cell bin2hex()\cell remote.c\cell\row
\cell check_binary_download()\cell remote.c\cell\row
\cell get_memory_write_packet_size()\cell remote.c\cell\row
\cell getpkt()\cell remote.c\cell\row
\cell hexnumlen()\cell remote.c\cell\row
\cell hexnumnstr()\cell remote.c\cell\row
\cell hexnumstr()\cell remote.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell putpkt_binary()\cell remote.c\cell\row
\cell remote_address_masked()\cell remote.c\cell\row
\cell  __builtin_alloca(), __error(), strlen()\cell\cell\row
Called by:\cell remote_fileio_write_bytes()\cell remote-fileio.c\cell\row
\cell remote_xfer_memory()\cell remote.c\cell\row
\cell remote_xfer_partial()\cell remote.c\cell\row
Refs Var:\cell remote_protocol_binary_download\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function unpack_varlen_hex()\par}
{\s5\f1\fs20\ql\sb50\sa50 char* unpack_varlen_hex ( char* buff, unsigned long* result )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell ishex()\cell remote.c\cell\row
Called by:\cell remote_async_wait()\cell remote.c\cell\row
\cell remote_get_thread_local_address()\cell remote.c\cell\row
\cell remote_macosx_get_all_image_infos_addr()\cell remote.c\cell\row
\cell remote_wait()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function add_incoming_pkt_to_protocol_log()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void add_incoming_pkt_to_protocol_log ( const char* p )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell add_pkt_to_protocol_log()\cell remote.c\cell\row
Called by:\cell getpkt_sane()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function add_outgoing_pkt_to_protocol_log()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void add_outgoing_pkt_to_protocol_log ( const char* p )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell add_pkt_to_protocol_log()\cell remote.c\cell\row
Called by:\cell putpkt_binary()\cell remote.c\cell\row
\cell remote_start_remote()\cell remote.c\cell\row
\cell remote_stop()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function add_packet_config_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void add_packet_config_cmd ( struct packet_config* config, const char* name, const char* title, cmd_sfunc_ftype* set_func, show_value_ftype* show_func, struct cmd_list_element** set_remote_list, struct cmd_list_element** show_remote_list, int legacy )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell xstrprintf()\cell utils.c\cell\row
\cell  add_alias_cmd(), add_setshow_auto_boolean_cmd()\cell\cell\row
Called by:\cell _initialize_remote()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function add_pkt_to_protocol_log()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void add_pkt_to_protocol_log ( const char* p, enum pkt_direction direction )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell  __builtin___strcpy_chk(), __builtin___strncpy_chk(), __builtin_object_size(), __inline_strcpy_chk(), __inline_strncpy_chk(), gettimeofday()\cell\cell\row
Called by:\cell add_incoming_pkt_to_protocol_log()\cell remote.c\cell\row
\cell add_outgoing_pkt_to_protocol_log()\cell remote.c\cell\row
Refs Var:\cell current_remote_stats\cell remote.c\cell\row
\cell protocol_log\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function async_remote_interrupt()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void async_remote_interrupt ( gdb_client_data arg )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell fprintf_unfiltered()\cell utils.c\cell\row
Used in:\cell initialize_sigint_signal_handler()\cell remote.c\cell\row
Refs Var:\cell current_target\cell target/target.c\cell\row
\cell gdb_stdlog\cell main.c\cell\row
\cell remote_debug\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function bin2hex()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int bin2hex ( const char* bin, char* hex, int count )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell tohex()\cell remote.c\cell\row
\cell  strlen()\cell\cell\row
Called by:\cell remote_rcmd()\cell remote.c\cell\row
\cell remote_store_registers()\cell remote.c\cell\row
\cell remote_write_bytes()\cell remote.c\cell\row
\cell store_register_using_P()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function build_remote_gdbarch_data()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void build_remote_gdbarch_data ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell gdbarch_addr_bit()\cell gdbarch.c\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\cell remote_address_size\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function check_binary_download()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void check_binary_download ( CORE_ADDR addr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell fprintf_unfiltered()\cell utils.c\cell\row
\cell get_remote_state()\cell remote.c\cell\row
\cell getpkt()\cell remote.c\cell\row
\cell hexnumstr()\cell remote.c\cell\row
\cell putpkt_binary()\cell remote.c\cell\row
\cell  __builtin_alloca()\cell\cell\row
Called by:\cell remote_write_bytes()\cell remote.c\cell\row
Refs Var:\cell gdb_stdlog\cell main.c\cell\row
\cell remote_debug\cell top.c\cell\row
\cell remote_protocol_binary_download\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function cleanup_sigint_signal_handler()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void cleanup_sigint_signal_handler ( void* dummy )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell delete_async_signal_handler()\cell event-loop.c\cell\row
\cell  signal()\cell\cell\row
Called by:\cell remote_async_terminal_ours()\cell remote.c\cell\row
Refs Func:\cell handle_sigint()\cell event-top.c\cell\row
Refs Var:\cell sigint_remote_token\cell remote.c\cell\row
\cell sigint_remote_twice_token\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function compare_sections_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void compare_sections_command ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell crc32()\cell remote.c\cell\row
\cell do_cleanups()\cell utils.c\cell\row
\cell error()\cell utils.c\cell\row
\cell fromhex()\cell remote.c\cell\row
\cell get_remote_state()\cell remote.c\cell\row
\cell getpkt()\cell remote.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell paddr()\cell utils.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell warning()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell xsnprintf()\cell utils.c\cell\row
\cell  __builtin_alloca(), bfd_get_section_contents(), strcmp()\cell\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Func:\cell xfree()\cell utils.c\cell\row
Refs Var:\cell current_target\cell target/target.c\cell\row
\cell  exec_bfd\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function copy_threadref()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void copy_threadref ( threadref* dest, threadref* src )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Called by:\cell remote_threadlist_iterator()\cell remote.c\cell\row
\cell remote_unpack_thread_info_response()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function crc32()\par}
{\s5\f1\fs20\ql\sb50\sa50 static unsigned long crc32 ( unsigned char* buf, int len, unsigned int crc )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Called by:\cell compare_sections_command()\cell remote.c\cell\row
Refs Var:\cell crc32_table\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function dump_protocol_log()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void dump_protocol_log ( const char* message )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell fprintf_filtered()\cell utils.c\cell\row
\cell  isprint()\cell\cell\row
Called by:\cell dump_packets_command()\cell remote.c\cell\row
\cell fromhex()\cell remote.c\cell\row
\cell putpkt_binary()\cell remote.c\cell\row
Refs Var:\cell gdb_stderr\cell main.c\cell\row
\cell protocol_log\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function end_remote_timer()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void end_remote_timer ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell  __builtin___memcpy_chk(), __builtin_object_size(), __inline_memcpy_chk(), gettimeofday()\cell\cell\row
Called by:\cell getpkt_sane()\cell remote.c\cell\row
\cell putpkt_binary()\cell remote.c\cell\row
\cell readchar()\cell remote.c\cell\row
\cell remote_start_remote()\cell remote.c\cell\row
\cell remote_stop()\cell remote.c\cell\row
Refs Var:\cell current_remote_stats\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function extended_remote_async_create_inferior()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void extended_remote_async_create_inferior ( char* exec_file, char* args, char** env, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell clear_proceed_status()\cell infrun.c\cell\row
\cell extended_remote_restart()\cell remote.c\cell\row
\cell insert_breakpoints()\cell breakpoint.c\cell\row
\cell proceed()\cell infrun.c\cell\row
\cell remove_breakpoints()\cell breakpoint.c\cell\row
Used in:\cell init_extended_async_remote_ops()\cell remote.c\cell\row
Refs Func:\cell inferior_event_handler()\cell inf-loop.c\cell\row
Refs Var:\cell current_target\cell target/target.c\cell\row
\cell gdb_override_async\cell target/target.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function extended_remote_async_open()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void extended_remote_async_open ( const char* name, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell remote_open_1()\cell remote.c\cell\row
Used in:\cell init_extended_async_remote_ops()\cell remote.c\cell\row
Refs Var:\cell extended_async_remote_ops\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function extended_remote_create_inferior()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void extended_remote_create_inferior ( char* exec_file, char* args, char** env, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell clear_proceed_status()\cell infrun.c\cell\row
\cell extended_remote_restart()\cell remote.c\cell\row
\cell insert_breakpoints()\cell breakpoint.c\cell\row
\cell proceed()\cell infrun.c\cell\row
\cell remove_breakpoints()\cell breakpoint.c\cell\row
Used in:\cell init_extended_remote_ops()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function extended_remote_mourn()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void extended_remote_mourn ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Used in:\cell init_extended_async_remote_ops()\cell remote.c\cell\row
\cell init_extended_remote_ops()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function extended_remote_open()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void extended_remote_open ( const char* name, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell remote_open_1()\cell remote.c\cell\row
Used in:\cell init_extended_remote_ops()\cell remote.c\cell\row
Refs Var:\cell extended_remote_ops\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function extended_remote_restart()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void extended_remote_restart ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell get_remote_state()\cell remote.c\cell\row
\cell getpkt()\cell remote.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell xsnprintf()\cell utils.c\cell\row
\cell  __builtin_alloca()\cell\cell\row
Called by:\cell extended_remote_async_create_inferior()\cell remote.c\cell\row
\cell extended_remote_create_inferior()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function fetch_register_using_p()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int fetch_register_using_p ( int regnum )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell error()\cell utils.c\cell\row
\cell fromhex()\cell remote.c\cell\row
\cell get_remote_state()\cell remote.c\cell\row
\cell hexnumstr()\cell remote.c\cell\row
\cell regcache_raw_supply()\cell regcache.c\cell\row
\cell remote_send()\cell remote.c\cell\row
\cell set_register_cached()\cell regcache.c\cell\row
\cell  __builtin_alloca()\cell\cell\row
Called by:\cell remote_fetch_registers()\cell remote.c\cell\row
Refs Var:\cell current_regcache\cell regcache.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function fromhex()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int fromhex ( int a )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell dump_protocol_log()\cell remote.c\cell\row
\cell error()\cell utils.c\cell\row
\cell remote_backtrace_self()\cell remote.c\cell\row
Called by:\cell compare_sections_command()\cell remote.c\cell\row
\cell fetch_register_using_p()\cell remote.c\cell\row
\cell get_offsets()\cell remote.c\cell\row
\cell hex2bin()\cell remote.c\cell\row
\cell read_frame()\cell remote.c\cell\row
\cell remote_async_wait()\cell remote.c\cell\row
\cell remote_console_output()\cell remote.c\cell\row
\cell remote_fetch_registers()\cell remote.c\cell\row
\cell remote_rcmd()\cell remote.c\cell\row
\cell remote_wait()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function get_memory_packet_size()\par}
{\s5\f1\fs20\ql\sb50\sa50 static size_t get_memory_packet_size ( struct memory_packet_config* config )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell get_remote_state()\cell remote.c\cell\row
Called by:\cell get_memory_read_packet_size()\cell remote.c\cell\row
\cell get_memory_write_packet_size()\cell remote.c\cell\row
\cell show_memory_packet_size()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function get_memory_read_packet_size()\par}
{\s5\f1\fs20\ql\sb50\sa50 static size_t get_memory_read_packet_size ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell get_memory_packet_size()\cell remote.c\cell\row
\cell get_remote_state()\cell remote.c\cell\row
Called by:\cell remote_read_bytes()\cell remote.c\cell\row
Refs Var:\cell memory_read_packet_config\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function get_memory_write_packet_size()\par}
{\s5\f1\fs20\ql\sb50\sa50 static long get_memory_write_packet_size ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell get_memory_packet_size()\cell remote.c\cell\row
Called by:\cell remote_write_bytes()\cell remote.c\cell\row
Refs Var:\cell memory_write_packet_config\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function get_offsets()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void get_offsets ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
\cell executable_objfile()\cell objfiles.c\cell\row
\cell fromhex()\cell remote.c\cell\row
\cell get_remote_state()\cell remote.c\cell\row
\cell getpkt()\cell remote.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell objfile_relocate()\cell objfiles.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell warning()\cell utils.c\cell\row
\cell  __builtin___memcpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_memcpy_chk(), strncmp()\cell\cell\row
Called by:\cell remote_start_remote()\cell remote.c\cell\row
Refs Var:\cell symfile_objfile\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function get_remote_state()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct remote_state* get_remote_state ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell new_gdbarch_data()\cell gdbarch.c\cell\row
Called by:\cell check_binary_download()\cell remote.c\cell\row
\cell compare_sections_command()\cell remote.c\cell\row
\cell extended_remote_restart()\cell remote.c\cell\row
\cell fetch_register_using_p()\cell remote.c\cell\row
\cell get_memory_packet_size()\cell remote.c\cell\row
\cell get_memory_read_packet_size()\cell remote.c\cell\row
\cell get_offsets()\cell remote.c\cell\row
\cell packet_command()\cell remote.c\cell\row
\cell parse_threadlist_response()\cell remote.c\cell\row
\cell putpkt_binary()\cell remote.c\cell\row
\cell remote_async_wait()\cell remote.c\cell\row
\cell remote_check_symbols()\cell remote.c\cell\row
\cell remote_current_thread()\cell remote.c\cell\row
\cell remote_detach()\cell remote.c\cell\row
\cell remote_fetch_registers()\cell remote.c\cell\row
\cell remote_get_thread_local_address()\cell remote.c\cell\row
\cell remote_get_threadinfo()\cell remote.c\cell\row
\cell remote_get_threadlist()\cell remote.c\cell\row
\cell remote_insert_breakpoint()\cell remote.c\cell\row
\cell remote_insert_hw_breakpoint()\cell remote.c\cell\row
\cell remote_insert_watchpoint()\cell remote.c\cell\row
\cell remote_macosx_attach()\cell remote.c\cell\row
\cell remote_macosx_complete_create_or_attach()\cell remote.c\cell\row
\cell remote_macosx_create_inferior()\cell remote.c\cell\row
\cell remote_macosx_get_all_image_infos_addr()\cell remote.c\cell\row
\cell remote_macosx_query_qenvironment_hex_packet_supported()\cell remote.c\cell\row
\cell remote_open_1()\cell remote.c\cell\row
\cell remote_prepare_to_store()\cell remote.c\cell\row
\cell remote_rcmd()\cell remote.c\cell\row
\cell remote_remove_breakpoint()\cell remote.c\cell\row
\cell remote_remove_hw_breakpoint()\cell remote.c\cell\row
\cell remote_remove_watchpoint()\cell remote.c\cell\row
\cell remote_resume()\cell remote.c\cell\row
\cell remote_start_remote()\cell remote.c\cell\row
\cell remote_store_registers()\cell remote.c\cell\row
\cell remote_threads_extra_info()\cell remote.c\cell\row
\cell remote_threads_info()\cell remote.c\cell\row
\cell remote_unpack_thread_info_response()\cell remote.c\cell\row
\cell remote_vcont_resume()\cell remote.c\cell\row
\cell remote_wait()\cell remote.c\cell\row
\cell remote_xfer_partial()\cell remote.c\cell\row
\cell send_disable_aslr()\cell remote.c\cell\row
\cell send_remote_max_payload_size()\cell remote.c\cell\row
\cell set_thread()\cell remote.c\cell\row
\cell store_register_using_P()\cell remote.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\cell remote_gdbarch_data_handle\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function getpkt_sane()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int getpkt_sane ( char* buf, long sizeof_buf, int forever )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell add_incoming_pkt_to_protocol_log()\cell remote.c\cell\row
\cell end_remote_timer()\cell remote.c\cell\row
\cell error()\cell utils.c\cell\row
\cell fprintf_unfiltered()\cell utils.c\cell\row
\cell fputs_filtered()\cell utils.c\cell\row
\cell fputstr_unfiltered()\cell utils.c\cell\row
\cell printf_unfiltered()\cell utils.c\cell\row
\cell quit()\cell utils.c\cell\row
\cell read_frame()\cell remote.c\cell\row
\cell readchar()\cell remote.c\cell\row
\cell serial_write()\cell serial.c\cell\row
\cell start_remote_timer()\cell remote.c\cell\row
\cell  __builtin___strcpy_chk(), __builtin_object_size(), __inline_strcpy_chk()\cell\cell\row
Called by:\cell getpkt()\cell remote.c\cell\row
\cell remote_macosx_attach()\cell remote.c\cell\row
\cell remote_macosx_create_inferior()\cell remote.c\cell\row
\cell remote_macosx_query_qenvironment_hex_packet_supported()\cell remote.c\cell\row
Refs Var:\cell current_remote_stats\cell remote.c\cell\row
\cell current_target\cell target/target.c\cell\row
\cell gdb_stdlog\cell main.c\cell\row
\cell no_ack_mode\cell remote.c\cell\row
\cell quit_flag\cell utils.c\cell\row
\cell remote_debug\cell top.c\cell\row
\cell remote_desc\cell remote.c\cell\row
\cell remote_timeout\cell top.c\cell\row
\cell total_packets_received\cell remote.c\cell\row
\cell watchdog\cell maint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function handle_remote_sigint()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void handle_remote_sigint ( int sig )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell create_async_signal_handler()\cell event-loop.c\cell\row
\cell mark_async_signal_handler_wrapper()\cell event-top.c\cell\row
\cell  signal()\cell\cell\row
Used in:\cell async_remote_interrupt_twice()\cell remote.c\cell\row
\cell initialize_sigint_signal_handler()\cell remote.c\cell\row
Refs Func:\cell async_remote_interrupt_twice()\cell remote.c\cell\row
\cell handle_remote_sigint_twice()\cell remote.c\cell\row
Refs Var:\cell sigint_remote_token\cell remote.c\cell\row
\cell sigint_remote_twice_token\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function handle_remote_sigint_twice()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void handle_remote_sigint_twice ( int sig )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell create_async_signal_handler()\cell event-loop.c\cell\row
\cell mark_async_signal_handler_wrapper()\cell event-top.c\cell\row
\cell  signal()\cell\cell\row
Used in:\cell handle_remote_sigint()\cell remote.c\cell\row
Refs Func:\cell handle_sigint()\cell event-top.c\cell\row
\cell inferior_event_handler_wrapper()\cell inf-loop.c\cell\row
Refs Var:\cell sigint_remote_twice_token\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function hex2bin()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int hex2bin ( const char* hex, char* bin, int count )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell fromhex()\cell remote.c\cell\row
Called by:\cell remote_async_wait()\cell remote.c\cell\row
\cell remote_check_symbols()\cell remote.c\cell\row
\cell remote_read_bytes()\cell remote.c\cell\row
\cell remote_threads_extra_info()\cell remote.c\cell\row
\cell remote_wait()\cell remote.c\cell\row
\cell remote_xfer_partial()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function hexnumlen()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int hexnumlen ( unsigned long num )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Called by:\cell hexnumstr()\cell remote.c\cell\row
\cell remote_write_bytes()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function hexnumnstr()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int hexnumnstr ( char* buf, unsigned long num, int width )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Called by:\cell hexnumstr()\cell remote.c\cell\row
\cell remote_write_bytes()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function hexnumstr()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int hexnumstr ( char* buf, unsigned long num )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell hexnumlen()\cell remote.c\cell\row
\cell hexnumnstr()\cell remote.c\cell\row
Called by:\cell check_binary_download()\cell remote.c\cell\row
\cell fetch_register_using_p()\cell remote.c\cell\row
\cell remote_get_thread_local_address()\cell remote.c\cell\row
\cell remote_insert_breakpoint()\cell remote.c\cell\row
\cell remote_insert_hw_breakpoint()\cell remote.c\cell\row
\cell remote_insert_watchpoint()\cell remote.c\cell\row
\cell remote_read_bytes()\cell remote.c\cell\row
\cell remote_remove_breakpoint()\cell remote.c\cell\row
\cell remote_remove_hw_breakpoint()\cell remote.c\cell\row
\cell remote_remove_watchpoint()\cell remote.c\cell\row
\cell remote_write_bytes()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function init_all_packet_configs()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void init_all_packet_configs ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell update_packet_config()\cell remote.c\cell\row
Called by:\cell remote_open_1()\cell remote.c\cell\row
Refs Var:\cell remote_protocol_P\cell remote.c\cell\row
\cell remote_protocol_Z\cell remote.c\cell\row
\cell remote_protocol_binary_download\cell remote.c\cell\row
\cell remote_protocol_p\cell remote.c\cell\row
\cell remote_protocol_qGetTLSAddr\cell remote.c\cell\row
\cell remote_protocol_qPart_auxv\cell remote.c\cell\row
\cell remote_protocol_qSymbol\cell remote.c\cell\row
\cell remote_protocol_vcont\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function init_extended_async_remote_ops()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void init_extended_async_remote_ops ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Called by:\cell _initialize_remote()\cell remote.c\cell\row
Refs Func:\cell extended_remote_async_create_inferior()\cell remote.c\cell\row
\cell extended_remote_async_open()\cell remote.c\cell\row
\cell extended_remote_mourn()\cell remote.c\cell\row
Refs Var:\cell extended_async_remote_ops\cell remote.c\cell\row
\cell remote_async_ops\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function init_extended_remote_ops()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void init_extended_remote_ops ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Called by:\cell _initialize_remote()\cell remote.c\cell\row
Refs Func:\cell extended_remote_create_inferior()\cell remote.c\cell\row
\cell extended_remote_mourn()\cell remote.c\cell\row
\cell extended_remote_open()\cell remote.c\cell\row
Refs Var:\cell extended_remote_ops\cell remote.c\cell\row
\cell remote_ops\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function init_remote_async_ops()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void init_remote_async_ops ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Called by:\cell _initialize_remote()\cell remote.c\cell\row
Refs Func:\cell generic_load()\cell symfile.c\cell\row
\cell remote_async()\cell remote.c\cell\row
\cell remote_async_kill()\cell remote.c\cell\row
\cell remote_async_mourn()\cell remote.c\cell\row
\cell remote_async_open()\cell remote.c\cell\row
\cell remote_async_resume()\cell remote.c\cell\row
\cell remote_async_terminal_inferior()\cell remote.c\cell\row
\cell remote_async_terminal_ours()\cell remote.c\cell\row
\cell remote_async_wait()\cell remote.c\cell\row
\cell remote_can_async_p()\cell remote.c\cell\row
\cell remote_check_watch_resources()\cell remote.c\cell\row
\cell remote_close()\cell remote.c\cell\row
\cell remote_detach()\cell remote.c\cell\row
\cell remote_disconnect()\cell remote.c\cell\row
\cell remote_fetch_registers()\cell remote.c\cell\row
\cell remote_files_info()\cell remote.c\cell\row
\cell remote_insert_breakpoint()\cell remote.c\cell\row
\cell remote_insert_hw_breakpoint()\cell remote.c\cell\row
\cell remote_insert_watchpoint()\cell remote.c\cell\row
\cell remote_is_async_p()\cell remote.c\cell\row
\cell remote_pid_to_str()\cell remote.c\cell\row
\cell remote_prepare_to_store()\cell remote.c\cell\row
\cell remote_rcmd()\cell remote.c\cell\row
\cell remote_remove_breakpoint()\cell remote.c\cell\row
\cell remote_remove_hw_breakpoint()\cell remote.c\cell\row
\cell remote_remove_watchpoint()\cell remote.c\cell\row
\cell remote_stop()\cell remote.c\cell\row
\cell remote_stopped_by_watchpoint()\cell remote.c\cell\row
\cell remote_stopped_data_address()\cell remote.c\cell\row
\cell remote_store_registers()\cell remote.c\cell\row
\cell remote_thread_alive()\cell remote.c\cell\row
\cell remote_threads_extra_info()\cell remote.c\cell\row
\cell remote_threads_info()\cell remote.c\cell\row
\cell remote_xfer_memory()\cell remote.c\cell\row
\cell remote_xfer_partial()\cell remote.c\cell\row
Refs Var:\cell remote_async_ops\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function init_remote_macosx_ops()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void init_remote_macosx_ops ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Called by:\cell _initialize_remote()\cell remote.c\cell\row
Refs Func:\cell objc_setup_safe_print()\cell objc-lang.c\cell\row
\cell remote_detach()\cell remote.c\cell\row
\cell remote_macosx_attach()\cell remote.c\cell\row
\cell remote_macosx_create_inferior()\cell remote.c\cell\row
\cell remote_macosx_mourn()\cell remote.c\cell\row
\cell remote_macosx_open()\cell remote.c\cell\row
\cell  dyld_is_objfile_loaded(), dyld_lookup_and_bind_function(), macosx_check_safe_call(), macosx_enable_exception_callback(), macosx_find_exception_catchpoints(), macosx_get_current_exception_event(), macosx_load_dylib()\cell\cell\row
Refs Var:\cell remote_macosx_doc\cell remote.c\cell\row
\cell remote_macosx_longname\cell remote.c\cell\row
\cell remote_macosx_ops\cell remote.c\cell\row
\cell remote_macosx_shortname\cell remote.c\cell\row
\cell remote_ops\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function init_remote_ops()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void init_remote_ops ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Called by:\cell _initialize_remote()\cell remote.c\cell\row
Refs Func:\cell generic_load()\cell symfile.c\cell\row
\cell remote_check_watch_resources()\cell remote.c\cell\row
\cell remote_close()\cell remote.c\cell\row
\cell remote_detach()\cell remote.c\cell\row
\cell remote_disconnect()\cell remote.c\cell\row
\cell remote_fetch_registers()\cell remote.c\cell\row
\cell remote_files_info()\cell remote.c\cell\row
\cell remote_get_thread_local_address()\cell remote.c\cell\row
\cell remote_insert_breakpoint()\cell remote.c\cell\row
\cell remote_insert_hw_breakpoint()\cell remote.c\cell\row
\cell remote_insert_watchpoint()\cell remote.c\cell\row
\cell remote_kill()\cell remote.c\cell\row
\cell remote_mourn()\cell remote.c\cell\row
\cell remote_open()\cell remote.c\cell\row
\cell remote_pid_to_str()\cell remote.c\cell\row
\cell remote_prepare_to_store()\cell remote.c\cell\row
\cell remote_rcmd()\cell remote.c\cell\row
\cell remote_remove_breakpoint()\cell remote.c\cell\row
\cell remote_remove_hw_breakpoint()\cell remote.c\cell\row
\cell remote_remove_watchpoint()\cell remote.c\cell\row
\cell remote_resume()\cell remote.c\cell\row
\cell remote_stop()\cell remote.c\cell\row
\cell remote_stopped_by_watchpoint()\cell remote.c\cell\row
\cell remote_stopped_data_address()\cell remote.c\cell\row
\cell remote_store_registers()\cell remote.c\cell\row
\cell remote_thread_alive()\cell remote.c\cell\row
\cell remote_threads_extra_info()\cell remote.c\cell\row
\cell remote_threads_info()\cell remote.c\cell\row
\cell remote_wait()\cell remote.c\cell\row
\cell remote_xfer_memory()\cell remote.c\cell\row
\cell remote_xfer_partial()\cell remote.c\cell\row
Refs Var:\cell remote_ops\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function init_remote_state()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void* init_remote_state ( struct gdbarch* gdbarch )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell gdbarch_deprecated_register_byte()\cell gdbarch.c\cell\row
\cell gdbarch_num_pseudo_regs()\cell gdbarch.c\cell\row
\cell gdbarch_num_regs()\cell gdbarch.c\cell\row
\cell gdbarch_obstack_zalloc()\cell gdbarch.c\cell\row
\cell initialize_protocol_log()\cell remote.c\cell\row
\cell register_size()\cell regcache.c\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\cell g_max_remote_packet_size\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function initialize_protocol_log()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void initialize_protocol_log ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell xfree()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
Called by:\cell init_remote_state()\cell remote.c\cell\row
Refs Var:\cell protocol_log\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function initialize_sigint_signal_handler()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void initialize_sigint_signal_handler ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell create_async_signal_handler()\cell event-loop.c\cell\row
\cell  signal()\cell\cell\row
Called by:\cell remote_async_terminal_inferior()\cell remote.c\cell\row
Refs Func:\cell async_remote_interrupt()\cell remote.c\cell\row
\cell handle_remote_sigint()\cell remote.c\cell\row
Refs Var:\cell sigint_remote_token\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function interrupt_query()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void interrupt_query ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell query()\cell utils.c\cell\row
\cell  deprecated_throw_reason()\cell\cell\row
Called by:\cell async_remote_interrupt_twice()\cell remote.c\cell\row
\cell remote_interrupt_twice()\cell remote.c\cell\row
Refs Var:\cell current_target\cell target/target.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function ishex()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int ishex ( int ch, int* val )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Called by:\cell unpack_nibble()\cell remote.c\cell\row
\cell unpack_varlen_hex()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function pack_hex_byte()\par}
{\s5\f1\fs20\ql\sb50\sa50 static char* pack_hex_byte ( char* pkt, int byte )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Called by:\cell pack_int()\cell remote.c\cell\row
\cell pack_string_as_ascii_hex()\cell remote.c\cell\row
\cell pack_threadid()\cell remote.c\cell\row
\cell pack_threadlist_request()\cell remote.c\cell\row
\cell remote_macosx_attach()\cell remote.c\cell\row
\cell remote_macosx_create_inferior()\cell remote.c\cell\row
Refs Var:\cell hexchars\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function pack_int()\par}
{\s5\f1\fs20\ql\sb50\sa50 static char* pack_int ( char* buf, int value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell pack_hex_byte()\cell remote.c\cell\row
Called by:\cell pack_threadinfo_request()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function pack_nibble()\par}
{\s5\f1\fs20\ql\sb50\sa50 static char* pack_nibble ( char* buf, int nibble )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Called by:\cell pack_threadlist_request()\cell remote.c\cell\row
Refs Var:\cell hexchars\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function pack_string_as_ascii_hex()\par}
{\s5\f1\fs20\ql\sb50\sa50 static char* pack_string_as_ascii_hex ( char* pkt, const char* str, const char* end )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell pack_hex_byte()\cell remote.c\cell\row
\cell  strlen()\cell\cell\row
Called by:\cell remote_macosx_attach()\cell remote.c\cell\row
\cell remote_macosx_create_inferior()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function pack_threadid()\par}
{\s5\f1\fs20\ql\sb50\sa50 static char* pack_threadid ( char* pkt, threadref* id )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell pack_hex_byte()\cell remote.c\cell\row
Called by:\cell pack_threadinfo_request()\cell remote.c\cell\row
\cell pack_threadlist_request()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function pack_threadinfo_request()\par}
{\s5\f1\fs20\ql\sb50\sa50 static char* pack_threadinfo_request ( char* pkt, int mode, threadref* id )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell pack_int()\cell remote.c\cell\row
\cell pack_threadid()\cell remote.c\cell\row
Called by:\cell remote_get_threadinfo()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function pack_threadlist_request()\par}
{\s5\f1\fs20\ql\sb50\sa50 static char* pack_threadlist_request ( char* pkt, int startflag, int threadcount, threadref* nextthread )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell pack_hex_byte()\cell remote.c\cell\row
\cell pack_nibble()\cell remote.c\cell\row
\cell pack_threadid()\cell remote.c\cell\row
Called by:\cell remote_get_threadlist()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function packet_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void packet_command ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
\cell get_remote_state()\cell remote.c\cell\row
\cell getpkt()\cell remote.c\cell\row
\cell print_packet()\cell remote.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell puts_filtered()\cell utils.c\cell\row
\cell  __builtin_alloca()\cell\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell remote_desc\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function packet_ok()\par}
{\s5\f1\fs20\ql\sb50\sa50 static enum packet_result packet_ok ( const char* buf, struct packet_config* config )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell error()\cell utils.c\cell\row
\cell fprintf_unfiltered()\cell utils.c\cell\row
\cell gdb_check_fatal()\cell utils.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell  isxdigit()\cell\cell\row
Called by:\cell remote_check_symbols()\cell remote.c\cell\row
\cell remote_get_thread_local_address()\cell remote.c\cell\row
\cell remote_insert_breakpoint()\cell remote.c\cell\row
\cell remote_insert_hw_breakpoint()\cell remote.c\cell\row
\cell remote_insert_watchpoint()\cell remote.c\cell\row
\cell remote_remove_hw_breakpoint()\cell remote.c\cell\row
\cell remote_remove_watchpoint()\cell remote.c\cell\row
\cell remote_vcont_probe()\cell remote.c\cell\row
\cell remote_xfer_partial()\cell remote.c\cell\row
Refs Var:\cell gdb_stdlog\cell main.c\cell\row
\cell remote_debug\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function packet_reg_from_pnum()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct packet_reg* packet_reg_from_pnum ( struct remote_state* rs, long pnum )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell gdbarch_num_pseudo_regs()\cell gdbarch.c\cell\row
\cell gdbarch_num_regs()\cell gdbarch.c\cell\row
Called by:\cell remote_async_wait()\cell remote.c\cell\row
\cell remote_wait()\cell remote.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function packet_reg_from_regnum()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct packet_reg* packet_reg_from_regnum ( struct remote_state* rs, long regnum )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell gdbarch_num_pseudo_regs()\cell gdbarch.c\cell\row
\cell gdbarch_num_regs()\cell gdbarch.c\cell\row
\cell internal_error()\cell utils.c\cell\row
Called by:\cell remote_fetch_registers()\cell remote.c\cell\row
\cell store_register_using_P()\cell remote.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function parse_threadlist_response()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int parse_threadlist_response ( char* pkt, int result_limit, threadref* original_echo, threadref* resultlist, int* doneflag )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell get_remote_state()\cell remote.c\cell\row
\cell unpack_byte()\cell remote.c\cell\row
\cell unpack_nibble()\cell remote.c\cell\row
\cell unpack_threadid()\cell remote.c\cell\row
Called by:\cell remote_get_threadlist()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function print_packet()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void print_packet ( const char* buf )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell fputstr_filtered()\cell utils.c\cell\row
\cell puts_filtered()\cell utils.c\cell\row
Called by:\cell packet_command()\cell remote.c\cell\row
Refs Var:\cell gdb_stdout\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function putpkt_binary()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int putpkt_binary ( const char* buf, int cnt )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell add_outgoing_pkt_to_protocol_log()\cell remote.c\cell\row
\cell dump_protocol_log()\cell remote.c\cell\row
\cell end_remote_timer()\cell remote.c\cell\row
\cell fprintf_unfiltered()\cell utils.c\cell\row
\cell fputc_unfiltered()\cell utils.c\cell\row
\cell fputstrn_unfiltered()\cell utils.c\cell\row
\cell gdb_flush()\cell ui-file.c\cell\row
\cell get_remote_state()\cell remote.c\cell\row
\cell perror_with_name()\cell utils.c\cell\row
\cell putchar_unfiltered()\cell utils.c\cell\row
\cell read_frame()\cell remote.c\cell\row
\cell readchar()\cell remote.c\cell\row
\cell remote_backtrace_self()\cell remote.c\cell\row
\cell serial_write()\cell serial.c\cell\row
\cell start_remote_timer()\cell remote.c\cell\row
\cell tohex()\cell remote.c\cell\row
\cell  __builtin_alloca()\cell\cell\row
Called by:\cell check_binary_download()\cell remote.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell remote_write_bytes()\cell remote.c\cell\row
Refs Var:\cell current_remote_stats\cell remote.c\cell\row
\cell gdb_stdlog\cell main.c\cell\row
\cell no_ack_mode\cell remote.c\cell\row
\cell remote_debug\cell top.c\cell\row
\cell remote_desc\cell remote.c\cell\row
\cell remote_timeout\cell top.c\cell\row
\cell total_packets_sent\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function read_frame()\par}
{\s5\f1\fs20\ql\sb50\sa50 static long read_frame ( char* buf, long sizeof_buf )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell fprintf_filtered()\cell utils.c\cell\row
\cell fputs_filtered()\cell utils.c\cell\row
\cell fromhex()\cell remote.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell puts_filtered()\cell utils.c\cell\row
\cell readchar()\cell remote.c\cell\row
\cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk()\cell\cell\row
Called by:\cell getpkt_sane()\cell remote.c\cell\row
\cell putpkt_binary()\cell remote.c\cell\row
Refs Var:\cell gdb_stdlog\cell main.c\cell\row
\cell no_ack_mode\cell remote.c\cell\row
\cell remote_debug\cell top.c\cell\row
\cell remote_timeout\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function readchar()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int readchar ( int timeout )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell end_remote_timer()\cell remote.c\cell\row
\cell error()\cell utils.c\cell\row
\cell perror_with_name()\cell utils.c\cell\row
\cell serial_readchar()\cell serial.c\cell\row
\cell start_remote_timer()\cell remote.c\cell\row
Called by:\cell getpkt_sane()\cell remote.c\cell\row
\cell putpkt_binary()\cell remote.c\cell\row
\cell read_frame()\cell remote.c\cell\row
Refs Var:\cell current_target\cell target/target.c\cell\row
\cell remote_desc\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function record_currthread()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void record_currthread ( int currthread )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell add_thread()\cell thread.c\cell\row
\cell in_thread_list()\cell thread.c\cell\row
\cell ptid_build()\cell infrun.c\cell\row
\cell ui_out_text()\cell ui-out.c\cell\row
Called by:\cell remote_async_wait()\cell remote.c\cell\row
\cell remote_wait()\cell remote.c\cell\row
Refs Var:\cell current_target\cell target/target.c\cell\row
\cell general_thread\cell remote.c\cell\row
\cell uiout\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_address_masked()\par}
{\s5\f1\fs20\ql\sb50\sa50 static CORE_ADDR remote_address_masked ( CORE_ADDR addr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Called by:\cell remote_insert_breakpoint()\cell remote.c\cell\row
\cell remote_insert_hw_breakpoint()\cell remote.c\cell\row
\cell remote_insert_watchpoint()\cell remote.c\cell\row
\cell remote_read_bytes()\cell remote.c\cell\row
\cell remote_remove_breakpoint()\cell remote.c\cell\row
\cell remote_remove_hw_breakpoint()\cell remote.c\cell\row
\cell remote_remove_watchpoint()\cell remote.c\cell\row
\cell remote_write_bytes()\cell remote.c\cell\row
Refs Var:\cell remote_address_size\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_async()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void remote_async ( void (*callback)(enum inferior_event_type event_type,void* context), void* context )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell internal_error()\cell utils.c\cell\row
\cell serial_async()\cell serial.c\cell\row
Used in:\cell init_remote_async_ops()\cell remote.c\cell\row
Refs Var:\cell async_client_callback\cell remote.c\cell\row
\cell async_client_context\cell remote.c\cell\row
\cell current_target\cell target/target.c\cell\row
\cell remote_async_serial_handler\cell remote.c\cell\row
\cell remote_desc\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_async_kill()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void remote_async_kill ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell serial_async()\cell serial.c\cell\row
\cell  catch_errors()\cell\cell\row
Used in:\cell init_remote_async_ops()\cell remote.c\cell\row
Refs Func:\cell putpkt()\cell remote.c\cell\row
Refs Var:\cell current_target\cell target/target.c\cell\row
\cell kill_kludge\cell remote.c\cell\row
\cell remote_desc\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_async_mourn()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void remote_async_mourn ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell remote_mourn_1()\cell remote.c\cell\row
Used in:\cell init_remote_async_ops()\cell remote.c\cell\row
Refs Var:\cell remote_async_ops\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_async_open()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void remote_async_open ( const char* name, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell remote_open_1()\cell remote.c\cell\row
Used in:\cell init_remote_async_ops()\cell remote.c\cell\row
Refs Var:\cell remote_async_ops\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_async_resume()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void remote_async_resume ( ptid_t ptid, int step, enum target_signal siggnal )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell remote_resume()\cell remote.c\cell\row
Used in:\cell init_remote_async_ops()\cell remote.c\cell\row
Refs Func:\cell inferior_event_handler()\cell inf-loop.c\cell\row
Refs Var:\cell current_target\cell target/target.c\cell\row
\cell gdb_override_async\cell target/target.c\cell\row
\cell target_executing\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_async_serial_handler()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void remote_async_serial_handler ( struct serial* scb, void* context )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell  async_client_callback()\cell\cell\row
Refs Var:\cell async_client_context\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_async_terminal_inferior()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void remote_async_terminal_inferior ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell delete_file_handler()\cell event-loop.c\cell\row
\cell initialize_sigint_signal_handler()\cell remote.c\cell\row
Used in:\cell init_remote_async_ops()\cell remote.c\cell\row
Refs Var:\cell input_fd\cell event-top.c\cell\row
\cell remote_async_terminal_ours_p\cell remote.c\cell\row
\cell sync_execution\cell infrun.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_async_terminal_ours()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void remote_async_terminal_ours ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell add_file_handler()\cell event-loop.c\cell\row
\cell cleanup_sigint_signal_handler()\cell remote.c\cell\row
Used in:\cell init_remote_async_ops()\cell remote.c\cell\row
Refs Func:\cell stdin_event_handler()\cell event-top.c\cell\row
Refs Var:\cell input_fd\cell event-top.c\cell\row
\cell remote_async_terminal_ours_p\cell remote.c\cell\row
\cell sync_execution\cell infrun.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_async_wait()\par}
{\s5\f1\fs20\ql\sb50\sa50 static ptid_t remote_async_wait ( ptid_t ptid, struct target_waitstatus* status, gdb_client_data client_data )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
\cell fromhex()\cell remote.c\cell\row
\cell get_remote_state()\cell remote.c\cell\row
\cell getpkt()\cell remote.c\cell\row
\cell hex2bin()\cell remote.c\cell\row
\cell packet_reg_from_pnum()\cell remote.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell ptid_build()\cell infrun.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell record_currthread()\cell remote.c\cell\row
\cell regcache_raw_supply()\cell regcache.c\cell\row
\cell register_size()\cell regcache.c\cell\row
\cell remote_console_output()\cell remote.c\cell\row
\cell remote_fileio_request()\cell remote-fileio.c\cell\row
\cell unpack_varlen_hex()\cell remote.c\cell\row
\cell warning()\cell utils.c\cell\row
\cell  __builtin___strcpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_strcpy_chk(), signal(), strchr(), strlen(), strncmp(), strtol(), target_signal_to_name()\cell\cell\row
Used in:\cell init_remote_async_ops()\cell remote.c\cell\row
Refs Func:\cell remote_interrupt()\cell remote.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\cell current_regcache\cell regcache.c\cell\row
\cell current_target\cell target/target.c\cell\row
\cell deprecated_target_wait_loop_hook\cell remote.c\cell\row
\cell inferior_ptid\cell infcmd.c\cell\row
\cell kill_kludge\cell remote.c\cell\row
\cell last_sent_signal\cell remote.c\cell\row
\cell last_sent_step\cell remote.c\cell\row
\cell ofunc\cell remote.c\cell\row
\cell remote_stopped_by_watchpoint_p\cell remote.c\cell\row
\cell remote_watch_data_address\cell remote.c\cell\row
\cell wait_forever_enabled_p\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_backtrace_self()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void remote_backtrace_self ( const char* message )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell fprintf_filtered()\cell utils.c\cell\row
\cell  backtrace(), backtrace_symbols_fd()\cell\cell\row
Called by:\cell fromhex()\cell remote.c\cell\row
\cell putpkt_binary()\cell remote.c\cell\row
Refs Var:\cell gdb_stderr\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_can_async_p()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int remote_can_async_p ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell serial_can_async_p()\cell serial.c\cell\row
Used in:\cell init_remote_async_ops()\cell remote.c\cell\row
Refs Var:\cell current_target\cell target/target.c\cell\row
\cell remote_desc\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_check_symbols()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void remote_check_symbols ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell get_remote_state()\cell remote.c\cell\row
\cell getpkt()\cell remote.c\cell\row
\cell hex2bin()\cell remote.c\cell\row
\cell lookup_minimal_symbol()\cell minsyms.c\cell\row
\cell packet_ok()\cell remote.c\cell\row
\cell paddr_nz()\cell utils.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell xsnprintf()\cell utils.c\cell\row
\cell  __builtin_alloca(), strlen(), strncmp()\cell\cell\row
Called by:\cell remote_macosx_complete_create_or_attach()\cell remote.c\cell\row
\cell remote_macosx_open()\cell remote.c\cell\row
\cell remote_new_objfile()\cell remote.c\cell\row
\cell remote_open_1()\cell remote.c\cell\row
Refs Var:\cell remote_protocol_qSymbol\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_check_watch_resources()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int remote_check_watch_resources ( int type, int cnt, int ot )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell init_remote_async_ops()\cell remote.c\cell\row
\cell init_remote_ops()\cell remote.c\cell\row
Refs Var:\cell remote_hw_breakpoint_limit\cell remote.c\cell\row
\cell remote_hw_watchpoint_limit\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_close()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void remote_close ( int quitting )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell serial_close()\cell serial.c\cell\row
Used in:\cell init_remote_async_ops()\cell remote.c\cell\row
\cell init_remote_ops()\cell remote.c\cell\row
Refs Var:\cell remote_desc\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_current_thread()\par}
{\s5\f1\fs20\ql\sb50\sa50 static ptid_t remote_current_thread ( ptid_t oldpid )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell get_remote_state()\cell remote.c\cell\row
\cell getpkt()\cell remote.c\cell\row
\cell pid_to_ptid()\cell infrun.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell  __builtin_alloca(), strtoul()\cell\cell\row
Called by:\cell remote_find_new_threads()\cell remote.c\cell\row
\cell remote_start_remote()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_detach()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void remote_detach ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
\cell get_remote_state()\cell remote.c\cell\row
\cell puts_filtered()\cell utils.c\cell\row
\cell remote_send()\cell remote.c\cell\row
\cell serial_async()\cell serial.c\cell\row
\cell  __builtin___strcpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_strcpy_chk()\cell\cell\row
Used in:\cell init_remote_async_ops()\cell remote.c\cell\row
\cell init_remote_macosx_ops()\cell remote.c\cell\row
\cell init_remote_ops()\cell remote.c\cell\row
Refs Var:\cell current_target\cell target/target.c\cell\row
\cell remote_desc\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_disconnect()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void remote_disconnect ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell error()\cell utils.c\cell\row
\cell puts_filtered()\cell utils.c\cell\row
\cell serial_async()\cell serial.c\cell\row
Used in:\cell init_remote_async_ops()\cell remote.c\cell\row
\cell init_remote_ops()\cell remote.c\cell\row
Refs Var:\cell current_target\cell target/target.c\cell\row
\cell remote_desc\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_fetch_registers()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void remote_fetch_registers ( int regnum )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
\cell fetch_register_using_p()\cell remote.c\cell\row
\cell fprintf_unfiltered()\cell utils.c\cell\row
\cell fromhex()\cell remote.c\cell\row
\cell gdbarch_num_pseudo_regs()\cell gdbarch.c\cell\row
\cell gdbarch_num_regs()\cell gdbarch.c\cell\row
\cell gdbarch_register_bytes_ok()\cell gdbarch.c\cell\row
\cell gdbarch_register_bytes_ok_p()\cell gdbarch.c\cell\row
\cell get_remote_state()\cell remote.c\cell\row
\cell getpkt()\cell remote.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell packet_reg_from_regnum()\cell remote.c\cell\row
\cell ptid_get_pid()\cell infrun.c\cell\row
\cell regcache_raw_supply()\cell regcache.c\cell\row
\cell remote_send()\cell remote.c\cell\row
\cell set_register_cached()\cell regcache.c\cell\row
\cell set_thread()\cell remote.c\cell\row
\cell warning()\cell utils.c\cell\row
\cell  __builtin___memset_chk(), __builtin___snprintf_chk(), __builtin_alloca(), __builtin_object_size(), __inline_memset_chk(), strlen()\cell\cell\row
Used in:\cell init_remote_async_ops()\cell remote.c\cell\row
\cell init_remote_ops()\cell remote.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\cell current_regcache\cell regcache.c\cell\row
\cell gdb_stdlog\cell main.c\cell\row
\cell inferior_ptid\cell infcmd.c\cell\row
\cell register_bytes_found\cell remote.c\cell\row
\cell remote_debug\cell top.c\cell\row
\cell remote_protocol_p\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_files_info()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void remote_files_info ( struct target_ops* ignore )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell puts_filtered()\cell utils.c\cell\row
Used in:\cell init_remote_async_ops()\cell remote.c\cell\row
\cell init_remote_ops()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_find_new_threads()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void remote_find_new_threads ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell ptid_get_pid()\cell infrun.c\cell\row
\cell remote_current_thread()\cell remote.c\cell\row
\cell remote_threadlist_iterator()\cell remote.c\cell\row
Called by:\cell remote_threads_info()\cell remote.c\cell\row
Refs Func:\cell remote_newthread_step()\cell remote.c\cell\row
Refs Var:\cell inferior_ptid\cell infcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_get_thread_local_address()\par}
{\s5\f1\fs20\ql\sb50\sa50 static CORE_ADDR remote_get_thread_local_address ( ptid_t ptid, CORE_ADDR lm, CORE_ADDR offset )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell get_remote_state()\cell remote.c\cell\row
\cell getpkt()\cell remote.c\cell\row
\cell hexnumstr()\cell remote.c\cell\row
\cell packet_ok()\cell remote.c\cell\row
\cell ptid_get_pid()\cell infrun.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell unpack_varlen_hex()\cell remote.c\cell\row
\cell  __builtin___strcpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_strcpy_chk(), strlen(), throw_error()\cell\cell\row
Used in:\cell init_remote_ops()\cell remote.c\cell\row
Refs Var:\cell remote_protocol_qGetTLSAddr\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_get_threadinfo()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int remote_get_threadinfo ( threadref* threadid, int fieldset, struct gdb_ext_thread_info* info )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell get_remote_state()\cell remote.c\cell\row
\cell getpkt()\cell remote.c\cell\row
\cell pack_threadinfo_request()\cell remote.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell remote_unpack_thread_info_response()\cell remote.c\cell\row
\cell  __builtin_alloca()\cell\cell\row
Called by:\cell remote_threads_extra_info()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_get_threadlist()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int remote_get_threadlist ( int startflag, threadref* nextthread, int result_limit, int* done, int* result_count, threadref* threadlist )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell get_remote_state()\cell remote.c\cell\row
\cell getpkt()\cell remote.c\cell\row
\cell pack_threadlist_request()\cell remote.c\cell\row
\cell parse_threadlist_response()\cell remote.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell threadmatch()\cell remote.c\cell\row
\cell warning()\cell utils.c\cell\row
\cell  __builtin_alloca()\cell\cell\row
Called by:\cell remote_threadlist_iterator()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_insert_breakpoint()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int remote_insert_breakpoint ( CORE_ADDR addr, bfd_byte* contents_cache )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell gdbarch_breakpoint_from_pc()\cell gdbarch.c\cell\row
\cell get_remote_state()\cell remote.c\cell\row
\cell getpkt()\cell remote.c\cell\row
\cell hexnumstr()\cell remote.c\cell\row
\cell memory_insert_breakpoint()\cell mem-break.c\cell\row
\cell packet_ok()\cell remote.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell remote_address_masked()\cell remote.c\cell\row
\cell  __builtin___snprintf_chk(), __builtin_alloca(), __builtin_object_size()\cell\cell\row
Used in:\cell init_remote_async_ops()\cell remote.c\cell\row
\cell init_remote_ops()\cell remote.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\cell remote_protocol_Z\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_insert_hw_breakpoint()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int remote_insert_hw_breakpoint ( CORE_ADDR addr, gdb_byte* shadow )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell error()\cell utils.c\cell\row
\cell gdbarch_breakpoint_from_pc()\cell gdbarch.c\cell\row
\cell get_remote_state()\cell remote.c\cell\row
\cell getpkt()\cell remote.c\cell\row
\cell hexnumstr()\cell remote.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell packet_ok()\cell remote.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell remote_address_masked()\cell remote.c\cell\row
\cell  __builtin___snprintf_chk(), __builtin_alloca(), __builtin_object_size()\cell\cell\row
Used in:\cell init_remote_async_ops()\cell remote.c\cell\row
\cell init_remote_ops()\cell remote.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\cell remote_protocol_Z\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_insert_watchpoint()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int remote_insert_watchpoint ( CORE_ADDR addr, int len, int type )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell error()\cell utils.c\cell\row
\cell get_remote_state()\cell remote.c\cell\row
\cell getpkt()\cell remote.c\cell\row
\cell hexnumstr()\cell remote.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell packet_ok()\cell remote.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell remote_address_masked()\cell remote.c\cell\row
\cell warning()\cell utils.c\cell\row
\cell watchpoint_to_Z_packet()\cell remote.c\cell\row
\cell  __builtin___snprintf_chk(), __builtin_alloca(), __builtin_object_size(), strchr()\cell\cell\row
Used in:\cell init_remote_async_ops()\cell remote.c\cell\row
\cell init_remote_ops()\cell remote.c\cell\row
Refs Var:\cell remote_protocol_Z\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_interrupt()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void remote_interrupt ( int signo )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell fprintf_unfiltered()\cell utils.c\cell\row
\cell  signal()\cell\cell\row
Used in:\cell remote_async_wait()\cell remote.c\cell\row
\cell remote_interrupt_twice()\cell remote.c\cell\row
\cell remote_wait()\cell remote.c\cell\row
Refs Func:\cell remote_interrupt_twice()\cell remote.c\cell\row
Refs Var:\cell current_target\cell target/target.c\cell\row
\cell gdb_stdlog\cell main.c\cell\row
\cell remote_debug\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_interrupt_twice()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void remote_interrupt_twice ( int signo )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell interrupt_query()\cell remote.c\cell\row
\cell  signal()\cell\cell\row
Used in:\cell remote_interrupt()\cell remote.c\cell\row
Refs Func:\cell remote_interrupt()\cell remote.c\cell\row
Refs Var:\cell ofunc\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_is_async_p()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int remote_is_async_p ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell serial_is_async_p()\cell serial.c\cell\row
Used in:\cell init_remote_async_ops()\cell remote.c\cell\row
Refs Var:\cell current_target\cell target/target.c\cell\row
\cell remote_desc\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_kill()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void remote_kill ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell  catch_errors()\cell\cell\row
Used in:\cell init_remote_ops()\cell remote.c\cell\row
Refs Func:\cell putpkt()\cell remote.c\cell\row
Refs Var:\cell current_target\cell target/target.c\cell\row
\cell kill_kludge\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_macosx_complete_create_or_attach()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void remote_macosx_complete_create_or_attach ( int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell get_remote_state()\cell remote.c\cell\row
\cell observer_notify_inferior_created()\cell observer.c\cell\row
\cell pop_target()\cell target/target.c\cell\row
\cell remote_check_symbols()\cell remote.c\cell\row
\cell remote_macosx_get_all_image_infos_addr()\cell remote.c\cell\row
\cell  catch_exception(), macosx_dyld_create_inferior_hook(), macosx_solib_add(), throw_exception()\cell\cell\row
Called by:\cell remote_macosx_attach()\cell remote.c\cell\row
\cell remote_macosx_create_inferior()\cell remote.c\cell\row
Refs Func:\cell remote_start_remote()\cell remote.c\cell\row
Refs Var:\cell auto_solib_add\cell symfile.c\cell\row
\cell current_target\cell target/target.c\cell\row
\cell symfile_objfile\cell objfiles.c\cell\row
\cell uiout\cell ui-out.c\cell\row
\cell  exec_bfd\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_macosx_mourn()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void remote_macosx_mourn ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell remote_mourn_1()\cell remote.c\cell\row
\cell  macosx_dyld_mourn_inferior()\cell\cell\row
Used in:\cell init_remote_macosx_ops()\cell remote.c\cell\row
Refs Var:\cell remote_macosx_ops\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_macosx_open()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void remote_macosx_open ( const char* name, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell ptid_equal()\cell infrun.c\cell\row
\cell remote_check_symbols()\cell remote.c\cell\row
\cell remote_macosx_get_all_image_infos_addr()\cell remote.c\cell\row
\cell remote_open_1()\cell remote.c\cell\row
\cell  macosx_dyld_create_inferior_hook(), macosx_solib_add()\cell\cell\row
Called by:\cell push_remote_macosx_target()\cell remote.c\cell\row
Used in:\cell init_remote_macosx_ops()\cell remote.c\cell\row
Refs Var:\cell auto_solib_add\cell symfile.c\cell\row
\cell current_target\cell target/target.c\cell\row
\cell inferior_ptid\cell infcmd.c\cell\row
\cell null_ptid\cell infrun.c\cell\row
\cell remote_macosx_ops\cell remote.c\cell\row
\cell symfile_objfile\cell objfiles.c\cell\row
\cell  exec_bfd\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_macosx_query_qenvironment_hex_packet_supported()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int remote_macosx_query_qenvironment_hex_packet_supported ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell get_remote_state()\cell remote.c\cell\row
\cell getpkt_sane()\cell remote.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell  __builtin_alloca()\cell\cell\row
Called by:\cell remote_macosx_create_inferior()\cell remote.c\cell\row
Refs Var:\cell remote_timeout\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_mourn()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void remote_mourn ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell remote_mourn_1()\cell remote.c\cell\row
Used in:\cell init_remote_ops()\cell remote.c\cell\row
Refs Var:\cell remote_ops\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_mourn_1()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void remote_mourn_1 ( struct target_ops* target )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell generic_mourn_inferior()\cell target/target.c\cell\row
\cell unpush_target()\cell target/target.c\cell\row
Called by:\cell remote_async_mourn()\cell remote.c\cell\row
\cell remote_macosx_mourn()\cell remote.c\cell\row
\cell remote_mourn()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_new_objfile()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void remote_new_objfile ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell remote_check_symbols()\cell remote.c\cell\row
\cell  remote_new_objfile_chain()\cell\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell remote_desc\cell remote.c\cell\row
\cell remote_new_objfile_chain\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_newthread_step()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int remote_newthread_step ( threadref* ref, void* context )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell add_thread()\cell thread.c\cell\row
\cell in_thread_list()\cell thread.c\cell\row
\cell ptid_build()\cell infrun.c\cell\row
\cell threadref_to_int()\cell remote.c\cell\row
Used in:\cell remote_find_new_threads()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_open()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void remote_open ( const char* name, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell remote_open_1()\cell remote.c\cell\row
Called by:\cell push_remote_target()\cell remote.c\cell\row
Used in:\cell init_remote_ops()\cell remote.c\cell\row
Refs Var:\cell remote_ops\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_open_1()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void remote_open_1 ( const char* name, int from_tty, struct target_ops* target, int extended_p, int async_p )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
\cell get_remote_state()\cell remote.c\cell\row
\cell getpkt()\cell remote.c\cell\row
\cell init_all_packet_configs()\cell remote.c\cell\row
\cell no_shared_libraries()\cell solib.c\cell\row
\cell observer_notify_inferior_created()\cell observer.c\cell\row
\cell perror_with_name()\cell utils.c\cell\row
\cell pop_target()\cell target/target.c\cell\row
\cell ptid_build()\cell infrun.c\cell\row
\cell ptid_equal()\cell infrun.c\cell\row
\cell push_target()\cell target/target.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell puts_filtered()\cell utils.c\cell\row
\cell re_enable_breakpoints_in_shlibs()\cell breakpoint.c\cell\row
\cell remote_check_symbols()\cell remote.c\cell\row
\cell remote_serial_open()\cell remote.c\cell\row
\cell reopen_exec_file()\cell corefile.c\cell\row
\cell reread_symbols()\cell symfile.c\cell\row
\cell serial_close()\cell serial.c\cell\row
\cell serial_flush_input()\cell serial.c\cell\row
\cell serial_raw()\cell serial.c\cell\row
\cell serial_setbaudrate()\cell serial.c\cell\row
\cell solib_create_inferior_hook()\cell solib.c\cell\row
\cell target_preopen()\cell target/target.c\cell\row
\cell unpush_target()\cell target/target.c\cell\row
\cell  __builtin_alloca(), catch_exception(), exhaustive_search_for_kernel_in_mem(), strcmp(), throw_exception()\cell\cell\row
Called by:\cell extended_remote_async_open()\cell remote.c\cell\row
\cell extended_remote_open()\cell remote.c\cell\row
\cell remote_async_open()\cell remote.c\cell\row
\cell remote_macosx_open()\cell remote.c\cell\row
\cell remote_open()\cell remote.c\cell\row
Refs Func:\cell remote_start_remote()\cell remote.c\cell\row
Refs Var:\cell baud_rate\cell top.c\cell\row
\cell continue_thread\cell remote.c\cell\row
\cell current_target\cell target/target.c\cell\row
\cell general_thread\cell remote.c\cell\row
\cell inferior_ptid\cell infcmd.c\cell\row
\cell null_ptid\cell infrun.c\cell\row
\cell remote_async_terminal_ours_p\cell remote.c\cell\row
\cell remote_desc\cell remote.c\cell\row
\cell symfile_objfile\cell objfiles.c\cell\row
\cell uiout\cell ui-out.c\cell\row
\cell use_threadextra_query\cell remote.c\cell\row
\cell use_threadinfo_query\cell remote.c\cell\row
\cell wait_forever_enabled_p\cell remote.c\cell\row
\cell  exec_bfd\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_pid_to_str()\par}
{\s5\f1\fs20\ql\sb50\sa50 static char* remote_pid_to_str ( ptid_t ptid )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell ptid_get_pid()\cell infrun.c\cell\row
\cell xsnprintf()\cell utils.c\cell\row
Used in:\cell init_remote_async_ops()\cell remote.c\cell\row
\cell init_remote_ops()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_prepare_to_store()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void remote_prepare_to_store ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell gdbarch_num_regs()\cell gdbarch.c\cell\row
\cell get_remote_state()\cell remote.c\cell\row
\cell regcache_raw_read()\cell regcache.c\cell\row
Used in:\cell init_remote_async_ops()\cell remote.c\cell\row
\cell init_remote_ops()\cell remote.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\cell current_regcache\cell regcache.c\cell\row
\cell remote_protocol_P\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_rcmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void remote_rcmd ( const char* command, struct ui_file* outbuf )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell bin2hex()\cell remote.c\cell\row
\cell error()\cell utils.c\cell\row
\cell fputc_unfiltered()\cell utils.c\cell\row
\cell fromhex()\cell remote.c\cell\row
\cell get_remote_state()\cell remote.c\cell\row
\cell getpkt()\cell remote.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell remote_console_output()\cell remote.c\cell\row
\cell  __builtin___strcpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_strcpy_chk(), isdigit(), strchr(), strcmp(), strlen()\cell\cell\row
Used in:\cell init_remote_async_ops()\cell remote.c\cell\row
\cell init_remote_ops()\cell remote.c\cell\row
Refs Var:\cell remote_desc\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_remove_breakpoint()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int remote_remove_breakpoint ( CORE_ADDR addr, bfd_byte* contents_cache )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell gdbarch_breakpoint_from_pc()\cell gdbarch.c\cell\row
\cell get_remote_state()\cell remote.c\cell\row
\cell getpkt()\cell remote.c\cell\row
\cell hexnumstr()\cell remote.c\cell\row
\cell memory_remove_breakpoint()\cell mem-break.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell remote_address_masked()\cell remote.c\cell\row
\cell  __builtin___snprintf_chk(), __builtin_alloca(), __builtin_object_size()\cell\cell\row
Used in:\cell init_remote_async_ops()\cell remote.c\cell\row
\cell init_remote_ops()\cell remote.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\cell remote_protocol_Z\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_remove_hw_breakpoint()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int remote_remove_hw_breakpoint ( CORE_ADDR addr, gdb_byte* shadow )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell error()\cell utils.c\cell\row
\cell gdbarch_breakpoint_from_pc()\cell gdbarch.c\cell\row
\cell get_remote_state()\cell remote.c\cell\row
\cell getpkt()\cell remote.c\cell\row
\cell hexnumstr()\cell remote.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell packet_ok()\cell remote.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell remote_address_masked()\cell remote.c\cell\row
\cell  __builtin___snprintf_chk(), __builtin_alloca(), __builtin_object_size()\cell\cell\row
Used in:\cell init_remote_async_ops()\cell remote.c\cell\row
\cell init_remote_ops()\cell remote.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\cell remote_protocol_Z\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_remove_watchpoint()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int remote_remove_watchpoint ( CORE_ADDR addr, int len, int type )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell error()\cell utils.c\cell\row
\cell get_remote_state()\cell remote.c\cell\row
\cell getpkt()\cell remote.c\cell\row
\cell hexnumstr()\cell remote.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell packet_ok()\cell remote.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell remote_address_masked()\cell remote.c\cell\row
\cell warning()\cell utils.c\cell\row
\cell watchpoint_to_Z_packet()\cell remote.c\cell\row
\cell  __builtin___snprintf_chk(), __builtin_alloca(), __builtin_object_size(), strchr()\cell\cell\row
Used in:\cell init_remote_async_ops()\cell remote.c\cell\row
\cell init_remote_ops()\cell remote.c\cell\row
Refs Var:\cell remote_protocol_Z\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_resume()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void remote_resume ( ptid_t ptid, int step, enum target_signal siggnal )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell get_remote_state()\cell remote.c\cell\row
\cell ptid_get_pid()\cell infrun.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell remote_vcont_resume()\cell remote.c\cell\row
\cell set_thread()\cell remote.c\cell\row
\cell tohex()\cell remote.c\cell\row
\cell  __builtin___strcpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_strcpy_chk()\cell\cell\row
Called by:\cell remote_async_resume()\cell remote.c\cell\row
Used in:\cell init_remote_ops()\cell remote.c\cell\row
Refs Var:\cell deprecated_target_resume_hook\cell remote.c\cell\row
\cell last_sent_signal\cell remote.c\cell\row
\cell last_sent_step\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_send()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void remote_send ( char* buf, long sizeof_buf )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
\cell getpkt()\cell remote.c\cell\row
\cell putpkt()\cell remote.c\cell\row
Called by:\cell fetch_register_using_p()\cell remote.c\cell\row
\cell remote_detach()\cell remote.c\cell\row
\cell remote_fetch_registers()\cell remote.c\cell\row
\cell remote_store_registers()\cell remote.c\cell\row
\cell store_register_using_P()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_serial_open()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct serial* remote_serial_open ( const char* name )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell serial_open()\cell serial.c\cell\row
\cell warning()\cell utils.c\cell\row
\cell  strncmp()\cell\cell\row
Called by:\cell remote_open_1()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_start_remote()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void remote_start_remote ( struct ui_out* uiout, void* dummy )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell add_outgoing_pkt_to_protocol_log()\cell remote.c\cell\row
\cell end_remote_timer()\cell remote.c\cell\row
\cell get_offsets()\cell remote.c\cell\row
\cell get_remote_state()\cell remote.c\cell\row
\cell ptid_equal()\cell infrun.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell remote_current_thread()\cell remote.c\cell\row
\cell remote_start_remote_dummy()\cell remote.c\cell\row
\cell send_remote_debugflags_pkt()\cell remote.c\cell\row
\cell send_remote_max_payload_size()\cell remote.c\cell\row
\cell serial_write()\cell serial.c\cell\row
\cell set_thread()\cell remote.c\cell\row
\cell start_no_ack_mode()\cell remote.c\cell\row
\cell start_remote_timer()\cell remote.c\cell\row
Used in:\cell remote_macosx_complete_create_or_attach()\cell remote.c\cell\row
\cell remote_open_1()\cell remote.c\cell\row
Refs Var:\cell current_remote_stats\cell remote.c\cell\row
\cell current_target\cell target/target.c\cell\row
\cell immediate_quit\cell utils.c\cell\row
\cell inferior_ptid\cell infcmd.c\cell\row
\cell null_ptid\cell infrun.c\cell\row
\cell remote_debugflags\cell remote.c\cell\row
\cell remote_desc\cell remote.c\cell\row
\cell user_requested_no_ack_mode\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_start_remote_dummy()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int remote_start_remote_dummy ( struct ui_out* uiout, void* dummy )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell start_remote()\cell infrun.c\cell\row
Called by:\cell remote_start_remote()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_stop()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void remote_stop ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell add_outgoing_pkt_to_protocol_log()\cell remote.c\cell\row
\cell end_remote_timer()\cell remote.c\cell\row
\cell fprintf_unfiltered()\cell utils.c\cell\row
\cell serial_send_break()\cell serial.c\cell\row
\cell serial_write()\cell serial.c\cell\row
\cell start_remote_timer()\cell remote.c\cell\row
Used in:\cell init_remote_async_ops()\cell remote.c\cell\row
\cell init_remote_ops()\cell remote.c\cell\row
Refs Var:\cell current_remote_stats\cell remote.c\cell\row
\cell gdb_stdlog\cell main.c\cell\row
\cell remote_break\cell remote.c\cell\row
\cell remote_debug\cell top.c\cell\row
\cell remote_desc\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_stopped_by_watchpoint()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int remote_stopped_by_watchpoint ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Called by:\cell remote_stopped_data_address()\cell remote.c\cell\row
Used in:\cell init_remote_async_ops()\cell remote.c\cell\row
\cell init_remote_ops()\cell remote.c\cell\row
Refs Var:\cell remote_stopped_by_watchpoint_p\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_stopped_data_address()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int remote_stopped_data_address ( struct target_ops* target, CORE_ADDR* addr_p )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell remote_stopped_by_watchpoint()\cell remote.c\cell\row
Used in:\cell init_remote_async_ops()\cell remote.c\cell\row
\cell init_remote_ops()\cell remote.c\cell\row
Refs Var:\cell remote_watch_data_address\cell remote.c\cell\row
\cell stepped_after_stopped_by_watchpoint\cell infrun.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_store_registers()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void remote_store_registers ( int regnum )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell bin2hex()\cell remote.c\cell\row
\cell error()\cell utils.c\cell\row
\cell gdbarch_num_pseudo_regs()\cell gdbarch.c\cell\row
\cell gdbarch_num_regs()\cell gdbarch.c\cell\row
\cell get_remote_state()\cell remote.c\cell\row
\cell ptid_get_pid()\cell infrun.c\cell\row
\cell regcache_raw_collect()\cell regcache.c\cell\row
\cell remote_send()\cell remote.c\cell\row
\cell set_thread()\cell remote.c\cell\row
\cell store_register_using_P()\cell remote.c\cell\row
\cell  __builtin___memset_chk(), __builtin_alloca(), __builtin_object_size(), __inline_memset_chk()\cell\cell\row
Used in:\cell init_remote_async_ops()\cell remote.c\cell\row
\cell init_remote_ops()\cell remote.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\cell current_regcache\cell regcache.c\cell\row
\cell inferior_ptid\cell infcmd.c\cell\row
\cell register_bytes_found\cell remote.c\cell\row
\cell remote_protocol_P\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_thread_alive()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int remote_thread_alive ( ptid_t ptid )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell getpkt()\cell remote.c\cell\row
\cell ptid_get_pid()\cell infrun.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell xsnprintf()\cell utils.c\cell\row
Used in:\cell init_remote_async_ops()\cell remote.c\cell\row
\cell init_remote_ops()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_threadlist_iterator()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int remote_threadlist_iterator ( rmt_thread_action stepfunction, void* context, int looplimit )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell copy_threadref()\cell remote.c\cell\row
\cell remote_get_threadlist()\cell remote.c\cell\row
\cell warning()\cell utils.c\cell\row
Called by:\cell remote_find_new_threads()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_threads_extra_info()\par}
{\s5\f1\fs20\ql\sb50\sa50 static const char* remote_threads_extra_info ( struct thread_info* tp )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell get_remote_state()\cell remote.c\cell\row
\cell getpkt()\cell remote.c\cell\row
\cell hex2bin()\cell remote.c\cell\row
\cell int_to_threadref()\cell remote.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell ptid_get_pid()\cell infrun.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell remote_get_threadinfo()\cell remote.c\cell\row
\cell xsnprintf()\cell utils.c\cell\row
\cell  __builtin_alloca(), strlen()\cell\cell\row
Used in:\cell init_remote_async_ops()\cell remote.c\cell\row
\cell init_remote_ops()\cell remote.c\cell\row
Refs Var:\cell remote_desc\cell remote.c\cell\row
\cell use_threadextra_query\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_threads_info()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void remote_threads_info ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell add_thread()\cell thread.c\cell\row
\cell error()\cell utils.c\cell\row
\cell get_remote_state()\cell remote.c\cell\row
\cell getpkt()\cell remote.c\cell\row
\cell in_thread_list()\cell thread.c\cell\row
\cell ptid_build()\cell infrun.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell remote_find_new_threads()\cell remote.c\cell\row
\cell  __builtin_alloca(), strtoul()\cell\cell\row
Used in:\cell init_remote_async_ops()\cell remote.c\cell\row
\cell init_remote_ops()\cell remote.c\cell\row
Refs Var:\cell remote_desc\cell remote.c\cell\row
\cell use_threadinfo_query\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_unpack_thread_info_response()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int remote_unpack_thread_info_response ( char* pkt, threadref* expectedref, struct gdb_ext_thread_info* info )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell copy_threadref()\cell remote.c\cell\row
\cell get_remote_state()\cell remote.c\cell\row
\cell stub_unpack_int()\cell remote.c\cell\row
\cell threadmatch()\cell remote.c\cell\row
\cell unpack_byte()\cell remote.c\cell\row
\cell unpack_int()\cell remote.c\cell\row
\cell unpack_string()\cell remote.c\cell\row
\cell unpack_threadid()\cell remote.c\cell\row
\cell warning()\cell utils.c\cell\row
Called by:\cell remote_get_threadinfo()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_vcont_probe()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void remote_vcont_probe ( struct remote_state* rs, char* buf )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell getpkt()\cell remote.c\cell\row
\cell packet_ok()\cell remote.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell  __builtin___strcpy_chk(), __builtin_object_size(), __inline_strcpy_chk(), strchr(), strncmp()\cell\cell\row
Called by:\cell remote_vcont_resume()\cell remote.c\cell\row
Refs Var:\cell remote_protocol_vcont\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_vcont_resume()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int remote_vcont_resume ( ptid_t ptid, int step, enum target_signal siggnal )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell do_cleanups()\cell utils.c\cell\row
\cell get_remote_state()\cell remote.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell ptid_get_pid()\cell infrun.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell remote_vcont_probe()\cell remote.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell xstrprintf()\cell utils.c\cell\row
\cell  strlen()\cell\cell\row
Called by:\cell remote_resume()\cell remote.c\cell\row
Refs Func:\cell xfree()\cell utils.c\cell\row
Refs Var:\cell inferior_ptid\cell infcmd.c\cell\row
\cell remote_protocol_vcont\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_wait()\par}
{\s5\f1\fs20\ql\sb50\sa50 static ptid_t remote_wait ( ptid_t ptid, struct target_waitstatus* status, gdb_client_data client_data )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
\cell fromhex()\cell remote.c\cell\row
\cell get_remote_state()\cell remote.c\cell\row
\cell getpkt()\cell remote.c\cell\row
\cell hex2bin()\cell remote.c\cell\row
\cell packet_reg_from_pnum()\cell remote.c\cell\row
\cell phex_nz()\cell utils.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell ptid_build()\cell infrun.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell record_currthread()\cell remote.c\cell\row
\cell regcache_raw_supply()\cell regcache.c\cell\row
\cell register_size()\cell regcache.c\cell\row
\cell remote_console_output()\cell remote.c\cell\row
\cell remote_fileio_request()\cell remote-fileio.c\cell\row
\cell unpack_varlen_hex()\cell remote.c\cell\row
\cell warning()\cell utils.c\cell\row
\cell  __builtin___strcpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_strcpy_chk(), signal(), strchr(), strlen(), strncmp(), strtol(), target_signal_to_name()\cell\cell\row
Used in:\cell init_remote_ops()\cell remote.c\cell\row
Refs Func:\cell remote_interrupt()\cell remote.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\cell current_regcache\cell regcache.c\cell\row
\cell current_target\cell target/target.c\cell\row
\cell deprecated_target_wait_loop_hook\cell remote.c\cell\row
\cell inferior_ptid\cell infcmd.c\cell\row
\cell kill_kludge\cell remote.c\cell\row
\cell last_sent_signal\cell remote.c\cell\row
\cell last_sent_step\cell remote.c\cell\row
\cell ofunc\cell remote.c\cell\row
\cell remote_stopped_by_watchpoint_p\cell remote.c\cell\row
\cell remote_watch_data_address\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_xfer_memory()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int remote_xfer_memory ( CORE_ADDR mem_addr, gdb_byte* buffer, int mem_len, int should_write, struct mem_attrib* attrib, struct target_ops* target )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell remote_read_bytes()\cell remote.c\cell\row
\cell remote_write_bytes()\cell remote.c\cell\row
Used in:\cell init_remote_async_ops()\cell remote.c\cell\row
\cell init_remote_ops()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_xfer_partial()\par}
{\s5\f1\fs20\ql\sb50\sa50 static long remote_xfer_partial ( struct target_ops* ops, enum target_object object, const char* annex, gdb_byte* readbuf, const gdb_byte* writebuf, unsigned long offset, long len )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell error()\cell utils.c\cell\row
\cell get_remote_state()\cell remote.c\cell\row
\cell getpkt()\cell remote.c\cell\row
\cell hex2bin()\cell remote.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell packet_ok()\cell remote.c\cell\row
\cell phex_nz()\cell utils.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell remote_read_bytes()\cell remote.c\cell\row
\cell remote_write_bytes()\cell remote.c\cell\row
\cell  __builtin___snprintf_chk(), __builtin_alloca(), __builtin_object_size(), __error(), isprint(), strlen()\cell\cell\row
Used in:\cell init_remote_async_ops()\cell remote.c\cell\row
\cell init_remote_ops()\cell remote.c\cell\row
Refs Var:\cell remote_desc\cell remote.c\cell\row
\cell remote_protocol_qPart_auxv\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function send_disable_aslr()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int send_disable_aslr ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell get_remote_state()\cell remote.c\cell\row
\cell getpkt()\cell remote.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell  __builtin___snprintf_chk(), __builtin_object_size()\cell\cell\row
Called by:\cell remote_macosx_create_inferior()\cell remote.c\cell\row
Refs Var:\cell  disable_aslr_flag\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function send_remote_debugflags_pkt()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int send_remote_debugflags_pkt ( const char* flags )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell getpkt()\cell remote.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell  __builtin___strcat_chk(), __builtin___strcpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_strcat_chk(), __inline_strcpy_chk(), strlen()\cell\cell\row
Called by:\cell remote_start_remote()\cell remote.c\cell\row
\cell set_remote_debugflags_command()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function send_remote_max_payload_size()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int send_remote_max_payload_size ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell get_remote_state()\cell remote.c\cell\row
\cell getpkt()\cell remote.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell  __builtin___snprintf_chk(), __builtin_object_size()\cell\cell\row
Called by:\cell remote_start_remote()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_max_remote_packet_size()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void set_max_remote_packet_size ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell error()\cell utils.c\cell\row
\cell  strtol()\cell\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell g_max_remote_packet_size\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_memory_packet_size()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void set_memory_packet_size ( const char* args, struct memory_packet_config* config )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell error()\cell utils.c\cell\row
\cell query()\cell utils.c\cell\row
\cell  strcmp(), strtoul()\cell\cell\row
Called by:\cell set_memory_read_packet_size()\cell remote.c\cell\row
\cell set_memory_write_packet_size()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_memory_read_packet_size()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void set_memory_read_packet_size ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell set_memory_packet_size()\cell remote.c\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell memory_read_packet_config\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_memory_write_packet_size()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void set_memory_write_packet_size ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell set_memory_packet_size()\cell remote.c\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell memory_write_packet_config\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_no_ack_mode_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void set_no_ack_mode_cmd ( const char* args, int from_tty, struct cmd_list_element* c )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell start_no_ack_mode()\cell remote.c\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell remote_desc\cell remote.c\cell\row
\cell user_requested_no_ack_mode\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_remote_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void set_remote_cmd ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_remote()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_remote_debugflags_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void set_remote_debugflags_command ( const char* ignore, int from_tty, struct cmd_list_element* unused )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell error()\cell utils.c\cell\row
\cell send_remote_debugflags_pkt()\cell remote.c\cell\row
\cell  isupper()\cell\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell remote_debugflags\cell remote.c\cell\row
\cell remote_desc\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_remote_protocol_P_packet_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void set_remote_protocol_P_packet_cmd ( const char* args, int from_tty, struct cmd_list_element* c )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell update_packet_config()\cell remote.c\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell remote_protocol_P\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_remote_protocol_Z_access_wp_packet_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void set_remote_protocol_Z_access_wp_packet_cmd ( const char* args, int from_tty, struct cmd_list_element* c )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell update_packet_config()\cell remote.c\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell remote_protocol_Z\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_remote_protocol_Z_hardware_bp_packet_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void set_remote_protocol_Z_hardware_bp_packet_cmd ( const char* args, int from_tty, struct cmd_list_element* c )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell update_packet_config()\cell remote.c\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell remote_protocol_Z\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_remote_protocol_Z_packet_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void set_remote_protocol_Z_packet_cmd ( const char* args, int from_tty, struct cmd_list_element* c )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell update_packet_config()\cell remote.c\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell remote_Z_packet_detect\cell remote.c\cell\row
\cell remote_protocol_Z\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_remote_protocol_Z_read_wp_packet_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void set_remote_protocol_Z_read_wp_packet_cmd ( const char* args, int from_tty, struct cmd_list_element* c )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell update_packet_config()\cell remote.c\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell remote_protocol_Z\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_remote_protocol_Z_software_bp_packet_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void set_remote_protocol_Z_software_bp_packet_cmd ( const char* args, int from_tty, struct cmd_list_element* c )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell update_packet_config()\cell remote.c\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell remote_protocol_Z\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_remote_protocol_Z_write_wp_packet_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void set_remote_protocol_Z_write_wp_packet_cmd ( const char* args, int from_tty, struct cmd_list_element* c )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell update_packet_config()\cell remote.c\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell remote_protocol_Z\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_remote_protocol_binary_download_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void set_remote_protocol_binary_download_cmd ( const char* args, int from_tty, struct cmd_list_element* c )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell update_packet_config()\cell remote.c\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell remote_protocol_binary_download\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_remote_protocol_p_packet_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void set_remote_protocol_p_packet_cmd ( const char* args, int from_tty, struct cmd_list_element* c )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell update_packet_config()\cell remote.c\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell remote_protocol_p\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_remote_protocol_qGetTLSAddr_packet_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void set_remote_protocol_qGetTLSAddr_packet_cmd ( const char* args, int from_tty, struct cmd_list_element* c )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell update_packet_config()\cell remote.c\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell remote_protocol_qGetTLSAddr\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_remote_protocol_qPart_auxv_packet_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void set_remote_protocol_qPart_auxv_packet_cmd ( const char* args, int from_tty, struct cmd_list_element* c )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell update_packet_config()\cell remote.c\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell remote_protocol_qPart_auxv\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_remote_protocol_qSymbol_packet_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void set_remote_protocol_qSymbol_packet_cmd ( const char* args, int from_tty, struct cmd_list_element* c )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell update_packet_config()\cell remote.c\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell remote_protocol_qSymbol\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_remote_protocol_vcont_packet_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void set_remote_protocol_vcont_packet_cmd ( const char* args, int from_tty, struct cmd_list_element* c )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell update_packet_config()\cell remote.c\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell remote_protocol_vcont\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_thread()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void set_thread ( int th, int gen )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell get_remote_state()\cell remote.c\cell\row
\cell getpkt()\cell remote.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell xsnprintf()\cell utils.c\cell\row
\cell  __builtin_alloca()\cell\cell\row
Called by:\cell remote_fetch_registers()\cell remote.c\cell\row
\cell remote_resume()\cell remote.c\cell\row
\cell remote_start_remote()\cell remote.c\cell\row
\cell remote_store_registers()\cell remote.c\cell\row
Refs Var:\cell continue_thread\cell remote.c\cell\row
\cell general_thread\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_max_remote_packet_size()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_max_remote_packet_size ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell printf_filtered()\cell utils.c\cell\row
Called by:\cell show_remote_cmd()\cell remote.c\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell g_max_remote_packet_size\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_memory_packet_size()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_memory_packet_size ( struct memory_packet_config* config )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell get_memory_packet_size()\cell remote.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
Called by:\cell show_memory_read_packet_size()\cell remote.c\cell\row
\cell show_memory_write_packet_size()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_memory_read_packet_size()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_memory_read_packet_size ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell show_memory_packet_size()\cell remote.c\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell memory_read_packet_config\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_memory_write_packet_size()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_memory_write_packet_size ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell show_memory_packet_size()\cell remote.c\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell memory_write_packet_config\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_no_ack_mode_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_no_ack_mode_cmd ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell printf_filtered()\cell utils.c\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell no_ack_mode\cell remote.c\cell\row
\cell remote_desc\cell remote.c\cell\row
\cell user_requested_no_ack_mode\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_packet_config_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_packet_config_cmd ( struct packet_config* config )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell printf_filtered()\cell utils.c\cell\row
Called by:\cell show_remote_protocol_P_packet_cmd()\cell remote.c\cell\row
\cell show_remote_protocol_Z_access_wp_packet_cmd()\cell remote.c\cell\row
\cell show_remote_protocol_Z_hardware_bp_packet_cmd()\cell remote.c\cell\row
\cell show_remote_protocol_Z_packet_cmd()\cell remote.c\cell\row
\cell show_remote_protocol_Z_read_wp_packet_cmd()\cell remote.c\cell\row
\cell show_remote_protocol_Z_software_bp_packet_cmd()\cell remote.c\cell\row
\cell show_remote_protocol_Z_write_wp_packet_cmd()\cell remote.c\cell\row
\cell show_remote_protocol_binary_download_cmd()\cell remote.c\cell\row
\cell show_remote_protocol_p_packet_cmd()\cell remote.c\cell\row
\cell show_remote_protocol_qGetTLSAddr_packet_cmd()\cell remote.c\cell\row
\cell show_remote_protocol_qPart_auxv_packet_cmd()\cell remote.c\cell\row
\cell show_remote_protocol_qSymbol_packet_cmd()\cell remote.c\cell\row
\cell show_remote_protocol_vcont_packet_cmd()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_remote_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_remote_cmd ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell show_max_remote_packet_size()\cell remote.c\cell\row
\cell show_remote_protocol_P_packet_cmd()\cell remote.c\cell\row
\cell show_remote_protocol_Z_packet_cmd()\cell remote.c\cell\row
\cell show_remote_protocol_binary_download_cmd()\cell remote.c\cell\row
\cell show_remote_protocol_p_packet_cmd()\cell remote.c\cell\row
\cell show_remote_protocol_qGetTLSAddr_packet_cmd()\cell remote.c\cell\row
\cell show_remote_protocol_qPart_auxv_packet_cmd()\cell remote.c\cell\row
\cell show_remote_protocol_qSymbol_packet_cmd()\cell remote.c\cell\row
\cell show_remote_protocol_vcont_packet_cmd()\cell remote.c\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell gdb_stdout\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_remote_debugflags_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_remote_debugflags_command ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell printf_filtered()\cell utils.c\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell remote_debugflags\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_remote_protocol_P_packet_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_remote_protocol_P_packet_cmd ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell show_packet_config_cmd()\cell remote.c\cell\row
Called by:\cell show_remote_cmd()\cell remote.c\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell remote_protocol_P\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_remote_protocol_Z_access_wp_packet_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_remote_protocol_Z_access_wp_packet_cmd ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell show_packet_config_cmd()\cell remote.c\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell remote_protocol_Z\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_remote_protocol_Z_hardware_bp_packet_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_remote_protocol_Z_hardware_bp_packet_cmd ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell show_packet_config_cmd()\cell remote.c\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell remote_protocol_Z\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_remote_protocol_Z_packet_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_remote_protocol_Z_packet_cmd ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell show_packet_config_cmd()\cell remote.c\cell\row
Called by:\cell show_remote_cmd()\cell remote.c\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell remote_protocol_Z\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_remote_protocol_Z_read_wp_packet_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_remote_protocol_Z_read_wp_packet_cmd ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell show_packet_config_cmd()\cell remote.c\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell remote_protocol_Z\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_remote_protocol_Z_software_bp_packet_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_remote_protocol_Z_software_bp_packet_cmd ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell show_packet_config_cmd()\cell remote.c\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell remote_protocol_Z\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_remote_protocol_Z_write_wp_packet_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_remote_protocol_Z_write_wp_packet_cmd ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell show_packet_config_cmd()\cell remote.c\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell remote_protocol_Z\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_remote_protocol_binary_download_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_remote_protocol_binary_download_cmd ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell show_packet_config_cmd()\cell remote.c\cell\row
Called by:\cell show_remote_cmd()\cell remote.c\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell remote_protocol_binary_download\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_remote_protocol_p_packet_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_remote_protocol_p_packet_cmd ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell show_packet_config_cmd()\cell remote.c\cell\row
Called by:\cell show_remote_cmd()\cell remote.c\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell remote_protocol_p\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_remote_protocol_qGetTLSAddr_packet_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_remote_protocol_qGetTLSAddr_packet_cmd ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell show_packet_config_cmd()\cell remote.c\cell\row
Called by:\cell show_remote_cmd()\cell remote.c\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell remote_protocol_qGetTLSAddr\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_remote_protocol_qPart_auxv_packet_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_remote_protocol_qPart_auxv_packet_cmd ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell show_packet_config_cmd()\cell remote.c\cell\row
Called by:\cell show_remote_cmd()\cell remote.c\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell remote_protocol_qPart_auxv\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_remote_protocol_qSymbol_packet_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_remote_protocol_qSymbol_packet_cmd ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell show_packet_config_cmd()\cell remote.c\cell\row
Called by:\cell show_remote_cmd()\cell remote.c\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell remote_protocol_qSymbol\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_remote_protocol_vcont_packet_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_remote_protocol_vcont_packet_cmd ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell show_packet_config_cmd()\cell remote.c\cell\row
Called by:\cell show_remote_cmd()\cell remote.c\cell\row
Used in:\cell _initialize_remote()\cell remote.c\cell\row
Refs Var:\cell remote_protocol_vcont\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function start_no_ack_mode()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void start_no_ack_mode ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell getpkt()\cell remote.c\cell\row
\cell putpkt()\cell remote.c\cell\row
Called by:\cell remote_start_remote()\cell remote.c\cell\row
\cell set_no_ack_mode_cmd()\cell remote.c\cell\row
Refs Var:\cell no_ack_mode\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function start_remote_timer()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void start_remote_timer ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell  gettimeofday()\cell\cell\row
Called by:\cell getpkt_sane()\cell remote.c\cell\row
\cell putpkt_binary()\cell remote.c\cell\row
\cell readchar()\cell remote.c\cell\row
\cell remote_start_remote()\cell remote.c\cell\row
\cell remote_stop()\cell remote.c\cell\row
Refs Var:\cell current_remote_stats\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function store_register_using_P()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int store_register_using_P ( int regnum )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell bin2hex()\cell remote.c\cell\row
\cell get_remote_state()\cell remote.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell packet_reg_from_regnum()\cell remote.c\cell\row
\cell phex_nz()\cell utils.c\cell\row
\cell regcache_raw_collect()\cell regcache.c\cell\row
\cell register_size()\cell regcache.c\cell\row
\cell remote_send()\cell remote.c\cell\row
\cell xsnprintf()\cell utils.c\cell\row
\cell  __builtin_alloca(), strlen()\cell\cell\row
Called by:\cell remote_store_registers()\cell remote.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\cell current_regcache\cell regcache.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function stub_unpack_int()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int stub_unpack_int ( char* buff, int fieldlength )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell stubhex()\cell remote.c\cell\row
Called by:\cell remote_unpack_thread_info_response()\cell remote.c\cell\row
\cell unpack_byte()\cell remote.c\cell\row
\cell unpack_int()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function stubhex()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int stubhex ( int ch )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Called by:\cell stub_unpack_int()\cell remote.c\cell\row
\cell unpack_threadid()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function threadmatch()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int threadmatch ( threadref* dest, threadref* src )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Called by:\cell remote_get_threadlist()\cell remote.c\cell\row
\cell remote_unpack_thread_info_response()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function threadref_to_int()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int threadref_to_int ( threadref* ref )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Called by:\cell remote_newthread_step()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function tohex()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int tohex ( int nib )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Called by:\cell bin2hex()\cell remote.c\cell\row
\cell putpkt_binary()\cell remote.c\cell\row
\cell remote_resume()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function unpack_byte()\par}
{\s5\f1\fs20\ql\sb50\sa50 static char* unpack_byte ( char* buf, int* value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell stub_unpack_int()\cell remote.c\cell\row
Called by:\cell parse_threadlist_response()\cell remote.c\cell\row
\cell remote_unpack_thread_info_response()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function unpack_int()\par}
{\s5\f1\fs20\ql\sb50\sa50 static char* unpack_int ( char* buf, int* value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell stub_unpack_int()\cell remote.c\cell\row
Called by:\cell remote_unpack_thread_info_response()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function unpack_nibble()\par}
{\s5\f1\fs20\ql\sb50\sa50 static char* unpack_nibble ( char* buf, int* val )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell ishex()\cell remote.c\cell\row
Called by:\cell parse_threadlist_response()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function unpack_string()\par}
{\s5\f1\fs20\ql\sb50\sa50 static char* unpack_string ( char* src, char* dest, int length )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Called by:\cell remote_unpack_thread_info_response()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function unpack_threadid()\par}
{\s5\f1\fs20\ql\sb50\sa50 static char* unpack_threadid ( char* inbuf, threadref* id )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Calls: \cell stubhex()\cell remote.c\cell\row
Called by:\cell parse_threadlist_response()\cell remote.c\cell\row
\cell remote_unpack_thread_info_response()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function update_packet_config()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void update_packet_config ( struct packet_config* config )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell remote.c\cell\cell\row
Called by:\cell init_all_packet_configs()\cell remote.c\cell\row
\cell set_remote_protocol_P_packet_cmd()\cell remote.c\cell\row
\cell set_remote_protocol_Z_access_wp_packet_cmd()\cell remote.c\cell\row
\cell set_remote_protocol_Z_hardware_bp_packet_cmd()\cell remote.c\cell\row
\cell set_remote_protocol_Z_packet_cmd()\cell remote.c\cell\row
\cell set_remote_protocol_Z_read_wp_packet_cmd()\cell remote.c\cell\row
\cell set_remote_protocol_Z_software_bp_packet_cmd()\cell remote.c\cell\row
\cell set_remote_protocol_Z_write_wp_packet_cmd()\cell remote.c\cell\row
\cell set_remote_protocol_binary_download_cmd()\cell remote.c\cell\row
\cell set_remote_protocol_p_packet_cmd()\cell remote.c\cell\row
\cell set_remote_protocol_qGetTLSAddr_packet_cmd()\cell remote.c\cell\row
\cell set_remote_protocol_qPart_auxv_packet_cmd()\cell remote.c\cell\row
\cell set_remote_protocol_qSymbol_packet_cmd()\cell remote.c\cell\row
\cell set_remote_protocol_vcont_packet_cmd()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function watchpoint_to_Z_packet()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int watchpoint_to_Z_packet ( int type )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell internal_error()\cell utils.c\cell\row
Called by:\cell remote_insert_watchpoint()\cell remote.c\cell\row
\cell remote_remove_watchpoint()\cell remote.c\cell\row
\intbl0
}
