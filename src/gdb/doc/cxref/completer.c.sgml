<!DOCTYPE LINUXDOC SYSTEM>

<!-- This SGML file generated by cxref (version 1.6e). -->
<!-- cxref program (c) Andrew M. Bishop 1995-2014. -->

<!--
Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF completer.c
CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
-->

<article>

<title>Cross reference for completer.c of gdb.cxref.
<author>cxref

<sect>File completer.c

<sect1>Included Files

<p>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<itemize>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
<item><tt>#include &lt;sys/time.h&gt;</tt>
<item><tt>#include &lt;time.h&gt;</tt>
<item><tt>#include &lt;sys/types.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
<item><tt>#include &lt;errno.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
<item><tt>#include &lt;regex.h&gt;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;unistd.h&gt;</tt>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;gdb_locale.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<item><tt>#include &lt;locale.h&gt;</tt>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../gdb/signals.h&quot;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &quot;../include/libiberty.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/symcat.h&quot;</tt>
</itemize>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
<item><tt>#include &quot;ui-file.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;xm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/xm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &lt;mach/mach.h&gt;</tt>
<item><tt>#include &lt;signal.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;nm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/i386/nm-i386.h&quot;</tt>
<item><tt>#include &quot;macosx/nm-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;tm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/tm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;macosx/i386-macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/i386-macosx-thread-status.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &lt;mach/mach_types.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
<item><tt>#include &lt;inttypes.h&gt;</tt>
<item><tt>#include &lt;mach/mach_vm.h&gt;</tt>
<item><tt>#include &lt;mach/kmod.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;macosx/tm-i386-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;../include/fopen-bin.h&quot;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdlib.h&gt;</tt>
<item><tt>#include &quot;gdbarch.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdbtypes.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;expression.h&quot;</tt>
<itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/floatformat.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;../include/filenames.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/hashtab.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;language.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;cli/cli-decode.h&quot;</tt>
<itemize>
<item><tt>#include &quot;command.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
<item><tt>#include &lt;regex.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;gdbcmd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;command.h&quot;</tt>
<item><tt>#include &quot;ui-out.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;../readline/readline.h&quot;</tt>
<itemize>
<item><tt>#include &lt;../readline/rlstdc.h&gt;</tt>
<item><tt>#include &lt;../readline/rltypedefs.h&gt;</tt>
<item><tt>#include &lt;../readline/keymaps.h&gt;</tt>
<item><tt>#include &lt;../readline/tilde.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;completer.h&quot;</tt>
</itemize>

<sect1>Global Variable gdb_completer_filename_word_break_characters

<p>
<tt>const char* gdb_completer_filename_word_break_characters</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-lang.c
<item>breakpoint.c
<item>completer.c
<item>corefile.c
<item>infcmd.c
<item>interps.c
<item>jv-exp.c
<item>linespec.c
<item>objc-exp.c
<item>p-exp.c
<item>printcmd.c
<item>solib.c
<item>source.c
<item>symfile.c
<item>top.c
<item>tracepoint.c
</itemize>
</descrip>

<sect1>Local Variables

<p>
<bf>gdb_completer_command_word_break_characters</bf><newline>
<tt>static const char* gdb_completer_command_word_break_characters</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>complete_line()
</itemize>
</descrip>
<p>
<bf>gdb_completer_file_name_break_characters</bf><newline>
<tt>static const char* gdb_completer_file_name_break_characters</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>complete_line()
<item>location_completer()
</itemize>
</descrip>
<p>
<bf>gdb_completer_quote_characters</bf><newline>
<tt>static const char* gdb_completer_quote_characters</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>get_gdb_completer_quote_characters()
<item>skip_quoted_chars()
</itemize>
</descrip>

<sect1>Global Function command_completer()

<p><tt>char** command_completer ( const char* text, char* word )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>completer.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>complete_on_cmdlist()
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>cmdlist
</itemize>
</descrip>

<sect1>Global Function complete_line()

<p><tt>char** complete_line ( const char* text, const char* line_buffer, int point )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>completer.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>__builtin___strncpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_strncpy_chk(), complete_on_cmdlist(), complete_on_enum(), isalnum(), lookup_cmd_1(), strchr(), strlen()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>line_completion_function()  :  completer.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>filename_completer()  :  completer.c
<item>location_completer()  :  completer.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_language  :  language.c
<item>gdb_completer_command_word_break_characters  :  completer.c
<item>gdb_completer_file_name_break_characters  :  completer.c
<item>cmdlist, rl_completer_word_break_characters
</itemize>
</descrip>

<sect1>Global Function filename_completer()

<p><tt>char** filename_completer ( const char* text, char* word )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>completer.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xfree()  :  utils.c
<item>xmalloc()  :  utils.c
<item>xrealloc()  :  utils.c
<item>__builtin___strcat_chk(), __builtin___strcpy_chk(), __builtin___strncpy_chk(), __builtin_object_size(), __inline_strcat_chk(), __inline_strcpy_chk(), __inline_strncpy_chk(), rl_filename_completion_function(), strlen()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_breakpoint()  :  breakpoint.c
<item>_initialize_core()  :  corefile.c
<item>_initialize_infcmd()  :  infcmd.c
<item>_initialize_source()  :  source.c
<item>_initialize_symfile()  :  symfile.c
<item>_initialize_tracepoint()  :  tracepoint.c
<item>complete_line()  :  completer.c
</itemize>
</descrip>

<sect1>Global Function get_gdb_completer_quote_characters()

<p><tt>const char* get_gdb_completer_quote_characters ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>completer.h
</itemize>
<tag>Called by:</tag>
<itemize>
<item>decode_compound()  :  linespec.c
<item>decode_line_1()  :  linespec.c
<item>init_main()  :  top.c
<item>set_flags()  :  linespec.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_completer_quote_characters  :  completer.c
</itemize>
</descrip>

<sect1>Global Function location_completer()

<p><tt>char** location_completer ( const char* text, char* word )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>completer.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>make_file_symbol_completion_list()  :  symtab.c
<item>make_source_files_completion_list()  :  symtab.c
<item>make_symbol_completion_list()  :  symtab.c
<item>xfree()  :  utils.c
<item>xmalloc()  :  utils.c
<item>xrealloc()  :  utils.c
<item>__builtin___memcpy_chk(), __builtin___memmove_chk(), __builtin___strncpy_chk(), __builtin_object_size(), __inline_memcpy_chk(), __inline_memmove_chk(), __inline_strncpy_chk(), strchr(), strcspn(), strlen()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_breakpoint()  :  breakpoint.c
<item>_initialize_infcmd()  :  infcmd.c
<item>_initialize_printcmd()  :  printcmd.c
<item>_initialize_tracepoint()  :  tracepoint.c
<item>complete_line()  :  completer.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_language  :  language.c
<item>gdb_completer_file_name_break_characters  :  completer.c
</itemize>
</descrip>

<sect1>Global Function noop_completer()

<p><tt>char** noop_completer ( const char* text, char* prefix )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>completer.h
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_infcmd()  :  infcmd.c
</itemize>
</descrip>

<sect1>Global Function readline_line_completion_function()

<p><tt>char* readline_line_completion_function ( const char* text, int matches )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>completer.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>line_completion_function()  :  completer.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_main()  :  top.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>rl_line_buffer, rl_point
</itemize>
</descrip>

<sect1>Global Function skip_quoted()

<p><tt>char* skip_quoted ( const char* str )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>skip_quoted_chars()  :  completer.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>c_lex()  :  c-exp.c
<item>decode_compound()  :  linespec.c
<item>decode_line_1()  :  linespec.c
<item>java_lex()  :  jv-exp.c
<item>objc_lex()  :  objc-exp.c
<item>pascal_lex()  :  p-exp.c
</itemize>
</descrip>

<sect1>Global Function skip_quoted_chars()

<p><tt>char* skip_quoted_chars ( const char* str, char* quotechars, const char* breakchars )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>completer.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>strchr()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>decode_line_1()  :  linespec.c
<item>skip_quoted()  :  completer.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_language  :  language.c
<item>gdb_completer_quote_characters  :  completer.c
</itemize>
</descrip>

<sect1>Local Function line_completion_function()

<p><tt>static char* line_completion_function ( const char* text, int matches, char* line_buffer, int point )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>completer.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>complete_line()  :  completer.c
<item>xfree()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>readline_line_completion_function()  :  completer.c
</itemize>
</descrip>

</article>
