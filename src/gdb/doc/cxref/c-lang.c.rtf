{\rtf\ansi
\deff0
{\fonttbl
{\f0\froman Times New Roman;}
{\f1\fmodern Courier New;}
}
{\stylesheet
{\s0\f0\fs24 Normal;}
{\s1\f0\fs40\b\sb400\sa200\keepn\keep Heading 1;}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Heading 2;}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Heading 3;}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Heading 4;}
{\s5\f1\fs20\ql\sb50\sa50 Code;}
}
{\info{\comment
 This RTF file generated by cxref (version 1.6e).
 cxref program (c) Andrew M. Bishop 1995-2014.
 Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF c-lang.c
 CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
}}
\paperw11880\paperh16848\margl1440\margr1440\margt1440\margb1440
\sectd\plain
\s0\f0\fs24
{\s1\f0\fs40\b\sb400\sa200\keepn\keep File c-lang.c\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Refs Func:\cell basic_lookup_symbol_nonlocal()\cell symtab.c\cell\row
\cell basic_lookup_transparent_type()\cell symtab.c\cell\row
\cell c_create_fundamental_type()\cell c-lang.c\cell\row
\cell c_emit_char()\cell c-lang.c\cell\row
\cell c_error()\cell c-exp.c\cell\row
\cell c_language_arch_info()\cell c-lang.c\cell\row
\cell c_preprocess_and_parse()\cell c-lang.c\cell\row
\cell c_print_type()\cell c-typeprint.c\cell\row
\cell c_printchar()\cell c-lang.c\cell\row
\cell c_printstr()\cell c-lang.c\cell\row
\cell c_val_print()\cell c-valprint.c\cell\row
\cell c_value_print()\cell c-valprint.c\cell\row
\cell cp_class_name_from_physname()\cell cp-support.c\cell\row
\cell cp_lookup_symbol_nonlocal()\cell cp-namespace.c\cell\row
\cell cp_lookup_transparent_type()\cell cp-namespace.c\cell\row
\cell default_word_break_characters()\cell language.c\cell\row
\cell null_post_parser()\cell parse.c\cell\row
\cell value_of_this()\cell valops.c\cell\row
\cell cplus_demangle()\cell\cell\row
Refs Var:\cell builtin_type_bool\cell gdbtypes.c\cell\row
\cell builtin_type_char\cell gdbtypes.c\cell\row
\cell builtin_type_complex\cell gdbtypes.c\cell\row
\cell builtin_type_double\cell gdbtypes.c\cell\row
\cell builtin_type_double_complex\cell gdbtypes.c\cell\row
\cell builtin_type_float\cell gdbtypes.c\cell\row
\cell builtin_type_int\cell gdbtypes.c\cell\row
\cell builtin_type_long\cell gdbtypes.c\cell\row
\cell builtin_type_long_double\cell gdbtypes.c\cell\row
\cell builtin_type_long_long\cell gdbtypes.c\cell\row
\cell builtin_type_short\cell gdbtypes.c\cell\row
\cell builtin_type_signed_char\cell gdbtypes.c\cell\row
\cell builtin_type_unsigned_char\cell gdbtypes.c\cell\row
\cell builtin_type_unsigned_int\cell gdbtypes.c\cell\row
\cell builtin_type_unsigned_long\cell gdbtypes.c\cell\row
\cell builtin_type_unsigned_long_long\cell gdbtypes.c\cell\row
\cell builtin_type_unsigned_short\cell gdbtypes.c\cell\row
\cell builtin_type_void\cell gdbtypes.c\cell\row
\cell c_op_print_tab\cell c-lang.c\cell\row
\cell cplus_builtin_types\cell c-lang.c\cell\row
\cell exp_descriptor_standard\cell parse.c\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Included Files\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <errno.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <unistd.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_locale.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <locale.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../gdb/signals.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/symcat.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-file.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "xm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/xm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "nm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/i386/nm-i386.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/nm-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "tm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/tm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-tdep.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-tdep.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-thread-status.h"\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_types.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <inttypes.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_vm.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/kmod.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/tm-i386-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/fopen-bin.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdlib.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbarch.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdbtypes.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "expression.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/floatformat.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "parser-defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "language.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "c-lang.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_regex.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "gdbtypes.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "expression.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "macroexp.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "valprint.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "macroscope.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "macrotab.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_assert.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "charset.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_string.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../include/demangle.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "cp-support.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Type definitions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type enum c_primitive_types\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 enum c_primitive_types}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 c_primitive_type_int;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 c_primitive_type_long;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 c_primitive_type_short;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 c_primitive_type_char;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 c_primitive_type_float;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 c_primitive_type_double;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 c_primitive_type_void;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 c_primitive_type_long_long;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 c_primitive_type_signed_char;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 c_primitive_type_unsigned_char;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 c_primitive_type_unsigned_short;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 c_primitive_type_unsigned_int;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 c_primitive_type_unsigned_long;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 c_primitive_type_unsigned_long_long;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 c_primitive_type_long_double;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 c_primitive_type_complex;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 c_primitive_type_double_complex;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 nr_c_primitive_types;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Variables\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable expression_macro_lookup_func\par}
{\s5\f1\fs20\ql\sb50\sa50 macro_lookup_ftype* expression_macro_lookup_func\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell ada-lang.c\cell\cell\row
\cell ada-typeprint.c\cell\cell\row
\cell ada-valprint.c\cell\cell\row
\cell c-exp.c\cell\cell\row
\cell c-lang.c\cell\cell\row
\cell c-typeprint.c\cell\cell\row
\cell c-valprint.c\cell\cell\row
\cell cp-valprint.c\cell\cell\row
\cell jv-lang.c\cell\cell\row
\cell jv-typeprint.c\cell\cell\row
\cell jv-valprint.c\cell\cell\row
\cell m2-lang.c\cell\cell\row
\cell m2-valprint.c\cell\cell\row
\cell objc-exp.c\cell\cell\row
\cell objc-lang.c\cell\cell\row
\cell scm-exp.c\cell\cell\row
\cell scm-lang.c\cell\cell\row
\cell scm-valprint.c\cell\cell\row
Used in:\cell c_lex()\cell c-exp.c\cell\row
\cell c_preprocess_and_parse()\cell c-lang.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable expression_macro_lookup_baton\par}
{\s5\f1\fs20\ql\sb50\sa50 void* expression_macro_lookup_baton\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell ada-lang.c\cell\cell\row
\cell ada-typeprint.c\cell\cell\row
\cell ada-valprint.c\cell\cell\row
\cell c-exp.c\cell\cell\row
\cell c-lang.c\cell\cell\row
\cell c-typeprint.c\cell\cell\row
\cell c-valprint.c\cell\cell\row
\cell cp-valprint.c\cell\cell\row
\cell jv-lang.c\cell\cell\row
\cell jv-typeprint.c\cell\cell\row
\cell jv-valprint.c\cell\cell\row
\cell m2-lang.c\cell\cell\row
\cell m2-valprint.c\cell\cell\row
\cell objc-exp.c\cell\cell\row
\cell objc-lang.c\cell\cell\row
\cell scm-exp.c\cell\cell\row
\cell scm-lang.c\cell\cell\row
\cell scm-valprint.c\cell\cell\row
Used in:\cell c_lex()\cell c-exp.c\cell\row
\cell c_preprocess_and_parse()\cell c-lang.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable c_op_print_tab\par}
{\s5\f1\fs20\ql\sb50\sa50 const struct op_print c_op_print_tab[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell c-lang.c\cell\cell\row
Used in:\cell c-lang.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable c_language_defn\par}
{\s5\f1\fs20\ql\sb50\sa50 const struct language_defn c_language_defn\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell c-lang.c\cell\cell\row
Used in:\cell _initialize_c_language()\cell c-lang.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable cplus_builtin_types\par}
{\s5\f1\fs20\ql\sb50\sa50 struct type** const cplus_builtin_types[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell c-lang.c\cell\cell\row
Used in:\cell c-lang.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable cplus_language_defn\par}
{\s5\f1\fs20\ql\sb50\sa50 const struct language_defn cplus_language_defn\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell c-lang.c\cell\cell\row
Used in:\cell _initialize_c_language()\cell c-lang.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable asm_language_defn\par}
{\s5\f1\fs20\ql\sb50\sa50 const struct language_defn asm_language_defn\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell c-lang.c\cell\cell\row
Used in:\cell _initialize_c_language()\cell c-lang.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable minimal_language_defn\par}
{\s5\f1\fs20\ql\sb50\sa50 const struct language_defn minimal_language_defn\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell c-lang.c\cell\cell\row
Used in:\cell _initialize_c_language()\cell c-lang.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable macro_original_text\par}
{\s5\f1\fs20\ql\sb50\sa50 static const char* macro_original_text\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell c_preprocess_and_parse()\cell\cell\row
\cell finished_macro_expansion()\cell\cell\row
\cell scan_macro_cleanup()\cell\cell\row
\cell scan_macro_expansion()\cell\cell\row
\cell scanning_macro_expansion()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable macro_expanded_text\par}
{\s5\f1\fs20\ql\sb50\sa50 static char* macro_expanded_text\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell finished_macro_expansion()\cell\cell\row
\cell scan_macro_expansion()\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Functions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function _initialize_c_language()\par}
{\s5\f1\fs20\ql\sb50\sa50 void _initialize_c_language ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell c-lang.c\cell\cell\row
Calls: \cell add_language()\cell language.c\cell\row
Refs Var:\cell asm_language_defn\cell c-lang.c\cell\row
\cell c_language_defn\cell c-lang.c\cell\row
\cell cplus_language_defn\cell c-lang.c\cell\row
\cell minimal_language_defn\cell c-lang.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function c_create_fundamental_type()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct type* c_create_fundamental_type ( struct objfile* objfile, int ctypeid )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell c-lang.h\cell\cell\row
Calls: \cell gdbarch_double_bit()\cell gdbarch.c\cell\row
\cell gdbarch_float_bit()\cell gdbarch.c\cell\row
\cell gdbarch_int_bit()\cell gdbarch.c\cell\row
\cell gdbarch_long_bit()\cell gdbarch.c\cell\row
\cell gdbarch_long_double_bit()\cell gdbarch.c\cell\row
\cell gdbarch_long_long_bit()\cell gdbarch.c\cell\row
\cell gdbarch_short_bit()\cell gdbarch.c\cell\row
\cell init_type()\cell gdbtypes.c\cell\row
\cell warning()\cell utils.c\cell\row
Called by:\cell java_create_fundamental_type()\cell jv-lang.c\cell\row
Used in:\cell c-lang.c\cell\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function c_language_arch_info()\par}
{\s5\f1\fs20\ql\sb50\sa50 void c_language_arch_info ( struct gdbarch* gdbarch, struct language_arch_info* lai )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell c-lang.h\cell\cell\row
Calls: \cell gdbarch_obstack_zalloc()\cell gdbarch.c\cell\row
\cell get_builtin_type()\cell gdbtypes.c\cell\row
Used in:\cell c-lang.c\cell\cell\row
\cell jv-lang.c\cell\cell\row
\cell scm-lang.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function c_printchar()\par}
{\s5\f1\fs20\ql\sb50\sa50 void c_printchar ( int c, struct ui_file* stream )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell c-lang.h\cell\cell\row
Calls: \cell fputc_filtered()\cell utils.c\cell\row
Used in:\cell c-lang.c\cell\cell\row
\cell jv-lang.c\cell\cell\row
Refs Var:\cell current_language\cell language.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function c_printstr()\par}
{\s5\f1\fs20\ql\sb50\sa50 void c_printstr ( struct ui_file* stream, const gdb_byte* string, unsigned int length, int width, int force_ellipses )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell c-lang.h\cell\cell\row
Calls: \cell extract_unsigned_integer()\cell findvar.c\cell\row
\cell fprintf_filtered()\cell utils.c\cell\row
\cell fputs_filtered()\cell utils.c\cell\row
\cell quit()\cell utils.c\cell\row
Used in:\cell c-lang.c\cell\cell\row
\cell jv-lang.c\cell\cell\row
Refs Var:\cell current_language\cell language.c\cell\row
\cell inspect_it\cell printcmd.c\cell\row
\cell print_max\cell valprint.c\cell\row
\cell quit_flag\cell utils.c\cell\row
\cell repeat_count_threshold\cell valprint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function finished_macro_expansion()\par}
{\s5\f1\fs20\ql\sb50\sa50 void finished_macro_expansion ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell c-lang.h\cell\cell\row
Calls: \cell internal_error()\cell utils.c\cell\row
\cell xfree()\cell utils.c\cell\row
Called by:\cell c_lex()\cell c-exp.c\cell\row
\cell scan_macro_cleanup()\cell c-lang.c\cell\row
Refs Var:\cell lexptr\cell parse.c\cell\row
\cell macro_expanded_text\cell c-lang.c\cell\row
\cell macro_original_text\cell c-lang.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function scan_macro_expansion()\par}
{\s5\f1\fs20\ql\sb50\sa50 void scan_macro_expansion ( char* expansion )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell c-lang.h\cell\cell\row
Calls: \cell internal_error()\cell utils.c\cell\row
Called by:\cell c_lex()\cell c-exp.c\cell\row
Refs Var:\cell lexptr\cell parse.c\cell\row
\cell macro_expanded_text\cell c-lang.c\cell\row
\cell macro_original_text\cell c-lang.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function scanning_macro_expansion()\par}
{\s5\f1\fs20\ql\sb50\sa50 int scanning_macro_expansion ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell c-lang.h\cell\cell\row
Called by:\cell c_lex()\cell c-exp.c\cell\row
Refs Var:\cell macro_original_text\cell c-lang.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function c_emit_char()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void c_emit_char ( int c, struct ui_file* stream, int quoter )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell c-lang.c\cell\cell\row
Calls: \cell c_target_char_has_backslash_escape()\cell charset.c\cell\row
\cell fprintf_filtered()\cell utils.c\cell\row
\cell fputs_filtered()\cell utils.c\cell\row
\cell host_char_print_literally()\cell charset.c\cell\row
\cell target_char_to_host()\cell charset.c\cell\row
\cell  strcmp()\cell\cell\row
Used in:\cell c-lang.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function c_preprocess_and_parse()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int c_preprocess_and_parse ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell c_parse()\cell c-exp.c\cell\row
\cell default_macro_scope()\cell macroscope.c\cell\row
\cell do_cleanups()\cell utils.c\cell\row
\cell find_pc_line()\cell symtab.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell sal_macro_scope()\cell macroscope.c\cell\row
Used in:\cell c-lang.c\cell\cell\row
Refs Func:\cell free_current_contents()\cell utils.c\cell\row
\cell null_macro_lookup()\cell c-lang.c\cell\row
\cell scan_macro_cleanup()\cell c-lang.c\cell\row
\cell standard_macro_lookup()\cell macroscope.c\cell\row
Refs Var:\cell expression_context_block\cell parse.c\cell\row
\cell expression_context_pc\cell parse.c\cell\row
\cell expression_macro_lookup_baton\cell c-lang.c\cell\row
\cell expression_macro_lookup_func\cell c-lang.c\cell\row
\cell macro_original_text\cell c-lang.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function null_macro_lookup()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct macro_definition* null_macro_lookup ( const char* name, void* baton )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell c_preprocess_and_parse()\cell c-lang.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function scan_macro_cleanup()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void scan_macro_cleanup ( void* dummy )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell finished_macro_expansion()\cell c-lang.c\cell\row
Used in:\cell c_preprocess_and_parse()\cell c-lang.c\cell\row
Refs Var:\cell macro_original_text\cell c-lang.c\cell\row
\intbl0
}
