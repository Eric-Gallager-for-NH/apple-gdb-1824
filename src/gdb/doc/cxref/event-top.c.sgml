<!DOCTYPE LINUXDOC SYSTEM>

<!-- This SGML file generated by cxref (version 1.6e). -->
<!-- cxref program (c) Andrew M. Bishop 1995-2014. -->

<!--
Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF event-top.c
CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
-->

<article>

<title>Cross reference for event-top.c of gdb.cxref.
<author>cxref

<sect>File event-top.c

<sect1>Included Files

<p>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<itemize>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
<item><tt>#include &lt;sys/time.h&gt;</tt>
<item><tt>#include &lt;time.h&gt;</tt>
<item><tt>#include &lt;sys/types.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
<item><tt>#include &lt;errno.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
<item><tt>#include &lt;regex.h&gt;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;unistd.h&gt;</tt>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;gdb_locale.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<item><tt>#include &lt;locale.h&gt;</tt>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../gdb/signals.h&quot;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &quot;../include/libiberty.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/symcat.h&quot;</tt>
</itemize>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
<item><tt>#include &quot;ui-file.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;xm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/xm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &lt;mach/mach.h&gt;</tt>
<item><tt>#include &lt;signal.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;nm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/i386/nm-i386.h&quot;</tt>
<item><tt>#include &quot;macosx/nm-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;tm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/tm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;macosx/i386-macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/i386-macosx-thread-status.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &lt;mach/mach_types.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
<item><tt>#include &lt;inttypes.h&gt;</tt>
<item><tt>#include &lt;mach/mach_vm.h&gt;</tt>
<item><tt>#include &lt;mach/kmod.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;macosx/tm-i386-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;../include/fopen-bin.h&quot;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdlib.h&gt;</tt>
<item><tt>#include &quot;gdbarch.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;top.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;inferior.h&quot;</tt>
<itemize>
<item><tt>#include &quot;breakpoint.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;frame.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/floatformat.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;gdb_regex.h&quot;</tt>
<itemize>
<item><tt>#include &lt;regex.h&gt;</tt>
</itemize>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;gdbtypes.h&quot;</tt>
<item><tt>#include &quot;expression.h&quot;</tt>
<itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
</itemize>
</itemize>
</itemize>
<item><tt>#include &quot;value.h&quot;</tt>
<item><tt>#include &quot;gdb-events.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;target.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;dcache.h&quot;</tt>
<item><tt>#include &quot;memattr.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
</itemize>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;target.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;terminal.h&quot;</tt>
<itemize>
<item><tt>#include &lt;fcntl.h&gt;</tt>
<item><tt>#include &lt;sgtty.h&gt;</tt>
<item><tt>#include &lt;sys/ioctl.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;event-loop.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;event-top.h&quot;</tt>
<itemize>
<item><tt>#include &lt;signal.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;interps.h&quot;</tt>
<itemize>
<item><tt>#include &quot;exceptions.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;ui-out.h&quot;</tt>
<item><tt>#include &lt;setjmp.h&gt;</tt>
</itemize>
</itemize>
</itemize>
<itemize>
<item><tt>#include &lt;signal.h&gt;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;exceptions.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdbcmd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;command.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
<item><tt>#include &quot;ui-out.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;../readline/readline.h&quot;</tt>
<itemize>
<item><tt>#include &lt;../readline/rlstdc.h&gt;</tt>
<item><tt>#include &lt;../readline/rltypedefs.h&gt;</tt>
<item><tt>#include &lt;../readline/keymaps.h&gt;</tt>
<item><tt>#include &lt;../readline/tilde.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;../readline/history.h&quot;</tt>
<itemize>
<item><tt>#include &lt;../readline/rlstdc.h&gt;</tt>
<item><tt>#include &lt;readline/rltypedefs.h&gt;</tt>
</itemize>
</itemize>

<sect1>Preprocessor definitions

<p>
<tt>#define SERVER_COMMAND_LENGTH 7</tt><newline>

<sect1>Type struct readline_input_state

<p>
<itemize>
<item><tt>struct readline_input_state</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>char* linebuffer;</tt><newline>
<item><tt>char* linebuffer_ptr;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Global Variable gdb_prompt_is_optimized

<p>
<tt>int gdb_prompt_is_optimized</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>event-top.c
<item>frame.c
<item>infcmd.c
<item>infrun.c
<item>interps.c
<item>main.c
<item>objc-exp.c
<item>p-exp.c
<item>source.c
<item>top.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>adjust_prompts_for_optimized_code()  :  event-top.c
</itemize>
</descrip>

<sect1>Global Variable async_command_editing_p

<p>
<tt>int async_command_editing_p</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>event-loop.c
<item>event-top.c
<item>inf-loop.c
<item>infcmd.c
<item>infrun.c
<item>interps.c
<item>remote.c
<item>top.c
<item>utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>change_line_handler()  :  event-top.c
<item>cli_command_loop()  :  event-top.c
<item>display_gdb_prompt()  :  event-top.c
<item>gdb_setup_readline()  :  event-top.c
<item>init_main()  :  top.c
</itemize>
</descrip>

<sect1>Global Variable exec_done_display_p

<p>
<tt>int exec_done_display_p</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>event-loop.c
<item>event-top.c
<item>inf-loop.c
<item>infcmd.c
<item>infrun.c
<item>interps.c
<item>remote.c
<item>top.c
<item>utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>inferior_event_handler()  :  inf-loop.c
<item>init_main()  :  top.c
</itemize>
</descrip>

<sect1>Global Variable async_annotation_suffix

<p>
<tt>const char* async_annotation_suffix</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>event-loop.c
<item>event-top.c
<item>inf-loop.c
<item>infcmd.c
<item>infrun.c
<item>interps.c
<item>remote.c
<item>top.c
<item>utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>change_annotation_level()  :  event-top.c
<item>command_line_handler()  :  event-top.c
<item>init_main()  :  top.c
</itemize>
</descrip>

<sect1>Global Variable new_async_prompt

<p>
<tt>char* new_async_prompt</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>event-loop.c
<item>event-top.c
<item>inf-loop.c
<item>infcmd.c
<item>infrun.c
<item>interps.c
<item>remote.c
<item>top.c
<item>utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_main()  :  top.c
<item>set_async_prompt()  :  event-top.c
</itemize>
</descrip>

<sect1>Global Variable the_prompts

<p>
<tt>struct prompts the_prompts</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>event-loop.c
<item>event-top.c
<item>inf-loop.c
<item>infcmd.c
<item>infrun.c
<item>interps.c
<item>remote.c
<item>top.c
<item>utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>adjust_prompts_for_optimized_code()  :  event-top.c
<item>change_annotation_level()  :  event-top.c
<item>cli_command_loop()  :  event-top.c
<item>display_gdb_prompt()  :  event-top.c
<item>get_prompt()  :  top.c
<item>init_main()  :  top.c
<item>pop_prompt()  :  event-top.c
<item>push_prompt()  :  event-top.c
<item>set_async_prompt()  :  event-top.c
<item>set_prompt()  :  top.c
</itemize>
</descrip>

<sect1>Global Variable call_readline

<p>
<tt>void (*call_readline)(void*)</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>event-loop.c
<item>event-top.c
<item>inf-loop.c
<item>infcmd.c
<item>infrun.c
<item>interps.c
<item>remote.c
<item>top.c
<item>utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>change_line_handler()  :  event-top.c
<item>gdb_setup_readline()  :  event-top.c
<item>stdin_event_handler()  :  event-top.c
</itemize>
</descrip>

<sect1>Global Variable input_handler

<p>
<tt>void (*input_handler)(char*)</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>event-loop.c
<item>event-top.c
<item>inf-loop.c
<item>infcmd.c
<item>infrun.c
<item>interps.c
<item>remote.c
<item>top.c
<item>utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>change_line_handler()  :  event-top.c
<item>cli_command_loop()  :  event-top.c
<item>display_gdb_prompt()  :  event-top.c
<item>gdb_readline2()  :  event-top.c
<item>gdb_setup_readline()  :  event-top.c
</itemize>
</descrip>

<sect1>Global Variable input_fd

<p>
<tt>int input_fd</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>event-loop.c
<item>event-top.c
<item>inf-loop.c
<item>infcmd.c
<item>infrun.c
<item>interps.c
<item>remote.c
<item>top.c
<item>utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>display_gdb_prompt()  :  event-top.c
<item>gdb_disable_readline()  :  event-top.c
<item>gdb_setup_readline()  :  event-top.c
<item>remote_async_terminal_inferior()  :  remote.c
<item>remote_async_terminal_ours()  :  remote.c
<item>stdin_event_handler()  :  event-top.c
</itemize>
</descrip>

<sect1>Global Variable after_char_processing_hook

<p>
<tt>void (*after_char_processing_hook)(void)</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>event-loop.c
<item>event-top.c
<item>inf-loop.c
<item>infcmd.c
<item>infrun.c
<item>interps.c
<item>remote.c
<item>top.c
<item>utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>gdb_readline_wrapper()  :  top.c
<item>gdb_rl_operate_and_get_next()  :  top.c
<item>gdb_rl_operate_and_get_next_completion()  :  top.c
<item>rl_callback_read_char_wrapper()  :  event-top.c
<item>start_event_loop()  :  event-loop.c
</itemize>
</descrip>

<sect1>Global Variable sigint_token

<p>
<tt>void* sigint_token</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>event-loop.c
<item>event-top.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>async_init_signals()  :  event-top.c
<item>handle_sigint()  :  event-top.c
<item>sigint_taken_p()  :  event-loop.c
</itemize>
</descrip>

<sect1>Global Variable sighup_token

<p>
<tt>void* sighup_token</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>event-top.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>async_init_signals()  :  event-top.c
<item>handle_sighup()  :  event-top.c
</itemize>
</descrip>

<sect1>Global Variable sigquit_token

<p>
<tt>void* sigquit_token</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>event-top.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>async_init_signals()  :  event-top.c
<item>handle_sigquit()  :  event-top.c
</itemize>
</descrip>

<sect1>Global Variable sigfpe_token

<p>
<tt>void* sigfpe_token</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>event-top.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>async_init_signals()  :  event-top.c
<item>handle_sigfpe()  :  event-top.c
</itemize>
</descrip>

<sect1>Global Variable sigwinch_token

<p>
<tt>void* sigwinch_token</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>event-top.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>async_init_signals()  :  event-top.c
<item>handle_sigwinch()  :  event-top.c
</itemize>
</descrip>

<sect1>Global Variable sigtstp_token

<p>
<tt>void* sigtstp_token</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>event-top.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>async_init_signals()  :  event-top.c
<item>handle_stop_sig()  :  event-top.c
</itemize>
</descrip>

<sect1>Global Variable more_to_come

<p>
<tt>int more_to_come</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>event-top.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>command_line_handler()  :  event-top.c
</itemize>
</descrip>

<sect1>Global Variable readline_input_state

<p>
<tt>struct readline_input_state readline_input_state</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>event-top.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>command_line_handler()  :  event-top.c
</itemize>
</descrip>

<sect1>Global Variable stdin_enabled

<p>
<tt>int stdin_enabled</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>event-top.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>async_disable_stdin()  :  event-top.c
<item>async_enable_stdin()  :  event-top.c
</itemize>
</descrip>

<sect1>External Variables

<p>
<bf>line</bf><newline>
<tt>extern char* line</tt><newline>
<descrip>
<tag>Defined in:</tag>
<itemize>
<item>line</itemize>
</descrip>
<p>
<bf>linesize</bf><newline>
<tt>extern size_t linesize</tt><newline>
<descrip>
<tag>Defined in:</tag>
<itemize>
<item>linesize</itemize>
</descrip>
<p>
<bf>display_time</bf><newline>
<tt>extern int display_time</tt><newline>
<descrip>
<tag>Defined in:</tag>
<itemize>
<item>display_time</itemize>
</descrip>
<p>
<bf>display_space</bf><newline>
<tt>extern int display_space</tt><newline>
<descrip>
<tag>Defined in:</tag>
<itemize>
<item>display_space</itemize>
</descrip>

<sect1>Global Function _initialize_event_loop()

<p><tt>void _initialize_event_loop ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-top.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>cli_command_loop()  :  event-top.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>deprecated_command_loop_hook  :  top.c
</itemize>
</descrip>

<sect1>Global Function adjust_prompts_for_optimized_code()

<p><tt>void adjust_prompts_for_optimized_code ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-top.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>get_prompt()  :  top.c
<item>push_prompt()  :  event-top.c
<item>xfree()  :  utils.c
<item>xmalloc()  :  utils.c
<item>__builtin___snprintf_chk(), __builtin_object_size(), strlen(), strstr()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>display_gdb_prompt()  :  event-top.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>currently_inside_optimized_code  :  infrun.c
<item>dwarf2_inform_debugging_optimized_code  :  dwarf2read.c
<item>gdb_prompt_is_optimized  :  event-top.c
<item>the_prompts  :  event-top.c
</itemize>
</descrip>

<sect1>Global Function async_disable_stdin()

<p><tt>void async_disable_stdin ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-top.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>make_exec_error_cleanup()  :  utils.c
<item>push_prompt()  :  event-top.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>advance_command()  :  infcmd.c
<item>continue_command()  :  infcmd.c
<item>finish_command()  :  infcmd.c
<item>handle_inferior_event()  :  infrun.c
<item>jump_command()  :  infcmd.c
<item>re_exec_1()  :  infcmd.c
<item>run_command_1()  :  infcmd.c
<item>step_1_inlining()  :  infcmd.c
<item>step_1_no_inlining()  :  infcmd.c
<item>until_command()  :  infcmd.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>async_enable_stdin()  :  event-top.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_target  :  target/target.c
<item>stdin_enabled  :  event-top.c
</itemize>
</descrip>

<sect1>Global Function async_enable_stdin()

<p><tt>void async_enable_stdin ( void* dummy )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-top.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>pop_prompt()  :  event-top.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>run_command_1()  :  infcmd.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>async_disable_stdin()  :  event-top.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_target  :  target/target.c
<item>stdin_enabled  :  event-top.c
</itemize>
</descrip>

<sect1>Global Function async_init_signals()

<p><tt>void async_init_signals ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-top.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>create_async_signal_handler()  :  event-loop.c
<item>signal()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>gdb_init()  :  top.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>async_disconnect()  :  event-top.c
<item>async_float_handler()  :  event-top.c
<item>async_request_quit()  :  event-top.c
<item>handle_sigfpe()  :  event-top.c
<item>handle_sighup()  :  event-top.c
<item>handle_sigint()  :  event-top.c
<item>handle_sigquit()  :  event-top.c
<item>handle_sigwinch()  :  event-top.c
<item>macosx_resize_window_handler()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>sigfpe_token  :  event-top.c
<item>sighup_token  :  event-top.c
<item>sigint_token  :  event-top.c
<item>sigquit_token  :  event-top.c
<item>sigtstp_token  :  event-top.c
<item>sigwinch_token  :  event-top.c
</itemize>
</descrip>

<sect1>Global Function async_request_quit()

<p><tt>void async_request_quit ( gdb_client_data arg )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-top.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>quit()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>handle_sigint()  :  event-top.c
<item>prompt_for_continue()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>async_init_signals()  :  event-top.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>immediate_quit  :  utils.c
<item>quit_flag  :  utils.c
</itemize>
</descrip>

<sect1>Global Function cli_command_loop()

<p><tt>void cli_command_loop ( void* data )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-top.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>display_gdb_prompt()  :  event-top.c
<item>get_prompt()  :  top.c
<item>start_event_loop()  :  event-loop.c
<item>xmalloc()  :  utils.c
<item>__builtin___strcat_chk(), __builtin___strcpy_chk(), __builtin_object_size(), __inline_strcat_chk(), __inline_strcpy_chk(), rl_callback_handler_install(), strlen()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>current_interp_command_loop()  :  interps.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_event_loop()  :  event-top.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>async_command_editing_p  :  event-top.c
<item>input_handler  :  event-top.c
<item>the_prompts  :  event-top.c
</itemize>
</descrip>

<sect1>Global Function command_line_handler_continuation()

<p><tt>void command_line_handler_continuation ( struct continuation_arg* arg )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-top.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>bpstat_do_actions()  :  breakpoint.c
<item>printf_unfiltered()  :  utils.c
<item>get_run_time(), sbrk()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>command_handler()  :  event-top.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>display_space  :  main.c
<item>display_time  :  main.c
<item>lim_at_start  :  top.c
<item>stop_bpstat  :  infcmd.c
</itemize>
</descrip>

<sect1>Global Function display_gdb_prompt()

<p><tt>void display_gdb_prompt ( char* new_prompt )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-top.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>add_file_handler()  :  event-loop.c
<item>adjust_prompts_for_optimized_code()  :  event-top.c
<item>current_interp_display_prompt_p()  :  interps.c
<item>delete_file_handler()  :  event-loop.c
<item>fputs_unfiltered()  :  ui-file.c
<item>gdb_flush()  :  ui-file.c
<item>get_prompt()  :  top.c
<item>__builtin___strcat_chk(), __builtin___strcpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_strcat_chk(), __inline_strcpy_chk(), rl_callback_handler_install(), rl_callback_handler_remove(), strcmp(), strlen()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>cli_command_loop()  :  event-top.c
<item>command_line_handler()  :  event-top.c
<item>inferior_event_handler()  :  inf-loop.c
<item>interp_set()  :  interps.c
<item>start_event_loop()  :  event-loop.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>stdin_event_handler()  :  event-top.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>async_command_editing_p  :  event-top.c
<item>current_target  :  target/target.c
<item>gdb_stdout  :  main.c
<item>input_fd  :  event-top.c
<item>input_handler  :  event-top.c
<item>sync_execution  :  infrun.c
<item>target_executing  :  top.c
<item>the_prompts  :  event-top.c
</itemize>
</descrip>

<sect1>Global Function gdb_disable_readline()

<p><tt>void gdb_disable_readline ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-top.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>delete_file_handler()  :  event-loop.c
<item>rl_callback_handler_remove()
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>input_fd  :  event-top.c
</itemize>
</descrip>

<sect1>Global Function gdb_readline2()

<p><tt>void gdb_readline2 ( gdb_client_data client_data )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-top.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xfree()  :  utils.c
<item>xmalloc()  :  utils.c
<item>xrealloc()  :  utils.c
<item>fgetc(), fileno(), isatty(), setbuf()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>change_line_handler()  :  event-top.c
<item>gdb_setup_readline()  :  event-top.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>input_handler  :  event-top.c
<item>instream  :  top.c
</itemize>
</descrip>

<sect1>Global Function gdb_setup_readline()

<p><tt>void gdb_setup_readline ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-top.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>add_file_handler()  :  event-loop.c
<item>stdio_fileopen()  :  ui-file.c
<item>fileno(), isatty()
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>command_line_handler()  :  event-top.c
<item>gdb_readline2()  :  event-top.c
<item>rl_callback_read_char_wrapper()  :  event-top.c
<item>stdin_event_handler()  :  event-top.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>async_command_editing_p  :  event-top.c
<item>call_readline  :  event-top.c
<item>gdb_stderr  :  main.c
<item>gdb_stdlog  :  main.c
<item>gdb_stdout  :  main.c
<item>gdb_stdtarg  :  main.c
<item>input_fd  :  event-top.c
<item>input_handler  :  event-top.c
<item>instream  :  top.c
<item>rl_instream
</itemize>
</descrip>

<sect1>Global Function handle_sigint()

<p><tt>void handle_sigint ( int sig )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-top.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>async_request_quit()  :  event-top.c
<item>mark_async_signal_handler_wrapper()  :  event-top.c
<item>signal()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>async_init_signals()  :  event-top.c
<item>cleanup_sigint_signal_handler()  :  remote.c
<item>handle_remote_sigint_twice()  :  remote.c
<item>handle_sigint()  :  event-top.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>handle_sigint()  :  event-top.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>immediate_quit  :  utils.c
<item>quit_flag  :  utils.c
<item>sigint_token  :  event-top.c
</itemize>
</descrip>

<sect1>Global Function handle_stop_sig()

<p><tt>void handle_stop_sig ( int sig )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-top.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>mark_async_signal_handler_wrapper()  :  event-top.c
<item>signal()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>async_stop_sig()  :  event-top.c
<item>command_line_handler()  :  event-top.c
<item>command_line_input()  :  top.c
<item>handle_stop_sig()  :  event-top.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>handle_stop_sig()  :  event-top.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>sigtstp_token  :  event-top.c
</itemize>
</descrip>

<sect1>Global Function mark_async_signal_handler_wrapper()

<p><tt>void mark_async_signal_handler_wrapper ( void* token )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-top.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>mark_async_signal_handler()  :  event-loop.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>handle_remote_sigint()  :  remote.c
<item>handle_remote_sigint_twice()  :  remote.c
<item>handle_sigfpe()  :  event-top.c
<item>handle_sighup()  :  event-top.c
<item>handle_sigint()  :  event-top.c
<item>handle_sigquit()  :  event-top.c
<item>handle_sigwinch()  :  event-top.c
<item>handle_stop_sig()  :  event-top.c
</itemize>
</descrip>

<sect1>Global Function pop_prompt()

<p><tt>void pop_prompt ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-top.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>savestring()  :  utils.c
<item>xfree()  :  utils.c
<item>strcmp(), strlen()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>async_enable_stdin()  :  event-top.c
<item>change_annotation_level()  :  event-top.c
<item>command_line_handler()  :  event-top.c
<item>set_async_prompt()  :  event-top.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>the_prompts  :  event-top.c
</itemize>
</descrip>

<sect1>Global Function push_prompt()

<p><tt>void push_prompt ( const char* prefix, const char* prompt, const char* suffix )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-top.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>savestring()  :  utils.c
<item>strlen()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>adjust_prompts_for_optimized_code()  :  event-top.c
<item>async_disable_stdin()  :  event-top.c
<item>change_annotation_level()  :  event-top.c
<item>command_line_handler()  :  event-top.c
<item>set_async_prompt()  :  event-top.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>the_prompts  :  event-top.c
</itemize>
</descrip>

<sect1>Global Function set_async_annotation_level()

<p><tt>void set_async_annotation_level ( const char* args, int from_tty, struct cmd_list_element* c )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-top.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>change_annotation_level()  :  event-top.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>init_main()  :  top.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_main()  :  top.c
</itemize>
</descrip>

<sect1>Global Function set_async_editing_command()

<p><tt>void set_async_editing_command ( const char* args, int from_tty, struct cmd_list_element* c )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-top.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>change_line_handler()  :  event-top.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_main()  :  top.c
</itemize>
</descrip>

<sect1>Global Function set_async_prompt()

<p><tt>void set_async_prompt ( const char* args, int from_tty, struct cmd_list_element* c )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-top.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>pop_prompt()  :  event-top.c
<item>push_prompt()  :  event-top.c
<item>savestring()  :  utils.c
<item>xfree()  :  utils.c
<item>xmalloc()  :  utils.c
<item>__builtin___snprintf_chk(), __builtin_object_size(), strlen(), strstr()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_main()  :  top.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>currently_inside_optimized_code  :  infrun.c
<item>new_async_prompt  :  event-top.c
<item>the_prompts  :  event-top.c
</itemize>
</descrip>

<sect1>Global Function stdin_event_handler()

<p><tt>void stdin_event_handler ( int error, gdb_client_data client_data )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-top.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>delete_file_handler()  :  event-loop.c
<item>discard_all_continuations()  :  utils.c
<item>printf_unfiltered()  :  utils.c
<item>quit_command()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>display_gdb_prompt()  :  event-top.c
<item>gdb_setup_readline()  :  event-top.c
<item>remote_async_terminal_ours()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>call_readline  :  event-top.c
<item>input_fd  :  event-top.c
<item>instream  :  top.c
</itemize>
</descrip>

<sect1>Local Function async_disconnect()

<p><tt>static void async_disconnect ( gdb_client_data arg )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-top.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>catch_errors(), getpid(), kill(), signal()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>async_init_signals()  :  event-top.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>quit_cover()  :  top.c
</itemize>
</descrip>

<sect1>Local Function async_do_nothing()

<p><tt>static void async_do_nothing ( gdb_client_data arg )</tt><newline>

<sect1>Local Function async_float_handler()

<p><tt>static void async_float_handler ( gdb_client_data arg )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-top.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>async_init_signals()  :  event-top.c
</itemize>
</descrip>

<sect1>Local Function async_stop_sig()

<p><tt>static void async_stop_sig ( gdb_client_data arg )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>dont_repeat()  :  top.c
<item>gdb_flush()  :  ui-file.c
<item>get_prompt()  :  top.c
<item>printf_unfiltered()  :  utils.c
<item>getpid(), kill(), signal(), sigprocmask()
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>handle_stop_sig()  :  event-top.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdout  :  main.c
</itemize>
</descrip>

<sect1>Local Function change_annotation_level()

<p><tt>static void change_annotation_level ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-top.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>pop_prompt()  :  event-top.c
<item>push_prompt()  :  event-top.c
<item>warning()  :  utils.c
<item>__builtin___strcat_chk(), __builtin___strcpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_strcat_chk(), __inline_strcpy_chk(), strcmp(), strlen()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>set_async_annotation_level()  :  event-top.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>annotation_level  :  stack.c
<item>async_annotation_suffix  :  event-top.c
<item>the_prompts  :  event-top.c
</itemize>
</descrip>

<sect1>Local Function change_line_handler()

<p><tt>static void change_line_handler ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-top.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>rl_callback_handler_remove()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>set_async_editing_command()  :  event-top.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>command_line_handler()  :  event-top.c
<item>gdb_readline2()  :  event-top.c
<item>rl_callback_read_char_wrapper()  :  event-top.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>async_command_editing_p  :  event-top.c
<item>call_readline  :  event-top.c
<item>input_handler  :  event-top.c
</itemize>
</descrip>

<sect1>Local Function command_handler()

<p><tt>static void command_handler ( char* command )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-top.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>add_continuation()  :  utils.c
<item>bpstat_do_actions()  :  breakpoint.c
<item>do_cleanups()  :  utils.c
<item>execute_command()  :  top.c
<item>make_cleanup()  :  utils.c
<item>printf_unfiltered()  :  utils.c
<item>reinitialize_more_filter()  :  utils.c
<item>xmalloc()  :  utils.c
<item>fileno(), get_run_time(), isatty(), quit_command(), sbrk()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>command_line_handler()  :  event-top.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>command_line_handler_continuation()  :  event-top.c
<item>null_cleanup()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_target  :  target/target.c
<item>display_space  :  main.c
<item>display_time  :  main.c
<item>gdb_override_async  :  target/target.c
<item>instream  :  top.c
<item>lim_at_start  :  top.c
<item>quit_flag  :  utils.c
<item>stop_bpstat  :  infcmd.c
<item>target_executing  :  top.c
</itemize>
</descrip>

<sect1>Local Function command_line_handler()

<p><tt>static void command_line_handler ( char* rl )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-top.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>command_handler()  :  event-top.c
<item>display_gdb_prompt()  :  event-top.c
<item>gdb_flush()  :  ui-file.c
<item>pop_prompt()  :  event-top.c
<item>printf_unfiltered()  :  utils.c
<item>push_prompt()  :  event-top.c
<item>puts_unfiltered()  :  utils.c
<item>savestring()  :  utils.c
<item>wrap_here()  :  utils.c
<item>xfree()  :  utils.c
<item>xmalloc()  :  utils.c
<item>xrealloc()  :  utils.c
<item>__builtin___strcpy_chk(), __builtin_object_size(), __inline_strcpy_chk(), add_history(), fileno(), history_expand(), isatty(), signal(), strlen(), strncmp()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>change_line_handler()  :  event-top.c
<item>gdb_setup_readline()  :  event-top.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>handle_stop_sig()  :  event-top.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>annotation_level  :  stack.c
<item>async_annotation_suffix  :  event-top.c
<item>gdb_stderr  :  main.c
<item>gdb_stdout  :  main.c
<item>history_expansion_p  :  top.c
<item>instream  :  top.c
<item>job_control  :  utils.c
<item>line  :  top.c
<item>linesize  :  top.c
<item>more_to_come  :  event-top.c
<item>readline_input_state  :  event-top.c
<item>server_command  :  top.c
<item>source_file_name  :  top.c
<item>source_line_number  :  top.c
</itemize>
</descrip>

<sect1>Local Function handle_sigfpe()

<p><tt>static void handle_sigfpe ( int sig )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-top.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>mark_async_signal_handler_wrapper()  :  event-top.c
<item>signal()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>async_init_signals()  :  event-top.c
<item>handle_sigfpe()  :  event-top.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>handle_sigfpe()  :  event-top.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>sigfpe_token  :  event-top.c
</itemize>
</descrip>

<sect1>Local Function handle_sighup()

<p><tt>static void handle_sighup ( int sig )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-top.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>mark_async_signal_handler_wrapper()  :  event-top.c
<item>signal()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>async_init_signals()  :  event-top.c
<item>handle_sighup()  :  event-top.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>handle_sighup()  :  event-top.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>sighup_token  :  event-top.c
</itemize>
</descrip>

<sect1>Local Function handle_sigquit()

<p><tt>static void handle_sigquit ( int sig )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-top.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>mark_async_signal_handler_wrapper()  :  event-top.c
<item>signal()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>async_init_signals()  :  event-top.c
<item>handle_sigquit()  :  event-top.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>handle_sigquit()  :  event-top.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>sigquit_token  :  event-top.c
</itemize>
</descrip>

<sect1>Local Function handle_sigwinch()

<p><tt>static void handle_sigwinch ( int sig )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-top.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>mark_async_signal_handler_wrapper()  :  event-top.c
<item>signal()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>async_init_signals()  :  event-top.c
<item>handle_sigwinch()  :  event-top.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>handle_sigwinch()  :  event-top.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>sigwinch_token  :  event-top.c
</itemize>
</descrip>

<sect1>Local Function rl_callback_read_char_wrapper()

<p><tt>static void rl_callback_read_char_wrapper ( gdb_client_data client_data )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-top.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>rl_callback_read_char()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>change_line_handler()  :  event-top.c
<item>gdb_setup_readline()  :  event-top.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>after_char_processing_hook  :  event-top.c
</itemize>
</descrip>

</article>
