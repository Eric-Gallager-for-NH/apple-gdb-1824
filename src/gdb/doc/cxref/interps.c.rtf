{\rtf\ansi
\deff0
{\fonttbl
{\f0\froman Times New Roman;}
{\f1\fmodern Courier New;}
}
{\stylesheet
{\s0\f0\fs24 Normal;}
{\s1\f0\fs40\b\sb400\sa200\keepn\keep Heading 1;}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Heading 2;}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Heading 3;}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Heading 4;}
{\s5\f1\fs20\ql\sb50\sa50 Code;}
}
{\info{\comment
 This RTF file generated by cxref (version 1.6e).
 cxref program (c) Andrew M. Bishop 1995-2014.
 Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF interps.c
 CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
}}
\paperw11880\paperh16848\margl1440\margr1440\margt1440\margb1440
\sectd\plain
\s0\f0\fs24
{\s1\f0\fs40\b\sb400\sa200\keepn\keep File interps.c\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Included Files\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <errno.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <unistd.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_locale.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <locale.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../gdb/signals.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/symcat.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-file.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "xm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/xm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "nm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/i386/nm-i386.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/nm-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "tm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/tm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-tdep.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-tdep.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-thread-status.h"\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_types.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <inttypes.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_vm.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/kmod.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/tm-i386-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/fopen-bin.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdlib.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbarch.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdbcmd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "command.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-out.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "ui-out.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "event-loop.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "event-top.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "interps.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "exceptions.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "ui-out.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <setjmp.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "completer.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_string.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb-events.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_assert.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "top.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "exceptions.h"\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Type definitions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct interp\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct interp}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 const char* name;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct interp* next;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 void* data;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int inited;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct ui_out* interpreter_out;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 const struct interp_procs* procs;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int quiet_p;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Variables\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable interp_list\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct interp* interp_list\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell interp_add()\cell\cell\row
\cell interp_lookup()\cell\cell\row
\cell interpreter_completer()\cell\cell\row
\cell list_interpreter_cmd()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable current_interpreter\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct interp* current_interpreter\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell current_interp()\cell\cell\row
\cell current_interp_command_loop()\cell\cell\row
\cell current_interp_display_prompt_p()\cell\cell\row
\cell current_interp_named_p()\cell\cell\row
\cell interp_quiet_p()\cell\cell\row
\cell interp_set()\cell\cell\row
\cell interp_ui_out()\cell\cell\row
\cell set_interpreter_cmd()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable interpreter_initialized\par}
{\s5\f1\fs20\ql\sb50\sa50 static int interpreter_initialized\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell initialize_interps()\cell\cell\row
\cell interp_add()\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Functions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function _initialize_interpreter()\par}
{\s5\f1\fs20\ql\sb50\sa50 void _initialize_interpreter ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell interps.c\cell\cell\row
Calls: \cell  add_cmd(), add_setshow_string_cmd(), set_cmd_completer()\cell\cell\row
Refs Func:\cell interpreter_completer()\cell interps.c\cell\row
\cell interpreter_exec_cmd()\cell interps.c\cell\row
\cell list_interpreter_cmd()\cell interps.c\cell\row
\cell set_interpreter_cmd()\cell interps.c\cell\row
Refs Var:\cell interpreter_p\cell main.c\cell\row
\cell  cmdlist, infolist, setlist, showlist\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function clear_interpreter_hooks()\par}
{\s5\f1\fs20\ql\sb50\sa50 void clear_interpreter_hooks ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell interps.h\cell\cell\row
Calls: \cell  clear_gdb_event_hooks()\cell\cell\row
Refs Var:\cell deprecated_call_command_hook\cell top.c\cell\row
\cell deprecated_command_loop_hook\cell top.c\cell\row
\cell deprecated_context_hook\cell top.c\cell\row
\cell deprecated_create_breakpoint_hook\cell top.c\cell\row
\cell deprecated_delete_breakpoint_hook\cell top.c\cell\row
\cell deprecated_error_begin_hook\cell utils.c\cell\row
\cell deprecated_error_hook\cell top.c\cell\row
\cell deprecated_init_ui_hook\cell top.c\cell\row
\cell deprecated_interactive_hook\cell top.c\cell\row
\cell deprecated_memory_changed_hook\cell top.c\cell\row
\cell deprecated_modify_breakpoint_hook\cell top.c\cell\row
\cell deprecated_print_frame_info_listing_hook\cell top.c\cell\row
\cell deprecated_query_hook\cell top.c\cell\row
\cell deprecated_readline_begin_hook\cell top.c\cell\row
\cell deprecated_readline_end_hook\cell top.c\cell\row
\cell deprecated_readline_hook\cell top.c\cell\row
\cell deprecated_register_changed_hook\cell top.c\cell\row
\cell deprecated_registers_changed_hook\cell top.c\cell\row
\cell deprecated_target_wait_hook\cell top.c\cell\row
\cell deprecated_warning_hook\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function current_interp()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct interp* current_interp ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell interps.h\cell\cell\row
Called by:\cell interp_set_ui_out()\cell interps.c\cell\row
\cell start_event_loop()\cell event-loop.c\cell\row
Refs Var:\cell current_interpreter\cell interps.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function current_interp_command_loop()\par}
{\s5\f1\fs20\ql\sb50\sa50 void current_interp_command_loop ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell interps.h\cell\cell\row
Calls: \cell cli_command_loop()\cell event-top.c\cell\row
\cell  deprecated_command_loop_hook()\cell\cell\row
Called by:\cell captured_command_loop()\cell main.c\cell\row
Refs Var:\cell current_interpreter\cell interps.c\cell\row
\cell deprecated_command_loop_hook\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function current_interp_display_prompt_p()\par}
{\s5\f1\fs20\ql\sb50\sa50 int current_interp_display_prompt_p ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell interps.h\cell\cell\row
Called by:\cell display_gdb_prompt()\cell event-top.c\cell\row
Refs Var:\cell current_interpreter\cell interps.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function current_interp_named_p()\par}
{\s5\f1\fs20\ql\sb50\sa50 int current_interp_named_p ( const char* interp_name )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell interps.h\cell\cell\row
Calls: \cell  strcmp()\cell\cell\row
Called by:\cell captured_main()\cell main.c\cell\row
Refs Var:\cell current_interpreter\cell interps.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function interp_add()\par}
{\s5\f1\fs20\ql\sb50\sa50 void interp_add ( struct interp* interp )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell interps.h\cell\cell\row
Calls: \cell initialize_interps()\cell interps.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell interp_lookup()\cell interps.c\cell\row
Refs Var:\cell interp_list\cell interps.c\cell\row
\cell interpreter_initialized\cell interps.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function interp_complete()\par}
{\s5\f1\fs20\ql\sb50\sa50 int interp_complete ( struct interp* interp, char* word, char* command_buffer, int cursor, int limit )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell interps.h\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function interp_exec()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct gdb_exception interp_exec ( struct interp* interp, const char* command_str )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell interps.h\cell\cell\row
Called by:\cell interpreter_exec_cmd()\cell interps.c\cell\row
Refs Var:\cell  exception_none\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function interp_exec_p()\par}
{\s5\f1\fs20\ql\sb50\sa50 int interp_exec_p ( struct interp* interp )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell interps.h\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function interp_lookup()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct interp* interp_lookup ( const char* name )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell interps.h\cell\cell\row
Calls: \cell  strcmp(), strlen()\cell\cell\row
Called by:\cell captured_main()\cell main.c\cell\row
\cell interp_add()\cell interps.c\cell\row
\cell interpreter_exec_cmd()\cell interps.c\cell\row
\cell set_interpreter_cmd()\cell interps.c\cell\row
Refs Var:\cell interp_list\cell interps.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function interp_new()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct interp* interp_new ( const char* name, void* data, struct ui_out* uiout, const struct interp_procs* procs )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell interps.h\cell\cell\row
Calls: \cell xmalloc()\cell utils.c\cell\row
\cell  xstrdup()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function interp_quiet_p()\par}
{\s5\f1\fs20\ql\sb50\sa50 int interp_quiet_p ( struct interp* interp )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell interps.h\cell\cell\row
Called by:\cell interp_set()\cell interps.c\cell\row
Refs Var:\cell current_interpreter\cell interps.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function interp_set()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct interp* interp_set ( struct interp* interp )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell interps.h\cell\cell\row
Calls: \cell display_gdb_prompt()\cell event-top.c\cell\row
\cell error()\cell utils.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell interp_quiet_p()\cell interps.c\cell\row
\cell interp_set()\cell interps.c\cell\row
\cell ui_out_flush()\cell ui-out.c\cell\row
\cell ui_out_text()\cell ui-out.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell  __builtin___snprintf_chk(), __builtin_object_size(), strcmp(), xstrdup()\cell\cell\row
Called by:\cell captured_main()\cell main.c\cell\row
\cell interp_set()\cell interps.c\cell\row
\cell interpreter_exec_cmd()\cell interps.c\cell\row
\cell set_interpreter_cmd()\cell interps.c\cell\row
Refs Var:\cell current_interpreter\cell interps.c\cell\row
\cell interpreter_p\cell main.c\cell\row
\cell uiout\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function interp_set_quiet()\par}
{\s5\f1\fs20\ql\sb50\sa50 int interp_set_quiet ( struct interp* interp, int quiet )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell interps.h\cell\cell\row
Called by:\cell interpreter_exec_cmd()\cell interps.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function interp_set_ui_out()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct ui_out* interp_set_ui_out ( struct interp* interp, struct ui_out* new_uiout )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell interps.h\cell\cell\row
Calls: \cell current_interp()\cell interps.c\cell\row
\cell error()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function interp_ui_out()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct ui_out* interp_ui_out ( struct interp* interp )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell interps.h\cell\cell\row
Called by:\cell start_event_loop()\cell event-loop.c\cell\row
Refs Var:\cell current_interpreter\cell interps.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function list_interpreter_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 void list_interpreter_cmd ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell interps.c\cell\cell\row
Calls: \cell do_cleanups()\cell utils.c\cell\row
\cell make_cleanup_ui_out_list_begin_end()\cell ui-out.c\cell\row
\cell ui_out_field_string()\cell ui-out.c\cell\row
\cell ui_out_text()\cell ui-out.c\cell\row
Used in:\cell _initialize_interpreter()\cell interps.c\cell\row
Refs Var:\cell interp_list\cell interps.c\cell\row
\cell uiout\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function initialize_interps()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void initialize_interps ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell interps.c\cell\cell\row
Called by:\cell interp_add()\cell interps.c\cell\row
Refs Var:\cell interpreter_initialized\cell interps.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function interpreter_completer()\par}
{\s5\f1\fs20\ql\sb50\sa50 static char** interpreter_completer ( const char* text, char* word )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell interps.c\cell\cell\row
Calls: \cell xfree()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell xrealloc()\cell utils.c\cell\row
\cell  __builtin___strcat_chk(), __builtin___strcpy_chk(), __builtin___strncpy_chk(), __builtin_object_size(), __inline_strcat_chk(), __inline_strcpy_chk(), __inline_strncpy_chk(), strlen(), strncmp()\cell\cell\row
Used in:\cell _initialize_interpreter()\cell interps.c\cell\row
Refs Var:\cell interp_list\cell interps.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function interpreter_exec_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void interpreter_exec_cmd ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell error()\cell utils.c\cell\row
\cell interp_exec()\cell interps.c\cell\row
\cell interp_lookup()\cell interps.c\cell\row
\cell interp_set()\cell interps.c\cell\row
\cell interp_set_quiet()\cell interps.c\cell\row
\cell  buildargv()\cell\cell\row
Used in:\cell _initialize_interpreter()\cell interps.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_interpreter_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void set_interpreter_cmd ( const char* args, int from_tty, struct cmd_list_element* c )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell interps.c\cell\cell\row
Calls: \cell dont_repeat()\cell top.c\cell\row
\cell error()\cell utils.c\cell\row
\cell interp_lookup()\cell interps.c\cell\row
\cell interp_set()\cell interps.c\cell\row
\cell  cmd_type(), xstrdup()\cell\cell\row
Used in:\cell _initialize_interpreter()\cell interps.c\cell\row
Refs Var:\cell current_interpreter\cell interps.c\cell\row
\cell interpreter_p\cell main.c\cell\row
\intbl0
}
