<!DOCTYPE LINUXDOC SYSTEM>

<!-- This SGML file generated by cxref (version 1.6e). -->
<!-- cxref program (c) Andrew M. Bishop 1995-2014. -->

<!--
Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF doublest.c
CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
-->

<article>

<title>Cross reference for doublest.c of gdb.cxref.
<author>cxref

<sect>File doublest.c
<descrip>
<tag>References Variables:</tag>
<itemize>
<item> floatformat_i387_ext, floatformat_ieee_double_little, floatformat_ieee_single_little
</itemize>
</descrip>

<sect1>Included Files

<p>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<itemize>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
<item><tt>#include &lt;sys/time.h&gt;</tt>
<item><tt>#include &lt;time.h&gt;</tt>
<item><tt>#include &lt;sys/types.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
<item><tt>#include &lt;errno.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
<item><tt>#include &lt;regex.h&gt;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;unistd.h&gt;</tt>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;gdb_locale.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<item><tt>#include &lt;locale.h&gt;</tt>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../gdb/signals.h&quot;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &quot;../include/libiberty.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/symcat.h&quot;</tt>
</itemize>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
<item><tt>#include &quot;ui-file.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;xm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/xm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &lt;mach/mach.h&gt;</tt>
<item><tt>#include &lt;signal.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;nm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/i386/nm-i386.h&quot;</tt>
<item><tt>#include &quot;macosx/nm-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;tm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/tm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;macosx/i386-macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/i386-macosx-thread-status.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &lt;mach/mach_types.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
<item><tt>#include &lt;inttypes.h&gt;</tt>
<item><tt>#include &lt;mach/mach_vm.h&gt;</tt>
<item><tt>#include &lt;mach/kmod.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;macosx/tm-i386-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;../include/fopen-bin.h&quot;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdlib.h&gt;</tt>
<item><tt>#include &quot;gdbarch.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;doublest.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/floatformat.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;../include/floatformat.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_assert.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_string.h&quot;</tt>
<itemize>
<item><tt>#include &lt;string.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;gdbtypes.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &lt;math.h&gt;</tt>
</itemize>
<itemize>
<item><tt>#include &lt;limits.h&gt;</tt>
</itemize>

<sect1>Preprocessor definitions

<p>
<tt>#define FLOATFORMAT_CHAR_BIT 8</tt><newline>
<p>
<tt>#define FLOATFORMAT_LARGEST_BYTES 16</tt><newline>
<p>
<tt>#define NAN 0.0</tt><newline>

<sect1>Global Variable floatformat_ieee_single

<p>
<tt>const struct floatformat* floatformat_ieee_single[BFD_ENDIAN_UNKNOWN]</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>coff-pe-read.c
<item>coffread.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>eval.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>ui-out.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_doublest()  :  doublest.c
</itemize>
</descrip>

<sect1>Global Variable floatformat_ieee_double

<p>
<tt>const struct floatformat* floatformat_ieee_double[BFD_ENDIAN_UNKNOWN]</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>coff-pe-read.c
<item>coffread.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>eval.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>ui-out.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_doublest()  :  doublest.c
</itemize>
</descrip>

<sect1>Global Variable floatformat_ieee_quad

<p>
<tt>const struct floatformat* floatformat_ieee_quad[BFD_ENDIAN_UNKNOWN]</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>coff-pe-read.c
<item>coffread.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>eval.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>ui-out.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_doublest()  :  doublest.c
</itemize>
</descrip>

<sect1>Global Variable floatformat_arm_ext

<p>
<tt>const struct floatformat* floatformat_arm_ext[BFD_ENDIAN_UNKNOWN]</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>coff-pe-read.c
<item>coffread.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>eval.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>ui-out.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_doublest()  :  doublest.c
</itemize>
</descrip>

<sect1>Global Variable floatformat_ia64_spill

<p>
<tt>const struct floatformat* floatformat_ia64_spill[BFD_ENDIAN_UNKNOWN]</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>coff-pe-read.c
<item>coffread.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>eval.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>ui-out.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_doublest()  :  doublest.c
</itemize>
</descrip>

<sect1>Local Variables

<p>
<bf>host_float_format</bf><newline>
<tt>static const struct floatformat* host_float_format</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>floatformat_from_doublest()
<item>floatformat_to_doublest()
</itemize>
</descrip>
<p>
<bf>host_double_format</bf><newline>
<tt>static const struct floatformat* host_double_format</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>floatformat_from_doublest()
<item>floatformat_to_doublest()
</itemize>
</descrip>
<p>
<bf>host_long_double_format</bf><newline>
<tt>static const struct floatformat* host_long_double_format</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>floatformat_from_doublest()
<item>floatformat_to_doublest()
</itemize>
</descrip>

<sect1>Global Function _initialize_doublest()

<p><tt>void _initialize_doublest ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>doublest.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>floatformat_arm_ext  :  doublest.c
<item>floatformat_ia64_spill  :  doublest.c
<item>floatformat_ieee_double  :  doublest.c
<item>floatformat_ieee_quad  :  doublest.c
<item>floatformat_ieee_single  :  doublest.c
<item>floatformat_arm_ext_big, floatformat_arm_ext_littlebyte_bigword, floatformat_ia64_quad_big, floatformat_ia64_quad_little, floatformat_ia64_spill_big, floatformat_ia64_spill_little, floatformat_ieee_double_big, floatformat_ieee_double_little, floatformat_ieee_single_big, floatformat_ieee_single_little
</itemize>
</descrip>

<sect1>Global Function convert_typed_floating()

<p><tt>void convert_typed_floating ( const void* from, struct type* from_type, void* to, struct type* to_type )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>doublest.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>floatformat_from_doublest()  :  doublest.c
<item>floatformat_from_type()  :  doublest.c
<item>floatformat_to_doublest()  :  doublest.c
<item>internal_error()  :  utils.c
<item>objc_fixup_class_length()  :  objc-lang.c
<item>warning()  :  utils.c
<item>__builtin___memcpy_chk(), __builtin___memset_chk(), __builtin_object_size(), __inline_memcpy_chk(), __inline_memset_chk()
</itemize>
</descrip>

<sect1>Global Function deprecated_extract_floating()

<p><tt>DOUBLEST deprecated_extract_floating ( const void* addr, int len )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>doublest.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>extract_floating_by_length()  :  doublest.c
</itemize>
</descrip>

<sect1>Global Function deprecated_store_floating()

<p><tt>void deprecated_store_floating ( void* addr, int len, DOUBLEST val )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>doublest.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>store_floating_by_length()  :  doublest.c
</itemize>
</descrip>

<sect1>Global Function extract_typed_floating()

<p><tt>DOUBLEST extract_typed_floating ( const void* addr, struct type* type )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>doublest.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>extract_floating_by_length()  :  doublest.c
<item>floatformat_to_doublest()  :  doublest.c
<item>internal_error()  :  utils.c
<item>objc_fixup_class_length()  :  objc-lang.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>unpack_double()  :  value.c
<item>unpack_long()  :  value.c
</itemize>
</descrip>

<sect1>Global Function floatformat_from_doublest()

<p><tt>void floatformat_from_doublest ( const struct floatformat* fmt, const DOUBLEST* in, void* out )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>doublest.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>convert_doublest_to_floatformat()  :  doublest.c
<item>internal_error()  :  utils.c
<item>__builtin___memcpy_chk(), __builtin_object_size(), __inline_memcpy_chk()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>convert_typed_floating()  :  doublest.c
<item>store_floating_by_length()  :  doublest.c
<item>store_typed_floating()  :  doublest.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>host_double_format  :  doublest.c
<item>host_float_format  :  doublest.c
<item>host_long_double_format  :  doublest.c
</itemize>
</descrip>

<sect1>Global Function floatformat_from_type()

<p><tt>const struct floatformat* floatformat_from_type ( struct type* type )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>doublest.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>floatformat_from_length()  :  doublest.c
<item>internal_error()  :  utils.c
<item>objc_fixup_class_length()  :  objc-lang.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>convert_typed_floating()  :  doublest.c
<item>print_floating()  :  valprint.c
<item>print_floating_in_hex()  :  valprint.c
<item>unpack_double()  :  value.c
</itemize>
</descrip>

<sect1>Global Function floatformat_is_nan()

<p><tt>int floatformat_is_nan ( const struct floatformat* fmt, const bfd_byte* uval )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>doublest.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>floatformat_normalize_byteorder()  :  doublest.c
<item>get_field()  :  doublest.c
<item>internal_error()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>print_floating()  :  valprint.c
<item>print_floating_in_hex()  :  valprint.c
</itemize>
</descrip>

<sect1>Global Function floatformat_is_negative()

<p><tt>int floatformat_is_negative ( const struct floatformat* fmt, const bfd_byte* uval )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>doublest.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>floatformat_normalize_byteorder()  :  doublest.c
<item>get_field()  :  doublest.c
<item>internal_error()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>print_floating()  :  valprint.c
<item>print_floating_in_hex()  :  valprint.c
</itemize>
</descrip>

<sect1>Global Function floatformat_mantissa()

<p><tt>const char* floatformat_mantissa ( const struct floatformat* fmt, const bfd_byte* val )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>doublest.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>floatformat_normalize_byteorder()  :  doublest.c
<item>get_field()  :  doublest.c
<item>internal_error()  :  utils.c
<item>__builtin___snprintf_chk(), __builtin___strcat_chk(), __builtin_object_size(), __inline_strcat_chk()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>print_floating()  :  valprint.c
<item>print_floating_in_hex()  :  valprint.c
</itemize>
</descrip>

<sect1>Global Function floatformat_to_doublest()

<p><tt>void floatformat_to_doublest ( const struct floatformat* fmt, const void* in, DOUBLEST* out )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>doublest.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>convert_floatformat_to_doublest()  :  doublest.c
<item>floatformat_byteorders_are_reversed()  :  doublest.c
<item>floatformats_same_except_for_byteorder()  :  doublest.c
<item>internal_error()  :  utils.c
<item>swap_bytes()  :  doublest.c
<item>__builtin___memcpy_chk(), __builtin_object_size(), __inline_memcpy_chk()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>convert_typed_floating()  :  doublest.c
<item>extract_floating_by_length()  :  doublest.c
<item>extract_typed_floating()  :  doublest.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>host_double_format  :  doublest.c
<item>host_float_format  :  doublest.c
<item>host_long_double_format  :  doublest.c
</itemize>
</descrip>

<sect1>Global Function store_typed_floating()

<p><tt>void store_typed_floating ( void* addr, struct type* type, DOUBLEST val )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>doublest.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>floatformat_from_doublest()  :  doublest.c
<item>internal_error()  :  utils.c
<item>objc_fixup_class_length()  :  objc-lang.c
<item>store_floating_by_length()  :  doublest.c
<item>__builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>define_symbol()  :  stabsread.c
<item>value_binop()  :  valarith.c
<item>value_from_double()  :  value.c
</itemize>
</descrip>

<sect1>Local Function convert_doublest_to_floatformat()

<p><tt>static void convert_doublest_to_floatformat ( const struct floatformat* fmt, const DOUBLEST* from, void* to )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>ldfrexp()  :  doublest.c
<item>put_field()  :  doublest.c
<item>__builtin___memcpy_chk(), __builtin___memset_chk(), __builtin_object_size(), __inline_memcpy_chk(), __inline_memset_chk()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>floatformat_from_doublest()  :  doublest.c
</itemize>
</descrip>

<sect1>Local Function convert_floatformat_to_doublest()

<p><tt>static void convert_floatformat_to_doublest ( const struct floatformat* fmt, const void* from, DOUBLEST* to )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>floatformat_normalize_byteorder()  :  doublest.c
<item>get_field()  :  doublest.c
<item>internal_error()  :  utils.c
<item>ldexpl()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>floatformat_to_doublest()  :  doublest.c
</itemize>
</descrip>

<sect1>Local Function extract_floating_by_length()

<p><tt>static DOUBLEST extract_floating_by_length ( const void* addr, int len )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>floatformat_from_length()  :  doublest.c
<item>floatformat_to_doublest()  :  doublest.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>deprecated_extract_floating()  :  doublest.c
<item>extract_typed_floating()  :  doublest.c
</itemize>
</descrip>

<sect1>Local Function floatformat_byteorders_are_reversed()

<p><tt>static int floatformat_byteorders_are_reversed ( enum floatformat_byteorders a, enum floatformat_byteorders b )</tt><newline>
<descrip>
<tag>Called by:</tag>
<itemize>
<item>floatformat_to_doublest()  :  doublest.c
</itemize>
</descrip>

<sect1>Local Function floatformat_from_length()

<p><tt>static const struct floatformat* floatformat_from_length ( int len )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>gdbarch_double_bit()  :  gdbarch.c
<item>gdbarch_double_format()  :  gdbarch.c
<item>gdbarch_float_bit()  :  gdbarch.c
<item>gdbarch_float_format()  :  gdbarch.c
<item>gdbarch_long_double_bit()  :  gdbarch.c
<item>gdbarch_long_double_format()  :  gdbarch.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>extract_floating_by_length()  :  doublest.c
<item>floatformat_from_type()  :  doublest.c
<item>store_floating_by_length()  :  doublest.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
</itemize>
</descrip>

<sect1>Local Function floatformat_normalize_byteorder()

<p><tt>static enum floatformat_byteorders floatformat_normalize_byteorder ( const struct floatformat* fmt, const void* from, void* to )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>convert_floatformat_to_doublest()  :  doublest.c
<item>floatformat_is_nan()  :  doublest.c
<item>floatformat_is_negative()  :  doublest.c
<item>floatformat_mantissa()  :  doublest.c
</itemize>
</descrip>

<sect1>Local Function floatformats_same_except_for_byteorder()

<p><tt>static int floatformats_same_except_for_byteorder ( const struct floatformat* a, const struct floatformat* b )</tt><newline>
<descrip>
<tag>Called by:</tag>
<itemize>
<item>floatformat_to_doublest()  :  doublest.c
</itemize>
</descrip>

<sect1>Local Function get_field()

<p><tt>static unsigned long get_field ( const bfd_byte* data, enum floatformat_byteorders order, unsigned int total_len, unsigned int start, unsigned int len )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>internal_error()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>convert_floatformat_to_doublest()  :  doublest.c
<item>floatformat_is_nan()  :  doublest.c
<item>floatformat_is_negative()  :  doublest.c
<item>floatformat_mantissa()  :  doublest.c
</itemize>
</descrip>

<sect1>Local Function ldfrexp()

<p><tt>static long double ldfrexp ( long double value, int* eptr )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>doublest.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>convert_doublest_to_floatformat()  :  doublest.c
</itemize>
</descrip>

<sect1>Local Function put_field()

<p><tt>static void put_field ( unsigned char* data, enum floatformat_byteorders order, unsigned int total_len, unsigned int start, unsigned int len, unsigned long stuff_to_put )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>doublest.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>convert_doublest_to_floatformat()  :  doublest.c
</itemize>
</descrip>

<sect1>Local Function store_floating_by_length()

<p><tt>static void store_floating_by_length ( void* addr, int len, DOUBLEST val )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>floatformat_from_doublest()  :  doublest.c
<item>floatformat_from_length()  :  doublest.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>deprecated_store_floating()  :  doublest.c
<item>store_typed_floating()  :  doublest.c
</itemize>
</descrip>

<sect1>Local Function swap_bytes()

<p><tt>static void swap_bytes ( gdb_byte* from, gdb_byte* to, int len )</tt><newline>
<descrip>
<tag>Called by:</tag>
<itemize>
<item>floatformat_to_doublest()  :  doublest.c
</itemize>
</descrip>

</article>
