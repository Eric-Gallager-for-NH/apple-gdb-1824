{\rtf\ansi
\deff0
{\fonttbl
{\f0\froman Times New Roman;}
{\f1\fmodern Courier New;}
}
{\stylesheet
{\s0\f0\fs24 Normal;}
{\s1\f0\fs40\b\sb400\sa200\keepn\keep Heading 1;}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Heading 2;}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Heading 3;}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Heading 4;}
{\s5\f1\fs20\ql\sb50\sa50 Code;}
}
{\info{\comment
 This RTF file generated by cxref (version 1.6e).
 cxref program (c) Andrew M. Bishop 1995-2014.
 Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF dbxread.c
 CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
}}
\paperw11880\paperh16848\margl1440\margr1440\margt1440\margb1440
\sectd\plain
\s0\f0\fs24
{\s1\f0\fs40\b\sb400\sa200\keepn\keep File dbxread.c\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Refs Func:\cell dbx_new_init()\cell dbxread.c\cell\row
\cell dbx_symfile_finish()\cell dbxread.c\cell\row
\cell dbx_symfile_init()\cell dbxread.c\cell\row
\cell dbx_symfile_read()\cell dbxread.c\cell\row
\cell default_symfile_offsets()\cell symfile.c\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Included Files\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <errno.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <unistd.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_locale.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <locale.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../gdb/signals.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/symcat.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-file.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "xm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/xm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "nm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/i386/nm-i386.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/nm-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "tm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/tm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-tdep.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-tdep.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-thread-status.h"\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_types.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <inttypes.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_vm.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/kmod.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/tm-i386-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/fopen-bin.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdlib.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbarch.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_string.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <fcntl.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <ctype.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_obstack.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/obstack.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_stat.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/stat.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "breakpoint.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "../include/floatformat.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_regex.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "gdbtypes.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "expression.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb-events.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "command.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdbcmd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "command.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-out.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "target.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "dcache.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "memattr.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdbcore.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/libaout.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/bfdlink.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "objfiles.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <uuid/uuid.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_obstack.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symfile.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "inlining.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <block.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sqlite3.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "buildsym.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "stabsread.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb-stabs.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../include/demangle.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "complaints.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "cp-abi.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/mach-o.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <mach-o/loader.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "block.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-nat-dyld.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-nat-mutils.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "memattr.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "target.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "inferior.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "breakpoint.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "target.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-nat-utils.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-nat-threads.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <pthread.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <mach/machine.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <mach-o/loader.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-nat-dyld-info.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <mach/machine.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <mach-o/loader.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-nat-dyld-path.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_assert.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_string.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../include/aout/aout64.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../include/aout/stab_gnu.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/aout/stab.def"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <AvailabilityMacros.h>\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Preprocessor definitions\par}
{\s5\f1\fs20\ql\sb50\sa50 #define LDSYMOFF( p )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define LDSYMLEN( p )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define SYMLOC( p )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define SYMBOL_SIZE( p )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define SYMBOL_OFFSET( p )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define STRING_OFFSET( p )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define FILE_STRING_OFFSET( p )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define SYMBOL_PREFIX( p )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define DBX_STRINGTAB_SIZE_SIZE\par}
{\s5\f1\fs20\ql\sb50\sa50 #define STRING_TABLE_OFFSET\par}
{\s5\f1\fs20\ql\sb50\sa50 #define SYMBOL_TABLE_OFFSET\par}
{\s5\f1\fs20\ql\sb50\sa50 #define PEEK_SYMBOL( intern, sect_p, abfd )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define NEXT_SYMBOL( intern, sect_p, abfd )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define bincl_hash msymbol_hash\par}
{\s5\f1\fs20\ql\sb50\sa50 #define PUBTYPE_ARCHIVES_CHUNK 10\par}
{\s5\f1\fs20\ql\sb50\sa50 #define VARIABLES_INSIDE_BLOCK( desc, gcc_p )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define COFF_STABS_SYMBOL_SIZE 12\par}
{\s5\f1\fs20\ql\sb50\sa50 #define ELF_STABS_SYMBOL_SIZE 12\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Type definitions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct symloc\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct symloc}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int ldsymoff;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int ldsymlen;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int symbol_size;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int symbol_offset;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int string_offset;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int file_string_offset;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 const char* prefix;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct header_file_location\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct header_file_location}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 const char* name;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 unsigned long hash;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int instance;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct partial_symtab* pst;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct partial_symtab_list\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct partial_symtab_list}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct partial_symtab_list* next;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct partial_symtab* pst;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct oso_data_cleanup\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct oso_data_cleanup}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 bfd_window stab_window;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 bfd_window strtab_window;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 bfd_byte** stab_data_handle;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 char** strtab_data_handle;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Variables\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable read_type_psym_p\par}
{\s5\f1\fs20\ql\sb50\sa50 static int read_type_psym_p\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_dbxread()\cell\cell\row
\cell read_dbx_symtab()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable end_fun_absolute_p\par}
{\s5\f1\fs20\ql\sb50\sa50 static int end_fun_absolute_p\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_dbxread()\cell\cell\row
\cell process_one_symbol()\cell\cell\row
\cell read_dbx_symtab()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable psymtab_language\par}
{\s5\f1\fs20\ql\sb50\sa50 static enum language psymtab_language\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell read_dbx_symtab()\cell\cell\row
\cell start_psymtab()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable processing_objfile\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct objfile* processing_objfile\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell dbx_next_symbol_text()\cell\cell\row
\cell oso_scan_partial_symtab()\cell\cell\row
\cell read_dbx_symtab()\cell\cell\row
\cell read_ofile_symtab()\cell\cell\row
\cell read_ofile_symtab_from_oso()\cell\cell\row
\cell read_oso_nlists()\cell\cell\row
\cell stabs_seek()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable symbol_size\par}
{\s5\f1\fs20\ql\sb50\sa50 static unsigned symbol_size\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell dbx_next_symbol_text()\cell\cell\row
\cell dbx_psymtab_to_symtab_1()\cell\cell\row
\cell dbx_symfile_read()\cell\cell\row
\cell fill_symbuf()\cell\cell\row
\cell oso_scan_partial_symtab()\cell\cell\row
\cell read_dbx_symtab()\cell\cell\row
\cell read_ofile_symtab()\cell\cell\row
\cell read_ofile_symtab_from_oso()\cell\cell\row
\cell read_oso_nlists()\cell\cell\row
\cell stabs_seek()\cell\cell\row
\cell start_psymtab()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable symbol_table_offset\par}
{\s5\f1\fs20\ql\sb50\sa50 static unsigned symbol_table_offset\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell dbx_symfile_read()\cell\cell\row
\cell fill_symbuf()\cell\cell\row
\cell start_psymtab()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable string_table_offset\par}
{\s5\f1\fs20\ql\sb50\sa50 static unsigned string_table_offset\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell start_psymtab()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable file_string_table_offset\par}
{\s5\f1\fs20\ql\sb50\sa50 static unsigned int file_string_table_offset\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell dbx_next_symbol_text()\cell\cell\row
\cell dbx_psymtab_to_symtab_1()\cell\cell\row
\cell read_dbx_symtab()\cell\cell\row
\cell set_namestring_1()\cell\cell\row
\cell start_psymtab()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable next_file_string_table_offset\par}
{\s5\f1\fs20\ql\sb50\sa50 static unsigned int next_file_string_table_offset\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell read_dbx_symtab()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable symfile_relocatable\par}
{\s5\f1\fs20\ql\sb50\sa50 static int symfile_relocatable\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell dbx_symfile_read()\cell\cell\row
\cell process_one_symbol()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable block_address_function_relative\par}
{\s5\f1\fs20\ql\sb50\sa50 static int block_address_function_relative\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell dbx_symfile_read()\cell\cell\row
\cell process_one_symbol()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable lowest_text_address\par}
{\s5\f1\fs20\ql\sb50\sa50 static CORE_ADDR lowest_text_address\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell read_dbx_symtab()\cell\cell\row
\cell record_minimal_symbol()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable has_line_numbers\par}
{\s5\f1\fs20\ql\sb50\sa50 static int has_line_numbers\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell end_psymtab()\cell\cell\row
\cell read_dbx_symtab()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable bincl_list\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct header_file_location* bincl_list\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell add_bincl_to_list()\cell\cell\row
\cell find_corresponding_bincl_psymtab()\cell\cell\row
\cell free_bincl_list()\cell\cell\row
\cell init_bincl_list()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable next_bincl\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct header_file_location* next_bincl\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell add_bincl_to_list()\cell\cell\row
\cell find_corresponding_bincl_psymtab()\cell\cell\row
\cell init_bincl_list()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable bincls_allocated\par}
{\s5\f1\fs20\ql\sb50\sa50 static int bincls_allocated\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell add_bincl_to_list()\cell\cell\row
\cell free_bincl_list()\cell\cell\row
\cell init_bincl_list()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable dbx_minsyms_recorded\par}
{\s5\f1\fs20\ql\sb50\sa50 static unsigned long dbx_minsyms_recorded\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell record_minimal_symbol()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable symbuf\par}
{\s5\f1\fs20\ql\sb50\sa50 static unsigned char* symbuf\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell dbx_next_symbol_text()\cell\cell\row
\cell fill_symbuf()\cell\cell\row
\cell oso_scan_partial_symtab()\cell\cell\row
\cell read_dbx_symtab()\cell\cell\row
\cell read_ofile_symtab()\cell\cell\row
\cell read_ofile_symtab_from_oso()\cell\cell\row
\cell read_oso_nlists()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable symbuf_size\par}
{\s5\f1\fs20\ql\sb50\sa50 static size_t symbuf_size\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell fill_symbuf()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable symbuf_idx\par}
{\s5\f1\fs20\ql\sb50\sa50 static int symbuf_idx\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell dbx_next_symbol_text()\cell\cell\row
\cell fill_symbuf()\cell\cell\row
\cell oso_scan_partial_symtab()\cell\cell\row
\cell read_dbx_symtab()\cell\cell\row
\cell read_ofile_symtab()\cell\cell\row
\cell read_ofile_symtab_from_oso()\cell\cell\row
\cell read_oso_nlists()\cell\cell\row
\cell stabs_seek()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable symbuf_end\par}
{\s5\f1\fs20\ql\sb50\sa50 static int symbuf_end\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell dbx_next_symbol_text()\cell\cell\row
\cell fill_symbuf()\cell\cell\row
\cell oso_scan_partial_symtab()\cell\cell\row
\cell read_dbx_symtab()\cell\cell\row
\cell read_ofile_symtab()\cell\cell\row
\cell read_ofile_symtab_from_oso()\cell\cell\row
\cell read_oso_nlists()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable last_function_name\par}
{\s5\f1\fs20\ql\sb50\sa50 static const char* last_function_name\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell end_psymtab()\cell\cell\row
\cell read_dbx_symtab()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable stringtab_global\par}
{\s5\f1\fs20\ql\sb50\sa50 static char* stringtab_global\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell dbx_next_symbol_text()\cell\cell\row
\cell read_dbx_symtab()\cell\cell\row
\cell read_ofile_symtab()\cell\cell\row
\cell read_ofile_symtab_from_oso()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable symbuf_sections\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct stab_section_list* symbuf_sections\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell coffstab_build_psymtabs()\cell\cell\row
\cell fill_symbuf()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable symbuf_left\par}
{\s5\f1\fs20\ql\sb50\sa50 static unsigned int symbuf_left\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell coffstab_build_psymtabs()\cell\cell\row
\cell elfstab_build_psymtabs()\cell\cell\row
\cell fill_symbuf()\cell\cell\row
\cell oso_scan_partial_symtab()\cell\cell\row
\cell read_ofile_symtab()\cell\cell\row
\cell read_ofile_symtab_from_oso()\cell\cell\row
\cell read_oso_nlists()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable symbuf_read\par}
{\s5\f1\fs20\ql\sb50\sa50 static unsigned int symbuf_read\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell coffstab_build_psymtabs()\cell\cell\row
\cell elfstab_build_psymtabs()\cell\cell\row
\cell fill_symbuf()\cell\cell\row
\cell oso_scan_partial_symtab()\cell\cell\row
\cell read_ofile_symtab()\cell\cell\row
\cell read_ofile_symtab_from_oso()\cell\cell\row
\cell read_oso_nlists()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable stabs_data\par}
{\s5\f1\fs20\ql\sb50\sa50 static bfd_byte* stabs_data\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell dbx_next_symbol_text()\cell\cell\row
\cell dbx_psymtab_to_symtab()\cell\cell\row
\cell elfstab_build_psymtabs()\cell\cell\row
\cell fill_symbuf()\cell\cell\row
\cell oso_scan_partial_symtab()\cell\cell\row
\cell read_dbx_symtab()\cell\cell\row
\cell read_ofile_symtab()\cell\cell\row
\cell read_ofile_symtab_from_oso()\cell\cell\row
\cell read_oso_nlists()\cell\cell\row
\cell stabs_seek()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable oso_pst_num_allocated\par}
{\s5\f1\fs20\ql\sb50\sa50 static int oso_pst_num_allocated\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell add_oso_pst_to_list()\cell\cell\row
\cell end_oso_pst_list()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable oso_pst_num_used\par}
{\s5\f1\fs20\ql\sb50\sa50 static int oso_pst_num_used\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell add_oso_pst_to_list()\cell\cell\row
\cell end_oso_pst_list()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable pubtype_bfd_array\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct bfd** pubtype_bfd_array\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell add_to_containing_archive_cache()\cell\cell\row
\cell clear_containing_archive_cache()\cell\cell\row
\cell find_in_containing_archive_cache()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable num_archives_for_pubtypes\par}
{\s5\f1\fs20\ql\sb50\sa50 static int num_archives_for_pubtypes\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell add_to_containing_archive_cache()\cell\cell\row
\cell clear_containing_archive_cache()\cell\cell\row
\cell find_in_containing_archive_cache()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable max_num_archives_for_pubtypes\par}
{\s5\f1\fs20\ql\sb50\sa50 static int max_num_archives_for_pubtypes\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell add_to_containing_archive_cache()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable aout_sym_fns\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct sym_fns aout_sym_fns\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_dbxread()\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Functions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function _initialize_dbxread()\par}
{\s5\f1\fs20\ql\sb50\sa50 void _initialize_dbxread ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell dbxread.c\cell\cell\row
Calls: \cell add_symtab_fns()\cell symfile.c\cell\row
\cell  add_setshow_boolean_cmd()\cell\cell\row
Refs Var:\cell aout_sym_fns\cell dbxread.c\cell\row
\cell end_fun_absolute_p\cell dbxread.c\cell\row
\cell read_type_psym_p\cell dbxread.c\cell\row
\cell  setlist, showlist\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function add_dyld_shared_cache_local_symbols()\par}
{\s5\f1\fs20\ql\sb50\sa50 void add_dyld_shared_cache_local_symbols ( struct objfile* objfile, uint8_t* nlist_records_base, int nlist_records_count, int nlist_record_size, char* strings_base, CORE_ADDR slide, int mainline )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell symfile.h\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function add_oso_pst_to_list()\par}
{\s5\f1\fs20\ql\sb50\sa50 void add_oso_pst_to_list ( struct oso_pst_list* list, struct partial_symtab* pst, struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell stabsread.h\cell\cell\row
Calls: \cell xmalloc()\cell utils.c\cell\row
\cell xrealloc()\cell utils.c\cell\row
Called by:\cell end_oso_pst_list()\cell dbxread.c\cell\row
\cell read_dbx_symtab()\cell dbxread.c\cell\row
Refs Var:\cell oso_pst_num_allocated\cell dbxread.c\cell\row
\cell oso_pst_num_used\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function clear_containing_archive_cache()\par}
{\s5\f1\fs20\ql\sb50\sa50 void clear_containing_archive_cache ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell symfile.h\cell\cell\row
Calls: \cell close_containing_archive_and_contents()\cell dbxread.c\cell\row
Called by:\cell dbx_psymtab_to_symtab_1()\cell dbxread.c\cell\row
\cell dwarf2_debug_map_psymtab_to_symtab()\cell dwarf2read.c\cell\row
\cell open_bfd_from_oso()\cell dbxread.c\cell\row
\cell oso_scan_partial_symtab()\cell dbxread.c\cell\row
\cell read_dbx_symtab()\cell dbxread.c\cell\row
Refs Var:\cell num_archives_for_pubtypes\cell dbxread.c\cell\row
\cell pubtype_bfd_array\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function close_bfd_or_archive()\par}
{\s5\f1\fs20\ql\sb50\sa50 void close_bfd_or_archive ( bfd* abfd )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell symfile.h\cell\cell\row
Calls: \cell close_containing_archive_and_contents()\cell dbxread.c\cell\row
\cell  bfd_close()\cell\cell\row
Called by:\cell dwarf2_debug_map_psymtab_to_symtab()\cell dwarf2read.c\cell\row
\cell dwarf2_scan_inlined_section_for_psymbols()\cell dwarf2read.c\cell\row
\cell dwarf2_scan_pubtype_for_psymbols()\cell dwarf2read.c\cell\row
\cell open_bfd_from_oso()\cell dbxread.c\cell\row
\cell oso_scan_partial_symtab()\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function coffstab_build_psymtabs()\par}
{\s5\f1\fs20\ql\sb50\sa50 void coffstab_build_psymtabs ( struct objfile* objfile, int mainline, CORE_ADDR textaddr, unsigned int textsize, struct stab_section_list* stabsects, file_ptr stabstroffset, unsigned int stabstrsize )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell stabsread.h\cell\cell\row
Calls: \cell buildsym_new_init()\cell buildsym.c\cell\row
\cell dbx_symfile_read()\cell dbxread.c\cell\row
\cell error()\cell utils.c\cell\row
\cell free_header_files()\cell dbxread.c\cell\row
\cell init_header_files()\cell dbxread.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell perror_with_name()\cell utils.c\cell\row
\cell stabsread_new_init()\cell stabsread.c\cell\row
\cell warning()\cell utils.c\cell\row
\cell  _obstack_newchunk(), bfd_bread(), bfd_get_size(), bfd_seek()\cell\cell\row
Called by:\cell coff_symfile_read()\cell coffread.c\cell\row
Refs Var:\cell processing_acc_compilation\cell buildsym.c\cell\row
\cell symbuf_left\cell dbxread.c\cell\row
\cell symbuf_read\cell dbxread.c\cell\row
\cell symbuf_sections\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function dbx_symfile_read()\par}
{\s5\f1\fs20\ql\sb50\sa50 void dbx_symfile_read ( struct objfile* objfile, int mainline )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell dbxread.c\cell\cell\row
Calls: \cell do_cleanups()\cell utils.c\cell\row
\cell free_pending_blocks()\cell buildsym.c\cell\row
\cell init_minimal_symbol_collection()\cell minsyms.c\cell\row
\cell init_psymbol_list()\cell symfile.c\cell\row
\cell install_minimal_symbols()\cell minsyms.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell make_cleanup_discard_minimal_symbols()\cell minsyms.c\cell\row
\cell objfile_contains_objc()\cell dbxread.c\cell\row
\cell perror_with_name()\cell utils.c\cell\row
\cell read_dbx_dynamic_symtab()\cell dbxread.c\cell\row
\cell read_dbx_symtab()\cell dbxread.c\cell\row
\cell start_timer()\cell maint.c\cell\row
\cell  bfd_seek(), strncmp()\cell\cell\row
Called by:\cell coffstab_build_psymtabs()\cell dbxread.c\cell\row
\cell elfstab_build_psymtabs()\cell dbxread.c\cell\row
Used in:\cell dbxread.c\cell\cell\row
Refs Func:\cell really_free_pendings()\cell buildsym.c\cell\row
Refs Var:\cell block_address_function_relative\cell dbxread.c\cell\row
\cell maint_use_timers\cell maint.c\cell\row
\cell symbol_size\cell dbxread.c\cell\row
\cell symbol_table_offset\cell dbxread.c\cell\row
\cell symfile_relocatable\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function elfstab_build_psymtabs()\par}
{\s5\f1\fs20\ql\sb50\sa50 void elfstab_build_psymtabs ( struct objfile* objfile, int mainline, asection* stabsect, file_ptr stabstroffset, unsigned int stabstrsize )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell stabsread.h\cell\cell\row
Calls: \cell buildsym_new_init()\cell buildsym.c\cell\row
\cell dbx_symfile_read()\cell dbxread.c\cell\row
\cell do_cleanups()\cell utils.c\cell\row
\cell error()\cell utils.c\cell\row
\cell find_text_range()\cell dbxread.c\cell\row
\cell free_header_files()\cell dbxread.c\cell\row
\cell init_header_files()\cell dbxread.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell perror_with_name()\cell utils.c\cell\row
\cell stabsread_new_init()\cell stabsread.c\cell\row
\cell symfile_relocate_debug_section()\cell symfile.c\cell\row
\cell warning()\cell utils.c\cell\row
\cell  _obstack_newchunk(), bfd_bread(), bfd_get_size(), bfd_seek()\cell\cell\row
Called by:\cell elf_symfile_read()\cell elfread.c\cell\row
Refs Func:\cell free_current_contents()\cell utils.c\cell\row
Refs Var:\cell processing_acc_compilation\cell buildsym.c\cell\row
\cell stabs_data\cell dbxread.c\cell\row
\cell symbuf_left\cell dbxread.c\cell\row
\cell symbuf_read\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function end_oso_pst_list()\par}
{\s5\f1\fs20\ql\sb50\sa50 void end_oso_pst_list ( struct oso_pst_list* list, struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell stabsread.h\cell\cell\row
Calls: \cell add_oso_pst_to_list()\cell dbxread.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell  __builtin___memcpy_chk(), __builtin_object_size(), __inline_memcpy_chk(), _obstack_newchunk()\cell\cell\row
Called by:\cell read_dbx_symtab()\cell dbxread.c\cell\row
Refs Var:\cell oso_pst_num_allocated\cell dbxread.c\cell\row
\cell oso_pst_num_used\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function end_psymtab()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct partial_symtab* end_psymtab ( struct partial_symtab* pst, const char** include_list, int num_includes, int capping_symbol_offset, CORE_ADDR capping_text, struct partial_symtab** dependency_list, int number_dependencies, int textlow_not_set )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell stabsread.h\cell\cell\row
Calls: \cell allocate_psymtab()\cell symfile.c\cell\row
\cell discard_psymtab()\cell symfile.c\cell\row
\cell find_name_end()\cell stabsread.c\cell\row
\cell free_named_symtabs()\cell symfile.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell lookup_minimal_symbol()\cell minsyms.c\cell\row
\cell psymtab_get_first()\cell objfiles.c\cell\row
\cell psymtab_get_next()\cell objfiles.c\cell\row
\cell sort_pst_symbols()\cell symfile.c\cell\row
\cell  __builtin___memcpy_chk(), __builtin___strncpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_memcpy_chk(), __inline_strncpy_chk(), _obstack_newchunk()\cell\cell\row
Called by:\cell parse_partial_symbols()\cell mdebugread.c\cell\row
\cell read_dbx_symtab()\cell dbxread.c\cell\row
Refs Var:\cell has_line_numbers\cell dbxread.c\cell\row
\cell last_function_name\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function free_header_files()\par}
{\s5\f1\fs20\ql\sb50\sa50 void free_header_files ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell stabsread.h\cell\cell\row
Calls: \cell xfree()\cell utils.c\cell\row
Called by:\cell coffstab_build_psymtabs()\cell dbxread.c\cell\row
\cell dbx_symfile_finish()\cell dbxread.c\cell\row
\cell elfstab_build_psymtabs()\cell dbxread.c\cell\row
\cell mdebug_build_psymtabs()\cell mdebugread.c\cell\row
\cell stabsect_build_psymtabs()\cell dbxread.c\cell\row
Refs Var:\cell n_allocated_this_object_header_files\cell stabsread.c\cell\row
\cell this_object_header_files\cell stabsread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function init_header_files()\par}
{\s5\f1\fs20\ql\sb50\sa50 void init_header_files ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell stabsread.h\cell\cell\row
Calls: \cell xmalloc()\cell utils.c\cell\row
Called by:\cell coffstab_build_psymtabs()\cell dbxread.c\cell\row
\cell dbx_new_init()\cell dbxread.c\cell\row
\cell elfstab_build_psymtabs()\cell dbxread.c\cell\row
\cell mdebug_build_psymtabs()\cell mdebugread.c\cell\row
\cell stabsect_build_psymtabs()\cell dbxread.c\cell\row
Refs Var:\cell n_allocated_this_object_header_files\cell stabsread.c\cell\row
\cell this_object_header_files\cell stabsread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function init_oso_pst_list()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct oso_pst_list* init_oso_pst_list ( char* oso_name, struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell stabsread.h\cell\cell\row
Calls: \cell  _obstack_newchunk()\cell\cell\row
Called by:\cell read_dbx_symtab()\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function open_bfd_from_oso()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct bfd* open_bfd_from_oso ( struct partial_symtab* pst, int* cached )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell symfile.h\cell\cell\row
Calls: \cell add_to_containing_archive_cache()\cell dbxread.c\cell\row
\cell clear_containing_archive_cache()\cell dbxread.c\cell\row
\cell close_bfd_or_archive()\cell dbxread.c\cell\row
\cell discard_cleanups()\cell utils.c\cell\row
\cell do_cleanups()\cell utils.c\cell\row
\cell find_in_containing_archive_cache()\cell dbxread.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell open_bfd_matching_arch()\cell symfile.c\cell\row
\cell parse_archive_name()\cell dbxread.c\cell\row
\cell safe_strerror()\cell utils.c\cell\row
\cell warning()\cell utils.c\cell\row
\cell  __error(), bfd_check_format(), bfd_get_mtime(), bfd_openr(), bfd_openr_next_archived_file(), macosx_get_osabi_from_dyld_entry(), strcmp()\cell\cell\row
Called by:\cell dbx_psymtab_to_symtab_1()\cell dbxread.c\cell\row
\cell dwarf2_debug_map_psymtab_to_symtab()\cell dwarf2read.c\cell\row
\cell dwarf2_scan_inlined_section_for_psymbols()\cell dwarf2read.c\cell\row
\cell dwarf2_scan_pubtype_for_psymbols()\cell dwarf2read.c\cell\row
\cell oso_scan_partial_symtab()\cell dbxread.c\cell\row
Refs Func:\cell xfree()\cell utils.c\cell\row
Refs Var:\cell gnutarget\cell corefile.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function oso_scan_partial_symtab()\par}
{\s5\f1\fs20\ql\sb50\sa50 void oso_scan_partial_symtab ( struct partial_symtab* pst )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell symfile.h\cell\cell\row
Calls: \cell add_bincl_to_list()\cell dbxread.c\cell\row
\cell clear_containing_archive_cache()\cell dbxread.c\cell\row
\cell close_bfd_or_archive()\cell dbxread.c\cell\row
\cell do_cleanups()\cell utils.c\cell\row
\cell error()\cell utils.c\cell\row
\cell fill_symbuf()\cell dbxread.c\cell\row
\cell find_corresponding_bincl_psymtab()\cell dbxread.c\cell\row
\cell init_bincl_list()\cell dbxread.c\cell\row
\cell make_cleanup_free_bincl_list()\cell dbxread.c\cell\row
\cell open_bfd_from_oso()\cell dbxread.c\cell\row
\cell set_namestring_1()\cell dbxread.c\cell\row
\cell stabs_seek()\cell dbxread.c\cell\row
\cell stabsect_read_strtab_from_oso()\cell dbxread.c\cell\row
\cell warning()\cell utils.c\cell\row
\cell  __builtin___memcpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_memcpy_chk(), _obstack_newchunk(), bfd_check_format(), macosx_internalize_symbol(), strcmp(), strrchr()\cell\cell\row
Called by:\cell dbx_psymtab_to_symtab_1()\cell dbxread.c\cell\row
Refs Var:\cell processing_objfile\cell dbxread.c\cell\row
\cell stabs_data\cell dbxread.c\cell\row
\cell symbol_size\cell dbxread.c\cell\row
\cell symbuf\cell dbxread.c\cell\row
\cell symbuf_end\cell dbxread.c\cell\row
\cell symbuf_idx\cell dbxread.c\cell\row
\cell symbuf_left\cell dbxread.c\cell\row
\cell symbuf_read\cell dbxread.c\cell\row
\cell symnum\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function parse_archive_name()\par}
{\s5\f1\fs20\ql\sb50\sa50 int parse_archive_name ( const char* oso_name, char** archive_name, char** module_name )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell stabsread.h\cell\cell\row
Calls: \cell xmalloc()\cell utils.c\cell\row
\cell  __builtin___memcpy_chk(), __builtin_object_size(), __inline_memcpy_chk(), strlen(), strrchr()\cell\cell\row
Called by:\cell open_bfd_from_oso()\cell dbxread.c\cell\row
\cell read_dbx_symtab()\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function process_one_symbol()\par}
{\s5\f1\fs20\ql\sb50\sa50 void process_one_symbol ( int type, int desc, CORE_ADDR valu, const char* name, const char* prefix, struct section_offsets* section_offsets, struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell stabsread.h\cell\cell\row
Calls: \cell add_new_header_file()\cell dbxread.c\cell\row
\cell add_old_header_file()\cell dbxread.c\cell\row
\cell common_block_end()\cell stabsread.c\cell\row
\cell common_block_start()\cell stabsread.c\cell\row
\cell complaint()\cell complaints.c\cell\row
\cell define_symbol()\cell stabsread.c\cell\row
\cell end_stabs()\cell stabsread.c\cell\row
\cell end_symtab()\cell buildsym.c\cell\row
\cell executable_objfile()\cell objfiles.c\cell\row
\cell find_name_end()\cell stabsread.c\cell\row
\cell find_stab_function_addr()\cell dbxread.c\cell\row
\cell finish_block()\cell buildsym.c\cell\row
\cell gdbarch_smash_text_address()\cell gdbarch.c\cell\row
\cell hex_string()\cell utils.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell lbrac_mismatch_complaint()\cell dbxread.c\cell\row
\cell patch_subfile_names()\cell buildsym.c\cell\row
\cell pop_context()\cell buildsym.c\cell\row
\cell pop_subfile()\cell buildsym.c\cell\row
\cell push_context()\cell buildsym.c\cell\row
\cell push_subfile()\cell buildsym.c\cell\row
\cell read_so_stab_language_hint()\cell dbxread.c\cell\row
\cell record_debugformat()\cell buildsym.c\cell\row
\cell record_line()\cell buildsym.c\cell\row
\cell ref_add()\cell stabsread.c\cell\row
\cell ref_search()\cell stabsread.c\cell\row
\cell set_demangling_style()\cell demangle.c\cell\row
\cell set_main_name()\cell symtab.c\cell\row
\cell start_stabs()\cell stabsread.c\cell\row
\cell start_subfile()\cell buildsym.c\cell\row
\cell start_symtab()\cell buildsym.c\cell\row
\cell symbol_reference_defined()\cell stabsread.c\cell\row
\cell unknown_symtype_complaint()\cell dbxread.c\cell\row
\cell  strcmp()\cell\cell\row
Called by:\cell psymtab_to_symtab_1()\cell mdebugread.c\cell\row
\cell read_ofile_symtab()\cell dbxread.c\cell\row
\cell read_ofile_symtab_from_oso()\cell dbxread.c\cell\row
Refs Var:\cell block_address_function_relative\cell dbxread.c\cell\row
\cell context_stack_depth\cell buildsym.c\cell\row
\cell current_gdbarch\cell gdbarch.c\cell\row
\cell current_subfile\cell buildsym.c\cell\row
\cell end_fun_absolute_p\cell dbxread.c\cell\row
\cell last_source_file\cell buildsym.c\cell\row
\cell local_symbols\cell buildsym.c\cell\row
\cell previous_stab_code\cell stabsread.c\cell\row
\cell processing_gcc_compilation\cell buildsym.c\cell\row
\cell symfile_complaints\cell complaints.c\cell\row
\cell symfile_relocatable\cell dbxread.c\cell\row
\cell symnum\cell buildsym.c\cell\row
\cell within_function\cell buildsym.c\cell\row
\cell  current_demangling_style\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function read_oso_nlists()\par}
{\s5\f1\fs20\ql\sb50\sa50 void read_oso_nlists ( bfd* oso_bfd, struct partial_symtab* pst, struct nlist_rec** nlists, int* nlists_count, char*** common_symnames, int* common_symnames_count )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell symfile.h\cell\cell\row
Calls: \cell do_cleanups()\cell utils.c\cell\row
\cell fill_symbuf()\cell dbxread.c\cell\row
\cell set_namestring_1()\cell dbxread.c\cell\row
\cell stabs_seek()\cell dbxread.c\cell\row
\cell stabsect_read_strtab_from_oso()\cell dbxread.c\cell\row
\cell warning()\cell utils.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell xrealloc()\cell utils.c\cell\row
\cell  cplus_demangle_v3(), isalnum(), macosx_internalize_symbol(), macosx_record_symbols_from_sect_p(), strchr(), strstr(), xstrdup()\cell\cell\row
Called by:\cell dwarf2_debug_map_psymtab_to_symtab()\cell dwarf2read.c\cell\row
\cell dwarf2_kext_psymtab_to_symtab()\cell dwarf2read.c\cell\row
Refs Var:\cell processing_objfile\cell dbxread.c\cell\row
\cell stabs_data\cell dbxread.c\cell\row
\cell symbol_size\cell dbxread.c\cell\row
\cell symbuf\cell dbxread.c\cell\row
\cell symbuf_end\cell dbxread.c\cell\row
\cell symbuf_idx\cell dbxread.c\cell\row
\cell symbuf_left\cell dbxread.c\cell\row
\cell symbuf_read\cell dbxread.c\cell\row
\cell symnum\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function stabsect_build_psymtabs()\par}
{\s5\f1\fs20\ql\sb50\sa50 void stabsect_build_psymtabs ( struct objfile* objfile, int mainline, const char* stab_name, const char* stabstr_name, const char* text_name )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell stabsread.h\cell\cell\row
Calls: \cell buildsym_new_init()\cell buildsym.c\cell\row
\cell do_cleanups()\cell utils.c\cell\row
\cell error()\cell utils.c\cell\row
\cell free_header_files()\cell dbxread.c\cell\row
\cell init_header_files()\cell dbxread.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell mem_disable_caching()\cell memattr.c\cell\row
\cell perror_with_name()\cell utils.c\cell\row
\cell stabsread_new_init()\cell stabsread.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk(), _obstack_newchunk(), bfd_get_section_by_name(), bfd_get_section_contents(), bfd_get_size()\cell\cell\row
Called by:\cell nlm_symfile_read()\cell nlmread.c\cell\row
Refs Func:\cell mem_enable_caching()\cell memattr.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function add_bincl_to_list()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void add_bincl_to_list ( struct partial_symtab* pst, const char* name, int instance )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell dbxread.c\cell\cell\row
Calls: \cell msymbol_hash()\cell minsyms.c\cell\row
\cell xrealloc()\cell utils.c\cell\row
Called by:\cell oso_scan_partial_symtab()\cell dbxread.c\cell\row
\cell read_dbx_symtab()\cell dbxread.c\cell\row
Refs Var:\cell bincl_list\cell dbxread.c\cell\row
\cell bincls_allocated\cell dbxread.c\cell\row
\cell next_bincl\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function add_new_header_file()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void add_new_header_file ( const char* name, int instance )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell dbxread.c\cell\cell\row
Calls: \cell add_this_object_header_file()\cell dbxread.c\cell\row
\cell savestring()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell xrealloc()\cell utils.c\cell\row
\cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk(), strlen()\cell\cell\row
Called by:\cell process_one_symbol()\cell dbxread.c\cell\row
Refs Var:\cell current_objfile\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function add_old_header_file()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void add_old_header_file ( const char* name, int instance )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell dbxread.c\cell\cell\row
Calls: \cell add_this_object_header_file()\cell dbxread.c\cell\row
\cell repeated_header_complaint()\cell dbxread.c\cell\row
\cell  strcmp()\cell\cell\row
Called by:\cell process_one_symbol()\cell dbxread.c\cell\row
Refs Var:\cell current_objfile\cell objfiles.c\cell\row
\cell symnum\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function add_this_object_header_file()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void add_this_object_header_file ( int i )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell dbxread.c\cell\cell\row
Calls: \cell xrealloc()\cell utils.c\cell\row
Called by:\cell add_new_header_file()\cell dbxread.c\cell\row
\cell add_old_header_file()\cell dbxread.c\cell\row
Refs Var:\cell n_allocated_this_object_header_files\cell stabsread.c\cell\row
\cell n_this_object_header_files\cell stabsread.c\cell\row
\cell this_object_header_files\cell stabsread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function add_to_containing_archive_cache()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void add_to_containing_archive_cache ( bfd* containing_archive )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell xrealloc()\cell utils.c\cell\row
Called by:\cell open_bfd_from_oso()\cell dbxread.c\cell\row
Refs Var:\cell max_num_archives_for_pubtypes\cell dbxread.c\cell\row
\cell num_archives_for_pubtypes\cell dbxread.c\cell\row
\cell pubtype_bfd_array\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function cleanup_oso_data()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void cleanup_oso_data ( void* data )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell xfree()\cell utils.c\cell\row
\cell  bfd_free_window()\cell\cell\row
Used in:\cell stabsect_read_strtab_from_oso()\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function close_containing_archive_and_contents()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void close_containing_archive_and_contents ( bfd* containing_archive )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell  bfd_close()\cell\cell\row
Called by:\cell clear_containing_archive_cache()\cell dbxread.c\cell\row
\cell close_bfd_or_archive()\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function dbx_new_init()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void dbx_new_init ( struct objfile* ignore )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell dbxread.c\cell\cell\row
Calls: \cell buildsym_new_init()\cell buildsym.c\cell\row
\cell init_header_files()\cell dbxread.c\cell\row
\cell stabsread_new_init()\cell stabsread.c\cell\row
Used in:\cell dbxread.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function dbx_next_symbol_text()\par}
{\s5\f1\fs20\ql\sb50\sa50 static const char* dbx_next_symbol_text ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell dbxread.c\cell\cell\row
Calls: \cell complaint()\cell complaints.c\cell\row
\cell fill_symbuf()\cell dbxread.c\cell\row
\cell  __builtin___memcpy_chk(), __builtin_object_size(), __inline_memcpy_chk(), macosx_internalize_symbol()\cell\cell\row
Used in:\cell dbx_psymtab_to_symtab()\cell dbxread.c\cell\row
\cell read_dbx_symtab()\cell dbxread.c\cell\row
Refs Var:\cell file_string_table_offset\cell dbxread.c\cell\row
\cell processing_objfile\cell dbxread.c\cell\row
\cell stabs_data\cell dbxread.c\cell\row
\cell stringtab_global\cell dbxread.c\cell\row
\cell symbol_size\cell dbxread.c\cell\row
\cell symbuf\cell dbxread.c\cell\row
\cell symbuf_end\cell dbxread.c\cell\row
\cell symbuf_idx\cell dbxread.c\cell\row
\cell symfile_complaints\cell complaints.c\cell\row
\cell symnum\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function dbx_psymtab_to_symtab()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void dbx_psymtab_to_symtab ( struct partial_symtab* pst )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell dbxread.c\cell\cell\row
Calls: \cell dbx_psymtab_to_symtab_1()\cell dbxread.c\cell\row
\cell do_cleanups()\cell utils.c\cell\row
\cell fprintf_unfiltered()\cell utils.c\cell\row
\cell gdb_flush()\cell ui-file.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell scan_file_globals()\cell stabsread.c\cell\row
\cell symfile_relocate_debug_section()\cell symfile.c\cell\row
Used in:\cell start_psymtab()\cell dbxread.c\cell\row
Refs Func:\cell dbx_next_symbol_text()\cell dbxread.c\cell\row
\cell free_current_contents()\cell utils.c\cell\row
Refs Var:\cell gdb_stderr\cell main.c\cell\row
\cell gdb_stdout\cell main.c\cell\row
\cell info_verbose\cell top.c\cell\row
\cell next_symbol_text_func\cell buildsym.c\cell\row
\cell stabs_data\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function dbx_psymtab_to_symtab_1()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void dbx_psymtab_to_symtab_1 ( struct partial_symtab* pst )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell dbxread.c\cell\cell\row
Calls: \cell buildsym_init()\cell buildsym.c\cell\row
\cell clear_containing_archive_cache()\cell dbxread.c\cell\row
\cell dbx_psymtab_to_symtab_1()\cell dbxread.c\cell\row
\cell do_cleanups()\cell utils.c\cell\row
\cell fprintf_unfiltered()\cell utils.c\cell\row
\cell fputs_filtered()\cell utils.c\cell\row
\cell gdb_flush()\cell ui-file.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell open_bfd_from_oso()\cell dbxread.c\cell\row
\cell oso_scan_partial_symtab()\cell dbxread.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell read_ofile_symtab()\cell dbxread.c\cell\row
\cell read_ofile_symtab_from_oso()\cell dbxread.c\cell\row
\cell stabsread_init()\cell stabsread.c\cell\row
\cell warning()\cell utils.c\cell\row
\cell wrap_here()\cell utils.c\cell\row
\cell  bfd_check_format(), bfd_close(), bfd_seek()\cell\cell\row
Called by:\cell dbx_psymtab_to_symtab()\cell dbxread.c\cell\row
\cell dbx_psymtab_to_symtab_1()\cell dbxread.c\cell\row
Refs Func:\cell really_free_pendings()\cell buildsym.c\cell\row
Refs Var:\cell file_string_table_offset\cell dbxread.c\cell\row
\cell gdb_stderr\cell main.c\cell\row
\cell gdb_stdout\cell main.c\cell\row
\cell info_verbose\cell top.c\cell\row
\cell symbol_size\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function dbx_symfile_finish()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void dbx_symfile_finish ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell dbxread.c\cell\cell\row
Calls: \cell free_header_files()\cell dbxread.c\cell\row
\cell xfree()\cell utils.c\cell\row
Used in:\cell dbxread.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function dbx_symfile_init()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void dbx_symfile_init ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell dbxread.c\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
\cell perror_with_name()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk(), _obstack_newchunk(), bfd_bread(), bfd_get_section_by_name(), bfd_get_size(), bfd_seek()\cell\cell\row
Used in:\cell dbxread.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function do_free_bincl_list_cleanup()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void do_free_bincl_list_cleanup ( void* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell free_bincl_list()\cell dbxread.c\cell\row
Used in:\cell make_cleanup_free_bincl_list()\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function fill_symbuf()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void fill_symbuf ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell dbxread.c\cell\cell\row
Calls: \cell do_cleanups()\cell utils.c\cell\row
\cell error()\cell utils.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell mem_disable_caching()\cell memattr.c\cell\row
\cell perror_with_name()\cell utils.c\cell\row
\cell warning()\cell utils.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  bfd_bread(), bfd_seek()\cell\cell\row
Called by:\cell dbx_next_symbol_text()\cell dbxread.c\cell\row
\cell oso_scan_partial_symtab()\cell dbxread.c\cell\row
\cell read_dbx_symtab()\cell dbxread.c\cell\row
\cell read_ofile_symtab()\cell dbxread.c\cell\row
\cell read_ofile_symtab_from_oso()\cell dbxread.c\cell\row
\cell read_oso_nlists()\cell dbxread.c\cell\row
Refs Func:\cell mem_enable_caching()\cell memattr.c\cell\row
Refs Var:\cell stabs_data\cell dbxread.c\cell\row
\cell symbol_size\cell dbxread.c\cell\row
\cell symbol_table_offset\cell dbxread.c\cell\row
\cell symbuf\cell dbxread.c\cell\row
\cell symbuf_end\cell dbxread.c\cell\row
\cell symbuf_idx\cell dbxread.c\cell\row
\cell symbuf_left\cell dbxread.c\cell\row
\cell symbuf_read\cell dbxread.c\cell\row
\cell symbuf_sections\cell dbxread.c\cell\row
\cell symbuf_size\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function find_corresponding_bincl_psymtab()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct partial_symtab* find_corresponding_bincl_psymtab ( const char* name, int instance )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell dbxread.c\cell\cell\row
Calls: \cell msymbol_hash()\cell minsyms.c\cell\row
\cell repeated_header_complaint()\cell dbxread.c\cell\row
\cell  strcmp()\cell\cell\row
Called by:\cell oso_scan_partial_symtab()\cell dbxread.c\cell\row
\cell read_dbx_symtab()\cell dbxread.c\cell\row
Refs Var:\cell bincl_list\cell dbxread.c\cell\row
\cell next_bincl\cell dbxread.c\cell\row
\cell symnum\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function find_in_containing_archive_cache()\par}
{\s5\f1\fs20\ql\sb50\sa50 static bfd* find_in_containing_archive_cache ( char* archive_name )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell  strcmp()\cell\cell\row
Called by:\cell open_bfd_from_oso()\cell dbxread.c\cell\row
Refs Var:\cell num_archives_for_pubtypes\cell dbxread.c\cell\row
\cell pubtype_bfd_array\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function find_stab_function_addr()\par}
{\s5\f1\fs20\ql\sb50\sa50 static CORE_ADDR find_stab_function_addr ( const char* namestring, const char* filename, struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell internal_error()\cell utils.c\cell\row
\cell lookup_minimal_symbol()\cell minsyms.c\cell\row
\cell  __builtin___strncpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_strncpy_chk(), strchr()\cell\cell\row
Called by:\cell process_one_symbol()\cell dbxread.c\cell\row
\cell read_dbx_symtab()\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function find_text_range()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void find_text_range ( bfd* sym_bfd, struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell error()\cell utils.c\cell\row
\cell internal_error()\cell utils.c\cell\row
Called by:\cell elfstab_build_psymtabs()\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function free_bincl_list()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void free_bincl_list ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell dbxread.c\cell\cell\row
Calls: \cell xfree()\cell utils.c\cell\row
Called by:\cell do_free_bincl_list_cleanup()\cell dbxread.c\cell\row
Refs Var:\cell bincl_list\cell dbxread.c\cell\row
\cell bincls_allocated\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function function_outside_compilation_unit_complaint()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void function_outside_compilation_unit_complaint ( const char* arg1 )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell complaint()\cell complaints.c\cell\row
Called by:\cell read_dbx_symtab()\cell dbxread.c\cell\row
Refs Var:\cell symfile_complaints\cell complaints.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function init_bincl_list()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void init_bincl_list ( int number, struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell dbxread.c\cell\cell\row
Calls: \cell xmalloc()\cell utils.c\cell\row
Called by:\cell oso_scan_partial_symtab()\cell dbxread.c\cell\row
\cell read_dbx_symtab()\cell dbxread.c\cell\row
Refs Var:\cell bincl_list\cell dbxread.c\cell\row
\cell bincls_allocated\cell dbxread.c\cell\row
\cell next_bincl\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function lbrac_mismatch_complaint()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void lbrac_mismatch_complaint ( int arg1 )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell complaint()\cell complaints.c\cell\row
Called by:\cell process_one_symbol()\cell dbxread.c\cell\row
Refs Var:\cell symfile_complaints\cell complaints.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function lookup_psymbol_from_namestring()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct partial_symbol* lookup_psymbol_from_namestring ( struct partial_symtab* pst, const char* namestring, enum domain_enum_tag domain )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell complaint()\cell complaints.c\cell\row
\cell find_name_end()\cell stabsread.c\cell\row
\cell lookup_partial_symbol()\cell symtab.c\cell\row
\cell warning()\cell utils.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell  __builtin___strncpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_strncpy_chk(), cplus_demangle()\cell\cell\row
Called by:\cell read_ofile_symtab_from_oso()\cell dbxread.c\cell\row
Refs Var:\cell symfile_complaints\cell complaints.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function make_cleanup_free_bincl_list()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct cleanup* make_cleanup_free_bincl_list ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell make_cleanup()\cell utils.c\cell\row
Called by:\cell oso_scan_partial_symtab()\cell dbxread.c\cell\row
\cell read_dbx_symtab()\cell dbxread.c\cell\row
Refs Func:\cell do_free_bincl_list_cleanup()\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function objfile_contains_objc()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int objfile_contains_objc ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell dbxread.c\cell\cell\row
Calls: \cell  bfd_get_section_by_name()\cell\cell\row
Called by:\cell dbx_symfile_read()\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function oso_statics_pop()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct oso_fun_list* oso_statics_pop ( struct oso_fun_list* list_ptr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell xfree()\cell utils.c\cell\row
Called by:\cell read_ofile_symtab_from_oso()\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function read_dbx_dynamic_symtab()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void read_dbx_dynamic_symtab ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell dbxread.c\cell\cell\row
Calls: \cell do_cleanups()\cell utils.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell objfile_bss_section_offset()\cell objfiles.c\cell\row
\cell objfile_data_section_offset()\cell objfiles.c\cell\row
\cell objfile_text_section_offset()\cell objfiles.c\cell\row
\cell prim_record_minimal_symbol()\cell minsyms.c\cell\row
\cell record_minimal_symbol()\cell dbxread.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  bfd_get_arch()\cell\cell\row
Called by:\cell dbx_symfile_read()\cell dbxread.c\cell\row
Refs Func:\cell xfree()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function read_dbx_symtab()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void read_dbx_symtab ( struct objfile* objfile, int dbx_symcount )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell dbxread.c\cell\cell\row
Calls: \cell add_bincl_to_list()\cell dbxread.c\cell\row
\cell add_oso_pst_to_list()\cell dbxread.c\cell\row
\cell add_psymbol_to_list()\cell symfile.c\cell\row
\cell clear_containing_archive_cache()\cell dbxread.c\cell\row
\cell complaint()\cell complaints.c\cell\row
\cell deduce_language_from_filename()\cell symfile.c\cell\row
\cell do_cleanups()\cell utils.c\cell\row
\cell dwarf2_scan_inlined_section_for_psymbols()\cell dwarf2read.c\cell\row
\cell dwarf2_scan_pubtype_for_psymbols()\cell dwarf2read.c\cell\row
\cell end_oso_pst_list()\cell dbxread.c\cell\row
\cell end_psymtab()\cell dbxread.c\cell\row
\cell error()\cell utils.c\cell\row
\cell executable_objfile()\cell objfiles.c\cell\row
\cell fill_symbuf()\cell dbxread.c\cell\row
\cell find_corresponding_bincl_psymtab()\cell dbxread.c\cell\row
\cell find_name_end()\cell stabsread.c\cell\row
\cell find_stab_function_addr()\cell dbxread.c\cell\row
\cell function_outside_compilation_unit_complaint()\cell dbxread.c\cell\row
\cell hex_string()\cell utils.c\cell\row
\cell init_bincl_list()\cell dbxread.c\cell\row
\cell init_oso_pst_list()\cell dbxread.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell make_cleanup_free_bincl_list()\cell dbxread.c\cell\row
\cell objfile_bss_section_offset()\cell objfiles.c\cell\row
\cell objfile_data_section_offset()\cell objfiles.c\cell\row
\cell objfile_section_offset()\cell objfiles.c\cell\row
\cell objfile_text_section_offset()\cell objfiles.c\cell\row
\cell obsavestring()\cell symfile.c\cell\row
\cell parse_archive_name()\cell dbxread.c\cell\row
\cell quit()\cell utils.c\cell\row
\cell read_so_stab_language_hint()\cell dbxread.c\cell\row
\cell record_minimal_symbol()\cell dbxread.c\cell\row
\cell set_namestring()\cell dbxread.c\cell\row
\cell start_psymtab()\cell dbxread.c\cell\row
\cell unknown_symtype_complaint()\cell dbxread.c\cell\row
\cell warning()\cell utils.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  __builtin___memcpy_chk(), __builtin___strncpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_memcpy_chk(), __inline_strncpy_chk(), cplus_demangle_v3(), macosx_internalize_symbol(), macosx_record_symbols_from_sect_p(), stat(), strchr(), strcmp(), strlen(), strncmp(), strrchr(), strstr(), xstrdup()\cell\cell\row
Called by:\cell dbx_symfile_read()\cell dbxread.c\cell\row
Refs Func:\cell dbx_next_symbol_text()\cell dbxread.c\cell\row
\cell dwarf2_debug_map_psymtab_to_symtab()\cell dwarf2read.c\cell\row
\cell xfree()\cell utils.c\cell\row
Refs Var:\cell current_target\cell target/target.c\cell\row
\cell end_fun_absolute_p\cell dbxread.c\cell\row
\cell file_string_table_offset\cell dbxread.c\cell\row
\cell has_line_numbers\cell dbxread.c\cell\row
\cell last_function_name\cell dbxread.c\cell\row
\cell last_source_file\cell buildsym.c\cell\row
\cell lowest_text_address\cell dbxread.c\cell\row
\cell next_file_string_table_offset\cell dbxread.c\cell\row
\cell next_symbol_text_func\cell buildsym.c\cell\row
\cell processing_acc_compilation\cell buildsym.c\cell\row
\cell processing_gcc_compilation\cell buildsym.c\cell\row
\cell processing_objfile\cell dbxread.c\cell\row
\cell psymtab_language\cell dbxread.c\cell\row
\cell quit_flag\cell utils.c\cell\row
\cell read_type_psym_p\cell dbxread.c\cell\row
\cell stabs_data\cell dbxread.c\cell\row
\cell stringtab_global\cell dbxread.c\cell\row
\cell symbol_size\cell dbxread.c\cell\row
\cell symbuf\cell dbxread.c\cell\row
\cell symbuf_end\cell dbxread.c\cell\row
\cell symbuf_idx\cell dbxread.c\cell\row
\cell symfile_complaints\cell complaints.c\cell\row
\cell symnum\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function read_ofile_symtab()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void read_ofile_symtab ( struct partial_symtab* pst )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell dbxread.c\cell\cell\row
Calls: \cell end_stabs()\cell stabsread.c\cell\row
\cell end_symtab()\cell buildsym.c\cell\row
\cell error()\cell utils.c\cell\row
\cell executable_objfile()\cell objfiles.c\cell\row
\cell fill_symbuf()\cell dbxread.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell process_one_symbol()\cell dbxread.c\cell\row
\cell quit()\cell utils.c\cell\row
\cell set_demangling_style()\cell demangle.c\cell\row
\cell set_namestring()\cell dbxread.c\cell\row
\cell stabs_seek()\cell dbxread.c\cell\row
\cell  macosx_internalize_symbol(), strcmp(), strncmp()\cell\cell\row
Called by:\cell dbx_psymtab_to_symtab_1()\cell dbxread.c\cell\row
Refs Var:\cell current_objfile\cell objfiles.c\cell\row
\cell last_source_file\cell buildsym.c\cell\row
\cell last_source_start_addr\cell buildsym.c\cell\row
\cell processing_acc_compilation\cell buildsym.c\cell\row
\cell processing_gcc_compilation\cell buildsym.c\cell\row
\cell processing_objfile\cell dbxread.c\cell\row
\cell quit_flag\cell utils.c\cell\row
\cell stabs_data\cell dbxread.c\cell\row
\cell stringtab_global\cell dbxread.c\cell\row
\cell subfile_stack\cell buildsym.c\cell\row
\cell symbol_size\cell dbxread.c\cell\row
\cell symbuf\cell dbxread.c\cell\row
\cell symbuf_end\cell dbxread.c\cell\row
\cell symbuf_idx\cell dbxread.c\cell\row
\cell symbuf_left\cell dbxread.c\cell\row
\cell symbuf_read\cell dbxread.c\cell\row
\cell symnum\cell buildsym.c\cell\row
\cell  current_demangling_style\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function read_ofile_symtab_from_oso()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void read_ofile_symtab_from_oso ( struct partial_symtab* pst, struct bfd* oso_bfd )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell dbxread.c\cell\cell\row
Calls: \cell complaint()\cell complaints.c\cell\row
\cell do_cleanups()\cell utils.c\cell\row
\cell end_stabs()\cell stabsread.c\cell\row
\cell end_symtab()\cell buildsym.c\cell\row
\cell error()\cell utils.c\cell\row
\cell executable_objfile()\cell objfiles.c\cell\row
\cell fill_symbuf()\cell dbxread.c\cell\row
\cell find_name_end()\cell stabsread.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell lookup_psymbol_from_namestring()\cell dbxread.c\cell\row
\cell objfile_data_section_offset()\cell objfiles.c\cell\row
\cell objfile_text_section_offset()\cell objfiles.c\cell\row
\cell oso_statics_pop()\cell dbxread.c\cell\row
\cell process_one_symbol()\cell dbxread.c\cell\row
\cell process_symbol_types_only()\cell stabsread.c\cell\row
\cell quit()\cell utils.c\cell\row
\cell set_namestring_1()\cell dbxread.c\cell\row
\cell stabs_seek()\cell dbxread.c\cell\row
\cell stabsect_read_strtab_from_oso()\cell dbxread.c\cell\row
\cell warning()\cell utils.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  __builtin___strncpy_chk(), __builtin_object_size(), __inline_strncpy_chk(), macosx_internalize_symbol(), strcmp(), strncmp()\cell\cell\row
Called by:\cell dbx_psymtab_to_symtab_1()\cell dbxread.c\cell\row
Refs Var:\cell current_objfile\cell objfiles.c\cell\row
\cell last_source_file\cell buildsym.c\cell\row
\cell last_source_start_addr\cell buildsym.c\cell\row
\cell previous_stab_code\cell stabsread.c\cell\row
\cell processing_gcc_compilation\cell buildsym.c\cell\row
\cell processing_objfile\cell dbxread.c\cell\row
\cell quit_flag\cell utils.c\cell\row
\cell stabs_data\cell dbxread.c\cell\row
\cell stringtab_global\cell dbxread.c\cell\row
\cell subfile_stack\cell buildsym.c\cell\row
\cell symbol_size\cell dbxread.c\cell\row
\cell symbuf\cell dbxread.c\cell\row
\cell symbuf_end\cell dbxread.c\cell\row
\cell symbuf_idx\cell dbxread.c\cell\row
\cell symbuf_left\cell dbxread.c\cell\row
\cell symbuf_read\cell dbxread.c\cell\row
\cell symfile_complaints\cell complaints.c\cell\row
\cell symnum\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function read_so_stab_language_hint()\par}
{\s5\f1\fs20\ql\sb50\sa50 static enum language read_so_stab_language_hint ( short unsigned n_desc )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell dbxread.c\cell\cell\row
Called by:\cell process_one_symbol()\cell dbxread.c\cell\row
\cell read_dbx_symtab()\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function record_minimal_symbol()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void record_minimal_symbol ( const char* name, CORE_ADDR address, int type, int16_t desc, struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell dbxread.c\cell\cell\row
Calls: \cell executable_objfile()\cell objfiles.c\cell\row
\cell gdbarch_dbx_make_msymbol_special()\cell gdbarch.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell is_vtable_name()\cell cp-abi.c\cell\row
\cell paddr()\cell utils.c\cell\row
\cell prim_record_minimal_symbol_and_info()\cell minsyms.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell  strcmp()\cell\cell\row
Called by:\cell read_dbx_dynamic_symtab()\cell dbxread.c\cell\row
\cell read_dbx_symtab()\cell dbxread.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\cell dbx_minsyms_recorded\cell dbxread.c\cell\row
\cell lowest_text_address\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function repeated_header_complaint()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void repeated_header_complaint ( const char* arg1, int arg2 )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell complaint()\cell complaints.c\cell\row
Called by:\cell add_old_header_file()\cell dbxread.c\cell\row
\cell find_corresponding_bincl_psymtab()\cell dbxread.c\cell\row
Refs Var:\cell symfile_complaints\cell complaints.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_namestring()\par}
{\s5\f1\fs20\ql\sb50\sa50 static const char* set_namestring ( struct objfile* objfile, struct internal_nlist nlist, const char* prefix )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell set_namestring_1()\cell dbxread.c\cell\row
Called by:\cell read_dbx_symtab()\cell dbxread.c\cell\row
\cell read_ofile_symtab()\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_namestring_1()\par}
{\s5\f1\fs20\ql\sb50\sa50 static const char* set_namestring_1 ( int strtab_size, char* strtab, char leading_char, struct internal_nlist nlist, const char* prefix )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell complaint()\cell complaints.c\cell\row
\cell xrealloc()\cell utils.c\cell\row
\cell  __builtin___snprintf_chk(), __builtin_object_size(), strlen()\cell\cell\row
Called by:\cell oso_scan_partial_symtab()\cell dbxread.c\cell\row
\cell read_ofile_symtab_from_oso()\cell dbxread.c\cell\row
\cell read_oso_nlists()\cell dbxread.c\cell\row
\cell set_namestring()\cell dbxread.c\cell\row
Refs Var:\cell file_string_table_offset\cell dbxread.c\cell\row
\cell symfile_complaints\cell complaints.c\cell\row
\cell symnum\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function stabs_seek()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void stabs_seek ( int sym_offset )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell  bfd_seek()\cell\cell\row
Called by:\cell oso_scan_partial_symtab()\cell dbxread.c\cell\row
\cell read_ofile_symtab()\cell dbxread.c\cell\row
\cell read_ofile_symtab_from_oso()\cell dbxread.c\cell\row
\cell read_oso_nlists()\cell dbxread.c\cell\row
Refs Var:\cell processing_objfile\cell dbxread.c\cell\row
\cell stabs_data\cell dbxread.c\cell\row
\cell symbol_size\cell dbxread.c\cell\row
\cell symbuf_idx\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function stabsect_read_strtab_from_oso()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct cleanup* stabsect_read_strtab_from_oso ( struct bfd* oso_bfd, int* symcount, int* symsize, int* strtab_size, bfd_byte** stab_data_handle, char** strtab_data_handle )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell dbxread.c\cell\cell\row
Calls: \cell complaint()\cell complaints.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell perror_with_name()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  bfd_get_section_by_name(), bfd_get_section_contents_in_window_with_mode(), bfd_init_window(), bfd_mach_o_version()\cell\cell\row
Called by:\cell oso_scan_partial_symtab()\cell dbxread.c\cell\row
\cell read_ofile_symtab_from_oso()\cell dbxread.c\cell\row
\cell read_oso_nlists()\cell dbxread.c\cell\row
Refs Func:\cell cleanup_oso_data()\cell dbxread.c\cell\row
\cell null_cleanup()\cell utils.c\cell\row
Refs Var:\cell symfile_complaints\cell complaints.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function start_psymtab()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct partial_symtab* start_psymtab ( struct objfile* objfile, const char* filename, CORE_ADDR textlow, int ldsymoff, struct partial_symbol** global_syms, struct partial_symbol** static_syms, const char* prefix )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell dbxread.c\cell\cell\row
Calls: \cell deduce_language_from_filename()\cell symfile.c\cell\row
\cell elfstab_offset_sections()\cell elfread.c\cell\row
\cell start_psymtab_common()\cell symfile.c\cell\row
\cell  _obstack_newchunk()\cell\cell\row
Called by:\cell read_dbx_symtab()\cell dbxread.c\cell\row
Refs Func:\cell dbx_psymtab_to_symtab()\cell dbxread.c\cell\row
Refs Var:\cell file_string_table_offset\cell dbxread.c\cell\row
\cell psymtab_language\cell dbxread.c\cell\row
\cell string_table_offset\cell dbxread.c\cell\row
\cell symbol_size\cell dbxread.c\cell\row
\cell symbol_table_offset\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function unknown_symtype_complaint()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void unknown_symtype_complaint ( const char* arg1 )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell complaint()\cell complaints.c\cell\row
Called by:\cell process_one_symbol()\cell dbxread.c\cell\row
\cell read_dbx_symtab()\cell dbxread.c\cell\row
Refs Var:\cell symfile_complaints\cell complaints.c\cell\row
\intbl0
}
