<!DOCTYPE LINUXDOC SYSTEM>

<!-- This SGML file generated by cxref (version 1.6e). -->
<!-- cxref program (c) Andrew M. Bishop 1995-2014. -->

<!--
Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF tramp-frame.c
CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
-->

<article>

<title>Cross reference for tramp-frame.c of gdb.cxref.
<author>cxref

<sect>File tramp-frame.c

<sect1>Included Files

<p>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<itemize>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
<item><tt>#include &lt;sys/time.h&gt;</tt>
<item><tt>#include &lt;time.h&gt;</tt>
<item><tt>#include &lt;sys/types.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
<item><tt>#include &lt;errno.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
<item><tt>#include &lt;regex.h&gt;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;unistd.h&gt;</tt>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;gdb_locale.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<item><tt>#include &lt;locale.h&gt;</tt>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../gdb/signals.h&quot;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &quot;../include/libiberty.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/symcat.h&quot;</tt>
</itemize>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
<item><tt>#include &quot;ui-file.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;xm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/xm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &lt;mach/mach.h&gt;</tt>
<item><tt>#include &lt;signal.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;nm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/i386/nm-i386.h&quot;</tt>
<item><tt>#include &quot;macosx/nm-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;tm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/tm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;macosx/i386-macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/i386-macosx-thread-status.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &lt;mach/mach_types.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
<item><tt>#include &lt;inttypes.h&gt;</tt>
<item><tt>#include &lt;mach/mach_vm.h&gt;</tt>
<item><tt>#include &lt;mach/kmod.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;macosx/tm-i386-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;../include/fopen-bin.h&quot;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdlib.h&gt;</tt>
<item><tt>#include &quot;gdbarch.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;tramp-frame.h&quot;</tt>
<itemize>
<item><tt>#include &quot;frame.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/floatformat.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;gdb_regex.h&quot;</tt>
<itemize>
<item><tt>#include &lt;regex.h&gt;</tt>
</itemize>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;gdbtypes.h&quot;</tt>
<item><tt>#include &quot;expression.h&quot;</tt>
<itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
</itemize>
</itemize>
</itemize>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;frame-unwind.h&quot;</tt>
<itemize>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;gdbcore.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;objfiles.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &lt;uuid/uuid.h&gt;</tt>
<item><tt>#include &quot;gdb_obstack.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/obstack.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;symfile.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;symtab.h&quot;</tt>
</itemize>
<item><tt>#include &quot;inlining.h&quot;</tt>
<itemize>
<item><tt>#include &lt;block.h&gt;</tt>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
</itemize>
<item><tt>#include &lt;sqlite3.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;target.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;dcache.h&quot;</tt>
<item><tt>#include &quot;memattr.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;trad-frame.h&quot;</tt>
<itemize>
<item><tt>#include &quot;frame.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;frame-base.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_assert.h&quot;</tt>
</itemize>

<sect1>Type struct frame_data

<p>
<itemize>
<item><tt>struct frame_data</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>const struct tramp_frame* tramp_frame;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Type struct tramp_frame_cache

<p>
<itemize>
<item><tt>struct tramp_frame_cache</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>CORE_ADDR func;</tt><newline>
<item><tt>const struct tramp_frame* tramp_frame;</tt><newline>
<item><tt>struct trad_frame_cache* trad_cache;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Global Function tramp_frame_prepend_unwinder()

<p><tt>void tramp_frame_prepend_unwinder ( struct gdbarch* gdbarch, const struct tramp_frame* tramp_frame )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>tramp-frame.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>frame_unwind_prepend_unwinder()  :  frame-unwind.c
<item>gdbarch_obstack_zalloc()  :  gdbarch.c
<item>internal_error()  :  utils.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>tramp_frame_prev_register()  :  tramp-frame.c
<item>tramp_frame_sniffer()  :  tramp-frame.c
<item>tramp_frame_this_id()  :  tramp-frame.c
</itemize>
</descrip>

<sect1>Local Function tramp_frame_cache()

<p><tt>static struct trad_frame_cache* tramp_frame_cache ( struct frame_info* next_frame, void** this_cache )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>trad_frame_cache_zalloc()  :  trad-frame.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>tramp_frame_prev_register()  :  tramp-frame.c
<item>tramp_frame_this_id()  :  tramp-frame.c
</itemize>
</descrip>

<sect1>Local Function tramp_frame_prev_register()

<p><tt>static void tramp_frame_prev_register ( struct frame_info* next_frame, void** this_cache, int prev_regnum, enum opt_state* optimizedp, enum lval_type* lvalp, CORE_ADDR* addrp, int* realnump, gdb_byte* valuep )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>trad_frame_get_register()  :  trad-frame.c
<item>tramp_frame_cache()  :  tramp-frame.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>tramp_frame_prepend_unwinder()  :  tramp-frame.c
</itemize>
</descrip>

<sect1>Local Function tramp_frame_sniffer()

<p><tt>static int tramp_frame_sniffer ( const struct frame_unwind* self, struct frame_info* next_frame, void** this_cache )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>frame_obstack_zalloc()  :  frame.c
<item>frame_pc_unwind()  :  frame.c
<item>tramp_frame_start()  :  tramp-frame.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>tramp_frame_prepend_unwinder()  :  tramp-frame.c
</itemize>
</descrip>

<sect1>Local Function tramp_frame_start()

<p><tt>static CORE_ADDR tramp_frame_start ( const struct tramp_frame* tramp, struct frame_info* next_frame, CORE_ADDR pc )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>extract_unsigned_integer()  :  findvar.c
<item>safe_frame_unwind_memory()  :  frame.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>tramp_frame_sniffer()  :  tramp-frame.c
</itemize>
</descrip>

<sect1>Local Function tramp_frame_this_id()

<p><tt>static void tramp_frame_this_id ( struct frame_info* next_frame, void** this_cache, struct frame_id* this_id )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>trad_frame_get_id()  :  trad-frame.c
<item>tramp_frame_cache()  :  tramp-frame.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>tramp_frame_prepend_unwinder()  :  tramp-frame.c
</itemize>
</descrip>

</article>
