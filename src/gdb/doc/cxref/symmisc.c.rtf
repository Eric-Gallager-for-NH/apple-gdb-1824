{\rtf\ansi
\deff0
{\fonttbl
{\f0\froman Times New Roman;}
{\f1\fmodern Courier New;}
}
{\stylesheet
{\s0\f0\fs24 Normal;}
{\s1\f0\fs40\b\sb400\sa200\keepn\keep Heading 1;}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Heading 2;}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Heading 3;}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Heading 4;}
{\s5\f1\fs20\ql\sb50\sa50 Code;}
}
{\info{\comment
 This RTF file generated by cxref (version 1.6e).
 cxref program (c) Andrew M. Bishop 1995-2014.
 Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF symmisc.c
 CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
}}
\paperw11880\paperh16848\margl1440\margr1440\margt1440\margb1440
\sectd\plain
\s0\f0\fs24
{\s1\f0\fs40\b\sb400\sa200\keepn\keep File symmisc.c\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Included Files\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <errno.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <unistd.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_locale.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <locale.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../gdb/signals.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/symcat.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-file.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "xm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/xm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "nm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/i386/nm-i386.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/nm-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "tm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/tm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-tdep.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-tdep.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-thread-status.h"\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_types.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <inttypes.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_vm.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/kmod.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/tm-i386-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/fopen-bin.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdlib.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbarch.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdbtypes.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "symfile.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "objfiles.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <uuid/uuid.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_obstack.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/obstack.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symfile.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "inlining.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <block.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/floatformat.h"\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_regex.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "gdbtypes.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "expression.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sqlite3.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "breakpoint.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb-events.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "command.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_obstack.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "exceptions.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-out.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <setjmp.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "language.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "bcache.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../include/demangle.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "block.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_regex.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_stat.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/stat.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "dictionary.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_assert.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_string.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../readline/readline.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../readline/rlstdc.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../readline/rltypedefs.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../readline/keymaps.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../readline/tilde.h>\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Preprocessor definitions\par}
{\s5\f1\fs20\ql\sb50\sa50 #define DEV_TTY "/dev/tty"\par}
{\s5\f1\fs20\ql\sb50\sa50 #define EQUIVALENCE_HASH_SIZE 127\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Type definitions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct print_symbol_args\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct print_symbol_args}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct symbol* symbol;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int depth;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct ui_file* outfile;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct equivalence_entry\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct equivalence_entry}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 char* name;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct minimal_symbol* msymbol;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct equivalence_entry* next;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Variables\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable std_in\par}
{\s5\f1\fs20\ql\sb50\sa50 FILE* std_in\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell symmisc.c\cell\cell\row
Used in:\cell _initialize_symmisc()\cell symmisc.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable std_out\par}
{\s5\f1\fs20\ql\sb50\sa50 FILE* std_out\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell symmisc.c\cell\cell\row
Used in:\cell _initialize_symmisc()\cell symmisc.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable std_err\par}
{\s5\f1\fs20\ql\sb50\sa50 FILE* std_err\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell symmisc.c\cell\cell\row
Used in:\cell _initialize_symmisc()\cell symmisc.c\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Functions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function _initialize_symmisc()\par}
{\s5\f1\fs20\ql\sb50\sa50 void _initialize_symmisc ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell symmisc.c\cell\cell\row
Refs Var:\cell std_err\cell symmisc.c\cell\row
\cell std_in\cell symmisc.c\cell\row
\cell std_out\cell symmisc.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function equivalence_table_add()\par}
{\s5\f1\fs20\ql\sb50\sa50 void equivalence_table_add ( struct objfile* ofile, const char* name, const char* name_end, struct minimal_symbol* msymbol )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell symtab.h\cell\cell\row
Calls: \cell internal_error()\cell utils.c\cell\row
\cell msymbol_hash()\cell minsyms.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  __builtin___memcpy_chk(), __builtin_object_size(), __inline_memcpy_chk()\cell\cell\row
Called by:\cell equivalence_table_build()\cell symmisc.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function equivalence_table_build()\par}
{\s5\f1\fs20\ql\sb50\sa50 void equivalence_table_build ( struct objfile* ofile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell symtab.h\cell\cell\row
Calls: \cell equivalence_table_add()\cell symmisc.c\cell\row
\cell equivalence_table_delete()\cell symmisc.c\cell\row
\cell equivalence_table_initialize()\cell symmisc.c\cell\row
\cell  isdigit(), isupper(), strchr()\cell\cell\row
Called by:\cell install_minimal_symbols()\cell minsyms.c\cell\row
\cell msymbols_sort()\cell minsyms.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function equivalence_table_delete()\par}
{\s5\f1\fs20\ql\sb50\sa50 void equivalence_table_delete ( struct objfile* ofile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell symtab.h\cell\cell\row
Calls: \cell xfree()\cell utils.c\cell\row
Called by:\cell equivalence_table_build()\cell symmisc.c\cell\row
\cell free_objfile_internal()\cell objfiles.c\cell\row
\cell msymbols_sort()\cell minsyms.c\cell\row
\cell reread_symbols_for_objfile()\cell symfile.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function extend_psymbol_list()\par}
{\s5\f1\fs20\ql\sb50\sa50 void extend_psymbol_list ( struct psymbol_allocation_list* listp, struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell symfile.h\cell\cell\row
Calls: \cell xmalloc()\cell utils.c\cell\row
\cell xrealloc()\cell utils.c\cell\row
Called by:\cell add_psymbol_to_list()\cell symfile.c\cell\row
\cell add_psymbol_with_dem_name_to_list()\cell symfile.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function find_equivalent_msymbol()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct minimal_symbol** find_equivalent_msymbol ( struct minimal_symbol* msymbol )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell symtab.h\cell\cell\row
Calls: \cell find_pc_sect_section()\cell objfiles.c\cell\row
\cell msymbol_hash()\cell minsyms.c\cell\row
\cell xcalloc()\cell utils.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell  strcmp()\cell\cell\row
Called by:\cell minsym_found()\cell linespec.c\cell\row
\cell minsyms_found()\cell linespec.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function free_symtab()\par}
{\s5\f1\fs20\ql\sb50\sa50 void free_symtab ( struct symtab* s )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell symtab.h\cell\cell\row
Calls: \cell free_symtab_block()\cell symmisc.c\cell\row
\cell xfree()\cell utils.c\cell\row
Called by:\cell java_rerun_cleanup()\cell jv-lang.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function maintenance_check_symtabs()\par}
{\s5\f1\fs20\ql\sb50\sa50 void maintenance_check_symtabs ( const char* ignore, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell symtab.h\cell\cell\row
Calls: \cell block_contains_pc()\cell block.c\cell\row
\cell deprecated_print_address_numeric()\cell printcmd.c\cell\row
\cell lookup_block_symbol()\cell symtab.c\cell\row
\cell objfile_get_first()\cell objfiles.c\cell\row
\cell objfile_get_next()\cell objfiles.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell psymtab_get_first()\cell objfiles.c\cell\row
\cell psymtab_get_next()\cell objfiles.c\cell\row
\cell psymtab_to_symtab()\cell symfile.c\cell\row
\cell puts_filtered()\cell utils.c\cell\row
Used in:\cell _initialize_maint_cmds()\cell maint.c\cell\row
Refs Var:\cell gdb_stdout\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function maintenance_info_psymtabs()\par}
{\s5\f1\fs20\ql\sb50\sa50 void maintenance_info_psymtabs ( const char* regexp, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell symtab.h\cell\cell\row
Calls: \cell deprecated_print_address_numeric()\cell printcmd.c\cell\row
\cell objfile_get_first()\cell objfiles.c\cell\row
\cell objfile_get_next()\cell objfiles.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell psymtab_get_first()\cell objfiles.c\cell\row
\cell psymtab_get_next()\cell objfiles.c\cell\row
\cell re_comp()\cell utils.c\cell\row
\cell re_exec()\cell utils.c\cell\row
\cell wrap_here()\cell utils.c\cell\row
Used in:\cell _initialize_maint_cmds()\cell maint.c\cell\row
Refs Var:\cell gdb_stdout\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function maintenance_info_symtabs()\par}
{\s5\f1\fs20\ql\sb50\sa50 void maintenance_info_symtabs ( const char* regexp, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell symtab.h\cell\cell\row
Calls: \cell objfile_get_first()\cell objfiles.c\cell\row
\cell objfile_get_next()\cell objfiles.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell re_comp()\cell utils.c\cell\row
\cell re_exec()\cell utils.c\cell\row
\cell symtab_get_first()\cell objfiles.c\cell\row
\cell symtab_get_next()\cell objfiles.c\cell\row
\cell wrap_here()\cell utils.c\cell\row
Used in:\cell _initialize_maint_cmds()\cell maint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function maintenance_print_msymbols()\par}
{\s5\f1\fs20\ql\sb50\sa50 void maintenance_print_msymbols ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell symtab.h\cell\cell\row
Calls: \cell do_cleanups()\cell utils.c\cell\row
\cell dont_repeat()\cell top.c\cell\row
\cell dump_msymbols()\cell symmisc.c\cell\row
\cell error()\cell utils.c\cell\row
\cell fprintf_filtered()\cell utils.c\cell\row
\cell gdb_fopen()\cell ui-file.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell make_cleanup_freeargv()\cell utils.c\cell\row
\cell make_cleanup_ui_file_delete()\cell utils.c\cell\row
\cell nomem()\cell utils.c\cell\row
\cell objfile_get_first()\cell objfiles.c\cell\row
\cell objfile_get_next()\cell objfiles.c\cell\row
\cell perror_with_name()\cell utils.c\cell\row
\cell xfullpath()\cell utils.c\cell\row
\cell  buildargv(), stat(), tilde_expand()\cell\cell\row
Used in:\cell _initialize_maint_cmds()\cell maint.c\cell\row
Refs Func:\cell xfree()\cell utils.c\cell\row
Refs Var:\cell immediate_quit\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function maintenance_print_objfiles()\par}
{\s5\f1\fs20\ql\sb50\sa50 void maintenance_print_objfiles ( const char* ignore, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell symtab.h\cell\cell\row
Calls: \cell dont_repeat()\cell top.c\cell\row
\cell dump_objfile()\cell symmisc.c\cell\row
\cell objfile_get_first()\cell objfiles.c\cell\row
\cell objfile_get_next()\cell objfiles.c\cell\row
Used in:\cell _initialize_maint_cmds()\cell maint.c\cell\row
Refs Var:\cell immediate_quit\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function maintenance_print_psymbols()\par}
{\s5\f1\fs20\ql\sb50\sa50 void maintenance_print_psymbols ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell symtab.h\cell\cell\row
Calls: \cell do_cleanups()\cell utils.c\cell\row
\cell dont_repeat()\cell top.c\cell\row
\cell dump_psymtab()\cell symmisc.c\cell\row
\cell error()\cell utils.c\cell\row
\cell gdb_fopen()\cell ui-file.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell make_cleanup_freeargv()\cell utils.c\cell\row
\cell make_cleanup_ui_file_delete()\cell utils.c\cell\row
\cell nomem()\cell utils.c\cell\row
\cell objfile_get_first()\cell objfiles.c\cell\row
\cell objfile_get_next()\cell objfiles.c\cell\row
\cell perror_with_name()\cell utils.c\cell\row
\cell psymtab_get_first()\cell objfiles.c\cell\row
\cell psymtab_get_next()\cell objfiles.c\cell\row
\cell  buildargv(), strcmp(), tilde_expand()\cell\cell\row
Used in:\cell _initialize_maint_cmds()\cell maint.c\cell\row
Refs Func:\cell xfree()\cell utils.c\cell\row
Refs Var:\cell immediate_quit\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function maintenance_print_symbols()\par}
{\s5\f1\fs20\ql\sb50\sa50 void maintenance_print_symbols ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell symtab.h\cell\cell\row
Calls: \cell do_cleanups()\cell utils.c\cell\row
\cell dont_repeat()\cell top.c\cell\row
\cell dump_symtab()\cell symmisc.c\cell\row
\cell error()\cell utils.c\cell\row
\cell gdb_fopen()\cell ui-file.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell make_cleanup_freeargv()\cell utils.c\cell\row
\cell make_cleanup_ui_file_delete()\cell utils.c\cell\row
\cell nomem()\cell utils.c\cell\row
\cell objfile_get_first()\cell objfiles.c\cell\row
\cell objfile_get_next()\cell objfiles.c\cell\row
\cell perror_with_name()\cell utils.c\cell\row
\cell symtab_get_first()\cell objfiles.c\cell\row
\cell symtab_get_next()\cell objfiles.c\cell\row
\cell  buildargv(), strcmp(), tilde_expand()\cell\cell\row
Used in:\cell _initialize_maint_cmds()\cell maint.c\cell\row
Refs Func:\cell xfree()\cell utils.c\cell\row
Refs Var:\cell immediate_quit\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function print_objfile_statistics()\par}
{\s5\f1\fs20\ql\sb50\sa50 void print_objfile_statistics ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell bcache_memory_used()\cell bcache.c\cell\row
\cell objfile_get_first()\cell objfiles.c\cell\row
\cell objfile_get_next()\cell objfiles.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell psymtab_get_first()\cell objfiles.c\cell\row
\cell psymtab_get_next()\cell objfiles.c\cell\row
\cell symtab_get_first()\cell objfiles.c\cell\row
\cell symtab_get_next()\cell objfiles.c\cell\row
\cell  _obstack_memory_used()\cell\cell\row
Called by:\cell maintenance_print_statistics()\cell maint.c\cell\row
Refs Var:\cell immediate_quit\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function print_symbol_bcache_statistics()\par}
{\s5\f1\fs20\ql\sb50\sa50 void print_symbol_bcache_statistics ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell objfile_get_first()\cell objfiles.c\cell\row
\cell objfile_get_next()\cell objfiles.c\cell\row
\cell print_bcache_statistics()\cell bcache.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
Called by:\cell maintenance_print_statistics()\cell maint.c\cell\row
Refs Var:\cell immediate_quit\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function block_depth()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int block_depth ( struct block* block )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell symmisc.c\cell\cell\row
Called by:\cell dump_symtab_1()\cell symmisc.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function dump_msymbols()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void dump_msymbols ( struct objfile* objfile, struct ui_file* outfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell symmisc.c\cell\cell\row
Calls: \cell deprecated_print_address_numeric()\cell printcmd.c\cell\row
\cell fprintf_filtered()\cell utils.c\cell\row
\cell fputs_filtered()\cell utils.c\cell\row
\cell symbol_demangled_name()\cell symtab.c\cell\row
\cell warning()\cell utils.c\cell\row
Called by:\cell maintenance_print_msymbols()\cell symmisc.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function dump_objfile()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void dump_objfile ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell symmisc.c\cell\cell\row
Calls: \cell gdb_print_host_address()\cell utils.c\cell\row
\cell paddr_nz()\cell utils.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell psymtab_get_first()\cell objfiles.c\cell\row
\cell psymtab_get_next()\cell objfiles.c\cell\row
\cell symtab_get_first()\cell objfiles.c\cell\row
\cell symtab_get_next()\cell objfiles.c\cell\row
Called by:\cell maintenance_print_objfiles()\cell symmisc.c\cell\row
Refs Var:\cell gdb_stdout\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function dump_psymtab()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void dump_psymtab ( struct objfile* objfile, struct partial_symtab* psymtab, struct ui_file* outfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell symmisc.c\cell\cell\row
Calls: \cell deprecated_print_address_numeric()\cell printcmd.c\cell\row
\cell fprintf_filtered()\cell utils.c\cell\row
\cell fprintf_unfiltered()\cell utils.c\cell\row
\cell gdb_print_host_address()\cell utils.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell print_partial_symbols()\cell symmisc.c\cell\row
\cell wrap_here()\cell utils.c\cell\row
Called by:\cell maintenance_print_psymbols()\cell symmisc.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function dump_symtab()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void dump_symtab ( struct objfile* objfile, struct symtab* symtab, struct ui_file* outfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell symmisc.c\cell\cell\row
Calls: \cell dump_symtab_1()\cell symmisc.c\cell\row
\cell set_language()\cell language.c\cell\row
Called by:\cell maintenance_print_symbols()\cell symmisc.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function dump_symtab_1()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void dump_symtab_1 ( struct objfile* objfile, struct symtab* symtab, struct ui_file* outfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell block_depth()\cell symmisc.c\cell\row
\cell deprecated_print_address_numeric()\cell printcmd.c\cell\row
\cell dict_iterator_first()\cell dictionary.c\cell\row
\cell dict_iterator_next()\cell dictionary.c\cell\row
\cell dict_size()\cell dictionary.c\cell\row
\cell fprintf_filtered()\cell utils.c\cell\row
\cell gdb_print_host_address()\cell utils.c\cell\row
\cell language_str()\cell language.c\cell\row
\cell print_spaces()\cell utils.c\cell\row
\cell symbol_demangled_name()\cell symtab.c\cell\row
\cell  catch_errors()\cell\cell\row
Called by:\cell dump_symtab()\cell symmisc.c\cell\row
Refs Func:\cell print_symbol()\cell symmisc.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function equivalence_table_initialize()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void equivalence_table_initialize ( struct objfile* ofile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell xcalloc()\cell utils.c\cell\row
Called by:\cell equivalence_table_build()\cell symmisc.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function free_symtab_block()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void free_symtab_block ( struct objfile* objfile, struct block* b )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell symmisc.c\cell\cell\row
Calls: \cell dict_free()\cell dictionary.c\cell\row
\cell dict_iterator_first()\cell dictionary.c\cell\row
\cell dict_iterator_next()\cell dictionary.c\cell\row
\cell xfree()\cell utils.c\cell\row
Called by:\cell free_symtab()\cell symmisc.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function print_partial_symbols()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void print_partial_symbols ( struct partial_symbol** p, int count, const char* what, struct ui_file* outfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell symmisc.c\cell\cell\row
Calls: \cell deprecated_print_address_numeric()\cell printcmd.c\cell\row
\cell fprintf_filtered()\cell utils.c\cell\row
\cell fputs_filtered()\cell utils.c\cell\row
\cell symbol_demangled_name()\cell symtab.c\cell\row
Called by:\cell dump_psymtab()\cell symmisc.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function print_symbol()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int print_symbol ( void* args )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell symmisc.c\cell\cell\row
Calls: \cell check_typedef()\cell gdbtypes.c\cell\row
\cell deprecated_print_address_numeric()\cell printcmd.c\cell\row
\cell fprintf_filtered()\cell utils.c\cell\row
\cell gdb_print_host_address()\cell utils.c\cell\row
\cell objc_fixup_class_length()\cell objc-lang.c\cell\row
\cell paddr_nz()\cell utils.c\cell\row
\cell print_spaces()\cell utils.c\cell\row
\cell symbol_natural_name()\cell symtab.c\cell\row
Used in:\cell dump_symtab_1()\cell symmisc.c\cell\row
Refs Var:\cell current_language\cell language.c\cell\row
\cell demangle\cell utils.c\cell\row
\intbl0
}
