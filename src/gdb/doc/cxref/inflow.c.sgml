<!DOCTYPE LINUXDOC SYSTEM>

<!-- This SGML file generated by cxref (version 1.6e). -->
<!-- cxref program (c) Andrew M. Bishop 1995-2014. -->

<!--
Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF inflow.c
CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
-->

<article>

<title>Cross reference for inflow.c of gdb.cxref.
<author>cxref

<sect>File inflow.c

<sect1>Included Files

<p>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<itemize>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
<item><tt>#include &lt;sys/time.h&gt;</tt>
<item><tt>#include &lt;time.h&gt;</tt>
<item><tt>#include &lt;sys/types.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
<item><tt>#include &lt;errno.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
<item><tt>#include &lt;regex.h&gt;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;unistd.h&gt;</tt>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;gdb_locale.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<item><tt>#include &lt;locale.h&gt;</tt>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../gdb/signals.h&quot;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &quot;../include/libiberty.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/symcat.h&quot;</tt>
</itemize>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
<item><tt>#include &quot;ui-file.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;xm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/xm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &lt;mach/mach.h&gt;</tt>
<item><tt>#include &lt;signal.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;nm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/i386/nm-i386.h&quot;</tt>
<item><tt>#include &quot;macosx/nm-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;tm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/tm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;macosx/i386-macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/i386-macosx-thread-status.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &lt;mach/mach_types.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
<item><tt>#include &lt;inttypes.h&gt;</tt>
<item><tt>#include &lt;mach/mach_vm.h&gt;</tt>
<item><tt>#include &lt;mach/kmod.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;macosx/tm-i386-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;../include/fopen-bin.h&quot;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdlib.h&gt;</tt>
<item><tt>#include &quot;gdbarch.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;frame.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/floatformat.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;gdb_regex.h&quot;</tt>
<itemize>
<item><tt>#include &lt;regex.h&gt;</tt>
</itemize>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;gdbtypes.h&quot;</tt>
<item><tt>#include &quot;expression.h&quot;</tt>
<itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
</itemize>
</itemize>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;inferior.h&quot;</tt>
<itemize>
<item><tt>#include &quot;breakpoint.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
<item><tt>#include &quot;gdb-events.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;target.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;dcache.h&quot;</tt>
<item><tt>#include &quot;memattr.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
</itemize>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;command.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;serial.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;terminal.h&quot;</tt>
<itemize>
<item><tt>#include &lt;fcntl.h&gt;</tt>
<item><tt>#include &lt;sgtty.h&gt;</tt>
<item><tt>#include &lt;sys/ioctl.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;target.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdbthread.h&quot;</tt>
<itemize>
<item><tt>#include &quot;breakpoint.h&quot;</tt>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &quot;inlining.h&quot;</tt>
<itemize>
<item><tt>#include &lt;block.h&gt;</tt>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
</itemize>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_string.h&quot;</tt>
<itemize>
<item><tt>#include &lt;string.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &lt;signal.h&gt;</tt>
</itemize>
<itemize>
<item><tt>#include &lt;fcntl.h&gt;</tt>
</itemize>
<itemize>
<item><tt>#include &lt;sys/select.h&gt;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;inflow.h&quot;</tt>
<itemize>
<item><tt>#include &quot;terminal.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &lt;sys/ioctl.h&gt;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;ui-out.h&quot;</tt>
</itemize>

<sect1>Preprocessor definitions

<p>
<tt>#define OOPSY( what )</tt><newline>

<sect1>Type enum terminal_flag_possibilities

<p>
<itemize>
<item><tt>enum terminal_flag_possibilities</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>yes;</tt><newline>
<item><tt>no;</tt><newline>
<item><tt>have_not_checked;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Global Variable our_process_group

<p>
<tt>int our_process_group</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>inflow.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>gdb_has_a_terminal()  :  inflow.c
<item>terminal_ours_1()  :  inflow.c
</itemize>
</descrip>

<sect1>Global Variable inferior_process_group

<p>
<tt>int inferior_process_group</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>inflow.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>child_terminal_info()  :  inflow.c
<item>terminal_inferior()  :  inflow.c
<item>terminal_init_inferior_with_pgrp()  :  inflow.c
<item>terminal_ours_1()  :  inflow.c
</itemize>
</descrip>

<sect1>Global Variable terminal_is_ours

<p>
<tt>int terminal_is_ours</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>inflow.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_inflow()  :  inflow.c
<item>terminal_inferior()  :  inflow.c
<item>terminal_init_inferior_with_pgrp()  :  inflow.c
<item>terminal_ours_1()  :  inflow.c
</itemize>
</descrip>

<sect1>Global Variable gdb_has_a_terminal_flag

<p>
<tt>enum terminal_flag_possibilities gdb_has_a_terminal_flag</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>inflow.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>gdb_has_a_terminal()  :  inflow.c
</itemize>
</descrip>

<sect1>Local Variables

<p>
<bf>stdin_serial</bf><newline>
<tt>static struct serial* stdin_serial</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>child_terminal_info()
<item>gdb_has_a_terminal()
<item>terminal_inferior()
<item>terminal_init_inferior_with_pgrp()
<item>terminal_ours_1()
<item>terminal_save_ours()
</itemize>
</descrip>
<p>
<bf>inferior_ttystate</bf><newline>
<tt>static serial_ttystate inferior_ttystate</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>child_terminal_info()
<item>terminal_inferior()
<item>terminal_init_inferior_with_pgrp()
<item>terminal_ours_1()
</itemize>
</descrip>
<p>
<bf>our_ttystate</bf><newline>
<tt>static serial_ttystate our_ttystate</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>gdb_has_a_terminal()
<item>terminal_ours_1()
<item>terminal_save_ours()
</itemize>
</descrip>
<p>
<bf>tflags_inferior</bf><newline>
<tt>static int tflags_inferior</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>child_terminal_info()
<item>terminal_inferior()
<item>terminal_ours_1()
</itemize>
</descrip>
<p>
<bf>tflags_ours</bf><newline>
<tt>static int tflags_ours</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>gdb_has_a_terminal()
<item>terminal_ours_1()
</itemize>
</descrip>
<p>
<bf>sigint_ours</bf><newline>
<tt>static void (*sigint_ours)(int)</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>terminal_inferior()
<item>terminal_ours_1()
</itemize>
</descrip>
<p>
<bf>sigquit_ours</bf><newline>
<tt>static void (*sigquit_ours)(int)</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>terminal_inferior()
<item>terminal_ours_1()
</itemize>
</descrip>
<p>
<bf>inferior_thisrun_terminal</bf><newline>
<tt>static const char* inferior_thisrun_terminal</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>clear_sigint_trap()
<item>new_tty()
<item>new_tty_prefork()
<item>set_sigint_trap()
<item>terminal_inferior()
<item>terminal_ours_1()
</itemize>
</descrip>
<p>
<bf>osig</bf><newline>
<tt>static void (*osig)(int)</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>clear_sigint_trap()
<item>set_sigint_trap()
</itemize>
</descrip>
<p>
<bf>old_sigio</bf><newline>
<tt>static void (*old_sigio)(int)</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>clear_sigio_trap()
<item>set_sigio_trap()
</itemize>
</descrip>
<p>
<bf>old_fcntl_flags</bf><newline>
<tt>static int old_fcntl_flags</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>clear_sigio_trap()
<item>set_sigio_trap()
</itemize>
</descrip>

<sect1>Global Function _initialize_inflow()

<p><tt>void _initialize_inflow ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>inflow.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>add_com(), add_info()
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>kill_command()  :  inflow.c
<item>term_info()  :  inflow.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>inferior_ptid  :  infcmd.c
<item>job_control  :  utils.c
<item>null_ptid  :  infrun.c
<item>terminal_is_ours  :  inflow.c
</itemize>
</descrip>

<sect1>Global Function child_terminal_info()

<p><tt>void child_terminal_info ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>inferior.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>gdb_has_a_terminal()  :  inflow.c
<item>printf_filtered()  :  utils.c
<item>serial_print_tty_state()  :  serial.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdout  :  main.c
<item>inferior_process_group  :  inflow.c
<item>inferior_ttystate  :  inflow.c
<item>stdin_serial  :  inflow.c
<item>tflags_inferior  :  inflow.c
</itemize>
</descrip>

<sect1>Global Function clear_sigint_trap()

<p><tt>void clear_sigint_trap ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>inferior.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>signal()
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>attach_flag  :  target/target.c
<item>inferior_thisrun_terminal  :  inflow.c
<item>osig  :  inflow.c
</itemize>
</descrip>

<sect1>Global Function clear_sigio_trap()

<p><tt>void clear_sigio_trap ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>inferior.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fcntl(), signal()
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>old_fcntl_flags  :  inflow.c
<item>old_sigio  :  inflow.c
<item>target_activity_fd  :  target/target.c
<item>target_activity_function  :  target/target.c
</itemize>
</descrip>

<sect1>Global Function gdb_has_a_terminal()

<p><tt>int gdb_has_a_terminal ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>inferior.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>serial_fdopen()  :  serial.c
<item>serial_get_tty_state()  :  serial.c
<item>fcntl(), ioctl()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>child_terminal_info()  :  inflow.c
<item>input_from_terminal_p()  :  top.c
<item>terminal_inferior()  :  inflow.c
<item>terminal_init_inferior_with_pgrp()  :  inflow.c
<item>terminal_ours_1()  :  inflow.c
<item>terminal_save_ours()  :  inflow.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_has_a_terminal_flag  :  inflow.c
<item>our_process_group  :  inflow.c
<item>our_ttystate  :  inflow.c
<item>stdin_serial  :  inflow.c
<item>tflags_ours  :  inflow.c
</itemize>
</descrip>

<sect1>Global Function gdb_setpgid()

<p><tt>int gdb_setpgid ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>terminal.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>getpid(), setpgid()
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>job_control  :  utils.c
</itemize>
</descrip>

<sect1>Global Function new_tty()

<p><tt>void new_tty ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>terminal.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>print_sys_errmsg()  :  utils.c
<item>__error(), _exit(), close(), dup(), ioctl(), open(), signal()
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>inferior_thisrun_terminal  :  inflow.c
</itemize>
</descrip>

<sect1>Global Function new_tty_prefork()

<p><tt>void new_tty_prefork ( const char* ttyname )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>inferior.h
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>inferior_thisrun_terminal  :  inflow.c
</itemize>
</descrip>

<sect1>Global Function set_sigint_trap()

<p><tt>void set_sigint_trap ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>inferior.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>signal()
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>pass_signal()  :  inflow.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>attach_flag  :  target/target.c
<item>inferior_thisrun_terminal  :  inflow.c
<item>osig  :  inflow.c
</itemize>
</descrip>

<sect1>Global Function set_sigio_trap()

<p><tt>void set_sigio_trap ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>inferior.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fcntl(), getpid(), signal()
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>handle_sigio()  :  inflow.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>old_fcntl_flags  :  inflow.c
<item>old_sigio  :  inflow.c
<item>target_activity_fd  :  target/target.c
<item>target_activity_function  :  target/target.c
</itemize>
</descrip>

<sect1>Global Function term_info()

<p><tt>void term_info ( const char* arg, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>inferior.h
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_inflow()  :  inflow.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_target  :  target/target.c
</itemize>
</descrip>

<sect1>Global Function terminal_inferior()

<p><tt>void terminal_inferior ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>inferior.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fprintf_unfiltered()  :  utils.c
<item>gdb_has_a_terminal()  :  inflow.c
<item>safe_strerror()  :  utils.c
<item>serial_set_tty_state()  :  serial.c
<item>warning()  :  utils.c
<item>__error(), fcntl(), ioctl(), signal()
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>attach_flag  :  target/target.c
<item>gdb_stderr  :  main.c
<item>inferior_process_group  :  inflow.c
<item>inferior_thisrun_terminal  :  inflow.c
<item>inferior_ttystate  :  inflow.c
<item>job_control  :  utils.c
<item>sigint_ours  :  inflow.c
<item>sigquit_ours  :  inflow.c
<item>stdin_serial  :  inflow.c
<item>terminal_is_ours  :  inflow.c
<item>tflags_inferior  :  inflow.c
</itemize>
</descrip>

<sect1>Global Function terminal_init_inferior()

<p><tt>void terminal_init_inferior ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>inferior.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>ptid_get_pid()  :  infrun.c
<item>terminal_init_inferior_with_pgrp()  :  inflow.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>inferior_ptid  :  infcmd.c
</itemize>
</descrip>

<sect1>Global Function terminal_init_inferior_with_pgrp()

<p><tt>void terminal_init_inferior_with_pgrp ( int pgrp )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>inferior.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>gdb_has_a_terminal()  :  inflow.c
<item>serial_get_tty_state()  :  serial.c
<item>xfree()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>terminal_init_inferior()  :  inflow.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>inferior_process_group  :  inflow.c
<item>inferior_ttystate  :  inflow.c
<item>stdin_serial  :  inflow.c
<item>terminal_is_ours  :  inflow.c
</itemize>
</descrip>

<sect1>Global Function terminal_ours()

<p><tt>void terminal_ours ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>inferior.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>terminal_ours_1()  :  inflow.c
</itemize>
</descrip>

<sect1>Global Function terminal_ours_for_output()

<p><tt>void terminal_ours_for_output ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>inferior.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>terminal_ours_1()  :  inflow.c
</itemize>
</descrip>

<sect1>Global Function terminal_save_ours()

<p><tt>void terminal_save_ours ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>inferior.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>gdb_has_a_terminal()  :  inflow.c
<item>serial_get_tty_state()  :  serial.c
<item>xfree()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>our_ttystate  :  inflow.c
<item>stdin_serial  :  inflow.c
</itemize>
</descrip>

<sect1>Local Function handle_sigio()

<p><tt>static void handle_sigio ( int signo )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>inflow.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>ptid_get_pid()  :  infrun.c
<item>__builtin_bzero(), __darwin_fd_isset(), kill(), select(), signal()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>handle_sigio()  :  inflow.c
<item>set_sigio_trap()  :  inflow.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>handle_sigio()  :  inflow.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>inferior_ptid  :  infcmd.c
<item>target_activity_fd  :  target/target.c
<item>target_activity_function  :  target/target.c
</itemize>
</descrip>

<sect1>Local Function kill_command()

<p><tt>static void kill_command ( const char* arg, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>inflow.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>fputs_filtered()  :  utils.c
<item>get_selected_frame()  :  frame.c
<item>init_thread_list()  :  thread.c
<item>print_stack_frame()  :  stack.c
<item>printf_filtered()  :  utils.c
<item>ptid_equal()  :  infrun.c
<item>query()  :  utils.c
<item>target_kill()  :  target/target.c
<item>ui_out_is_mi_like_p()  :  ui-out.c
<item>bfd_cache_close_all(), state_change_hook()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_inflow()  :  inflow.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_target  :  target/target.c
<item>deprecated_selected_frame  :  frame.c
<item>gdb_stdout  :  main.c
<item>inferior_ptid  :  infcmd.c
<item>null_ptid  :  infrun.c
<item>state_change_hook  :  top.c
<item>uiout  :  ui-out.c
</itemize>
</descrip>

<sect1>Local Function pass_signal()

<p><tt>static void pass_signal ( int signo )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>inflow.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>ptid_get_pid()  :  infrun.c
<item>kill()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>set_sigint_trap()  :  inflow.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>inferior_ptid  :  infcmd.c
</itemize>
</descrip>

<sect1>Local Function terminal_ours_1()

<p><tt>static void terminal_ours_1 ( int output_only )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>inflow.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>gdb_has_a_terminal()  :  inflow.c
<item>safe_strerror()  :  utils.c
<item>serial_get_tty_state()  :  serial.c
<item>serial_noflush_set_tty_state()  :  serial.c
<item>warning()  :  utils.c
<item>xfree()  :  utils.c
<item>__error(), fcntl(), ioctl(), signal()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>terminal_ours()  :  inflow.c
<item>terminal_ours_for_output()  :  inflow.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>attach_flag  :  target/target.c
<item>inferior_process_group  :  inflow.c
<item>inferior_thisrun_terminal  :  inflow.c
<item>inferior_ttystate  :  inflow.c
<item>job_control  :  utils.c
<item>our_process_group  :  inflow.c
<item>our_ttystate  :  inflow.c
<item>sigint_ours  :  inflow.c
<item>sigquit_ours  :  inflow.c
<item>stdin_serial  :  inflow.c
<item>terminal_is_ours  :  inflow.c
<item>tflags_inferior  :  inflow.c
<item>tflags_ours  :  inflow.c
</itemize>
</descrip>

</article>
