{\rtf\ansi
\deff0
{\fonttbl
{\f0\froman Times New Roman;}
{\f1\fmodern Courier New;}
}
{\stylesheet
{\s0\f0\fs24 Normal;}
{\s1\f0\fs40\b\sb400\sa200\keepn\keep Heading 1;}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Heading 2;}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Heading 3;}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Heading 4;}
{\s5\f1\fs20\ql\sb50\sa50 Code;}
}
{\info{\comment
 This RTF file generated by cxref (version 1.6e).
 cxref program (c) Andrew M. Bishop 1995-2014.
 Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF event-loop.c
 CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
}}
\paperw11880\paperh16848\margl1440\margr1440\margt1440\margb1440
\sectd\plain
\s0\f0\fs24
{\s1\f0\fs40\b\sb400\sa200\keepn\keep File event-loop.c\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Included Files\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <errno.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <unistd.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_locale.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <locale.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../gdb/signals.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/symcat.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-file.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "xm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/xm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "nm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/i386/nm-i386.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/nm-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "tm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/tm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-tdep.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-tdep.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-thread-status.h"\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_types.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <inttypes.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_vm.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/kmod.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/tm-i386-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/fopen-bin.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdlib.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbarch.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "event-loop.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "event-top.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "interps.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "exceptions.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "ui-out.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <setjmp.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "ui-out.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <poll.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_string.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <errno.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <sys/time.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "exceptions.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_assert.h"\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Preprocessor definitions\par}
{\s5\f1\fs20\ql\sb50\sa50 #define USE_POLL 1\par}
{\s5\f1\fs20\ql\sb50\sa50 #define USE_POLL 0\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Type definitions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Typedef gdb_event\par}
{\s5\f1\fs20\ql\sb50\sa50 typedef struct gdb_event gdb_event\par}
See:	Type struct gdb_event\par
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct gdb_event\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct gdb_event}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 event_handler_func* proc;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 void* data;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct gdb_event* next_event;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Typedef file_handler\par}
{\s5\f1\fs20\ql\sb50\sa50 typedef struct file_handler file_handler\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct file_handler}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int fd;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int mask;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int ready_mask;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 handler_func* proc;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 gdb_client_data client_data;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int error;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct file_handler* next_file;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Typedef async_signal_handler\par}
{\s5\f1\fs20\ql\sb50\sa50 typedef struct async_signal_handler async_signal_handler\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct async_signal_handler}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int ready;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct async_signal_handler* next_handler;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 sig_handler_func* proc;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 gdb_client_data client_data;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct gdb_timer\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct gdb_timer}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct timeval when;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int timer_id;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct gdb_timer* next;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 timer_handler_func* proc;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 gdb_client_data client_data;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Variables\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable gdb_timer\par}
{\s5\f1\fs20\ql\sb50\sa50 struct gdb_timer gdb_timer\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell event-loop.c\cell\cell\row
Used in:\cell create_timer()\cell event-loop.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep External Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable sigint_token\par}
{\s5\f1\fs20\ql\sb50\sa50 extern void* sigint_token\par}
\trowd\trgaph120\cellx1440\cellx5220
\intbl\plain
Defined in:\cell event-top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable event_queue\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct \{...\} event_queue\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell async_queue_event()\cell\cell\row
\cell print_event_queue()\cell\cell\row
\cell process_event()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable use_poll\par}
{\s5\f1\fs20\ql\sb50\sa50 static unsigned char use_poll\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell add_file_handler()\cell\cell\row
\cell create_file_handler()\cell\cell\row
\cell delete_file_handler()\cell\cell\row
\cell gdb_wait_for_event()\cell\cell\row
\cell handle_file_event()\cell\cell\row
\cell poll_timers()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable gdb_notifier\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct \{...\} gdb_notifier\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell create_file_handler()\cell\cell\row
\cell create_timer()\cell\cell\row
\cell delete_file_handler()\cell\cell\row
\cell delete_timer()\cell\cell\row
\cell gdb_wait_for_event()\cell\cell\row
\cell handle_file_event()\cell\cell\row
\cell handle_timer_event()\cell\cell\row
\cell poll_timers()\cell\cell\row
\cell print_event_queue()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable timer_list\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct \{...\} timer_list\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell create_timer()\cell\cell\row
\cell delete_timer()\cell\cell\row
\cell handle_timer_event()\cell\cell\row
\cell poll_timers()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable sighandler_list\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct \{...\} sighandler_list\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell create_async_signal_handler()\cell\cell\row
\cell delete_async_signal_handler()\cell\cell\row
\cell invoke_async_signal_handler()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable async_handler_ready\par}
{\s5\f1\fs20\ql\sb50\sa50 static int async_handler_ready\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell check_async_ready()\cell\cell\row
\cell invoke_async_signal_handler()\cell\cell\row
\cell mark_async_signal_handler()\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Functions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function add_file_handler()\par}
{\s5\f1\fs20\ql\sb50\sa50 void add_file_handler ( int fd, handler_func* proc, gdb_client_data client_data )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-loop.h\cell\cell\row
Calls: \cell create_file_handler()\cell event-loop.c\cell\row
\cell  poll()\cell\cell\row
Called by:\cell display_gdb_prompt()\cell event-top.c\cell\row
\cell gdb_setup_readline()\cell event-top.c\cell\row
\cell remote_async_terminal_ours()\cell remote.c\cell\row
\cell reschedule()\cell ser-base.c\cell\row
Refs Var:\cell use_poll\cell event-loop.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function async_queue_event()\par}
{\s5\f1\fs20\ql\sb50\sa50 void async_queue_event ( gdb_event* event_ptr, queue_position position )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-loop.c\cell\cell\row
Called by:\cell gdb_queue_event()\cell event-loop.c\cell\row
\cell gdb_wait_for_event()\cell event-loop.c\cell\row
\cell poll_timers()\cell event-loop.c\cell\row
Refs Var:\cell event_queue\cell event-loop.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function create_async_signal_handler()\par}
{\s5\f1\fs20\ql\sb50\sa50 async_signal_handler* create_async_signal_handler ( sig_handler_func* proc, gdb_client_data client_data )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-loop.h\cell\cell\row
Calls: \cell xmalloc()\cell utils.c\cell\row
Called by:\cell async_init_signals()\cell event-top.c\cell\row
\cell handle_remote_sigint()\cell remote.c\cell\row
\cell handle_remote_sigint_twice()\cell remote.c\cell\row
\cell initialize_sigint_signal_handler()\cell remote.c\cell\row
Refs Var:\cell sighandler_list\cell event-loop.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function create_timer()\par}
{\s5\f1\fs20\ql\sb50\sa50 int create_timer ( int milliseconds, timer_handler_func* proc, gdb_client_data client_data )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-loop.h\cell\cell\row
Calls: \cell xmalloc()\cell utils.c\cell\row
\cell  gettimeofday()\cell\cell\row
Called by:\cell reschedule()\cell ser-base.c\cell\row
Refs Var:\cell gdb_notifier\cell event-loop.c\cell\row
\cell gdb_timer\cell event-loop.c\cell\row
\cell timer_list\cell event-loop.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function delete_async_signal_handler()\par}
{\s5\f1\fs20\ql\sb50\sa50 void delete_async_signal_handler ( async_signal_handler** async_handler_ptr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-loop.h\cell\cell\row
Calls: \cell xfree()\cell utils.c\cell\row
Called by:\cell cleanup_sigint_signal_handler()\cell remote.c\cell\row
Refs Var:\cell sighandler_list\cell event-loop.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function delete_file_handler()\par}
{\s5\f1\fs20\ql\sb50\sa50 void delete_file_handler ( int fd )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-loop.h\cell\cell\row
Calls: \cell xfree()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  __darwin_fd_isset()\cell\cell\row
Called by:\cell display_gdb_prompt()\cell event-top.c\cell\row
\cell gdb_disable_readline()\cell event-top.c\cell\row
\cell remote_async_terminal_inferior()\cell remote.c\cell\row
\cell reschedule()\cell ser-base.c\cell\row
\cell ser_base_async()\cell ser-base.c\cell\row
\cell stdin_event_handler()\cell event-top.c\cell\row
Refs Var:\cell gdb_notifier\cell event-loop.c\cell\row
\cell use_poll\cell event-loop.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function delete_timer()\par}
{\s5\f1\fs20\ql\sb50\sa50 void delete_timer ( int id )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-loop.h\cell\cell\row
Calls: \cell xfree()\cell utils.c\cell\row
Called by:\cell reschedule()\cell ser-base.c\cell\row
\cell ser_base_async()\cell ser-base.c\cell\row
Refs Var:\cell gdb_notifier\cell event-loop.c\cell\row
\cell timer_list\cell event-loop.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function gdb_do_one_event()\par}
{\s5\f1\fs20\ql\sb50\sa50 int gdb_do_one_event ( void* data )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-loop.h\cell\cell\row
Calls: \cell gdb_wait_for_event()\cell event-loop.c\cell\row
\cell poll_timers()\cell event-loop.c\cell\row
\cell process_event()\cell event-loop.c\cell\row
Used in:\cell start_event_loop()\cell event-loop.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function gdb_queue_event()\par}
{\s5\f1\fs20\ql\sb50\sa50 void gdb_queue_event ( event_handler_func proc, void* data, queue_position position )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-loop.h\cell\cell\row
Calls: \cell async_queue_event()\cell event-loop.c\cell\row
\cell gdb_create_event()\cell event-loop.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function mark_async_signal_handler()\par}
{\s5\f1\fs20\ql\sb50\sa50 void mark_async_signal_handler ( async_signal_handler* async_handler_ptr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-loop.h\cell\cell\row
Calls: \cell internal_error()\cell utils.c\cell\row
Called by:\cell mark_async_signal_handler_wrapper()\cell event-top.c\cell\row
Refs Var:\cell async_handler_ready\cell event-loop.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function print_event_queue()\par}
{\s5\f1\fs20\ql\sb50\sa50 void print_event_queue ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-loop.h\cell\cell\row
Calls: \cell check_async_ready()\cell event-loop.c\cell\row
\cell  printf()\cell\cell\row
Refs Func:\cell handle_file_event()\cell event-loop.c\cell\row
Refs Var:\cell event_queue\cell event-loop.c\cell\row
\cell gdb_notifier\cell event-loop.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function sigint_taken_p()\par}
{\s5\f1\fs20\ql\sb50\sa50 int sigint_taken_p ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-loop.c\cell\cell\row
Refs Var:\cell sigint_token\cell event-top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function start_event_loop()\par}
{\s5\f1\fs20\ql\sb50\sa50 void start_event_loop ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-loop.h\cell\cell\row
Calls: \cell current_interp()\cell interps.c\cell\row
\cell display_gdb_prompt()\cell event-top.c\cell\row
\cell interp_ui_out()\cell interps.c\cell\row
\cell  catch_errors()\cell\cell\row
Called by:\cell cli_command_loop()\cell event-top.c\cell\row
Refs Func:\cell gdb_do_one_event()\cell event-loop.c\cell\row
Refs Var:\cell after_char_processing_hook\cell event-top.c\cell\row
\cell uiout\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function unmark_async_signal_handler()\par}
{\s5\f1\fs20\ql\sb50\sa50 void unmark_async_signal_handler ( async_signal_handler* async_handler_ptr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-loop.h\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function check_async_ready()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int check_async_ready ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-loop.c\cell\cell\row
Called by:\cell print_event_queue()\cell event-loop.c\cell\row
\cell process_event()\cell event-loop.c\cell\row
Refs Var:\cell async_handler_ready\cell event-loop.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function create_file_event()\par}
{\s5\f1\fs20\ql\sb50\sa50 static gdb_event* create_file_event ( int fd )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-loop.c\cell\cell\row
Calls: \cell gdb_create_event()\cell event-loop.c\cell\row
Called by:\cell gdb_wait_for_event()\cell event-loop.c\cell\row
Refs Func:\cell handle_file_event()\cell event-loop.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function create_file_handler()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void create_file_handler ( int fd, int mask, handler_func* proc, gdb_client_data client_data )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-loop.c\cell\cell\row
Calls: \cell xmalloc()\cell utils.c\cell\row
\cell xrealloc()\cell utils.c\cell\row
Called by:\cell add_file_handler()\cell event-loop.c\cell\row
Refs Var:\cell gdb_notifier\cell event-loop.c\cell\row
\cell use_poll\cell event-loop.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function gdb_create_event()\par}
{\s5\f1\fs20\ql\sb50\sa50 static gdb_event* gdb_create_event ( event_handler_func proc, void* data )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-loop.c\cell\cell\row
Calls: \cell xmalloc()\cell utils.c\cell\row
Called by:\cell create_file_event()\cell event-loop.c\cell\row
\cell gdb_queue_event()\cell event-loop.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function gdb_select()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int gdb_select ( int n, fd_set* readfds, fd_set* writefds, fd_set* exceptfds, struct timeval* timeout )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell  select()\cell\cell\row
Called by:\cell gdb_wait_for_event()\cell event-loop.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function gdb_wait_for_event()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int gdb_wait_for_event ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-loop.c\cell\cell\row
Calls: \cell async_queue_event()\cell event-loop.c\cell\row
\cell create_file_event()\cell event-loop.c\cell\row
\cell gdb_flush()\cell ui-file.c\cell\row
\cell gdb_select()\cell event-loop.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell perror_with_name()\cell utils.c\cell\row
\cell  __builtin_bzero(), __darwin_fd_isset(), __error(), poll()\cell\cell\row
Called by:\cell gdb_do_one_event()\cell event-loop.c\cell\row
Refs Var:\cell gdb_notifier\cell event-loop.c\cell\row
\cell gdb_stderr\cell main.c\cell\row
\cell gdb_stdout\cell main.c\cell\row
\cell use_poll\cell event-loop.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function handle_file_event()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void handle_file_event ( void* data )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-loop.c\cell\cell\row
Calls: \cell printf_unfiltered()\cell utils.c\cell\row
Used in:\cell create_file_event()\cell event-loop.c\cell\row
\cell print_event_queue()\cell event-loop.c\cell\row
Refs Var:\cell gdb_notifier\cell event-loop.c\cell\row
\cell use_poll\cell event-loop.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function handle_timer_event()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void handle_timer_event ( void* dummy )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-loop.c\cell\cell\row
Calls: \cell xfree()\cell utils.c\cell\row
\cell  gettimeofday()\cell\cell\row
Used in:\cell poll_timers()\cell event-loop.c\cell\row
Refs Var:\cell gdb_notifier\cell event-loop.c\cell\row
\cell timer_list\cell event-loop.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function invoke_async_signal_handler()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void invoke_async_signal_handler ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-loop.c\cell\cell\row
Called by:\cell process_event()\cell event-loop.c\cell\row
Refs Var:\cell async_handler_ready\cell event-loop.c\cell\row
\cell sighandler_list\cell event-loop.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function poll_timers()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void poll_timers ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-loop.c\cell\cell\row
Calls: \cell async_queue_event()\cell event-loop.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  gettimeofday()\cell\cell\row
Called by:\cell gdb_do_one_event()\cell event-loop.c\cell\row
Refs Func:\cell handle_timer_event()\cell event-loop.c\cell\row
Refs Var:\cell gdb_notifier\cell event-loop.c\cell\row
\cell timer_list\cell event-loop.c\cell\row
\cell use_poll\cell event-loop.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function process_event()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int process_event ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell event-loop.c\cell\cell\row
Calls: \cell check_async_ready()\cell event-loop.c\cell\row
\cell invoke_async_signal_handler()\cell event-loop.c\cell\row
\cell xfree()\cell utils.c\cell\row
Called by:\cell gdb_do_one_event()\cell event-loop.c\cell\row
Refs Var:\cell event_queue\cell event-loop.c\cell\row
\intbl0
}
