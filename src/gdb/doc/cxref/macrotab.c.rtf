{\rtf\ansi
\deff0
{\fonttbl
{\f0\froman Times New Roman;}
{\f1\fmodern Courier New;}
}
{\stylesheet
{\s0\f0\fs24 Normal;}
{\s1\f0\fs40\b\sb400\sa200\keepn\keep Heading 1;}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Heading 2;}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Heading 3;}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Heading 4;}
{\s5\f1\fs20\ql\sb50\sa50 Code;}
}
{\info{\comment
 This RTF file generated by cxref (version 1.6e).
 cxref program (c) Andrew M. Bishop 1995-2014.
 Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF macrotab.c
 CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
}}
\paperw11880\paperh16848\margl1440\margr1440\margt1440\margb1440
\sectd\plain
\s0\f0\fs24
{\s1\f0\fs40\b\sb400\sa200\keepn\keep File macrotab.c\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Included Files\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <errno.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <unistd.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_locale.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <locale.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../gdb/signals.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/symcat.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-file.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "xm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/xm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "nm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/i386/nm-i386.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/nm-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "tm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/tm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-tdep.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-tdep.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-thread-status.h"\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_types.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <inttypes.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_vm.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/kmod.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/tm-i386-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/fopen-bin.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdlib.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbarch.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_obstack.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/obstack.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../include/splay-tree.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "symfile.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "objfiles.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <uuid/uuid.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_obstack.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symfile.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "inlining.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <block.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/floatformat.h"\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_regex.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "gdbtypes.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "expression.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sqlite3.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "macrotab.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_assert.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "bcache.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "complaints.h"\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Type definitions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct macro_table\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct macro_table}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct obstack* obstack;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct bcache* bcache;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct macro_source_file* main_source;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 splay_tree definitions;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct macro_key\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct macro_key}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct macro_table* table;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 const char* name;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct macro_source_file* start_file;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int start_line;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct macro_source_file* end_file;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int end_line;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Functions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function free_macro_table()\par}
{\s5\f1\fs20\ql\sb50\sa50 void free_macro_table ( struct macro_table* table )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell macrotab.h\cell\cell\row
Calls: \cell free_macro_source_file()\cell macrotab.c\cell\row
\cell  splay_tree_delete()\cell\cell\row
Called by:\cell really_free_pendings()\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function macro_define_function()\par}
{\s5\f1\fs20\ql\sb50\sa50 void macro_define_function ( struct macro_source_file* source, int line, const char* name, int argc, const char** argv, const char* replacement )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell macrotab.h\cell\cell\row
Calls: \cell check_for_redefinition()\cell macrotab.c\cell\row
\cell key_compare()\cell macrotab.c\cell\row
\cell new_macro_definition()\cell macrotab.c\cell\row
\cell new_macro_key()\cell macrotab.c\cell\row
\cell  splay_tree_insert()\cell\cell\row
Called by:\cell parse_macro_definition()\cell dwarf2read.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function macro_define_object()\par}
{\s5\f1\fs20\ql\sb50\sa50 void macro_define_object ( struct macro_source_file* source, int line, const char* name, const char* replacement )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell macrotab.h\cell\cell\row
Calls: \cell check_for_redefinition()\cell macrotab.c\cell\row
\cell key_compare()\cell macrotab.c\cell\row
\cell new_macro_definition()\cell macrotab.c\cell\row
\cell new_macro_key()\cell macrotab.c\cell\row
\cell  splay_tree_insert()\cell\cell\row
Called by:\cell parse_macro_definition()\cell dwarf2read.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function macro_definition_location()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct macro_source_file* macro_definition_location ( struct macro_source_file* source, int line, const char* name, int* definition_line )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell macrotab.h\cell\cell\row
Calls: \cell find_definition()\cell macrotab.c\cell\row
Called by:\cell info_macro_command()\cell macrocmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function macro_include()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct macro_source_file* macro_include ( struct macro_source_file* source, int line, const char* included )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell macrotab.h\cell\cell\row
Calls: \cell complaint()\cell complaints.c\cell\row
\cell new_source_file()\cell macrotab.c\cell\row
Called by:\cell macro_start_file()\cell dwarf2read.c\cell\row
Refs Var:\cell symfile_complaints\cell complaints.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function macro_lookup_definition()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct macro_definition* macro_lookup_definition ( struct macro_source_file* source, int line, const char* name )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell macrotab.h\cell\cell\row
Calls: \cell find_definition()\cell macrotab.c\cell\row
Called by:\cell info_macro_command()\cell macrocmd.c\cell\row
\cell standard_macro_lookup()\cell macroscope.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function macro_lookup_inclusion()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct macro_source_file* macro_lookup_inclusion ( struct macro_source_file* source, const char* name )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell macrotab.h\cell\cell\row
Calls: \cell inclusion_depth()\cell macrotab.c\cell\row
\cell macro_lookup_inclusion()\cell macrotab.c\cell\row
\cell  strcmp(), strlen()\cell\cell\row
Called by:\cell macro_lookup_inclusion()\cell macrotab.c\cell\row
\cell sal_macro_scope()\cell macroscope.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function macro_main()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct macro_source_file* macro_main ( struct macro_table* t )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell macrotab.h\cell\cell\row
Calls: \cell internal_error()\cell utils.c\cell\row
Called by:\cell sal_macro_scope()\cell macroscope.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function macro_set_main()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct macro_source_file* macro_set_main ( struct macro_table* t, const char* filename )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell macrotab.h\cell\cell\row
Calls: \cell internal_error()\cell utils.c\cell\row
\cell new_source_file()\cell macrotab.c\cell\row
Called by:\cell macro_start_file()\cell dwarf2read.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function macro_undef()\par}
{\s5\f1\fs20\ql\sb50\sa50 void macro_undef ( struct macro_source_file* source, int line, const char* name )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell macrotab.h\cell\cell\row
Calls: \cell complaint()\cell complaints.c\cell\row
\cell find_definition()\cell macrotab.c\cell\row
Called by:\cell dwarf_decode_macros()\cell dwarf2read.c\cell\row
Refs Var:\cell symfile_complaints\cell complaints.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function new_macro_table()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct macro_table* new_macro_table ( struct obstack* obstack, struct bcache* b )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell macrotab.h\cell\cell\row
Calls: \cell xmalloc()\cell utils.c\cell\row
\cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk(), _obstack_newchunk(), splay_tree_new_with_allocator()\cell\cell\row
Called by:\cell _initialize_macrocmd()\cell macrocmd.c\cell\row
\cell macro_start_file()\cell dwarf2read.c\cell\row
Refs Func:\cell macro_alloc()\cell macrotab.c\cell\row
\cell macro_free()\cell macrotab.c\cell\row
\cell macro_tree_compare()\cell macrotab.c\cell\row
\cell macro_tree_delete_key()\cell macrotab.c\cell\row
\cell macro_tree_delete_value()\cell macrotab.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function check_for_redefinition()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct macro_key* check_for_redefinition ( struct macro_source_file* source, int line, const char* name, enum macro_kind kind, int argc, const char** argv, const char* replacement )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell complaint()\cell complaints.c\cell\row
\cell find_definition()\cell macrotab.c\cell\row
\cell  strcmp()\cell\cell\row
Called by:\cell macro_define_function()\cell macrotab.c\cell\row
\cell macro_define_object()\cell macrotab.c\cell\row
Refs Var:\cell symfile_complaints\cell complaints.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function compare_locations()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int compare_locations ( struct macro_source_file* file1, int line1, struct macro_source_file* file2, int line2 )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell inclusion_depth()\cell macrotab.c\cell\row
\cell internal_error()\cell utils.c\cell\row
Called by:\cell find_definition()\cell macrotab.c\cell\row
\cell key_compare()\cell macrotab.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function find_definition()\par}
{\s5\f1\fs20\ql\sb50\sa50 static splay_tree_node find_definition ( const char* name, struct macro_source_file* file, int line )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell compare_locations()\cell macrotab.c\cell\row
\cell  splay_tree_lookup(), splay_tree_predecessor(), strcmp()\cell\cell\row
Called by:\cell check_for_redefinition()\cell macrotab.c\cell\row
\cell macro_definition_location()\cell macrotab.c\cell\row
\cell macro_lookup_definition()\cell macrotab.c\cell\row
\cell macro_undef()\cell macrotab.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function free_macro_source_file()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void free_macro_source_file ( struct macro_source_file* src )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell free_macro_source_file()\cell macrotab.c\cell\row
\cell macro_bcache_free()\cell macrotab.c\cell\row
\cell macro_free()\cell macrotab.c\cell\row
Called by:\cell free_macro_source_file()\cell macrotab.c\cell\row
\cell free_macro_table()\cell macrotab.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function inclusion_depth()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int inclusion_depth ( struct macro_source_file* file )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Called by:\cell compare_locations()\cell macrotab.c\cell\row
\cell macro_lookup_inclusion()\cell macrotab.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function key_compare()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int key_compare ( struct macro_key* key, const char* name, struct macro_source_file* file, int line )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell compare_locations()\cell macrotab.c\cell\row
\cell  strcmp()\cell\cell\row
Called by:\cell macro_define_function()\cell macrotab.c\cell\row
\cell macro_define_object()\cell macrotab.c\cell\row
\cell macro_tree_compare()\cell macrotab.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function macro_alloc()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void* macro_alloc ( int size, struct macro_table* t )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell xmalloc()\cell utils.c\cell\row
\cell  _obstack_newchunk()\cell\cell\row
Called by:\cell new_macro_definition()\cell macrotab.c\cell\row
\cell new_macro_key()\cell macrotab.c\cell\row
\cell new_source_file()\cell macrotab.c\cell\row
Used in:\cell new_macro_table()\cell macrotab.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function macro_bcache()\par}
{\s5\f1\fs20\ql\sb50\sa50 static const void* macro_bcache ( struct macro_table* t, const void* addr, int len )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell bcache()\cell bcache.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  __builtin___memcpy_chk(), __builtin_object_size(), __inline_memcpy_chk()\cell\cell\row
Called by:\cell macro_bcache_str()\cell macrotab.c\cell\row
\cell new_macro_definition()\cell macrotab.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function macro_bcache_free()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void macro_bcache_free ( struct macro_table* t, void* obj )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell internal_error()\cell utils.c\cell\row
\cell xfree()\cell utils.c\cell\row
Called by:\cell free_macro_source_file()\cell macrotab.c\cell\row
\cell macro_tree_delete_key()\cell macrotab.c\cell\row
\cell macro_tree_delete_value()\cell macrotab.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function macro_bcache_str()\par}
{\s5\f1\fs20\ql\sb50\sa50 static const char* macro_bcache_str ( struct macro_table* t, const char* s )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell macro_bcache()\cell macrotab.c\cell\row
\cell  strlen()\cell\cell\row
Called by:\cell new_macro_definition()\cell macrotab.c\cell\row
\cell new_macro_key()\cell macrotab.c\cell\row
\cell new_source_file()\cell macrotab.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function macro_free()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void macro_free ( void* object, struct macro_table* t )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell internal_error()\cell utils.c\cell\row
\cell xfree()\cell utils.c\cell\row
Called by:\cell free_macro_source_file()\cell macrotab.c\cell\row
\cell macro_tree_delete_key()\cell macrotab.c\cell\row
\cell macro_tree_delete_value()\cell macrotab.c\cell\row
Used in:\cell new_macro_table()\cell macrotab.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function macro_tree_compare()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int macro_tree_compare ( splay_tree_key untyped_key1, splay_tree_key untyped_key2 )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell key_compare()\cell macrotab.c\cell\row
Used in:\cell new_macro_table()\cell macrotab.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function macro_tree_delete_key()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void macro_tree_delete_key ( void* untyped_key )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell macro_bcache_free()\cell macrotab.c\cell\row
\cell macro_free()\cell macrotab.c\cell\row
Used in:\cell new_macro_table()\cell macrotab.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function macro_tree_delete_value()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void macro_tree_delete_value ( void* untyped_definition )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell macro_bcache_free()\cell macrotab.c\cell\row
\cell macro_free()\cell macrotab.c\cell\row
Used in:\cell new_macro_table()\cell macrotab.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function new_macro_definition()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct macro_definition* new_macro_definition ( struct macro_table* t, enum macro_kind kind, int argc, const char** argv, const char* replacement )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell macro_alloc()\cell macrotab.c\cell\row
\cell macro_bcache()\cell macrotab.c\cell\row
\cell macro_bcache_str()\cell macrotab.c\cell\row
\cell  __builtin___memset_chk(), __builtin_alloca(), __builtin_object_size(), __inline_memset_chk()\cell\cell\row
Called by:\cell macro_define_function()\cell macrotab.c\cell\row
\cell macro_define_object()\cell macrotab.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function new_macro_key()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct macro_key* new_macro_key ( struct macro_table* t, const char* name, struct macro_source_file* file, int line )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell macro_alloc()\cell macrotab.c\cell\row
\cell macro_bcache_str()\cell macrotab.c\cell\row
\cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk()\cell\cell\row
Called by:\cell macro_define_function()\cell macrotab.c\cell\row
\cell macro_define_object()\cell macrotab.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function new_source_file()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct macro_source_file* new_source_file ( struct macro_table* t, const char* filename )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell macro_alloc()\cell macrotab.c\cell\row
\cell macro_bcache_str()\cell macrotab.c\cell\row
\cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk()\cell\cell\row
Called by:\cell macro_include()\cell macrotab.c\cell\row
\cell macro_set_main()\cell macrotab.c\cell\row
\intbl0
}
