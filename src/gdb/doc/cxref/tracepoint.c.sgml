<!DOCTYPE LINUXDOC SYSTEM>

<!-- This SGML file generated by cxref (version 1.6e). -->
<!-- cxref program (c) Andrew M. Bishop 1995-2014. -->

<!--
Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF tracepoint.c
CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
-->

<article>

<title>Cross reference for tracepoint.c of gdb.cxref.
<author>cxref

<sect>File tracepoint.c

<sect1>Included Files

<p>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<itemize>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
<item><tt>#include &lt;sys/time.h&gt;</tt>
<item><tt>#include &lt;time.h&gt;</tt>
<item><tt>#include &lt;sys/types.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
<item><tt>#include &lt;errno.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
<item><tt>#include &lt;regex.h&gt;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;unistd.h&gt;</tt>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;gdb_locale.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<item><tt>#include &lt;locale.h&gt;</tt>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../gdb/signals.h&quot;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &quot;../include/libiberty.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/symcat.h&quot;</tt>
</itemize>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
<item><tt>#include &quot;ui-file.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;xm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/xm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &lt;mach/mach.h&gt;</tt>
<item><tt>#include &lt;signal.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;nm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/i386/nm-i386.h&quot;</tt>
<item><tt>#include &quot;macosx/nm-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;tm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/tm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;macosx/i386-macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/i386-macosx-thread-status.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &lt;mach/mach_types.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
<item><tt>#include &lt;inttypes.h&gt;</tt>
<item><tt>#include &lt;mach/mach_vm.h&gt;</tt>
<item><tt>#include &lt;mach/kmod.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;macosx/tm-i386-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;../include/fopen-bin.h&quot;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdlib.h&gt;</tt>
<item><tt>#include &quot;gdbarch.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;frame.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/floatformat.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;gdb_regex.h&quot;</tt>
<itemize>
<item><tt>#include &lt;regex.h&gt;</tt>
</itemize>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;gdbtypes.h&quot;</tt>
<item><tt>#include &quot;expression.h&quot;</tt>
<itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
</itemize>
</itemize>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;gdbtypes.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;expression.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdbcmd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;command.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
<item><tt>#include &quot;ui-out.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;value.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;target.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;dcache.h&quot;</tt>
<item><tt>#include &quot;memattr.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;language.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_assert.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_string.h&quot;</tt>
<itemize>
<item><tt>#include &lt;string.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;inferior.h&quot;</tt>
<itemize>
<item><tt>#include &quot;breakpoint.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
<item><tt>#include &quot;gdb-events.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;target.h&quot;</tt>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;tracepoint.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;remote.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &lt;sys/time.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;linespec.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;regcache.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;completer.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdb-events.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;block.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;dictionary.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;inlining.h&quot;</tt>
<itemize>
<item><tt>#include &lt;block.h&gt;</tt>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;ax.h&quot;</tt>
<itemize>
<item><tt>#include &quot;doublest.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;ax-gdb.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;../readline/readline.h&quot;</tt>
<itemize>
<item><tt>#include &lt;../readline/rlstdc.h&gt;</tt>
<item><tt>#include &lt;../readline/rltypedefs.h&gt;</tt>
<item><tt>#include &lt;../readline/keymaps.h&gt;</tt>
<item><tt>#include &lt;../readline/tilde.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;../readline/history.h&quot;</tt>
<itemize>
<item><tt>#include &lt;../readline/rlstdc.h&gt;</tt>
<item><tt>#include &lt;readline/rltypedefs.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &lt;unistd.h&gt;</tt>
</itemize>

<sect1>Preprocessor definitions

<p>
<tt>#define MAX_AGENT_EXPR_LEN 184</tt><newline>

<sect1>Type enum tracepoint_opcode

<p>
<itemize>
<item><tt>enum tracepoint_opcode</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>enable_op;</tt><newline>
<item><tt>disable_op;</tt><newline>
<item><tt>delete_op;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Type struct memrange

<p>
<itemize>
<item><tt>struct memrange</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>int type;</tt><newline>
<item><tt>bfd_signed_vma start;</tt><newline>
<item><tt>bfd_signed_vma end;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Type struct collection_list

<p>
<itemize>
<item><tt>struct collection_list</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>unsigned char regs_mask[32];</tt><newline>
<item><tt>long listsize;</tt><newline>
<item><tt>long next_memrange;</tt><newline>
<item><tt>struct memrange* list;</tt><newline>
<item><tt>long aexpr_listsize;</tt><newline>
<item><tt>long next_aexpr_elt;</tt><newline>
<item><tt>struct agent_expr** aexpr_list;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Global Variable tracepoint_chain

<p>
<tt>struct tracepoint* tracepoint_chain</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>tracepoint.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_tracepoint()  :  tracepoint.c
<item>delete_trace_command()  :  tracepoint.c
<item>get_tracepoint_by_number()  :  tracepoint.c
<item>map_args_over_tracepoints()  :  tracepoint.c
<item>set_raw_tracepoint()  :  tracepoint.c
<item>trace_dump_command()  :  tracepoint.c
<item>trace_pass_command()  :  tracepoint.c
<item>trace_start_command()  :  tracepoint.c
<item>tracepoint_operation()  :  tracepoint.c
<item>tracepoint_save_command()  :  tracepoint.c
<item>tracepoints_info()  :  tracepoint.c
</itemize>
</descrip>

<sect1>Global Variable trace_running_p

<p>
<tt>unsigned long trace_running_p</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>tracepoint.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>trace_start_command()  :  tracepoint.c
<item>trace_status_command()  :  tracepoint.c
<item>trace_stop_command()  :  tracepoint.c
</itemize>
</descrip>

<sect1>Global Variable deprecated_trace_find_hook

<p>
<tt>void (*deprecated_trace_find_hook)(const char* arg,int from_tty)</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>tracepoint.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_tracepoint()  :  tracepoint.c
<item>trace_find_command()  :  tracepoint.c
</itemize>
</descrip>

<sect1>Global Variable deprecated_trace_start_stop_hook

<p>
<tt>void (*deprecated_trace_start_stop_hook)(int start,int from_tty)</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>tracepoint.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_tracepoint()  :  tracepoint.c
<item>trace_start_command()  :  tracepoint.c
<item>trace_stop_command()  :  tracepoint.c
</itemize>
</descrip>

<sect1>Global Variable tracepoint_list

<p>
<tt>struct collection_list tracepoint_list</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>tracepoint.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_tracepoint()  :  tracepoint.c
<item>encode_actions()  :  tracepoint.c
</itemize>
</descrip>

<sect1>Global Variable stepping_list

<p>
<tt>struct collection_list stepping_list</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>tracepoint.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_tracepoint()  :  tracepoint.c
<item>encode_actions()  :  tracepoint.c
</itemize>
</descrip>

<sect1>External Variables

<p>
<bf>deprecated_readline_begin_hook</bf><newline>
<tt>extern void (*deprecated_readline_begin_hook)(const char*,...)</tt><newline>
<descrip>
<tag>Defined in:</tag>
<itemize>
<item>deprecated_readline_begin_hook</itemize>
</descrip>
<p>
<bf>deprecated_readline_hook</bf><newline>
<tt>extern char* (*deprecated_readline_hook)(char*)</tt><newline>
<descrip>
<tag>Defined in:</tag>
<itemize>
<item>deprecated_readline_hook</itemize>
</descrip>
<p>
<bf>deprecated_readline_end_hook</bf><newline>
<tt>extern void (*deprecated_readline_end_hook)(void)</tt><newline>
<descrip>
<tag>Defined in:</tag>
<itemize>
<item>deprecated_readline_end_hook</itemize>
</descrip>
<p>
<bf>addressprint</bf><newline>
<tt>extern int addressprint</tt><newline>
<descrip>
<tag>Defined in:</tag>
<itemize>
<item>addressprint</itemize>
</descrip>
<p>
<bf>instream</bf><newline>
<tt>extern FILE* instream</tt><newline>
<descrip>
<tag>Defined in:</tag>
<itemize>
<item>instream</itemize>
</descrip>
<p>
<bf>exec_bfd</bf><newline>
<tt>extern bfd* exec_bfd</tt><newline>

<sect1>Local Variables

<p>
<bf>tracepoint_count</bf><newline>
<tt>static int tracepoint_count</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>_initialize_tracepoint()
<item>get_tracepoint_by_number()
<item>set_tracepoint_count()
<item>trace_command()
</itemize>
</descrip>
<p>
<bf>traceframe_number</bf><newline>
<tt>static int traceframe_number</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>_initialize_tracepoint()
<item>get_traceframe_number()
<item>set_traceframe_num()
<item>trace_dump_command()
<item>trace_find_command()
</itemize>
</descrip>
<p>
<bf>tracepoint_number</bf><newline>
<tt>static int tracepoint_number</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>_initialize_tracepoint()
<item>set_tracepoint_num()
<item>trace_dump_command()
<item>trace_find_tracepoint_command()
</itemize>
</descrip>
<p>
<bf>traceframe_fun</bf><newline>
<tt>static struct symbol* traceframe_fun</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>set_traceframe_context()
</itemize>
</descrip>
<p>
<bf>traceframe_sal</bf><newline>
<tt>static struct symtab_and_line traceframe_sal</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>set_traceframe_context()
</itemize>
</descrip>
<p>
<bf>tfindlist</bf><newline>
<tt>static struct cmd_list_element* tfindlist</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>_initialize_tracepoint()
</itemize>
</descrip>
<p>
<bf>target_buf</bf><newline>
<tt>static char target_buf[2048]</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>remote_set_transparent_ranges()
<item>trace_find_command()
<item>trace_find_line_command()
<item>trace_find_outside_command()
<item>trace_find_pc_command()
<item>trace_find_range_command()
<item>trace_find_tracepoint_command()
<item>trace_start_command()
<item>trace_status_command()
<item>trace_stop_command()
</itemize>
</descrip>
<p>
<bf>hexchars</bf><newline>
<tt>static const char hexchars[]</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>mem2hex()
</itemize>
</descrip>

<sect1>Global Function _initialize_tracepoint()

<p><tt>void _initialize_tracepoint ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>tracepoint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>lookup_internalvar()  :  value.c
<item>set_internalvar()  :  value.c
<item>value_from_longest()  :  value.c
<item>xmalloc()  :  utils.c
<item>add_cmd(), add_com(), add_com_alias(), add_info(), add_info_alias(), add_prefix_cmd(), set_cmd_completer()
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>collect_pseudocommand()  :  tracepoint.c
<item>default_trace_find()  :  tracepoint.c
<item>default_trace_start_stop()  :  tracepoint.c
<item>delete_trace_command()  :  tracepoint.c
<item>disable_trace_command()  :  tracepoint.c
<item>enable_trace_command()  :  tracepoint.c
<item>end_actions_pseudocommand()  :  tracepoint.c
<item>filename_completer()  :  completer.c
<item>location_completer()  :  completer.c
<item>scope_info()  :  tracepoint.c
<item>trace_actions_command()  :  tracepoint.c
<item>trace_command()  :  tracepoint.c
<item>trace_dump_command()  :  tracepoint.c
<item>trace_find_command()  :  tracepoint.c
<item>trace_find_end_command()  :  tracepoint.c
<item>trace_find_line_command()  :  tracepoint.c
<item>trace_find_none_command()  :  tracepoint.c
<item>trace_find_outside_command()  :  tracepoint.c
<item>trace_find_pc_command()  :  tracepoint.c
<item>trace_find_range_command()  :  tracepoint.c
<item>trace_find_start_command()  :  tracepoint.c
<item>trace_find_tracepoint_command()  :  tracepoint.c
<item>trace_pass_command()  :  tracepoint.c
<item>trace_start_command()  :  tracepoint.c
<item>trace_status_command()  :  tracepoint.c
<item>trace_stop_command()  :  tracepoint.c
<item>tracepoint_save_command()  :  tracepoint.c
<item>tracepoints_info()  :  tracepoint.c
<item>while_stepping_pseudocommand()  :  tracepoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>builtin_type_int  :  gdbtypes.c
<item>deprecated_trace_find_hook  :  tracepoint.c
<item>deprecated_trace_start_stop_hook  :  tracepoint.c
<item>stepping_list  :  tracepoint.c
<item>tfindlist  :  tracepoint.c
<item>traceframe_number  :  tracepoint.c
<item>tracepoint_chain  :  tracepoint.c
<item>tracepoint_count  :  tracepoint.c
<item>tracepoint_list  :  tracepoint.c
<item>tracepoint_number  :  tracepoint.c
<item>cmdlist, deletelist, disablelist, enablelist
</itemize>
</descrip>

<sect1>Global Function free_actions()

<p><tt>void free_actions ( struct tracepoint* t )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>tracepoint.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xfree()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>do_free_actions_cleanup()  :  tracepoint.c
<item>read_actions()  :  tracepoint.c
<item>trace_actions_command()  :  tracepoint.c
<item>tracepoint_operation()  :  tracepoint.c
</itemize>
</descrip>

<sect1>Global Function get_traceframe_number()

<p><tt>int get_traceframe_number ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>tracepoint.h
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>traceframe_number  :  tracepoint.c
</itemize>
</descrip>

<sect1>Global Function get_tracepoint_by_number()

<p><tt>struct tracepoint* get_tracepoint_by_number ( const char** arg, int multi_p, int optional_p )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>tracepoint.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>get_number()  :  breakpoint.c
<item>get_number_or_range()  :  breakpoint.c
<item>printf_filtered()  :  utils.c
<item>printf_unfiltered()  :  utils.c
<item>error_no_arg()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>map_args_over_tracepoints()  :  tracepoint.c
<item>trace_actions_command()  :  tracepoint.c
<item>trace_pass_command()  :  tracepoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>tracepoint_chain  :  tracepoint.c
<item>tracepoint_count  :  tracepoint.c
</itemize>
</descrip>

<sect1>Global Function validate_actionline()

<p><tt>enum actionline_type validate_actionline ( char** line, struct tracepoint* t )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>tracepoint.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>ax_reqs()  :  ax-general.c
<item>block_for_pc()  :  block.c
<item>do_cleanups()  :  utils.c
<item>error()  :  utils.c
<item>gen_trace_for_expr()  :  ax-gdb.c
<item>make_cleanup()  :  utils.c
<item>make_cleanup_free_agent_expr()  :  ax-general.c
<item>parse_exp_1()  :  parse.c
<item>quit()  :  utils.c
<item>warning()  :  utils.c
<item>cmd_cfunc_eq(), isspace(), lookup_cmd(), strchr(), strncasecmp(), strtol()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>read_actions()  :  tracepoint.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>collect_pseudocommand()  :  tracepoint.c
<item>end_actions_pseudocommand()  :  tracepoint.c
<item>free_current_contents()  :  utils.c
<item>while_stepping_pseudocommand()  :  tracepoint.c
<item>xfree()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>quit_flag  :  utils.c
<item>cmdlist
</itemize>
</descrip>

<sect1>Local Function add_aexpr()

<p><tt>static void add_aexpr ( struct collection_list* collect, struct agent_expr* aexpr )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>tracepoint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xrealloc()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>encode_actions()  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function add_local_symbols()

<p><tt>static void add_local_symbols ( struct collection_list* collect, CORE_ADDR pc, long frame_regno, long frame_offset, int type )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>block_for_pc()  :  block.c
<item>collect_symbol()  :  tracepoint.c
<item>dict_iterator_first()  :  dictionary.c
<item>dict_iterator_next()  :  dictionary.c
<item>quit()  :  utils.c
<item>warning()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>encode_actions()  :  tracepoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>quit_flag  :  utils.c
</itemize>
</descrip>

<sect1>Local Function add_memrange()

<p><tt>static void add_memrange ( struct collection_list* memranges, int type, bfd_signed_vma base, unsigned long len )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>add_register()  :  tracepoint.c
<item>printf_filtered()  :  utils.c
<item>xrealloc()  :  utils.c
<item>fprintf()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>collect_symbol()  :  tracepoint.c
<item>encode_actions()  :  tracepoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>info_verbose  :  top.c
</itemize>
</descrip>

<sect1>Local Function add_register()

<p><tt>static void add_register ( struct collection_list* collection, unsigned int regno )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>tracepoint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>printf_filtered()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>add_memrange()  :  tracepoint.c
<item>collect_symbol()  :  tracepoint.c
<item>encode_actions()  :  tracepoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>info_verbose  :  top.c
</itemize>
</descrip>

<sect1>Local Function clear_collection_list()

<p><tt>static void clear_collection_list ( struct collection_list* list )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>free_agent_expr()  :  ax-general.c
<item>__builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>encode_actions()  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function collect_pseudocommand()

<p><tt>static void collect_pseudocommand ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_tracepoint()  :  tracepoint.c
<item>encode_actions()  :  tracepoint.c
<item>trace_dump_command()  :  tracepoint.c
<item>validate_actionline()  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function collect_symbol()

<p><tt>static void collect_symbol ( struct collection_list* collect, struct symbol* sym, long frame_regno, long frame_offset )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>add_memrange()  :  tracepoint.c
<item>add_register()  :  tracepoint.c
<item>check_typedef()  :  gdbtypes.c
<item>objc_fixup_class_length()  :  objc-lang.c
<item>printf_filtered()  :  utils.c
<item>register_size()  :  regcache.c
<item>__builtin___snprintf_chk(), __builtin_object_size(), fprintf()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>add_local_symbols()  :  tracepoint.c
<item>encode_actions()  :  tracepoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
<item>info_verbose  :  top.c
</itemize>
</descrip>

<sect1>Local Function default_trace_find()

<p><tt>static void default_trace_find ( const char* arg, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>tracepoint.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_tracepoint()  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function default_trace_start_stop()

<p><tt>static void default_trace_start_stop ( int start, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>tracepoint.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_tracepoint()  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function delete_trace_command()

<p><tt>static void delete_trace_command ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>tracepoint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>dont_repeat()  :  top.c
<item>map_args_over_tracepoints()  :  tracepoint.c
<item>query()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_tracepoint()  :  tracepoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>tracepoint_chain  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function disable_trace_command()

<p><tt>static void disable_trace_command ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>tracepoint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>dont_repeat()  :  top.c
<item>map_args_over_tracepoints()  :  tracepoint.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_tracepoint()  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function do_free_actions_cleanup()

<p><tt>static void do_free_actions_cleanup ( void* t )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>free_actions()  :  tracepoint.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>make_cleanup_free_actions()  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function enable_trace_command()

<p><tt>static void enable_trace_command ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>tracepoint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>dont_repeat()  :  top.c
<item>map_args_over_tracepoints()  :  tracepoint.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_tracepoint()  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function encode_actions()

<p><tt>static void encode_actions ( struct tracepoint* t, char*** tdp_actions, char*** stepping_actions )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>add_aexpr()  :  tracepoint.c
<item>add_local_symbols()  :  tracepoint.c
<item>add_memrange()  :  tracepoint.c
<item>add_register()  :  tracepoint.c
<item>ax_reqs()  :  ax-general.c
<item>block_for_pc()  :  block.c
<item>check_typedef()  :  gdbtypes.c
<item>clear_collection_list()  :  tracepoint.c
<item>collect_symbol()  :  tracepoint.c
<item>deprecated_value_address_hack()  :  value.c
<item>discard_cleanups()  :  utils.c
<item>do_cleanups()  :  utils.c
<item>error()  :  utils.c
<item>evaluate_expression()  :  eval.c
<item>gdbarch_num_regs()  :  gdbarch.c
<item>gdbarch_virtual_frame_pointer()  :  gdbarch.c
<item>gen_trace_for_expr()  :  ax-gdb.c
<item>make_cleanup()  :  utils.c
<item>make_cleanup_free_agent_expr()  :  ax-general.c
<item>memrange_sortmerge()  :  tracepoint.c
<item>objc_fixup_class_length()  :  objc-lang.c
<item>parse_exp_1()  :  parse.c
<item>printf_filtered()  :  utils.c
<item>quit()  :  utils.c
<item>stringify_collection_list()  :  tracepoint.c
<item>value_offset()  :  value.c
<item>cmd_cfunc_eq(), isspace(), lookup_cmd(), strchr(), strncasecmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>trace_start_command()  :  tracepoint.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>collect_pseudocommand()  :  tracepoint.c
<item>end_actions_pseudocommand()  :  tracepoint.c
<item>free_current_contents()  :  utils.c
<item>while_stepping_pseudocommand()  :  tracepoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
<item>info_verbose  :  top.c
<item>quit_flag  :  utils.c
<item>stepping_list  :  tracepoint.c
<item>tracepoint_list  :  tracepoint.c
<item>cmdlist
</itemize>
</descrip>

<sect1>Local Function end_actions_pseudocommand()

<p><tt>static void end_actions_pseudocommand ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_tracepoint()  :  tracepoint.c
<item>encode_actions()  :  tracepoint.c
<item>trace_dump_command()  :  tracepoint.c
<item>tracepoint_save_command()  :  tracepoint.c
<item>validate_actionline()  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function finish_tfind_command()

<p><tt>static void finish_tfind_command ( char* msg, long sizeof_msg, int from_tty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>clear_inlined_subroutine_print_frames()  :  inlining.c
<item>do_displays()  :  printcmd.c
<item>error()  :  utils.c
<item>find_pc_function()  :  blockframe.c
<item>flush_cached_frames()  :  frame.c
<item>get_current_frame()  :  frame.c
<item>get_frame_base()  :  frame.c
<item>get_selected_frame()  :  frame.c
<item>print_stack_frame()  :  stack.c
<item>printf_filtered()  :  utils.c
<item>putpkt()  :  remote.c
<item>read_pc()  :  regcache.c
<item>registers_changed()  :  regcache.c
<item>remote_get_noisy_reply()  :  tracepoint.c
<item>select_frame()  :  frame.c
<item>set_traceframe_context()  :  tracepoint.c
<item>set_traceframe_num()  :  tracepoint.c
<item>set_tracepoint_num()  :  tracepoint.c
<item>trace_find_command()  :  tracepoint.c
<item>strtol()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>trace_find_command()  :  tracepoint.c
<item>trace_find_line_command()  :  tracepoint.c
<item>trace_find_outside_command()  :  tracepoint.c
<item>trace_find_pc_command()  :  tracepoint.c
<item>trace_find_range_command()  :  tracepoint.c
<item>trace_find_tracepoint_command()  :  tracepoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>info_verbose  :  top.c
</itemize>
</descrip>

<sect1>Local Function free_actions_list()

<p><tt>static void free_actions_list ( char** actions_list )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>tracepoint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xfree()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>free_actions_list_cleanup_wrapper()  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function free_actions_list_cleanup_wrapper()

<p><tt>static void free_actions_list_cleanup_wrapper ( void* al )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>tracepoint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>free_actions_list()  :  tracepoint.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>trace_start_command()  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function make_cleanup_free_actions()

<p><tt>static struct cleanup* make_cleanup_free_actions ( struct tracepoint* t )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>tracepoint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>make_cleanup()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>read_actions()  :  tracepoint.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>do_free_actions_cleanup()  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function map_args_over_tracepoints()

<p><tt>static void map_args_over_tracepoints ( const char* args, int from_tty, enum tracepoint_opcode opcode )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>get_tracepoint_by_number()  :  tracepoint.c
<item>quit()  :  utils.c
<item>tracepoint_operation()  :  tracepoint.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>delete_trace_command()  :  tracepoint.c
<item>disable_trace_command()  :  tracepoint.c
<item>enable_trace_command()  :  tracepoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>quit_flag  :  utils.c
<item>tracepoint_chain  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function mem2hex()

<p><tt>static char* mem2hex ( gdb_byte* mem, char* buf, int count )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>tracepoint.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>stringify_collection_list()  :  tracepoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>hexchars  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function memrange_cmp()

<p><tt>static int memrange_cmp ( const void* va, const void* vb )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>tracepoint.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>memrange_sortmerge()  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function memrange_sortmerge()

<p><tt>static void memrange_sortmerge ( struct collection_list* memranges )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>__builtin___memcpy_chk(), __builtin_object_size(), __inline_memcpy_chk(), qsort()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>encode_actions()  :  tracepoint.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>memrange_cmp()  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function read_actions()

<p><tt>static void read_actions ( struct tracepoint* t )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>tracepoint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>discard_cleanups()  :  utils.c
<item>free_actions()  :  tracepoint.c
<item>gdb_flush()  :  ui-file.c
<item>gdb_readline()  :  top.c
<item>gdb_readline_wrapper()  :  top.c
<item>make_cleanup_free_actions()  :  tracepoint.c
<item>validate_actionline()  :  tracepoint.c
<item>warning()  :  utils.c
<item>wrap_here()  :  utils.c
<item>xmalloc()  :  utils.c
<item>add_history(), fileno(), isatty()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>trace_actions_command()  :  tracepoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>deprecated_readline_hook  :  top.c
<item>gdb_stderr  :  main.c
<item>gdb_stdout  :  main.c
<item>immediate_quit  :  utils.c
<item>instream  :  top.c
</itemize>
</descrip>

<sect1>Local Function remote_get_noisy_reply()

<p><tt>static char* remote_get_noisy_reply ( char* buf, long sizeof_buf )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>getpkt()  :  remote.c
<item>quit()  :  utils.c
<item>remote_console_output()  :  remote.c
<item>trace_error()  :  tracepoint.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>finish_tfind_command()  :  tracepoint.c
<item>trace_start_command()  :  tracepoint.c
<item>trace_status_command()  :  tracepoint.c
<item>trace_stop_command()  :  tracepoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>quit_flag  :  utils.c
</itemize>
</descrip>

<sect1>Local Function remote_set_transparent_ranges()

<p><tt>static void remote_set_transparent_ranges ( void )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>getpkt()  :  remote.c
<item>putpkt()  :  remote.c
<item>__builtin___snprintf_chk(), __builtin___strcpy_chk(), __builtin_object_size(), __inline_strcpy_chk(), strlen()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>trace_start_command()  :  tracepoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>target_buf  :  tracepoint.c
<item>exec_bfd
</itemize>
</descrip>

<sect1>Local Function replace_comma()

<p><tt>static void replace_comma ( void* data )</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>trace_dump_command()  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function scope_info()

<p><tt>static void scope_info ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>block_for_pc()  :  block.c
<item>check_typedef()  :  gdbtypes.c
<item>decode_line_1()  :  linespec.c
<item>deprecated_print_address_numeric()  :  printcmd.c
<item>dict_iterator_first()  :  dictionary.c
<item>dict_iterator_next()  :  dictionary.c
<item>error()  :  utils.c
<item>fprintf_filtered()  :  utils.c
<item>gdbarch_register_name()  :  gdbarch.c
<item>lookup_minimal_symbol()  :  minsyms.c
<item>objc_fixup_class_length()  :  objc-lang.c
<item>printf_filtered()  :  utils.c
<item>quit()  :  utils.c
<item>resolve_sal_pc()  :  breakpoint.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_tracepoint()  :  tracepoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
<item>gdb_stdout  :  main.c
<item>quit_flag  :  utils.c
</itemize>
</descrip>

<sect1>Local Function set_raw_tracepoint()

<p><tt>static struct tracepoint* set_raw_tracepoint ( struct symtab_and_line sal )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>discard_cleanups()  :  utils.c
<item>make_cleanup()  :  utils.c
<item>savestring()  :  utils.c
<item>xmalloc()  :  utils.c
<item>__builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk(), strlen()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>trace_command()  :  tracepoint.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>xfree()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_language  :  language.c
<item>input_radix  :  valprint.c
<item>tracepoint_chain  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function set_traceframe_context()

<p><tt>static void set_traceframe_context ( CORE_ADDR trace_pc )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>allocate_value()  :  value.c
<item>create_array_type()  :  gdbtypes.c
<item>create_range_type()  :  gdbtypes.c
<item>deprecated_set_value_modifiable()  :  value.c
<item>deprecated_set_value_type()  :  value.c
<item>find_pc_function()  :  blockframe.c
<item>find_pc_line()  :  symtab.c
<item>lookup_internalvar()  :  value.c
<item>lookup_pointer_type()  :  gdbtypes.c
<item>set_internalvar()  :  value.c
<item>value_contents_raw()  :  value.c
<item>value_from_longest()  :  value.c
<item>value_from_pointer()  :  value.c
<item>__builtin___memcpy_chk(), __builtin_object_size(), __inline_memcpy_chk(), strlen()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>finish_tfind_command()  :  tracepoint.c
<item>trace_start_command()  :  tracepoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>builtin_type_char  :  gdbtypes.c
<item>builtin_type_int  :  gdbtypes.c
<item>traceframe_fun  :  tracepoint.c
<item>traceframe_sal  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function set_traceframe_num()

<p><tt>static void set_traceframe_num ( int num )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>lookup_internalvar()  :  value.c
<item>set_internalvar()  :  value.c
<item>value_from_longest()  :  value.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>finish_tfind_command()  :  tracepoint.c
<item>trace_start_command()  :  tracepoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>builtin_type_int  :  gdbtypes.c
<item>traceframe_number  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function set_tracepoint_count()

<p><tt>static void set_tracepoint_count ( int num )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>lookup_internalvar()  :  value.c
<item>set_internalvar()  :  value.c
<item>value_from_longest()  :  value.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>trace_command()  :  tracepoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>builtin_type_int  :  gdbtypes.c
<item>tracepoint_count  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function set_tracepoint_num()

<p><tt>static void set_tracepoint_num ( int num )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>lookup_internalvar()  :  value.c
<item>set_internalvar()  :  value.c
<item>value_from_longest()  :  value.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>finish_tfind_command()  :  tracepoint.c
<item>trace_start_command()  :  tracepoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>builtin_type_int  :  gdbtypes.c
<item>tracepoint_number  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function stringify_collection_list()

<p><tt>static char** stringify_collection_list ( struct collection_list* list, char* string )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
<item>mem2hex()  :  tracepoint.c
<item>printf_filtered()  :  utils.c
<item>quit()  :  utils.c
<item>savestring()  :  utils.c
<item>xmalloc()  :  utils.c
<item>__builtin___snprintf_chk(), __builtin_object_size(), strlen()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>encode_actions()  :  tracepoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>info_verbose  :  top.c
<item>quit_flag  :  utils.c
</itemize>
</descrip>

<sect1>Local Function target_is_remote()

<p><tt>static int target_is_remote ( void )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>strcmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>trace_dump_command()  :  tracepoint.c
<item>trace_find_command()  :  tracepoint.c
<item>trace_find_line_command()  :  tracepoint.c
<item>trace_find_outside_command()  :  tracepoint.c
<item>trace_find_pc_command()  :  tracepoint.c
<item>trace_find_range_command()  :  tracepoint.c
<item>trace_find_tracepoint_command()  :  tracepoint.c
<item>trace_start_command()  :  tracepoint.c
<item>trace_status_command()  :  tracepoint.c
<item>trace_stop_command()  :  tracepoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_target  :  target/target.c
</itemize>
</descrip>

<sect1>Local Function trace_actions_command()

<p><tt>static void trace_actions_command ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>tracepoint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>free_actions()  :  tracepoint.c
<item>get_tracepoint_by_number()  :  tracepoint.c
<item>input_from_terminal_p()  :  top.c
<item>printf_filtered()  :  utils.c
<item>read_actions()  :  tracepoint.c
<item>__builtin___snprintf_chk(), __builtin_object_size()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_tracepoint()  :  tracepoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>deprecated_readline_begin_hook  :  top.c
<item>deprecated_readline_end_hook  :  top.c
</itemize>
</descrip>

<sect1>Local Function trace_command()

<p><tt>static void trace_command ( const char* arg, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>tracepoint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>decode_line_1()  :  linespec.c
<item>error()  :  utils.c
<item>printf_filtered()  :  utils.c
<item>resolve_sal_pc()  :  breakpoint.c
<item>savestring()  :  utils.c
<item>set_raw_tracepoint()  :  tracepoint.c
<item>set_tracepoint_count()  :  tracepoint.c
<item>trace_mention()  :  tracepoint.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_tracepoint()  :  tracepoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>info_verbose  :  top.c
<item>tracepoint_count  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function trace_dump_command()

<p><tt>static void trace_dump_command ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>tracepoint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>args_info()  :  stack.c
<item>discard_cleanups()  :  utils.c
<item>error()  :  utils.c
<item>gdbarch_decr_pc_after_break()  :  gdbarch.c
<item>locals_info()  :  stack.c
<item>make_cleanup()  :  utils.c
<item>output_command()  :  printcmd.c
<item>printf_filtered()  :  utils.c
<item>quit()  :  utils.c
<item>read_pc()  :  regcache.c
<item>registers_info()  :  infcmd.c
<item>target_is_remote()  :  tracepoint.c
<item>warning()  :  utils.c
<item>cmd_cfunc_eq(), isspace(), lookup_cmd(), strchr(), strncasecmp()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_tracepoint()  :  tracepoint.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>collect_pseudocommand()  :  tracepoint.c
<item>end_actions_pseudocommand()  :  tracepoint.c
<item>null_cleanup()  :  utils.c
<item>replace_comma()  :  tracepoint.c
<item>while_stepping_pseudocommand()  :  tracepoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
<item>quit_flag  :  utils.c
<item>traceframe_number  :  tracepoint.c
<item>tracepoint_chain  :  tracepoint.c
<item>tracepoint_number  :  tracepoint.c
<item>cmdlist
</itemize>
</descrip>

<sect1>Local Function trace_error()

<p><tt>static void trace_error ( char* buf )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>strtol()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_get_noisy_reply()  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function trace_find_command()

<p><tt>static void trace_find_command ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>tracepoint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>finish_tfind_command()  :  tracepoint.c
<item>parse_and_eval_long()  :  eval.c
<item>target_is_remote()  :  tracepoint.c
<item>__builtin___snprintf_chk(), __builtin_object_size(), deprecated_trace_find_hook(), strcmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>finish_tfind_command()  :  tracepoint.c
<item>trace_find_end_command()  :  tracepoint.c
<item>trace_find_none_command()  :  tracepoint.c
<item>trace_find_start_command()  :  tracepoint.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_tracepoint()  :  tracepoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>deprecated_trace_find_hook  :  tracepoint.c
<item>target_buf  :  tracepoint.c
<item>traceframe_number  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function trace_find_end_command()

<p><tt>static void trace_find_end_command ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>trace_find_command()  :  tracepoint.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_tracepoint()  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function trace_find_line_command()

<p><tt>static void trace_find_line_command ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>tracepoint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>decode_line_spec()  :  symtab.c
<item>do_cleanups()  :  utils.c
<item>error()  :  utils.c
<item>find_line_pc_range()  :  symtab.c
<item>find_pc_line()  :  symtab.c
<item>finish_tfind_command()  :  tracepoint.c
<item>get_current_frame()  :  frame.c
<item>get_frame_pc()  :  frame.c
<item>make_cleanup()  :  utils.c
<item>print_address()  :  printcmd.c
<item>printf_filtered()  :  utils.c
<item>target_is_remote()  :  tracepoint.c
<item>wrap_here()  :  utils.c
<item>xmalloc()  :  utils.c
<item>__builtin___snprintf_chk(), __builtin_object_size()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_tracepoint()  :  tracepoint.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>xfree()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdout  :  main.c
<item>target_buf  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function trace_find_none_command()

<p><tt>static void trace_find_none_command ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>trace_find_command()  :  tracepoint.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_tracepoint()  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function trace_find_outside_command()

<p><tt>static void trace_find_outside_command ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>tracepoint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>finish_tfind_command()  :  tracepoint.c
<item>parse_and_eval_address()  :  eval.c
<item>printf_filtered()  :  utils.c
<item>target_is_remote()  :  tracepoint.c
<item>__builtin___snprintf_chk(), __builtin_object_size(), isspace(), strchr()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_tracepoint()  :  tracepoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>target_buf  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function trace_find_pc_command()

<p><tt>static void trace_find_pc_command ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>tracepoint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>finish_tfind_command()  :  tracepoint.c
<item>parse_and_eval_address()  :  eval.c
<item>read_pc()  :  regcache.c
<item>target_is_remote()  :  tracepoint.c
<item>__builtin___snprintf_chk(), __builtin_object_size()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_tracepoint()  :  tracepoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>target_buf  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function trace_find_range_command()

<p><tt>static void trace_find_range_command ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>tracepoint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>finish_tfind_command()  :  tracepoint.c
<item>parse_and_eval_address()  :  eval.c
<item>printf_filtered()  :  utils.c
<item>target_is_remote()  :  tracepoint.c
<item>__builtin___snprintf_chk(), __builtin_object_size(), isspace(), strchr()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_tracepoint()  :  tracepoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>target_buf  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function trace_find_start_command()

<p><tt>static void trace_find_start_command ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>trace_find_command()  :  tracepoint.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_tracepoint()  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function trace_find_tracepoint_command()

<p><tt>static void trace_find_tracepoint_command ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>tracepoint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>finish_tfind_command()  :  tracepoint.c
<item>parse_and_eval_long()  :  eval.c
<item>target_is_remote()  :  tracepoint.c
<item>__builtin___snprintf_chk(), __builtin_object_size()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_tracepoint()  :  tracepoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>target_buf  :  tracepoint.c
<item>tracepoint_number  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function trace_mention()

<p><tt>static void trace_mention ( struct tracepoint* tp )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>tracepoint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>deprecated_print_address_numeric()  :  printcmd.c
<item>printf_filtered()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>trace_command()  :  tracepoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>addressprint  :  valprint.c
<item>gdb_stdout  :  main.c
</itemize>
</descrip>

<sect1>Local Function trace_pass_command()

<p><tt>static void trace_pass_command ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>tracepoint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>get_tracepoint_by_number()  :  tracepoint.c
<item>printf_filtered()  :  utils.c
<item>isspace(), strncasecmp(), strtoul(), tracepoint_modify_event()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_tracepoint()  :  tracepoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>tracepoint_chain  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function trace_start_command()

<p><tt>static void trace_start_command ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>tracepoint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>do_cleanups()  :  utils.c
<item>dont_repeat()  :  top.c
<item>encode_actions()  :  tracepoint.c
<item>error()  :  utils.c
<item>make_cleanup()  :  utils.c
<item>putpkt()  :  remote.c
<item>quit()  :  utils.c
<item>remote_get_noisy_reply()  :  tracepoint.c
<item>remote_set_transparent_ranges()  :  tracepoint.c
<item>set_traceframe_context()  :  tracepoint.c
<item>set_traceframe_num()  :  tracepoint.c
<item>set_tracepoint_num()  :  tracepoint.c
<item>target_is_remote()  :  tracepoint.c
<item>__builtin___snprintf_chk(), __builtin___strcat_chk(), __builtin_object_size(), __inline_strcat_chk(), deprecated_trace_start_stop_hook(), strcmp()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_tracepoint()  :  tracepoint.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>free_actions_list_cleanup_wrapper()  :  tracepoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>deprecated_trace_start_stop_hook  :  tracepoint.c
<item>quit_flag  :  utils.c
<item>target_buf  :  tracepoint.c
<item>trace_running_p  :  tracepoint.c
<item>tracepoint_chain  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function trace_status_command()

<p><tt>static void trace_status_command ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>tracepoint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>putpkt()  :  remote.c
<item>remote_get_noisy_reply()  :  tracepoint.c
<item>target_is_remote()  :  tracepoint.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_tracepoint()  :  tracepoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>target_buf  :  tracepoint.c
<item>trace_running_p  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function trace_stop_command()

<p><tt>static void trace_stop_command ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>tracepoint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>putpkt()  :  remote.c
<item>remote_get_noisy_reply()  :  tracepoint.c
<item>target_is_remote()  :  tracepoint.c
<item>deprecated_trace_start_stop_hook(), strcmp()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_tracepoint()  :  tracepoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>deprecated_trace_start_stop_hook  :  tracepoint.c
<item>target_buf  :  tracepoint.c
<item>trace_running_p  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function tracepoint_operation()

<p><tt>static void tracepoint_operation ( struct tracepoint* t, int from_tty, enum tracepoint_opcode opcode )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>free_actions()  :  tracepoint.c
<item>xfree()  :  utils.c
<item>tracepoint_delete_event(), tracepoint_modify_event()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>map_args_over_tracepoints()  :  tracepoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>tracepoint_chain  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function tracepoint_save_command()

<p><tt>static void tracepoint_save_command ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>tracepoint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>printf_filtered()  :  utils.c
<item>quit()  :  utils.c
<item>safe_strerror()  :  utils.c
<item>warning()  :  utils.c
<item>xfree()  :  utils.c
<item>__builtin___snprintf_chk(), __builtin_object_size(), __error(), cmd_cfunc_eq(), fclose(), fopen(), fprintf(), isspace(), lookup_cmd(), tilde_expand()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_tracepoint()  :  tracepoint.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>end_actions_pseudocommand()  :  tracepoint.c
<item>while_stepping_pseudocommand()  :  tracepoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>quit_flag  :  utils.c
<item>tracepoint_chain  :  tracepoint.c
<item>cmdlist
</itemize>
</descrip>

<sect1>Local Function tracepoints_info()

<p><tt>static void tracepoints_info ( const char* tpnum_exp, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>tracepoint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>find_pc_sect_function()  :  blockframe.c
<item>fputs_filtered()  :  utils.c
<item>gdbarch_addr_bit()  :  gdbarch.c
<item>hex_string_custom()  :  utils.c
<item>parse_and_eval_long()  :  eval.c
<item>print_address_symbolic()  :  printcmd.c
<item>printf_filtered()  :  utils.c
<item>symbol_natural_name()  :  symtab.c
<item>wrap_here()  :  utils.c
<item>__builtin___strcat_chk(), __builtin___strcpy_chk(), __builtin_object_size(), __inline_strcat_chk(), __inline_strcpy_chk()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_tracepoint()  :  tracepoint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>addressprint  :  valprint.c
<item>current_gdbarch  :  gdbarch.c
<item>demangle  :  utils.c
<item>gdb_stdout  :  main.c
<item>tracepoint_chain  :  tracepoint.c
</itemize>
</descrip>

<sect1>Local Function while_stepping_pseudocommand()

<p><tt>static void while_stepping_pseudocommand ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_tracepoint()  :  tracepoint.c
<item>encode_actions()  :  tracepoint.c
<item>trace_dump_command()  :  tracepoint.c
<item>tracepoint_save_command()  :  tracepoint.c
<item>validate_actionline()  :  tracepoint.c
</itemize>
</descrip>

</article>
