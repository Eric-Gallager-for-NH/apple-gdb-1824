<!DOCTYPE LINUXDOC SYSTEM>

<!-- This SGML file generated by cxref (version 1.6e). -->
<!-- cxref program (c) Andrew M. Bishop 1995-2014. -->

<!--
Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF environ.c
CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
-->

<article>

<title>Cross reference for environ.c of gdb.cxref.
<author>cxref

<sect>File environ.c

<sect1>Included Files

<p>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<itemize>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
<item><tt>#include &lt;sys/time.h&gt;</tt>
<item><tt>#include &lt;time.h&gt;</tt>
<item><tt>#include &lt;sys/types.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
<item><tt>#include &lt;errno.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
<item><tt>#include &lt;regex.h&gt;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;unistd.h&gt;</tt>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;gdb_locale.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<item><tt>#include &lt;locale.h&gt;</tt>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../gdb/signals.h&quot;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &quot;../include/libiberty.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/symcat.h&quot;</tt>
</itemize>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
<item><tt>#include &quot;ui-file.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;xm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/xm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &lt;mach/mach.h&gt;</tt>
<item><tt>#include &lt;signal.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;nm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/i386/nm-i386.h&quot;</tt>
<item><tt>#include &quot;macosx/nm-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;tm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/tm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;macosx/i386-macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/i386-macosx-thread-status.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &lt;mach/mach_types.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
<item><tt>#include &lt;inttypes.h&gt;</tt>
<item><tt>#include &lt;mach/mach_vm.h&gt;</tt>
<item><tt>#include &lt;mach/kmod.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;macosx/tm-i386-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;../include/fopen-bin.h&quot;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdlib.h&gt;</tt>
<item><tt>#include &quot;gdbarch.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;environ.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_string.h&quot;</tt>
<itemize>
<item><tt>#include &lt;string.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &lt;crt_externs.h&gt;</tt>
</itemize>

<sect1>Preprocessor definitions

<p>
<tt>#define min( a, b )</tt><newline>
<p>
<tt>#define max( a, b )</tt><newline>
<p>
<tt>#define environ _NSGetEnviron</tt><newline>

<sect1>Type struct dyld_smuggle_pairs

<p>
<itemize>
<item><tt>struct dyld_smuggle_pairs</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>const char* real_name;</tt><newline>
<item><tt>const char* smuggled_name;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Global Function environ_vector()

<p><tt>char** environ_vector ( struct gdb_environ* e )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>environ.h
</itemize>
<tag>Called by:</tag>
<itemize>
<item>environment_info()  :  infcmd.c
<item>run_command_1()  :  infcmd.c
</itemize>
</descrip>

<sect1>Global Function free_environ()

<p><tt>void free_environ ( struct gdb_environ* e )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>environ.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xfree()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>unset_environment_command()  :  infcmd.c
</itemize>
</descrip>

<sect1>Global Function get_in_environ()

<p><tt>char* get_in_environ ( const struct gdb_environ* e, const char* var )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>environ.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>strlen(), strncmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>environment_info()  :  infcmd.c
<item>path_command()  :  infcmd.c
<item>path_info()  :  infcmd.c
<item>smuggle_dyld_settings()  :  environ.c
<item>solib_open()  :  solib.c
</itemize>
</descrip>

<sect1>Global Function init_environ()

<p><tt>void init_environ ( struct gdb_environ* e )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>environ.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xmalloc()  :  utils.c
<item>xrealloc()  :  utils.c
<item>_NSGetEnviron(), __builtin___memcpy_chk(), __builtin_object_size(), __inline_memcpy_chk(), strlen()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>_initialize_infcmd()  :  infcmd.c
</itemize>
</descrip>

<sect1>Global Function make_environ()

<p><tt>struct gdb_environ* make_environ ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>environ.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xmalloc()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>_initialize_infcmd()  :  infcmd.c
<item>unset_environment_command()  :  infcmd.c
</itemize>
</descrip>

<sect1>Global Function set_in_environ()

<p><tt>void set_in_environ ( struct gdb_environ* e, const char* var, const char* value )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>environ.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xfree()  :  utils.c
<item>xmalloc()  :  utils.c
<item>xrealloc()  :  utils.c
<item>__builtin___strcat_chk(), __builtin___strcpy_chk(), __builtin_object_size(), __inline_strcat_chk(), __inline_strcpy_chk(), strlen(), strncmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>path_command()  :  infcmd.c
<item>set_environment_command()  :  infcmd.c
<item>smuggle_dyld_settings()  :  environ.c
</itemize>
</descrip>

<sect1>Global Function smuggle_dyld_settings()

<p><tt>void smuggle_dyld_settings ( struct gdb_environ* e )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>environ.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>get_in_environ()  :  environ.c
<item>set_in_environ()  :  environ.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>_initialize_infcmd()  :  infcmd.c
</itemize>
</descrip>

<sect1>Global Function unset_in_environ()

<p><tt>void unset_in_environ ( struct gdb_environ* e, const char* var )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>environ.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xfree()  :  utils.c
<item>strlen(), strncmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>unset_environment_command()  :  infcmd.c
</itemize>
</descrip>

</article>
