<!DOCTYPE LINUXDOC SYSTEM>

<!-- This SGML file generated by cxref (version 1.6e). -->
<!-- cxref program (c) Andrew M. Bishop 1995-2014. -->

<!--
Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF remote.c
CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
-->

<article>

<title>Cross reference for remote.c of gdb.cxref.
<author>cxref

<sect>File remote.c

<sect1>Included Files

<p>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<itemize>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
<item><tt>#include &lt;sys/time.h&gt;</tt>
<item><tt>#include &lt;time.h&gt;</tt>
<item><tt>#include &lt;sys/types.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
<item><tt>#include &lt;errno.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
<item><tt>#include &lt;regex.h&gt;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;unistd.h&gt;</tt>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;gdb_locale.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<item><tt>#include &lt;locale.h&gt;</tt>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../gdb/signals.h&quot;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &quot;../include/libiberty.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/symcat.h&quot;</tt>
</itemize>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
<item><tt>#include &quot;ui-file.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;xm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/xm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &lt;mach/mach.h&gt;</tt>
<item><tt>#include &lt;signal.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;nm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/i386/nm-i386.h&quot;</tt>
<item><tt>#include &quot;macosx/nm-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;tm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/tm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;macosx/i386-macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/i386-macosx-thread-status.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &lt;mach/mach_types.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
<item><tt>#include &lt;inttypes.h&gt;</tt>
<item><tt>#include &lt;mach/mach_vm.h&gt;</tt>
<item><tt>#include &lt;mach/kmod.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;macosx/tm-i386-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;../include/fopen-bin.h&quot;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdlib.h&gt;</tt>
<item><tt>#include &quot;gdbarch.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_string.h&quot;</tt>
<itemize>
<item><tt>#include &lt;string.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &lt;ctype.h&gt;</tt>
</itemize>
<itemize>
<item><tt>#include &lt;fcntl.h&gt;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;inferior.h&quot;</tt>
<itemize>
<item><tt>#include &quot;breakpoint.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;frame.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/floatformat.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;gdb_regex.h&quot;</tt>
<itemize>
<item><tt>#include &lt;regex.h&gt;</tt>
</itemize>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;gdbtypes.h&quot;</tt>
<item><tt>#include &quot;expression.h&quot;</tt>
<itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
</itemize>
</itemize>
</itemize>
<item><tt>#include &quot;value.h&quot;</tt>
<item><tt>#include &quot;gdb-events.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;target.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;dcache.h&quot;</tt>
<item><tt>#include &quot;memattr.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
</itemize>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;symfile.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;symtab.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;exceptions.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;ui-out.h&quot;</tt>
<item><tt>#include &lt;setjmp.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;target.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdbcmd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;command.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
<item><tt>#include &quot;ui-out.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;objfiles.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &lt;uuid/uuid.h&gt;</tt>
<item><tt>#include &quot;gdb_obstack.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/obstack.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;symfile.h&quot;</tt>
<item><tt>#include &quot;inlining.h&quot;</tt>
<itemize>
<item><tt>#include &lt;block.h&gt;</tt>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
</itemize>
<item><tt>#include &lt;sqlite3.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;gdb-stabs.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdbthread.h&quot;</tt>
<itemize>
<item><tt>#include &quot;breakpoint.h&quot;</tt>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &quot;inlining.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;remote.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &lt;sys/time.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;regcache.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;value.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_assert.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;observer.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;solib.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &lt;ctype.h&gt;</tt>
</itemize>
<itemize>
<item><tt>#include &lt;sys/time.h&gt;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;event-loop.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;event-top.h&quot;</tt>
<itemize>
<item><tt>#include &lt;signal.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;inf-loop.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &lt;signal.h&gt;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;serial.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;gdbcore.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;remote-fileio.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;objc-lang.h&quot;</tt>
<itemize>
<item><tt>#include &lt;Availability.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;macosx/macosx-tdep.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;macosx/macosx-nat-dyld.h&quot;</tt>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;macosx/macosx-nat-mutils.h&quot;</tt>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;memattr.h&quot;</tt>
<item><tt>#include &quot;target.h&quot;</tt>
<item><tt>#include &quot;inferior.h&quot;</tt>
<item><tt>#include &quot;macosx/macosx-nat-utils.h&quot;</tt>
<itemize>
<item><tt>#include &lt;mach/mach.h&gt;</tt>
</itemize>
<item><tt>#include &lt;mach/mach.h&gt;</tt>
</itemize>
<item><tt>#include &quot;macosx/macosx-nat-threads.h&quot;</tt>
<itemize>
<item><tt>#include &lt;pthread.h&gt;</tt>
</itemize>
<item><tt>#include &lt;mach/machine.h&gt;</tt>
<item><tt>#include &lt;mach-o/loader.h&gt;</tt>
<item><tt>#include &quot;macosx/macosx-nat-dyld-info.h&quot;</tt>
<itemize>
<item><tt>#include &lt;mach/machine.h&gt;</tt>
<item><tt>#include &lt;mach-o/loader.h&gt;</tt>
</itemize>
<item><tt>#include &quot;macosx/macosx-nat-dyld-path.h&quot;</tt>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
</itemize>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;macosx/macosx-nat-dyld-process.h&quot;</tt>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &lt;execinfo.h&gt;</tt>
</itemize>
<itemize>
<item><tt>#include &lt;libgen.h&gt;</tt>
</itemize>

<sect1>Preprocessor definitions

<p>
<tt>#define PROTOCOL_LOG_BUFSIZE 3072</tt><newline>
<p>
<tt>#define DEFAULT_MAX_REMOTE_PACKET_SIZE 2000</tt><newline>
<p>
<tt>#define MAX_REMOTE_PACKET_SIZE 16384</tt><newline>
<p>
<tt>#define MIN_REMOTE_PACKET_SIZE 20</tt><newline>
<p>
<tt>#define MAGIC_NULL_PID 42000</tt><newline>
<p>
<tt>#define OPAQUETHREADBYTES 8</tt><newline>
<p>
<tt>#define TAG_THREADID 1</tt><newline>
<p>
<tt>#define TAG_EXISTS 2</tt><newline>
<p>
<tt>#define TAG_DISPLAY 4</tt><newline>
<p>
<tt>#define TAG_THREADNAME 8</tt><newline>
<p>
<tt>#define TAG_MOREDISPLAY 16</tt><newline>
<p>
<tt>#define BUF_THREAD_ID_SIZE</tt><newline>
<p>
<tt>#define TAG_THREADID 1</tt><newline>
<p>
<tt>#define TAG_EXISTS 2</tt><newline>
<p>
<tt>#define TAG_DISPLAY 4</tt><newline>
<p>
<tt>#define TAG_THREADNAME 8</tt><newline>
<p>
<tt>#define TAG_MOREDISPLAY 16</tt><newline>
<p>
<tt>#define MAXTHREADLISTRESULTS 32</tt><newline>
<p>
<tt>#define CRAZY_MAX_THREADS 1000</tt><newline>
<p>
<tt>#define MAX_TRIES 3</tt><newline>
<p>
<tt>#define INT_PRINT_MAX 20</tt><newline>

<sect1>Type struct packet_reg

<p>
<itemize>
<item><tt>struct packet_reg</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>long offset;</tt><newline>
<item><tt>long regnum;</tt><newline>
<item><tt>long pnum;</tt><newline>
<item><tt>int in_g_packet;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Type struct remote_state

<p>
<itemize>
<item><tt>struct remote_state</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>size_t sizeof_g_packet;</tt><newline>
<item><tt>struct packet_reg* regs;</tt><newline>
<item><tt>size_t actual_register_packet_size;</tt><newline>
<item><tt>size_t remote_packet_size;</tt><newline>
<item><tt>int has_target;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Type enum pkt_direction

<p>
<itemize>
<item><tt>enum pkt_direction</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>sent_from_gdb;</tt><newline>
<item><tt>received_by_gdb;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Type struct protocol_log_entry

<p>
<itemize>
<item><tt>struct protocol_log_entry</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>enum pkt_direction direction;</tt><newline>
<item><tt>struct timeval tv;</tt><newline>
<item><tt>char mi_token[16];</tt><newline>
<item><tt>char packet[3072];</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Type struct protocol_log

<p>
<itemize>
<item><tt>struct protocol_log</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>int head;</tt><newline>
<item><tt>int max_ent;</tt><newline>
<item><tt>struct protocol_log_entry* ents;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Type struct memory_packet_config

<p>
<itemize>
<item><tt>struct memory_packet_config</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>const char* name;</tt><newline>
<item><tt>size_t size;</tt><newline>
<item><tt>int fixed_p;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Type enum packet_support

<p>
<itemize>
<item><tt>enum packet_support</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>PACKET_SUPPORT_UNKNOWN;</tt><newline>
<item><tt>PACKET_ENABLE;</tt><newline>
<item><tt>PACKET_DISABLE;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Type struct packet_config

<p>
<itemize>
<item><tt>struct packet_config</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>const char* name;</tt><newline>
<item><tt>const char* title;</tt><newline>
<item><tt>enum auto_boolean detect;</tt><newline>
<item><tt>enum packet_support support;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Type enum packet_result

<p>
<itemize>
<item><tt>enum packet_result</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>PACKET_ERROR;</tt><newline>
<item><tt>PACKET_OK;</tt><newline>
<item><tt>PACKET_UNKNOWN;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Type enum Z_packet_type

<p>
<itemize>
<item><tt>enum Z_packet_type</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>Z_PACKET_SOFTWARE_BP;</tt><newline>
<item><tt>Z_PACKET_HARDWARE_BP;</tt><newline>
<item><tt>Z_PACKET_WRITE_WP;</tt><newline>
<item><tt>Z_PACKET_READ_WP;</tt><newline>
<item><tt>Z_PACKET_ACCESS_WP;</tt><newline>
<item><tt>NR_Z_PACKET_TYPES;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Typedef threadref

<p>
<tt>typedef unsigned char threadref[8]</tt><newline>

<sect1>Typedef gdb_threadref

<p>
<tt>typedef int gdb_threadref</tt><newline>

<sect1>Type struct gdb_ext_thread_info

<p>
<itemize>
<item><tt>struct gdb_ext_thread_info</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>threadref threadid;</tt><newline>
<item><tt>int active;</tt><newline>
<item><tt>char display[256];</tt><newline>
<item><tt>char shortname[32];</tt><newline>
<item><tt>char more_display[256];</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Typedef rmt_thread_action

<p>
<tt>typedef int (*rmt_thread_action)(threadref* ref,void* context)</tt><newline>

<sect1>Global Variable deprecated_target_resume_hook

<p>
<tt>void (*deprecated_target_resume_hook)(void)</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>inf-loop.c
<item>remote-fileio.c
<item>remote.c
<item>tracepoint.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>remote_resume()  :  remote.c
</itemize>
</descrip>

<sect1>Global Variable deprecated_target_wait_loop_hook

<p>
<tt>void (*deprecated_target_wait_loop_hook)(void)</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>inf-loop.c
<item>remote-fileio.c
<item>remote.c
<item>tracepoint.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>remote_async_wait()  :  remote.c
<item>remote_wait()  :  remote.c
</itemize>
</descrip>

<sect1>Global Variable current_remote_stats

<p>
<tt>struct remote_stats* current_remote_stats</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>inf-loop.c
<item>remote-fileio.c
<item>remote.c
<item>tracepoint.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>add_pkt_to_protocol_log()  :  remote.c
<item>end_remote_timer()  :  remote.c
<item>getpkt_sane()  :  remote.c
<item>putpkt_binary()  :  remote.c
<item>remote_start_remote()  :  remote.c
<item>remote_stop()  :  remote.c
<item>start_remote_timer()  :  remote.c
</itemize>
</descrip>

<sect1>Global Variable total_packets_sent

<p>
<tt>uint64_t total_packets_sent</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>inf-loop.c
<item>remote-fileio.c
<item>remote.c
<item>tracepoint.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>putpkt_binary()  :  remote.c
</itemize>
</descrip>

<sect1>Global Variable total_packets_received

<p>
<tt>uint64_t total_packets_received</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>inf-loop.c
<item>remote-fileio.c
<item>remote.c
<item>tracepoint.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>getpkt_sane()  :  remote.c
</itemize>
</descrip>

<sect1>Global Variable remote_debugflags

<p>
<tt>char* remote_debugflags</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
<item>remote_start_remote()  :  remote.c
<item>set_remote_debugflags_command()  :  remote.c
<item>show_remote_debugflags_command()  :  remote.c
</itemize>
</descrip>

<sect1>Global Variable protocol_log

<p>
<tt>struct protocol_log protocol_log</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>add_pkt_to_protocol_log()  :  remote.c
<item>dump_protocol_log()  :  remote.c
<item>initialize_protocol_log()  :  remote.c
</itemize>
</descrip>

<sect1>Global Variable no_ack_mode

<p>
<tt>int no_ack_mode</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>getpkt_sane()  :  remote.c
<item>putpkt_binary()  :  remote.c
<item>read_frame()  :  remote.c
<item>show_no_ack_mode_cmd()  :  remote.c
<item>start_no_ack_mode()  :  remote.c
</itemize>
</descrip>

<sect1>Global Variable user_requested_no_ack_mode

<p>
<tt>enum auto_boolean user_requested_no_ack_mode</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
<item>remote_start_remote()  :  remote.c
<item>set_no_ack_mode_cmd()  :  remote.c
<item>show_no_ack_mode_cmd()  :  remote.c
</itemize>
</descrip>

<sect1>Global Variable remote_ops

<p>
<tt>struct target_ops remote_ops</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
<item>init_extended_remote_ops()  :  remote.c
<item>init_remote_macosx_ops()  :  remote.c
<item>init_remote_ops()  :  remote.c
<item>remote_mourn()  :  remote.c
<item>remote_open()  :  remote.c
</itemize>
</descrip>

<sect1>Global Variable kill_kludge

<p>
<tt>int kill_kludge</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>remote_async_kill()  :  remote.c
<item>remote_async_wait()  :  remote.c
<item>remote_kill()  :  remote.c
<item>remote_wait()  :  remote.c
</itemize>
</descrip>

<sect1>Global Variable remote_hw_watchpoint_limit

<p>
<tt>int remote_hw_watchpoint_limit</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
<item>remote_check_watch_resources()  :  remote.c
</itemize>
</descrip>

<sect1>Global Variable remote_hw_breakpoint_limit

<p>
<tt>int remote_hw_breakpoint_limit</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
<item>remote_check_watch_resources()  :  remote.c
</itemize>
</descrip>

<sect1>External Variables

<p>
<bf>exec_bfd</bf><newline>
<tt>extern bfd* exec_bfd</tt><newline>
<p>
<bf>stepped_after_stopped_by_watchpoint</bf><newline>
<tt>extern int stepped_after_stopped_by_watchpoint</tt><newline>
<descrip>
<tag>Defined in:</tag>
<itemize>
<item>stepped_after_stopped_by_watchpoint</itemize>
</descrip>

<sect1>Local Variables

<p>
<bf>remote_gdbarch_data_handle</bf><newline>
<tt>static struct gdbarch_data* remote_gdbarch_data_handle</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()
<item>get_remote_state()
</itemize>
</descrip>
<p>
<bf>g_max_remote_packet_size</bf><newline>
<tt>static long g_max_remote_packet_size</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>init_remote_state()
<item>set_max_remote_packet_size()
<item>show_max_remote_packet_size()
</itemize>
</descrip>
<p>
<bf>remote_watch_data_address</bf><newline>
<tt>static CORE_ADDR remote_watch_data_address</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>remote_async_wait()
<item>remote_stopped_data_address()
<item>remote_wait()
</itemize>
</descrip>
<p>
<bf>remote_stopped_by_watchpoint_p</bf><newline>
<tt>static int remote_stopped_by_watchpoint_p</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>remote_async_wait()
<item>remote_stopped_by_watchpoint()
<item>remote_wait()
</itemize>
</descrip>
<p>
<bf>extended_remote_ops</bf><newline>
<tt>static struct target_ops extended_remote_ops</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()
<item>extended_remote_open()
<item>init_extended_remote_ops()
</itemize>
</descrip>
<p>
<bf>remote_async_ops</bf><newline>
<tt>static struct target_ops remote_async_ops</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()
<item>init_extended_async_remote_ops()
<item>init_remote_async_ops()
<item>remote_async_mourn()
<item>remote_async_open()
</itemize>
</descrip>
<p>
<bf>extended_async_remote_ops</bf><newline>
<tt>static struct target_ops extended_async_remote_ops</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()
<item>extended_remote_async_open()
<item>init_extended_async_remote_ops()
</itemize>
</descrip>
<p>
<bf>wait_forever_enabled_p</bf><newline>
<tt>static int wait_forever_enabled_p</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>remote_async_wait()
<item>remote_open_1()
</itemize>
</descrip>
<p>
<bf>remote_break</bf><newline>
<tt>static int remote_break</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()
<item>remote_stop()
</itemize>
</descrip>
<p>
<bf>remote_desc</bf><newline>
<tt>static struct serial* remote_desc</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>dump_packets_command()
<item>getpkt_sane()
<item>packet_command()
<item>putpkt_binary()
<item>readchar()
<item>remote_async()
<item>remote_async_kill()
<item>remote_can_async_p()
<item>remote_close()
<item>remote_detach()
<item>remote_disconnect()
<item>remote_is_async_p()
<item>remote_new_objfile()
<item>remote_open_1()
<item>remote_rcmd()
<item>remote_start_remote()
<item>remote_stop()
<item>remote_threads_extra_info()
<item>remote_threads_info()
<item>remote_xfer_partial()
<item>set_no_ack_mode_cmd()
<item>set_remote_debugflags_command()
<item>show_no_ack_mode_cmd()
</itemize>
</descrip>
<p>
<bf>remote_address_size</bf><newline>
<tt>static size_t remote_address_size</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()
<item>build_remote_gdbarch_data()
<item>remote_address_masked()
</itemize>
</descrip>
<p>
<bf>remote_async_terminal_ours_p</bf><newline>
<tt>static int remote_async_terminal_ours_p</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>remote_async_terminal_inferior()
<item>remote_async_terminal_ours()
<item>remote_open_1()
</itemize>
</descrip>
<p>
<bf>memory_write_packet_config</bf><newline>
<tt>static struct memory_packet_config memory_write_packet_config</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>get_memory_write_packet_size()
<item>set_memory_write_packet_size()
<item>show_memory_write_packet_size()
</itemize>
</descrip>
<p>
<bf>memory_read_packet_config</bf><newline>
<tt>static struct memory_packet_config memory_read_packet_config</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>get_memory_read_packet_size()
<item>set_memory_read_packet_size()
<item>show_memory_read_packet_size()
</itemize>
</descrip>
<p>
<bf>remote_protocol_vcont</bf><newline>
<tt>static struct packet_config remote_protocol_vcont</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()
<item>init_all_packet_configs()
<item>remote_vcont_probe()
<item>remote_vcont_resume()
<item>set_remote_protocol_vcont_packet_cmd()
<item>show_remote_protocol_vcont_packet_cmd()
</itemize>
</descrip>
<p>
<bf>remote_protocol_qSymbol</bf><newline>
<tt>static struct packet_config remote_protocol_qSymbol</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()
<item>init_all_packet_configs()
<item>remote_check_symbols()
<item>set_remote_protocol_qSymbol_packet_cmd()
<item>show_remote_protocol_qSymbol_packet_cmd()
</itemize>
</descrip>
<p>
<bf>remote_protocol_P</bf><newline>
<tt>static struct packet_config remote_protocol_P</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()
<item>init_all_packet_configs()
<item>remote_prepare_to_store()
<item>remote_store_registers()
<item>set_remote_protocol_P_packet_cmd()
<item>show_remote_protocol_P_packet_cmd()
</itemize>
</descrip>
<p>
<bf>remote_protocol_Z</bf><newline>
<tt>static struct packet_config remote_protocol_Z[NR_Z_PACKET_TYPES]</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()
<item>init_all_packet_configs()
<item>remote_insert_breakpoint()
<item>remote_insert_hw_breakpoint()
<item>remote_insert_watchpoint()
<item>remote_remove_breakpoint()
<item>remote_remove_hw_breakpoint()
<item>remote_remove_watchpoint()
<item>set_remote_protocol_Z_access_wp_packet_cmd()
<item>set_remote_protocol_Z_hardware_bp_packet_cmd()
<item>set_remote_protocol_Z_packet_cmd()
<item>set_remote_protocol_Z_read_wp_packet_cmd()
<item>set_remote_protocol_Z_software_bp_packet_cmd()
<item>set_remote_protocol_Z_write_wp_packet_cmd()
<item>show_remote_protocol_Z_access_wp_packet_cmd()
<item>show_remote_protocol_Z_hardware_bp_packet_cmd()
<item>show_remote_protocol_Z_packet_cmd()
<item>show_remote_protocol_Z_read_wp_packet_cmd()
<item>show_remote_protocol_Z_software_bp_packet_cmd()
<item>show_remote_protocol_Z_write_wp_packet_cmd()
</itemize>
</descrip>
<p>
<bf>remote_Z_packet_detect</bf><newline>
<tt>static enum auto_boolean remote_Z_packet_detect</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()
<item>set_remote_protocol_Z_packet_cmd()
</itemize>
</descrip>
<p>
<bf>remote_protocol_binary_download</bf><newline>
<tt>static struct packet_config remote_protocol_binary_download</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()
<item>check_binary_download()
<item>init_all_packet_configs()
<item>remote_write_bytes()
<item>set_remote_protocol_binary_download_cmd()
<item>show_remote_protocol_binary_download_cmd()
</itemize>
</descrip>
<p>
<bf>use_threadinfo_query</bf><newline>
<tt>static int use_threadinfo_query</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>remote_open_1()
<item>remote_threads_info()
</itemize>
</descrip>
<p>
<bf>use_threadextra_query</bf><newline>
<tt>static int use_threadextra_query</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>remote_open_1()
<item>remote_threads_extra_info()
</itemize>
</descrip>
<p>
<bf>remote_protocol_qPart_auxv</bf><newline>
<tt>static struct packet_config remote_protocol_qPart_auxv</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()
<item>init_all_packet_configs()
<item>remote_xfer_partial()
<item>set_remote_protocol_qPart_auxv_packet_cmd()
<item>show_remote_protocol_qPart_auxv_packet_cmd()
</itemize>
</descrip>
<p>
<bf>remote_protocol_qGetTLSAddr</bf><newline>
<tt>static struct packet_config remote_protocol_qGetTLSAddr</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()
<item>init_all_packet_configs()
<item>remote_get_thread_local_address()
<item>set_remote_protocol_qGetTLSAddr_packet_cmd()
<item>show_remote_protocol_qGetTLSAddr_packet_cmd()
</itemize>
</descrip>
<p>
<bf>remote_protocol_p</bf><newline>
<tt>static struct packet_config remote_protocol_p</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()
<item>init_all_packet_configs()
<item>remote_fetch_registers()
<item>set_remote_protocol_p_packet_cmd()
<item>show_remote_protocol_p_packet_cmd()
</itemize>
</descrip>
<p>
<bf>sigint_remote_twice_token</bf><newline>
<tt>static void* sigint_remote_twice_token</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>cleanup_sigint_signal_handler()
<item>handle_remote_sigint()
<item>handle_remote_sigint_twice()
</itemize>
</descrip>
<p>
<bf>sigint_remote_token</bf><newline>
<tt>static void* sigint_remote_token</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>cleanup_sigint_signal_handler()
<item>handle_remote_sigint()
<item>initialize_sigint_signal_handler()
</itemize>
</descrip>
<p>
<bf>general_thread</bf><newline>
<tt>static int general_thread</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>record_currthread()
<item>remote_open_1()
<item>set_thread()
</itemize>
</descrip>
<p>
<bf>continue_thread</bf><newline>
<tt>static int continue_thread</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>remote_open_1()
<item>set_thread()
</itemize>
</descrip>
<p>
<bf>hexchars</bf><newline>
<tt>static const char hexchars[]</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>pack_hex_byte()
<item>pack_nibble()
</itemize>
</descrip>
<p>
<bf>last_sent_signal</bf><newline>
<tt>static enum target_signal last_sent_signal</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>remote_async_wait()
<item>remote_resume()
<item>remote_wait()
</itemize>
</descrip>
<p>
<bf>last_sent_step</bf><newline>
<tt>static int last_sent_step</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>remote_async_wait()
<item>remote_resume()
<item>remote_wait()
</itemize>
</descrip>
<p>
<bf>ofunc</bf><newline>
<tt>static void (*ofunc)(int)</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>remote_async_wait()
<item>remote_interrupt_twice()
<item>remote_wait()
</itemize>
</descrip>
<p>
<bf>register_bytes_found</bf><newline>
<tt>static int register_bytes_found</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>remote_fetch_registers()
<item>remote_store_registers()
</itemize>
</descrip>
<p>
<bf>crc32_table</bf><newline>
<tt>static unsigned long crc32_table[256]</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>crc32()
</itemize>
</descrip>
<p>
<bf>async_client_callback</bf><newline>
<tt>static void (*async_client_callback)(enum inferior_event_type event_type,void* context)</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>remote_async()
</itemize>
</descrip>
<p>
<bf>async_client_context</bf><newline>
<tt>static void* async_client_context</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>remote_async()
<item>remote_async_serial_handler()
</itemize>
</descrip>
<p>
<bf>remote_async_serial_handler</bf><newline>
<tt>static serial_event_ftype remote_async_serial_handler</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>remote_async()
</itemize>
</descrip>
<p>
<bf>remote_new_objfile_chain</bf><newline>
<tt>static void (*remote_new_objfile_chain)(struct objfile*)</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()
<item>remote_new_objfile()
</itemize>
</descrip>
<p>
<bf>remote_macosx_ops</bf><newline>
<tt>static struct target_ops remote_macosx_ops</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()
<item>init_remote_macosx_ops()
<item>remote_macosx_mourn()
<item>remote_macosx_open()
</itemize>
</descrip>
<p>
<bf>remote_macosx_shortname</bf><newline>
<tt>static const char* remote_macosx_shortname</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>init_remote_macosx_ops()
</itemize>
</descrip>
<p>
<bf>remote_macosx_longname</bf><newline>
<tt>static const char* remote_macosx_longname</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>init_remote_macosx_ops()
</itemize>
</descrip>
<p>
<bf>remote_macosx_doc</bf><newline>
<tt>static const char* remote_macosx_doc</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>init_remote_macosx_ops()
</itemize>
</descrip>
<p>
<bf>remote_macosx_exec_dir</bf><newline>
<tt>static char* remote_macosx_exec_dir</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()
<item>remote_macosx_attach()
<item>remote_macosx_create_inferior()
</itemize>
</descrip>

<sect1>Global Function _initialize_remote()

<p><tt>void _initialize_remote ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>add_packet_config_cmd()  :  remote.c
<item>add_target()  :  target/target.c
<item>deprecated_register_gdbarch_swap()  :  gdbarch.c
<item>gdbarch_data_register_post_init()  :  gdbarch.c
<item>init_extended_async_remote_ops()  :  remote.c
<item>init_extended_remote_ops()  :  remote.c
<item>init_remote_async_ops()  :  remote.c
<item>init_remote_macosx_ops()  :  remote.c
<item>init_remote_ops()  :  remote.c
<item>initialize_remote_fileio()  :  remote-fileio.c
<item>add_cmd(), add_prefix_cmd(), add_setshow_auto_boolean_cmd(), add_setshow_boolean_cmd(), add_setshow_integer_cmd(), add_setshow_string_cmd(), add_setshow_string_noescape_cmd(), add_setshow_zinteger_cmd()
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>build_remote_gdbarch_data()  :  remote.c
<item>compare_sections_command()  :  remote.c
<item>dump_packets_command()  :  remote.c
<item>init_remote_state()  :  remote.c
<item>packet_command()  :  remote.c
<item>remote_new_objfile()  :  remote.c
<item>set_max_remote_packet_size()  :  remote.c
<item>set_memory_read_packet_size()  :  remote.c
<item>set_memory_write_packet_size()  :  remote.c
<item>set_no_ack_mode_cmd()  :  remote.c
<item>set_remote_cmd()  :  remote.c
<item>set_remote_debugflags_command()  :  remote.c
<item>set_remote_protocol_P_packet_cmd()  :  remote.c
<item>set_remote_protocol_Z_access_wp_packet_cmd()  :  remote.c
<item>set_remote_protocol_Z_hardware_bp_packet_cmd()  :  remote.c
<item>set_remote_protocol_Z_packet_cmd()  :  remote.c
<item>set_remote_protocol_Z_read_wp_packet_cmd()  :  remote.c
<item>set_remote_protocol_Z_software_bp_packet_cmd()  :  remote.c
<item>set_remote_protocol_Z_write_wp_packet_cmd()  :  remote.c
<item>set_remote_protocol_binary_download_cmd()  :  remote.c
<item>set_remote_protocol_p_packet_cmd()  :  remote.c
<item>set_remote_protocol_qGetTLSAddr_packet_cmd()  :  remote.c
<item>set_remote_protocol_qPart_auxv_packet_cmd()  :  remote.c
<item>set_remote_protocol_qSymbol_packet_cmd()  :  remote.c
<item>set_remote_protocol_vcont_packet_cmd()  :  remote.c
<item>show_max_remote_packet_size()  :  remote.c
<item>show_memory_read_packet_size()  :  remote.c
<item>show_memory_write_packet_size()  :  remote.c
<item>show_no_ack_mode_cmd()  :  remote.c
<item>show_remote_cmd()  :  remote.c
<item>show_remote_debugflags_command()  :  remote.c
<item>show_remote_protocol_P_packet_cmd()  :  remote.c
<item>show_remote_protocol_Z_access_wp_packet_cmd()  :  remote.c
<item>show_remote_protocol_Z_hardware_bp_packet_cmd()  :  remote.c
<item>show_remote_protocol_Z_packet_cmd()  :  remote.c
<item>show_remote_protocol_Z_read_wp_packet_cmd()  :  remote.c
<item>show_remote_protocol_Z_software_bp_packet_cmd()  :  remote.c
<item>show_remote_protocol_Z_write_wp_packet_cmd()  :  remote.c
<item>show_remote_protocol_binary_download_cmd()  :  remote.c
<item>show_remote_protocol_p_packet_cmd()  :  remote.c
<item>show_remote_protocol_qGetTLSAddr_packet_cmd()  :  remote.c
<item>show_remote_protocol_qPart_auxv_packet_cmd()  :  remote.c
<item>show_remote_protocol_qSymbol_packet_cmd()  :  remote.c
<item>show_remote_protocol_vcont_packet_cmd()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>deprecated_target_new_objfile_hook  :  symfile.c
<item>extended_async_remote_ops  :  remote.c
<item>extended_remote_ops  :  remote.c
<item>remote_Z_packet_detect  :  remote.c
<item>remote_address_size  :  remote.c
<item>remote_async_ops  :  remote.c
<item>remote_break  :  remote.c
<item>remote_debugflags  :  remote.c
<item>remote_gdbarch_data_handle  :  remote.c
<item>remote_hw_breakpoint_limit  :  remote.c
<item>remote_hw_watchpoint_limit  :  remote.c
<item>remote_macosx_exec_dir  :  remote.c
<item>remote_macosx_ops  :  remote.c
<item>remote_new_objfile_chain  :  remote.c
<item>remote_ops  :  remote.c
<item>remote_protocol_P  :  remote.c
<item>remote_protocol_Z  :  remote.c
<item>remote_protocol_binary_download  :  remote.c
<item>remote_protocol_p  :  remote.c
<item>remote_protocol_qGetTLSAddr  :  remote.c
<item>remote_protocol_qPart_auxv  :  remote.c
<item>remote_protocol_qSymbol  :  remote.c
<item>remote_protocol_vcont  :  remote.c
<item>user_requested_no_ack_mode  :  remote.c
<item>cmdlist, maintenancelist, setlist, showlist
</itemize>
</descrip>

<sect1>Global Function async_remote_interrupt_twice()

<p><tt>void async_remote_interrupt_twice ( gdb_client_data arg )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fprintf_unfiltered()  :  utils.c
<item>interrupt_query()  :  remote.c
<item>signal()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>inferior_event_handler()  :  inf-loop.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>handle_remote_sigint()  :  remote.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>handle_remote_sigint()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdlog  :  main.c
<item>remote_debug  :  top.c
<item>target_executing  :  top.c
</itemize>
</descrip>

<sect1>Global Function dump_packets_command()

<p><tt>void dump_packets_command ( const char* unused, int fromtty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>dump_protocol_log()  :  remote.c
<item>error()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_desc  :  remote.c
</itemize>
</descrip>

<sect1>Global Function getpkt()

<p><tt>void getpkt ( char* buf, long sizeof_buf, int forever )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>getpkt_sane()  :  remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>check_binary_download()  :  remote.c
<item>compare_sections_command()  :  remote.c
<item>extended_remote_restart()  :  remote.c
<item>get_offsets()  :  remote.c
<item>packet_command()  :  remote.c
<item>remote_async_wait()  :  remote.c
<item>remote_check_symbols()  :  remote.c
<item>remote_current_thread()  :  remote.c
<item>remote_fetch_registers()  :  remote.c
<item>remote_get_noisy_reply()  :  tracepoint.c
<item>remote_get_thread_local_address()  :  remote.c
<item>remote_get_threadinfo()  :  remote.c
<item>remote_get_threadlist()  :  remote.c
<item>remote_insert_breakpoint()  :  remote.c
<item>remote_insert_hw_breakpoint()  :  remote.c
<item>remote_insert_watchpoint()  :  remote.c
<item>remote_macosx_create_inferior()  :  remote.c
<item>remote_macosx_get_all_image_infos_addr()  :  remote.c
<item>remote_open_1()  :  remote.c
<item>remote_rcmd()  :  remote.c
<item>remote_read_bytes()  :  remote.c
<item>remote_remove_breakpoint()  :  remote.c
<item>remote_remove_hw_breakpoint()  :  remote.c
<item>remote_remove_watchpoint()  :  remote.c
<item>remote_send()  :  remote.c
<item>remote_set_transparent_ranges()  :  tracepoint.c
<item>remote_thread_alive()  :  remote.c
<item>remote_threads_extra_info()  :  remote.c
<item>remote_threads_info()  :  remote.c
<item>remote_vcont_probe()  :  remote.c
<item>remote_wait()  :  remote.c
<item>remote_write_bytes()  :  remote.c
<item>remote_xfer_partial()  :  remote.c
<item>send_disable_aslr()  :  remote.c
<item>send_remote_debugflags_pkt()  :  remote.c
<item>send_remote_max_payload_size()  :  remote.c
<item>set_thread()  :  remote.c
<item>start_no_ack_mode()  :  remote.c
</itemize>
</descrip>

<sect1>Global Function int_to_threadref()

<p><tt>void int_to_threadref ( threadref* id, int value )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_threads_extra_info()  :  remote.c
</itemize>
</descrip>

<sect1>Global Function push_remote_macosx_target()

<p><tt>void push_remote_macosx_target ( char* name, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>target.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>printf_filtered()  :  utils.c
<item>remote_macosx_open()  :  remote.c
</itemize>
</descrip>

<sect1>Global Function push_remote_target()

<p><tt>void push_remote_target ( const char* name, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>target.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>printf_filtered()  :  utils.c
<item>remote_open()  :  remote.c
</itemize>
</descrip>

<sect1>Global Function putpkt()

<p><tt>int putpkt ( const char* buf )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>putpkt_binary()  :  remote.c
<item>strlen()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>compare_sections_command()  :  remote.c
<item>extended_remote_restart()  :  remote.c
<item>finish_tfind_command()  :  tracepoint.c
<item>get_offsets()  :  remote.c
<item>packet_command()  :  remote.c
<item>remote_async_wait()  :  remote.c
<item>remote_check_symbols()  :  remote.c
<item>remote_current_thread()  :  remote.c
<item>remote_fileio_reply()  :  remote-fileio.c
<item>remote_get_thread_local_address()  :  remote.c
<item>remote_get_threadinfo()  :  remote.c
<item>remote_get_threadlist()  :  remote.c
<item>remote_insert_breakpoint()  :  remote.c
<item>remote_insert_hw_breakpoint()  :  remote.c
<item>remote_insert_watchpoint()  :  remote.c
<item>remote_macosx_attach()  :  remote.c
<item>remote_macosx_create_inferior()  :  remote.c
<item>remote_macosx_get_all_image_infos_addr()  :  remote.c
<item>remote_macosx_query_qenvironment_hex_packet_supported()  :  remote.c
<item>remote_open_1()  :  remote.c
<item>remote_rcmd()  :  remote.c
<item>remote_read_bytes()  :  remote.c
<item>remote_remove_breakpoint()  :  remote.c
<item>remote_remove_hw_breakpoint()  :  remote.c
<item>remote_remove_watchpoint()  :  remote.c
<item>remote_resume()  :  remote.c
<item>remote_send()  :  remote.c
<item>remote_set_transparent_ranges()  :  tracepoint.c
<item>remote_start_remote()  :  remote.c
<item>remote_thread_alive()  :  remote.c
<item>remote_threads_extra_info()  :  remote.c
<item>remote_threads_info()  :  remote.c
<item>remote_vcont_probe()  :  remote.c
<item>remote_vcont_resume()  :  remote.c
<item>remote_wait()  :  remote.c
<item>remote_xfer_partial()  :  remote.c
<item>send_disable_aslr()  :  remote.c
<item>send_remote_debugflags_pkt()  :  remote.c
<item>send_remote_max_payload_size()  :  remote.c
<item>set_thread()  :  remote.c
<item>start_no_ack_mode()  :  remote.c
<item>trace_start_command()  :  tracepoint.c
<item>trace_status_command()  :  tracepoint.c
<item>trace_stop_command()  :  tracepoint.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>remote_async_kill()  :  remote.c
<item>remote_kill()  :  remote.c
</itemize>
</descrip>

<sect1>Global Function remote_console_output()

<p><tt>void remote_console_output ( char* msg )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fputs_unfiltered()  :  ui-file.c
<item>fromhex()  :  remote.c
<item>gdb_flush()  :  ui-file.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_async_wait()  :  remote.c
<item>remote_get_noisy_reply()  :  tracepoint.c
<item>remote_rcmd()  :  remote.c
<item>remote_wait()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdtarg  :  main.c
</itemize>
</descrip>

<sect1>Global Function remote_macosx_attach()

<p><tt>void remote_macosx_attach ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>get_remote_state()  :  remote.c
<item>getpkt_sane()  :  remote.c
<item>pack_hex_byte()  :  remote.c
<item>pack_string_as_ascii_hex()  :  remote.c
<item>putpkt()  :  remote.c
<item>remote_macosx_complete_create_or_attach()  :  remote.c
<item>__builtin___snprintf_chk(), __builtin___strncpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_strncpy_chk(), strchr(), strlen(), strstr(), strtol()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_macosx_ops()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_macosx_exec_dir  :  remote.c
</itemize>
</descrip>

<sect1>Global Function remote_macosx_create_inferior()

<p><tt>void remote_macosx_create_inferior ( char* exec_file, char* allargs, char** env, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>breakup_args()  :  utils.c
<item>do_cleanups()  :  utils.c
<item>error()  :  utils.c
<item>get_remote_state()  :  remote.c
<item>getpkt()  :  remote.c
<item>getpkt_sane()  :  remote.c
<item>make_cleanup()  :  utils.c
<item>pack_hex_byte()  :  remote.c
<item>pack_string_as_ascii_hex()  :  remote.c
<item>pop_target()  :  target/target.c
<item>putpkt()  :  remote.c
<item>remote_macosx_complete_create_or_attach()  :  remote.c
<item>remote_macosx_query_qenvironment_hex_packet_supported()  :  remote.c
<item>send_disable_aslr()  :  remote.c
<item>warning()  :  utils.c
<item>xmalloc()  :  utils.c
<item>__builtin___snprintf_chk(), __builtin___strcpy_chk(), __builtin_object_size(), __inline_strcpy_chk(), basename(), strlen(), xstrdup()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_macosx_ops()  :  remote.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>xfree()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_macosx_exec_dir  :  remote.c
<item>remote_timeout  :  top.c
</itemize>
</descrip>

<sect1>Global Function remote_macosx_get_all_image_infos_addr()

<p><tt>CORE_ADDR remote_macosx_get_all_image_infos_addr ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>get_remote_state()  :  remote.c
<item>getpkt()  :  remote.c
<item>putpkt()  :  remote.c
<item>unpack_varlen_hex()  :  remote.c
<item>isxdigit()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_macosx_complete_create_or_attach()  :  remote.c
<item>remote_macosx_open()  :  remote.c
</itemize>
</descrip>

<sect1>Global Function remote_read_bytes()

<p><tt>int remote_read_bytes ( CORE_ADDR memaddr, char* myaddr, int len )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>get_memory_read_packet_size()  :  remote.c
<item>getpkt()  :  remote.c
<item>hex2bin()  :  remote.c
<item>hexnumstr()  :  remote.c
<item>putpkt()  :  remote.c
<item>remote_address_masked()  :  remote.c
<item>__builtin_alloca(), __error(), isxdigit()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_fileio_func_open()  :  remote-fileio.c
<item>remote_fileio_func_rename()  :  remote-fileio.c
<item>remote_fileio_func_stat()  :  remote-fileio.c
<item>remote_fileio_func_system()  :  remote-fileio.c
<item>remote_fileio_func_unlink()  :  remote-fileio.c
<item>remote_fileio_func_write()  :  remote-fileio.c
<item>remote_xfer_memory()  :  remote.c
<item>remote_xfer_partial()  :  remote.c
</itemize>
</descrip>

<sect1>Global Function remote_write_bytes()

<p><tt>int remote_write_bytes ( CORE_ADDR memaddr, const gdb_byte* myaddr, int len )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>bin2hex()  :  remote.c
<item>check_binary_download()  :  remote.c
<item>get_memory_write_packet_size()  :  remote.c
<item>getpkt()  :  remote.c
<item>hexnumlen()  :  remote.c
<item>hexnumnstr()  :  remote.c
<item>hexnumstr()  :  remote.c
<item>internal_error()  :  utils.c
<item>putpkt_binary()  :  remote.c
<item>remote_address_masked()  :  remote.c
<item>__builtin_alloca(), __error(), strlen()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_fileio_write_bytes()  :  remote-fileio.c
<item>remote_xfer_memory()  :  remote.c
<item>remote_xfer_partial()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_protocol_binary_download  :  remote.c
</itemize>
</descrip>

<sect1>Global Function unpack_varlen_hex()

<p><tt>char* unpack_varlen_hex ( char* buff, unsigned long* result )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>ishex()  :  remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_async_wait()  :  remote.c
<item>remote_get_thread_local_address()  :  remote.c
<item>remote_macosx_get_all_image_infos_addr()  :  remote.c
<item>remote_wait()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function add_incoming_pkt_to_protocol_log()

<p><tt>static void add_incoming_pkt_to_protocol_log ( const char* p )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>add_pkt_to_protocol_log()  :  remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>getpkt_sane()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function add_outgoing_pkt_to_protocol_log()

<p><tt>static void add_outgoing_pkt_to_protocol_log ( const char* p )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>add_pkt_to_protocol_log()  :  remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>putpkt_binary()  :  remote.c
<item>remote_start_remote()  :  remote.c
<item>remote_stop()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function add_packet_config_cmd()

<p><tt>static void add_packet_config_cmd ( struct packet_config* config, const char* name, const char* title, cmd_sfunc_ftype* set_func, show_value_ftype* show_func, struct cmd_list_element** set_remote_list, struct cmd_list_element** show_remote_list, int legacy )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>xstrprintf()  :  utils.c
<item>add_alias_cmd(), add_setshow_auto_boolean_cmd()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function add_pkt_to_protocol_log()

<p><tt>static void add_pkt_to_protocol_log ( const char* p, enum pkt_direction direction )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>__builtin___strcpy_chk(), __builtin___strncpy_chk(), __builtin_object_size(), __inline_strcpy_chk(), __inline_strncpy_chk(), gettimeofday()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>add_incoming_pkt_to_protocol_log()  :  remote.c
<item>add_outgoing_pkt_to_protocol_log()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_remote_stats  :  remote.c
<item>protocol_log  :  remote.c
</itemize>
</descrip>

<sect1>Local Function async_remote_interrupt()

<p><tt>static void async_remote_interrupt ( gdb_client_data arg )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fprintf_unfiltered()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>initialize_sigint_signal_handler()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_target  :  target/target.c
<item>gdb_stdlog  :  main.c
<item>remote_debug  :  top.c
</itemize>
</descrip>

<sect1>Local Function bin2hex()

<p><tt>static int bin2hex ( const char* bin, char* hex, int count )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>tohex()  :  remote.c
<item>strlen()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_rcmd()  :  remote.c
<item>remote_store_registers()  :  remote.c
<item>remote_write_bytes()  :  remote.c
<item>store_register_using_P()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function build_remote_gdbarch_data()

<p><tt>static void build_remote_gdbarch_data ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>gdbarch_addr_bit()  :  gdbarch.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
<item>remote_address_size  :  remote.c
</itemize>
</descrip>

<sect1>Local Function check_binary_download()

<p><tt>static void check_binary_download ( CORE_ADDR addr )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fprintf_unfiltered()  :  utils.c
<item>get_remote_state()  :  remote.c
<item>getpkt()  :  remote.c
<item>hexnumstr()  :  remote.c
<item>putpkt_binary()  :  remote.c
<item>__builtin_alloca()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_write_bytes()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdlog  :  main.c
<item>remote_debug  :  top.c
<item>remote_protocol_binary_download  :  remote.c
</itemize>
</descrip>

<sect1>Local Function cleanup_sigint_signal_handler()

<p><tt>static void cleanup_sigint_signal_handler ( void* dummy )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>delete_async_signal_handler()  :  event-loop.c
<item>signal()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_async_terminal_ours()  :  remote.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>handle_sigint()  :  event-top.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>sigint_remote_token  :  remote.c
<item>sigint_remote_twice_token  :  remote.c
</itemize>
</descrip>

<sect1>Local Function compare_sections_command()

<p><tt>static void compare_sections_command ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>crc32()  :  remote.c
<item>do_cleanups()  :  utils.c
<item>error()  :  utils.c
<item>fromhex()  :  remote.c
<item>get_remote_state()  :  remote.c
<item>getpkt()  :  remote.c
<item>make_cleanup()  :  utils.c
<item>paddr()  :  utils.c
<item>printf_filtered()  :  utils.c
<item>putpkt()  :  remote.c
<item>warning()  :  utils.c
<item>xmalloc()  :  utils.c
<item>xsnprintf()  :  utils.c
<item>__builtin_alloca(), bfd_get_section_contents(), strcmp()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>xfree()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_target  :  target/target.c
<item>exec_bfd
</itemize>
</descrip>

<sect1>Local Function copy_threadref()

<p><tt>static void copy_threadref ( threadref* dest, threadref* src )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_threadlist_iterator()  :  remote.c
<item>remote_unpack_thread_info_response()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function crc32()

<p><tt>static unsigned long crc32 ( unsigned char* buf, int len, unsigned int crc )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>compare_sections_command()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>crc32_table  :  remote.c
</itemize>
</descrip>

<sect1>Local Function dump_protocol_log()

<p><tt>static void dump_protocol_log ( const char* message )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>fprintf_filtered()  :  utils.c
<item>isprint()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>dump_packets_command()  :  remote.c
<item>fromhex()  :  remote.c
<item>putpkt_binary()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stderr  :  main.c
<item>protocol_log  :  remote.c
</itemize>
</descrip>

<sect1>Local Function end_remote_timer()

<p><tt>static void end_remote_timer ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>__builtin___memcpy_chk(), __builtin_object_size(), __inline_memcpy_chk(), gettimeofday()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>getpkt_sane()  :  remote.c
<item>putpkt_binary()  :  remote.c
<item>readchar()  :  remote.c
<item>remote_start_remote()  :  remote.c
<item>remote_stop()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_remote_stats  :  remote.c
</itemize>
</descrip>

<sect1>Local Function extended_remote_async_create_inferior()

<p><tt>static void extended_remote_async_create_inferior ( char* exec_file, char* args, char** env, int from_tty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>clear_proceed_status()  :  infrun.c
<item>extended_remote_restart()  :  remote.c
<item>insert_breakpoints()  :  breakpoint.c
<item>proceed()  :  infrun.c
<item>remove_breakpoints()  :  breakpoint.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_extended_async_remote_ops()  :  remote.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>inferior_event_handler()  :  inf-loop.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_target  :  target/target.c
<item>gdb_override_async  :  target/target.c
</itemize>
</descrip>

<sect1>Local Function extended_remote_async_open()

<p><tt>static void extended_remote_async_open ( const char* name, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>remote_open_1()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_extended_async_remote_ops()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>extended_async_remote_ops  :  remote.c
</itemize>
</descrip>

<sect1>Local Function extended_remote_create_inferior()

<p><tt>static void extended_remote_create_inferior ( char* exec_file, char* args, char** env, int from_tty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>clear_proceed_status()  :  infrun.c
<item>extended_remote_restart()  :  remote.c
<item>insert_breakpoints()  :  breakpoint.c
<item>proceed()  :  infrun.c
<item>remove_breakpoints()  :  breakpoint.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_extended_remote_ops()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function extended_remote_mourn()

<p><tt>static void extended_remote_mourn ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_extended_async_remote_ops()  :  remote.c
<item>init_extended_remote_ops()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function extended_remote_open()

<p><tt>static void extended_remote_open ( const char* name, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>remote_open_1()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_extended_remote_ops()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>extended_remote_ops  :  remote.c
</itemize>
</descrip>

<sect1>Local Function extended_remote_restart()

<p><tt>static void extended_remote_restart ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>get_remote_state()  :  remote.c
<item>getpkt()  :  remote.c
<item>putpkt()  :  remote.c
<item>xsnprintf()  :  utils.c
<item>__builtin_alloca()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>extended_remote_async_create_inferior()  :  remote.c
<item>extended_remote_create_inferior()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function fetch_register_using_p()

<p><tt>static int fetch_register_using_p ( int regnum )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>fromhex()  :  remote.c
<item>get_remote_state()  :  remote.c
<item>hexnumstr()  :  remote.c
<item>regcache_raw_supply()  :  regcache.c
<item>remote_send()  :  remote.c
<item>set_register_cached()  :  regcache.c
<item>__builtin_alloca()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_fetch_registers()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_regcache  :  regcache.c
</itemize>
</descrip>

<sect1>Local Function fromhex()

<p><tt>static int fromhex ( int a )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>dump_protocol_log()  :  remote.c
<item>error()  :  utils.c
<item>remote_backtrace_self()  :  remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>compare_sections_command()  :  remote.c
<item>fetch_register_using_p()  :  remote.c
<item>get_offsets()  :  remote.c
<item>hex2bin()  :  remote.c
<item>read_frame()  :  remote.c
<item>remote_async_wait()  :  remote.c
<item>remote_console_output()  :  remote.c
<item>remote_fetch_registers()  :  remote.c
<item>remote_rcmd()  :  remote.c
<item>remote_wait()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function get_memory_packet_size()

<p><tt>static size_t get_memory_packet_size ( struct memory_packet_config* config )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>get_remote_state()  :  remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>get_memory_read_packet_size()  :  remote.c
<item>get_memory_write_packet_size()  :  remote.c
<item>show_memory_packet_size()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function get_memory_read_packet_size()

<p><tt>static size_t get_memory_read_packet_size ( void )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>get_memory_packet_size()  :  remote.c
<item>get_remote_state()  :  remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_read_bytes()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>memory_read_packet_config  :  remote.c
</itemize>
</descrip>

<sect1>Local Function get_memory_write_packet_size()

<p><tt>static long get_memory_write_packet_size ( void )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>get_memory_packet_size()  :  remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_write_bytes()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>memory_write_packet_config  :  remote.c
</itemize>
</descrip>

<sect1>Local Function get_offsets()

<p><tt>static void get_offsets ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>executable_objfile()  :  objfiles.c
<item>fromhex()  :  remote.c
<item>get_remote_state()  :  remote.c
<item>getpkt()  :  remote.c
<item>internal_error()  :  utils.c
<item>objfile_relocate()  :  objfiles.c
<item>putpkt()  :  remote.c
<item>warning()  :  utils.c
<item>__builtin___memcpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_memcpy_chk(), strncmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_start_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>symfile_objfile  :  objfiles.c
</itemize>
</descrip>

<sect1>Local Function get_remote_state()

<p><tt>static struct remote_state* get_remote_state ( void )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>new_gdbarch_data()  :  gdbarch.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>check_binary_download()  :  remote.c
<item>compare_sections_command()  :  remote.c
<item>extended_remote_restart()  :  remote.c
<item>fetch_register_using_p()  :  remote.c
<item>get_memory_packet_size()  :  remote.c
<item>get_memory_read_packet_size()  :  remote.c
<item>get_offsets()  :  remote.c
<item>packet_command()  :  remote.c
<item>parse_threadlist_response()  :  remote.c
<item>putpkt_binary()  :  remote.c
<item>remote_async_wait()  :  remote.c
<item>remote_check_symbols()  :  remote.c
<item>remote_current_thread()  :  remote.c
<item>remote_detach()  :  remote.c
<item>remote_fetch_registers()  :  remote.c
<item>remote_get_thread_local_address()  :  remote.c
<item>remote_get_threadinfo()  :  remote.c
<item>remote_get_threadlist()  :  remote.c
<item>remote_insert_breakpoint()  :  remote.c
<item>remote_insert_hw_breakpoint()  :  remote.c
<item>remote_insert_watchpoint()  :  remote.c
<item>remote_macosx_attach()  :  remote.c
<item>remote_macosx_complete_create_or_attach()  :  remote.c
<item>remote_macosx_create_inferior()  :  remote.c
<item>remote_macosx_get_all_image_infos_addr()  :  remote.c
<item>remote_macosx_query_qenvironment_hex_packet_supported()  :  remote.c
<item>remote_open_1()  :  remote.c
<item>remote_prepare_to_store()  :  remote.c
<item>remote_rcmd()  :  remote.c
<item>remote_remove_breakpoint()  :  remote.c
<item>remote_remove_hw_breakpoint()  :  remote.c
<item>remote_remove_watchpoint()  :  remote.c
<item>remote_resume()  :  remote.c
<item>remote_start_remote()  :  remote.c
<item>remote_store_registers()  :  remote.c
<item>remote_threads_extra_info()  :  remote.c
<item>remote_threads_info()  :  remote.c
<item>remote_unpack_thread_info_response()  :  remote.c
<item>remote_vcont_resume()  :  remote.c
<item>remote_wait()  :  remote.c
<item>remote_xfer_partial()  :  remote.c
<item>send_disable_aslr()  :  remote.c
<item>send_remote_max_payload_size()  :  remote.c
<item>set_thread()  :  remote.c
<item>store_register_using_P()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
<item>remote_gdbarch_data_handle  :  remote.c
</itemize>
</descrip>

<sect1>Local Function getpkt_sane()

<p><tt>static int getpkt_sane ( char* buf, long sizeof_buf, int forever )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>add_incoming_pkt_to_protocol_log()  :  remote.c
<item>end_remote_timer()  :  remote.c
<item>error()  :  utils.c
<item>fprintf_unfiltered()  :  utils.c
<item>fputs_filtered()  :  utils.c
<item>fputstr_unfiltered()  :  utils.c
<item>printf_unfiltered()  :  utils.c
<item>quit()  :  utils.c
<item>read_frame()  :  remote.c
<item>readchar()  :  remote.c
<item>serial_write()  :  serial.c
<item>start_remote_timer()  :  remote.c
<item>__builtin___strcpy_chk(), __builtin_object_size(), __inline_strcpy_chk()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>getpkt()  :  remote.c
<item>remote_macosx_attach()  :  remote.c
<item>remote_macosx_create_inferior()  :  remote.c
<item>remote_macosx_query_qenvironment_hex_packet_supported()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_remote_stats  :  remote.c
<item>current_target  :  target/target.c
<item>gdb_stdlog  :  main.c
<item>no_ack_mode  :  remote.c
<item>quit_flag  :  utils.c
<item>remote_debug  :  top.c
<item>remote_desc  :  remote.c
<item>remote_timeout  :  top.c
<item>total_packets_received  :  remote.c
<item>watchdog  :  maint.c
</itemize>
</descrip>

<sect1>Local Function handle_remote_sigint()

<p><tt>static void handle_remote_sigint ( int sig )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>create_async_signal_handler()  :  event-loop.c
<item>mark_async_signal_handler_wrapper()  :  event-top.c
<item>signal()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>async_remote_interrupt_twice()  :  remote.c
<item>initialize_sigint_signal_handler()  :  remote.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>async_remote_interrupt_twice()  :  remote.c
<item>handle_remote_sigint_twice()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>sigint_remote_token  :  remote.c
<item>sigint_remote_twice_token  :  remote.c
</itemize>
</descrip>

<sect1>Local Function handle_remote_sigint_twice()

<p><tt>static void handle_remote_sigint_twice ( int sig )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>create_async_signal_handler()  :  event-loop.c
<item>mark_async_signal_handler_wrapper()  :  event-top.c
<item>signal()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>handle_remote_sigint()  :  remote.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>handle_sigint()  :  event-top.c
<item>inferior_event_handler_wrapper()  :  inf-loop.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>sigint_remote_twice_token  :  remote.c
</itemize>
</descrip>

<sect1>Local Function hex2bin()

<p><tt>static int hex2bin ( const char* hex, char* bin, int count )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fromhex()  :  remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_async_wait()  :  remote.c
<item>remote_check_symbols()  :  remote.c
<item>remote_read_bytes()  :  remote.c
<item>remote_threads_extra_info()  :  remote.c
<item>remote_wait()  :  remote.c
<item>remote_xfer_partial()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function hexnumlen()

<p><tt>static int hexnumlen ( unsigned long num )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>hexnumstr()  :  remote.c
<item>remote_write_bytes()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function hexnumnstr()

<p><tt>static int hexnumnstr ( char* buf, unsigned long num, int width )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>hexnumstr()  :  remote.c
<item>remote_write_bytes()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function hexnumstr()

<p><tt>static int hexnumstr ( char* buf, unsigned long num )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>hexnumlen()  :  remote.c
<item>hexnumnstr()  :  remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>check_binary_download()  :  remote.c
<item>fetch_register_using_p()  :  remote.c
<item>remote_get_thread_local_address()  :  remote.c
<item>remote_insert_breakpoint()  :  remote.c
<item>remote_insert_hw_breakpoint()  :  remote.c
<item>remote_insert_watchpoint()  :  remote.c
<item>remote_read_bytes()  :  remote.c
<item>remote_remove_breakpoint()  :  remote.c
<item>remote_remove_hw_breakpoint()  :  remote.c
<item>remote_remove_watchpoint()  :  remote.c
<item>remote_write_bytes()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function init_all_packet_configs()

<p><tt>static void init_all_packet_configs ( void )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>update_packet_config()  :  remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_open_1()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_protocol_P  :  remote.c
<item>remote_protocol_Z  :  remote.c
<item>remote_protocol_binary_download  :  remote.c
<item>remote_protocol_p  :  remote.c
<item>remote_protocol_qGetTLSAddr  :  remote.c
<item>remote_protocol_qPart_auxv  :  remote.c
<item>remote_protocol_qSymbol  :  remote.c
<item>remote_protocol_vcont  :  remote.c
</itemize>
</descrip>

<sect1>Local Function init_extended_async_remote_ops()

<p><tt>static void init_extended_async_remote_ops ( void )</tt><newline>
<descrip>
<tag>Called by:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>extended_remote_async_create_inferior()  :  remote.c
<item>extended_remote_async_open()  :  remote.c
<item>extended_remote_mourn()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>extended_async_remote_ops  :  remote.c
<item>remote_async_ops  :  remote.c
</itemize>
</descrip>

<sect1>Local Function init_extended_remote_ops()

<p><tt>static void init_extended_remote_ops ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>extended_remote_create_inferior()  :  remote.c
<item>extended_remote_mourn()  :  remote.c
<item>extended_remote_open()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>extended_remote_ops  :  remote.c
<item>remote_ops  :  remote.c
</itemize>
</descrip>

<sect1>Local Function init_remote_async_ops()

<p><tt>static void init_remote_async_ops ( void )</tt><newline>
<descrip>
<tag>Called by:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>generic_load()  :  symfile.c
<item>remote_async()  :  remote.c
<item>remote_async_kill()  :  remote.c
<item>remote_async_mourn()  :  remote.c
<item>remote_async_open()  :  remote.c
<item>remote_async_resume()  :  remote.c
<item>remote_async_terminal_inferior()  :  remote.c
<item>remote_async_terminal_ours()  :  remote.c
<item>remote_async_wait()  :  remote.c
<item>remote_can_async_p()  :  remote.c
<item>remote_check_watch_resources()  :  remote.c
<item>remote_close()  :  remote.c
<item>remote_detach()  :  remote.c
<item>remote_disconnect()  :  remote.c
<item>remote_fetch_registers()  :  remote.c
<item>remote_files_info()  :  remote.c
<item>remote_insert_breakpoint()  :  remote.c
<item>remote_insert_hw_breakpoint()  :  remote.c
<item>remote_insert_watchpoint()  :  remote.c
<item>remote_is_async_p()  :  remote.c
<item>remote_pid_to_str()  :  remote.c
<item>remote_prepare_to_store()  :  remote.c
<item>remote_rcmd()  :  remote.c
<item>remote_remove_breakpoint()  :  remote.c
<item>remote_remove_hw_breakpoint()  :  remote.c
<item>remote_remove_watchpoint()  :  remote.c
<item>remote_stop()  :  remote.c
<item>remote_stopped_by_watchpoint()  :  remote.c
<item>remote_stopped_data_address()  :  remote.c
<item>remote_store_registers()  :  remote.c
<item>remote_thread_alive()  :  remote.c
<item>remote_threads_extra_info()  :  remote.c
<item>remote_threads_info()  :  remote.c
<item>remote_xfer_memory()  :  remote.c
<item>remote_xfer_partial()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_async_ops  :  remote.c
</itemize>
</descrip>

<sect1>Local Function init_remote_macosx_ops()

<p><tt>static void init_remote_macosx_ops ( void )</tt><newline>
<descrip>
<tag>Called by:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>objc_setup_safe_print()  :  objc-lang.c
<item>remote_detach()  :  remote.c
<item>remote_macosx_attach()  :  remote.c
<item>remote_macosx_create_inferior()  :  remote.c
<item>remote_macosx_mourn()  :  remote.c
<item>remote_macosx_open()  :  remote.c
<item>dyld_is_objfile_loaded(), dyld_lookup_and_bind_function(), macosx_check_safe_call(), macosx_enable_exception_callback(), macosx_find_exception_catchpoints(), macosx_get_current_exception_event(), macosx_load_dylib()
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_macosx_doc  :  remote.c
<item>remote_macosx_longname  :  remote.c
<item>remote_macosx_ops  :  remote.c
<item>remote_macosx_shortname  :  remote.c
<item>remote_ops  :  remote.c
</itemize>
</descrip>

<sect1>Local Function init_remote_ops()

<p><tt>static void init_remote_ops ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>generic_load()  :  symfile.c
<item>remote_check_watch_resources()  :  remote.c
<item>remote_close()  :  remote.c
<item>remote_detach()  :  remote.c
<item>remote_disconnect()  :  remote.c
<item>remote_fetch_registers()  :  remote.c
<item>remote_files_info()  :  remote.c
<item>remote_get_thread_local_address()  :  remote.c
<item>remote_insert_breakpoint()  :  remote.c
<item>remote_insert_hw_breakpoint()  :  remote.c
<item>remote_insert_watchpoint()  :  remote.c
<item>remote_kill()  :  remote.c
<item>remote_mourn()  :  remote.c
<item>remote_open()  :  remote.c
<item>remote_pid_to_str()  :  remote.c
<item>remote_prepare_to_store()  :  remote.c
<item>remote_rcmd()  :  remote.c
<item>remote_remove_breakpoint()  :  remote.c
<item>remote_remove_hw_breakpoint()  :  remote.c
<item>remote_remove_watchpoint()  :  remote.c
<item>remote_resume()  :  remote.c
<item>remote_stop()  :  remote.c
<item>remote_stopped_by_watchpoint()  :  remote.c
<item>remote_stopped_data_address()  :  remote.c
<item>remote_store_registers()  :  remote.c
<item>remote_thread_alive()  :  remote.c
<item>remote_threads_extra_info()  :  remote.c
<item>remote_threads_info()  :  remote.c
<item>remote_wait()  :  remote.c
<item>remote_xfer_memory()  :  remote.c
<item>remote_xfer_partial()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_ops  :  remote.c
</itemize>
</descrip>

<sect1>Local Function init_remote_state()

<p><tt>static void* init_remote_state ( struct gdbarch* gdbarch )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>gdbarch_deprecated_register_byte()  :  gdbarch.c
<item>gdbarch_num_pseudo_regs()  :  gdbarch.c
<item>gdbarch_num_regs()  :  gdbarch.c
<item>gdbarch_obstack_zalloc()  :  gdbarch.c
<item>initialize_protocol_log()  :  remote.c
<item>register_size()  :  regcache.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
<item>g_max_remote_packet_size  :  remote.c
</itemize>
</descrip>

<sect1>Local Function initialize_protocol_log()

<p><tt>static void initialize_protocol_log ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xfree()  :  utils.c
<item>xmalloc()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>init_remote_state()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>protocol_log  :  remote.c
</itemize>
</descrip>

<sect1>Local Function initialize_sigint_signal_handler()

<p><tt>static void initialize_sigint_signal_handler ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>create_async_signal_handler()  :  event-loop.c
<item>signal()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_async_terminal_inferior()  :  remote.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>async_remote_interrupt()  :  remote.c
<item>handle_remote_sigint()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>sigint_remote_token  :  remote.c
</itemize>
</descrip>

<sect1>Local Function interrupt_query()

<p><tt>static void interrupt_query ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>query()  :  utils.c
<item>deprecated_throw_reason()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>async_remote_interrupt_twice()  :  remote.c
<item>remote_interrupt_twice()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_target  :  target/target.c
</itemize>
</descrip>

<sect1>Local Function ishex()

<p><tt>static int ishex ( int ch, int* val )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>unpack_nibble()  :  remote.c
<item>unpack_varlen_hex()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function pack_hex_byte()

<p><tt>static char* pack_hex_byte ( char* pkt, int byte )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>pack_int()  :  remote.c
<item>pack_string_as_ascii_hex()  :  remote.c
<item>pack_threadid()  :  remote.c
<item>pack_threadlist_request()  :  remote.c
<item>remote_macosx_attach()  :  remote.c
<item>remote_macosx_create_inferior()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>hexchars  :  remote.c
</itemize>
</descrip>

<sect1>Local Function pack_int()

<p><tt>static char* pack_int ( char* buf, int value )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>pack_hex_byte()  :  remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>pack_threadinfo_request()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function pack_nibble()

<p><tt>static char* pack_nibble ( char* buf, int nibble )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>pack_threadlist_request()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>hexchars  :  remote.c
</itemize>
</descrip>

<sect1>Local Function pack_string_as_ascii_hex()

<p><tt>static char* pack_string_as_ascii_hex ( char* pkt, const char* str, const char* end )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>pack_hex_byte()  :  remote.c
<item>strlen()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_macosx_attach()  :  remote.c
<item>remote_macosx_create_inferior()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function pack_threadid()

<p><tt>static char* pack_threadid ( char* pkt, threadref* id )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>pack_hex_byte()  :  remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>pack_threadinfo_request()  :  remote.c
<item>pack_threadlist_request()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function pack_threadinfo_request()

<p><tt>static char* pack_threadinfo_request ( char* pkt, int mode, threadref* id )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>pack_int()  :  remote.c
<item>pack_threadid()  :  remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_get_threadinfo()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function pack_threadlist_request()

<p><tt>static char* pack_threadlist_request ( char* pkt, int startflag, int threadcount, threadref* nextthread )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>pack_hex_byte()  :  remote.c
<item>pack_nibble()  :  remote.c
<item>pack_threadid()  :  remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_get_threadlist()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function packet_command()

<p><tt>static void packet_command ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>get_remote_state()  :  remote.c
<item>getpkt()  :  remote.c
<item>print_packet()  :  remote.c
<item>putpkt()  :  remote.c
<item>puts_filtered()  :  utils.c
<item>__builtin_alloca()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_desc  :  remote.c
</itemize>
</descrip>

<sect1>Local Function packet_ok()

<p><tt>static enum packet_result packet_ok ( const char* buf, struct packet_config* config )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>fprintf_unfiltered()  :  utils.c
<item>gdb_check_fatal()  :  utils.c
<item>internal_error()  :  utils.c
<item>isxdigit()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_check_symbols()  :  remote.c
<item>remote_get_thread_local_address()  :  remote.c
<item>remote_insert_breakpoint()  :  remote.c
<item>remote_insert_hw_breakpoint()  :  remote.c
<item>remote_insert_watchpoint()  :  remote.c
<item>remote_remove_hw_breakpoint()  :  remote.c
<item>remote_remove_watchpoint()  :  remote.c
<item>remote_vcont_probe()  :  remote.c
<item>remote_xfer_partial()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdlog  :  main.c
<item>remote_debug  :  top.c
</itemize>
</descrip>

<sect1>Local Function packet_reg_from_pnum()

<p><tt>static struct packet_reg* packet_reg_from_pnum ( struct remote_state* rs, long pnum )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>gdbarch_num_pseudo_regs()  :  gdbarch.c
<item>gdbarch_num_regs()  :  gdbarch.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_async_wait()  :  remote.c
<item>remote_wait()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
</itemize>
</descrip>

<sect1>Local Function packet_reg_from_regnum()

<p><tt>static struct packet_reg* packet_reg_from_regnum ( struct remote_state* rs, long regnum )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>gdbarch_num_pseudo_regs()  :  gdbarch.c
<item>gdbarch_num_regs()  :  gdbarch.c
<item>internal_error()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_fetch_registers()  :  remote.c
<item>store_register_using_P()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
</itemize>
</descrip>

<sect1>Local Function parse_threadlist_response()

<p><tt>static int parse_threadlist_response ( char* pkt, int result_limit, threadref* original_echo, threadref* resultlist, int* doneflag )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>get_remote_state()  :  remote.c
<item>unpack_byte()  :  remote.c
<item>unpack_nibble()  :  remote.c
<item>unpack_threadid()  :  remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_get_threadlist()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function print_packet()

<p><tt>static void print_packet ( const char* buf )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fputstr_filtered()  :  utils.c
<item>puts_filtered()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>packet_command()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdout  :  main.c
</itemize>
</descrip>

<sect1>Local Function putpkt_binary()

<p><tt>static int putpkt_binary ( const char* buf, int cnt )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>add_outgoing_pkt_to_protocol_log()  :  remote.c
<item>dump_protocol_log()  :  remote.c
<item>end_remote_timer()  :  remote.c
<item>fprintf_unfiltered()  :  utils.c
<item>fputc_unfiltered()  :  utils.c
<item>fputstrn_unfiltered()  :  utils.c
<item>gdb_flush()  :  ui-file.c
<item>get_remote_state()  :  remote.c
<item>perror_with_name()  :  utils.c
<item>putchar_unfiltered()  :  utils.c
<item>read_frame()  :  remote.c
<item>readchar()  :  remote.c
<item>remote_backtrace_self()  :  remote.c
<item>serial_write()  :  serial.c
<item>start_remote_timer()  :  remote.c
<item>tohex()  :  remote.c
<item>__builtin_alloca()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>check_binary_download()  :  remote.c
<item>putpkt()  :  remote.c
<item>remote_write_bytes()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_remote_stats  :  remote.c
<item>gdb_stdlog  :  main.c
<item>no_ack_mode  :  remote.c
<item>remote_debug  :  top.c
<item>remote_desc  :  remote.c
<item>remote_timeout  :  top.c
<item>total_packets_sent  :  remote.c
</itemize>
</descrip>

<sect1>Local Function read_frame()

<p><tt>static long read_frame ( char* buf, long sizeof_buf )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fprintf_filtered()  :  utils.c
<item>fputs_filtered()  :  utils.c
<item>fromhex()  :  remote.c
<item>printf_filtered()  :  utils.c
<item>puts_filtered()  :  utils.c
<item>readchar()  :  remote.c
<item>__builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>getpkt_sane()  :  remote.c
<item>putpkt_binary()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdlog  :  main.c
<item>no_ack_mode  :  remote.c
<item>remote_debug  :  top.c
<item>remote_timeout  :  top.c
</itemize>
</descrip>

<sect1>Local Function readchar()

<p><tt>static int readchar ( int timeout )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>end_remote_timer()  :  remote.c
<item>error()  :  utils.c
<item>perror_with_name()  :  utils.c
<item>serial_readchar()  :  serial.c
<item>start_remote_timer()  :  remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>getpkt_sane()  :  remote.c
<item>putpkt_binary()  :  remote.c
<item>read_frame()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_target  :  target/target.c
<item>remote_desc  :  remote.c
</itemize>
</descrip>

<sect1>Local Function record_currthread()

<p><tt>static void record_currthread ( int currthread )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>add_thread()  :  thread.c
<item>in_thread_list()  :  thread.c
<item>ptid_build()  :  infrun.c
<item>ui_out_text()  :  ui-out.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_async_wait()  :  remote.c
<item>remote_wait()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_target  :  target/target.c
<item>general_thread  :  remote.c
<item>uiout  :  ui-out.c
</itemize>
</descrip>

<sect1>Local Function remote_address_masked()

<p><tt>static CORE_ADDR remote_address_masked ( CORE_ADDR addr )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_insert_breakpoint()  :  remote.c
<item>remote_insert_hw_breakpoint()  :  remote.c
<item>remote_insert_watchpoint()  :  remote.c
<item>remote_read_bytes()  :  remote.c
<item>remote_remove_breakpoint()  :  remote.c
<item>remote_remove_hw_breakpoint()  :  remote.c
<item>remote_remove_watchpoint()  :  remote.c
<item>remote_write_bytes()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_address_size  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_async()

<p><tt>static void remote_async ( void (*callback)(enum inferior_event_type event_type,void* context), void* context )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
<item>serial_async()  :  serial.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_async_ops()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>async_client_callback  :  remote.c
<item>async_client_context  :  remote.c
<item>current_target  :  target/target.c
<item>remote_async_serial_handler  :  remote.c
<item>remote_desc  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_async_kill()

<p><tt>static void remote_async_kill ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>serial_async()  :  serial.c
<item>catch_errors()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_async_ops()  :  remote.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>putpkt()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_target  :  target/target.c
<item>kill_kludge  :  remote.c
<item>remote_desc  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_async_mourn()

<p><tt>static void remote_async_mourn ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>remote_mourn_1()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_async_ops()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_async_ops  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_async_open()

<p><tt>static void remote_async_open ( const char* name, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>remote_open_1()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_async_ops()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_async_ops  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_async_resume()

<p><tt>static void remote_async_resume ( ptid_t ptid, int step, enum target_signal siggnal )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>remote_resume()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_async_ops()  :  remote.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>inferior_event_handler()  :  inf-loop.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_target  :  target/target.c
<item>gdb_override_async  :  target/target.c
<item>target_executing  :  top.c
</itemize>
</descrip>

<sect1>Local Function remote_async_serial_handler()

<p><tt>static void remote_async_serial_handler ( struct serial* scb, void* context )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>async_client_callback()
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>async_client_context  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_async_terminal_inferior()

<p><tt>static void remote_async_terminal_inferior ( void )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>delete_file_handler()  :  event-loop.c
<item>initialize_sigint_signal_handler()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_async_ops()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>input_fd  :  event-top.c
<item>remote_async_terminal_ours_p  :  remote.c
<item>sync_execution  :  infrun.c
</itemize>
</descrip>

<sect1>Local Function remote_async_terminal_ours()

<p><tt>static void remote_async_terminal_ours ( void )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>add_file_handler()  :  event-loop.c
<item>cleanup_sigint_signal_handler()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_async_ops()  :  remote.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>stdin_event_handler()  :  event-top.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>input_fd  :  event-top.c
<item>remote_async_terminal_ours_p  :  remote.c
<item>sync_execution  :  infrun.c
</itemize>
</descrip>

<sect1>Local Function remote_async_wait()

<p><tt>static ptid_t remote_async_wait ( ptid_t ptid, struct target_waitstatus* status, gdb_client_data client_data )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>fromhex()  :  remote.c
<item>get_remote_state()  :  remote.c
<item>getpkt()  :  remote.c
<item>hex2bin()  :  remote.c
<item>packet_reg_from_pnum()  :  remote.c
<item>printf_filtered()  :  utils.c
<item>ptid_build()  :  infrun.c
<item>putpkt()  :  remote.c
<item>record_currthread()  :  remote.c
<item>regcache_raw_supply()  :  regcache.c
<item>register_size()  :  regcache.c
<item>remote_console_output()  :  remote.c
<item>remote_fileio_request()  :  remote-fileio.c
<item>unpack_varlen_hex()  :  remote.c
<item>warning()  :  utils.c
<item>__builtin___strcpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_strcpy_chk(), signal(), strchr(), strlen(), strncmp(), strtol(), target_signal_to_name()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_async_ops()  :  remote.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>remote_interrupt()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
<item>current_regcache  :  regcache.c
<item>current_target  :  target/target.c
<item>deprecated_target_wait_loop_hook  :  remote.c
<item>inferior_ptid  :  infcmd.c
<item>kill_kludge  :  remote.c
<item>last_sent_signal  :  remote.c
<item>last_sent_step  :  remote.c
<item>ofunc  :  remote.c
<item>remote_stopped_by_watchpoint_p  :  remote.c
<item>remote_watch_data_address  :  remote.c
<item>wait_forever_enabled_p  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_backtrace_self()

<p><tt>static void remote_backtrace_self ( const char* message )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>fprintf_filtered()  :  utils.c
<item>backtrace(), backtrace_symbols_fd()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>fromhex()  :  remote.c
<item>putpkt_binary()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stderr  :  main.c
</itemize>
</descrip>

<sect1>Local Function remote_can_async_p()

<p><tt>static int remote_can_async_p ( void )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>serial_can_async_p()  :  serial.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_async_ops()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_target  :  target/target.c
<item>remote_desc  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_check_symbols()

<p><tt>static void remote_check_symbols ( struct objfile* objfile )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>get_remote_state()  :  remote.c
<item>getpkt()  :  remote.c
<item>hex2bin()  :  remote.c
<item>lookup_minimal_symbol()  :  minsyms.c
<item>packet_ok()  :  remote.c
<item>paddr_nz()  :  utils.c
<item>putpkt()  :  remote.c
<item>xsnprintf()  :  utils.c
<item>__builtin_alloca(), strlen(), strncmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_macosx_complete_create_or_attach()  :  remote.c
<item>remote_macosx_open()  :  remote.c
<item>remote_new_objfile()  :  remote.c
<item>remote_open_1()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_protocol_qSymbol  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_check_watch_resources()

<p><tt>static int remote_check_watch_resources ( int type, int cnt, int ot )</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>init_remote_async_ops()  :  remote.c
<item>init_remote_ops()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_hw_breakpoint_limit  :  remote.c
<item>remote_hw_watchpoint_limit  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_close()

<p><tt>static void remote_close ( int quitting )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>serial_close()  :  serial.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_async_ops()  :  remote.c
<item>init_remote_ops()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_desc  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_current_thread()

<p><tt>static ptid_t remote_current_thread ( ptid_t oldpid )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>get_remote_state()  :  remote.c
<item>getpkt()  :  remote.c
<item>pid_to_ptid()  :  infrun.c
<item>putpkt()  :  remote.c
<item>__builtin_alloca(), strtoul()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_find_new_threads()  :  remote.c
<item>remote_start_remote()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_detach()

<p><tt>static void remote_detach ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>get_remote_state()  :  remote.c
<item>puts_filtered()  :  utils.c
<item>remote_send()  :  remote.c
<item>serial_async()  :  serial.c
<item>__builtin___strcpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_strcpy_chk()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_async_ops()  :  remote.c
<item>init_remote_macosx_ops()  :  remote.c
<item>init_remote_ops()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_target  :  target/target.c
<item>remote_desc  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_disconnect()

<p><tt>static void remote_disconnect ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>puts_filtered()  :  utils.c
<item>serial_async()  :  serial.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_async_ops()  :  remote.c
<item>init_remote_ops()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_target  :  target/target.c
<item>remote_desc  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_fetch_registers()

<p><tt>static void remote_fetch_registers ( int regnum )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>fetch_register_using_p()  :  remote.c
<item>fprintf_unfiltered()  :  utils.c
<item>fromhex()  :  remote.c
<item>gdbarch_num_pseudo_regs()  :  gdbarch.c
<item>gdbarch_num_regs()  :  gdbarch.c
<item>gdbarch_register_bytes_ok()  :  gdbarch.c
<item>gdbarch_register_bytes_ok_p()  :  gdbarch.c
<item>get_remote_state()  :  remote.c
<item>getpkt()  :  remote.c
<item>internal_error()  :  utils.c
<item>packet_reg_from_regnum()  :  remote.c
<item>ptid_get_pid()  :  infrun.c
<item>regcache_raw_supply()  :  regcache.c
<item>remote_send()  :  remote.c
<item>set_register_cached()  :  regcache.c
<item>set_thread()  :  remote.c
<item>warning()  :  utils.c
<item>__builtin___memset_chk(), __builtin___snprintf_chk(), __builtin_alloca(), __builtin_object_size(), __inline_memset_chk(), strlen()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_async_ops()  :  remote.c
<item>init_remote_ops()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
<item>current_regcache  :  regcache.c
<item>gdb_stdlog  :  main.c
<item>inferior_ptid  :  infcmd.c
<item>register_bytes_found  :  remote.c
<item>remote_debug  :  top.c
<item>remote_protocol_p  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_files_info()

<p><tt>static void remote_files_info ( struct target_ops* ignore )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>puts_filtered()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_async_ops()  :  remote.c
<item>init_remote_ops()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_find_new_threads()

<p><tt>static void remote_find_new_threads ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>ptid_get_pid()  :  infrun.c
<item>remote_current_thread()  :  remote.c
<item>remote_threadlist_iterator()  :  remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_threads_info()  :  remote.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>remote_newthread_step()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>inferior_ptid  :  infcmd.c
</itemize>
</descrip>

<sect1>Local Function remote_get_thread_local_address()

<p><tt>static CORE_ADDR remote_get_thread_local_address ( ptid_t ptid, CORE_ADDR lm, CORE_ADDR offset )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>get_remote_state()  :  remote.c
<item>getpkt()  :  remote.c
<item>hexnumstr()  :  remote.c
<item>packet_ok()  :  remote.c
<item>ptid_get_pid()  :  infrun.c
<item>putpkt()  :  remote.c
<item>unpack_varlen_hex()  :  remote.c
<item>__builtin___strcpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_strcpy_chk(), strlen(), throw_error()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_ops()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_protocol_qGetTLSAddr  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_get_threadinfo()

<p><tt>static int remote_get_threadinfo ( threadref* threadid, int fieldset, struct gdb_ext_thread_info* info )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>get_remote_state()  :  remote.c
<item>getpkt()  :  remote.c
<item>pack_threadinfo_request()  :  remote.c
<item>putpkt()  :  remote.c
<item>remote_unpack_thread_info_response()  :  remote.c
<item>__builtin_alloca()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_threads_extra_info()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_get_threadlist()

<p><tt>static int remote_get_threadlist ( int startflag, threadref* nextthread, int result_limit, int* done, int* result_count, threadref* threadlist )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>get_remote_state()  :  remote.c
<item>getpkt()  :  remote.c
<item>pack_threadlist_request()  :  remote.c
<item>parse_threadlist_response()  :  remote.c
<item>putpkt()  :  remote.c
<item>threadmatch()  :  remote.c
<item>warning()  :  utils.c
<item>__builtin_alloca()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_threadlist_iterator()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_insert_breakpoint()

<p><tt>static int remote_insert_breakpoint ( CORE_ADDR addr, bfd_byte* contents_cache )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>gdbarch_breakpoint_from_pc()  :  gdbarch.c
<item>get_remote_state()  :  remote.c
<item>getpkt()  :  remote.c
<item>hexnumstr()  :  remote.c
<item>memory_insert_breakpoint()  :  mem-break.c
<item>packet_ok()  :  remote.c
<item>putpkt()  :  remote.c
<item>remote_address_masked()  :  remote.c
<item>__builtin___snprintf_chk(), __builtin_alloca(), __builtin_object_size()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_async_ops()  :  remote.c
<item>init_remote_ops()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
<item>remote_protocol_Z  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_insert_hw_breakpoint()

<p><tt>static int remote_insert_hw_breakpoint ( CORE_ADDR addr, gdb_byte* shadow )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>gdbarch_breakpoint_from_pc()  :  gdbarch.c
<item>get_remote_state()  :  remote.c
<item>getpkt()  :  remote.c
<item>hexnumstr()  :  remote.c
<item>internal_error()  :  utils.c
<item>packet_ok()  :  remote.c
<item>putpkt()  :  remote.c
<item>remote_address_masked()  :  remote.c
<item>__builtin___snprintf_chk(), __builtin_alloca(), __builtin_object_size()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_async_ops()  :  remote.c
<item>init_remote_ops()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
<item>remote_protocol_Z  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_insert_watchpoint()

<p><tt>static int remote_insert_watchpoint ( CORE_ADDR addr, int len, int type )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>get_remote_state()  :  remote.c
<item>getpkt()  :  remote.c
<item>hexnumstr()  :  remote.c
<item>internal_error()  :  utils.c
<item>packet_ok()  :  remote.c
<item>putpkt()  :  remote.c
<item>remote_address_masked()  :  remote.c
<item>warning()  :  utils.c
<item>watchpoint_to_Z_packet()  :  remote.c
<item>__builtin___snprintf_chk(), __builtin_alloca(), __builtin_object_size(), strchr()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_async_ops()  :  remote.c
<item>init_remote_ops()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_protocol_Z  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_interrupt()

<p><tt>static void remote_interrupt ( int signo )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fprintf_unfiltered()  :  utils.c
<item>signal()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>remote_async_wait()  :  remote.c
<item>remote_interrupt_twice()  :  remote.c
<item>remote_wait()  :  remote.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>remote_interrupt_twice()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_target  :  target/target.c
<item>gdb_stdlog  :  main.c
<item>remote_debug  :  top.c
</itemize>
</descrip>

<sect1>Local Function remote_interrupt_twice()

<p><tt>static void remote_interrupt_twice ( int signo )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>interrupt_query()  :  remote.c
<item>signal()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>remote_interrupt()  :  remote.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>remote_interrupt()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>ofunc  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_is_async_p()

<p><tt>static int remote_is_async_p ( void )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>serial_is_async_p()  :  serial.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_async_ops()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_target  :  target/target.c
<item>remote_desc  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_kill()

<p><tt>static void remote_kill ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>catch_errors()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_ops()  :  remote.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>putpkt()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_target  :  target/target.c
<item>kill_kludge  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_macosx_complete_create_or_attach()

<p><tt>static void remote_macosx_complete_create_or_attach ( int from_tty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>get_remote_state()  :  remote.c
<item>observer_notify_inferior_created()  :  observer.c
<item>pop_target()  :  target/target.c
<item>remote_check_symbols()  :  remote.c
<item>remote_macosx_get_all_image_infos_addr()  :  remote.c
<item>catch_exception(), macosx_dyld_create_inferior_hook(), macosx_solib_add(), throw_exception()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_macosx_attach()  :  remote.c
<item>remote_macosx_create_inferior()  :  remote.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>remote_start_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>auto_solib_add  :  symfile.c
<item>current_target  :  target/target.c
<item>symfile_objfile  :  objfiles.c
<item>uiout  :  ui-out.c
<item>exec_bfd
</itemize>
</descrip>

<sect1>Local Function remote_macosx_mourn()

<p><tt>static void remote_macosx_mourn ( void )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>remote_mourn_1()  :  remote.c
<item>macosx_dyld_mourn_inferior()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_macosx_ops()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_macosx_ops  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_macosx_open()

<p><tt>static void remote_macosx_open ( const char* name, int from_tty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>ptid_equal()  :  infrun.c
<item>remote_check_symbols()  :  remote.c
<item>remote_macosx_get_all_image_infos_addr()  :  remote.c
<item>remote_open_1()  :  remote.c
<item>macosx_dyld_create_inferior_hook(), macosx_solib_add()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>push_remote_macosx_target()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_macosx_ops()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>auto_solib_add  :  symfile.c
<item>current_target  :  target/target.c
<item>inferior_ptid  :  infcmd.c
<item>null_ptid  :  infrun.c
<item>remote_macosx_ops  :  remote.c
<item>symfile_objfile  :  objfiles.c
<item>exec_bfd
</itemize>
</descrip>

<sect1>Local Function remote_macosx_query_qenvironment_hex_packet_supported()

<p><tt>static int remote_macosx_query_qenvironment_hex_packet_supported ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>get_remote_state()  :  remote.c
<item>getpkt_sane()  :  remote.c
<item>putpkt()  :  remote.c
<item>__builtin_alloca()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_macosx_create_inferior()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_timeout  :  top.c
</itemize>
</descrip>

<sect1>Local Function remote_mourn()

<p><tt>static void remote_mourn ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>remote_mourn_1()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_ops()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_ops  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_mourn_1()

<p><tt>static void remote_mourn_1 ( struct target_ops* target )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>generic_mourn_inferior()  :  target/target.c
<item>unpush_target()  :  target/target.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_async_mourn()  :  remote.c
<item>remote_macosx_mourn()  :  remote.c
<item>remote_mourn()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_new_objfile()

<p><tt>static void remote_new_objfile ( struct objfile* objfile )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>remote_check_symbols()  :  remote.c
<item>remote_new_objfile_chain()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_desc  :  remote.c
<item>remote_new_objfile_chain  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_newthread_step()

<p><tt>static int remote_newthread_step ( threadref* ref, void* context )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>add_thread()  :  thread.c
<item>in_thread_list()  :  thread.c
<item>ptid_build()  :  infrun.c
<item>threadref_to_int()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>remote_find_new_threads()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_open()

<p><tt>static void remote_open ( const char* name, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>remote_open_1()  :  remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>push_remote_target()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_ops()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_ops  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_open_1()

<p><tt>static void remote_open_1 ( const char* name, int from_tty, struct target_ops* target, int extended_p, int async_p )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>get_remote_state()  :  remote.c
<item>getpkt()  :  remote.c
<item>init_all_packet_configs()  :  remote.c
<item>no_shared_libraries()  :  solib.c
<item>observer_notify_inferior_created()  :  observer.c
<item>perror_with_name()  :  utils.c
<item>pop_target()  :  target/target.c
<item>ptid_build()  :  infrun.c
<item>ptid_equal()  :  infrun.c
<item>push_target()  :  target/target.c
<item>putpkt()  :  remote.c
<item>puts_filtered()  :  utils.c
<item>re_enable_breakpoints_in_shlibs()  :  breakpoint.c
<item>remote_check_symbols()  :  remote.c
<item>remote_serial_open()  :  remote.c
<item>reopen_exec_file()  :  corefile.c
<item>reread_symbols()  :  symfile.c
<item>serial_close()  :  serial.c
<item>serial_flush_input()  :  serial.c
<item>serial_raw()  :  serial.c
<item>serial_setbaudrate()  :  serial.c
<item>solib_create_inferior_hook()  :  solib.c
<item>target_preopen()  :  target/target.c
<item>unpush_target()  :  target/target.c
<item>__builtin_alloca(), catch_exception(), exhaustive_search_for_kernel_in_mem(), strcmp(), throw_exception()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>extended_remote_async_open()  :  remote.c
<item>extended_remote_open()  :  remote.c
<item>remote_async_open()  :  remote.c
<item>remote_macosx_open()  :  remote.c
<item>remote_open()  :  remote.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>remote_start_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>baud_rate  :  top.c
<item>continue_thread  :  remote.c
<item>current_target  :  target/target.c
<item>general_thread  :  remote.c
<item>inferior_ptid  :  infcmd.c
<item>null_ptid  :  infrun.c
<item>remote_async_terminal_ours_p  :  remote.c
<item>remote_desc  :  remote.c
<item>symfile_objfile  :  objfiles.c
<item>uiout  :  ui-out.c
<item>use_threadextra_query  :  remote.c
<item>use_threadinfo_query  :  remote.c
<item>wait_forever_enabled_p  :  remote.c
<item>exec_bfd
</itemize>
</descrip>

<sect1>Local Function remote_pid_to_str()

<p><tt>static char* remote_pid_to_str ( ptid_t ptid )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>ptid_get_pid()  :  infrun.c
<item>xsnprintf()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_async_ops()  :  remote.c
<item>init_remote_ops()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_prepare_to_store()

<p><tt>static void remote_prepare_to_store ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>gdbarch_num_regs()  :  gdbarch.c
<item>get_remote_state()  :  remote.c
<item>regcache_raw_read()  :  regcache.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_async_ops()  :  remote.c
<item>init_remote_ops()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
<item>current_regcache  :  regcache.c
<item>remote_protocol_P  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_rcmd()

<p><tt>static void remote_rcmd ( const char* command, struct ui_file* outbuf )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>bin2hex()  :  remote.c
<item>error()  :  utils.c
<item>fputc_unfiltered()  :  utils.c
<item>fromhex()  :  remote.c
<item>get_remote_state()  :  remote.c
<item>getpkt()  :  remote.c
<item>putpkt()  :  remote.c
<item>remote_console_output()  :  remote.c
<item>__builtin___strcpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_strcpy_chk(), isdigit(), strchr(), strcmp(), strlen()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_async_ops()  :  remote.c
<item>init_remote_ops()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_desc  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_remove_breakpoint()

<p><tt>static int remote_remove_breakpoint ( CORE_ADDR addr, bfd_byte* contents_cache )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>gdbarch_breakpoint_from_pc()  :  gdbarch.c
<item>get_remote_state()  :  remote.c
<item>getpkt()  :  remote.c
<item>hexnumstr()  :  remote.c
<item>memory_remove_breakpoint()  :  mem-break.c
<item>putpkt()  :  remote.c
<item>remote_address_masked()  :  remote.c
<item>__builtin___snprintf_chk(), __builtin_alloca(), __builtin_object_size()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_async_ops()  :  remote.c
<item>init_remote_ops()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
<item>remote_protocol_Z  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_remove_hw_breakpoint()

<p><tt>static int remote_remove_hw_breakpoint ( CORE_ADDR addr, gdb_byte* shadow )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>gdbarch_breakpoint_from_pc()  :  gdbarch.c
<item>get_remote_state()  :  remote.c
<item>getpkt()  :  remote.c
<item>hexnumstr()  :  remote.c
<item>internal_error()  :  utils.c
<item>packet_ok()  :  remote.c
<item>putpkt()  :  remote.c
<item>remote_address_masked()  :  remote.c
<item>__builtin___snprintf_chk(), __builtin_alloca(), __builtin_object_size()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_async_ops()  :  remote.c
<item>init_remote_ops()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
<item>remote_protocol_Z  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_remove_watchpoint()

<p><tt>static int remote_remove_watchpoint ( CORE_ADDR addr, int len, int type )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>get_remote_state()  :  remote.c
<item>getpkt()  :  remote.c
<item>hexnumstr()  :  remote.c
<item>internal_error()  :  utils.c
<item>packet_ok()  :  remote.c
<item>putpkt()  :  remote.c
<item>remote_address_masked()  :  remote.c
<item>warning()  :  utils.c
<item>watchpoint_to_Z_packet()  :  remote.c
<item>__builtin___snprintf_chk(), __builtin_alloca(), __builtin_object_size(), strchr()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_async_ops()  :  remote.c
<item>init_remote_ops()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_protocol_Z  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_resume()

<p><tt>static void remote_resume ( ptid_t ptid, int step, enum target_signal siggnal )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>get_remote_state()  :  remote.c
<item>ptid_get_pid()  :  infrun.c
<item>putpkt()  :  remote.c
<item>remote_vcont_resume()  :  remote.c
<item>set_thread()  :  remote.c
<item>tohex()  :  remote.c
<item>__builtin___strcpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_strcpy_chk()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_async_resume()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_ops()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>deprecated_target_resume_hook  :  remote.c
<item>last_sent_signal  :  remote.c
<item>last_sent_step  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_send()

<p><tt>static void remote_send ( char* buf, long sizeof_buf )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>getpkt()  :  remote.c
<item>putpkt()  :  remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>fetch_register_using_p()  :  remote.c
<item>remote_detach()  :  remote.c
<item>remote_fetch_registers()  :  remote.c
<item>remote_store_registers()  :  remote.c
<item>store_register_using_P()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_serial_open()

<p><tt>static struct serial* remote_serial_open ( const char* name )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>serial_open()  :  serial.c
<item>warning()  :  utils.c
<item>strncmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_open_1()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_start_remote()

<p><tt>static void remote_start_remote ( struct ui_out* uiout, void* dummy )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>add_outgoing_pkt_to_protocol_log()  :  remote.c
<item>end_remote_timer()  :  remote.c
<item>get_offsets()  :  remote.c
<item>get_remote_state()  :  remote.c
<item>ptid_equal()  :  infrun.c
<item>putpkt()  :  remote.c
<item>remote_current_thread()  :  remote.c
<item>remote_start_remote_dummy()  :  remote.c
<item>send_remote_debugflags_pkt()  :  remote.c
<item>send_remote_max_payload_size()  :  remote.c
<item>serial_write()  :  serial.c
<item>set_thread()  :  remote.c
<item>start_no_ack_mode()  :  remote.c
<item>start_remote_timer()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>remote_macosx_complete_create_or_attach()  :  remote.c
<item>remote_open_1()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_remote_stats  :  remote.c
<item>current_target  :  target/target.c
<item>immediate_quit  :  utils.c
<item>inferior_ptid  :  infcmd.c
<item>null_ptid  :  infrun.c
<item>remote_debugflags  :  remote.c
<item>remote_desc  :  remote.c
<item>user_requested_no_ack_mode  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_start_remote_dummy()

<p><tt>static int remote_start_remote_dummy ( struct ui_out* uiout, void* dummy )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>start_remote()  :  infrun.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_start_remote()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_stop()

<p><tt>static void remote_stop ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>add_outgoing_pkt_to_protocol_log()  :  remote.c
<item>end_remote_timer()  :  remote.c
<item>fprintf_unfiltered()  :  utils.c
<item>serial_send_break()  :  serial.c
<item>serial_write()  :  serial.c
<item>start_remote_timer()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_async_ops()  :  remote.c
<item>init_remote_ops()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_remote_stats  :  remote.c
<item>gdb_stdlog  :  main.c
<item>remote_break  :  remote.c
<item>remote_debug  :  top.c
<item>remote_desc  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_stopped_by_watchpoint()

<p><tt>static int remote_stopped_by_watchpoint ( void )</tt><newline>
<descrip>
<tag>Called by:</tag>
<itemize>
<item>remote_stopped_data_address()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_async_ops()  :  remote.c
<item>init_remote_ops()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_stopped_by_watchpoint_p  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_stopped_data_address()

<p><tt>static int remote_stopped_data_address ( struct target_ops* target, CORE_ADDR* addr_p )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>remote_stopped_by_watchpoint()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_async_ops()  :  remote.c
<item>init_remote_ops()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_watch_data_address  :  remote.c
<item>stepped_after_stopped_by_watchpoint  :  infrun.c
</itemize>
</descrip>

<sect1>Local Function remote_store_registers()

<p><tt>static void remote_store_registers ( int regnum )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>bin2hex()  :  remote.c
<item>error()  :  utils.c
<item>gdbarch_num_pseudo_regs()  :  gdbarch.c
<item>gdbarch_num_regs()  :  gdbarch.c
<item>get_remote_state()  :  remote.c
<item>ptid_get_pid()  :  infrun.c
<item>regcache_raw_collect()  :  regcache.c
<item>remote_send()  :  remote.c
<item>set_thread()  :  remote.c
<item>store_register_using_P()  :  remote.c
<item>__builtin___memset_chk(), __builtin_alloca(), __builtin_object_size(), __inline_memset_chk()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_async_ops()  :  remote.c
<item>init_remote_ops()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
<item>current_regcache  :  regcache.c
<item>inferior_ptid  :  infcmd.c
<item>register_bytes_found  :  remote.c
<item>remote_protocol_P  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_thread_alive()

<p><tt>static int remote_thread_alive ( ptid_t ptid )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>getpkt()  :  remote.c
<item>ptid_get_pid()  :  infrun.c
<item>putpkt()  :  remote.c
<item>xsnprintf()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_async_ops()  :  remote.c
<item>init_remote_ops()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_threadlist_iterator()

<p><tt>static int remote_threadlist_iterator ( rmt_thread_action stepfunction, void* context, int looplimit )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>copy_threadref()  :  remote.c
<item>remote_get_threadlist()  :  remote.c
<item>warning()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_find_new_threads()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_threads_extra_info()

<p><tt>static const char* remote_threads_extra_info ( struct thread_info* tp )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>get_remote_state()  :  remote.c
<item>getpkt()  :  remote.c
<item>hex2bin()  :  remote.c
<item>int_to_threadref()  :  remote.c
<item>internal_error()  :  utils.c
<item>ptid_get_pid()  :  infrun.c
<item>putpkt()  :  remote.c
<item>remote_get_threadinfo()  :  remote.c
<item>xsnprintf()  :  utils.c
<item>__builtin_alloca(), strlen()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_async_ops()  :  remote.c
<item>init_remote_ops()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_desc  :  remote.c
<item>use_threadextra_query  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_threads_info()

<p><tt>static void remote_threads_info ( void )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>add_thread()  :  thread.c
<item>error()  :  utils.c
<item>get_remote_state()  :  remote.c
<item>getpkt()  :  remote.c
<item>in_thread_list()  :  thread.c
<item>ptid_build()  :  infrun.c
<item>putpkt()  :  remote.c
<item>remote_find_new_threads()  :  remote.c
<item>__builtin_alloca(), strtoul()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_async_ops()  :  remote.c
<item>init_remote_ops()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_desc  :  remote.c
<item>use_threadinfo_query  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_unpack_thread_info_response()

<p><tt>static int remote_unpack_thread_info_response ( char* pkt, threadref* expectedref, struct gdb_ext_thread_info* info )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>copy_threadref()  :  remote.c
<item>get_remote_state()  :  remote.c
<item>stub_unpack_int()  :  remote.c
<item>threadmatch()  :  remote.c
<item>unpack_byte()  :  remote.c
<item>unpack_int()  :  remote.c
<item>unpack_string()  :  remote.c
<item>unpack_threadid()  :  remote.c
<item>warning()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_get_threadinfo()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_vcont_probe()

<p><tt>static void remote_vcont_probe ( struct remote_state* rs, char* buf )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>getpkt()  :  remote.c
<item>packet_ok()  :  remote.c
<item>putpkt()  :  remote.c
<item>__builtin___strcpy_chk(), __builtin_object_size(), __inline_strcpy_chk(), strchr(), strncmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_vcont_resume()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_protocol_vcont  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_vcont_resume()

<p><tt>static int remote_vcont_resume ( ptid_t ptid, int step, enum target_signal siggnal )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>do_cleanups()  :  utils.c
<item>get_remote_state()  :  remote.c
<item>internal_error()  :  utils.c
<item>make_cleanup()  :  utils.c
<item>ptid_get_pid()  :  infrun.c
<item>putpkt()  :  remote.c
<item>remote_vcont_probe()  :  remote.c
<item>xmalloc()  :  utils.c
<item>xstrprintf()  :  utils.c
<item>strlen()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_resume()  :  remote.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>xfree()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>inferior_ptid  :  infcmd.c
<item>remote_protocol_vcont  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_wait()

<p><tt>static ptid_t remote_wait ( ptid_t ptid, struct target_waitstatus* status, gdb_client_data client_data )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>fromhex()  :  remote.c
<item>get_remote_state()  :  remote.c
<item>getpkt()  :  remote.c
<item>hex2bin()  :  remote.c
<item>packet_reg_from_pnum()  :  remote.c
<item>phex_nz()  :  utils.c
<item>printf_filtered()  :  utils.c
<item>ptid_build()  :  infrun.c
<item>putpkt()  :  remote.c
<item>record_currthread()  :  remote.c
<item>regcache_raw_supply()  :  regcache.c
<item>register_size()  :  regcache.c
<item>remote_console_output()  :  remote.c
<item>remote_fileio_request()  :  remote-fileio.c
<item>unpack_varlen_hex()  :  remote.c
<item>warning()  :  utils.c
<item>__builtin___strcpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_strcpy_chk(), signal(), strchr(), strlen(), strncmp(), strtol(), target_signal_to_name()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_ops()  :  remote.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>remote_interrupt()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
<item>current_regcache  :  regcache.c
<item>current_target  :  target/target.c
<item>deprecated_target_wait_loop_hook  :  remote.c
<item>inferior_ptid  :  infcmd.c
<item>kill_kludge  :  remote.c
<item>last_sent_signal  :  remote.c
<item>last_sent_step  :  remote.c
<item>ofunc  :  remote.c
<item>remote_stopped_by_watchpoint_p  :  remote.c
<item>remote_watch_data_address  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_xfer_memory()

<p><tt>static int remote_xfer_memory ( CORE_ADDR mem_addr, gdb_byte* buffer, int mem_len, int should_write, struct mem_attrib* attrib, struct target_ops* target )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>remote_read_bytes()  :  remote.c
<item>remote_write_bytes()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_async_ops()  :  remote.c
<item>init_remote_ops()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function remote_xfer_partial()

<p><tt>static long remote_xfer_partial ( struct target_ops* ops, enum target_object object, const char* annex, gdb_byte* readbuf, const gdb_byte* writebuf, unsigned long offset, long len )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>get_remote_state()  :  remote.c
<item>getpkt()  :  remote.c
<item>hex2bin()  :  remote.c
<item>internal_error()  :  utils.c
<item>packet_ok()  :  remote.c
<item>phex_nz()  :  utils.c
<item>putpkt()  :  remote.c
<item>remote_read_bytes()  :  remote.c
<item>remote_write_bytes()  :  remote.c
<item>__builtin___snprintf_chk(), __builtin_alloca(), __builtin_object_size(), __error(), isprint(), strlen()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>init_remote_async_ops()  :  remote.c
<item>init_remote_ops()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_desc  :  remote.c
<item>remote_protocol_qPart_auxv  :  remote.c
</itemize>
</descrip>

<sect1>Local Function send_disable_aslr()

<p><tt>static int send_disable_aslr ( void )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>get_remote_state()  :  remote.c
<item>getpkt()  :  remote.c
<item>putpkt()  :  remote.c
<item>__builtin___snprintf_chk(), __builtin_object_size()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_macosx_create_inferior()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>disable_aslr_flag
</itemize>
</descrip>

<sect1>Local Function send_remote_debugflags_pkt()

<p><tt>static int send_remote_debugflags_pkt ( const char* flags )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>getpkt()  :  remote.c
<item>putpkt()  :  remote.c
<item>__builtin___strcat_chk(), __builtin___strcpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_strcat_chk(), __inline_strcpy_chk(), strlen()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_start_remote()  :  remote.c
<item>set_remote_debugflags_command()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function send_remote_max_payload_size()

<p><tt>static int send_remote_max_payload_size ( void )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>get_remote_state()  :  remote.c
<item>getpkt()  :  remote.c
<item>putpkt()  :  remote.c
<item>__builtin___snprintf_chk(), __builtin_object_size()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_start_remote()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function set_max_remote_packet_size()

<p><tt>static void set_max_remote_packet_size ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>strtol()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>g_max_remote_packet_size  :  remote.c
</itemize>
</descrip>

<sect1>Local Function set_memory_packet_size()

<p><tt>static void set_memory_packet_size ( const char* args, struct memory_packet_config* config )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>query()  :  utils.c
<item>strcmp(), strtoul()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>set_memory_read_packet_size()  :  remote.c
<item>set_memory_write_packet_size()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function set_memory_read_packet_size()

<p><tt>static void set_memory_read_packet_size ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>set_memory_packet_size()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>memory_read_packet_config  :  remote.c
</itemize>
</descrip>

<sect1>Local Function set_memory_write_packet_size()

<p><tt>static void set_memory_write_packet_size ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>set_memory_packet_size()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>memory_write_packet_config  :  remote.c
</itemize>
</descrip>

<sect1>Local Function set_no_ack_mode_cmd()

<p><tt>static void set_no_ack_mode_cmd ( const char* args, int from_tty, struct cmd_list_element* c )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>start_no_ack_mode()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_desc  :  remote.c
<item>user_requested_no_ack_mode  :  remote.c
</itemize>
</descrip>

<sect1>Local Function set_remote_cmd()

<p><tt>static void set_remote_cmd ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function set_remote_debugflags_command()

<p><tt>static void set_remote_debugflags_command ( const char* ignore, int from_tty, struct cmd_list_element* unused )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>send_remote_debugflags_pkt()  :  remote.c
<item>isupper()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_debugflags  :  remote.c
<item>remote_desc  :  remote.c
</itemize>
</descrip>

<sect1>Local Function set_remote_protocol_P_packet_cmd()

<p><tt>static void set_remote_protocol_P_packet_cmd ( const char* args, int from_tty, struct cmd_list_element* c )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>update_packet_config()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_protocol_P  :  remote.c
</itemize>
</descrip>

<sect1>Local Function set_remote_protocol_Z_access_wp_packet_cmd()

<p><tt>static void set_remote_protocol_Z_access_wp_packet_cmd ( const char* args, int from_tty, struct cmd_list_element* c )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>update_packet_config()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_protocol_Z  :  remote.c
</itemize>
</descrip>

<sect1>Local Function set_remote_protocol_Z_hardware_bp_packet_cmd()

<p><tt>static void set_remote_protocol_Z_hardware_bp_packet_cmd ( const char* args, int from_tty, struct cmd_list_element* c )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>update_packet_config()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_protocol_Z  :  remote.c
</itemize>
</descrip>

<sect1>Local Function set_remote_protocol_Z_packet_cmd()

<p><tt>static void set_remote_protocol_Z_packet_cmd ( const char* args, int from_tty, struct cmd_list_element* c )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>update_packet_config()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_Z_packet_detect  :  remote.c
<item>remote_protocol_Z  :  remote.c
</itemize>
</descrip>

<sect1>Local Function set_remote_protocol_Z_read_wp_packet_cmd()

<p><tt>static void set_remote_protocol_Z_read_wp_packet_cmd ( const char* args, int from_tty, struct cmd_list_element* c )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>update_packet_config()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_protocol_Z  :  remote.c
</itemize>
</descrip>

<sect1>Local Function set_remote_protocol_Z_software_bp_packet_cmd()

<p><tt>static void set_remote_protocol_Z_software_bp_packet_cmd ( const char* args, int from_tty, struct cmd_list_element* c )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>update_packet_config()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_protocol_Z  :  remote.c
</itemize>
</descrip>

<sect1>Local Function set_remote_protocol_Z_write_wp_packet_cmd()

<p><tt>static void set_remote_protocol_Z_write_wp_packet_cmd ( const char* args, int from_tty, struct cmd_list_element* c )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>update_packet_config()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_protocol_Z  :  remote.c
</itemize>
</descrip>

<sect1>Local Function set_remote_protocol_binary_download_cmd()

<p><tt>static void set_remote_protocol_binary_download_cmd ( const char* args, int from_tty, struct cmd_list_element* c )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>update_packet_config()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_protocol_binary_download  :  remote.c
</itemize>
</descrip>

<sect1>Local Function set_remote_protocol_p_packet_cmd()

<p><tt>static void set_remote_protocol_p_packet_cmd ( const char* args, int from_tty, struct cmd_list_element* c )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>update_packet_config()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_protocol_p  :  remote.c
</itemize>
</descrip>

<sect1>Local Function set_remote_protocol_qGetTLSAddr_packet_cmd()

<p><tt>static void set_remote_protocol_qGetTLSAddr_packet_cmd ( const char* args, int from_tty, struct cmd_list_element* c )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>update_packet_config()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_protocol_qGetTLSAddr  :  remote.c
</itemize>
</descrip>

<sect1>Local Function set_remote_protocol_qPart_auxv_packet_cmd()

<p><tt>static void set_remote_protocol_qPart_auxv_packet_cmd ( const char* args, int from_tty, struct cmd_list_element* c )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>update_packet_config()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_protocol_qPart_auxv  :  remote.c
</itemize>
</descrip>

<sect1>Local Function set_remote_protocol_qSymbol_packet_cmd()

<p><tt>static void set_remote_protocol_qSymbol_packet_cmd ( const char* args, int from_tty, struct cmd_list_element* c )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>update_packet_config()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_protocol_qSymbol  :  remote.c
</itemize>
</descrip>

<sect1>Local Function set_remote_protocol_vcont_packet_cmd()

<p><tt>static void set_remote_protocol_vcont_packet_cmd ( const char* args, int from_tty, struct cmd_list_element* c )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>update_packet_config()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_protocol_vcont  :  remote.c
</itemize>
</descrip>

<sect1>Local Function set_thread()

<p><tt>static void set_thread ( int th, int gen )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>get_remote_state()  :  remote.c
<item>getpkt()  :  remote.c
<item>putpkt()  :  remote.c
<item>xsnprintf()  :  utils.c
<item>__builtin_alloca()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_fetch_registers()  :  remote.c
<item>remote_resume()  :  remote.c
<item>remote_start_remote()  :  remote.c
<item>remote_store_registers()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>continue_thread  :  remote.c
<item>general_thread  :  remote.c
</itemize>
</descrip>

<sect1>Local Function show_max_remote_packet_size()

<p><tt>static void show_max_remote_packet_size ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>printf_filtered()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>show_remote_cmd()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>g_max_remote_packet_size  :  remote.c
</itemize>
</descrip>

<sect1>Local Function show_memory_packet_size()

<p><tt>static void show_memory_packet_size ( struct memory_packet_config* config )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>get_memory_packet_size()  :  remote.c
<item>printf_filtered()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>show_memory_read_packet_size()  :  remote.c
<item>show_memory_write_packet_size()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function show_memory_read_packet_size()

<p><tt>static void show_memory_read_packet_size ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>show_memory_packet_size()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>memory_read_packet_config  :  remote.c
</itemize>
</descrip>

<sect1>Local Function show_memory_write_packet_size()

<p><tt>static void show_memory_write_packet_size ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>show_memory_packet_size()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>memory_write_packet_config  :  remote.c
</itemize>
</descrip>

<sect1>Local Function show_no_ack_mode_cmd()

<p><tt>static void show_no_ack_mode_cmd ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>printf_filtered()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>no_ack_mode  :  remote.c
<item>remote_desc  :  remote.c
<item>user_requested_no_ack_mode  :  remote.c
</itemize>
</descrip>

<sect1>Local Function show_packet_config_cmd()

<p><tt>static void show_packet_config_cmd ( struct packet_config* config )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>printf_filtered()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>show_remote_protocol_P_packet_cmd()  :  remote.c
<item>show_remote_protocol_Z_access_wp_packet_cmd()  :  remote.c
<item>show_remote_protocol_Z_hardware_bp_packet_cmd()  :  remote.c
<item>show_remote_protocol_Z_packet_cmd()  :  remote.c
<item>show_remote_protocol_Z_read_wp_packet_cmd()  :  remote.c
<item>show_remote_protocol_Z_software_bp_packet_cmd()  :  remote.c
<item>show_remote_protocol_Z_write_wp_packet_cmd()  :  remote.c
<item>show_remote_protocol_binary_download_cmd()  :  remote.c
<item>show_remote_protocol_p_packet_cmd()  :  remote.c
<item>show_remote_protocol_qGetTLSAddr_packet_cmd()  :  remote.c
<item>show_remote_protocol_qPart_auxv_packet_cmd()  :  remote.c
<item>show_remote_protocol_qSymbol_packet_cmd()  :  remote.c
<item>show_remote_protocol_vcont_packet_cmd()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function show_remote_cmd()

<p><tt>static void show_remote_cmd ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>show_max_remote_packet_size()  :  remote.c
<item>show_remote_protocol_P_packet_cmd()  :  remote.c
<item>show_remote_protocol_Z_packet_cmd()  :  remote.c
<item>show_remote_protocol_binary_download_cmd()  :  remote.c
<item>show_remote_protocol_p_packet_cmd()  :  remote.c
<item>show_remote_protocol_qGetTLSAddr_packet_cmd()  :  remote.c
<item>show_remote_protocol_qPart_auxv_packet_cmd()  :  remote.c
<item>show_remote_protocol_qSymbol_packet_cmd()  :  remote.c
<item>show_remote_protocol_vcont_packet_cmd()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdout  :  main.c
</itemize>
</descrip>

<sect1>Local Function show_remote_debugflags_command()

<p><tt>static void show_remote_debugflags_command ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>printf_filtered()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_debugflags  :  remote.c
</itemize>
</descrip>

<sect1>Local Function show_remote_protocol_P_packet_cmd()

<p><tt>static void show_remote_protocol_P_packet_cmd ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>show_packet_config_cmd()  :  remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>show_remote_cmd()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_protocol_P  :  remote.c
</itemize>
</descrip>

<sect1>Local Function show_remote_protocol_Z_access_wp_packet_cmd()

<p><tt>static void show_remote_protocol_Z_access_wp_packet_cmd ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>show_packet_config_cmd()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_protocol_Z  :  remote.c
</itemize>
</descrip>

<sect1>Local Function show_remote_protocol_Z_hardware_bp_packet_cmd()

<p><tt>static void show_remote_protocol_Z_hardware_bp_packet_cmd ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>show_packet_config_cmd()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_protocol_Z  :  remote.c
</itemize>
</descrip>

<sect1>Local Function show_remote_protocol_Z_packet_cmd()

<p><tt>static void show_remote_protocol_Z_packet_cmd ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>show_packet_config_cmd()  :  remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>show_remote_cmd()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_protocol_Z  :  remote.c
</itemize>
</descrip>

<sect1>Local Function show_remote_protocol_Z_read_wp_packet_cmd()

<p><tt>static void show_remote_protocol_Z_read_wp_packet_cmd ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>show_packet_config_cmd()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_protocol_Z  :  remote.c
</itemize>
</descrip>

<sect1>Local Function show_remote_protocol_Z_software_bp_packet_cmd()

<p><tt>static void show_remote_protocol_Z_software_bp_packet_cmd ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>show_packet_config_cmd()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_protocol_Z  :  remote.c
</itemize>
</descrip>

<sect1>Local Function show_remote_protocol_Z_write_wp_packet_cmd()

<p><tt>static void show_remote_protocol_Z_write_wp_packet_cmd ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>show_packet_config_cmd()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_protocol_Z  :  remote.c
</itemize>
</descrip>

<sect1>Local Function show_remote_protocol_binary_download_cmd()

<p><tt>static void show_remote_protocol_binary_download_cmd ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>show_packet_config_cmd()  :  remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>show_remote_cmd()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_protocol_binary_download  :  remote.c
</itemize>
</descrip>

<sect1>Local Function show_remote_protocol_p_packet_cmd()

<p><tt>static void show_remote_protocol_p_packet_cmd ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>show_packet_config_cmd()  :  remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>show_remote_cmd()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_protocol_p  :  remote.c
</itemize>
</descrip>

<sect1>Local Function show_remote_protocol_qGetTLSAddr_packet_cmd()

<p><tt>static void show_remote_protocol_qGetTLSAddr_packet_cmd ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>show_packet_config_cmd()  :  remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>show_remote_cmd()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_protocol_qGetTLSAddr  :  remote.c
</itemize>
</descrip>

<sect1>Local Function show_remote_protocol_qPart_auxv_packet_cmd()

<p><tt>static void show_remote_protocol_qPart_auxv_packet_cmd ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>show_packet_config_cmd()  :  remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>show_remote_cmd()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_protocol_qPart_auxv  :  remote.c
</itemize>
</descrip>

<sect1>Local Function show_remote_protocol_qSymbol_packet_cmd()

<p><tt>static void show_remote_protocol_qSymbol_packet_cmd ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>show_packet_config_cmd()  :  remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>show_remote_cmd()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_protocol_qSymbol  :  remote.c
</itemize>
</descrip>

<sect1>Local Function show_remote_protocol_vcont_packet_cmd()

<p><tt>static void show_remote_protocol_vcont_packet_cmd ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>show_packet_config_cmd()  :  remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>show_remote_cmd()  :  remote.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_remote()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>remote_protocol_vcont  :  remote.c
</itemize>
</descrip>

<sect1>Local Function start_no_ack_mode()

<p><tt>static void start_no_ack_mode ( void )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>getpkt()  :  remote.c
<item>putpkt()  :  remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_start_remote()  :  remote.c
<item>set_no_ack_mode_cmd()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>no_ack_mode  :  remote.c
</itemize>
</descrip>

<sect1>Local Function start_remote_timer()

<p><tt>static void start_remote_timer ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>gettimeofday()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>getpkt_sane()  :  remote.c
<item>putpkt_binary()  :  remote.c
<item>readchar()  :  remote.c
<item>remote_start_remote()  :  remote.c
<item>remote_stop()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_remote_stats  :  remote.c
</itemize>
</descrip>

<sect1>Local Function store_register_using_P()

<p><tt>static int store_register_using_P ( int regnum )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>bin2hex()  :  remote.c
<item>get_remote_state()  :  remote.c
<item>internal_error()  :  utils.c
<item>packet_reg_from_regnum()  :  remote.c
<item>phex_nz()  :  utils.c
<item>regcache_raw_collect()  :  regcache.c
<item>register_size()  :  regcache.c
<item>remote_send()  :  remote.c
<item>xsnprintf()  :  utils.c
<item>__builtin_alloca(), strlen()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_store_registers()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
<item>current_regcache  :  regcache.c
</itemize>
</descrip>

<sect1>Local Function stub_unpack_int()

<p><tt>static int stub_unpack_int ( char* buff, int fieldlength )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>stubhex()  :  remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_unpack_thread_info_response()  :  remote.c
<item>unpack_byte()  :  remote.c
<item>unpack_int()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function stubhex()

<p><tt>static int stubhex ( int ch )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>stub_unpack_int()  :  remote.c
<item>unpack_threadid()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function threadmatch()

<p><tt>static int threadmatch ( threadref* dest, threadref* src )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_get_threadlist()  :  remote.c
<item>remote_unpack_thread_info_response()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function threadref_to_int()

<p><tt>static int threadref_to_int ( threadref* ref )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_newthread_step()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function tohex()

<p><tt>static int tohex ( int nib )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>bin2hex()  :  remote.c
<item>putpkt_binary()  :  remote.c
<item>remote_resume()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function unpack_byte()

<p><tt>static char* unpack_byte ( char* buf, int* value )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>stub_unpack_int()  :  remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>parse_threadlist_response()  :  remote.c
<item>remote_unpack_thread_info_response()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function unpack_int()

<p><tt>static char* unpack_int ( char* buf, int* value )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>stub_unpack_int()  :  remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_unpack_thread_info_response()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function unpack_nibble()

<p><tt>static char* unpack_nibble ( char* buf, int* val )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>ishex()  :  remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>parse_threadlist_response()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function unpack_string()

<p><tt>static char* unpack_string ( char* src, char* dest, int length )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_unpack_thread_info_response()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function unpack_threadid()

<p><tt>static char* unpack_threadid ( char* inbuf, threadref* id )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>stubhex()  :  remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>parse_threadlist_response()  :  remote.c
<item>remote_unpack_thread_info_response()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function update_packet_config()

<p><tt>static void update_packet_config ( struct packet_config* config )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>remote.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>init_all_packet_configs()  :  remote.c
<item>set_remote_protocol_P_packet_cmd()  :  remote.c
<item>set_remote_protocol_Z_access_wp_packet_cmd()  :  remote.c
<item>set_remote_protocol_Z_hardware_bp_packet_cmd()  :  remote.c
<item>set_remote_protocol_Z_packet_cmd()  :  remote.c
<item>set_remote_protocol_Z_read_wp_packet_cmd()  :  remote.c
<item>set_remote_protocol_Z_software_bp_packet_cmd()  :  remote.c
<item>set_remote_protocol_Z_write_wp_packet_cmd()  :  remote.c
<item>set_remote_protocol_binary_download_cmd()  :  remote.c
<item>set_remote_protocol_p_packet_cmd()  :  remote.c
<item>set_remote_protocol_qGetTLSAddr_packet_cmd()  :  remote.c
<item>set_remote_protocol_qPart_auxv_packet_cmd()  :  remote.c
<item>set_remote_protocol_qSymbol_packet_cmd()  :  remote.c
<item>set_remote_protocol_vcont_packet_cmd()  :  remote.c
</itemize>
</descrip>

<sect1>Local Function watchpoint_to_Z_packet()

<p><tt>static int watchpoint_to_Z_packet ( int type )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_insert_watchpoint()  :  remote.c
<item>remote_remove_watchpoint()  :  remote.c
</itemize>
</descrip>

</article>
