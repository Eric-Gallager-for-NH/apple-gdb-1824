{\rtf\ansi
\deff0
{\fonttbl
{\f0\froman Times New Roman;}
{\f1\fmodern Courier New;}
}
{\stylesheet
{\s0\f0\fs24 Normal;}
{\s1\f0\fs40\b\sb400\sa200\keepn\keep Heading 1;}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Heading 2;}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Heading 3;}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Heading 4;}
{\s5\f1\fs20\ql\sb50\sa50 Code;}
}
{\info{\comment
 This RTF file generated by cxref (version 1.6e).
 cxref program (c) Andrew M. Bishop 1995-2014.
 Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF printcmd.c
 CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
}}
\paperw11880\paperh16848\margl1440\margr1440\margt1440\margb1440
\sectd\plain
\s0\f0\fs24
{\s1\f0\fs40\b\sb400\sa200\keepn\keep File printcmd.c\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Included Files\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <errno.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <unistd.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_locale.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <locale.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../gdb/signals.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/symcat.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-file.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "xm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/xm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "nm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/i386/nm-i386.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/nm-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "tm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/tm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-tdep.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-tdep.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-thread-status.h"\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_types.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <inttypes.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_vm.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/kmod.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/tm-i386-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/fopen-bin.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdlib.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbarch.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_string.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/floatformat.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_regex.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "gdbtypes.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "expression.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdbtypes.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "language.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "expression.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdbcore.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdbcmd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "command.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-out.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "target.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "dcache.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "memattr.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "breakpoint.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb-events.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../include/demangle.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "valprint.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "annotate.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbtypes.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "symfile.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "objfiles.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <uuid/uuid.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_obstack.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/obstack.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symfile.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "inlining.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <block.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sqlite3.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "completer.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "ui-out.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_assert.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "block.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "disasm.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "objc-lang.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <Availability.h>\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Type definitions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct format_data\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct format_data}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int count;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 char format;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 char size;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct display\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct display}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct display* next;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct expression* exp;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int number;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct format_data format;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct block* block;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int enabled_p;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type enum argclass\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 enum argclass}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 no_arg;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int_arg;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 string_arg;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 double_arg;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 long_long_arg;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 pointer_arg;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Variables\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable inspect_it\par}
{\s5\f1\fs20\ql\sb50\sa50 int inspect_it\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell ada-valprint.c\cell\cell\row
\cell c-lang.c\cell\cell\row
\cell c-valprint.c\cell\cell\row
\cell cp-valprint.c\cell\cell\row
\cell f-lang.c\cell\cell\row
\cell f-valprint.c\cell\cell\row
\cell jv-valprint.c\cell\cell\row
\cell m2-lang.c\cell\cell\row
\cell objc-lang.c\cell\cell\row
\cell p-lang.c\cell\cell\row
\cell p-valprint.c\cell\cell\row
\cell printcmd.c\cell\cell\row
\cell scm-valprint.c\cell\cell\row
\cell valprint.c\cell\cell\row
Used in:\cell c_printstr()\cell c-lang.c\cell\row
\cell cp_print_value_fields()\cell cp-valprint.c\cell\row
\cell f_printstr()\cell f-lang.c\cell\row
\cell java_print_value_fields()\cell jv-valprint.c\cell\row
\cell m2_printstr()\cell m2-lang.c\cell\row
\cell objc_printstr()\cell objc-lang.c\cell\row
\cell pascal_object_print_value_fields()\cell p-valprint.c\cell\row
\cell pascal_printstr()\cell p-lang.c\cell\row
\cell print_command_1()\cell printcmd.c\cell\row
\cell print_field_values()\cell ada-valprint.c\cell\row
\cell printstr()\cell ada-valprint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable disassembly_name_length\par}
{\s5\f1\fs20\ql\sb50\sa50 int disassembly_name_length\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell disasm.c\cell\cell\row
\cell printcmd.c\cell\cell\row
Used in:\cell _initialize_printcmd()\cell printcmd.c\cell\row
\cell build_address_symbolic()\cell printcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable current_display_number\par}
{\s5\f1\fs20\ql\sb50\sa50 int current_display_number\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell printcmd.c\cell\cell\row
Used in:\cell _initialize_printcmd()\cell printcmd.c\cell\row
\cell disable_current_display()\cell printcmd.c\cell\row
\cell do_one_display()\cell printcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable g_examine_i_size\par}
{\s5\f1\fs20\ql\sb50\sa50 char g_examine_i_size\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell printcmd.c\cell\cell\row
Used in:\cell print_formatted()\cell printcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep External Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable asm_demangle\par}
{\s5\f1\fs20\ql\sb50\sa50 extern int asm_demangle\par}
\trowd\trgaph120\cellx1440\cellx5220
\intbl\plain
Defined in:\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep External Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable addressprint\par}
{\s5\f1\fs20\ql\sb50\sa50 extern int addressprint\par}
\trowd\trgaph120\cellx1440\cellx5220
\intbl\plain
Defined in:\cell valprint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep External Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable epoch_interface\par}
{\s5\f1\fs20\ql\sb50\sa50 extern int epoch_interface\par}
\trowd\trgaph120\cellx1440\cellx5220
\intbl\plain
Defined in:\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable last_format\par}
{\s5\f1\fs20\ql\sb50\sa50 static char last_format\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell print_command_1()\cell\cell\row
\cell x_command()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable last_size\par}
{\s5\f1\fs20\ql\sb50\sa50 static char last_size\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell x_command()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable next_address\par}
{\s5\f1\fs20\ql\sb50\sa50 static CORE_ADDR next_address\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell do_examine()\cell\cell\row
\cell print_formatted()\cell\cell\row
\cell set_next_address()\cell\cell\row
\cell x_command()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable last_examine_address\par}
{\s5\f1\fs20\ql\sb50\sa50 static CORE_ADDR last_examine_address\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell do_examine()\cell\cell\row
\cell x_command()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable last_examine_value\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct value* last_examine_value\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell do_examine()\cell\cell\row
\cell x_command()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable max_symbolic_offset\par}
{\s5\f1\fs20\ql\sb50\sa50 static unsigned int max_symbolic_offset\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_printcmd()\cell\cell\row
\cell build_address_symbolic()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable print_symbol_filename\par}
{\s5\f1\fs20\ql\sb50\sa50 static int print_symbol_filename\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_printcmd()\cell\cell\row
\cell build_address_symbolic()\cell\cell\row
\cell print_address_symbolic()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable display_chain\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct display* display_chain\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell clear_displays()\cell\cell\row
\cell delete_display()\cell\cell\row
\cell disable_display()\cell\cell\row
\cell disable_display_command()\cell\cell\row
\cell display_command()\cell\cell\row
\cell display_info()\cell\cell\row
\cell do_displays()\cell\cell\row
\cell enable_display()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable display_number\par}
{\s5\f1\fs20\ql\sb50\sa50 static int display_number\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell display_command()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable examine_i_type\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct type* examine_i_type\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_printcmd()\cell\cell\row
\cell do_examine()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable examine_b_type\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct type* examine_b_type\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_printcmd()\cell\cell\row
\cell do_examine()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable examine_h_type\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct type* examine_h_type\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_printcmd()\cell\cell\row
\cell do_examine()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable examine_w_type\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct type* examine_w_type\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_printcmd()\cell\cell\row
\cell do_examine()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable examine_g_type\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct type* examine_g_type\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_printcmd()\cell\cell\row
\cell do_examine()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable print_command_runs_all_threads_p\par}
{\s5\f1\fs20\ql\sb50\sa50 static int print_command_runs_all_threads_p\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_printcmd()\cell\cell\row
\cell print_command_1()\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Functions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function _initialize_printcmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 void _initialize_printcmd ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell printcmd.c\cell\cell\row
Calls: \cell init_type()\cell gdbtypes.c\cell\row
\cell  add_alias_cmd(), add_cmd(), add_com(), add_com_alias(), add_info(), add_prefix_cmd(), add_setshow_boolean_cmd(), add_setshow_uinteger_cmd(), add_setshow_zinteger_cmd(), set_cmd_completer()\cell\cell\row
Refs Func:\cell address_info()\cell printcmd.c\cell\row
\cell call_command()\cell printcmd.c\cell\row
\cell disable_display_command()\cell printcmd.c\cell\row
\cell display_command()\cell printcmd.c\cell\row
\cell display_info()\cell printcmd.c\cell\row
\cell enable_display()\cell printcmd.c\cell\row
\cell inspect_command()\cell printcmd.c\cell\row
\cell invoke_block_command()\cell printcmd.c\cell\row
\cell location_completer()\cell completer.c\cell\row
\cell output_command()\cell printcmd.c\cell\row
\cell print_command()\cell printcmd.c\cell\row
\cell printf_command()\cell printcmd.c\cell\row
\cell set_command()\cell printcmd.c\cell\row
\cell show_max_symbolic_offset()\cell printcmd.c\cell\row
\cell show_print_symbol_filename()\cell printcmd.c\cell\row
\cell sym_info()\cell printcmd.c\cell\row
\cell undisplay_command()\cell printcmd.c\cell\row
\cell x_command()\cell printcmd.c\cell\row
Refs Var:\cell current_display_number\cell printcmd.c\cell\row
\cell dbx_commands\cell main.c\cell\row
\cell disassembly_name_length\cell printcmd.c\cell\row
\cell examine_b_type\cell printcmd.c\cell\row
\cell examine_g_type\cell printcmd.c\cell\row
\cell examine_h_type\cell printcmd.c\cell\row
\cell examine_i_type\cell printcmd.c\cell\row
\cell examine_w_type\cell printcmd.c\cell\row
\cell max_symbolic_offset\cell printcmd.c\cell\row
\cell print_command_runs_all_threads_p\cell printcmd.c\cell\row
\cell print_symbol_filename\cell printcmd.c\cell\row
\cell  cmdlist, deletelist, disablelist, enablelist, setlist, setprintlist, showlist, showprintlist\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function build_address_symbolic()\par}
{\s5\f1\fs20\ql\sb50\sa50 int build_address_symbolic ( CORE_ADDR addr, int do_demangle, char** name, int* offset, char** filename, int* line, int* unmapped )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell find_pc_overlay()\cell symfile.c\cell\row
\cell find_pc_sect_function()\cell blockframe.c\cell\row
\cell find_pc_sect_in_ordered_sections()\cell objfiles.c\cell\row
\cell find_pc_sect_line()\cell symtab.c\cell\row
\cell lookup_minimal_symbol_by_pc_section()\cell minsyms.c\cell\row
\cell overlay_mapped_address()\cell symfile.c\cell\row
\cell pc_in_unmapped_range()\cell symfile.c\cell\row
\cell symbol_natural_name()\cell symtab.c\cell\row
\cell  strlen(), xstrdup()\cell\cell\row
Called by:\cell dump_insns()\cell disasm.c\cell\row
\cell print_address_symbolic()\cell printcmd.c\cell\row
Refs Var:\cell asm_demangle\cell utils.c\cell\row
\cell demangle\cell utils.c\cell\row
\cell disassembly_name_length\cell printcmd.c\cell\row
\cell max_symbolic_offset\cell printcmd.c\cell\row
\cell overlay_debugging\cell symfile.c\cell\row
\cell print_symbol_filename\cell printcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function clear_displays()\par}
{\s5\f1\fs20\ql\sb50\sa50 void clear_displays ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell breakpoint.h\cell\cell\row
Calls: \cell xfree()\cell utils.c\cell\row
Called by:\cell clear_symtab_users()\cell symfile.c\cell\row
\cell undisplay_command()\cell printcmd.c\cell\row
Refs Var:\cell display_chain\cell printcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function deprecated_print_address_numeric()\par}
{\s5\f1\fs20\ql\sb50\sa50 void deprecated_print_address_numeric ( CORE_ADDR addr, int use_local, struct ui_file* stream )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell fputs_filtered()\cell utils.c\cell\row
\cell gdbarch_addr_bit()\cell gdbarch.c\cell\row
\cell paddress()\cell utils.c\cell\row
\cell print_longest()\cell valprint.c\cell\row
Called by:\cell ada_val_print_1()\cell ada-valprint.c\cell\row
\cell address_info()\cell printcmd.c\cell\row
\cell c_val_print()\cell c-valprint.c\cell\row
\cell delete_breakpoint()\cell breakpoint.c\cell\row
\cell describe_other_breakpoints()\cell breakpoint.c\cell\row
\cell dump_die()\cell dwarf2read.c\cell\row
\cell dump_msymbols()\cell symmisc.c\cell\row
\cell dump_psymtab()\cell symmisc.c\cell\row
\cell dump_symtab_1()\cell symmisc.c\cell\row
\cell f_val_print()\cell f-valprint.c\cell\row
\cell frame_info()\cell stack.c\cell\row
\cell insert_bp_location()\cell breakpoint.c\cell\row
\cell jump_command()\cell infcmd.c\cell\row
\cell list_overlays_command()\cell symfile.c\cell\row
\cell maintenance_check_symtabs()\cell symmisc.c\cell\row
\cell maintenance_info_psymtabs()\cell symmisc.c\cell\row
\cell mention()\cell breakpoint.c\cell\row
\cell pascal_val_print()\cell p-valprint.c\cell\row
\cell print_address()\cell printcmd.c\cell\row
\cell print_address_demangle()\cell printcmd.c\cell\row
\cell print_block_frame_labels()\cell stack.c\cell\row
\cell print_function_pointer_address()\cell c-valprint.c\cell\row
\cell print_partial_symbols()\cell symmisc.c\cell\row
\cell print_symbol()\cell symmisc.c\cell\row
\cell scope_info()\cell tracepoint.c\cell\row
\cell trace_mention()\cell tracepoint.c\cell\row
\cell val_print_string()\cell valprint.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function disable_current_display()\par}
{\s5\f1\fs20\ql\sb50\sa50 void disable_current_display ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell breakpoint.h\cell\cell\row
Calls: \cell disable_display()\cell printcmd.c\cell\row
\cell fprintf_unfiltered()\cell utils.c\cell\row
Called by:\cell normal_stop()\cell infrun.c\cell\row
Refs Var:\cell current_display_number\cell printcmd.c\cell\row
\cell gdb_stderr\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function disable_display()\par}
{\s5\f1\fs20\ql\sb50\sa50 void disable_display ( int num )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell breakpoint.h\cell\cell\row
Calls: \cell printf_unfiltered()\cell utils.c\cell\row
Called by:\cell disable_current_display()\cell printcmd.c\cell\row
\cell disable_display_command()\cell printcmd.c\cell\row
Refs Var:\cell display_chain\cell printcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function do_displays()\par}
{\s5\f1\fs20\ql\sb50\sa50 void do_displays ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell breakpoint.h\cell\cell\row
Calls: \cell do_one_display()\cell printcmd.c\cell\row
Called by:\cell display_command()\cell printcmd.c\cell\row
\cell finish_tfind_command()\cell tracepoint.c\cell\row
\cell normal_stop()\cell infrun.c\cell\row
Refs Var:\cell display_chain\cell printcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function output_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 void output_command ( const char* exp, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell printcmd.c\cell\cell\row
Calls: \cell decode_format()\cell printcmd.c\cell\row
\cell do_cleanups()\cell utils.c\cell\row
\cell evaluate_expression()\cell eval.c\cell\row
\cell gdb_flush()\cell ui-file.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell parse_expression()\cell parse.c\cell\row
\cell print_formatted()\cell printcmd.c\cell\row
\cell validate_format()\cell printcmd.c\cell\row
\cell value_type()\cell value.c\cell\row
\cell wrap_here()\cell utils.c\cell\row
\cell  annotate_value_begin(), annotate_value_end()\cell\cell\row
Called by:\cell trace_dump_command()\cell tracepoint.c\cell\row
Used in:\cell _initialize_printcmd()\cell printcmd.c\cell\row
Refs Func:\cell free_current_contents()\cell utils.c\cell\row
Refs Var:\cell gdb_stdout\cell main.c\cell\row
\cell innermost_block\cell parse.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function print_address()\par}
{\s5\f1\fs20\ql\sb50\sa50 void print_address ( CORE_ADDR addr, struct ui_file* stream )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell deprecated_print_address_numeric()\cell printcmd.c\cell\row
Called by:\cell dis_asm_print_address()\cell disasm.c\cell\row
\cell do_examine()\cell printcmd.c\cell\row
\cell line_info()\cell source.c\cell\row
\cell print_scalar_formatted()\cell printcmd.c\cell\row
\cell trace_find_line_command()\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function print_address_demangle()\par}
{\s5\f1\fs20\ql\sb50\sa50 void print_address_demangle ( CORE_ADDR addr, struct ui_file* stream, int do_demangle )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell value.h\cell\cell\row
Calls: \cell deprecated_print_address_numeric()\cell printcmd.c\cell\row
\cell fprintf_filtered()\cell utils.c\cell\row
\cell print_address_symbolic()\cell printcmd.c\cell\row
Called by:\cell c_val_print()\cell c-valprint.c\cell\row
\cell f_val_print()\cell f-valprint.c\cell\row
\cell java_val_print()\cell jv-valprint.c\cell\row
\cell pascal_val_print()\cell p-valprint.c\cell\row
\cell print_function_pointer_address()\cell c-valprint.c\cell\row
Refs Var:\cell addressprint\cell valprint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function print_address_symbolic()\par}
{\s5\f1\fs20\ql\sb50\sa50 void print_address_symbolic ( CORE_ADDR addr, struct ui_file* stream, int do_demangle, const char* leadin )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell build_address_symbolic()\cell printcmd.c\cell\row
\cell do_cleanups()\cell utils.c\cell\row
\cell fprintf_filtered()\cell utils.c\cell\row
\cell fputs_filtered()\cell utils.c\cell\row
\cell gdbarch_addr_bit()\cell gdbarch.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
Called by:\cell print_address_demangle()\cell printcmd.c\cell\row
\cell print_one_breakpoint()\cell breakpoint.c\cell\row
\cell tracepoints_info()\cell tracepoint.c\cell\row
Refs Func:\cell free_current_contents()\cell utils.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\cell print_symbol_filename\cell printcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function print_scalar_formatted()\par}
{\s5\f1\fs20\ql\sb50\sa50 void print_scalar_formatted ( const void* valaddr, struct type* type, int format, int size, struct ui_file* stream )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell gdbtypes.h\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
\cell fprintf_filtered()\cell utils.c\cell\row
\cell fputs_filtered()\cell utils.c\cell\row
\cell gdbarch_addr_bit()\cell gdbarch.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell objc_fixup_class_length()\cell objc-lang.c\cell\row
\cell print_address()\cell printcmd.c\cell\row
\cell print_binary_chars()\cell valprint.c\cell\row
\cell print_char_chars()\cell valprint.c\cell\row
\cell print_decimal_chars()\cell valprint.c\cell\row
\cell print_floating()\cell valprint.c\cell\row
\cell print_floating_in_hex()\cell valprint.c\cell\row
\cell print_hex_chars()\cell valprint.c\cell\row
\cell print_longest()\cell valprint.c\cell\row
\cell print_octal_chars()\cell valprint.c\cell\row
\cell print_ostype()\cell valprint.c\cell\row
\cell unpack_long()\cell value.c\cell\row
\cell unpack_pointer()\cell value.c\cell\row
\cell value_from_longest()\cell value.c\cell\row
\cell value_print()\cell valprint.c\cell\row
\cell  __builtin___strcpy_chk(), __builtin_object_size(), __inline_strcpy_chk()\cell\cell\row
Called by:\cell ada_val_print_1()\cell ada-valprint.c\cell\row
\cell c_val_print()\cell c-valprint.c\cell\row
\cell f_val_print()\cell f-valprint.c\cell\row
\cell java_val_print()\cell jv-valprint.c\cell\row
\cell pascal_val_print()\cell p-valprint.c\cell\row
\cell print_formatted()\cell printcmd.c\cell\row
Refs Var:\cell builtin_type_double\cell gdbtypes.c\cell\row
\cell builtin_type_float\cell gdbtypes.c\cell\row
\cell builtin_type_long_double\cell gdbtypes.c\cell\row
\cell builtin_type_true_char\cell gdbtypes.c\cell\row
\cell current_gdbarch\cell gdbarch.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function print_variable_value()\par}
{\s5\f1\fs20\ql\sb50\sa50 void print_variable_value ( struct symbol* var, struct frame_info* frame, struct ui_file* stream )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell value.h\cell\cell\row
Calls: \cell read_var_value()\cell findvar.c\cell\row
\cell value_print()\cell valprint.c\cell\row
Called by:\cell info_common_command()\cell f-valprint.c\cell\row
\cell print_block_frame_locals()\cell stack.c\cell\row
\cell print_frame_arg_vars()\cell stack.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function set_next_address()\par}
{\s5\f1\fs20\ql\sb50\sa50 void set_next_address ( CORE_ADDR addr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell lookup_internalvar()\cell value.c\cell\row
\cell lookup_pointer_type()\cell gdbtypes.c\cell\row
\cell set_internalvar()\cell value.c\cell\row
\cell value_from_pointer()\cell value.c\cell\row
Called by:\cell breakpoint_1()\cell breakpoint.c\cell\row
\cell line_info()\cell source.c\cell\row
Refs Var:\cell builtin_type_void\cell gdbtypes.c\cell\row
\cell next_address\cell printcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function x_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 void x_command ( const char* exp, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell printcmd.c\cell\cell\row
Calls: \cell allocate_value()\cell value.c\cell\row
\cell decode_format()\cell printcmd.c\cell\row
\cell deprecated_value_address_hack()\cell value.c\cell\row
\cell deprecated_value_lval_hack()\cell value.c\cell\row
\cell do_cleanups()\cell utils.c\cell\row
\cell do_examine()\cell printcmd.c\cell\row
\cell evaluate_expression()\cell eval.c\cell\row
\cell lookup_internalvar()\cell value.c\cell\row
\cell lookup_pointer_type()\cell gdbtypes.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell parse_expression()\cell parse.c\cell\row
\cell set_internalvar()\cell value.c\cell\row
\cell value_as_address()\cell value.c\cell\row
\cell value_from_pointer()\cell value.c\cell\row
\cell value_ind()\cell valops.c\cell\row
\cell value_lazy()\cell value.c\cell\row
\cell value_type()\cell value.c\cell\row
Used in:\cell _initialize_printcmd()\cell printcmd.c\cell\row
Refs Func:\cell free_current_contents()\cell utils.c\cell\row
Refs Var:\cell builtin_type_void\cell gdbtypes.c\cell\row
\cell innermost_block\cell parse.c\cell\row
\cell last_examine_address\cell printcmd.c\cell\row
\cell last_examine_value\cell printcmd.c\cell\row
\cell last_format\cell printcmd.c\cell\row
\cell last_size\cell printcmd.c\cell\row
\cell next_address\cell printcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function address_info()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void address_info ( const char* exp, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell printcmd.c\cell\cell\row
Calls: \cell deprecated_print_address_numeric()\cell printcmd.c\cell\row
\cell error()\cell utils.c\cell\row
\cell fprintf_symbol_filtered()\cell utils.c\cell\row
\cell gdbarch_register_name()\cell gdbarch.c\cell\row
\cell get_selected_block()\cell stack.c\cell\row
\cell lookup_minimal_symbol()\cell minsyms.c\cell\row
\cell lookup_symbol()\cell symtab.c\cell\row
\cell overlay_unmapped_address()\cell symfile.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell section_is_overlay()\cell symfile.c\cell\row
Used in:\cell _initialize_printcmd()\cell printcmd.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\cell current_language\cell language.c\cell\row
\cell gdb_stdout\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function call_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void call_command ( const char* exp, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell printcmd.c\cell\cell\row
Calls: \cell print_command_1()\cell printcmd.c\cell\row
Used in:\cell _initialize_printcmd()\cell printcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function decode_format()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct format_data decode_format ( const char** string_ptr, int oformat, int osize )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell printcmd.c\cell\cell\row
Calls: \cell gdbarch_ptr_bit()\cell gdbarch.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell  atoi()\cell\cell\row
Called by:\cell display_command()\cell printcmd.c\cell\row
\cell output_command()\cell printcmd.c\cell\row
\cell print_command_1()\cell printcmd.c\cell\row
\cell x_command()\cell printcmd.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function delete_display()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void delete_display ( int num )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell printcmd.c\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
\cell free_display()\cell printcmd.c\cell\row
Called by:\cell undisplay_command()\cell printcmd.c\cell\row
Refs Var:\cell display_chain\cell printcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function disable_display_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void disable_display_command ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell printcmd.c\cell\cell\row
Calls: \cell disable_display()\cell printcmd.c\cell\row
\cell error()\cell utils.c\cell\row
\cell  atoi()\cell\cell\row
Used in:\cell _initialize_printcmd()\cell printcmd.c\cell\row
Refs Var:\cell display_chain\cell printcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function display_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void display_command ( const char* exp, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell printcmd.c\cell\cell\row
Calls: \cell decode_format()\cell printcmd.c\cell\row
\cell do_displays()\cell printcmd.c\cell\row
\cell do_one_display()\cell printcmd.c\cell\row
\cell dont_repeat()\cell top.c\cell\row
\cell parse_expression()\cell parse.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
Used in:\cell _initialize_printcmd()\cell printcmd.c\cell\row
Refs Var:\cell current_target\cell target/target.c\cell\row
\cell display_chain\cell printcmd.c\cell\row
\cell display_number\cell printcmd.c\cell\row
\cell innermost_block\cell parse.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function display_info()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void display_info ( const char* ignore, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell printcmd.c\cell\cell\row
Calls: \cell contained_in()\cell block.c\cell\row
\cell gdb_flush()\cell ui-file.c\cell\row
\cell get_selected_block()\cell stack.c\cell\row
\cell print_expression()\cell expprint.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell printf_unfiltered()\cell utils.c\cell\row
Used in:\cell _initialize_printcmd()\cell printcmd.c\cell\row
Refs Var:\cell display_chain\cell printcmd.c\cell\row
\cell gdb_stdout\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function do_examine()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void do_examine ( struct format_data fmt, CORE_ADDR addr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell gdb_flush()\cell ui-file.c\cell\row
\cell print_address()\cell printcmd.c\cell\row
\cell print_formatted()\cell printcmd.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell quit()\cell utils.c\cell\row
\cell release_value()\cell value.c\cell\row
\cell value_at_lazy()\cell valops.c\cell\row
\cell value_free()\cell value.c\cell\row
Called by:\cell do_one_display()\cell printcmd.c\cell\row
\cell x_command()\cell printcmd.c\cell\row
Refs Var:\cell examine_b_type\cell printcmd.c\cell\row
\cell examine_g_type\cell printcmd.c\cell\row
\cell examine_h_type\cell printcmd.c\cell\row
\cell examine_i_type\cell printcmd.c\cell\row
\cell examine_w_type\cell printcmd.c\cell\row
\cell gdb_null\cell main.c\cell\row
\cell gdb_stdout\cell main.c\cell\row
\cell last_examine_address\cell printcmd.c\cell\row
\cell last_examine_value\cell printcmd.c\cell\row
\cell next_address\cell printcmd.c\cell\row
\cell quit_flag\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function do_one_display()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void do_one_display ( struct display* d )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell printcmd.c\cell\cell\row
Calls: \cell contained_in()\cell block.c\cell\row
\cell do_examine()\cell printcmd.c\cell\row
\cell evaluate_expression()\cell eval.c\cell\row
\cell gdb_flush()\cell ui-file.c\cell\row
\cell gdbarch_addr_bits_remove()\cell gdbarch.c\cell\row
\cell get_selected_block()\cell stack.c\cell\row
\cell print_expression()\cell expprint.c\cell\row
\cell print_formatted()\cell printcmd.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell value_as_address()\cell value.c\cell\row
\cell  annotate_display_begin(), annotate_display_end(), annotate_display_expression(), annotate_display_expression_end(), annotate_display_format(), annotate_display_number_end(), annotate_display_value()\cell\cell\row
Called by:\cell display_command()\cell printcmd.c\cell\row
\cell do_displays()\cell printcmd.c\cell\row
Refs Var:\cell current_display_number\cell printcmd.c\cell\row
\cell current_gdbarch\cell gdbarch.c\cell\row
\cell gdb_stdout\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function enable_display()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void enable_display ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell printcmd.c\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
\cell printf_unfiltered()\cell utils.c\cell\row
\cell  atoi()\cell\cell\row
Used in:\cell _initialize_printcmd()\cell printcmd.c\cell\row
Refs Var:\cell display_chain\cell printcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function free_display()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void free_display ( struct display* d )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell printcmd.c\cell\cell\row
Calls: \cell xfree()\cell utils.c\cell\row
Called by:\cell delete_display()\cell printcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function inspect_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void inspect_command ( const char* exp, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell printcmd.c\cell\cell\row
Calls: \cell print_command_1()\cell printcmd.c\cell\row
Used in:\cell _initialize_printcmd()\cell printcmd.c\cell\row
Refs Var:\cell epoch_interface\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function invoke_block_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void invoke_block_command ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell call_function_by_hand()\cell infcall.c\cell\row
\cell check_typedef()\cell gdbtypes.c\cell\row
\cell do_cleanups()\cell utils.c\cell\row
\cell error()\cell utils.c\cell\row
\cell evaluate_expression()\cell eval.c\cell\row
\cell get_closure_implementation_fn()\cell gdbtypes.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell make_cleanup_freeargv()\cell utils.c\cell\row
\cell make_cleanup_set_restore_print_closure()\cell eval.c\cell\row
\cell parse_expression()\cell parse.c\cell\row
\cell print_formatted()\cell printcmd.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell record_latest_value()\cell value.c\cell\row
\cell value_type()\cell value.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  annotate_value_begin(), annotate_value_end(), annotate_value_history_begin(), annotate_value_history_end(), annotate_value_history_value(), buildargv()\cell\cell\row
Used in:\cell _initialize_printcmd()\cell printcmd.c\cell\row
Refs Func:\cell xfree()\cell utils.c\cell\row
Refs Var:\cell gdb_stdout\cell main.c\cell\row
\cell innermost_block\cell parse.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function print_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void print_command ( const char* exp, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell printcmd.c\cell\cell\row
Calls: \cell print_command_1()\cell printcmd.c\cell\row
Used in:\cell _initialize_printcmd()\cell printcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function print_command_1()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void print_command_1 ( const char* exp, int inspect, int voidprint )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell printcmd.c\cell\cell\row
Calls: \cell access_value_history()\cell value.c\cell\row
\cell decode_format()\cell printcmd.c\cell\row
\cell do_cleanups()\cell utils.c\cell\row
\cell evaluate_expression()\cell eval.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell parse_expression()\cell parse.c\cell\row
\cell print_formatted()\cell printcmd.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell printf_unfiltered()\cell utils.c\cell\row
\cell record_latest_value()\cell value.c\cell\row
\cell validate_format()\cell printcmd.c\cell\row
\cell value_type()\cell value.c\cell\row
\cell  annotate_value_begin(), annotate_value_end(), annotate_value_history_begin(), annotate_value_history_end(), annotate_value_history_value()\cell\cell\row
Called by:\cell call_command()\cell printcmd.c\cell\row
\cell inspect_command()\cell printcmd.c\cell\row
\cell print_command()\cell printcmd.c\cell\row
Refs Func:\cell free_current_contents()\cell utils.c\cell\row
Refs Var:\cell current_target\cell target/target.c\cell\row
\cell gdb_stdout\cell main.c\cell\row
\cell innermost_block\cell parse.c\cell\row
\cell inspect_it\cell printcmd.c\cell\row
\cell last_format\cell printcmd.c\cell\row
\cell print_command_runs_all_threads_p\cell printcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function print_formatted()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void print_formatted ( struct value* val, int format, int size, struct ui_file* stream )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell printcmd.c\cell\cell\row
Calls: \cell check_typedef()\cell gdbtypes.c\cell\row
\cell deprecated_value_address_hack()\cell value.c\cell\row
\cell deprecated_value_lval_hack()\cell value.c\cell\row
\cell gdb_print_insn()\cell disasm.c\cell\row
\cell objc_fixup_class_length()\cell objc-lang.c\cell\row
\cell print_ostype()\cell valprint.c\cell\row
\cell print_scalar_formatted()\cell printcmd.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell val_print_string()\cell valprint.c\cell\row
\cell value_contents()\cell value.c\cell\row
\cell value_print()\cell valprint.c\cell\row
\cell value_type()\cell value.c\cell\row
\cell wrap_here()\cell utils.c\cell\row
Called by:\cell do_examine()\cell printcmd.c\cell\row
\cell do_one_display()\cell printcmd.c\cell\row
\cell invoke_block_command()\cell printcmd.c\cell\row
\cell output_command()\cell printcmd.c\cell\row
\cell print_command_1()\cell printcmd.c\cell\row
Refs Var:\cell g_examine_i_size\cell printcmd.c\cell\row
\cell gdb_stdout\cell main.c\cell\row
\cell next_address\cell printcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function printf_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void printf_command ( const char* arg, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell printcmd.c\cell\cell\row
Calls: \cell deprecated_set_value_type()\cell value.c\cell\row
\cell do_cleanups()\cell utils.c\cell\row
\cell error()\cell utils.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell objc_fixup_class_length()\cell objc-lang.c\cell\row
\cell parse_to_comma_and_eval()\cell eval.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell puts_filtered()\cell utils.c\cell\row
\cell quit()\cell utils.c\cell\row
\cell read_memory()\cell corefile.c\cell\row
\cell value_as_address()\cell value.c\cell\row
\cell value_as_double()\cell value.c\cell\row
\cell value_as_long()\cell value.c\cell\row
\cell value_type()\cell value.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell xrealloc()\cell utils.c\cell\row
\cell  __builtin___memset_chk(), __builtin___strncpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_memset_chk(), __inline_strncpy_chk(), error_no_arg(), strchr(), strlen()\cell\cell\row
Used in:\cell _initialize_printcmd()\cell printcmd.c\cell\row
Refs Func:\cell free_current_contents()\cell utils.c\cell\row
Refs Var:\cell builtin_type_double\cell gdbtypes.c\cell\row
\cell builtin_type_float\cell gdbtypes.c\cell\row
\cell current_target\cell target/target.c\cell\row
\cell quit_flag\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void set_command ( const char* exp, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell printcmd.c\cell\cell\row
Calls: \cell do_cleanups()\cell utils.c\cell\row
\cell evaluate_expression()\cell eval.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell parse_expression()\cell parse.c\cell\row
Used in:\cell _initialize_printcmd()\cell printcmd.c\cell\row
Refs Func:\cell free_current_contents()\cell utils.c\cell\row
Refs Var:\cell innermost_block\cell parse.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_max_symbolic_offset()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_max_symbolic_offset ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell fprintf_filtered()\cell utils.c\cell\row
Used in:\cell _initialize_printcmd()\cell printcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_print_symbol_filename()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_print_symbol_filename ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell fprintf_filtered()\cell utils.c\cell\row
Used in:\cell _initialize_printcmd()\cell printcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function sym_info()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void sym_info ( const char* arg, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell printcmd.c\cell\cell\row
Calls: \cell lookup_minimal_symbol_by_pc_section()\cell minsyms.c\cell\row
\cell objfile_get_first()\cell objfiles.c\cell\row
\cell objfile_get_next()\cell objfiles.c\cell\row
\cell overlay_mapped_address()\cell symfile.c\cell\row
\cell parse_and_eval_address()\cell eval.c\cell\row
\cell pc_in_unmapped_range()\cell symfile.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell section_is_mapped()\cell symfile.c\cell\row
\cell section_is_overlay()\cell symfile.c\cell\row
\cell symbol_natural_name()\cell symtab.c\cell\row
\cell  error_no_arg()\cell\cell\row
Used in:\cell _initialize_printcmd()\cell printcmd.c\cell\row
Refs Var:\cell demangle\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function undisplay_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void undisplay_command ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell printcmd.c\cell\cell\row
Calls: \cell clear_displays()\cell printcmd.c\cell\row
\cell delete_display()\cell printcmd.c\cell\row
\cell dont_repeat()\cell top.c\cell\row
\cell error()\cell utils.c\cell\row
\cell query()\cell utils.c\cell\row
\cell  atoi()\cell\cell\row
Used in:\cell _initialize_printcmd()\cell printcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function validate_format()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void validate_format ( struct format_data fmt, const char* cmdname )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell printcmd.c\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
Called by:\cell output_command()\cell printcmd.c\cell\row
\cell print_command_1()\cell printcmd.c\cell\row
\intbl0
}
