{\rtf\ansi
\deff0
{\fonttbl
{\f0\froman Times New Roman;}
{\f1\fmodern Courier New;}
}
{\stylesheet
{\s0\f0\fs24 Normal;}
{\s1\f0\fs40\b\sb400\sa200\keepn\keep Heading 1;}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Heading 2;}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Heading 3;}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Heading 4;}
{\s5\f1\fs20\ql\sb50\sa50 Code;}
}
{\info{\comment
 This RTF file generated by cxref (version 1.6e).
 cxref program (c) Andrew M. Bishop 1995-2014.
 Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF disasm.c
 CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
}}
\paperw11880\paperh16848\margl1440\margr1440\margt1440\margb1440
\sectd\plain
\s0\f0\fs24
{\s1\f0\fs40\b\sb400\sa200\keepn\keep File disasm.c\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Included Files\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <errno.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <unistd.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_locale.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <locale.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../gdb/signals.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/symcat.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-file.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "xm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/xm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "nm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/i386/nm-i386.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/nm-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "tm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/tm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-tdep.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-tdep.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-thread-status.h"\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_types.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <inttypes.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_vm.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/kmod.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/tm-i386-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/fopen-bin.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdlib.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbarch.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "target.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "dcache.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "memattr.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/floatformat.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_regex.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "gdbtypes.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "expression.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "ui-out.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_string.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "disasm.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdbcore.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../include/dis-asm.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_assert.h"\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Type definitions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct dis_line_entry\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct dis_line_entry}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int line;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 CORE_ADDR start_pc;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 CORE_ADDR end_pc;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Functions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function find_pc_offset()\par}
{\s5\f1\fs20\ql\sb50\sa50 int find_pc_offset ( CORE_ADDR start, CORE_ADDR* result, int offset, int funclimit, int peeklimit )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell disasm.h\cell\cell\row
Calls: \cell do_cleanups()\cell utils.c\cell\row
\cell find_pc_partial_function_no_inlined()\cell blockframe.c\cell\row
\cell gdb_disassemble_info_null()\cell disasm.c\cell\row
\cell gdbarch_instruction_length()\cell disasm.c\cell\row
\cell gdbarch_print_insn()\cell gdbarch.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell ui_out_is_mi_like_p()\cell ui-out.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
Refs Func:\cell xfree()\cell utils.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\cell uiout\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function gdb_disassembly()\par}
{\s5\f1\fs20\ql\sb50\sa50 void gdb_disassembly ( struct ui_out* uiout, CORE_ADDR low, CORE_ADDR high, int mixed_source_and_assembly, int how_many )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell disasm.h\cell\cell\row
Calls: \cell do_assembly_only()\cell disasm.c\cell\row
\cell do_cleanups()\cell utils.c\cell\row
\cell do_mixed_source_and_assembly()\cell disasm.c\cell\row
\cell find_pc_symtab()\cell symtab.c\cell\row
\cell gdb_disassemble_info()\cell disasm.c\cell\row
\cell gdb_flush()\cell ui-file.c\cell\row
\cell make_cleanup_ui_out_stream_delete()\cell ui-out.c\cell\row
\cell ui_out_stream_new()\cell ui-out.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\cell gdb_stdout\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function gdb_print_insn()\par}
{\s5\f1\fs20\ql\sb50\sa50 int gdb_print_insn ( CORE_ADDR memaddr, struct ui_file* stream )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell disasm.h\cell\cell\row
Calls: \cell do_cleanups()\cell utils.c\cell\row
\cell gdb_disassemble_info()\cell disasm.c\cell\row
\cell gdbarch_print_insn()\cell gdbarch.c\cell\row
\cell make_cleanup_ui_out_stream_delete()\cell ui-out.c\cell\row
\cell make_cleanup_ui_out_tuple_begin_end()\cell ui-out.c\cell\row
\cell ui_file_rewind()\cell ui-file.c\cell\row
\cell ui_out_field_stream()\cell ui-out.c\cell\row
\cell ui_out_message()\cell ui-out.c\cell\row
\cell ui_out_stream_new()\cell ui-out.c\cell\row
\cell ui_out_text()\cell ui-out.c\cell\row
Called by:\cell print_formatted()\cell printcmd.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\cell uiout\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function compare_lines()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int compare_lines ( const void* mle1p, const void* mle2p )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell do_mixed_source_and_assembly()\cell disasm.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function dis_asm_memory_error()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void dis_asm_memory_error ( int status, bfd_vma memaddr, struct disassemble_info* info )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell memory_error()\cell corefile.c\cell\row
Used in:\cell gdb_disassemble_info()\cell disasm.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function dis_asm_print_address()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void dis_asm_print_address ( bfd_vma addr, struct disassemble_info* info )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell print_address()\cell printcmd.c\cell\row
Used in:\cell gdb_disassemble_info()\cell disasm.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function dis_asm_read_memory()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int dis_asm_read_memory ( bfd_vma memaddr, gdb_byte* myaddr, unsigned int len, struct disassemble_info* info )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell target_read_memory()\cell target/target.c\cell\row
Used in:\cell gdb_disassemble_info()\cell disasm.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function do_assembly_only()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void do_assembly_only ( struct ui_out* uiout, struct disassemble_info* di, CORE_ADDR low, CORE_ADDR high, int how_many, struct ui_stream* stb )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell do_cleanups()\cell utils.c\cell\row
\cell dump_insns()\cell disasm.c\cell\row
\cell make_cleanup_ui_out_list_begin_end()\cell ui-out.c\cell\row
Called by:\cell gdb_disassembly()\cell disasm.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function do_mixed_source_and_assembly()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void do_mixed_source_and_assembly ( struct ui_out* uiout, struct disassemble_info* di, int nlines, struct linetable_entry* le, CORE_ADDR low, CORE_ADDR high, struct symtab* symtab, int how_many, struct ui_stream* stb )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell do_cleanups()\cell utils.c\cell\row
\cell dump_insns()\cell disasm.c\cell\row
\cell find_pc_line()\cell symtab.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell make_cleanup_ui_out_list_begin_end()\cell ui-out.c\cell\row
\cell make_cleanup_ui_out_tuple_begin_end()\cell ui-out.c\cell\row
\cell print_source_lines()\cell source.c\cell\row
\cell ui_out_text()\cell ui-out.c\cell\row
\cell  __builtin_alloca(), qsort()\cell\cell\row
Called by:\cell gdb_disassembly()\cell disasm.c\cell\row
Refs Func:\cell compare_lines()\cell disasm.c\cell\row
\cell null_cleanup()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function dump_insns()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int dump_insns ( struct ui_out* uiout, struct disassemble_info* di, CORE_ADDR low, CORE_ADDR high, int how_many, struct ui_stream* stb )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell build_address_symbolic()\cell printcmd.c\cell\row
\cell do_cleanups()\cell utils.c\cell\row
\cell gdbarch_print_insn()\cell gdbarch.c\cell\row
\cell make_cleanup_ui_out_tuple_begin_end()\cell ui-out.c\cell\row
\cell quit()\cell utils.c\cell\row
\cell ui_file_rewind()\cell ui-file.c\cell\row
\cell ui_out_field_core_addr()\cell ui-out.c\cell\row
\cell ui_out_field_int()\cell ui-out.c\cell\row
\cell ui_out_field_stream()\cell ui-out.c\cell\row
\cell ui_out_field_string()\cell ui-out.c\cell\row
\cell ui_out_message()\cell ui-out.c\cell\row
\cell ui_out_text()\cell ui-out.c\cell\row
\cell warning()\cell utils.c\cell\row
\cell xfree()\cell utils.c\cell\row
Called by:\cell do_assembly_only()\cell disasm.c\cell\row
\cell do_mixed_source_and_assembly()\cell disasm.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\cell quit_flag\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function fprintf_disasm()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int fprintf_disasm ( void* stream, const char* format, ... )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell disasm.c\cell\cell\row
Calls: \cell vfprintf_filtered()\cell utils.c\cell\row
\cell  __builtin_va_end(), __builtin_va_start()\cell\cell\row
Used in:\cell gdb_disassemble_info()\cell disasm.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function gdb_disassemble_info()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct disassemble_info gdb_disassemble_info ( struct gdbarch* gdbarch, struct ui_file* file )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell gdbarch_bfd_arch_info()\cell gdbarch.c\cell\row
\cell gdbarch_byte_order()\cell gdbarch.c\cell\row
\cell  disassemble_init_for_target(), init_disassemble_info()\cell\cell\row
Called by:\cell gdb_disassemble_info_null()\cell disasm.c\cell\row
\cell gdb_disassembly()\cell disasm.c\cell\row
\cell gdb_print_insn()\cell disasm.c\cell\row
Refs Func:\cell dis_asm_memory_error()\cell disasm.c\cell\row
\cell dis_asm_print_address()\cell disasm.c\cell\row
\cell dis_asm_read_memory()\cell disasm.c\cell\row
\cell fprintf_disasm()\cell disasm.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function gdb_disassemble_info_null()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct disassemble_info gdb_disassemble_info_null ( struct gdbarch* gdbarch )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell gdb_disassemble_info()\cell disasm.c\cell\row
Called by:\cell find_pc_offset()\cell disasm.c\cell\row
Refs Var:\cell gdb_null\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function gdbarch_instruction_length()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int gdbarch_instruction_length ( struct gdbarch* gdbarch )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell gdbarch_bfd_arch_info()\cell gdbarch.c\cell\row
Called by:\cell find_pc_offset()\cell disasm.c\cell\row
\intbl0
}
