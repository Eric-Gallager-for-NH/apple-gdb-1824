{\rtf\ansi
\deff0
{\fonttbl
{\f0\froman Times New Roman;}
{\f1\fmodern Courier New;}
}
{\stylesheet
{\s0\f0\fs24 Normal;}
{\s1\f0\fs40\b\sb400\sa200\keepn\keep Heading 1;}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Heading 2;}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Heading 3;}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Heading 4;}
{\s5\f1\fs20\ql\sb50\sa50 Code;}
}
{\info{\comment
 This RTF file generated by cxref (version 1.6e).
 cxref program (c) Andrew M. Bishop 1995-2014.
 Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF cli-out.c
 CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
}}
\paperw11880\paperh16848\margl1440\margr1440\margt1440\margb1440
\sectd\plain
\s0\f0\fs24
{\s1\f0\fs40\b\sb400\sa200\keepn\keep File cli-out.c\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Refs Func:\cell cli_begin()\cell cli-out.c\cell\row
\cell cli_end()\cell cli-out.c\cell\row
\cell cli_field_fmt()\cell cli-out.c\cell\row
\cell cli_field_int()\cell cli-out.c\cell\row
\cell cli_field_skip()\cell cli-out.c\cell\row
\cell cli_field_string()\cell cli-out.c\cell\row
\cell cli_flush()\cell cli-out.c\cell\row
\cell cli_message()\cell cli-out.c\cell\row
\cell cli_redirect()\cell cli-out.c\cell\row
\cell cli_spaces()\cell cli-out.c\cell\row
\cell cli_table_begin()\cell cli-out.c\cell\row
\cell cli_table_body()\cell cli-out.c\cell\row
\cell cli_table_end()\cell cli-out.c\cell\row
\cell cli_table_header()\cell cli-out.c\cell\row
\cell cli_text()\cell cli-out.c\cell\row
\cell cli_text_fmt()\cell cli-out.c\cell\row
\cell cli_wrap_hint()\cell cli-out.c\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Included Files\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <errno.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <unistd.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_locale.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <locale.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../gdb/signals.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/symcat.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-file.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "xm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/xm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "nm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/i386/nm-i386.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/nm-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "tm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/tm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-tdep.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-tdep.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-thread-status.h"\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_types.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <inttypes.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_vm.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/kmod.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/tm-i386-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/fopen-bin.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdlib.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbarch.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "ui-out.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "cli-out.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_string.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_assert.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "mi/mi-console.h"\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Type definitions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct ui_out_data\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct ui_out_data}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct ui_file* stream;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct ui_file* original_stream;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int suppress_output;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Typedef cli_out_data\par}
{\s5\f1\fs20\ql\sb50\sa50 typedef struct ui_out_data cli_out_data\par}
See:	Type struct ui_out_data\par
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Variables\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable cli_out_c_inited\par}
{\s5\f1\fs20\ql\sb50\sa50 int cli_out_c_inited\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell breakpoint.c\cell\cell\row
\cell cli-out.c\cell\cell\row
\cell objc-lang.c\cell\cell\row
\cell top.c\cell\cell\row
\cell utils.c\cell\cell\row
Used in:\cell _initialize_cli_out()\cell cli-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable cli_ui_out_impl\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct ui_out_impl cli_ui_out_impl\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell cli_out_new()\cell\cell\row
\cell cli_quoted_out_new()\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Functions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function _initialize_cli_out()\par}
{\s5\f1\fs20\ql\sb50\sa50 void _initialize_cli_out ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cli-out.c\cell\cell\row
Refs Var:\cell cli_out_c_inited\cell cli-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function cli_begin()\par}
{\s5\f1\fs20\ql\sb50\sa50 void cli_begin ( struct ui_out* uiout, enum ui_out_type type, int level, const char* id )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cli-out.c\cell\cell\row
Calls: \cell access_ui_out_data()\cell ui-out.c\cell\row
Used in:\cell cli-out.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function cli_end()\par}
{\s5\f1\fs20\ql\sb50\sa50 void cli_end ( struct ui_out* uiout, enum ui_out_type type, int level )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cli-out.c\cell\cell\row
Calls: \cell access_ui_out_data()\cell ui-out.c\cell\row
Used in:\cell cli-out.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function cli_field_fmt()\par}
{\s5\f1\fs20\ql\sb50\sa50 void cli_field_fmt ( struct ui_out* uiout, int fldno, int width, enum ui_align align, const char* fldname, const char* format, va_list args )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cli-out.c\cell\cell\row
Calls: \cell access_ui_out_data()\cell ui-out.c\cell\row
\cell field_separator()\cell cli-out.c\cell\row
\cell vfprintf_filtered()\cell utils.c\cell\row
Used in:\cell cli-out.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function cli_field_int()\par}
{\s5\f1\fs20\ql\sb50\sa50 void cli_field_int ( struct ui_out* uiout, int fldno, int width, enum ui_align alignment, const char* fldname, int value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cli-out.c\cell\cell\row
Calls: \cell access_ui_out_data()\cell ui-out.c\cell\row
\cell cli_field_string()\cell cli-out.c\cell\row
\cell  __builtin___snprintf_chk(), __builtin_object_size()\cell\cell\row
Used in:\cell cli-out.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function cli_field_skip()\par}
{\s5\f1\fs20\ql\sb50\sa50 void cli_field_skip ( struct ui_out* uiout, int fldno, int width, enum ui_align alignment, const char* fldname )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cli-out.c\cell\cell\row
Calls: \cell access_ui_out_data()\cell ui-out.c\cell\row
\cell cli_field_string()\cell cli-out.c\cell\row
Used in:\cell cli-out.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function cli_field_string()\par}
{\s5\f1\fs20\ql\sb50\sa50 void cli_field_string ( struct ui_out* uiout, int fldno, int width, enum ui_align align, const char* fldname, const char* string )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cli-out.c\cell\cell\row
Calls: \cell access_ui_out_data()\cell ui-out.c\cell\row
\cell field_separator()\cell cli-out.c\cell\row
\cell out_field_fmt()\cell cli-out.c\cell\row
\cell ui_out_spaces()\cell ui-out.c\cell\row
\cell  strlen()\cell\cell\row
Called by:\cell cli_field_int()\cell cli-out.c\cell\row
\cell cli_field_skip()\cell cli-out.c\cell\row
\cell cli_table_header()\cell cli-out.c\cell\row
Used in:\cell cli-out.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function cli_flush()\par}
{\s5\f1\fs20\ql\sb50\sa50 void cli_flush ( struct ui_out* uiout )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cli-out.c\cell\cell\row
Calls: \cell access_ui_out_data()\cell ui-out.c\cell\row
\cell gdb_flush()\cell ui-file.c\cell\row
Used in:\cell cli-out.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function cli_message()\par}
{\s5\f1\fs20\ql\sb50\sa50 void cli_message ( struct ui_out* uiout, int verbosity, const char* format, va_list args )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cli-out.c\cell\cell\row
Calls: \cell access_ui_out_data()\cell ui-out.c\cell\row
\cell ui_out_get_verblvl()\cell ui-out.c\cell\row
\cell vfprintf_unfiltered()\cell utils.c\cell\row
Used in:\cell cli-out.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function cli_out_new()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct ui_out* cli_out_new ( struct ui_file* stream )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cli-out.h\cell\cell\row
Calls: \cell ui_out_new()\cell ui-out.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
Called by:\cell make_cleanup_ui_out_suppress_output()\cell utils.c\cell\row
\cell objc_setup_safe_print()\cell objc-lang.c\cell\row
\cell save_breakpoints_command()\cell breakpoint.c\cell\row
Refs Var:\cell cli_ui_out_impl\cell cli-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function cli_out_set_stream()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct ui_file* cli_out_set_stream ( struct ui_out* uiout, struct ui_file* stream )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cli-out.h\cell\cell\row
Calls: \cell access_ui_out_data()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function cli_quoted_out_new()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct ui_out* cli_quoted_out_new ( struct ui_file* raw )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cli-out.h\cell\cell\row
Calls: \cell ui_out_new()\cell ui-out.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  mi_console_file_new()\cell\cell\row
Refs Var:\cell cli_ui_out_impl\cell cli-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function cli_redirect()\par}
{\s5\f1\fs20\ql\sb50\sa50 int cli_redirect ( struct ui_out* uiout, struct ui_file* outstream )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cli-out.c\cell\cell\row
Calls: \cell access_ui_out_data()\cell ui-out.c\cell\row
Used in:\cell cli-out.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function cli_spaces()\par}
{\s5\f1\fs20\ql\sb50\sa50 void cli_spaces ( struct ui_out* uiout, int numspaces )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cli-out.c\cell\cell\row
Calls: \cell access_ui_out_data()\cell ui-out.c\cell\row
\cell print_spaces_filtered()\cell utils.c\cell\row
Used in:\cell cli-out.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function cli_table_begin()\par}
{\s5\f1\fs20\ql\sb50\sa50 void cli_table_begin ( struct ui_out* uiout, int nbrofcols, int nr_rows, const char* tblid )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cli-out.c\cell\cell\row
Calls: \cell access_ui_out_data()\cell ui-out.c\cell\row
\cell internal_error()\cell utils.c\cell\row
Used in:\cell cli-out.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function cli_table_body()\par}
{\s5\f1\fs20\ql\sb50\sa50 void cli_table_body ( struct ui_out* uiout )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cli-out.c\cell\cell\row
Calls: \cell access_ui_out_data()\cell ui-out.c\cell\row
\cell cli_text()\cell cli-out.c\cell\row
Used in:\cell cli-out.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function cli_table_end()\par}
{\s5\f1\fs20\ql\sb50\sa50 void cli_table_end ( struct ui_out* uiout )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cli-out.c\cell\cell\row
Calls: \cell access_ui_out_data()\cell ui-out.c\cell\row
Used in:\cell cli-out.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function cli_table_header()\par}
{\s5\f1\fs20\ql\sb50\sa50 void cli_table_header ( struct ui_out* uiout, int width, enum ui_align alignment, const char* col_name, const char* colhdr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cli-out.c\cell\cell\row
Calls: \cell access_ui_out_data()\cell ui-out.c\cell\row
\cell cli_field_string()\cell cli-out.c\cell\row
Used in:\cell cli-out.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function cli_text()\par}
{\s5\f1\fs20\ql\sb50\sa50 void cli_text ( struct ui_out* uiout, const char* string )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cli-out.c\cell\cell\row
Calls: \cell access_ui_out_data()\cell ui-out.c\cell\row
\cell fputs_filtered()\cell utils.c\cell\row
Called by:\cell cli_table_body()\cell cli-out.c\cell\row
Used in:\cell cli-out.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function cli_text_fmt()\par}
{\s5\f1\fs20\ql\sb50\sa50 void cli_text_fmt ( struct ui_out* uiout, const char* format, va_list args )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cli-out.c\cell\cell\row
Calls: \cell access_ui_out_data()\cell ui-out.c\cell\row
\cell vfprintf_filtered()\cell utils.c\cell\row
Used in:\cell cli-out.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function cli_wrap_hint()\par}
{\s5\f1\fs20\ql\sb50\sa50 void cli_wrap_hint ( struct ui_out* uiout, const char* identstring )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cli-out.c\cell\cell\row
Calls: \cell access_ui_out_data()\cell ui-out.c\cell\row
\cell wrap_here()\cell utils.c\cell\row
Used in:\cell cli-out.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function field_separator()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void field_separator ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cli-out.c\cell\cell\row
Calls: \cell access_ui_out_data()\cell ui-out.c\cell\row
\cell fputc_filtered()\cell utils.c\cell\row
Called by:\cell cli_field_fmt()\cell cli-out.c\cell\row
\cell cli_field_string()\cell cli-out.c\cell\row
Refs Var:\cell uiout\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function out_field_fmt()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void out_field_fmt ( struct ui_out* uiout, int fldno, const char* fldname, const char* format, ... )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cli-out.c\cell\cell\row
Calls: \cell access_ui_out_data()\cell ui-out.c\cell\row
\cell vfprintf_filtered()\cell utils.c\cell\row
\cell  __builtin_va_end(), __builtin_va_start()\cell\cell\row
Called by:\cell cli_field_string()\cell cli-out.c\cell\row
\intbl0
}
