/Developer/Applications/Xcode.app/Contents/PlugIns/DebuggerGDBService.ideplugin/Contents/MacOS/DebuggerGDBService:
(__TEXT,__text) section
+[DBGGDBDebugLocalService capability]:
000000000000106c	pushq	%rbp
000000000000106d	movq	%rsp,%rbp
0000000000001070	pushq	%r15
0000000000001072	pushq	%r14
0000000000001074	pushq	%r12
0000000000001076	pushq	%rbx
0000000000001077	subq	$0x40,%rsp
000000000000107b	movq	0x000029be(%rip),%rax
0000000000001082	testq	%rax,%rax
0000000000001085	jne	0x0000116e
000000000000108b	movq	0x0000257e(%rip),%r14
0000000000001092	movq	0x000023b7(%rip),%rsi
0000000000001099	movq	0x00002578(%rip),%rdi
00000000000010a0	movq	___arclite_objc_autorelease(%rip),%r15
00000000000010a7	xorl	%edx,%edx
00000000000010a9	call	*%r15
00000000000010ac	movq	%rax,%r12
00000000000010af	movq	0x0000239a(%rip),%rsi
00000000000010b6	movq	0x0000255b(%rip),%rdi
00000000000010bd	xorl	%edx,%edx
00000000000010bf	call	*%r15
00000000000010c2	movq	0x0000238f(%rip),%rsi
00000000000010c9	movq	0x00001f60(%rip),%r8
00000000000010d0	movq	0x00001f51(%rip),%rdi
00000000000010d7	movq	0x00001f32(%rip),%rcx
00000000000010de	movq	0x00001f3b(%rip),%rdx
00000000000010e5	movq	(%rdx),%rbx
00000000000010e8	movq	0x00001f29(%rip),%rdx
00000000000010ef	movq	(%rdx),%rdx
00000000000010f2	movq	(%rcx),%rcx
00000000000010f5	movq	(%rdi),%r9
00000000000010f8	movq	(%r8),%rdi
00000000000010fb	movq	%rbx,0x28(%rsp)
0000000000001100	leaq	0x00002679(%rip),%rbx
0000000000001107	movq	%rbx,0x20(%rsp)
000000000000110c	movq	0x00001f25(%rip),%rbx
0000000000001113	movq	(%rbx),%rbx
0000000000001116	movq	%rbx,0x18(%rsp)
000000000000111b	leaq	0x0000263e(%rip),%rbx
0000000000001122	movq	%rbx,0x10(%rsp)
0000000000001127	movq	%rdi,0x08(%rsp)
000000000000112c	movq	%rax,(%rsp)
0000000000001130	movq	$0x00000000,0x30(%rsp)
0000000000001139	movq	%r14,%rdi
000000000000113c	movq	%r12,%r8
000000000000113f	xorb	%al,%al
0000000000001141	call	*%r15
0000000000001144	movq	0x00002315(%rip),%rsi
000000000000114b	movq	0x000024ce(%rip),%rdi
0000000000001152	movq	%rax,%rdx
0000000000001155	call	*%r15
0000000000001158	leaq	0x000028e1(%rip),%rsi
000000000000115f	movq	%rax,%rdi
0000000000001162	callq	0x000020f4	; symbol stub for: _objc_assign_global
0000000000001167	movq	0x000028d2(%rip),%rax
000000000000116e	addq	$0x40,%rsp
0000000000001172	popq	%rbx
0000000000001173	popq	%r12
0000000000001175	popq	%r14
0000000000001177	popq	%r15
0000000000001179	popq	%rbp
000000000000117a	ret
+[DBGGDBDebugLocalService _loadDebuggerExtension]:
000000000000117b	pushq	%rbp
000000000000117c	movq	%rsp,%rbp
000000000000117f	pushq	%rbx
0000000000001180	pushq	%rax
0000000000001181	movq	0x000028c0(%rip),%rax
0000000000001188	testq	%rax,%rax
000000000000118b	jne	0x000011cd
000000000000118d	movq	0x000022d4(%rip),%rsi
0000000000001194	movq	0x0000248d(%rip),%rdi
000000000000119b	movq	0x00001eae(%rip),%rbx
00000000000011a2	call	*%rbx
00000000000011a4	movq	0x000022c5(%rip),%rsi
00000000000011ab	leaq	0x000025ce(%rip),%rdx
00000000000011b2	movq	%rax,%rdi
00000000000011b5	call	*%rbx
00000000000011b7	leaq	0x0000288a(%rip),%rsi
00000000000011be	movq	%rax,%rdi
00000000000011c1	callq	0x000020f4	; symbol stub for: _objc_assign_global
00000000000011c6	movq	0x0000287b(%rip),%rax
00000000000011cd	addq	$0x08,%rsp
00000000000011d1	popq	%rbx
00000000000011d2	popq	%rbp
00000000000011d3	ret
-[DBGGDBDebugLocalService operationWorkerWithLaunchSession:error:]:
00000000000011d4	pushq	%rbp
00000000000011d5	movq	%rsp,%rbp
00000000000011d8	pushq	%r15
00000000000011da	pushq	%r14
00000000000011dc	pushq	%r12
00000000000011de	pushq	%rbx
00000000000011df	subq	$0x20,%rsp
00000000000011e3	movq	%rdx,%r14
00000000000011e6	movq	%rdi,0xd8(%rbp)
00000000000011ea	movq	%rsi,0xd0(%rbp)
00000000000011ee	leaq	0x0000235b(%rip),%rsi
00000000000011f5	call	*0x00002355(%rip)
00000000000011fb	movq	0x00002276(%rip),%rsi
0000000000001202	movq	%rax,%rdi
0000000000001205	call	*0x00001e45(%rip)
000000000000120b	movq	%rax,%rbx
000000000000120e	testq	%rbx,%rbx
0000000000001211	jne	0x00001254
0000000000001213	leaq	0x000025a6(%rip),%rax
000000000000121a	leaq	0x00001492(%rip),%rcx
0000000000001221	movq	%rcx,0x08(%rsp)
0000000000001226	movq	%rax,(%rsp)
000000000000122a	leaq	0xd8(%rbp),%rdi
000000000000122e	leaq	0xd0(%rbp),%rsi
0000000000001232	leaq	0x0000137d(%rip),%rdx
0000000000001239	leaq	0x000013b9(%rip),%rcx
0000000000001240	leaq	0x00002559(%rip),%r9
0000000000001247	movl	$0x0000002f,%r8d
000000000000124d	xorb	%al,%al
000000000000124f	callq	0x000020be	; symbol stub for: __DVTAssertionFailureHandler
0000000000001254	movq	0x00002225(%rip),%rsi
000000000000125b	leaq	0x0000257e(%rip),%rdx
0000000000001262	movq	0x00001de7(%rip),%r12
0000000000001269	movq	%rbx,%rdi
000000000000126c	call	*%r12
000000000000126f	leaq	0x000022ea(%rip),%r15
0000000000001276	movq	%rax,%rdi
0000000000001279	movq	%r15,%rsi
000000000000127c	call	*0x000022de(%rip)
0000000000001282	movq	0x000021ff(%rip),%rsi
0000000000001289	leaq	0x000024d0(%rip),%rdx
0000000000001290	movq	%rax,%rdi
0000000000001293	movq	%r14,%rcx
0000000000001296	call	*%r12
0000000000001299	movq	%rax,%rbx
000000000000129c	movq	0x0000238d(%rip),%rdi
00000000000012a3	movq	%r15,%rsi
00000000000012a6	call	*0x000022b4(%rip)
00000000000012ac	movq	0x000021dd(%rip),%rsi
00000000000012b3	movq	%rax,%rdi
00000000000012b6	movq	%rbx,%rdx
00000000000012b9	call	*%r12
00000000000012bc	movq	0x000021d5(%rip),%rsi
00000000000012c3	movq	%rbx,%rdi
00000000000012c6	movq	%rax,%rdx
00000000000012c9	call	*%r12
00000000000012cc	movq	%rbx,%rax
00000000000012cf	addq	$0x20,%rsp
00000000000012d3	popq	%rbx
00000000000012d4	popq	%r12
00000000000012d6	popq	%r14
00000000000012d8	popq	%r15
00000000000012da	popq	%rbp
00000000000012db	ret
+[DBGGDBRunLocalService capability]:
00000000000012dc	pushq	%rbp
00000000000012dd	movq	%rsp,%rbp
00000000000012e0	pushq	%r15
00000000000012e2	pushq	%r14
00000000000012e4	pushq	%r12
00000000000012e6	pushq	%rbx
00000000000012e7	subq	$0x40,%rsp
00000000000012eb	movq	0x0000275e(%rip),%rax
00000000000012f2	testq	%rax,%rax
00000000000012f5	jne	0x000013e4
00000000000012fb	movq	0x0000230e(%rip),%r14
0000000000001302	movq	0x00002147(%rip),%rsi
0000000000001309	movq	0x00002308(%rip),%rdi
0000000000001310	movq	0x00001d39(%rip),%r12
0000000000001317	movl	$0x00000001,%edx
000000000000131c	call	*%r12
000000000000131f	movq	%rax,%r15
0000000000001322	movq	0x00002127(%rip),%rsi
0000000000001329	movq	0x000022e8(%rip),%rdi
0000000000001330	xorl	%edx,%edx
0000000000001332	call	*%r12
0000000000001335	movq	%rax,%rbx
0000000000001338	xorb	%al,%al
000000000000133a	callq	0x000020b8	; symbol stub for: _DVTDeviceCapabilityMatchAnythingToken
000000000000133f	movq	0x00001cda(%rip),%rcx
0000000000001346	movq	0x00001ceb(%rip),%rdx
000000000000134d	movq	(%rdx),%rdi
0000000000001350	movq	(%rcx),%rcx
0000000000001353	movq	0x00001cbe(%rip),%rdx
000000000000135a	movq	(%rdx),%rdx
000000000000135d	movq	0x000020f4(%rip),%rsi
0000000000001364	movq	%rcx,0x28(%rsp)
0000000000001369	leaq	0x00002410(%rip),%rcx
0000000000001370	movq	%rcx,0x20(%rsp)
0000000000001375	movq	0x00001c94(%rip),%rcx
000000000000137c	movq	(%rcx),%rcx
000000000000137f	movq	%rdi,0x18(%rsp)
0000000000001384	movq	0x00001c9d(%rip),%rdi
000000000000138b	movq	(%rdi),%r9
000000000000138e	movq	%rax,0x10(%rsp)
0000000000001393	movq	0x00001c96(%rip),%rax
000000000000139a	movq	(%rax),%rax
000000000000139d	movq	%rax,0x08(%rsp)
00000000000013a2	movq	%rbx,(%rsp)
00000000000013a6	movq	$0x00000000,0x30(%rsp)
00000000000013af	movq	%r14,%rdi
00000000000013b2	movq	%r15,%r8
00000000000013b5	xorb	%al,%al
00000000000013b7	call	*%r12
00000000000013ba	movq	___arclite_objc_autoreleasePoolPush(%rip),%rsi
00000000000013c1	movq	0x00002258(%rip),%rdi
00000000000013c8	movq	%rax,%rdx
00000000000013cb	call	*%r12
00000000000013ce	leaq	0x0000267b(%rip),%rsi
00000000000013d5	movq	%rax,%rdi
00000000000013d8	callq	0x000020f4	; symbol stub for: _objc_assign_global
00000000000013dd	movq	0x0000266c(%rip),%rax
00000000000013e4	addq	$0x40,%rsp
00000000000013e8	popq	%rbx
00000000000013e9	popq	%r12
00000000000013eb	popq	%r14
00000000000013ed	popq	%r15
00000000000013ef	popq	%rbp
00000000000013f0	ret
-[DBGGDBRunLocalService capabilitySequenceForLaunchSession:]:
00000000000013f1	pushq	%rbp
00000000000013f2	movq	%rsp,%rbp
00000000000013f5	pushq	%r15
00000000000013f7	pushq	%r14
00000000000013f9	pushq	%r12
00000000000013fb	pushq	%rbx
00000000000013fc	subq	$0x30,%rsp
0000000000001400	movq	%rdx,%rbx
0000000000001403	movq	%rdi,0xd8(%rbp)
0000000000001407	movq	%rsi,0xd0(%rbp)
000000000000140b	movq	0x0000208e(%rip),%rsi
0000000000001412	movq	0x0000221f(%rip),%rdi
0000000000001419	movq	0x00001c30(%rip),%r15
0000000000001420	call	*%r15
0000000000001423	movq	%rax,%r14
0000000000001426	movq	0x0000207b(%rip),%rsi
000000000000142d	movq	%rbx,%rdi
0000000000001430	call	*%r15
0000000000001433	movq	0x00002076(%rip),%rsi
000000000000143a	movq	%rax,%rdi
000000000000143d	call	*%r15
0000000000001440	movq	%rax,%r15
0000000000001443	testq	%r15,%r15
0000000000001446	jne	0x00001495
0000000000001448	leaq	0x000012d5(%rip),%rax
000000000000144f	leaq	0x0000236a(%rip),%rcx
0000000000001456	leaq	+[DBGGDBRunLocalService capability](%rip),%rdx
000000000000145d	movq	%rdx,0x10(%rsp)
0000000000001462	movq	%rcx,0x08(%rsp)
0000000000001467	movq	%rax,(%rsp)
000000000000146b	leaq	0xd8(%rbp),%rdi
000000000000146f	leaq	0xd0(%rbp),%rsi
0000000000001473	leaq	0x00001257(%rip),%rdx
000000000000147a	leaq	0x00001178(%rip),%rcx
0000000000001481	leaq	0x00002378(%rip),%r9
0000000000001488	movl	$0x0000004d,%r8d
000000000000148e	xorb	%al,%al
0000000000001490	callq	0x000020be	; symbol stub for: __DVTAssertionFailureHandler
0000000000001495	movq	0x0000201c(%rip),%rsi
000000000000149c	movq	0x0000219d(%rip),%rdi
00000000000014a3	call	*0x00001ba7(%rip)
00000000000014a9	leaq	0x000020c0(%rip),%rsi
00000000000014b0	movq	%r14,%rdi
00000000000014b3	movq	%rax,%rdx
00000000000014b6	call	*0x000020b4(%rip)
00000000000014bc	leaq	0x000020bd(%rip),%rsi
00000000000014c3	leaq	0x00002296(%rip),%rdx
00000000000014ca	movq	%r15,%rdi
00000000000014cd	call	*0x000020ad(%rip)
00000000000014d3	testb	%al,%al
00000000000014d5	je	0x000014fa
00000000000014d7	movq	0x00001fda(%rip),%rsi
00000000000014de	movq	0x00002163(%rip),%rdi
00000000000014e5	call	*0x00001b65(%rip)
00000000000014eb	leaq	0x0000207e(%rip),%rsi
00000000000014f2	movq	%r14,%rdi
00000000000014f5	jmp	0x000015ec
00000000000014fa	movq	0x00001fbf(%rip),%rsi
0000000000001501	movq	0xd8(%rbp),%rdi
0000000000001505	movq	0x00001b44(%rip),%r12
000000000000150c	call	*%r12
000000000000150f	movq	0x00001fb2(%rip),%rsi
0000000000001516	movq	%rax,%rdi
0000000000001519	call	*%r12
000000000000151c	movq	0x00001fad(%rip),%rsi
0000000000001523	movq	%rax,%rdi
0000000000001526	call	*%r12
0000000000001529	movq	%rax,%rbx
000000000000152c	movq	0x00001b0d(%rip),%rax
0000000000001533	movq	(%rax),%rdx
0000000000001536	movq	0x00001ad3(%rip),%rax
000000000000153d	movq	(%rax),%rcx
0000000000001540	movq	0x00001f91(%rip),%rsi
0000000000001547	movq	%rbx,%rdi
000000000000154a	call	*%r12
000000000000154d	movq	0x00001acc(%rip),%rax
0000000000001554	movq	(%rax),%rdx
0000000000001557	movq	0x00001f82(%rip),%rsi
000000000000155e	movq	%rbx,%rdi
0000000000001561	call	*%r12
0000000000001564	movq	0x00001acd(%rip),%rax
000000000000156b	movq	(%rax),%rcx
000000000000156e	movq	0x00001f63(%rip),%rsi
0000000000001575	movq	%rbx,%rdi
0000000000001578	movq	%r15,%rdx
000000000000157b	call	*%r12
000000000000157e	movq	0x00001ecb(%rip),%rsi
0000000000001585	movq	0x0000208c(%rip),%rdi
000000000000158c	xorl	%edx,%edx
000000000000158e	call	*%r12
0000000000001591	movq	0x00001a90(%rip),%rcx
0000000000001598	movq	(%rcx),%rcx
000000000000159b	movq	0x00001f36(%rip),%rsi
00000000000015a2	movq	%rbx,%rdi
00000000000015a5	movq	%rax,%rdx
00000000000015a8	call	*%r12
00000000000015ab	movq	0x00001eae(%rip),%rsi
00000000000015b2	movq	0x00002067(%rip),%rdi
00000000000015b9	movq	%rbx,%rdx
00000000000015bc	call	*%r12
00000000000015bf	leaq	0x00001faa(%rip),%rbx
00000000000015c6	movq	%r14,%rdi
00000000000015c9	movq	%rbx,%rsi
00000000000015cc	movq	%rax,%rdx
00000000000015cf	call	*0x00001f9b(%rip)
00000000000015d5	movq	0x00001edc(%rip),%rsi
00000000000015dc	movq	0x00002065(%rip),%rdi
00000000000015e3	call	*%r12
00000000000015e6	movq	%r14,%rdi
00000000000015e9	movq	%rbx,%rsi
00000000000015ec	movq	%rax,%rdx
00000000000015ef	call	*0x00001f7b(%rip)
00000000000015f5	movq	%r14,%rax
00000000000015f8	addq	$0x30,%rsp
00000000000015fc	popq	%rbx
00000000000015fd	popq	%r12
00000000000015ff	popq	%r14
0000000000001601	popq	%r15
0000000000001603	popq	%rbp
0000000000001604	ret
-[DBGGDBRunLocalService operationWorkerWithLaunchSession:error:]:
0000000000001605	pushq	%rbp
0000000000001606	movq	%rsp,%rbp
0000000000001609	pushq	%r15
000000000000160b	pushq	%r14
000000000000160d	pushq	%r13
000000000000160f	pushq	%r12
0000000000001611	pushq	%rbx
0000000000001612	subq	$0x000000f8,%rsp
0000000000001619	movq	%rcx,0xfffffef0(%rbp)
0000000000001620	movq	%rdx,%r15
0000000000001623	movq	%r15,0xffffff00(%rbp)
000000000000162a	movq	%rdi,%rbx
000000000000162d	movq	%rbx,0xfffffee8(%rbp)
0000000000001634	movq	0x00001a0d(%rip),%rax
000000000000163b	movq	(%rax),%rax
000000000000163e	movq	%rax,0xd0(%rbp)
0000000000001642	movq	0x00001e57(%rip),%rsi
0000000000001649	movq	0x00001fe8(%rip),%rdi
0000000000001650	movq	0x000019f9(%rip),%r14
0000000000001657	call	*%r14
000000000000165a	movq	%rax,0xfffffef8(%rbp)
0000000000001661	movq	0x00001e80(%rip),%rsi
0000000000001668	movq	%rbx,%rdi
000000000000166b	movq	%r15,%rdx
000000000000166e	call	*%r14
0000000000001671	movq	%rax,0xffffff08(%rbp)
0000000000001678	leaq	0x00001f11(%rip),%rsi
000000000000167f	leaq	0x90(%rbp),%rdx
0000000000001683	leaq	0xffffff10(%rbp),%rcx
000000000000168a	xorps	%xmm0,%xmm0
000000000000168d	movaps	%xmm0,0xc0(%rbp)
0000000000001691	movaps	%xmm0,0xb0(%rbp)
0000000000001695	movaps	%xmm0,0xa0(%rbp)
0000000000001699	movaps	%xmm0,0x90(%rbp)
000000000000169d	movq	%rax,%rdi
00000000000016a0	movl	$0x00000010,%r8d
00000000000016a6	call	*0x00001ee4(%rip)
00000000000016ac	movq	%rax,%r14
00000000000016af	testq	%r14,%r14
00000000000016b2	je	0x00001787
00000000000016b8	movq	0xa0(%rbp),%rax
00000000000016bc	movq	(%rax),%r12
00000000000016bf	movq	0x0000198a(%rip),%r13
00000000000016c6	xorl	%ebx,%ebx
00000000000016c8	movq	0xa0(%rbp),%rax
00000000000016cc	cmpq	%r12,(%rax)
00000000000016cf	je	0x000016dd
00000000000016d1	movq	0xffffff08(%rbp),%rdi
00000000000016d8	callq	0x00002100	; symbol stub for: _objc_enumerationMutation
00000000000016dd	movq	0x98(%rbp),%rax
00000000000016e1	movq	(%rax,%rbx,8),%r15
00000000000016e5	movq	0xfffffee8(%rbp),%rdi
00000000000016ec	movq	0x00001dfd(%rip),%rsi
00000000000016f3	call	*%r13
00000000000016f6	movq	%rax,%rdi
00000000000016f9	movq	0x00001df8(%rip),%rsi
0000000000001700	movq	%r15,%rdx
0000000000001703	call	*%r13
0000000000001706	movq	%rax,%rdi
0000000000001709	movq	0x00001df0(%rip),%rsi
0000000000001710	call	*%r13
0000000000001713	movq	%rax,%rdi
0000000000001716	movq	0x00001deb(%rip),%rsi
000000000000171d	movq	0xffffff00(%rbp),%rdx
0000000000001724	movq	0xfffffef0(%rbp),%rcx
000000000000172b	call	*%r13
000000000000172e	testq	%rax,%rax
0000000000001731	je	0x0000174a
0000000000001733	movq	0xfffffef8(%rbp),%rdi
000000000000173a	leaq	0x00001e2f(%rip),%rsi
0000000000001741	movq	%rax,%rdx
0000000000001744	call	*0x00001e26(%rip)
000000000000174a	incq	%rbx
000000000000174d	cmpq	%r14,%rbx
0000000000001750	jb	0x000016c8
0000000000001756	movq	0xffffff08(%rbp),%rdi
000000000000175d	leaq	0x00001e2c(%rip),%rsi
0000000000001764	leaq	0x90(%rbp),%rdx
0000000000001768	leaq	0xffffff10(%rbp),%rcx
000000000000176f	movl	$0x00000010,%r8d
0000000000001775	call	*0x00001e15(%rip)
000000000000177b	movq	%rax,%r14
000000000000177e	testq	%r14,%r14
0000000000001781	jne	0x000016c6
0000000000001787	movq	0x00001ec2(%rip),%rdi
000000000000178e	leaq	0x00001dcb(%rip),%r14
0000000000001795	movq	%r14,%rsi
0000000000001798	call	*0x00001dc2(%rip)
000000000000179e	movq	0x00001d6b(%rip),%rsi
00000000000017a5	movq	0x000018a4(%rip),%r15
00000000000017ac	movq	%rax,%rdi
00000000000017af	movq	0xfffffef8(%rbp),%rdx
00000000000017b6	movq	0xffffff00(%rbp),%rcx
00000000000017bd	call	*%r15
00000000000017c0	movq	%rax,%rbx
00000000000017c3	movq	0x00001e66(%rip),%rdi
00000000000017ca	movq	%r14,%rsi
00000000000017cd	call	*0x00001d8d(%rip)
00000000000017d3	movq	0x00001cb6(%rip),%rsi
00000000000017da	movq	%rax,%rdi
00000000000017dd	movq	%rbx,%rdx
00000000000017e0	call	*%r15
00000000000017e3	movq	0x00001cae(%rip),%rsi
00000000000017ea	movq	%rbx,%rdi
00000000000017ed	movq	%rax,%rdx
00000000000017f0	call	*%r15
00000000000017f3	movq	0x0000184e(%rip),%rax
00000000000017fa	movq	(%rax),%rax
00000000000017fd	cmpq	0xd0(%rbp),%rax
0000000000001801	jne	0x00001818
0000000000001803	movq	%rbx,%rax
0000000000001806	addq	$0x000000f8,%rsp
000000000000180d	popq	%rbx
000000000000180e	popq	%r12
0000000000001810	popq	%r13
0000000000001812	popq	%r14
0000000000001814	popq	%r15
0000000000001816	popq	%rbp
0000000000001817	ret
0000000000001818	callq	0x0000211e	; symbol stub for: ___stack_chk_fail
_objc_retainedObject:
000000000000181d	pushq	%rbp
000000000000181e	movq	%rsp,%rbp
0000000000001821	movq	%rdi,%rax
0000000000001824	popq	%rbp
0000000000001825	ret
_objc_unretainedObject:
0000000000001826	pushq	%rbp
0000000000001827	movq	%rsp,%rbp
000000000000182a	movq	%rdi,%rax
000000000000182d	popq	%rbp
000000000000182e	ret
_objc_unretainedPointer:
000000000000182f	pushq	%rbp
0000000000001830	movq	%rsp,%rbp
0000000000001833	movq	%rdi,%rax
0000000000001836	popq	%rbp
0000000000001837	ret
___ARCLite__load:
0000000000001838	pushq	%rbp
0000000000001839	movq	%rsp,%rbp
000000000000183c	pushq	%r14
000000000000183e	pushq	%rbx
000000000000183f	cmpq	$0x00,0x00001811(%rip)
0000000000001847	jne	0x00001855
0000000000001849	leaq	0x000000c2(%rip),%rdi
0000000000001850	callq	0x00002124	; symbol stub for: __dyld_register_func_for_add_image
0000000000001855	movq	___arclite_object_copy(%rip),%rdi
000000000000185c	leaq	0x00001ced(%rip),%r14
0000000000001863	movq	%r14,%rsi
0000000000001866	call	*0x00001ce4(%rip)
000000000000186c	movq	0x00001ca5(%rip),%rsi
0000000000001873	leaq	0x0000034e(%rip),%rdx
000000000000187a	leaq	0x0000215f(%rip),%rbx
0000000000001881	movq	%rax,%rdi
0000000000001884	movq	%rbx,%rcx
0000000000001887	callq	_installMethod
000000000000188c	movq	0x00001da5(%rip),%rdi
0000000000001893	movq	%r14,%rsi
0000000000001896	call	*0x00001cb4(%rip)
000000000000189c	leaq	0x0000033a(%rip),%rdx
00000000000018a3	movq	0x00001c76(%rip),%rsi
00000000000018aa	movq	%rax,%rdi
00000000000018ad	movq	%rbx,%rcx
00000000000018b0	callq	_installMethod
00000000000018b5	movq	0x00001d54(%rip),%rdi
00000000000018bc	movq	%r14,%rsi
00000000000018bf	call	*0x00001c8b(%rip)
00000000000018c5	leaq	0x00000391(%rip),%rdx
00000000000018cc	leaq	0x0000214d(%rip),%rbx
00000000000018d3	movq	0x00001c4e(%rip),%rsi
00000000000018da	movq	%rax,%rdi
00000000000018dd	movq	%rbx,%rcx
00000000000018e0	callq	_installMethod
00000000000018e5	movq	0x00001d74(%rip),%rdi
00000000000018ec	movq	%r14,%rsi
00000000000018ef	call	*0x00001c5b(%rip)
00000000000018f5	leaq	0x00000376(%rip),%rdx
00000000000018fc	movq	0x00001c2d(%rip),%rsi
0000000000001903	movq	%rax,%rdi
0000000000001906	movq	%rbx,%rcx
0000000000001909	popq	%rbx
000000000000190a	popq	%r14
000000000000190c	popq	%rbp
000000000000190d	jmp	_installMethod
_add_image_hook:
0000000000001912	pushq	%rbp
0000000000001913	movq	%rsp,%rbp
0000000000001916	pushq	%r15
0000000000001918	pushq	%r14
000000000000191a	pushq	%r13
000000000000191c	pushq	%r12
000000000000191e	pushq	%rbx
000000000000191f	subq	$0x58,%rsp
0000000000001923	movq	%rdi,%r13
0000000000001926	movl	0x10(%r13),%eax
000000000000192a	movl	%eax,0x80(%rbp)
000000000000192d	testl	%eax,%eax
000000000000192f	je	0x00001b58
0000000000001935	leaq	0x20(%r13),%rax
0000000000001939	movq	%rax,0xd0(%rbp)
000000000000193d	xorl	%r15d,%r15d
0000000000001940	movl	0x80(%rbp),%r12d
0000000000001944	movq	$0x00000000,0x98(%rbp)
000000000000194c	movq	%rax,%r14
000000000000194f	cmpl	$0x19,(%r14)
0000000000001953	jne	0x00001998
0000000000001955	leaq	0x08(%r14),%rbx
0000000000001959	movq	%rbx,%rdi
000000000000195c	leaq	0x00000f51(%rip),%rsi
0000000000001963	callq	0x00002136	; symbol stub for: _strcmp
0000000000001968	testl	%eax,%eax
000000000000196a	jne	0x00001979
000000000000196c	movq	%r13,%rax
000000000000196f	subq	0x18(%r14),%rax
0000000000001973	movq	%rax,0x98(%rbp)
0000000000001977	jmp	0x00001998
0000000000001979	movq	%rbx,%rdi
000000000000197c	leaq	0x00000f38(%rip),%rsi
0000000000001983	callq	0x00002136	; symbol stub for: _strcmp
0000000000001988	testl	%eax,%eax
000000000000198a	jne	0x00001998
000000000000198c	movq	0x18(%r14),%r15
0000000000001990	addq	0x98(%rbp),%r15
0000000000001994	subq	0x28(%r14),%r15
0000000000001998	movl	0x04(%r14),%eax
000000000000199c	addq	%r14,%rax
000000000000199f	decl	%r12d
00000000000019a2	jne	0x0000194c
00000000000019a4	testq	%r15,%r15
00000000000019a7	movq	0xd0(%rbp),%rax
00000000000019ab	je	0x00001b58
00000000000019b1	movq	$0x00000000,0xb8(%rbp)
00000000000019b9	movq	%rax,%rcx
00000000000019bc	movl	0x80(%rbp),%eax
00000000000019bf	movq	$0x00000000,0xa8(%rbp)
00000000000019c7	movq	%rcx,%rdx
00000000000019ca	movq	%rcx,%rsi
00000000000019cd	movq	$0x00000000,0xb0(%rbp)
00000000000019d5	movq	%rdx,%rcx
00000000000019d8	movl	(%rcx),%edx
00000000000019da	cmpl	$0x0b,%edx
00000000000019dd	je	0x000019fa
00000000000019df	cmpl	$0x02,%edx
00000000000019e2	jne	0x00001a04
00000000000019e4	movl	0x08(%rcx),%edx
00000000000019e7	addq	%r15,%rdx
00000000000019ea	movq	%rdx,0xb0(%rbp)
00000000000019ee	movl	0x10(%rcx),%edx
00000000000019f1	addq	%r15,%rdx
00000000000019f4	movq	%rdx,0xa8(%rbp)
00000000000019f8	jmp	0x00001a04
00000000000019fa	movl	0x38(%rcx),%edx
00000000000019fd	addq	%r15,%rdx
0000000000001a00	movq	%rdx,0xb8(%rbp)
0000000000001a04	movl	0x04(%rcx),%edx
0000000000001a07	addq	%rcx,%rdx
0000000000001a0a	decl	%eax
0000000000001a0c	jne	0x000019d5
0000000000001a0e	cmpq	$0x00,0xb0(%rbp)
0000000000001a13	movq	%rsi,%rax
0000000000001a16	je	0x00001b58
0000000000001a1c	cmpq	$0x00,0xa8(%rbp)
0000000000001a21	je	0x00001b58
0000000000001a27	cmpq	$0x00,0xb8(%rbp)
0000000000001a2c	je	0x00001b58
0000000000001a32	movl	$0x00000000,0x84(%rbp)
0000000000001a39	movq	%rax,0x88(%rbp)
0000000000001a3d	cmpl	$0x19,(%rax)
0000000000001a40	jne	0x00001b3d
0000000000001a46	movq	0x88(%rbp),%rcx
0000000000001a4a	movl	0x40(%rcx),%eax
0000000000001a4d	leaq	(%rax,%rax,4),%rax
0000000000001a51	shlq	$0x04,%rax
0000000000001a55	leaq	0x48(%rcx,%rax),%rax
0000000000001a5a	movq	%rax,0x90(%rbp)
0000000000001a5e	leaq	0x48(%rcx),%rcx
0000000000001a62	cmpq	%rax,%rcx
0000000000001a65	movq	%rcx,%rax
0000000000001a68	jae	0x00001b3d
0000000000001a6e	movq	%rax,0xa0(%rbp)
0000000000001a72	cmpb	$0x07,0x40(%rax)
0000000000001a76	jne	0x00001b2b
0000000000001a7c	movq	0xa0(%rbp),%rax
0000000000001a80	movq	0x28(%rax),%rax
0000000000001a84	shrq	$0x03,%rax
0000000000001a88	movq	%rax,0xd0(%rbp)
0000000000001a8c	testq	%rax,%rax
0000000000001a8f	je	0x00001b2b
0000000000001a95	xorl	%r13d,%r13d
0000000000001a98	movq	0xa0(%rbp),%rax
0000000000001a9c	movq	0x20(%rax),%rcx
0000000000001aa0	addq	0x98(%rbp),%rcx
0000000000001aa4	movq	%rcx,0xc8(%rbp)
0000000000001aa8	movl	0x44(%rax),%eax
0000000000001aab	movl	%eax,0xc4(%rbp)
0000000000001aae	xorl	%eax,%eax
0000000000001ab0	movq	%r13,%r14
0000000000001ab3	movl	%eax,%r13d
0000000000001ab6	movl	0xc4(%rbp),%eax
0000000000001ab9	leal	0x00(%r13,%rax),%eax
0000000000001abe	movq	0xb8(%rbp),%rcx
0000000000001ac2	movl	(%rcx,%rax,4),%eax
0000000000001ac5	movl	$0x80000000,%ecx
0000000000001aca	cmpq	%rcx,%rax
0000000000001acd	je	0x00001b1f
0000000000001acf	cmpl	$0x40000000,%eax
0000000000001ad4	je	0x00001b1f
0000000000001ad6	shlq	$0x04,%rax
0000000000001ada	movq	0xb0(%rbp),%rcx
0000000000001ade	movl	(%rcx,%rax),%ebx
0000000000001ae1	addq	0xa8(%rbp),%rbx
0000000000001ae5	xorl	%r15d,%r15d
0000000000001ae8	jmp	0x00001aed
0000000000001aea	incl	%r15d
0000000000001aed	movl	%r15d,%r12d
0000000000001af0	leaq	0x00001d29(%rip),%rax
0000000000001af7	movq	(%rax,%r12,8),%rdi
0000000000001afb	testq	%rdi,%rdi
0000000000001afe	je	0x00001b1f
0000000000001b00	movq	%rbx,%rsi
0000000000001b03	callq	0x00002136	; symbol stub for: _strcmp
0000000000001b08	testl	%eax,%eax
0000000000001b0a	jne	0x00001aea
0000000000001b0c	leaq	0x00001d8d(%rip),%rax
0000000000001b13	movq	(%rax,%r12,8),%rax
0000000000001b17	movq	0xc8(%rbp),%rcx
0000000000001b1b	movq	%rax,(%rcx,%r14,8)
0000000000001b1f	incl	%r13d
0000000000001b22	cmpq	0xd0(%rbp),%r13
0000000000001b26	movl	%r13d,%eax
0000000000001b29	jb	0x00001ab0
0000000000001b2b	movq	0xa0(%rbp),%rax
0000000000001b2f	addq	$0x50,%rax
0000000000001b33	cmpq	0x90(%rbp),%rax
0000000000001b37	jb	0x00001a6e
0000000000001b3d	movq	0x88(%rbp),%rcx
0000000000001b41	movl	0x04(%rcx),%eax
0000000000001b44	addq	%rcx,%rax
0000000000001b47	movl	0x84(%rbp),%ecx
0000000000001b4a	incl	%ecx
0000000000001b4c	movl	%ecx,0x84(%rbp)
0000000000001b4f	cmpl	0x80(%rbp),%ecx
0000000000001b52	jne	0x00001a39
0000000000001b58	addq	$0x58,%rsp
0000000000001b5c	popq	%rbx
0000000000001b5d	popq	%r12
0000000000001b5f	popq	%r13
0000000000001b61	popq	%r14
0000000000001b63	popq	%r15
0000000000001b65	popq	%rbp
0000000000001b66	ret
___install_subscripting_methods_block_invoke_0:
0000000000001b67	pushq	%rbp
0000000000001b68	movq	%rsp,%rbp
0000000000001b6b	movq	0x00001a8e(%rip),%rdi
0000000000001b72	movl	$0x00000001,%edx
0000000000001b77	movl	$0x00000001,%ecx
0000000000001b7c	popq	%rbp
0000000000001b7d	jmp	0x00002112	; symbol stub for: _protocol_getMethodDescription
_installMethod:
0000000000001b82	pushq	%rbp
0000000000001b83	movq	%rsp,%rbp
0000000000001b86	pushq	%r15
0000000000001b88	pushq	%r14
0000000000001b8a	pushq	%r12
0000000000001b8c	pushq	%rbx
0000000000001b8d	movq	%rcx,%r12
0000000000001b90	movq	%rdx,%r14
0000000000001b93	movq	%rsi,%rbx
0000000000001b96	movq	%rdi,%r15
0000000000001b99	callq	0x000020ca	; symbol stub for: _class_getInstanceMethod
0000000000001b9e	testq	%rax,%rax
0000000000001ba1	jne	0x00001bbf
0000000000001ba3	movq	%r12,%rdi
0000000000001ba6	movq	%rbx,%rsi
0000000000001ba9	call	*0x10(%r12)
0000000000001bae	movq	%rdx,%rcx
0000000000001bb1	movq	%r15,%rdi
0000000000001bb4	movq	%rax,%rsi
0000000000001bb7	movq	%r14,%rdx
0000000000001bba	callq	0x000020c4	; symbol stub for: _class_addMethod
0000000000001bbf	popq	%rbx
0000000000001bc0	popq	%r12
0000000000001bc2	popq	%r14
0000000000001bc4	popq	%r15
0000000000001bc6	popq	%rbp
0000000000001bc7	ret
___arclite_objectAtIndexedSubscript:
0000000000001bc8	pushq	%rbp
0000000000001bc9	movq	%rsp,%rbp
0000000000001bcc	movq	0x000019ed(%rip),%rax
0000000000001bd3	leaq	0x000019e6(%rip),%rsi
0000000000001bda	popq	%rbp
0000000000001bdb	jmp	*%rax
___arclite_setObject_atIndexedSubscript:
0000000000001bdd	pushq	%rbp
0000000000001bde	movq	%rsp,%rbp
0000000000001be1	pushq	%r15
0000000000001be3	pushq	%r14
0000000000001be5	pushq	%rbx
0000000000001be6	pushq	%rax
0000000000001be7	movq	%rcx,%r15
0000000000001bea	movq	%rdx,%r14
0000000000001bed	movq	%rdi,%rbx
0000000000001bf0	leaq	0x000019b9(%rip),%rsi
0000000000001bf7	call	*0x000019b3(%rip)
0000000000001bfd	cmpq	%r15,%rax
0000000000001c00	jne	0x00001c22
0000000000001c02	movq	0x00001967(%rip),%rax
0000000000001c09	leaq	0x00001960(%rip),%rsi
0000000000001c10	movq	%rbx,%rdi
0000000000001c13	movq	%r14,%rdx
0000000000001c16	addq	$0x08,%rsp
0000000000001c1a	popq	%rbx
0000000000001c1b	popq	%r14
0000000000001c1d	popq	%r15
0000000000001c1f	popq	%rbp
0000000000001c20	jmp	*%rax
0000000000001c22	movq	0x0000190f(%rip),%rsi
0000000000001c29	movq	%rbx,%rdi
0000000000001c2c	movq	%r15,%rdx
0000000000001c2f	movq	%r14,%rcx
0000000000001c32	addq	$0x08,%rsp
0000000000001c36	popq	%rbx
0000000000001c37	popq	%r14
0000000000001c39	popq	%r15
0000000000001c3b	popq	%rbp
0000000000001c3c	jmp	*0x0000140e(%rip)
___install_subscripting_methods_block_invoke_07:
0000000000001c42	pushq	%rbp
0000000000001c43	movq	%rsp,%rbp
0000000000001c46	movq	0x000019bb(%rip),%rdi
0000000000001c4d	movl	$0x00000001,%edx
0000000000001c52	movl	$0x00000001,%ecx
0000000000001c57	popq	%rbp
0000000000001c58	jmp	0x00002112	; symbol stub for: _protocol_getMethodDescription
___arclite_objectForKeyedSubscript:
0000000000001c5d	pushq	%rbp
0000000000001c5e	movq	%rsp,%rbp
0000000000001c61	movq	0x00001938(%rip),%rax
0000000000001c68	leaq	0x00001931(%rip),%rsi
0000000000001c6f	popq	%rbp
0000000000001c70	jmp	*%rax
___arclite_setObject_forKeyedSubscript:
0000000000001c72	pushq	%rbp
0000000000001c73	movq	%rsp,%rbp
0000000000001c76	movq	0x0000185b(%rip),%rsi
0000000000001c7d	popq	%rbp
0000000000001c7e	jmp	*0x000013cc(%rip)
___arclite_object_setInstanceVariable:
0000000000001c84	pushq	%rbp
0000000000001c85	movq	%rsp,%rbp
0000000000001c88	pushq	%r15
0000000000001c8a	pushq	%r14
0000000000001c8c	pushq	%r12
0000000000001c8e	pushq	%rbx
0000000000001c8f	movq	%rdx,%r14
0000000000001c92	movq	%rsi,%r15
0000000000001c95	movq	%rdi,%r12
0000000000001c98	xorl	%eax,%eax
0000000000001c9a	testq	%r12,%r12
0000000000001c9d	je	0x00001cd2
0000000000001c9f	testq	%r15,%r15
0000000000001ca2	je	0x00001cd2
0000000000001ca4	movq	%r12,%rdi
0000000000001ca7	callq	0x00002106	; symbol stub for: _object_getClass
0000000000001cac	movq	%rax,%rdi
0000000000001caf	movq	%r15,%rsi
0000000000001cb2	callq	0x000020d6	; symbol stub for: _class_getInstanceVariable
0000000000001cb7	movq	%rax,%rbx
0000000000001cba	xorl	%eax,%eax
0000000000001cbc	testq	%rbx,%rbx
0000000000001cbf	je	0x00001cd2
0000000000001cc1	movq	%r12,%rdi
0000000000001cc4	movq	%rbx,%rsi
0000000000001cc7	movq	%r14,%rdx
0000000000001cca	callq	0x0000210c	; symbol stub for: _object_setIvar
0000000000001ccf	movq	%rbx,%rax
0000000000001cd2	popq	%rbx
0000000000001cd3	popq	%r12
0000000000001cd5	popq	%r14
0000000000001cd7	popq	%r15
0000000000001cd9	popq	%rbp
0000000000001cda	ret
___arclite_object_setIvar:
0000000000001cdb	pushq	%rbp
0000000000001cdc	movq	%rsp,%rbp
0000000000001cdf	pushq	%r15
0000000000001ce1	pushq	%r14
0000000000001ce3	pushq	%r13
0000000000001ce5	pushq	%r12
0000000000001ce7	pushq	%rbx
0000000000001ce8	pushq	%rax
0000000000001ce9	movq	%rsi,%r12
0000000000001cec	movq	%rdi,%r15
0000000000001cef	testq	%r15,%r15
0000000000001cf2	je	0x00001dd4
0000000000001cf8	testq	%r12,%r12
0000000000001cfb	je	0x00001dd4
0000000000001d01	movq	%rdx,0xd0(%rbp)
0000000000001d05	movq	%r15,%rdi
0000000000001d08	callq	0x00002106	; symbol stub for: _object_getClass
0000000000001d0d	movq	%rax,%rbx
0000000000001d10	movq	%r12,%rdi
0000000000001d13	callq	0x000020e8	; symbol stub for: _ivar_getName
0000000000001d18	movq	%rax,%r13
0000000000001d1b	xorl	%r14d,%r14d
0000000000001d1e	jmp	0x00001d2b
0000000000001d20	movq	%rbx,%rdi
0000000000001d23	callq	0x000020e2	; symbol stub for: _class_getSuperclass
0000000000001d28	movq	%rax,%rbx
0000000000001d2b	testq	%rbx,%rbx
0000000000001d2e	je	0x00001d43
0000000000001d30	movq	%rbx,%rdi
0000000000001d33	movq	%r13,%rsi
0000000000001d36	callq	0x000020d6	; symbol stub for: _class_getInstanceVariable
0000000000001d3b	cmpq	%r12,%rax
0000000000001d3e	jne	0x00001d20
0000000000001d40	movq	%rbx,%r14
0000000000001d43	movq	%r12,%rdi
0000000000001d46	callq	0x000020ee	; symbol stub for: _ivar_getOffset
0000000000001d4b	movq	%rax,%rbx
0000000000001d4e	addq	%rbx,%r15
0000000000001d51	movq	0x20(%r14),%rax
0000000000001d55	andq	$0xfc,%rax
0000000000001d59	movq	0x08(%rax),%rax
0000000000001d5d	testb	$0x80,(%rax)
0000000000001d60	movq	0xd0(%rbp),%r13
0000000000001d64	je	0x00001dbb
0000000000001d66	movl	0x04(%rax),%r12d
0000000000001d6a	movq	%r14,%rdi
0000000000001d6d	callq	0x000020dc	; symbol stub for: _class_getIvarLayout
0000000000001d72	testq	%rax,%rax
0000000000001d75	je	0x00001dbb
0000000000001d77	addl	$0x07,%r12d
0000000000001d7b	andl	$0xf8,%r12d
0000000000001d7f	subq	%r12,%rbx
0000000000001d82	shrq	$0x03,%rbx
0000000000001d86	xorl	%esi,%esi
0000000000001d88	jmp	0x00001d8d
0000000000001d8a	movq	%rdx,%rsi
0000000000001d8d	movzbl	(%rax),%ecx
0000000000001d90	testl	%ecx,%ecx
0000000000001d92	je	0x00001dbb
0000000000001d94	incq	%rax
0000000000001d97	movl	%ecx,%edx
0000000000001d99	shrl	$0x04,%edx
0000000000001d9c	addq	%rsi,%rdx
0000000000001d9f	andl	$0x0f,%ecx
0000000000001da2	negl	%ecx
0000000000001da4	testl	%ecx,%ecx
0000000000001da6	je	0x00001d8a
0000000000001da8	cmpq	%rdx,%rbx
0000000000001dab	je	0x00001de3
0000000000001dad	incl	%ecx
0000000000001daf	leaq	0x01(%rdx),%rsi
0000000000001db3	cmpq	%rbx,%rdx
0000000000001db6	movq	%rsi,%rdx
0000000000001db9	jle	0x00001da4
0000000000001dbb	movq	%r13,%rdi
0000000000001dbe	movq	%r15,%rsi
0000000000001dc1	addq	$0x08,%rsp
0000000000001dc5	popq	%rbx
0000000000001dc6	popq	%r12
0000000000001dc8	popq	%r13
0000000000001dca	popq	%r14
0000000000001dcc	popq	%r15
0000000000001dce	popq	%rbp
0000000000001dcf	jmp	0x000020fa	; symbol stub for: _objc_assign_strongCast
0000000000001dd4	addq	$0x08,%rsp
0000000000001dd8	popq	%rbx
0000000000001dd9	popq	%r12
0000000000001ddb	popq	%r13
0000000000001ddd	popq	%r14
0000000000001ddf	popq	%r15
0000000000001de1	popq	%rbp
0000000000001de2	ret
0000000000001de3	movq	%r15,%rdi
0000000000001de6	movq	%r13,%rsi
0000000000001de9	addq	$0x08,%rsp
0000000000001ded	popq	%rbx
0000000000001dee	popq	%r12
0000000000001df0	popq	%r13
0000000000001df2	popq	%r14
0000000000001df4	popq	%r15
0000000000001df6	popq	%rbp
0000000000001df7	jmp	___arclite_objc_storeStrong
___arclite_object_copy:
0000000000001dfc	pushq	%rbp
0000000000001dfd	movq	%rsp,%rbp
0000000000001e00	pushq	%r15
0000000000001e02	pushq	%r14
0000000000001e04	pushq	%r13
0000000000001e06	pushq	%r12
0000000000001e08	pushq	%rbx
0000000000001e09	subq	$0x18,%rsp
0000000000001e0d	movq	%rsi,%r14
0000000000001e10	movq	%rdi,%r15
0000000000001e13	xorl	%eax,%eax
0000000000001e15	testq	%r15,%r15
0000000000001e18	je	0x00001f66
0000000000001e1e	movq	%r15,%rdi
0000000000001e21	callq	0x00002106	; symbol stub for: _object_getClass
0000000000001e26	movq	%rax,%rbx
0000000000001e29	movq	%rbx,%rdi
0000000000001e2c	callq	0x000020d0	; symbol stub for: _class_getInstanceSize
0000000000001e31	movq	%rax,%r12
0000000000001e34	addq	%r14,%r12
0000000000001e37	movl	$0x00000001,%edi
0000000000001e3c	movq	%r12,%rsi
0000000000001e3f	callq	0x0000212a	; symbol stub for: _calloc
0000000000001e44	movq	%rax,%rcx
0000000000001e47	movq	%rcx,0xc0(%rbp)
0000000000001e4b	xorl	%eax,%eax
0000000000001e4d	testq	%rcx,%rcx
0000000000001e50	je	0x00001f66
0000000000001e56	movq	0xc0(%rbp),%rdi
0000000000001e5a	movq	%r15,%rsi
0000000000001e5d	movq	%r12,%rdx
0000000000001e60	callq	0x00002130	; symbol stub for: _memmove
0000000000001e65	jmp	0x00001e72
0000000000001e67	movq	%rbx,%rdi
0000000000001e6a	callq	0x000020e2	; symbol stub for: _class_getSuperclass
0000000000001e6f	movq	%rax,%rbx
0000000000001e72	testq	%rbx,%rbx
0000000000001e75	je	0x00001f62
0000000000001e7b	movq	0x20(%rbx),%rax
0000000000001e7f	andq	$0xfc,%rax
0000000000001e83	movq	0x08(%rax),%rax
0000000000001e87	testb	$0x80,(%rax)
0000000000001e8a	je	0x00001e67
0000000000001e8c	movq	%r15,%rdi
0000000000001e8f	callq	0x00002106	; symbol stub for: _object_getClass
0000000000001e94	jmp	0x00001e9f
0000000000001e96	movq	0xc8(%rbp),%rdi
0000000000001e9a	callq	0x000020e2	; symbol stub for: _class_getSuperclass
0000000000001e9f	testq	%rax,%rax
0000000000001ea2	je	0x00001f62
0000000000001ea8	movq	%rax,0xc8(%rbp)
0000000000001eac	movq	0x20(%rax),%rax
0000000000001eb0	andq	$0xfc,%rax
0000000000001eb4	movq	0x08(%rax),%rax
0000000000001eb8	testb	$0x80,(%rax)
0000000000001ebb	je	0x00001e96
0000000000001ebd	movq	0xc8(%rbp),%rdi
0000000000001ec1	callq	0x000020dc	; symbol stub for: _class_getIvarLayout
0000000000001ec6	movq	%rax,%rbx
0000000000001ec9	testq	%rbx,%rbx
0000000000001ecc	je	0x00001e96
0000000000001ece	movb	(%rbx),%al
0000000000001ed0	testb	%al,%al
0000000000001ed2	je	0x00001e96
0000000000001ed4	movq	0xc8(%rbp),%rcx
0000000000001ed8	movq	0x20(%rcx),%rcx
0000000000001edc	andq	$0xfc,%rcx
0000000000001ee0	movq	0x08(%rcx),%rcx
0000000000001ee4	movl	0x04(%rcx),%ecx
0000000000001ee7	addl	$0x07,%ecx
0000000000001eea	andl	$0xf8,%ecx
0000000000001eed	addq	0xc0(%rbp),%rcx
0000000000001ef1	jmp	0x00001f47
0000000000001ef3	movq	%rax,%r12
0000000000001ef6	andq	$0x0f,%r12
0000000000001efa	movl	$0xffffffff,%ecx
0000000000001eff	addq	%rcx,%r12
0000000000001f02	movzbl	%al,%r15d
0000000000001f06	andl	$0x0f,%r15d
0000000000001f0a	negl	%r15d
0000000000001f0d	movq	(%r14),%rdi
0000000000001f10	testq	%rdi,%rdi
0000000000001f13	je	0x00001f22
0000000000001f15	leaq	0x000016b4(%rip),%rsi
0000000000001f1c	call	*0x000016ae(%rip)
0000000000001f22	addq	$0x08,%r14
0000000000001f26	incl	%r15d
0000000000001f29	jne	0x00001f0d
0000000000001f2b	movl	%r12d,%eax
0000000000001f2e	addq	%rax,%r13
0000000000001f31	movq	0xd0(%rbp),%rcx
0000000000001f35	leaq	0x08(%rcx,%r13,8),%rcx
0000000000001f3a	incq	%rbx
0000000000001f3d	movb	(%rbx),%al
0000000000001f3f	testb	%al,%al
0000000000001f41	je	0x00001e96
0000000000001f47	movq	%rcx,0xd0(%rbp)
0000000000001f4b	movzbl	%al,%eax
0000000000001f4e	movq	%rax,%r13
0000000000001f51	shrq	$0x04,%r13
0000000000001f55	leaq	(%rcx,%r13,8),%r14
0000000000001f59	testb	$0x0f,%al
0000000000001f5b	jne	0x00001ef3
0000000000001f5d	movq	%r14,%rcx
0000000000001f60	jmp	0x00001f3a
0000000000001f62	movq	0xc0(%rbp),%rax
0000000000001f66	addq	$0x18,%rsp
0000000000001f6a	popq	%rbx
0000000000001f6b	popq	%r12
0000000000001f6d	popq	%r13
0000000000001f6f	popq	%r14
0000000000001f71	popq	%r15
0000000000001f73	popq	%rbp
0000000000001f74	ret
___arclite_objc_retain:
0000000000001f75	pushq	%rbp
0000000000001f76	movq	%rsp,%rbp
0000000000001f79	movq	0x00001650(%rip),%rax
0000000000001f80	leaq	0x00001649(%rip),%rsi
0000000000001f87	popq	%rbp
0000000000001f88	jmp	*%rax
___arclite_objc_retainBlock:
0000000000001f8a	pushq	%rbp
0000000000001f8b	movq	%rsp,%rbp
0000000000001f8e	popq	%rbp
0000000000001f8f	jmp	0x00002118	; symbol stub for: __Block_copy
___arclite_objc_release:
0000000000001f94	pushq	%rbp
0000000000001f95	movq	%rsp,%rbp
0000000000001f98	movq	0x00001651(%rip),%rax
0000000000001f9f	leaq	0x0000164a(%rip),%rsi
0000000000001fa6	popq	%rbp
0000000000001fa7	jmp	*%rax
___arclite_objc_autorelease:
0000000000001fa9	pushq	%rbp
0000000000001faa	movq	%rsp,%rbp
0000000000001fad	movq	0x0000162c(%rip),%rax
0000000000001fb4	leaq	0x00001625(%rip),%rsi
0000000000001fbb	popq	%rbp
0000000000001fbc	jmp	*%rax
___arclite_objc_retainAutorelease:
0000000000001fbe	pushq	%rbp
0000000000001fbf	movq	%rsp,%rbp
0000000000001fc2	leaq	0x00001607(%rip),%rsi
0000000000001fc9	call	*0x00001601(%rip)
0000000000001fcf	movq	0x0000160a(%rip),%rcx
0000000000001fd6	leaq	0x00001603(%rip),%rsi
0000000000001fdd	movq	%rax,%rdi
0000000000001fe0	popq	%rbp
0000000000001fe1	jmp	*%rcx
___arclite_objc_autoreleaseReturnValue:
0000000000001fe3	pushq	%rbp
0000000000001fe4	movq	%rsp,%rbp
0000000000001fe7	movq	0x000015f2(%rip),%rax
0000000000001fee	leaq	0x000015eb(%rip),%rsi
0000000000001ff5	popq	%rbp
0000000000001ff6	jmp	*%rax
___arclite_objc_retainAutoreleaseReturnValue:
0000000000001ff8	pushq	%rbp
0000000000001ff9	movq	%rsp,%rbp
0000000000001ffc	leaq	0x000015cd(%rip),%rsi
0000000000002003	call	*0x000015c7(%rip)
0000000000002009	movq	0x000015d0(%rip),%rcx
0000000000002010	leaq	0x000015c9(%rip),%rsi
0000000000002017	movq	%rax,%rdi
000000000000201a	popq	%rbp
000000000000201b	jmp	*%rcx
___arclite_objc_retainAutoreleasedReturnValue:
000000000000201d	pushq	%rbp
000000000000201e	movq	%rsp,%rbp
0000000000002021	movq	0x000015a8(%rip),%rax
0000000000002028	leaq	0x000015a1(%rip),%rsi
000000000000202f	popq	%rbp
0000000000002030	jmp	*%rax
___arclite_objc_storeStrong:
0000000000002032	pushq	%rbp
0000000000002033	movq	%rsp,%rbp
0000000000002036	pushq	%r15
0000000000002038	pushq	%r14
000000000000203a	pushq	%rbx
000000000000203b	pushq	%rax
000000000000203c	movq	%rsi,%rbx
000000000000203f	movq	%rdi,%r15
0000000000002042	movq	(%r15),%r14
0000000000002045	cmpq	%rbx,%r14
0000000000002048	jne	0x00002055
000000000000204a	addq	$0x08,%rsp
000000000000204e	popq	%rbx
000000000000204f	popq	%r14
0000000000002051	popq	%r15
0000000000002053	popq	%rbp
0000000000002054	ret
0000000000002055	leaq	0x00001574(%rip),%rsi
000000000000205c	movq	%rbx,%rdi
000000000000205f	call	*0x0000156b(%rip)
0000000000002065	movq	%rbx,%rdi
0000000000002068	movq	%r15,%rsi
000000000000206b	callq	0x000020fa	; symbol stub for: _objc_assign_strongCast
0000000000002070	movq	0x00001579(%rip),%rax
0000000000002077	leaq	0x00001572(%rip),%rsi
000000000000207e	movq	%r14,%rdi
0000000000002081	addq	$0x08,%rsp
0000000000002085	popq	%rbx
0000000000002086	popq	%r14
0000000000002088	popq	%r15
000000000000208a	popq	%rbp
000000000000208b	jmp	*%rax
___arclite_objc_autoreleasePoolPop:
000000000000208d	pushq	%rbp
000000000000208e	movq	%rsp,%rbp
0000000000002091	movq	0x000014a8(%rip),%rsi
0000000000002098	popq	%rbp
0000000000002099	jmp	*0x00000fb1(%rip)
___arclite_objc_autoreleasePoolPush:
000000000000209f	pushq	%rbp
00000000000020a0	movq	%rsp,%rbp
00000000000020a3	movq	0x0000149e(%rip),%rsi
00000000000020aa	movq	0x000015b7(%rip),%rdi
00000000000020b1	popq	%rbp
00000000000020b2	jmp	*0x00000f98(%rip)
