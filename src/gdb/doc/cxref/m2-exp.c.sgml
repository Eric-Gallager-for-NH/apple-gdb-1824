<!DOCTYPE LINUXDOC SYSTEM>

<!-- This SGML file generated by cxref (version 1.6e). -->
<!-- cxref program (c) Andrew M. Bishop 1995-2014. -->

<!--
Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF m2-exp.c
CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
-->

<article>

<title>Cross reference for m2-exp.c of gdb.cxref.
<author>cxref

<sect>File m2-exp.c

<sect1>Included Files

<p>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<itemize>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
<item><tt>#include &lt;sys/time.h&gt;</tt>
<item><tt>#include &lt;time.h&gt;</tt>
<item><tt>#include &lt;sys/types.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
<item><tt>#include &lt;errno.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
<item><tt>#include &lt;regex.h&gt;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;unistd.h&gt;</tt>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;gdb_locale.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<item><tt>#include &lt;locale.h&gt;</tt>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../gdb/signals.h&quot;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &quot;../include/libiberty.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/symcat.h&quot;</tt>
</itemize>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
<item><tt>#include &quot;ui-file.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;xm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/xm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &lt;mach/mach.h&gt;</tt>
<item><tt>#include &lt;signal.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;nm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/i386/nm-i386.h&quot;</tt>
<item><tt>#include &quot;macosx/nm-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;tm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/tm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;macosx/i386-macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/i386-macosx-thread-status.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &lt;mach/mach_types.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
<item><tt>#include &lt;inttypes.h&gt;</tt>
<item><tt>#include &lt;mach/mach_vm.h&gt;</tt>
<item><tt>#include &lt;mach/kmod.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;macosx/tm-i386-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;../include/fopen-bin.h&quot;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdlib.h&gt;</tt>
<item><tt>#include &quot;gdbarch.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_string.h&quot;</tt>
<itemize>
<item><tt>#include &lt;string.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;expression.h&quot;</tt>
<itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/floatformat.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;language.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;value.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
<item><tt>#include &quot;gdb_regex.h&quot;</tt>
<itemize>
<item><tt>#include &lt;regex.h&gt;</tt>
</itemize>
<item><tt>#include &quot;frame.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
</itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;gdbtypes.h&quot;</tt>
<item><tt>#include &quot;expression.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;parser-defs.h&quot;</tt>
<itemize>
<item><tt>#include &quot;doublest.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;m2-lang.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;symfile.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;symtab.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;objfiles.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &lt;uuid/uuid.h&gt;</tt>
<item><tt>#include &quot;gdb_obstack.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/obstack.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;symfile.h&quot;</tt>
<item><tt>#include &quot;inlining.h&quot;</tt>
<itemize>
<item><tt>#include &lt;block.h&gt;</tt>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
</itemize>
<item><tt>#include &lt;sqlite3.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;block.h&quot;</tt>
</itemize>

<sect1>Preprocessor definitions

<p>
<tt>#define YYBISON 1</tt><newline>
<p>
<tt>#define YYBISON_VERSION &quot;3.0.4&quot;</tt><newline>
<p>
<tt>#define YYSKELETON_NAME &quot;yacc.c&quot;</tt><newline>
<p>
<tt>#define YYPURE 0</tt><newline>
<p>
<tt>#define YYPUSH 0</tt><newline>
<p>
<tt>#define YYPULL 1</tt><newline>
<p>
<tt>#define yymaxdepth m2_maxdepth</tt><newline>
<p>
<tt>#define yyparse m2_parse</tt><newline>
<p>
<tt>#define yylex m2_lex</tt><newline>
<p>
<tt>#define yyerror m2_error</tt><newline>
<p>
<tt>#define yylval m2_lval</tt><newline>
<p>
<tt>#define yychar m2_char</tt><newline>
<p>
<tt>#define yydebug m2_debug</tt><newline>
<p>
<tt>#define yypact m2_pact</tt><newline>
<p>
<tt>#define yyr1 m2_r1</tt><newline>
<p>
<tt>#define yyr2 m2_r2</tt><newline>
<p>
<tt>#define yydef m2_def</tt><newline>
<p>
<tt>#define yychk m2_chk</tt><newline>
<p>
<tt>#define yypgo m2_pgo</tt><newline>
<p>
<tt>#define yyact m2_act</tt><newline>
<p>
<tt>#define yyexca m2_exca</tt><newline>
<p>
<tt>#define yyerrflag m2_errflag</tt><newline>
<p>
<tt>#define yynerrs m2_nerrs</tt><newline>
<p>
<tt>#define yyps m2_ps</tt><newline>
<p>
<tt>#define yypv m2_pv</tt><newline>
<p>
<tt>#define yys m2_s</tt><newline>
<p>
<tt>#define yy_yys m2_yys</tt><newline>
<p>
<tt>#define yystate m2_state</tt><newline>
<p>
<tt>#define yytmp m2_tmp</tt><newline>
<p>
<tt>#define yyv m2_v</tt><newline>
<p>
<tt>#define yy_yyv m2_yyv</tt><newline>
<p>
<tt>#define yyval m2_val</tt><newline>
<p>
<tt>#define yylloc m2_lloc</tt><newline>
<p>
<tt>#define yyreds m2_reds</tt><newline>
<p>
<tt>#define yytoks m2_toks</tt><newline>
<p>
<tt>#define yyname m2_name</tt><newline>
<p>
<tt>#define yyrule m2_rule</tt><newline>
<p>
<tt>#define yylhs m2_yylhs</tt><newline>
<p>
<tt>#define yylen m2_yylen</tt><newline>
<p>
<tt>#define yydefred m2_yydefred</tt><newline>
<p>
<tt>#define yydgoto m2_yydgoto</tt><newline>
<p>
<tt>#define yysindex m2_yysindex</tt><newline>
<p>
<tt>#define yyrindex m2_yyrindex</tt><newline>
<p>
<tt>#define yygindex m2_yygindex</tt><newline>
<p>
<tt>#define yytable m2_yytable</tt><newline>
<p>
<tt>#define yycheck m2_yycheck</tt><newline>
<p>
<tt>#define YYDEBUG 1</tt><newline>
<p>
<tt>#define YYFPRINTF parser_fprintf</tt><newline>
<p>
<tt>#define YY_NULLPTR 0</tt><newline>
<p>
<tt>#define YYERROR_VERBOSE 0</tt><newline>
<p>
<tt>#define YY_YY_Y_TAB_H_INCLUDED</tt><newline>
<p>
<tt>#define YYTOKENTYPE</tt><newline>
<p>
<tt>#define INT 258</tt><newline>
<p>
<tt>#define HEX 259</tt><newline>
<p>
<tt>#define ERROR 260</tt><newline>
<p>
<tt>#define UINT 261</tt><newline>
<p>
<tt>#define M2_TRUE 262</tt><newline>
<p>
<tt>#define M2_FALSE 263</tt><newline>
<p>
<tt>#define CHAR 264</tt><newline>
<p>
<tt>#define FLOAT 265</tt><newline>
<p>
<tt>#define STRING 266</tt><newline>
<p>
<tt>#define NAME 267</tt><newline>
<p>
<tt>#define BLOCKNAME 268</tt><newline>
<p>
<tt>#define IDENT 269</tt><newline>
<p>
<tt>#define VARNAME 270</tt><newline>
<p>
<tt>#define TYPENAME 271</tt><newline>
<p>
<tt>#define SIZE 272</tt><newline>
<p>
<tt>#define CAP 273</tt><newline>
<p>
<tt>#define ORD 274</tt><newline>
<p>
<tt>#define HIGH 275</tt><newline>
<p>
<tt>#define ABS 276</tt><newline>
<p>
<tt>#define MIN_FUNC 277</tt><newline>
<p>
<tt>#define MAX_FUNC 278</tt><newline>
<p>
<tt>#define FLOAT_FUNC 279</tt><newline>
<p>
<tt>#define VAL 280</tt><newline>
<p>
<tt>#define CHR 281</tt><newline>
<p>
<tt>#define ODD 282</tt><newline>
<p>
<tt>#define TRUNC 283</tt><newline>
<p>
<tt>#define INC 284</tt><newline>
<p>
<tt>#define DEC 285</tt><newline>
<p>
<tt>#define INCL 286</tt><newline>
<p>
<tt>#define EXCL 287</tt><newline>
<p>
<tt>#define COLONCOLON 288</tt><newline>
<p>
<tt>#define INTERNAL_VAR 289</tt><newline>
<p>
<tt>#define ABOVE_COMMA 290</tt><newline>
<p>
<tt>#define ASSIGN 291</tt><newline>
<p>
<tt>#define LEQ 292</tt><newline>
<p>
<tt>#define GEQ 293</tt><newline>
<p>
<tt>#define NOTEQUAL 294</tt><newline>
<p>
<tt>#define IN 295</tt><newline>
<p>
<tt>#define OROR 296</tt><newline>
<p>
<tt>#define LOGICAL_AND 297</tt><newline>
<p>
<tt>#define DIV 298</tt><newline>
<p>
<tt>#define MOD 299</tt><newline>
<p>
<tt>#define UNARY 300</tt><newline>
<p>
<tt>#define DOT 301</tt><newline>
<p>
<tt>#define NOT 302</tt><newline>
<p>
<tt>#define QID 303</tt><newline>
<p>
<tt>#define YYSTYPE_IS_TRIVIAL 1</tt><newline>
<p>
<tt>#define YYSTYPE_IS_DECLARED 1</tt><newline>
<p>
<tt>#define YYSIZE_T __SIZE_TYPE__</tt><newline>
<p>
<tt>#define YYSIZE_MAXIMUM</tt><newline>
<p>
<tt>#define YY_( Msgid )</tt><newline>
<p>
<tt>#define YY_ATTRIBUTE( Spec )</tt><newline>
<p>
<tt>#define YY_ATTRIBUTE_PURE</tt><newline>
<p>
<tt>#define YY_ATTRIBUTE_UNUSED</tt><newline>
<p>
<tt>#define _Noreturn</tt><newline>
<p>
<tt>#define YYUSE( E )</tt><newline>
<p>
<tt>#define YY_INITIAL_VALUE( Value )</tt><newline>
<p>
<tt>#define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN</tt><newline>
<p>
<tt>#define YY_IGNORE_MAYBE_UNINITIALIZED_END</tt><newline>
<p>
<tt>#define YYSTACK_ALLOC YYMALLOC</tt><newline>
<p>
<tt>#define YYSTACK_FREE YYFREE</tt><newline>
<p>
<tt>#define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM</tt><newline>
<p>
<tt>#define YYMALLOC xmalloc</tt><newline>
<p>
<tt>#define YYFREE xfree</tt><newline>
<p>
<tt>#define YYSTACK_GAP_MAXIMUM</tt><newline>
<p>
<tt>#define YYSTACK_BYTES( N )</tt><newline>
<p>
<tt>#define YYCOPY_NEEDED 1</tt><newline>
<p>
<tt>#define YYSTACK_RELOCATE( Stack_alloc, Stack )</tt><newline>
<p>
<tt>#define YYCOPY( Dst, Src, Count )</tt><newline>
<p>
<tt>#define YYFINAL 67</tt><newline>
<p>
<tt>#define YYLAST 856</tt><newline>
<p>
<tt>#define YYNTOKENS 68</tt><newline>
<p>
<tt>#define YYNNTS 15</tt><newline>
<p>
<tt>#define YYNRULES 80</tt><newline>
<p>
<tt>#define YYNSTATES 181</tt><newline>
<p>
<tt>#define YYUNDEFTOK 2</tt><newline>
<p>
<tt>#define YYMAXUTOK 303</tt><newline>
<p>
<tt>#define YYTRANSLATE( YYX )</tt><newline>
<p>
<tt>#define YYPACT_NINF -87</tt><newline>
<p>
<tt>#define yypact_value_is_default( Yystate )</tt><newline>
<p>
<tt>#define YYTABLE_NINF -74</tt><newline>
<p>
<tt>#define yytable_value_is_error( Yytable_value )</tt><newline>
<p>
<tt>#define yyerrok</tt><newline>
<p>
<tt>#define yyclearin</tt><newline>
<p>
<tt>#define YYEMPTY -2</tt><newline>
<p>
<tt>#define YYEOF 0</tt><newline>
<p>
<tt>#define YYACCEPT</tt><newline>
<p>
<tt>#define YYABORT</tt><newline>
<p>
<tt>#define YYERROR</tt><newline>
<p>
<tt>#define YYRECOVERING</tt><newline>
<p>
<tt>#define YYBACKUP( Token, Value )</tt><newline>
<p>
<tt>#define YYTERROR 1</tt><newline>
<p>
<tt>#define YYERRCODE 256</tt><newline>
<p>
<tt>#define YYDPRINTF( Args )</tt><newline>
<p>
<tt>#define YY_LOCATION_PRINT( File, Loc )</tt><newline>
<p>
<tt>#define YY_SYMBOL_PRINT( Title, Type, Value, Location )</tt><newline>
<p>
<tt>#define YY_STACK_PRINT( Bottom, Top )</tt><newline>
<p>
<tt>#define YY_REDUCE_PRINT( Rule )</tt><newline>
<p>
<tt>#define YYINITDEPTH 200</tt><newline>
<p>
<tt>#define YYMAXDEPTH 10000</tt><newline>
<p>
<tt>#define YYPOPSTACK( N )</tt><newline>

<sect1>Type enum yytokentype

<p>
<itemize>
<item><tt>enum yytokentype</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>INT;</tt><newline>
<item><tt>HEX;</tt><newline>
<item><tt>ERROR;</tt><newline>
<item><tt>UINT;</tt><newline>
<item><tt>M2_TRUE;</tt><newline>
<item><tt>M2_FALSE;</tt><newline>
<item><tt>CHAR;</tt><newline>
<item><tt>FLOAT;</tt><newline>
<item><tt>STRING;</tt><newline>
<item><tt>NAME;</tt><newline>
<item><tt>BLOCKNAME;</tt><newline>
<item><tt>IDENT;</tt><newline>
<item><tt>VARNAME;</tt><newline>
<item><tt>TYPENAME;</tt><newline>
<item><tt>SIZE;</tt><newline>
<item><tt>CAP;</tt><newline>
<item><tt>ORD;</tt><newline>
<item><tt>HIGH;</tt><newline>
<item><tt>ABS;</tt><newline>
<item><tt>MIN_FUNC;</tt><newline>
<item><tt>MAX_FUNC;</tt><newline>
<item><tt>FLOAT_FUNC;</tt><newline>
<item><tt>VAL;</tt><newline>
<item><tt>CHR;</tt><newline>
<item><tt>ODD;</tt><newline>
<item><tt>TRUNC;</tt><newline>
<item><tt>INC;</tt><newline>
<item><tt>DEC;</tt><newline>
<item><tt>INCL;</tt><newline>
<item><tt>EXCL;</tt><newline>
<item><tt>COLONCOLON;</tt><newline>
<item><tt>INTERNAL_VAR;</tt><newline>
<item><tt>ABOVE_COMMA;</tt><newline>
<item><tt>ASSIGN;</tt><newline>
<item><tt>LEQ;</tt><newline>
<item><tt>GEQ;</tt><newline>
<item><tt>NOTEQUAL;</tt><newline>
<item><tt>IN;</tt><newline>
<item><tt>OROR;</tt><newline>
<item><tt>LOGICAL_AND;</tt><newline>
<item><tt>DIV;</tt><newline>
<item><tt>MOD;</tt><newline>
<item><tt>UNARY;</tt><newline>
<item><tt>DOT;</tt><newline>
<item><tt>NOT;</tt><newline>
<item><tt>QID;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Type union YYSTYPE

<p>
<itemize>
<item><tt>union YYSTYPE</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>long lval;</tt><newline>
<item><tt>unsigned long ulval;</tt><newline>
<item><tt>DOUBLEST dval;</tt><newline>
<item><tt>struct symbol* sym;</tt><newline>
<item><tt>struct type* tval;</tt><newline>
<item><tt>struct stoken sval;</tt><newline>
<item><tt>int voidval;</tt><newline>
<item><tt>struct block* bval;</tt><newline>
<item><tt>enum exp_opcode opcode;</tt><newline>
<item><tt>struct internalvar* ivar;</tt><newline>
<item><tt>struct type** tvec;</tt><newline>
<item><tt>int* ivec;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Typedef YYSTYPE

<p>
<tt>typedef union YYSTYPE YYSTYPE</tt><newline>
<descrip>
<tag>See:</tag>
<itemize>
<item>Type union YYSTYPE
</itemize>
</descrip>

<sect1>Typedef yytype_uint8

<p>
<tt>typedef unsigned char yytype_uint8</tt><newline>

<sect1>Typedef yytype_int8

<p>
<tt>typedef signed char yytype_int8</tt><newline>

<sect1>Typedef yytype_uint16

<p>
<tt>typedef unsigned short int yytype_uint16</tt><newline>

<sect1>Typedef yytype_int16

<p>
<tt>typedef short int yytype_int16</tt><newline>

<sect1>Type union yyalloc

<p>
<itemize>
<item><tt>union yyalloc</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>yytype_int16 yyss_alloc;</tt><newline>
<item><tt>YYSTYPE yyvs_alloc;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Type struct keyword

<p>
<itemize>
<item><tt>struct keyword</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>char keyw[10];</tt><newline>
<item><tt>int token;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Global Variable m2_debug

<p>
<tt>int m2_debug</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>m2-exp.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>m2_parse()  :  m2-exp.c
<item>yydestruct()  :  m2-exp.c
</itemize>
</descrip>

<sect1>Global Variable m2_lval

<p>
<tt>YYSTYPE m2_lval</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>m2-exp.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>m2_lex()  :  m2-exp.c
<item>m2_parse()  :  m2-exp.c
<item>parse_number()  :  m2-exp.c
</itemize>
</descrip>

<sect1>Global Variable m2_char

<p>
<tt>int m2_char</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>m2-exp.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>m2_parse()  :  m2-exp.c
</itemize>
</descrip>

<sect1>Global Variable m2_nerrs

<p>
<tt>int m2_nerrs</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>m2-exp.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>m2_parse()  :  m2-exp.c
</itemize>
</descrip>

<sect1>Local Variables

<p>
<bf>number_sign</bf><newline>
<tt>static int number_sign</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>m2_parse()
<item>parse_number()
</itemize>
</descrip>
<p>
<bf>yytranslate</bf><newline>
<tt>static const yytype_uint8 yytranslate[]</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>m2_parse()
</itemize>
</descrip>
<p>
<bf>yyrline</bf><newline>
<tt>static const yytype_uint16 yyrline[]</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>yy_reduce_print()
</itemize>
</descrip>
<p>
<bf>yytname</bf><newline>
<tt>static const char* const yytname[]</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>yy_symbol_print()
</itemize>
</descrip>
<p>
<bf>m2_pact</bf><newline>
<tt>static const yytype_int16 m2_pact[]</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>m2_parse()
</itemize>
</descrip>
<p>
<bf>yydefact</bf><newline>
<tt>static const yytype_uint8 yydefact[]</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>m2_parse()
</itemize>
</descrip>
<p>
<bf>yypgoto</bf><newline>
<tt>static const yytype_int8 yypgoto[]</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>m2_parse()
</itemize>
</descrip>
<p>
<bf>yydefgoto</bf><newline>
<tt>static const yytype_int16 yydefgoto[]</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>m2_parse()
</itemize>
</descrip>
<p>
<bf>m2_yytable</bf><newline>
<tt>static const yytype_int16 m2_yytable[]</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>m2_parse()
</itemize>
</descrip>
<p>
<bf>m2_yycheck</bf><newline>
<tt>static const yytype_int16 m2_yycheck[]</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>m2_parse()
</itemize>
</descrip>
<p>
<bf>yystos</bf><newline>
<tt>static const yytype_uint8 yystos[]</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>m2_parse()
<item>yy_reduce_print()
</itemize>
</descrip>
<p>
<bf>m2_r1</bf><newline>
<tt>static const yytype_uint8 m2_r1[]</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>m2_parse()
</itemize>
</descrip>
<p>
<bf>m2_r2</bf><newline>
<tt>static const yytype_uint8 m2_r2[]</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>m2_parse()
<item>yy_reduce_print()
</itemize>
</descrip>
<p>
<bf>tokentab2</bf><newline>
<tt>static struct {...} tokentab2[]</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>m2_lex()
</itemize>
</descrip>
<p>
<bf>keytab</bf><newline>
<tt>static struct keyword keytab[]</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>m2_lex()
</itemize>
</descrip>

<sect1>Global Function m2_error()

<p><tt>void m2_error ( const char* msg )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>m2-lang.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>m2_parse()  :  m2-exp.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>m2-lang.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>lexptr  :  parse.c
<item>prev_lexptr  :  parse.c
</itemize>
</descrip>

<sect1>Global Function m2_parse()

<p><tt>int m2_parse ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>m2-lang.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>contained_in()  :  block.c
<item>copy_name()  :  parse.c
<item>end_arglist()  :  parse.c
<item>error()  :  utils.c
<item>have_full_symbols()  :  objfiles.c
<item>have_partial_symbols()  :  objfiles.c
<item>lookup_function_type()  :  gdbtypes.c
<item>lookup_minimal_symbol()  :  minsyms.c
<item>lookup_symbol()  :  symtab.c
<item>lookup_typename()  :  gdbtypes.c
<item>m2_error()  :  m2-exp.c
<item>m2_lex()  :  m2-exp.c
<item>objc_fixup_class_length()  :  objc-lang.c
<item>parser_fprintf()  :  parse.c
<item>start_arglist()  :  parse.c
<item>symbol_read_needs_frame()  :  findvar.c
<item>write_exp_elt_block()  :  parse.c
<item>write_exp_elt_dblcst()  :  parse.c
<item>write_exp_elt_longcst()  :  parse.c
<item>write_exp_elt_opcode()  :  parse.c
<item>write_exp_elt_sym()  :  parse.c
<item>write_exp_elt_type()  :  parse.c
<item>write_exp_msymbol()  :  parse.c
<item>write_exp_string()  :  parse.c
<item>xfree()  :  utils.c
<item>xmalloc()  :  utils.c
<item>yy_reduce_print()  :  m2-exp.c
<item>yy_stack_print()  :  m2-exp.c
<item>yy_symbol_print()  :  m2-exp.c
<item>yydestruct()  :  m2-exp.c
<item>__builtin_memcpy()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>m2-lang.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>arglist_len  :  parse.c
<item>block_found  :  symtab.c
<item>builtin_type_int  :  gdbtypes.c
<item>builtin_type_m2_card  :  m2-lang.c
<item>builtin_type_m2_char  :  m2-lang.c
<item>builtin_type_m2_int  :  m2-lang.c
<item>builtin_type_m2_real  :  m2-lang.c
<item>expression_context_block  :  parse.c
<item>innermost_block  :  parse.c
<item>m2_char  :  m2-exp.c
<item>m2_debug  :  m2-exp.c
<item>m2_lval  :  m2-exp.c
<item>m2_nerrs  :  m2-exp.c
<item>m2_pact  :  m2-exp.c
<item>m2_r1  :  m2-exp.c
<item>m2_r2  :  m2-exp.c
<item>m2_yycheck  :  m2-exp.c
<item>m2_yytable  :  m2-exp.c
<item>number_sign  :  m2-exp.c
<item>yydefact  :  m2-exp.c
<item>yydefgoto  :  m2-exp.c
<item>yypgoto  :  m2-exp.c
<item>yystos  :  m2-exp.c
<item>yytranslate  :  m2-exp.c
</itemize>
</descrip>

<sect1>Local Function m2_lex()

<p><tt>static int m2_lex ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>m2-exp.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>copy_name()  :  parse.c
<item>error()  :  utils.c
<item>lookup_partial_symtab()  :  symtab.c
<item>lookup_symbol()  :  symtab.c
<item>lookup_typename()  :  gdbtypes.c
<item>parse_number()  :  m2-exp.c
<item>write_dollar_variable()  :  parse.c
<item>__builtin___memcpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_memcpy_chk(), strlen(), strncmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>m2_parse()  :  m2-exp.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>comma_terminates  :  parse.c
<item>expression_context_block  :  parse.c
<item>keytab  :  m2-exp.c
<item>lexptr  :  parse.c
<item>m2_lval  :  m2-exp.c
<item>paren_depth  :  parse.c
<item>prev_lexptr  :  parse.c
<item>tokentab2  :  m2-exp.c
</itemize>
</descrip>

<sect1>Local Function parse_number()

<p><tt>static int parse_number ( int olen )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>m2-exp.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>range_error()  :  language.c
<item>atof()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>m2_lex()  :  m2-exp.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>input_radix  :  valprint.c
<item>lexptr  :  parse.c
<item>m2_lval  :  m2-exp.c
<item>number_sign  :  m2-exp.c
<item>range_check  :  language.c
</itemize>
</descrip>

<sect1>Local Function yy_reduce_print()

<p><tt>static void yy_reduce_print ( yytype_int16* yyssp, YYSTYPE* yyvsp, int m2_rule )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>parser_fprintf()  :  parse.c
<item>yy_symbol_print()  :  m2-exp.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>m2_parse()  :  m2-exp.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>m2_r2  :  m2-exp.c
<item>yyrline  :  m2-exp.c
<item>yystos  :  m2-exp.c
</itemize>
</descrip>

<sect1>Local Function yy_stack_print()

<p><tt>static void yy_stack_print ( yytype_int16* yybottom, yytype_int16* yytop )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>parser_fprintf()  :  parse.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>m2_parse()  :  m2-exp.c
</itemize>
</descrip>

<sect1>Local Function yy_symbol_print()

<p><tt>static void yy_symbol_print ( FILE* yyoutput, int yytype, YYSTYPE const* const yyvaluep )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>parser_fprintf()  :  parse.c
<item>yy_symbol_value_print()  :  m2-exp.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>m2_parse()  :  m2-exp.c
<item>yy_reduce_print()  :  m2-exp.c
<item>yydestruct()  :  m2-exp.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>yytname  :  m2-exp.c
</itemize>
</descrip>

<sect1>Local Function yy_symbol_value_print()

<p><tt>static void yy_symbol_value_print ( FILE* yyoutput, int yytype, YYSTYPE const* const yyvaluep )</tt><newline>
<descrip>
<tag>Called by:</tag>
<itemize>
<item>yy_symbol_print()  :  m2-exp.c
</itemize>
</descrip>

<sect1>Local Function yydestruct()

<p><tt>static void yydestruct ( const char* yymsg, int yytype, YYSTYPE* yyvaluep )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>parser_fprintf()  :  parse.c
<item>yy_symbol_print()  :  m2-exp.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>m2_parse()  :  m2-exp.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>m2_debug  :  m2-exp.c
</itemize>
</descrip>

</article>
