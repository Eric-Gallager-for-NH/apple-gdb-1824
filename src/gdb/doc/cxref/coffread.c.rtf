{\rtf\ansi
\deff0
{\fonttbl
{\f0\froman Times New Roman;}
{\f1\fmodern Courier New;}
}
{\stylesheet
{\s0\f0\fs24 Normal;}
{\s1\f0\fs40\b\sb400\sa200\keepn\keep Heading 1;}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Heading 2;}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Heading 3;}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Heading 4;}
{\s5\f1\fs20\ql\sb50\sa50 Code;}
}
{\info{\comment
 This RTF file generated by cxref (version 1.6e).
 cxref program (c) Andrew M. Bishop 1995-2014.
 Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF coffread.c
 CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
}}
\paperw11880\paperh16848\margl1440\margr1440\margt1440\margb1440
\sectd\plain
\s0\f0\fs24
{\s1\f0\fs40\b\sb400\sa200\keepn\keep File coffread.c\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Refs Func:\cell coff_new_init()\cell coffread.c\cell\row
\cell coff_symfile_finish()\cell coffread.c\cell\row
\cell coff_symfile_init()\cell coffread.c\cell\row
\cell coff_symfile_read()\cell coffread.c\cell\row
\cell default_symfile_offsets()\cell symfile.c\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Included Files\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <errno.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <unistd.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_locale.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <locale.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../gdb/signals.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/symcat.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-file.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "xm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/xm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "nm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/i386/nm-i386.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/nm-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "tm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/tm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-tdep.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-tdep.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-thread-status.h"\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_types.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <inttypes.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_vm.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/kmod.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/tm-i386-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/fopen-bin.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdlib.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbarch.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdbtypes.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../include/demangle.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "breakpoint.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "../include/floatformat.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_regex.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "gdbtypes.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "expression.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb-events.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_obstack.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/obstack.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_string.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <ctype.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../include/coff/internal.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/libcoff.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/bfdlink.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "objfiles.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <uuid/uuid.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_obstack.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symfile.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "inlining.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <block.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sqlite3.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "buildsym.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb-stabs.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "stabsread.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "complaints.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "target.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "dcache.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "memattr.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_assert.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "block.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "dictionary.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "coff-pe-read.h"\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Preprocessor definitions\par}
{\s5\f1\fs20\ql\sb50\sa50 #define EXTERNAL_NAME( string, abfd )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define SDB_TYPE( type )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define N_BTMASK local_n_btmask\par}
{\s5\f1\fs20\ql\sb50\sa50 #define N_BTSHFT local_n_btshft\par}
{\s5\f1\fs20\ql\sb50\sa50 #define N_TMASK local_n_tmask\par}
{\s5\f1\fs20\ql\sb50\sa50 #define N_TSHIFT local_n_tshift\par}
{\s5\f1\fs20\ql\sb50\sa50 #define L_LNNO32( lp )\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Type definitions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct coff_symfile_info\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct coff_symfile_info}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 file_ptr min_lineno_offset;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 file_ptr max_lineno_offset;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 CORE_ADDR textaddr;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 unsigned int textsize;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct stab_section_list* stabsects;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 asection* stabstrsect;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 char* stabstrdata;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct coff_symbol\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct coff_symbol}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 char* c_name;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int c_symnum;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int c_naux;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 long c_value;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int c_sclass;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int c_secnum;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 unsigned int c_type;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct find_targ_sec_arg\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct find_targ_sec_arg}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int targ_index;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 asection** resultp;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct nextfield\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct nextfield}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct nextfield* next;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct field field;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Variables\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable current_source_start_addr\par}
{\s5\f1\fs20\ql\sb50\sa50 static CORE_ADDR current_source_start_addr\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell coff_end_symtab()\cell\cell\row
\cell complete_symtab()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable current_source_end_addr\par}
{\s5\f1\fs20\ql\sb50\sa50 static CORE_ADDR current_source_end_addr\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell coff_end_symtab()\cell\cell\row
\cell complete_symtab()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable nlist_bfd_global\par}
{\s5\f1\fs20\ql\sb50\sa50 static bfd* nlist_bfd_global\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell coff_symtab_read()\cell\cell\row
\cell read_one_sym()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable nlist_nsyms_global\par}
{\s5\f1\fs20\ql\sb50\sa50 static int nlist_nsyms_global\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell coff_read_enum_type()\cell\cell\row
\cell coff_read_struct_type()\cell\cell\row
\cell coff_symtab_read()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable temp_sym\par}
{\s5\f1\fs20\ql\sb50\sa50 static char* temp_sym\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell coff_symfile_read()\cell\cell\row
\cell read_one_sym()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable temp_aux\par}
{\s5\f1\fs20\ql\sb50\sa50 static char* temp_aux\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell coff_symfile_read()\cell\cell\row
\cell read_one_sym()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable local_n_btmask\par}
{\s5\f1\fs20\ql\sb50\sa50 static unsigned int local_n_btmask\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell coff_symfile_read()\cell\cell\row
\cell coff_symtab_read()\cell\cell\row
\cell decode_function_type()\cell\cell\row
\cell decode_type()\cell\cell\row
\cell read_one_sym()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable local_n_btshft\par}
{\s5\f1\fs20\ql\sb50\sa50 static unsigned int local_n_btshft\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell coff_symfile_read()\cell\cell\row
\cell coff_symtab_read()\cell\cell\row
\cell decode_type()\cell\cell\row
\cell process_coff_symbol()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable local_n_tmask\par}
{\s5\f1\fs20\ql\sb50\sa50 static unsigned int local_n_tmask\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell coff_symfile_read()\cell\cell\row
\cell coff_symtab_read()\cell\cell\row
\cell decode_type()\cell\cell\row
\cell process_coff_symbol()\cell\cell\row
\cell read_one_sym()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable local_n_tshift\par}
{\s5\f1\fs20\ql\sb50\sa50 static unsigned int local_n_tshift\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell coff_symfile_read()\cell\cell\row
\cell decode_function_type()\cell\cell\row
\cell decode_type()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable local_linesz\par}
{\s5\f1\fs20\ql\sb50\sa50 static unsigned int local_linesz\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell coff_symfile_read()\cell\cell\row
\cell enter_linenos()\cell\cell\row
\cell find_linenos()\cell\cell\row
\cell init_lineno()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable local_symesz\par}
{\s5\f1\fs20\ql\sb50\sa50 static unsigned int local_symesz\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell coff_symfile_read()\cell\cell\row
\cell read_one_sym()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable local_auxesz\par}
{\s5\f1\fs20\ql\sb50\sa50 static unsigned int local_auxesz\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell coff_symfile_read()\cell\cell\row
\cell read_one_sym()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable pe_file\par}
{\s5\f1\fs20\ql\sb50\sa50 static int pe_file\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell coff_symfile_read()\cell\cell\row
\cell coff_symtab_read()\cell\cell\row
\cell read_one_sym()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable opaque_type_chain\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct symbol* opaque_type_chain[127]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell coff_symtab_read()\cell\cell\row
\cell patch_opaque_types()\cell\cell\row
\cell process_coff_symbol()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable symfile_bfd\par}
{\s5\f1\fs20\ql\sb50\sa50 static bfd* symfile_bfd\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell coff_symfile_read()\cell\cell\row
\cell enter_linenos()\cell\cell\row
\cell init_stringtab()\cell\cell\row
\cell read_one_sym()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable stringtab\par}
{\s5\f1\fs20\ql\sb50\sa50 static char* stringtab\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell coff_getfilename()\cell\cell\row
\cell free_stringtab()\cell\cell\row
\cell getsymname()\cell\cell\row
\cell init_stringtab()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable linetab\par}
{\s5\f1\fs20\ql\sb50\sa50 static char* linetab\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell enter_linenos()\cell\cell\row
\cell free_linetab()\cell\cell\row
\cell init_lineno()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable linetab_offset\par}
{\s5\f1\fs20\ql\sb50\sa50 static long linetab_offset\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell enter_linenos()\cell\cell\row
\cell init_lineno()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable linetab_size\par}
{\s5\f1\fs20\ql\sb50\sa50 static unsigned long linetab_size\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell enter_linenos()\cell\cell\row
\cell init_lineno()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable coff_sym_fns\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct sym_fns coff_sym_fns\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_coffread()\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Functions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function _initialize_coffread()\par}
{\s5\f1\fs20\ql\sb50\sa50 void _initialize_coffread ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell coffread.c\cell\cell\row
Calls: \cell add_symtab_fns()\cell symfile.c\cell\row
Refs Var:\cell coff_sym_fns\cell coffread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function coff_alloc_type()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct type* coff_alloc_type ( int index )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell alloc_type()\cell gdbtypes.c\cell\row
\cell coff_lookup_type()\cell coffread.c\cell\row
Called by:\cell coff_read_enum_type()\cell coffread.c\cell\row
\cell coff_read_struct_type()\cell coffread.c\cell\row
\cell decode_base_type()\cell coffread.c\cell\row
\cell decode_type()\cell coffread.c\cell\row
Refs Var:\cell current_objfile\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function coff_end_symtab()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void coff_end_symtab ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell end_symtab()\cell buildsym.c\cell\row
\cell executable_objfile()\cell objfiles.c\cell\row
\cell free_named_symtabs()\cell symfile.c\cell\row
\cell internal_error()\cell utils.c\cell\row
Called by:\cell coff_symtab_read()\cell coffread.c\cell\row
Refs Var:\cell current_source_end_addr\cell coffread.c\cell\row
\cell current_source_start_addr\cell coffread.c\cell\row
\cell last_source_file\cell buildsym.c\cell\row
\cell last_source_start_addr\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function coff_getfilename()\par}
{\s5\f1\fs20\ql\sb50\sa50 static char* coff_getfilename ( union internal_auxent* aux_entry )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell coffread.c\cell\cell\row
Calls: \cell  __builtin___strcpy_chk(), __builtin___strncpy_chk(), __builtin_object_size(), __inline_strcpy_chk(), __inline_strncpy_chk(), strrchr()\cell\cell\row
Called by:\cell coff_symtab_read()\cell coffread.c\cell\row
Refs Var:\cell stringtab\cell coffread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function coff_locate_sections()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void coff_locate_sections ( bfd* abfd, asection* sectp, void* csip )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell make_cleanup()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  isdigit(), strcmp(), strncmp()\cell\cell\row
Used in:\cell coff_symfile_read()\cell coffread.c\cell\row
Refs Func:\cell xfree()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function coff_lookup_type()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct type** coff_lookup_type ( int index )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell xrealloc()\cell utils.c\cell\row
\cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk()\cell\cell\row
Called by:\cell coff_alloc_type()\cell coffread.c\cell\row
Refs Var:\cell type_vector\cell buildsym.c\cell\row
\cell type_vector_length\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function coff_new_init()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void coff_new_init ( struct objfile* ignore )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell coffread.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function coff_read_enum_type()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct type* coff_read_enum_type ( int index, int length, int lastsym )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell coffread.c\cell\cell\row
Calls: \cell add_symbol_to_list()\cell buildsym.c\cell\row
\cell coff_alloc_type()\cell coffread.c\cell\row
\cell gdbarch_int_bit()\cell gdbarch.c\cell\row
\cell obsavestring()\cell symfile.c\cell\row
\cell read_one_sym()\cell coffread.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk(), _obstack_newchunk(), strlen()\cell\cell\row
Called by:\cell decode_base_type()\cell coffread.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\cell current_objfile\cell objfiles.c\cell\row
\cell file_symbols\cell buildsym.c\cell\row
\cell local_symbols\cell buildsym.c\cell\row
\cell nlist_nsyms_global\cell coffread.c\cell\row
\cell symnum\cell buildsym.c\cell\row
\cell within_function\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function coff_read_struct_type()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct type* coff_read_struct_type ( int index, int length, int lastsym )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell coffread.c\cell\cell\row
Calls: \cell coff_alloc_type()\cell coffread.c\cell\row
\cell decode_type()\cell coffread.c\cell\row
\cell obsavestring()\cell symfile.c\cell\row
\cell read_one_sym()\cell coffread.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  __builtin_alloca(), _obstack_newchunk(), strlen()\cell\cell\row
Called by:\cell decode_base_type()\cell coffread.c\cell\row
Refs Var:\cell current_objfile\cell objfiles.c\cell\row
\cell nlist_nsyms_global\cell coffread.c\cell\row
\cell symnum\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function coff_start_symtab()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void coff_start_symtab ( const char* name )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell record_debugformat()\cell buildsym.c\cell\row
\cell savestring()\cell utils.c\cell\row
\cell start_symtab()\cell buildsym.c\cell\row
\cell  strlen()\cell\cell\row
Called by:\cell coff_symtab_read()\cell coffread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function coff_symfile_finish()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void coff_symfile_finish ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell stabsread_clear_cache()\cell stabsread.c\cell\row
\cell xfree()\cell utils.c\cell\row
Used in:\cell coffread.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function coff_symfile_init()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void coff_symfile_init ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell init_entry_point_info()\cell objfiles.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk()\cell\cell\row
Used in:\cell coffread.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function coff_symfile_read()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void coff_symfile_read ( struct objfile* objfile, int mainline )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell coff_symtab_read()\cell coffread.c\cell\row
\cell coffstab_build_psymtabs()\cell dbxread.c\cell\row
\cell do_cleanups()\cell utils.c\cell\row
\cell dwarf2_build_frame_info()\cell dwarf2-frame.c\cell\row
\cell dwarf2_build_psymtabs()\cell dwarf2read.c\cell\row
\cell dwarf2_has_info()\cell dwarf2read.c\cell\row
\cell error()\cell utils.c\cell\row
\cell init_lineno()\cell coffread.c\cell\row
\cell init_minimal_symbol_collection()\cell minsyms.c\cell\row
\cell init_psymbol_list()\cell symfile.c\cell\row
\cell init_stringtab()\cell coffread.c\cell\row
\cell install_minimal_symbols()\cell minsyms.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell make_cleanup_discard_minimal_symbols()\cell minsyms.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  bfd_map_over_sections(), bfd_seek(), strncmp()\cell\cell\row
Used in:\cell coffread.c\cell\cell\row
Refs Func:\cell coff_locate_sections()\cell coffread.c\cell\row
\cell find_linenos()\cell coffread.c\cell\row
\cell free_current_contents()\cell utils.c\cell\row
\cell free_linetab_cleanup()\cell coffread.c\cell\row
\cell free_stringtab_cleanup()\cell coffread.c\cell\row
Refs Var:\cell local_auxesz\cell coffread.c\cell\row
\cell local_linesz\cell coffread.c\cell\row
\cell local_n_btmask\cell coffread.c\cell\row
\cell local_n_btshft\cell coffread.c\cell\row
\cell local_n_tmask\cell coffread.c\cell\row
\cell local_n_tshift\cell coffread.c\cell\row
\cell local_symesz\cell coffread.c\cell\row
\cell pe_file\cell coffread.c\cell\row
\cell symfile_bfd\cell coffread.c\cell\row
\cell temp_aux\cell coffread.c\cell\row
\cell temp_sym\cell coffread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function coff_symtab_read()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void coff_symtab_read ( long symtab_offset, unsigned int nsyms, struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell coffread.c\cell\cell\row
Calls: \cell coff_end_symtab()\cell coffread.c\cell\row
\cell coff_getfilename()\cell coffread.c\cell\row
\cell coff_start_symtab()\cell coffread.c\cell\row
\cell complaint()\cell complaints.c\cell\row
\cell complete_symtab()\cell coffread.c\cell\row
\cell cs_to_section()\cell coffread.c\cell\row
\cell enter_linenos()\cell coffread.c\cell\row
\cell error()\cell utils.c\cell\row
\cell executable_objfile()\cell objfiles.c\cell\row
\cell finish_block()\cell buildsym.c\cell\row
\cell gdbarch_coff_make_msymbol_special()\cell gdbarch.c\cell\row
\cell gdbarch_smash_text_address()\cell gdbarch.c\cell\row
\cell getsymname()\cell coffread.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell objfile_section_offset()\cell objfiles.c\cell\row
\cell objfile_text_section_offset()\cell objfiles.c\cell\row
\cell patch_opaque_types()\cell coffread.c\cell\row
\cell perror_with_name()\cell utils.c\cell\row
\cell pop_context()\cell buildsym.c\cell\row
\cell prim_record_minimal_symbol_and_info()\cell minsyms.c\cell\row
\cell process_coff_symbol()\cell coffread.c\cell\row
\cell push_context()\cell buildsym.c\cell\row
\cell quit()\cell utils.c\cell\row
\cell read_one_sym()\cell coffread.c\cell\row
\cell read_pe_exported_syms()\cell coff-pe-read.c\cell\row
\cell record_line()\cell buildsym.c\cell\row
\cell record_minimal_symbol()\cell coffread.c\cell\row
\cell symtab_get_first()\cell objfiles.c\cell\row
\cell symtab_get_next()\cell objfiles.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk(), bfd_seek(), strcmp(), strncmp()\cell\cell\row
Called by:\cell coff_symfile_read()\cell coffread.c\cell\row
Refs Var:\cell context_stack_depth\cell buildsym.c\cell\row
\cell current_gdbarch\cell gdbarch.c\cell\row
\cell current_objfile\cell objfiles.c\cell\row
\cell current_subfile\cell buildsym.c\cell\row
\cell current_target\cell target/target.c\cell\row
\cell last_source_file\cell buildsym.c\cell\row
\cell local_n_btmask\cell coffread.c\cell\row
\cell local_n_btshft\cell coffread.c\cell\row
\cell local_n_tmask\cell coffread.c\cell\row
\cell local_symbols\cell buildsym.c\cell\row
\cell nlist_bfd_global\cell coffread.c\cell\row
\cell nlist_nsyms_global\cell coffread.c\cell\row
\cell opaque_type_chain\cell coffread.c\cell\row
\cell pe_file\cell coffread.c\cell\row
\cell quit_flag\cell utils.c\cell\row
\cell symfile_complaints\cell complaints.c\cell\row
\cell symnum\cell buildsym.c\cell\row
\cell type_vector\cell buildsym.c\cell\row
\cell type_vector_length\cell buildsym.c\cell\row
\cell within_function\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function complete_symtab()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void complete_symtab ( const char* name, CORE_ADDR start_addr, unsigned int size )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell savestring()\cell utils.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell  strlen()\cell\cell\row
Called by:\cell coff_symtab_read()\cell coffread.c\cell\row
Refs Var:\cell current_source_end_addr\cell coffread.c\cell\row
\cell current_source_start_addr\cell coffread.c\cell\row
\cell last_source_file\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function cs_section_address()\par}
{\s5\f1\fs20\ql\sb50\sa50 static CORE_ADDR cs_section_address ( struct coff_symbol* cs, bfd* abfd )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell coffread.c\cell\cell\row
Calls: \cell  bfd_map_over_sections()\cell\cell\row
Called by:\cell read_one_sym()\cell coffread.c\cell\row
Refs Func:\cell find_targ_sec()\cell coffread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function cs_to_section()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int cs_to_section ( struct coff_symbol* cs, struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell coffread.c\cell\cell\row
Calls: \cell executable_objfile()\cell objfiles.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell  bfd_map_over_sections()\cell\cell\row
Called by:\cell coff_symtab_read()\cell coffread.c\cell\row
\cell process_coff_symbol()\cell coffread.c\cell\row
Refs Func:\cell find_targ_sec()\cell coffread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function decode_base_type()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct type* decode_base_type ( struct coff_symbol* cs, unsigned int c_type, union internal_auxent* aux )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell coffread.c\cell\cell\row
Calls: \cell coff_alloc_type()\cell coffread.c\cell\row
\cell coff_read_enum_type()\cell coffread.c\cell\row
\cell coff_read_struct_type()\cell coffread.c\cell\row
\cell complaint()\cell complaints.c\cell\row
\cell gdbarch_long_bit()\cell gdbarch.c\cell\row
\cell lookup_fundamental_type()\cell gdbtypes.c\cell\row
Called by:\cell decode_type()\cell coffread.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\cell current_objfile\cell objfiles.c\cell\row
\cell symfile_complaints\cell complaints.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function decode_function_type()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct type* decode_function_type ( struct coff_symbol* cs, unsigned int c_type, union internal_auxent* aux )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell coffread.c\cell\cell\row
Calls: \cell decode_type()\cell coffread.c\cell\row
Called by:\cell process_coff_symbol()\cell coffread.c\cell\row
Refs Var:\cell local_n_btmask\cell coffread.c\cell\row
\cell local_n_tshift\cell coffread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function decode_type()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct type* decode_type ( struct coff_symbol* cs, unsigned int c_type, union internal_auxent* aux )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell coffread.c\cell\cell\row
Calls: \cell coff_alloc_type()\cell coffread.c\cell\row
\cell complaint()\cell complaints.c\cell\row
\cell create_array_type()\cell gdbtypes.c\cell\row
\cell create_range_type()\cell gdbtypes.c\cell\row
\cell decode_base_type()\cell coffread.c\cell\row
\cell decode_type()\cell coffread.c\cell\row
\cell lookup_function_type()\cell gdbtypes.c\cell\row
\cell lookup_fundamental_type()\cell gdbtypes.c\cell\row
\cell lookup_pointer_type()\cell gdbtypes.c\cell\row
Called by:\cell coff_read_struct_type()\cell coffread.c\cell\row
\cell decode_function_type()\cell coffread.c\cell\row
\cell decode_type()\cell coffread.c\cell\row
\cell process_coff_symbol()\cell coffread.c\cell\row
Refs Var:\cell current_objfile\cell objfiles.c\cell\row
\cell local_n_btmask\cell coffread.c\cell\row
\cell local_n_btshft\cell coffread.c\cell\row
\cell local_n_tmask\cell coffread.c\cell\row
\cell local_n_tshift\cell coffread.c\cell\row
\cell symfile_complaints\cell complaints.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function enter_linenos()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void enter_linenos ( long file_offset, int first_line, int last_line, struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell coffread.c\cell\cell\row
Calls: \cell complaint()\cell complaints.c\cell\row
\cell objfile_text_section_offset()\cell objfiles.c\cell\row
\cell record_line()\cell buildsym.c\cell\row
Called by:\cell coff_symtab_read()\cell coffread.c\cell\row
Refs Var:\cell current_subfile\cell buildsym.c\cell\row
\cell linetab\cell coffread.c\cell\row
\cell linetab_offset\cell coffread.c\cell\row
\cell linetab_size\cell coffread.c\cell\row
\cell local_linesz\cell coffread.c\cell\row
\cell symfile_bfd\cell coffread.c\cell\row
\cell symfile_complaints\cell complaints.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function find_linenos()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void find_linenos ( bfd* abfd, struct bfd_section* asect, void* vpinfo )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell coff_symfile_read()\cell coffread.c\cell\row
Refs Var:\cell local_linesz\cell coffread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function find_targ_sec()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void find_targ_sec ( bfd* abfd, asection* sect, void* obj )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell cs_section_address()\cell coffread.c\cell\row
\cell cs_to_section()\cell coffread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function free_linetab()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void free_linetab ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell coffread.c\cell\cell\row
Calls: \cell xfree()\cell utils.c\cell\row
Called by:\cell free_linetab_cleanup()\cell coffread.c\cell\row
\cell init_lineno()\cell coffread.c\cell\row
Refs Var:\cell linetab\cell coffread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function free_linetab_cleanup()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void free_linetab_cleanup ( void* ignore )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell coffread.c\cell\cell\row
Calls: \cell free_linetab()\cell coffread.c\cell\row
Used in:\cell coff_symfile_read()\cell coffread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function free_stringtab()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void free_stringtab ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell coffread.c\cell\cell\row
Calls: \cell xfree()\cell utils.c\cell\row
Called by:\cell free_stringtab_cleanup()\cell coffread.c\cell\row
\cell init_stringtab()\cell coffread.c\cell\row
Refs Var:\cell stringtab\cell coffread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function free_stringtab_cleanup()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void free_stringtab_cleanup ( void* ignore )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell coffread.c\cell\cell\row
Calls: \cell free_stringtab()\cell coffread.c\cell\row
Used in:\cell coff_symfile_read()\cell coffread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function getsymname()\par}
{\s5\f1\fs20\ql\sb50\sa50 static char* getsymname ( struct internal_syment* symbol_entry )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell coffread.c\cell\cell\row
Calls: \cell  __builtin___strncpy_chk(), __builtin_object_size(), __inline_strncpy_chk()\cell\cell\row
Called by:\cell coff_symtab_read()\cell coffread.c\cell\row
\cell read_one_sym()\cell coffread.c\cell\row
Refs Var:\cell stringtab\cell coffread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function init_lineno()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int init_lineno ( bfd* abfd, long offset, int size )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell coffread.c\cell\cell\row
Calls: \cell free_linetab()\cell coffread.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk(), bfd_bread(), bfd_seek()\cell\cell\row
Called by:\cell coff_symfile_read()\cell coffread.c\cell\row
Refs Var:\cell linetab\cell coffread.c\cell\row
\cell linetab_offset\cell coffread.c\cell\row
\cell linetab_size\cell coffread.c\cell\row
\cell local_linesz\cell coffread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function init_stringtab()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int init_stringtab ( bfd* abfd, long offset )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell coffread.c\cell\cell\row
Calls: \cell free_stringtab()\cell coffread.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  __builtin___memcpy_chk(), __builtin_object_size(), __inline_memcpy_chk(), bfd_bread(), bfd_seek()\cell\cell\row
Called by:\cell coff_symfile_read()\cell coffread.c\cell\row
Refs Var:\cell stringtab\cell coffread.c\cell\row
\cell symfile_bfd\cell coffread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function patch_opaque_types()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void patch_opaque_types ( struct symtab* s )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell coffread.c\cell\cell\row
Calls: \cell dict_iterator_first()\cell dictionary.c\cell\row
\cell dict_iterator_next()\cell dictionary.c\cell\row
\cell hashname()\cell buildsym.c\cell\row
\cell objc_fixup_class_length()\cell objc-lang.c\cell\row
\cell patch_type()\cell coffread.c\cell\row
\cell  strcmp()\cell\cell\row
Called by:\cell coff_symtab_read()\cell coffread.c\cell\row
Refs Var:\cell opaque_type_chain\cell coffread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function patch_type()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void patch_type ( struct type* type, struct type* real_type )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell objc_fixup_class_length()\cell objc-lang.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  __builtin___memcpy_chk(), __builtin_object_size(), __inline_memcpy_chk(), _obstack_newchunk(), concat()\cell\cell\row
Called by:\cell patch_opaque_types()\cell coffread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function process_coff_symbol()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct symbol* process_coff_symbol ( struct coff_symbol* cs, union internal_auxent* aux, struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell coffread.c\cell\cell\row
Calls: \cell add_symbol_to_list()\cell buildsym.c\cell\row
\cell cs_to_section()\cell coffread.c\cell\row
\cell decode_function_type()\cell coffread.c\cell\row
\cell decode_type()\cell coffread.c\cell\row
\cell gdbarch_byte_order()\cell gdbarch.c\cell\row
\cell gdbarch_sdb_reg_to_regnum()\cell gdbarch.c\cell\row
\cell hashname()\cell buildsym.c\cell\row
\cell lookup_function_type()\cell gdbtypes.c\cell\row
\cell lookup_fundamental_type()\cell gdbtypes.c\cell\row
\cell objc_fixup_class_length()\cell objc-lang.c\cell\row
\cell objfile_text_section_offset()\cell objfiles.c\cell\row
\cell symbol_set_names()\cell symtab.c\cell\row
\cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk(), _obstack_newchunk(), concat(), strlen()\cell\cell\row
Called by:\cell coff_symtab_read()\cell coffread.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\cell current_objfile\cell objfiles.c\cell\row
\cell file_symbols\cell buildsym.c\cell\row
\cell global_symbols\cell buildsym.c\cell\row
\cell local_n_btshft\cell coffread.c\cell\row
\cell local_n_tmask\cell coffread.c\cell\row
\cell local_symbols\cell buildsym.c\cell\row
\cell opaque_type_chain\cell coffread.c\cell\row
\cell within_function\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function read_one_sym()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void read_one_sym ( struct coff_symbol* cs, struct internal_syment* sym, union internal_auxent* aux )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell coffread.c\cell\cell\row
Calls: \cell cs_section_address()\cell coffread.c\cell\row
\cell getsymname()\cell coffread.c\cell\row
\cell  bfd_bread()\cell\cell\row
Called by:\cell coff_read_enum_type()\cell coffread.c\cell\row
\cell coff_read_struct_type()\cell coffread.c\cell\row
\cell coff_symtab_read()\cell coffread.c\cell\row
Refs Var:\cell local_auxesz\cell coffread.c\cell\row
\cell local_n_btmask\cell coffread.c\cell\row
\cell local_n_tmask\cell coffread.c\cell\row
\cell local_symesz\cell coffread.c\cell\row
\cell nlist_bfd_global\cell coffread.c\cell\row
\cell pe_file\cell coffread.c\cell\row
\cell symfile_bfd\cell coffread.c\cell\row
\cell symnum\cell buildsym.c\cell\row
\cell temp_aux\cell coffread.c\cell\row
\cell temp_sym\cell coffread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function record_minimal_symbol()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void record_minimal_symbol ( char* name, CORE_ADDR address, enum minimal_symbol_type type, struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell prim_record_minimal_symbol()\cell minsyms.c\cell\row
Called by:\cell coff_symtab_read()\cell coffread.c\cell\row
\intbl0
}
