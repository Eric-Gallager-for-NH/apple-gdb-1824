<!DOCTYPE LINUXDOC SYSTEM>

<!-- This SGML file generated by cxref (version 1.6e). -->
<!-- cxref program (c) Andrew M. Bishop 1995-2014. -->

<!--
Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF maint.c
CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
-->

<article>

<title>Cross reference for maint.c of gdb.cxref.
<author>cxref

<sect>File maint.c

<sect1>Included Files

<p>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<itemize>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
<item><tt>#include &lt;sys/time.h&gt;</tt>
<item><tt>#include &lt;time.h&gt;</tt>
<item><tt>#include &lt;sys/types.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
<item><tt>#include &lt;errno.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
<item><tt>#include &lt;regex.h&gt;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;unistd.h&gt;</tt>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;gdb_locale.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<item><tt>#include &lt;locale.h&gt;</tt>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../gdb/signals.h&quot;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &quot;../include/libiberty.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/symcat.h&quot;</tt>
</itemize>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
<item><tt>#include &quot;ui-file.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;xm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/xm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &lt;mach/mach.h&gt;</tt>
<item><tt>#include &lt;signal.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;nm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/i386/nm-i386.h&quot;</tt>
<item><tt>#include &quot;macosx/nm-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;tm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/tm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;macosx/i386-macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/i386-macosx-thread-status.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &lt;mach/mach_types.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
<item><tt>#include &lt;inttypes.h&gt;</tt>
<item><tt>#include &lt;mach/mach_vm.h&gt;</tt>
<item><tt>#include &lt;mach/kmod.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;macosx/tm-i386-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;../include/fopen-bin.h&quot;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdlib.h&gt;</tt>
<item><tt>#include &quot;gdbarch.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &lt;ctype.h&gt;</tt>
</itemize>
<itemize>
<item><tt>#include &lt;signal.h&gt;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;command.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;gdbcmd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;command.h&quot;</tt>
<item><tt>#include &quot;ui-out.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdbtypes.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;../include/demangle.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/libiberty.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;gdbcore.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;expression.h&quot;</tt>
<itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/floatformat.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;language.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;maint.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;symfile.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;symtab.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;objfiles.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &lt;uuid/uuid.h&gt;</tt>
<item><tt>#include &quot;gdb_obstack.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/obstack.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;symfile.h&quot;</tt>
<item><tt>#include &quot;inlining.h&quot;</tt>
<itemize>
<item><tt>#include &lt;block.h&gt;</tt>
<item><tt>#include &quot;frame.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
<item><tt>#include &quot;gdb_regex.h&quot;</tt>
<itemize>
<item><tt>#include &lt;regex.h&gt;</tt>
</itemize>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;gdbtypes.h&quot;</tt>
<item><tt>#include &quot;expression.h&quot;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
</itemize>
<item><tt>#include &lt;sqlite3.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;value.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;cli/cli-decode.h&quot;</tt>
<itemize>
<item><tt>#include &quot;command.h&quot;</tt>
<item><tt>#include &lt;regex.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;objc-lang.h&quot;</tt>
<itemize>
<item><tt>#include &lt;Availability.h&gt;</tt>
</itemize>
</itemize>

<sect1>Type struct gdb_timer

<p>
<itemize>
<item><tt>struct gdb_timer</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>char* name;</tt><newline>
<item><tt>int running;</tt><newline>
<item><tt>char* last_mssg;</tt><newline>
<item><tt>long last_start;</tt><newline>
<item><tt>long total_time;</tt><newline>
<item><tt>long last_interval;</tt><newline>
<item><tt>long child_times;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Type struct gdb_timer_stack

<p>
<itemize>
<item><tt>struct gdb_timer_stack</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>struct gdb_timer* timer;</tt><newline>
<item><tt>struct gdb_timer_stack* next;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Global Variable watchdog

<p>
<tt>int watchdog</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bcache.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>charset.c
<item>cli-out.c
<item>coff-pe-read.c
<item>coffread.c
<item>complaints.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>demangle.c
<item>dictionary.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>environ.c
<item>eval.c
<item>event-loop.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>interps.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod-cisco.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macrocmd.c
<item>macroexp.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>observer.c
<item>osabi.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>reggroups.c
<item>remote-fileio.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>ser-base.c
<item>ser-unix.c
<item>serial.c
<item>solib-null.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>ui-file.c
<item>ui-out.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_maint_cmds()  :  maint.c
<item>getpkt_sane()  :  remote.c
</itemize>
</descrip>

<sect1>Global Variable maint_use_timers

<p>
<tt>int maint_use_timers</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bcache.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>charset.c
<item>cli-out.c
<item>coff-pe-read.c
<item>coffread.c
<item>complaints.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>demangle.c
<item>dictionary.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>environ.c
<item>eval.c
<item>event-loop.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>interps.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod-cisco.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macrocmd.c
<item>macroexp.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>observer.c
<item>osabi.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>reggroups.c
<item>remote-fileio.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>ser-base.c
<item>ser-unix.c
<item>serial.c
<item>solib-null.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>ui-file.c
<item>ui-out.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>dbx_symfile_read()  :  dbxread.c
<item>do_end_debugger_mode()  :  objc-lang.c
<item>dwarf2_scan_inlined_section_for_psymbols()  :  dwarf2read.c
<item>dwarf2_scan_pubtype_for_psymbols()  :  dwarf2read.c
<item>find_timer()  :  maint.c
<item>maintenance_interval_display()  :  maint.c
<item>make_cleanup_set_restore_debugger_mode()  :  objc-lang.c
</itemize>
</descrip>

<sect1>Global Variable maintenance_set_cmdlist

<p>
<tt>struct cmd_list_element* maintenance_set_cmdlist</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-lang.c
<item>ada-typeprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>blockframe.c
<item>breakpoint.c
<item>charset.c
<item>complaints.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>demangle.c
<item>dummy-frame.c
<item>dwarf2read.c
<item>event-top.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>infcall.c
<item>infcmd.c
<item>infrun.c
<item>interps.c
<item>kod.c
<item>language.c
<item>macrocmd.c
<item>maint.c
<item>memattr.c
<item>objc-lang.c
<item>objfiles.c
<item>observer.c
<item>osabi.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>reggroups.c
<item>remote-fileio.c
<item>remote.c
<item>serial.c
<item>solib.c
<item>source.c
<item>stack.c
<item>symfile-mem.c
<item>symfile.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>typeprint.c
<item>utils.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_dwarf2_read()  :  dwarf2read.c
<item>_initialize_maint_cmds()  :  maint.c
<item>maintenance_set_cmd()  :  maint.c
</itemize>
</descrip>

<sect1>Global Variable maintenance_show_cmdlist

<p>
<tt>struct cmd_list_element* maintenance_show_cmdlist</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-lang.c
<item>ada-typeprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>blockframe.c
<item>breakpoint.c
<item>charset.c
<item>complaints.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>demangle.c
<item>dummy-frame.c
<item>dwarf2read.c
<item>event-top.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>infcall.c
<item>infcmd.c
<item>infrun.c
<item>interps.c
<item>kod.c
<item>language.c
<item>macrocmd.c
<item>maint.c
<item>memattr.c
<item>objc-lang.c
<item>objfiles.c
<item>observer.c
<item>osabi.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>reggroups.c
<item>remote-fileio.c
<item>remote.c
<item>serial.c
<item>solib.c
<item>source.c
<item>stack.c
<item>symfile-mem.c
<item>symfile.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>typeprint.c
<item>utils.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_dwarf2_read()  :  dwarf2read.c
<item>_initialize_maint_cmds()  :  maint.c
<item>maintenance_show_cmd()  :  maint.c
</itemize>
</descrip>

<sect1>External Variables

<p>
<bf>display_time</bf><newline>
<tt>extern int display_time</tt><newline>
<descrip>
<tag>Defined in:</tag>
<itemize>
<item>display_time</itemize>
</descrip>
<p>
<bf>display_space</bf><newline>
<tt>extern int display_space</tt><newline>
<descrip>
<tag>Defined in:</tag>
<itemize>
<item>display_space</itemize>
</descrip>

<sect1>Local Variables

<p>
<bf>maintenance_profile_p</bf><newline>
<tt>static int maintenance_profile_p</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>_initialize_maint_cmds()
</itemize>
</descrip>
<p>
<bf>timer_list</bf><newline>
<tt>static struct gdb_timer* timer_list</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>find_timer()
<item>init_timer()
<item>maintenance_report_interval_command()
<item>make_cleanup_start_report_timer()
</itemize>
</descrip>
<p>
<bf>timer_stack</bf><newline>
<tt>static struct gdb_timer_stack* timer_stack</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>pop_timer()
<item>push_timer()
<item>stop_report_timer()
</itemize>
</descrip>
<p>
<bf>active_timer_list</bf><newline>
<tt>static char* active_timer_list</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>find_timer()
<item>maintenance_interval_display()
</itemize>
</descrip>
<p>
<bf>max_timers</bf><newline>
<tt>static int max_timers</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>init_timer()
</itemize>
</descrip>
<p>
<bf>n_timers</bf><newline>
<tt>static int n_timers</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>find_timer()
<item>init_timer()
<item>maintenance_report_interval_command()
<item>make_cleanup_start_report_timer()
</itemize>
</descrip>

<sect1>Global Function _initialize_maint_cmds()

<p><tt>void _initialize_maint_cmds ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>maint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>add_alias_cmd(), add_cmd(), add_com_alias(), add_prefix_cmd(), add_setshow_boolean_cmd(), add_setshow_zinteger_cmd()
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>maintenance_check_symtabs()  :  symmisc.c
<item>maintenance_command()  :  maint.c
<item>maintenance_demangle()  :  maint.c
<item>maintenance_deprecate()  :  maint.c
<item>maintenance_dump_me()  :  maint.c
<item>maintenance_info_command()  :  maint.c
<item>maintenance_info_psymtabs()  :  symmisc.c
<item>maintenance_info_sections()  :  maint.c
<item>maintenance_info_symtabs()  :  symmisc.c
<item>maintenance_internal_error()  :  maint.c
<item>maintenance_internal_warning()  :  maint.c
<item>maintenance_interval_display()  :  maint.c
<item>maintenance_print_architecture()  :  maint.c
<item>maintenance_print_command()  :  maint.c
<item>maintenance_print_msymbols()  :  symmisc.c
<item>maintenance_print_objfiles()  :  symmisc.c
<item>maintenance_print_psymbols()  :  symmisc.c
<item>maintenance_print_statistics()  :  maint.c
<item>maintenance_print_symbols()  :  symmisc.c
<item>maintenance_print_type()  :  typeprint.c
<item>maintenance_report_interval_command()  :  maint.c
<item>maintenance_set_cmd()  :  maint.c
<item>maintenance_set_profile_cmd()  :  maint.c
<item>maintenance_show_cmd()  :  maint.c
<item>maintenance_space_display()  :  maint.c
<item>maintenance_time_display()  :  maint.c
<item>maintenance_translate_address()  :  maint.c
<item>maintenance_undeprecate()  :  maint.c
<item>show_maintenance_profile_p()  :  maint.c
<item>show_watchdog()  :  maint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>maintenance_profile_p  :  maint.c
<item>maintenance_set_cmdlist  :  maint.c
<item>maintenance_show_cmdlist  :  maint.c
<item>watchdog  :  maint.c
<item>cmdlist, maintenanceinfolist, maintenancelist, maintenanceprintlist, setlist, showlist
</itemize>
</descrip>

<sect1>Global Function find_timer()

<p><tt>int find_timer ( const char* name )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>maint.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>init_timer()  :  maint.c
<item>strcmp(), strstr()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>start_timer()  :  maint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>active_timer_list  :  maint.c
<item>maint_use_timers  :  maint.c
<item>n_timers  :  maint.c
<item>timer_list  :  maint.c
</itemize>
</descrip>

<sect1>Global Function maintenance_print_statistics()

<p><tt>void maintenance_print_statistics ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>print_objfile_statistics()  :  symmisc.c
<item>print_symbol_bcache_statistics()  :  symmisc.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_maint_cmds()  :  maint.c
</itemize>
</descrip>

<sect1>Global Function pop_timer()

<p><tt>void pop_timer ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>maint.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xfree()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>stop_report_timer()  :  maint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>timer_stack  :  maint.c
</itemize>
</descrip>

<sect1>Global Function start_timer()

<p><tt>struct cleanup* start_timer ( int* timer_var, const char* timer_name, const char* this_mssg )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>find_timer()  :  maint.c
<item>make_cleanup()  :  utils.c
<item>make_cleanup_start_report_timer()  :  maint.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>dbx_symfile_read()  :  dbxread.c
<item>do_end_debugger_mode()  :  objc-lang.c
<item>dwarf2_scan_inlined_section_for_psymbols()  :  dwarf2read.c
<item>dwarf2_scan_pubtype_for_psymbols()  :  dwarf2read.c
<item>hand_function_call()  :  infcall.c
<item>make_cleanup_set_restore_debugger_mode()  :  objc-lang.c
<item>psymtab_to_symtab()  :  symfile.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>null_cleanup()  :  utils.c
</itemize>
</descrip>

<sect1>Local Function init_timer()

<p><tt>static int init_timer ( const char* name )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>xrealloc()  :  utils.c
<item>__builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk(), xstrdup()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>find_timer()  :  maint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>max_timers  :  maint.c
<item>n_timers  :  maint.c
<item>timer_list  :  maint.c
</itemize>
</descrip>

<sect1>Local Function maint_print_section_info()

<p><tt>static void maint_print_section_info ( const char* name, flagword flags, CORE_ADDR addr, CORE_ADDR endaddr, unsigned long filepos )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>hex_string_custom()  :  utils.c
<item>paddr()  :  utils.c
<item>print_bfd_flags()  :  maint.c
<item>printf_filtered()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>print_bfd_section_info()  :  maint.c
<item>print_objfile_section_info()  :  maint.c
</itemize>
</descrip>

<sect1>Local Function maintenance_command()

<p><tt>static void maintenance_command ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>maint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>printf_unfiltered()  :  utils.c
<item>help_list()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_maint_cmds()  :  maint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdout  :  main.c
<item>maintenancelist
</itemize>
</descrip>

<sect1>Local Function maintenance_demangle()

<p><tt>static void maintenance_demangle ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>maint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>objc_demangle()  :  objc-lang.c
<item>objcplus_demangle()  :  objc-lang.c
<item>printf_unfiltered()  :  utils.c
<item>xfree()  :  utils.c
<item>cplus_demangle()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_maint_cmds()  :  maint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_language  :  language.c
</itemize>
</descrip>

<sect1>Local Function maintenance_deprecate()

<p><tt>static void maintenance_deprecate ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>maintenance_do_deprecate()  :  maint.c
<item>printf_unfiltered()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_maint_cmds()  :  maint.c
</itemize>
</descrip>

<sect1>Local Function maintenance_do_deprecate()

<p><tt>static void maintenance_do_deprecate ( const char* text, int deprecate )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>maint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>printf_filtered()  :  utils.c
<item>xfree()  :  utils.c
<item>lookup_cmd_composition(), strchr(), strrchr(), xstrdup()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>maintenance_deprecate()  :  maint.c
<item>maintenance_undeprecate()  :  maint.c
</itemize>
</descrip>

<sect1>Local Function maintenance_dump_me()

<p><tt>static void maintenance_dump_me ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>maint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>query()  :  utils.c
<item>getpid(), kill(), signal()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_maint_cmds()  :  maint.c
</itemize>
</descrip>

<sect1>Local Function maintenance_info_command()

<p><tt>static void maintenance_info_command ( const char* arg, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>maint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>printf_unfiltered()  :  utils.c
<item>help_list()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_maint_cmds()  :  maint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdout  :  main.c
<item>maintenanceinfolist
</itemize>
</descrip>

<sect1>Local Function maintenance_info_sections()

<p><tt>static void maintenance_info_sections ( const char* arg, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>maint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>match_substring()  :  maint.c
<item>objfile_get_first()  :  objfiles.c
<item>objfile_get_next()  :  objfiles.c
<item>print_objfile_section_info()  :  maint.c
<item>printf_filtered()  :  utils.c
<item>wrap_here()  :  utils.c
<item>bfd_map_over_sections(), strcmp()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_maint_cmds()  :  maint.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>print_bfd_section_info()  :  maint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>core_bfd  :  corefile.c
<item>exec_bfd
</itemize>
</descrip>

<sect1>Local Function maintenance_internal_error()

<p><tt>static void maintenance_internal_error ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>maint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_maint_cmds()  :  maint.c
</itemize>
</descrip>

<sect1>Local Function maintenance_internal_warning()

<p><tt>static void maintenance_internal_warning ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>internal_warning()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_maint_cmds()  :  maint.c
</itemize>
</descrip>

<sect1>Local Function maintenance_interval_display()

<p><tt>static void maintenance_interval_display ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>printf_unfiltered()  :  utils.c
<item>xfree()  :  utils.c
<item>strcmp(), xstrdup()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_maint_cmds()  :  maint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>active_timer_list  :  maint.c
<item>maint_use_timers  :  maint.c
</itemize>
</descrip>

<sect1>Local Function maintenance_print_architecture()

<p><tt>static void maintenance_print_architecture ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>gdb_fopen()  :  ui-file.c
<item>gdbarch_dump()  :  gdbarch.c
<item>perror_with_name()  :  utils.c
<item>ui_file_delete()  :  ui-file.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_maint_cmds()  :  maint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
<item>gdb_stdout  :  main.c
</itemize>
</descrip>

<sect1>Local Function maintenance_print_command()

<p><tt>static void maintenance_print_command ( const char* arg, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>maint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>printf_unfiltered()  :  utils.c
<item>help_list()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_maint_cmds()  :  maint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdout  :  main.c
<item>maintenanceprintlist
</itemize>
</descrip>

<sect1>Local Function maintenance_report_interval_command()

<p><tt>static void maintenance_report_interval_command ( const char* args, int is_tty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>report_timer_internal()  :  maint.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_maint_cmds()  :  maint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>n_timers  :  maint.c
<item>timer_list  :  maint.c
</itemize>
</descrip>

<sect1>Local Function maintenance_set_cmd()

<p><tt>static void maintenance_set_cmd ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>printf_unfiltered()  :  utils.c
<item>help_list()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_maint_cmds()  :  maint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdout  :  main.c
<item>maintenance_set_cmdlist  :  maint.c
</itemize>
</descrip>

<sect1>Local Function maintenance_set_profile_cmd()

<p><tt>static void maintenance_set_profile_cmd ( const char* args, int from_tty, struct cmd_list_element* c )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_maint_cmds()  :  maint.c
</itemize>
</descrip>

<sect1>Local Function maintenance_show_cmd()

<p><tt>static void maintenance_show_cmd ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>cmd_show_list()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_maint_cmds()  :  maint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>maintenance_show_cmdlist  :  maint.c
</itemize>
</descrip>

<sect1>Local Function maintenance_space_display()

<p><tt>static void maintenance_space_display ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>maint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>printf_unfiltered()  :  utils.c
<item>strtol()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_maint_cmds()  :  maint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>display_space  :  main.c
</itemize>
</descrip>

<sect1>Local Function maintenance_time_display()

<p><tt>static void maintenance_time_display ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>maint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>printf_unfiltered()  :  utils.c
<item>strtol()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_maint_cmds()  :  maint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>display_time  :  main.c
</itemize>
</descrip>

<sect1>Local Function maintenance_translate_address()

<p><tt>static void maintenance_translate_address ( const char* arg, int from_tty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>lookup_minimal_symbol_by_pc()  :  minsyms.c
<item>lookup_minimal_symbol_by_pc_section()  :  minsyms.c
<item>objfile_get_first()  :  objfiles.c
<item>objfile_get_next()  :  objfiles.c
<item>paddr()  :  utils.c
<item>paddr_u()  :  utils.c
<item>parse_and_eval_address()  :  eval.c
<item>printf_filtered()  :  utils.c
<item>symbol_natural_name()  :  symtab.c
<item>bfd_get_section_by_name(), isdigit(), isspace()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_maint_cmds()  :  maint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>demangle  :  utils.c
</itemize>
</descrip>

<sect1>Local Function maintenance_undeprecate()

<p><tt>static void maintenance_undeprecate ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>maintenance_do_deprecate()  :  maint.c
<item>printf_unfiltered()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_maint_cmds()  :  maint.c
</itemize>
</descrip>

<sect1>Local Function make_cleanup_start_report_timer()

<p><tt>static struct cleanup* make_cleanup_start_report_timer ( int timer_id, const char* string )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>make_cleanup()  :  utils.c
<item>push_timer()  :  maint.c
<item>get_run_time(), xstrdup()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>start_timer()  :  maint.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>null_cleanup()  :  utils.c
<item>stop_report_timer()  :  maint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>n_timers  :  maint.c
<item>timer_list  :  maint.c
</itemize>
</descrip>

<sect1>Local Function match_bfd_flags()

<p><tt>static int match_bfd_flags ( const char* string, flagword flags )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>match_substring()  :  maint.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>print_bfd_section_info()  :  maint.c
<item>print_objfile_section_info()  :  maint.c
</itemize>
</descrip>

<sect1>Local Function match_substring()

<p><tt>static int match_substring ( const char* string, const char* substr )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>strlen(), strstr()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>maintenance_info_sections()  :  maint.c
<item>match_bfd_flags()  :  maint.c
<item>print_bfd_section_info()  :  maint.c
<item>print_objfile_section_info()  :  maint.c
</itemize>
</descrip>

<sect1>Local Function print_bfd_flags()

<p><tt>static void print_bfd_flags ( flagword flags )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>printf_filtered()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>maint_print_section_info()  :  maint.c
</itemize>
</descrip>

<sect1>Local Function print_bfd_section_info()

<p><tt>static void print_bfd_section_info ( bfd* abfd, asection* asect, void* arg )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>maint_print_section_info()  :  maint.c
<item>match_bfd_flags()  :  maint.c
<item>match_substring()  :  maint.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>maintenance_info_sections()  :  maint.c
</itemize>
</descrip>

<sect1>Local Function print_objfile_section_info()

<p><tt>static void print_objfile_section_info ( bfd* abfd, struct obj_section* asect, const char* string )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>maint_print_section_info()  :  maint.c
<item>match_bfd_flags()  :  maint.c
<item>match_substring()  :  maint.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>maintenance_info_sections()  :  maint.c
</itemize>
</descrip>

<sect1>Local Function push_timer()

<p><tt>static void push_timer ( struct gdb_timer* timer )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>xmalloc()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>make_cleanup_start_report_timer()  :  maint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>timer_stack  :  maint.c
</itemize>
</descrip>

<sect1>Local Function report_timer_internal()

<p><tt>static void report_timer_internal ( struct gdb_timer* timer, int last_interval_p )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>do_cleanups()  :  utils.c
<item>make_cleanup_ui_out_notify_begin_end()  :  ui-out.c
<item>ui_out_field_fmt()  :  ui-out.c
<item>ui_out_field_string()  :  ui-out.c
<item>ui_out_text()  :  ui-out.c
<item>xfree()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>maintenance_report_interval_command()  :  maint.c
<item>stop_report_timer()  :  maint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>uiout  :  ui-out.c
</itemize>
</descrip>

<sect1>Local Function show_maintenance_profile_p()

<p><tt>static void show_maintenance_profile_p ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>fprintf_filtered()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_maint_cmds()  :  maint.c
</itemize>
</descrip>

<sect1>Local Function show_watchdog()

<p><tt>static void show_watchdog ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>fprintf_filtered()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_maint_cmds()  :  maint.c
</itemize>
</descrip>

<sect1>Local Function stop_report_timer()

<p><tt>static void stop_report_timer ( void* ptr )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
<item>pop_timer()  :  maint.c
<item>report_timer_internal()  :  maint.c
<item>stop_timer()  :  maint.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>make_cleanup_start_report_timer()  :  maint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>timer_stack  :  maint.c
</itemize>
</descrip>

<sect1>Local Function stop_timer()

<p><tt>static void stop_timer ( struct gdb_timer* timer )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>get_run_time()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>stop_report_timer()  :  maint.c
</itemize>
</descrip>

</article>
