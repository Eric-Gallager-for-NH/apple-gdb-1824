# -*- coding: utf-8; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- vim:fenc=utf-8:et:sw=2:ts=2:sts=2

name: cooljeanius/apple-gdb-1824-macos
on:
  push:
    branches:
    - "**/*"
  pull_request:
jobs:
  test:
    runs-on: macos-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - run: brew update
    - run: brew install autogen objc-codegenutils objc-run objconv texi2html texinfo flex aarch64-elf-binutils arm-linux-gnueabihf-binutils arm-none-eabi-binutils binutils i686-elf-binutils riscv64-elf-binutils x86_64-elf-binutils x86_64-linux-gnu-binutils pax deja-gnu expect guile jimtcl osxutils dmalloc fastjar gdb gettext gperf help2man ant-contrib findutils grep coreutils remake bison byacc
    - run: test -e ./.profile_generic && source ./.profile_generic
    - run: ./configure --enable-silent-rules
    - run: make -ki -C libcheckpoint || make -ki -C libcheckpoint -f Makefile_orig || make -ki -C macsbug || make -ki -C macsbug/gdb_plugin_support || (if test -x "$(which ant)"; then ant; fi)
    - run: cd src && ./configure --disable-werror --disable-opts-test --enable-carbon-framework --enable-debug-symbols-framework --enable-64-bit-bfd --enable-silent-rules
    - run: cd src && make configure-bfd
    - run: cd src && make -C bfd headers
    - run: cd src && if test ! -e bfd/bfd.h; then make -C bfd bfd.h; else stat bfd/bfd.h; fi
    - run: cd src && make -C bfd diststuff
    - run: cd src && make all-bfd
    - run: cd src && make all-opcodes
    - run: cd src && make configure-binutils
    - name: Backup that annoying arparse.h header
      run: |
        cd src/binutils
        make arparse.h
        if test ! -e arparse.h; then \
          make my_arparse.h; \
        fi
        if test ! -f arparse.h; then \
          remake arparse.c; \
        fi
        # shellcheck disable=SC2046
        if test ! -e arparse.h; then \
          /bin/sh ./../ylwrap arparse.y y.tab.c arparse.c y.tab.h "$(echo arparse.c | sed -e s/cc$/hh/ -e s/cpp$/hpp/ -e s/cxx$/hxx/ -e s/c++$/h++/ -e s/c$/h/)" y.output arparse.output -- $(if [ -f ../bison/bison ]; then echo ../bison/bison -y -L./../bison/; else echo bison -o y.tab.c; fi) -d -t -v -k -Wall -Wyacc; \
        fi
        if test -e arparse.h; then \
          if test ! -e ../bfd/arparse.h; then \
            cp -v arparse.h ../bfd; \
          elif test ! -e ../include/arparse.h; then \
            cp -v arparse.h ../include; \
          fi; \
        else \
          ls ./*.h || ls || pwd; \
        fi
    - run: cd src && make
    - run: cd src && make check
    - run: pwd
      if: "${{ success() }}"
    - run: find . -name config.log -print0 | xargs cat | grep -i error | sort | uniq
      if: "${{ failure() }}"
    strategy:
      fail-fast: false
      matrix:
        compiler:
        - clang
        - gcc
