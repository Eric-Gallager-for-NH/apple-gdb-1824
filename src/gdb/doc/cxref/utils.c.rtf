{\rtf\ansi
\deff0
{\fonttbl
{\f0\froman Times New Roman;}
{\f1\fmodern Courier New;}
}
{\stylesheet
{\s0\f0\fs24 Normal;}
{\s1\f0\fs40\b\sb400\sa200\keepn\keep Heading 1;}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Heading 2;}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Heading 3;}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Heading 4;}
{\s5\f1\fs20\ql\sb50\sa50 Code;}
}
{\info{\comment
 This RTF file generated by cxref (version 1.6e).
 cxref program (c) Andrew M. Bishop 1995-2014.
 Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF utils.c
 CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
}}
\paperw11880\paperh16848\margl1440\margr1440\margt1440\margb1440
\sectd\plain
\s0\f0\fs24
{\s1\f0\fs40\b\sb400\sa200\keepn\keep File utils.c\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Included Files\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <errno.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <unistd.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_locale.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <locale.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../gdb/signals.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/symcat.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-file.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "xm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/xm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "nm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/i386/nm-i386.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/nm-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "tm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/tm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-tdep.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-tdep.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-thread-status.h"\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_types.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <inttypes.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_vm.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/kmod.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/tm-i386-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/fopen-bin.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdlib.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbarch.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_assert.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <ctype.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_string.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "event-top.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "exceptions.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-out.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <setjmp.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <execinfo.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <sys/resource.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <uuid/uuid.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/xm-macosx.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdbcmd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "command.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-out.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "serial.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "target.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "dcache.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "memattr.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/floatformat.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_regex.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "gdbtypes.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "expression.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../include/demangle.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "expression.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "language.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "charset.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "annotate.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbtypes.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../include/filenames.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/hashtab.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "symfile.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "inferior.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "breakpoint.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "gdb-events.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "target.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <sys/param.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_curses.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <ncurses.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <term.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "ui-out.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "cli-out.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../readline/readline.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../readline/rlstdc.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../readline/rltypedefs.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../readline/keymaps.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../readline/tilde.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/mach-o.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <mach-o/loader.h>\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Preprocessor definitions\par}
{\s5\f1\fs20\ql\sb50\sa50 #define NO_POISON 1\par}
{\s5\f1\fs20\ql\sb50\sa50 #define NUMCELLS 16\par}
{\s5\f1\fs20\ql\sb50\sa50 #define CELLSIZE 50\par}
{\s5\f1\fs20\ql\sb50\sa50 #define USE_REALPATH\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Type definitions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct internal_problem\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct internal_problem}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 const char* name;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 enum auto_boolean should_quit;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 enum auto_boolean should_dump_core;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Variables\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable quit_flag\par}
{\s5\f1\fs20\ql\sb50\sa50 int quit_flag\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell ada-exp.c\cell\cell\row
\cell ada-lang.c\cell\cell\row
\cell ada-typeprint.c\cell\cell\row
\cell ada-valprint.c\cell\cell\row
\cell arch-utils.c\cell\cell\row
\cell ax-gdb.c\cell\cell\row
\cell ax-general.c\cell\cell\row
\cell bcache.c\cell\cell\row
\cell bfd-target.c\cell\cell\row
\cell block.c\cell\cell\row
\cell blockframe.c\cell\cell\row
\cell breakpoint.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell c-exp.c\cell\cell\row
\cell c-lang.c\cell\cell\row
\cell c-typeprint.c\cell\cell\row
\cell c-valprint.c\cell\cell\row
\cell charset.c\cell\cell\row
\cell cli-out.c\cell\cell\row
\cell coff-pe-read.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell complaints.c\cell\cell\row
\cell completer.c\cell\cell\row
\cell corefile.c\cell\cell\row
\cell cp-abi.c\cell\cell\row
\cell cp-namespace.c\cell\cell\row
\cell cp-support.c\cell\cell\row
\cell cp-valprint.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell demangle.c\cell\cell\row
\cell dictionary.c\cell\cell\row
\cell disasm.c\cell\cell\row
\cell doublest.c\cell\cell\row
\cell dummy-frame.c\cell\cell\row
\cell dwarf2-frame.c\cell\cell\row
\cell dwarf2expr.c\cell\cell\row
\cell dwarf2loc.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell environ.c\cell\cell\row
\cell eval.c\cell\cell\row
\cell event-loop.c\cell\cell\row
\cell event-top.c\cell\cell\row
\cell expprint.c\cell\cell\row
\cell f-exp.c\cell\cell\row
\cell f-lang.c\cell\cell\row
\cell f-typeprint.c\cell\cell\row
\cell f-valprint.c\cell\cell\row
\cell findvar.c\cell\cell\row
\cell frame-base.c\cell\cell\row
\cell frame-unwind.c\cell\cell\row
\cell frame.c\cell\cell\row
\cell gdbarch.c\cell\cell\row
\cell gdbtypes.c\cell\cell\row
\cell gnu-v2-abi.c\cell\cell\row
\cell gnu-v3-abi.c\cell\cell\row
\cell hpacc-abi.c\cell\cell\row
\cell inf-loop.c\cell\cell\row
\cell infcall.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell inflow.c\cell\cell\row
\cell infrun.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell interps.c\cell\cell\row
\cell jv-exp.c\cell\cell\row
\cell jv-lang.c\cell\cell\row
\cell jv-typeprint.c\cell\cell\row
\cell jv-valprint.c\cell\cell\row
\cell kod-cisco.c\cell\cell\row
\cell kod.c\cell\cell\row
\cell language.c\cell\cell\row
\cell linespec.c\cell\cell\row
\cell m2-exp.c\cell\cell\row
\cell m2-lang.c\cell\cell\row
\cell m2-typeprint.c\cell\cell\row
\cell m2-valprint.c\cell\cell\row
\cell macrocmd.c\cell\cell\row
\cell macroexp.c\cell\cell\row
\cell macroscope.c\cell\cell\row
\cell macrotab.c\cell\cell\row
\cell main.c\cell\cell\row
\cell maint.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell mem-break.c\cell\cell\row
\cell memattr.c\cell\cell\row
\cell minsyms.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objc-exp.c\cell\cell\row
\cell objc-lang.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell observer.c\cell\cell\row
\cell osabi.c\cell\cell\row
\cell p-exp.c\cell\cell\row
\cell p-lang.c\cell\cell\row
\cell p-typeprint.c\cell\cell\row
\cell p-valprint.c\cell\cell\row
\cell parse.c\cell\cell\row
\cell printcmd.c\cell\cell\row
\cell regcache.c\cell\cell\row
\cell reggroups.c\cell\cell\row
\cell remote-fileio.c\cell\cell\row
\cell remote.c\cell\cell\row
\cell scm-exp.c\cell\cell\row
\cell scm-lang.c\cell\cell\row
\cell scm-valprint.c\cell\cell\row
\cell sentinel-frame.c\cell\cell\row
\cell ser-base.c\cell\cell\row
\cell ser-unix.c\cell\cell\row
\cell serial.c\cell\cell\row
\cell solib-null.c\cell\cell\row
\cell solib.c\cell\cell\row
\cell source.c\cell\cell\row
\cell stabsread.c\cell\cell\row
\cell stack.c\cell\cell\row
\cell std-regs.c\cell\cell\row
\cell symfile-mem.c\cell\cell\row
\cell symfile.c\cell\cell\row
\cell symmisc.c\cell\cell\row
\cell symtab.c\cell\cell\row
\cell target/target.c\cell\cell\row
\cell target/x86-shared-tdep.c\cell\cell\row
\cell thread.c\cell\cell\row
\cell top.c\cell\cell\row
\cell tracepoint.c\cell\cell\row
\cell trad-frame.c\cell\cell\row
\cell tramp-frame.c\cell\cell\row
\cell typeprint.c\cell\cell\row
\cell ui-file.c\cell\cell\row
\cell ui-out.c\cell\cell\row
\cell user-regs.c\cell\cell\row
\cell utils.c\cell\cell\row
\cell valarith.c\cell\cell\row
\cell valops.c\cell\cell\row
\cell valprint.c\cell\cell\row
\cell value.c\cell\cell\row
\cell varobj.c\cell\cell\row
\cell wrapper.c\cell\cell\row
Used in:\cell ada_lookup_symbol_list()\cell ada-lang.c\cell\row
\cell ada_val_print_1()\cell ada-valprint.c\cell\row
\cell add_local_symbols()\cell tracepoint.c\cell\row
\cell async_request_quit()\cell event-top.c\cell\row
\cell backtrace_command_1()\cell stack.c\cell\row
\cell c_printstr()\cell c-lang.c\cell\row
\cell c_type_print_base()\cell c-typeprint.c\cell\row
\cell c_type_print_varspec_prefix()\cell c-typeprint.c\cell\row
\cell c_type_print_varspec_suffix()\cell c-typeprint.c\cell\row
\cell c_val_print()\cell c-valprint.c\cell\row
\cell captured_main()\cell main.c\cell\row
\cell classes_info()\cell objc-lang.c\cell\row
\cell coff_symtab_read()\cell coffread.c\cell\row
\cell command_handler()\cell event-top.c\cell\row
\cell command_loop()\cell top.c\cell\row
\cell cp_print_class_member()\cell cp-valprint.c\cell\row
\cell decode_line_2()\cell linespec.c\cell\row
\cell do_examine()\cell printcmd.c\cell\row
\cell dump_insns()\cell disasm.c\cell\row
\cell encode_actions()\cell tracepoint.c\cell\row
\cell f_printstr()\cell f-lang.c\cell\row
\cell f_type_print_base()\cell f-typeprint.c\cell\row
\cell f_type_print_varspec_prefix()\cell f-typeprint.c\cell\row
\cell f_type_print_varspec_suffix()\cell f-typeprint.c\cell\row
\cell find_methods()\cell objc-lang.c\cell\row
\cell getpkt_sane()\cell remote.c\cell\row
\cell handle_sigint()\cell event-top.c\cell\row
\cell java_type_print_base()\cell jv-typeprint.c\cell\row
\cell load_progress()\cell symfile.c\cell\row
\cell m2_printstr()\cell m2-lang.c\cell\row
\cell make_symbol_completion_list()\cell symtab.c\cell\row
\cell make_symbol_overload_list_qualified()\cell cp-support.c\cell\row
\cell map_args_over_tracepoints()\cell tracepoint.c\cell\row
\cell objc_printstr()\cell objc-lang.c\cell\row
\cell pascal_object_print_class_member()\cell p-valprint.c\cell\row
\cell pascal_printstr()\cell p-lang.c\cell\row
\cell pascal_type_print_base()\cell p-typeprint.c\cell\row
\cell pascal_type_print_varspec_prefix()\cell p-typeprint.c\cell\row
\cell pascal_type_print_varspec_suffix()\cell p-typeprint.c\cell\row
\cell pascal_val_print()\cell p-valprint.c\cell\row
\cell print_enum_type()\cell ada-typeprint.c\cell\row
\cell print_frame()\cell stack.c\cell\row
\cell print_frame_args()\cell stack.c\cell\row
\cell print_frame_nameless_args()\cell stack.c\cell\row
\cell print_object_command()\cell objc-lang.c\cell\row
\cell print_record_field_types()\cell ada-typeprint.c\cell\row
\cell printf_command()\cell printcmd.c\cell\row
\cell printstr()\cell ada-valprint.c\cell\row
\cell query()\cell utils.c\cell\row
\cell read_dbx_symtab()\cell dbxread.c\cell\row
\cell read_ofile_symtab()\cell dbxread.c\cell\row
\cell read_ofile_symtab_from_oso()\cell dbxread.c\cell\row
\cell remote_get_noisy_reply()\cell tracepoint.c\cell\row
\cell request_quit()\cell utils.c\cell\row
\cell resume()\cell infrun.c\cell\row
\cell scan_file_globals()\cell stabsread.c\cell\row
\cell scope_info()\cell tracepoint.c\cell\row
\cell search_symbols()\cell symtab.c\cell\row
\cell selectors_info()\cell objc-lang.c\cell\row
\cell signals_info()\cell infrun.c\cell\row
\cell simplified_command_loop()\cell top.c\cell\row
\cell stringify_collection_list()\cell tracepoint.c\cell\row
\cell symtab_symbol_info()\cell symtab.c\cell\row
\cell target_read()\cell target/target.c\cell\row
\cell target_write_with_progress()\cell target/target.c\cell\row
\cell trace_dump_command()\cell tracepoint.c\cell\row
\cell trace_start_command()\cell tracepoint.c\cell\row
\cell tracepoint_save_command()\cell tracepoint.c\cell\row
\cell val_print()\cell valprint.c\cell\row
\cell val_print_string()\cell valprint.c\cell\row
\cell validate_actionline()\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable immediate_quit\par}
{\s5\f1\fs20\ql\sb50\sa50 int immediate_quit\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell ada-exp.c\cell\cell\row
\cell ada-lang.c\cell\cell\row
\cell ada-typeprint.c\cell\cell\row
\cell ada-valprint.c\cell\cell\row
\cell arch-utils.c\cell\cell\row
\cell ax-gdb.c\cell\cell\row
\cell ax-general.c\cell\cell\row
\cell bcache.c\cell\cell\row
\cell bfd-target.c\cell\cell\row
\cell block.c\cell\cell\row
\cell blockframe.c\cell\cell\row
\cell breakpoint.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell c-exp.c\cell\cell\row
\cell c-lang.c\cell\cell\row
\cell c-typeprint.c\cell\cell\row
\cell c-valprint.c\cell\cell\row
\cell charset.c\cell\cell\row
\cell cli-out.c\cell\cell\row
\cell coff-pe-read.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell complaints.c\cell\cell\row
\cell completer.c\cell\cell\row
\cell corefile.c\cell\cell\row
\cell cp-abi.c\cell\cell\row
\cell cp-namespace.c\cell\cell\row
\cell cp-support.c\cell\cell\row
\cell cp-valprint.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell demangle.c\cell\cell\row
\cell dictionary.c\cell\cell\row
\cell disasm.c\cell\cell\row
\cell doublest.c\cell\cell\row
\cell dummy-frame.c\cell\cell\row
\cell dwarf2-frame.c\cell\cell\row
\cell dwarf2expr.c\cell\cell\row
\cell dwarf2loc.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell environ.c\cell\cell\row
\cell eval.c\cell\cell\row
\cell event-loop.c\cell\cell\row
\cell event-top.c\cell\cell\row
\cell expprint.c\cell\cell\row
\cell f-exp.c\cell\cell\row
\cell f-lang.c\cell\cell\row
\cell f-typeprint.c\cell\cell\row
\cell f-valprint.c\cell\cell\row
\cell findvar.c\cell\cell\row
\cell frame-base.c\cell\cell\row
\cell frame-unwind.c\cell\cell\row
\cell frame.c\cell\cell\row
\cell gdbarch.c\cell\cell\row
\cell gdbtypes.c\cell\cell\row
\cell gnu-v2-abi.c\cell\cell\row
\cell gnu-v3-abi.c\cell\cell\row
\cell hpacc-abi.c\cell\cell\row
\cell inf-loop.c\cell\cell\row
\cell infcall.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell inflow.c\cell\cell\row
\cell infrun.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell interps.c\cell\cell\row
\cell jv-exp.c\cell\cell\row
\cell jv-lang.c\cell\cell\row
\cell jv-typeprint.c\cell\cell\row
\cell jv-valprint.c\cell\cell\row
\cell kod-cisco.c\cell\cell\row
\cell kod.c\cell\cell\row
\cell language.c\cell\cell\row
\cell linespec.c\cell\cell\row
\cell m2-exp.c\cell\cell\row
\cell m2-lang.c\cell\cell\row
\cell m2-typeprint.c\cell\cell\row
\cell m2-valprint.c\cell\cell\row
\cell macrocmd.c\cell\cell\row
\cell macroexp.c\cell\cell\row
\cell macroscope.c\cell\cell\row
\cell macrotab.c\cell\cell\row
\cell main.c\cell\cell\row
\cell maint.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell mem-break.c\cell\cell\row
\cell memattr.c\cell\cell\row
\cell minsyms.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objc-exp.c\cell\cell\row
\cell objc-lang.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell observer.c\cell\cell\row
\cell osabi.c\cell\cell\row
\cell p-exp.c\cell\cell\row
\cell p-lang.c\cell\cell\row
\cell p-typeprint.c\cell\cell\row
\cell p-valprint.c\cell\cell\row
\cell parse.c\cell\cell\row
\cell printcmd.c\cell\cell\row
\cell regcache.c\cell\cell\row
\cell reggroups.c\cell\cell\row
\cell remote-fileio.c\cell\cell\row
\cell remote.c\cell\cell\row
\cell scm-exp.c\cell\cell\row
\cell scm-lang.c\cell\cell\row
\cell scm-valprint.c\cell\cell\row
\cell sentinel-frame.c\cell\cell\row
\cell ser-base.c\cell\cell\row
\cell ser-unix.c\cell\cell\row
\cell serial.c\cell\cell\row
\cell solib-null.c\cell\cell\row
\cell solib.c\cell\cell\row
\cell source.c\cell\cell\row
\cell stabsread.c\cell\cell\row
\cell stack.c\cell\cell\row
\cell std-regs.c\cell\cell\row
\cell symfile-mem.c\cell\cell\row
\cell symfile.c\cell\cell\row
\cell symmisc.c\cell\cell\row
\cell symtab.c\cell\cell\row
\cell target/target.c\cell\cell\row
\cell target/x86-shared-tdep.c\cell\cell\row
\cell thread.c\cell\cell\row
\cell top.c\cell\cell\row
\cell tracepoint.c\cell\cell\row
\cell trad-frame.c\cell\cell\row
\cell tramp-frame.c\cell\cell\row
\cell typeprint.c\cell\cell\row
\cell ui-file.c\cell\cell\row
\cell ui-out.c\cell\cell\row
\cell user-regs.c\cell\cell\row
\cell utils.c\cell\cell\row
\cell valarith.c\cell\cell\row
\cell valops.c\cell\cell\row
\cell valprint.c\cell\cell\row
\cell value.c\cell\cell\row
\cell varobj.c\cell\cell\row
\cell wrapper.c\cell\cell\row
Used in:\cell async_request_quit()\cell event-top.c\cell\row
\cell command_line_input()\cell top.c\cell\row
\cell handle_sigint()\cell event-top.c\cell\row
\cell maintenance_print_msymbols()\cell symmisc.c\cell\row
\cell maintenance_print_objfiles()\cell symmisc.c\cell\row
\cell maintenance_print_psymbols()\cell symmisc.c\cell\row
\cell maintenance_print_symbols()\cell symmisc.c\cell\row
\cell print_objfile_statistics()\cell symmisc.c\cell\row
\cell print_symbol_bcache_statistics()\cell symmisc.c\cell\row
\cell prompt_for_continue()\cell utils.c\cell\row
\cell read_actions()\cell tracepoint.c\cell\row
\cell remote_start_remote()\cell remote.c\cell\row
\cell request_quit()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable sevenbit_strings\par}
{\s5\f1\fs20\ql\sb50\sa50 int sevenbit_strings\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell ada-exp.c\cell\cell\row
\cell ada-lang.c\cell\cell\row
\cell ada-typeprint.c\cell\cell\row
\cell ada-valprint.c\cell\cell\row
\cell arch-utils.c\cell\cell\row
\cell ax-gdb.c\cell\cell\row
\cell ax-general.c\cell\cell\row
\cell bcache.c\cell\cell\row
\cell bfd-target.c\cell\cell\row
\cell block.c\cell\cell\row
\cell blockframe.c\cell\cell\row
\cell breakpoint.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell c-exp.c\cell\cell\row
\cell c-lang.c\cell\cell\row
\cell c-typeprint.c\cell\cell\row
\cell c-valprint.c\cell\cell\row
\cell charset.c\cell\cell\row
\cell cli-out.c\cell\cell\row
\cell coff-pe-read.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell complaints.c\cell\cell\row
\cell completer.c\cell\cell\row
\cell corefile.c\cell\cell\row
\cell cp-abi.c\cell\cell\row
\cell cp-namespace.c\cell\cell\row
\cell cp-support.c\cell\cell\row
\cell cp-valprint.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell demangle.c\cell\cell\row
\cell dictionary.c\cell\cell\row
\cell disasm.c\cell\cell\row
\cell doublest.c\cell\cell\row
\cell dummy-frame.c\cell\cell\row
\cell dwarf2-frame.c\cell\cell\row
\cell dwarf2expr.c\cell\cell\row
\cell dwarf2loc.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell environ.c\cell\cell\row
\cell eval.c\cell\cell\row
\cell event-loop.c\cell\cell\row
\cell event-top.c\cell\cell\row
\cell expprint.c\cell\cell\row
\cell f-exp.c\cell\cell\row
\cell f-lang.c\cell\cell\row
\cell f-typeprint.c\cell\cell\row
\cell f-valprint.c\cell\cell\row
\cell findvar.c\cell\cell\row
\cell frame-base.c\cell\cell\row
\cell frame-unwind.c\cell\cell\row
\cell frame.c\cell\cell\row
\cell gdbarch.c\cell\cell\row
\cell gdbtypes.c\cell\cell\row
\cell gnu-v2-abi.c\cell\cell\row
\cell gnu-v3-abi.c\cell\cell\row
\cell hpacc-abi.c\cell\cell\row
\cell inf-loop.c\cell\cell\row
\cell infcall.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell inflow.c\cell\cell\row
\cell infrun.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell interps.c\cell\cell\row
\cell jv-exp.c\cell\cell\row
\cell jv-lang.c\cell\cell\row
\cell jv-typeprint.c\cell\cell\row
\cell jv-valprint.c\cell\cell\row
\cell kod-cisco.c\cell\cell\row
\cell kod.c\cell\cell\row
\cell language.c\cell\cell\row
\cell linespec.c\cell\cell\row
\cell m2-exp.c\cell\cell\row
\cell m2-lang.c\cell\cell\row
\cell m2-typeprint.c\cell\cell\row
\cell m2-valprint.c\cell\cell\row
\cell macrocmd.c\cell\cell\row
\cell macroexp.c\cell\cell\row
\cell macroscope.c\cell\cell\row
\cell macrotab.c\cell\cell\row
\cell main.c\cell\cell\row
\cell maint.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell mem-break.c\cell\cell\row
\cell memattr.c\cell\cell\row
\cell minsyms.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objc-exp.c\cell\cell\row
\cell objc-lang.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell observer.c\cell\cell\row
\cell osabi.c\cell\cell\row
\cell p-exp.c\cell\cell\row
\cell p-lang.c\cell\cell\row
\cell p-typeprint.c\cell\cell\row
\cell p-valprint.c\cell\cell\row
\cell parse.c\cell\cell\row
\cell printcmd.c\cell\cell\row
\cell regcache.c\cell\cell\row
\cell reggroups.c\cell\cell\row
\cell remote-fileio.c\cell\cell\row
\cell remote.c\cell\cell\row
\cell scm-exp.c\cell\cell\row
\cell scm-lang.c\cell\cell\row
\cell scm-valprint.c\cell\cell\row
\cell sentinel-frame.c\cell\cell\row
\cell ser-base.c\cell\cell\row
\cell ser-unix.c\cell\cell\row
\cell serial.c\cell\cell\row
\cell solib-null.c\cell\cell\row
\cell solib.c\cell\cell\row
\cell source.c\cell\cell\row
\cell stabsread.c\cell\cell\row
\cell stack.c\cell\cell\row
\cell std-regs.c\cell\cell\row
\cell symfile-mem.c\cell\cell\row
\cell symfile.c\cell\cell\row
\cell symmisc.c\cell\cell\row
\cell symtab.c\cell\cell\row
\cell target/target.c\cell\cell\row
\cell target/x86-shared-tdep.c\cell\cell\row
\cell thread.c\cell\cell\row
\cell top.c\cell\cell\row
\cell tracepoint.c\cell\cell\row
\cell trad-frame.c\cell\cell\row
\cell tramp-frame.c\cell\cell\row
\cell typeprint.c\cell\cell\row
\cell ui-file.c\cell\cell\row
\cell ui-out.c\cell\cell\row
\cell user-regs.c\cell\cell\row
\cell utils.c\cell\cell\row
\cell valarith.c\cell\cell\row
\cell valops.c\cell\cell\row
\cell valprint.c\cell\cell\row
\cell value.c\cell\cell\row
\cell varobj.c\cell\cell\row
\cell wrapper.c\cell\cell\row
Used in:\cell f_emit_char()\cell f-lang.c\cell\row
\cell initialize_utils()\cell utils.c\cell\row
\cell iso_8859_print_literally()\cell charset.c\cell\row
\cell m2_emit_char()\cell m2-lang.c\cell\row
\cell objc_emit_char()\cell objc-lang.c\cell\row
\cell pascal_one_char()\cell p-lang.c\cell\row
\cell pascal_printstr()\cell p-lang.c\cell\row
\cell printchar()\cell utils.c\cell\row
\cell utf_8_print_literally()\cell charset.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable cmd_continuation\par}
{\s5\f1\fs20\ql\sb50\sa50 struct continuation* cmd_continuation\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell ada-exp.c\cell\cell\row
\cell ada-lang.c\cell\cell\row
\cell ada-typeprint.c\cell\cell\row
\cell ada-valprint.c\cell\cell\row
\cell arch-utils.c\cell\cell\row
\cell ax-gdb.c\cell\cell\row
\cell ax-general.c\cell\cell\row
\cell bcache.c\cell\cell\row
\cell bfd-target.c\cell\cell\row
\cell block.c\cell\cell\row
\cell blockframe.c\cell\cell\row
\cell breakpoint.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell c-exp.c\cell\cell\row
\cell c-lang.c\cell\cell\row
\cell c-typeprint.c\cell\cell\row
\cell c-valprint.c\cell\cell\row
\cell charset.c\cell\cell\row
\cell cli-out.c\cell\cell\row
\cell coff-pe-read.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell complaints.c\cell\cell\row
\cell completer.c\cell\cell\row
\cell corefile.c\cell\cell\row
\cell cp-abi.c\cell\cell\row
\cell cp-namespace.c\cell\cell\row
\cell cp-support.c\cell\cell\row
\cell cp-valprint.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell demangle.c\cell\cell\row
\cell dictionary.c\cell\cell\row
\cell disasm.c\cell\cell\row
\cell doublest.c\cell\cell\row
\cell dummy-frame.c\cell\cell\row
\cell dwarf2-frame.c\cell\cell\row
\cell dwarf2expr.c\cell\cell\row
\cell dwarf2loc.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell environ.c\cell\cell\row
\cell eval.c\cell\cell\row
\cell event-loop.c\cell\cell\row
\cell event-top.c\cell\cell\row
\cell expprint.c\cell\cell\row
\cell f-exp.c\cell\cell\row
\cell f-lang.c\cell\cell\row
\cell f-typeprint.c\cell\cell\row
\cell f-valprint.c\cell\cell\row
\cell findvar.c\cell\cell\row
\cell frame-base.c\cell\cell\row
\cell frame-unwind.c\cell\cell\row
\cell frame.c\cell\cell\row
\cell gdbarch.c\cell\cell\row
\cell gdbtypes.c\cell\cell\row
\cell gnu-v2-abi.c\cell\cell\row
\cell gnu-v3-abi.c\cell\cell\row
\cell hpacc-abi.c\cell\cell\row
\cell inf-loop.c\cell\cell\row
\cell infcall.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell inflow.c\cell\cell\row
\cell infrun.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell interps.c\cell\cell\row
\cell jv-exp.c\cell\cell\row
\cell jv-lang.c\cell\cell\row
\cell jv-typeprint.c\cell\cell\row
\cell jv-valprint.c\cell\cell\row
\cell kod-cisco.c\cell\cell\row
\cell kod.c\cell\cell\row
\cell language.c\cell\cell\row
\cell linespec.c\cell\cell\row
\cell m2-exp.c\cell\cell\row
\cell m2-lang.c\cell\cell\row
\cell m2-typeprint.c\cell\cell\row
\cell m2-valprint.c\cell\cell\row
\cell macrocmd.c\cell\cell\row
\cell macroexp.c\cell\cell\row
\cell macroscope.c\cell\cell\row
\cell macrotab.c\cell\cell\row
\cell main.c\cell\cell\row
\cell maint.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell mem-break.c\cell\cell\row
\cell memattr.c\cell\cell\row
\cell minsyms.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objc-exp.c\cell\cell\row
\cell objc-lang.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell observer.c\cell\cell\row
\cell osabi.c\cell\cell\row
\cell p-exp.c\cell\cell\row
\cell p-lang.c\cell\cell\row
\cell p-typeprint.c\cell\cell\row
\cell p-valprint.c\cell\cell\row
\cell parse.c\cell\cell\row
\cell printcmd.c\cell\cell\row
\cell regcache.c\cell\cell\row
\cell reggroups.c\cell\cell\row
\cell remote-fileio.c\cell\cell\row
\cell remote.c\cell\cell\row
\cell scm-exp.c\cell\cell\row
\cell scm-lang.c\cell\cell\row
\cell scm-valprint.c\cell\cell\row
\cell sentinel-frame.c\cell\cell\row
\cell ser-base.c\cell\cell\row
\cell ser-unix.c\cell\cell\row
\cell serial.c\cell\cell\row
\cell solib-null.c\cell\cell\row
\cell solib.c\cell\cell\row
\cell source.c\cell\cell\row
\cell stabsread.c\cell\cell\row
\cell stack.c\cell\cell\row
\cell std-regs.c\cell\cell\row
\cell symfile-mem.c\cell\cell\row
\cell symfile.c\cell\cell\row
\cell symmisc.c\cell\cell\row
\cell symtab.c\cell\cell\row
\cell target/target.c\cell\cell\row
\cell target/x86-shared-tdep.c\cell\cell\row
\cell thread.c\cell\cell\row
\cell top.c\cell\cell\row
\cell tracepoint.c\cell\cell\row
\cell trad-frame.c\cell\cell\row
\cell tramp-frame.c\cell\cell\row
\cell typeprint.c\cell\cell\row
\cell ui-file.c\cell\cell\row
\cell ui-out.c\cell\cell\row
\cell user-regs.c\cell\cell\row
\cell utils.c\cell\cell\row
\cell valarith.c\cell\cell\row
\cell valops.c\cell\cell\row
\cell valprint.c\cell\cell\row
\cell value.c\cell\cell\row
\cell varobj.c\cell\cell\row
\cell wrapper.c\cell\cell\row
Used in:\cell add_continuation()\cell utils.c\cell\row
\cell discard_all_continuations()\cell utils.c\cell\row
\cell do_all_continuations()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable intermediate_continuation\par}
{\s5\f1\fs20\ql\sb50\sa50 struct continuation* intermediate_continuation\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell ada-exp.c\cell\cell\row
\cell ada-lang.c\cell\cell\row
\cell ada-typeprint.c\cell\cell\row
\cell ada-valprint.c\cell\cell\row
\cell arch-utils.c\cell\cell\row
\cell ax-gdb.c\cell\cell\row
\cell ax-general.c\cell\cell\row
\cell bcache.c\cell\cell\row
\cell bfd-target.c\cell\cell\row
\cell block.c\cell\cell\row
\cell blockframe.c\cell\cell\row
\cell breakpoint.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell c-exp.c\cell\cell\row
\cell c-lang.c\cell\cell\row
\cell c-typeprint.c\cell\cell\row
\cell c-valprint.c\cell\cell\row
\cell charset.c\cell\cell\row
\cell cli-out.c\cell\cell\row
\cell coff-pe-read.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell complaints.c\cell\cell\row
\cell completer.c\cell\cell\row
\cell corefile.c\cell\cell\row
\cell cp-abi.c\cell\cell\row
\cell cp-namespace.c\cell\cell\row
\cell cp-support.c\cell\cell\row
\cell cp-valprint.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell demangle.c\cell\cell\row
\cell dictionary.c\cell\cell\row
\cell disasm.c\cell\cell\row
\cell doublest.c\cell\cell\row
\cell dummy-frame.c\cell\cell\row
\cell dwarf2-frame.c\cell\cell\row
\cell dwarf2expr.c\cell\cell\row
\cell dwarf2loc.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell environ.c\cell\cell\row
\cell eval.c\cell\cell\row
\cell event-loop.c\cell\cell\row
\cell event-top.c\cell\cell\row
\cell expprint.c\cell\cell\row
\cell f-exp.c\cell\cell\row
\cell f-lang.c\cell\cell\row
\cell f-typeprint.c\cell\cell\row
\cell f-valprint.c\cell\cell\row
\cell findvar.c\cell\cell\row
\cell frame-base.c\cell\cell\row
\cell frame-unwind.c\cell\cell\row
\cell frame.c\cell\cell\row
\cell gdbarch.c\cell\cell\row
\cell gdbtypes.c\cell\cell\row
\cell gnu-v2-abi.c\cell\cell\row
\cell gnu-v3-abi.c\cell\cell\row
\cell hpacc-abi.c\cell\cell\row
\cell inf-loop.c\cell\cell\row
\cell infcall.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell inflow.c\cell\cell\row
\cell infrun.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell interps.c\cell\cell\row
\cell jv-exp.c\cell\cell\row
\cell jv-lang.c\cell\cell\row
\cell jv-typeprint.c\cell\cell\row
\cell jv-valprint.c\cell\cell\row
\cell kod-cisco.c\cell\cell\row
\cell kod.c\cell\cell\row
\cell language.c\cell\cell\row
\cell linespec.c\cell\cell\row
\cell m2-exp.c\cell\cell\row
\cell m2-lang.c\cell\cell\row
\cell m2-typeprint.c\cell\cell\row
\cell m2-valprint.c\cell\cell\row
\cell macrocmd.c\cell\cell\row
\cell macroexp.c\cell\cell\row
\cell macroscope.c\cell\cell\row
\cell macrotab.c\cell\cell\row
\cell main.c\cell\cell\row
\cell maint.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell mem-break.c\cell\cell\row
\cell memattr.c\cell\cell\row
\cell minsyms.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objc-exp.c\cell\cell\row
\cell objc-lang.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell observer.c\cell\cell\row
\cell osabi.c\cell\cell\row
\cell p-exp.c\cell\cell\row
\cell p-lang.c\cell\cell\row
\cell p-typeprint.c\cell\cell\row
\cell p-valprint.c\cell\cell\row
\cell parse.c\cell\cell\row
\cell printcmd.c\cell\cell\row
\cell regcache.c\cell\cell\row
\cell reggroups.c\cell\cell\row
\cell remote-fileio.c\cell\cell\row
\cell remote.c\cell\cell\row
\cell scm-exp.c\cell\cell\row
\cell scm-lang.c\cell\cell\row
\cell scm-valprint.c\cell\cell\row
\cell sentinel-frame.c\cell\cell\row
\cell ser-base.c\cell\cell\row
\cell ser-unix.c\cell\cell\row
\cell serial.c\cell\cell\row
\cell solib-null.c\cell\cell\row
\cell solib.c\cell\cell\row
\cell source.c\cell\cell\row
\cell stabsread.c\cell\cell\row
\cell stack.c\cell\cell\row
\cell std-regs.c\cell\cell\row
\cell symfile-mem.c\cell\cell\row
\cell symfile.c\cell\cell\row
\cell symmisc.c\cell\cell\row
\cell symtab.c\cell\cell\row
\cell target/target.c\cell\cell\row
\cell target/x86-shared-tdep.c\cell\cell\row
\cell thread.c\cell\cell\row
\cell top.c\cell\cell\row
\cell tracepoint.c\cell\cell\row
\cell trad-frame.c\cell\cell\row
\cell tramp-frame.c\cell\cell\row
\cell typeprint.c\cell\cell\row
\cell ui-file.c\cell\cell\row
\cell ui-out.c\cell\cell\row
\cell user-regs.c\cell\cell\row
\cell utils.c\cell\cell\row
\cell valarith.c\cell\cell\row
\cell valops.c\cell\cell\row
\cell valprint.c\cell\cell\row
\cell value.c\cell\cell\row
\cell varobj.c\cell\cell\row
\cell wrapper.c\cell\cell\row
Used in:\cell add_intermediate_continuation()\cell utils.c\cell\row
\cell discard_all_intermediate_continuations()\cell utils.c\cell\row
\cell do_all_intermediate_continuations()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable demangle\par}
{\s5\f1\fs20\ql\sb50\sa50 int demangle\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell ada-exp.c\cell\cell\row
\cell ada-lang.c\cell\cell\row
\cell ada-typeprint.c\cell\cell\row
\cell ada-valprint.c\cell\cell\row
\cell arch-utils.c\cell\cell\row
\cell ax-gdb.c\cell\cell\row
\cell ax-general.c\cell\cell\row
\cell bcache.c\cell\cell\row
\cell bfd-target.c\cell\cell\row
\cell block.c\cell\cell\row
\cell blockframe.c\cell\cell\row
\cell breakpoint.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell c-exp.c\cell\cell\row
\cell c-lang.c\cell\cell\row
\cell c-typeprint.c\cell\cell\row
\cell c-valprint.c\cell\cell\row
\cell charset.c\cell\cell\row
\cell cli-out.c\cell\cell\row
\cell coff-pe-read.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell complaints.c\cell\cell\row
\cell completer.c\cell\cell\row
\cell corefile.c\cell\cell\row
\cell cp-abi.c\cell\cell\row
\cell cp-namespace.c\cell\cell\row
\cell cp-support.c\cell\cell\row
\cell cp-valprint.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell demangle.c\cell\cell\row
\cell dictionary.c\cell\cell\row
\cell disasm.c\cell\cell\row
\cell doublest.c\cell\cell\row
\cell dummy-frame.c\cell\cell\row
\cell dwarf2-frame.c\cell\cell\row
\cell dwarf2expr.c\cell\cell\row
\cell dwarf2loc.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell environ.c\cell\cell\row
\cell eval.c\cell\cell\row
\cell event-loop.c\cell\cell\row
\cell event-top.c\cell\cell\row
\cell expprint.c\cell\cell\row
\cell f-exp.c\cell\cell\row
\cell f-lang.c\cell\cell\row
\cell f-typeprint.c\cell\cell\row
\cell f-valprint.c\cell\cell\row
\cell findvar.c\cell\cell\row
\cell frame-base.c\cell\cell\row
\cell frame-unwind.c\cell\cell\row
\cell frame.c\cell\cell\row
\cell gdbarch.c\cell\cell\row
\cell gdbtypes.c\cell\cell\row
\cell gnu-v2-abi.c\cell\cell\row
\cell gnu-v3-abi.c\cell\cell\row
\cell hpacc-abi.c\cell\cell\row
\cell inf-loop.c\cell\cell\row
\cell infcall.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell inflow.c\cell\cell\row
\cell infrun.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell interps.c\cell\cell\row
\cell jv-exp.c\cell\cell\row
\cell jv-lang.c\cell\cell\row
\cell jv-typeprint.c\cell\cell\row
\cell jv-valprint.c\cell\cell\row
\cell kod-cisco.c\cell\cell\row
\cell kod.c\cell\cell\row
\cell language.c\cell\cell\row
\cell linespec.c\cell\cell\row
\cell m2-exp.c\cell\cell\row
\cell m2-lang.c\cell\cell\row
\cell m2-typeprint.c\cell\cell\row
\cell m2-valprint.c\cell\cell\row
\cell macrocmd.c\cell\cell\row
\cell macroexp.c\cell\cell\row
\cell macroscope.c\cell\cell\row
\cell macrotab.c\cell\cell\row
\cell main.c\cell\cell\row
\cell maint.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell mem-break.c\cell\cell\row
\cell memattr.c\cell\cell\row
\cell minsyms.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objc-exp.c\cell\cell\row
\cell objc-lang.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell observer.c\cell\cell\row
\cell osabi.c\cell\cell\row
\cell p-exp.c\cell\cell\row
\cell p-lang.c\cell\cell\row
\cell p-typeprint.c\cell\cell\row
\cell p-valprint.c\cell\cell\row
\cell parse.c\cell\cell\row
\cell printcmd.c\cell\cell\row
\cell regcache.c\cell\cell\row
\cell reggroups.c\cell\cell\row
\cell remote-fileio.c\cell\cell\row
\cell remote.c\cell\cell\row
\cell scm-exp.c\cell\cell\row
\cell scm-lang.c\cell\cell\row
\cell scm-valprint.c\cell\cell\row
\cell sentinel-frame.c\cell\cell\row
\cell ser-base.c\cell\cell\row
\cell ser-unix.c\cell\cell\row
\cell serial.c\cell\cell\row
\cell solib-null.c\cell\cell\row
\cell solib.c\cell\cell\row
\cell source.c\cell\cell\row
\cell stabsread.c\cell\cell\row
\cell stack.c\cell\cell\row
\cell std-regs.c\cell\cell\row
\cell symfile-mem.c\cell\cell\row
\cell symfile.c\cell\cell\row
\cell symmisc.c\cell\cell\row
\cell symtab.c\cell\cell\row
\cell target/target.c\cell\cell\row
\cell target/x86-shared-tdep.c\cell\cell\row
\cell thread.c\cell\cell\row
\cell top.c\cell\cell\row
\cell tracepoint.c\cell\cell\row
\cell trad-frame.c\cell\cell\row
\cell tramp-frame.c\cell\cell\row
\cell typeprint.c\cell\cell\row
\cell ui-file.c\cell\cell\row
\cell ui-out.c\cell\cell\row
\cell user-regs.c\cell\cell\row
\cell utils.c\cell\cell\row
\cell valarith.c\cell\cell\row
\cell valops.c\cell\cell\row
\cell valprint.c\cell\cell\row
\cell value.c\cell\cell\row
\cell varobj.c\cell\cell\row
\cell wrapper.c\cell\cell\row
Used in:\cell ada_evaluate_subexp()\cell ada-lang.c\cell\row
\cell ada_typedef_print()\cell ada-typeprint.c\cell\row
\cell break_command_2()\cell breakpoint.c\cell\row
\cell build_address_symbolic()\cell printcmd.c\cell\row
\cell c_val_print()\cell c-valprint.c\cell\row
\cell compare_classes()\cell objc-lang.c\cell\row
\cell compare_search_syms()\cell symtab.c\cell\row
\cell compare_selectors()\cell objc-lang.c\cell\row
\cell decode_line_2()\cell linespec.c\cell\row
\cell define_symbol()\cell stabsread.c\cell\row
\cell dwarf2_tracepoint_var_ref()\cell dwarf2loc.c\cell\row
\cell f_val_print()\cell f-valprint.c\cell\row
\cell find_function_start_sal()\cell symtab.c\cell\row
\cell find_method()\cell linespec.c\cell\row
\cell finish_block()\cell buildsym.c\cell\row
\cell fprintf_symbol_filtered()\cell utils.c\cell\row
\cell frame_info()\cell stack.c\cell\row
\cell gen_var_ref()\cell ax-gdb.c\cell\row
\cell hand_function_call()\cell infcall.c\cell\row
\cell initialize_utils()\cell utils.c\cell\row
\cell java_val_print()\cell jv-valprint.c\cell\row
\cell jump_command()\cell infcmd.c\cell\row
\cell locate_var_value()\cell findvar.c\cell\row
\cell maintenance_cplus_namespace()\cell cp-namespace.c\cell\row
\cell maintenance_translate_address()\cell maint.c\cell\row
\cell pascal_val_print()\cell p-valprint.c\cell\row
\cell print_block_frame_labels()\cell stack.c\cell\row
\cell print_block_frame_locals()\cell stack.c\cell\row
\cell print_frame()\cell stack.c\cell\row
\cell print_frame_arg_vars()\cell stack.c\cell\row
\cell print_frame_args()\cell stack.c\cell\row
\cell print_function_pointer_address()\cell c-valprint.c\cell\row
\cell print_msymbol_info()\cell symtab.c\cell\row
\cell print_one_breakpoint()\cell breakpoint.c\cell\row
\cell print_subexp_standard()\cell expprint.c\cell\row
\cell print_symbol()\cell symmisc.c\cell\row
\cell print_symbol_info()\cell symtab.c\cell\row
\cell rbreak_command()\cell symtab.c\cell\row
\cell resolve_subexp()\cell ada-lang.c\cell\row
\cell return_command()\cell stack.c\cell\row
\cell sym_info()\cell printcmd.c\cell\row
\cell tracepoints_info()\cell tracepoint.c\cell\row
\cell typedef_print()\cell typeprint.c\cell\row
\cell user_select_syms()\cell ada-lang.c\cell\row
\cell value_of_variable()\cell valops.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable asm_demangle\par}
{\s5\f1\fs20\ql\sb50\sa50 int asm_demangle\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell ada-exp.c\cell\cell\row
\cell ada-lang.c\cell\cell\row
\cell ada-typeprint.c\cell\cell\row
\cell ada-valprint.c\cell\cell\row
\cell arch-utils.c\cell\cell\row
\cell ax-gdb.c\cell\cell\row
\cell ax-general.c\cell\cell\row
\cell bcache.c\cell\cell\row
\cell bfd-target.c\cell\cell\row
\cell block.c\cell\cell\row
\cell blockframe.c\cell\cell\row
\cell breakpoint.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell c-exp.c\cell\cell\row
\cell c-lang.c\cell\cell\row
\cell c-typeprint.c\cell\cell\row
\cell c-valprint.c\cell\cell\row
\cell charset.c\cell\cell\row
\cell cli-out.c\cell\cell\row
\cell coff-pe-read.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell complaints.c\cell\cell\row
\cell completer.c\cell\cell\row
\cell corefile.c\cell\cell\row
\cell cp-abi.c\cell\cell\row
\cell cp-namespace.c\cell\cell\row
\cell cp-support.c\cell\cell\row
\cell cp-valprint.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell demangle.c\cell\cell\row
\cell dictionary.c\cell\cell\row
\cell disasm.c\cell\cell\row
\cell doublest.c\cell\cell\row
\cell dummy-frame.c\cell\cell\row
\cell dwarf2-frame.c\cell\cell\row
\cell dwarf2expr.c\cell\cell\row
\cell dwarf2loc.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell environ.c\cell\cell\row
\cell eval.c\cell\cell\row
\cell event-loop.c\cell\cell\row
\cell event-top.c\cell\cell\row
\cell expprint.c\cell\cell\row
\cell f-exp.c\cell\cell\row
\cell f-lang.c\cell\cell\row
\cell f-typeprint.c\cell\cell\row
\cell f-valprint.c\cell\cell\row
\cell findvar.c\cell\cell\row
\cell frame-base.c\cell\cell\row
\cell frame-unwind.c\cell\cell\row
\cell frame.c\cell\cell\row
\cell gdbarch.c\cell\cell\row
\cell gdbtypes.c\cell\cell\row
\cell gnu-v2-abi.c\cell\cell\row
\cell gnu-v3-abi.c\cell\cell\row
\cell hpacc-abi.c\cell\cell\row
\cell inf-loop.c\cell\cell\row
\cell infcall.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell inflow.c\cell\cell\row
\cell infrun.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell interps.c\cell\cell\row
\cell jv-exp.c\cell\cell\row
\cell jv-lang.c\cell\cell\row
\cell jv-typeprint.c\cell\cell\row
\cell jv-valprint.c\cell\cell\row
\cell kod-cisco.c\cell\cell\row
\cell kod.c\cell\cell\row
\cell language.c\cell\cell\row
\cell linespec.c\cell\cell\row
\cell m2-exp.c\cell\cell\row
\cell m2-lang.c\cell\cell\row
\cell m2-typeprint.c\cell\cell\row
\cell m2-valprint.c\cell\cell\row
\cell macrocmd.c\cell\cell\row
\cell macroexp.c\cell\cell\row
\cell macroscope.c\cell\cell\row
\cell macrotab.c\cell\cell\row
\cell main.c\cell\cell\row
\cell maint.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell mem-break.c\cell\cell\row
\cell memattr.c\cell\cell\row
\cell minsyms.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objc-exp.c\cell\cell\row
\cell objc-lang.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell observer.c\cell\cell\row
\cell osabi.c\cell\cell\row
\cell p-exp.c\cell\cell\row
\cell p-lang.c\cell\cell\row
\cell p-typeprint.c\cell\cell\row
\cell p-valprint.c\cell\cell\row
\cell parse.c\cell\cell\row
\cell printcmd.c\cell\cell\row
\cell regcache.c\cell\cell\row
\cell reggroups.c\cell\cell\row
\cell remote-fileio.c\cell\cell\row
\cell remote.c\cell\cell\row
\cell scm-exp.c\cell\cell\row
\cell scm-lang.c\cell\cell\row
\cell scm-valprint.c\cell\cell\row
\cell sentinel-frame.c\cell\cell\row
\cell ser-base.c\cell\cell\row
\cell ser-unix.c\cell\cell\row
\cell serial.c\cell\cell\row
\cell solib-null.c\cell\cell\row
\cell solib.c\cell\cell\row
\cell source.c\cell\cell\row
\cell stabsread.c\cell\cell\row
\cell stack.c\cell\cell\row
\cell std-regs.c\cell\cell\row
\cell symfile-mem.c\cell\cell\row
\cell symfile.c\cell\cell\row
\cell symmisc.c\cell\cell\row
\cell symtab.c\cell\cell\row
\cell target/target.c\cell\cell\row
\cell target/x86-shared-tdep.c\cell\cell\row
\cell thread.c\cell\cell\row
\cell top.c\cell\cell\row
\cell tracepoint.c\cell\cell\row
\cell trad-frame.c\cell\cell\row
\cell tramp-frame.c\cell\cell\row
\cell typeprint.c\cell\cell\row
\cell ui-file.c\cell\cell\row
\cell ui-out.c\cell\cell\row
\cell user-regs.c\cell\cell\row
\cell utils.c\cell\cell\row
\cell valarith.c\cell\cell\row
\cell valops.c\cell\cell\row
\cell valprint.c\cell\cell\row
\cell value.c\cell\cell\row
\cell varobj.c\cell\cell\row
\cell wrapper.c\cell\cell\row
Used in:\cell build_address_symbolic()\cell printcmd.c\cell\row
\cell initialize_utils()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable error_pre_print\par}
{\s5\f1\fs20\ql\sb50\sa50 const char* error_pre_print\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell ada-exp.c\cell\cell\row
\cell ada-lang.c\cell\cell\row
\cell ada-typeprint.c\cell\cell\row
\cell ada-valprint.c\cell\cell\row
\cell arch-utils.c\cell\cell\row
\cell ax-gdb.c\cell\cell\row
\cell ax-general.c\cell\cell\row
\cell bcache.c\cell\cell\row
\cell bfd-target.c\cell\cell\row
\cell block.c\cell\cell\row
\cell blockframe.c\cell\cell\row
\cell breakpoint.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell c-exp.c\cell\cell\row
\cell c-lang.c\cell\cell\row
\cell c-typeprint.c\cell\cell\row
\cell c-valprint.c\cell\cell\row
\cell charset.c\cell\cell\row
\cell cli-out.c\cell\cell\row
\cell coff-pe-read.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell complaints.c\cell\cell\row
\cell completer.c\cell\cell\row
\cell corefile.c\cell\cell\row
\cell cp-abi.c\cell\cell\row
\cell cp-namespace.c\cell\cell\row
\cell cp-support.c\cell\cell\row
\cell cp-valprint.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell demangle.c\cell\cell\row
\cell dictionary.c\cell\cell\row
\cell disasm.c\cell\cell\row
\cell doublest.c\cell\cell\row
\cell dummy-frame.c\cell\cell\row
\cell dwarf2-frame.c\cell\cell\row
\cell dwarf2expr.c\cell\cell\row
\cell dwarf2loc.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell environ.c\cell\cell\row
\cell eval.c\cell\cell\row
\cell event-loop.c\cell\cell\row
\cell event-top.c\cell\cell\row
\cell expprint.c\cell\cell\row
\cell f-exp.c\cell\cell\row
\cell f-lang.c\cell\cell\row
\cell f-typeprint.c\cell\cell\row
\cell f-valprint.c\cell\cell\row
\cell findvar.c\cell\cell\row
\cell frame-base.c\cell\cell\row
\cell frame-unwind.c\cell\cell\row
\cell frame.c\cell\cell\row
\cell gdbarch.c\cell\cell\row
\cell gdbtypes.c\cell\cell\row
\cell gnu-v2-abi.c\cell\cell\row
\cell gnu-v3-abi.c\cell\cell\row
\cell hpacc-abi.c\cell\cell\row
\cell inf-loop.c\cell\cell\row
\cell infcall.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell inflow.c\cell\cell\row
\cell infrun.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell interps.c\cell\cell\row
\cell jv-exp.c\cell\cell\row
\cell jv-lang.c\cell\cell\row
\cell jv-typeprint.c\cell\cell\row
\cell jv-valprint.c\cell\cell\row
\cell kod-cisco.c\cell\cell\row
\cell kod.c\cell\cell\row
\cell language.c\cell\cell\row
\cell linespec.c\cell\cell\row
\cell m2-exp.c\cell\cell\row
\cell m2-lang.c\cell\cell\row
\cell m2-typeprint.c\cell\cell\row
\cell m2-valprint.c\cell\cell\row
\cell macrocmd.c\cell\cell\row
\cell macroexp.c\cell\cell\row
\cell macroscope.c\cell\cell\row
\cell macrotab.c\cell\cell\row
\cell main.c\cell\cell\row
\cell maint.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell mem-break.c\cell\cell\row
\cell memattr.c\cell\cell\row
\cell minsyms.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objc-exp.c\cell\cell\row
\cell objc-lang.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell observer.c\cell\cell\row
\cell osabi.c\cell\cell\row
\cell p-exp.c\cell\cell\row
\cell p-lang.c\cell\cell\row
\cell p-typeprint.c\cell\cell\row
\cell p-valprint.c\cell\cell\row
\cell parse.c\cell\cell\row
\cell printcmd.c\cell\cell\row
\cell regcache.c\cell\cell\row
\cell reggroups.c\cell\cell\row
\cell remote-fileio.c\cell\cell\row
\cell remote.c\cell\cell\row
\cell scm-exp.c\cell\cell\row
\cell scm-lang.c\cell\cell\row
\cell scm-valprint.c\cell\cell\row
\cell sentinel-frame.c\cell\cell\row
\cell ser-base.c\cell\cell\row
\cell ser-unix.c\cell\cell\row
\cell serial.c\cell\cell\row
\cell solib-null.c\cell\cell\row
\cell solib.c\cell\cell\row
\cell source.c\cell\cell\row
\cell stabsread.c\cell\cell\row
\cell stack.c\cell\cell\row
\cell std-regs.c\cell\cell\row
\cell symfile-mem.c\cell\cell\row
\cell symfile.c\cell\cell\row
\cell symmisc.c\cell\cell\row
\cell symtab.c\cell\cell\row
\cell target/target.c\cell\cell\row
\cell target/x86-shared-tdep.c\cell\cell\row
\cell thread.c\cell\cell\row
\cell top.c\cell\cell\row
\cell tracepoint.c\cell\cell\row
\cell trad-frame.c\cell\cell\row
\cell tramp-frame.c\cell\cell\row
\cell typeprint.c\cell\cell\row
\cell ui-file.c\cell\cell\row
\cell ui-out.c\cell\cell\row
\cell user-regs.c\cell\cell\row
\cell utils.c\cell\cell\row
\cell valarith.c\cell\cell\row
\cell valops.c\cell\cell\row
\cell valprint.c\cell\cell\row
\cell value.c\cell\cell\row
\cell varobj.c\cell\cell\row
\cell wrapper.c\cell\cell\row
Used in:\cell captured_main()\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable quit_pre_print\par}
{\s5\f1\fs20\ql\sb50\sa50 const char* quit_pre_print\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell ada-exp.c\cell\cell\row
\cell ada-lang.c\cell\cell\row
\cell ada-typeprint.c\cell\cell\row
\cell ada-valprint.c\cell\cell\row
\cell arch-utils.c\cell\cell\row
\cell ax-gdb.c\cell\cell\row
\cell ax-general.c\cell\cell\row
\cell bcache.c\cell\cell\row
\cell bfd-target.c\cell\cell\row
\cell block.c\cell\cell\row
\cell blockframe.c\cell\cell\row
\cell breakpoint.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell c-exp.c\cell\cell\row
\cell c-lang.c\cell\cell\row
\cell c-typeprint.c\cell\cell\row
\cell c-valprint.c\cell\cell\row
\cell charset.c\cell\cell\row
\cell cli-out.c\cell\cell\row
\cell coff-pe-read.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell complaints.c\cell\cell\row
\cell completer.c\cell\cell\row
\cell corefile.c\cell\cell\row
\cell cp-abi.c\cell\cell\row
\cell cp-namespace.c\cell\cell\row
\cell cp-support.c\cell\cell\row
\cell cp-valprint.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell demangle.c\cell\cell\row
\cell dictionary.c\cell\cell\row
\cell disasm.c\cell\cell\row
\cell doublest.c\cell\cell\row
\cell dummy-frame.c\cell\cell\row
\cell dwarf2-frame.c\cell\cell\row
\cell dwarf2expr.c\cell\cell\row
\cell dwarf2loc.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell environ.c\cell\cell\row
\cell eval.c\cell\cell\row
\cell event-loop.c\cell\cell\row
\cell event-top.c\cell\cell\row
\cell expprint.c\cell\cell\row
\cell f-exp.c\cell\cell\row
\cell f-lang.c\cell\cell\row
\cell f-typeprint.c\cell\cell\row
\cell f-valprint.c\cell\cell\row
\cell findvar.c\cell\cell\row
\cell frame-base.c\cell\cell\row
\cell frame-unwind.c\cell\cell\row
\cell frame.c\cell\cell\row
\cell gdbarch.c\cell\cell\row
\cell gdbtypes.c\cell\cell\row
\cell gnu-v2-abi.c\cell\cell\row
\cell gnu-v3-abi.c\cell\cell\row
\cell hpacc-abi.c\cell\cell\row
\cell inf-loop.c\cell\cell\row
\cell infcall.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell inflow.c\cell\cell\row
\cell infrun.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell interps.c\cell\cell\row
\cell jv-exp.c\cell\cell\row
\cell jv-lang.c\cell\cell\row
\cell jv-typeprint.c\cell\cell\row
\cell jv-valprint.c\cell\cell\row
\cell kod-cisco.c\cell\cell\row
\cell kod.c\cell\cell\row
\cell language.c\cell\cell\row
\cell linespec.c\cell\cell\row
\cell m2-exp.c\cell\cell\row
\cell m2-lang.c\cell\cell\row
\cell m2-typeprint.c\cell\cell\row
\cell m2-valprint.c\cell\cell\row
\cell macrocmd.c\cell\cell\row
\cell macroexp.c\cell\cell\row
\cell macroscope.c\cell\cell\row
\cell macrotab.c\cell\cell\row
\cell main.c\cell\cell\row
\cell maint.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell mem-break.c\cell\cell\row
\cell memattr.c\cell\cell\row
\cell minsyms.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objc-exp.c\cell\cell\row
\cell objc-lang.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell observer.c\cell\cell\row
\cell osabi.c\cell\cell\row
\cell p-exp.c\cell\cell\row
\cell p-lang.c\cell\cell\row
\cell p-typeprint.c\cell\cell\row
\cell p-valprint.c\cell\cell\row
\cell parse.c\cell\cell\row
\cell printcmd.c\cell\cell\row
\cell regcache.c\cell\cell\row
\cell reggroups.c\cell\cell\row
\cell remote-fileio.c\cell\cell\row
\cell remote.c\cell\cell\row
\cell scm-exp.c\cell\cell\row
\cell scm-lang.c\cell\cell\row
\cell scm-valprint.c\cell\cell\row
\cell sentinel-frame.c\cell\cell\row
\cell ser-base.c\cell\cell\row
\cell ser-unix.c\cell\cell\row
\cell serial.c\cell\cell\row
\cell solib-null.c\cell\cell\row
\cell solib.c\cell\cell\row
\cell source.c\cell\cell\row
\cell stabsread.c\cell\cell\row
\cell stack.c\cell\cell\row
\cell std-regs.c\cell\cell\row
\cell symfile-mem.c\cell\cell\row
\cell symfile.c\cell\cell\row
\cell symmisc.c\cell\cell\row
\cell symtab.c\cell\cell\row
\cell target/target.c\cell\cell\row
\cell target/x86-shared-tdep.c\cell\cell\row
\cell thread.c\cell\cell\row
\cell top.c\cell\cell\row
\cell tracepoint.c\cell\cell\row
\cell trad-frame.c\cell\cell\row
\cell tramp-frame.c\cell\cell\row
\cell typeprint.c\cell\cell\row
\cell ui-file.c\cell\cell\row
\cell ui-out.c\cell\cell\row
\cell user-regs.c\cell\cell\row
\cell utils.c\cell\cell\row
\cell valarith.c\cell\cell\row
\cell valops.c\cell\cell\row
\cell valprint.c\cell\cell\row
\cell value.c\cell\cell\row
\cell varobj.c\cell\cell\row
\cell wrapper.c\cell\cell\row
Used in:\cell captured_main()\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable warning_pre_print\par}
{\s5\f1\fs20\ql\sb50\sa50 const char* warning_pre_print\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell ada-exp.c\cell\cell\row
\cell ada-lang.c\cell\cell\row
\cell ada-typeprint.c\cell\cell\row
\cell ada-valprint.c\cell\cell\row
\cell arch-utils.c\cell\cell\row
\cell ax-gdb.c\cell\cell\row
\cell ax-general.c\cell\cell\row
\cell bcache.c\cell\cell\row
\cell bfd-target.c\cell\cell\row
\cell block.c\cell\cell\row
\cell blockframe.c\cell\cell\row
\cell breakpoint.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell c-exp.c\cell\cell\row
\cell c-lang.c\cell\cell\row
\cell c-typeprint.c\cell\cell\row
\cell c-valprint.c\cell\cell\row
\cell charset.c\cell\cell\row
\cell cli-out.c\cell\cell\row
\cell coff-pe-read.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell complaints.c\cell\cell\row
\cell completer.c\cell\cell\row
\cell corefile.c\cell\cell\row
\cell cp-abi.c\cell\cell\row
\cell cp-namespace.c\cell\cell\row
\cell cp-support.c\cell\cell\row
\cell cp-valprint.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell demangle.c\cell\cell\row
\cell dictionary.c\cell\cell\row
\cell disasm.c\cell\cell\row
\cell doublest.c\cell\cell\row
\cell dummy-frame.c\cell\cell\row
\cell dwarf2-frame.c\cell\cell\row
\cell dwarf2expr.c\cell\cell\row
\cell dwarf2loc.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell environ.c\cell\cell\row
\cell eval.c\cell\cell\row
\cell event-loop.c\cell\cell\row
\cell event-top.c\cell\cell\row
\cell expprint.c\cell\cell\row
\cell f-exp.c\cell\cell\row
\cell f-lang.c\cell\cell\row
\cell f-typeprint.c\cell\cell\row
\cell f-valprint.c\cell\cell\row
\cell findvar.c\cell\cell\row
\cell frame-base.c\cell\cell\row
\cell frame-unwind.c\cell\cell\row
\cell frame.c\cell\cell\row
\cell gdbarch.c\cell\cell\row
\cell gdbtypes.c\cell\cell\row
\cell gnu-v2-abi.c\cell\cell\row
\cell gnu-v3-abi.c\cell\cell\row
\cell hpacc-abi.c\cell\cell\row
\cell inf-loop.c\cell\cell\row
\cell infcall.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell inflow.c\cell\cell\row
\cell infrun.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell interps.c\cell\cell\row
\cell jv-exp.c\cell\cell\row
\cell jv-lang.c\cell\cell\row
\cell jv-typeprint.c\cell\cell\row
\cell jv-valprint.c\cell\cell\row
\cell kod-cisco.c\cell\cell\row
\cell kod.c\cell\cell\row
\cell language.c\cell\cell\row
\cell linespec.c\cell\cell\row
\cell m2-exp.c\cell\cell\row
\cell m2-lang.c\cell\cell\row
\cell m2-typeprint.c\cell\cell\row
\cell m2-valprint.c\cell\cell\row
\cell macrocmd.c\cell\cell\row
\cell macroexp.c\cell\cell\row
\cell macroscope.c\cell\cell\row
\cell macrotab.c\cell\cell\row
\cell main.c\cell\cell\row
\cell maint.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell mem-break.c\cell\cell\row
\cell memattr.c\cell\cell\row
\cell minsyms.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objc-exp.c\cell\cell\row
\cell objc-lang.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell observer.c\cell\cell\row
\cell osabi.c\cell\cell\row
\cell p-exp.c\cell\cell\row
\cell p-lang.c\cell\cell\row
\cell p-typeprint.c\cell\cell\row
\cell p-valprint.c\cell\cell\row
\cell parse.c\cell\cell\row
\cell printcmd.c\cell\cell\row
\cell regcache.c\cell\cell\row
\cell reggroups.c\cell\cell\row
\cell remote-fileio.c\cell\cell\row
\cell remote.c\cell\cell\row
\cell scm-exp.c\cell\cell\row
\cell scm-lang.c\cell\cell\row
\cell scm-valprint.c\cell\cell\row
\cell sentinel-frame.c\cell\cell\row
\cell ser-base.c\cell\cell\row
\cell ser-unix.c\cell\cell\row
\cell serial.c\cell\cell\row
\cell solib-null.c\cell\cell\row
\cell solib.c\cell\cell\row
\cell source.c\cell\cell\row
\cell stabsread.c\cell\cell\row
\cell stack.c\cell\cell\row
\cell std-regs.c\cell\cell\row
\cell symfile-mem.c\cell\cell\row
\cell symfile.c\cell\cell\row
\cell symmisc.c\cell\cell\row
\cell symtab.c\cell\cell\row
\cell target/target.c\cell\cell\row
\cell target/x86-shared-tdep.c\cell\cell\row
\cell thread.c\cell\cell\row
\cell top.c\cell\cell\row
\cell tracepoint.c\cell\cell\row
\cell trad-frame.c\cell\cell\row
\cell tramp-frame.c\cell\cell\row
\cell typeprint.c\cell\cell\row
\cell ui-file.c\cell\cell\row
\cell ui-out.c\cell\cell\row
\cell user-regs.c\cell\cell\row
\cell utils.c\cell\cell\row
\cell valarith.c\cell\cell\row
\cell valops.c\cell\cell\row
\cell valprint.c\cell\cell\row
\cell value.c\cell\cell\row
\cell varobj.c\cell\cell\row
\cell wrapper.c\cell\cell\row
Used in:\cell captured_main()\cell main.c\cell\row
\cell vwarning()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable deprecated_error_begin_hook\par}
{\s5\f1\fs20\ql\sb50\sa50 void (*deprecated_error_begin_hook)(void)\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell ada-exp.c\cell\cell\row
\cell ada-lang.c\cell\cell\row
\cell ada-typeprint.c\cell\cell\row
\cell ada-valprint.c\cell\cell\row
\cell arch-utils.c\cell\cell\row
\cell ax-gdb.c\cell\cell\row
\cell ax-general.c\cell\cell\row
\cell bcache.c\cell\cell\row
\cell bfd-target.c\cell\cell\row
\cell block.c\cell\cell\row
\cell blockframe.c\cell\cell\row
\cell breakpoint.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell c-exp.c\cell\cell\row
\cell c-lang.c\cell\cell\row
\cell c-typeprint.c\cell\cell\row
\cell c-valprint.c\cell\cell\row
\cell charset.c\cell\cell\row
\cell cli-out.c\cell\cell\row
\cell coff-pe-read.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell complaints.c\cell\cell\row
\cell completer.c\cell\cell\row
\cell corefile.c\cell\cell\row
\cell cp-abi.c\cell\cell\row
\cell cp-namespace.c\cell\cell\row
\cell cp-support.c\cell\cell\row
\cell cp-valprint.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell demangle.c\cell\cell\row
\cell dictionary.c\cell\cell\row
\cell disasm.c\cell\cell\row
\cell doublest.c\cell\cell\row
\cell dummy-frame.c\cell\cell\row
\cell dwarf2-frame.c\cell\cell\row
\cell dwarf2expr.c\cell\cell\row
\cell dwarf2loc.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell environ.c\cell\cell\row
\cell eval.c\cell\cell\row
\cell event-loop.c\cell\cell\row
\cell event-top.c\cell\cell\row
\cell expprint.c\cell\cell\row
\cell f-exp.c\cell\cell\row
\cell f-lang.c\cell\cell\row
\cell f-typeprint.c\cell\cell\row
\cell f-valprint.c\cell\cell\row
\cell findvar.c\cell\cell\row
\cell frame-base.c\cell\cell\row
\cell frame-unwind.c\cell\cell\row
\cell frame.c\cell\cell\row
\cell gdbarch.c\cell\cell\row
\cell gdbtypes.c\cell\cell\row
\cell gnu-v2-abi.c\cell\cell\row
\cell gnu-v3-abi.c\cell\cell\row
\cell hpacc-abi.c\cell\cell\row
\cell inf-loop.c\cell\cell\row
\cell infcall.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell inflow.c\cell\cell\row
\cell infrun.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell interps.c\cell\cell\row
\cell jv-exp.c\cell\cell\row
\cell jv-lang.c\cell\cell\row
\cell jv-typeprint.c\cell\cell\row
\cell jv-valprint.c\cell\cell\row
\cell kod-cisco.c\cell\cell\row
\cell kod.c\cell\cell\row
\cell language.c\cell\cell\row
\cell linespec.c\cell\cell\row
\cell m2-exp.c\cell\cell\row
\cell m2-lang.c\cell\cell\row
\cell m2-typeprint.c\cell\cell\row
\cell m2-valprint.c\cell\cell\row
\cell macrocmd.c\cell\cell\row
\cell macroexp.c\cell\cell\row
\cell macroscope.c\cell\cell\row
\cell macrotab.c\cell\cell\row
\cell main.c\cell\cell\row
\cell maint.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell mem-break.c\cell\cell\row
\cell memattr.c\cell\cell\row
\cell minsyms.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objc-exp.c\cell\cell\row
\cell objc-lang.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell observer.c\cell\cell\row
\cell osabi.c\cell\cell\row
\cell p-exp.c\cell\cell\row
\cell p-lang.c\cell\cell\row
\cell p-typeprint.c\cell\cell\row
\cell p-valprint.c\cell\cell\row
\cell parse.c\cell\cell\row
\cell printcmd.c\cell\cell\row
\cell regcache.c\cell\cell\row
\cell reggroups.c\cell\cell\row
\cell remote-fileio.c\cell\cell\row
\cell remote.c\cell\cell\row
\cell scm-exp.c\cell\cell\row
\cell scm-lang.c\cell\cell\row
\cell scm-valprint.c\cell\cell\row
\cell sentinel-frame.c\cell\cell\row
\cell ser-base.c\cell\cell\row
\cell ser-unix.c\cell\cell\row
\cell serial.c\cell\cell\row
\cell solib-null.c\cell\cell\row
\cell solib.c\cell\cell\row
\cell source.c\cell\cell\row
\cell stabsread.c\cell\cell\row
\cell stack.c\cell\cell\row
\cell std-regs.c\cell\cell\row
\cell symfile-mem.c\cell\cell\row
\cell symfile.c\cell\cell\row
\cell symmisc.c\cell\cell\row
\cell symtab.c\cell\cell\row
\cell target/target.c\cell\cell\row
\cell target/x86-shared-tdep.c\cell\cell\row
\cell thread.c\cell\cell\row
\cell top.c\cell\cell\row
\cell tracepoint.c\cell\cell\row
\cell trad-frame.c\cell\cell\row
\cell tramp-frame.c\cell\cell\row
\cell typeprint.c\cell\cell\row
\cell ui-file.c\cell\cell\row
\cell ui-out.c\cell\cell\row
\cell user-regs.c\cell\cell\row
\cell utils.c\cell\cell\row
\cell valarith.c\cell\cell\row
\cell valops.c\cell\cell\row
\cell valprint.c\cell\cell\row
\cell value.c\cell\cell\row
\cell varobj.c\cell\cell\row
\cell wrapper.c\cell\cell\row
Used in:\cell clear_interpreter_hooks()\cell interps.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable job_control\par}
{\s5\f1\fs20\ql\sb50\sa50 int job_control\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell event-top.c\cell\cell\row
\cell inflow.c\cell\cell\row
\cell ser-unix.c\cell\cell\row
\cell top.c\cell\cell\row
\cell utils.c\cell\cell\row
Used in:\cell _initialize_inflow()\cell inflow.c\cell\row
\cell command_line_handler()\cell event-top.c\cell\row
\cell command_line_input()\cell top.c\cell\row
\cell gdb_setpgid()\cell inflow.c\cell\row
\cell quit()\cell utils.c\cell\row
\cell terminal_inferior()\cell inflow.c\cell\row
\cell terminal_ours_1()\cell inflow.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable pagination_enabled\par}
{\s5\f1\fs20\ql\sb50\sa50 int pagination_enabled\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell utils.c\cell\cell\row
Used in:\cell fputs_maybe_filtered()\cell utils.c\cell\row
\cell initialize_utils()\cell utils.c\cell\row
\cell pagination_off_command()\cell utils.c\cell\row
\cell pagination_on_command()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable cleanup_chain\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct cleanup* cleanup_chain\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell discard_cleanups()\cell\cell\row
\cell do_cleanups()\cell\cell\row
\cell make_cleanup()\cell\cell\row
\cell make_cleanup_free_section_addr_info()\cell\cell\row
\cell make_cleanup_freeargv()\cell\cell\row
\cell make_cleanup_restore_uiout()\cell\cell\row
\cell make_cleanup_set_restore_scheduler_locking_mode()\cell\cell\row
\cell make_cleanup_ui_file_delete()\cell\cell\row
\cell make_cleanup_ui_out_delete()\cell\cell\row
\cell restore_cleanups()\cell\cell\row
\cell save_cleanups()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable final_cleanup_chain\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct cleanup* final_cleanup_chain\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell discard_final_cleanups()\cell\cell\row
\cell do_final_cleanups()\cell\cell\row
\cell make_final_cleanup()\cell\cell\row
\cell restore_final_cleanups()\cell\cell\row
\cell save_final_cleanups()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable run_cleanup_chain\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct cleanup* run_cleanup_chain\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell do_run_cleanups()\cell\cell\row
\cell make_run_cleanup()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable exec_cleanup_chain\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct cleanup* exec_cleanup_chain\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell do_exec_cleanups()\cell\cell\row
\cell make_exec_cleanup()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable exec_error_cleanup_chain\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct cleanup* exec_error_cleanup_chain\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell discard_exec_error_cleanups()\cell\cell\row
\cell do_exec_error_cleanups()\cell\cell\row
\cell make_exec_error_cleanup()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable hand_call_cleanup_chain\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct cleanup* hand_call_cleanup_chain\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell discard_hand_call_cleanups()\cell\cell\row
\cell do_hand_call_cleanups()\cell\cell\row
\cell make_hand_call_cleanup()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable internal_error_problem\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct internal_problem internal_error_problem\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell internal_verror()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable internal_warning_problem\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct internal_problem internal_warning_problem\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell internal_vwarning()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable lines_per_page\par}
{\s5\f1\fs20\ql\sb50\sa50 static unsigned int lines_per_page\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell fputs_maybe_filtered()\cell\cell\row
\cell init_page_info()\cell\cell\row
\cell initialize_utils()\cell\cell\row
\cell macosx_resize_window_handler()\cell\cell\row
\cell set_screen_size()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable chars_per_line\par}
{\s5\f1\fs20\ql\sb50\sa50 static unsigned int chars_per_line\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell fputs_maybe_filtered()\cell\cell\row
\cell init_page_info()\cell\cell\row
\cell initialize_utils()\cell\cell\row
\cell macosx_resize_window_handler()\cell\cell\row
\cell puts_filtered_tabular()\cell\cell\row
\cell set_screen_size()\cell\cell\row
\cell set_width()\cell\cell\row
\cell wrap_here()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable lines_printed\par}
{\s5\f1\fs20\ql\sb50\sa50 static unsigned int lines_printed\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell fputs_maybe_filtered()\cell\cell\row
\cell reinitialize_more_filter()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable chars_printed\par}
{\s5\f1\fs20\ql\sb50\sa50 static unsigned int chars_printed\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell begin_line()\cell\cell\row
\cell fputs_maybe_filtered()\cell\cell\row
\cell puts_filtered_tabular()\cell\cell\row
\cell reinitialize_more_filter()\cell\cell\row
\cell wrap_here()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable wrap_buffer\par}
{\s5\f1\fs20\ql\sb50\sa50 static char* wrap_buffer\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell fputs_maybe_filtered()\cell\cell\row
\cell set_width()\cell\cell\row
\cell wrap_here()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable wrap_pointer\par}
{\s5\f1\fs20\ql\sb50\sa50 static char* wrap_pointer\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell fputs_maybe_filtered()\cell\cell\row
\cell set_width()\cell\cell\row
\cell wrap_here()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable wrap_indent\par}
{\s5\f1\fs20\ql\sb50\sa50 static const char* wrap_indent\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell fputs_maybe_filtered()\cell\cell\row
\cell wrap_here()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable wrap_column\par}
{\s5\f1\fs20\ql\sb50\sa50 static int wrap_column\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell fputs_maybe_filtered()\cell\cell\row
\cell wrap_here()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable thirty_two\par}
{\s5\f1\fs20\ql\sb50\sa50 static int thirty_two\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell phex()\cell\cell\row
\cell phex_nz()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable orig_file_rlimit\par}
{\s5\f1\fs20\ql\sb50\sa50 static rlim_t orig_file_rlimit\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell restore_file_rlimit()\cell\cell\row
\cell unlimit_file_rlimit()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable rebuf\par}
{\s5\f1\fs20\ql\sb50\sa50 static regex_t rebuf\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell re_comp()\cell\cell\row
\cell re_exec()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable rebuf_needs_freeing\par}
{\s5\f1\fs20\ql\sb50\sa50 static int rebuf_needs_freeing\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell re_comp()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable regex_fmt\par}
{\s5\f1\fs20\ql\sb50\sa50 static int regex_fmt\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell re_comp()\cell\cell\row
\cell re_set_syntax()\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Functions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function add_continuation()\par}
{\s5\f1\fs20\ql\sb50\sa50 void add_continuation ( void (*continuation_hook)(struct continuation_arg*), struct continuation_arg* arg_list )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell xmalloc()\cell utils.c\cell\row
Called by:\cell bpstat_do_actions()\cell breakpoint.c\cell\row
\cell command_handler()\cell event-top.c\cell\row
\cell finish_command()\cell infcmd.c\cell\row
\cell finish_inlined_subroutine_command()\cell infcmd.c\cell\row
\cell until_break_command()\cell breakpoint.c\cell\row
Refs Var:\cell cmd_continuation\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function add_intermediate_continuation()\par}
{\s5\f1\fs20\ql\sb50\sa50 void add_intermediate_continuation ( void (*continuation_hook)(struct continuation_arg*), struct continuation_arg* arg_list )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell xmalloc()\cell utils.c\cell\row
Called by:\cell re_exec_once()\cell infcmd.c\cell\row
\cell step_once()\cell infcmd.c\cell\row
Refs Var:\cell intermediate_continuation\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function align_down()\par}
{\s5\f1\fs20\ql\sb50\sa50 unsigned long align_down ( unsigned long v, int n )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell internal_error()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function align_up()\par}
{\s5\f1\fs20\ql\sb50\sa50 unsigned long align_up ( unsigned long v, int n )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell internal_error()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function begin_line()\par}
{\s5\f1\fs20\ql\sb50\sa50 void begin_line ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell puts_filtered()\cell utils.c\cell\row
Called by:\cell classes_info()\cell objc-lang.c\cell\row
\cell internal_vproblem()\cell utils.c\cell\row
\cell selectors_info()\cell objc-lang.c\cell\row
\cell vcomplaint()\cell complaints.c\cell\row
Refs Var:\cell chars_printed\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function breakup_args()\par}
{\s5\f1\fs20\ql\sb50\sa50 void breakup_args ( char* scratch, int* argc, char** argv )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Called by:\cell remote_macosx_create_inferior()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function bundle_basename()\par}
{\s5\f1\fs20\ql\sb50\sa50 const char* bundle_basename ( const char* filepath )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell strrchr_bounded()\cell utils.c\cell\row
\cell strrstr()\cell utils.c\cell\row
\cell  isalpha(), strchr(), strrchr()\cell\cell\row
Called by:\cell objfile_matches_name()\cell objfiles.c\cell\row
\cell tell_breakpoints_objfile_changed_internal()\cell breakpoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function core_addr_to_string()\par}
{\s5\f1\fs20\ql\sb50\sa50 const char* core_addr_to_string ( const CORE_ADDR addr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell get_cell()\cell utils.c\cell\row
\cell phex()\cell utils.c\cell\row
\cell  __builtin___strcat_chk(), __builtin___strcpy_chk(), __builtin_object_size(), __inline_strcat_chk(), __inline_strcpy_chk()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function core_addr_to_string_nz()\par}
{\s5\f1\fs20\ql\sb50\sa50 const char* core_addr_to_string_nz ( const CORE_ADDR addr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell get_cell()\cell utils.c\cell\row
\cell phex_nz()\cell utils.c\cell\row
\cell  __builtin___strcat_chk(), __builtin___strcpy_chk(), __builtin_object_size(), __inline_strcat_chk(), __inline_strcpy_chk()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function discard_all_continuations()\par}
{\s5\f1\fs20\ql\sb50\sa50 void discard_all_continuations ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell xfree()\cell utils.c\cell\row
Called by:\cell inferior_event_handler()\cell inf-loop.c\cell\row
\cell stdin_event_handler()\cell event-top.c\cell\row
Refs Var:\cell cmd_continuation\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function discard_all_intermediate_continuations()\par}
{\s5\f1\fs20\ql\sb50\sa50 void discard_all_intermediate_continuations ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell xfree()\cell utils.c\cell\row
Refs Var:\cell intermediate_continuation\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function discard_cleanups()\par}
{\s5\f1\fs20\ql\sb50\sa50 void discard_cleanups ( struct cleanup* old_chain )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell discard_my_cleanups()\cell utils.c\cell\row
Called by:\cell break_command_2()\cell breakpoint.c\cell\row
\cell decode_line_2()\cell linespec.c\cell\row
\cell do_captured_breakpoint()\cell breakpoint.c\cell\row
\cell dwarf_decode_line_header()\cell dwarf2read.c\cell\row
\cell encode_actions()\cell tracepoint.c\cell\row
\cell expr_to_agent()\cell ax-gdb.c\cell\row
\cell find_oload_champ_namespace_loop()\cell valops.c\cell\row
\cell frame_save_as_regcache()\cell frame.c\cell\row
\cell gather_arguments()\cell macroexp.c\cell\row
\cell gen_trace_for_expr()\cell ax-gdb.c\cell\row
\cell hand_function_call()\cell infcall.c\cell\row
\cell load_full_comp_unit()\cell dwarf2read.c\cell\row
\cell macro_expand()\cell macroexp.c\cell\row
\cell macro_expand_next()\cell macroexp.c\cell\row
\cell make_symbol_overload_list()\cell cp-support.c\cell\row
\cell objc_read_trampoline_region()\cell objc-lang.c\cell\row
\cell open_bfd_from_oso()\cell dbxread.c\cell\row
\cell parse_exp_in_context()\cell parse.c\cell\row
\cell read_actions()\cell tracepoint.c\cell\row
\cell reread_symbols_for_objfile()\cell symfile.c\cell\row
\cell resume()\cell infrun.c\cell\row
\cell search_symbols()\cell symtab.c\cell\row
\cell set_raw_tracepoint()\cell tracepoint.c\cell\row
\cell solib_load_unload_1()\cell breakpoint.c\cell\row
\cell symbol_file_add_with_addrs_or_offsets_using_objfile()\cell symfile.c\cell\row
\cell syms_from_objfile()\cell symfile.c\cell\row
\cell trace_dump_command()\cell tracepoint.c\cell\row
\cell val_print_string()\cell valprint.c\cell\row
\cell varobj_create()\cell varobj.c\cell\row
Refs Var:\cell cleanup_chain\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function discard_exec_error_cleanups()\par}
{\s5\f1\fs20\ql\sb50\sa50 void discard_exec_error_cleanups ( struct cleanup* old_chain )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell discard_my_cleanups()\cell utils.c\cell\row
Refs Var:\cell exec_error_cleanup_chain\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function discard_final_cleanups()\par}
{\s5\f1\fs20\ql\sb50\sa50 void discard_final_cleanups ( struct cleanup* old_chain )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell discard_my_cleanups()\cell utils.c\cell\row
Refs Var:\cell final_cleanup_chain\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function discard_hand_call_cleanups()\par}
{\s5\f1\fs20\ql\sb50\sa50 void discard_hand_call_cleanups ( struct cleanup* old_chain )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell discard_my_cleanups()\cell utils.c\cell\row
\cell printf_unfiltered()\cell utils.c\cell\row
Refs Var:\cell debug_handcall_setup\cell infrun.c\cell\row
\cell hand_call_cleanup_chain\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function discard_my_cleanups()\par}
{\s5\f1\fs20\ql\sb50\sa50 void discard_my_cleanups ( struct cleanup** pmy_chain, struct cleanup* old_chain )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell xfree()\cell utils.c\cell\row
Called by:\cell discard_cleanups()\cell utils.c\cell\row
\cell discard_exec_error_cleanups()\cell utils.c\cell\row
\cell discard_final_cleanups()\cell utils.c\cell\row
\cell discard_hand_call_cleanups()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function do_all_continuations()\par}
{\s5\f1\fs20\ql\sb50\sa50 void do_all_continuations ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell xfree()\cell utils.c\cell\row
Called by:\cell inferior_event_handler()\cell inf-loop.c\cell\row
Refs Var:\cell cmd_continuation\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function do_all_intermediate_continuations()\par}
{\s5\f1\fs20\ql\sb50\sa50 void do_all_intermediate_continuations ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell xfree()\cell utils.c\cell\row
Called by:\cell inferior_event_handler()\cell inf-loop.c\cell\row
Refs Var:\cell intermediate_continuation\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function do_cleanups()\par}
{\s5\f1\fs20\ql\sb50\sa50 void do_cleanups ( struct cleanup* old_chain )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell do_my_cleanups()\cell utils.c\cell\row
Called by:\cell ada_print_floating()\cell ada-valprint.c\cell\row
\cell add_dsym_command()\cell symfile.c\cell\row
\cell add_kext_command()\cell symfile.c\cell\row
\cell add_symbol_file_command()\cell symfile.c\cell\row
\cell agent_command()\cell ax-gdb.c\cell\row
\cell allocate_space_in_inferior_malloc()\cell valops.c\cell\row
\cell append_psymbols_as_msymbols()\cell symfile.c\cell\row
\cell backtrace_command()\cell stack.c\cell\row
\cell bpstat_do_actions()\cell breakpoint.c\cell\row
\cell bpstat_stop_status()\cell breakpoint.c\cell\row
\cell break_command_2()\cell breakpoint.c\cell\row
\cell breakpoint_1()\cell breakpoint.c\cell\row
\cell breakpoint_print_commands()\cell breakpoint.c\cell\row
\cell breakpoint_re_set_all()\cell breakpoint.c\cell\row
\cell breakpoint_re_set_one()\cell breakpoint.c\cell\row
\cell breakpoint_update()\cell breakpoint.c\cell\row
\cell c_preprocess_and_parse()\cell c-lang.c\cell\row
\cell c_value_of_root()\cell varobj.c\cell\row
\cell c_value_of_variable()\cell varobj.c\cell\row
\cell captured_command_loop()\cell main.c\cell\row
\cell captured_main()\cell main.c\cell\row
\cell check_bfd_for_matching_uuid()\cell symfile.c\cell\row
\cell check_safe_call()\cell valops.c\cell\row
\cell coff_symfile_read()\cell coffread.c\cell\row
\cell command_handler()\cell event-top.c\cell\row
\cell command_loop()\cell top.c\cell\row
\cell commands_command()\cell breakpoint.c\cell\row
\cell compare_sections_command()\cell remote.c\cell\row
\cell convert_sect_addrs_to_offsets_via_on_disk_file()\cell symfile.c\cell\row
\cell core_file_command()\cell corefile.c\cell\row
\cell dbx_psymtab_to_symtab()\cell dbxread.c\cell\row
\cell dbx_psymtab_to_symtab_1()\cell dbxread.c\cell\row
\cell dbx_symfile_read()\cell dbxread.c\cell\row
\cell decode_all_digits()\cell linespec.c\cell\row
\cell decode_all_digits_exhaustive()\cell linespec.c\cell\row
\cell default_memory_insert_breakpoint()\cell mem-break.c\cell\row
\cell default_memory_remove_breakpoint()\cell mem-break.c\cell\row
\cell default_xfer_partial()\cell target/target.c\cell\row
\cell delete_breakpoint()\cell breakpoint.c\cell\row
\cell detach_breakpoints()\cell breakpoint.c\cell\row
\cell determine_class_name()\cell dwarf2read.c\cell\row
\cell do_assembly_only()\cell disasm.c\cell\row
\cell do_captured_breakpoint()\cell breakpoint.c\cell\row
\cell do_captured_list_thread_ids()\cell thread.c\cell\row
\cell do_check_is_thread_unsafe()\cell valops.c\cell\row
\cell do_end_debugger_mode()\cell objc-lang.c\cell\row
\cell do_mixed_source_and_assembly()\cell disasm.c\cell\row
\cell dump_insns()\cell disasm.c\cell\row
\cell dwarf2_build_psymtabs_hard()\cell dwarf2read.c\cell\row
\cell dwarf2_frame_cache()\cell dwarf2-frame.c\cell\row
\cell dwarf2_scan_inlined_section_for_psymbols()\cell dwarf2read.c\cell\row
\cell dwarf2_scan_pubtype_for_psymbols()\cell dwarf2read.c\cell\row
\cell dwarf2_start_subfile()\cell dwarf2read.c\cell\row
\cell dwarf_build_psymtabs()\cell dwarfread.c\cell\row
\cell elf_symfile_read()\cell elfread.c\cell\row
\cell elf_symtab_read()\cell elfread.c\cell\row
\cell elfmdebug_build_psymtabs()\cell mdebugread.c\cell\row
\cell elfstab_build_psymtabs()\cell dbxread.c\cell\row
\cell encode_actions()\cell tracepoint.c\cell\row
\cell expand()\cell macroexp.c\cell\row
\cell fill_symbuf()\cell dbxread.c\cell\row
\cell find_debug_info_for_pst()\cell dwarf2read.c\cell\row
\cell find_implementation()\cell objc-lang.c\cell\row
\cell find_kext_loadaddrs_from_kernel()\cell symfile.c\cell\row
\cell find_methods()\cell objc-lang.c\cell\row
\cell find_oload_champ_namespace_loop()\cell valops.c\cell\row
\cell find_overload_match()\cell valops.c\cell\row
\cell find_pc_offset()\cell disasm.c\cell\row
\cell find_source_lines()\cell source.c\cell\row
\cell finish_command()\cell infcmd.c\cell\row
\cell frame_pop()\cell frame.c\cell\row
\cell future_break_command()\cell breakpoint.c\cell\row
\cell gdb_breakpoint()\cell breakpoint.c\cell\row
\cell gdb_disassembly()\cell disasm.c\cell\row
\cell gdb_print_insn()\cell disasm.c\cell\row
\cell generic_load()\cell symfile.c\cell\row
\cell get_class_address_from_object()\cell objc-lang.c\cell\row
\cell hand_function_call()\cell infcall.c\cell\row
\cell handle_command()\cell infrun.c\cell\row
\cell info_macro_command()\cell macrocmd.c\cell\row
\cell insert_bp_location()\cell breakpoint.c\cell\row
\cell invoke_block_command()\cell printcmd.c\cell\row
\cell list_cp_abis()\cell cp-abi.c\cell\row
\cell list_interpreter_cmd()\cell interps.c\cell\row
\cell load_comp_unit()\cell dwarf2read.c\cell\row
\cell load_full_comp_unit()\cell dwarf2read.c\cell\row
\cell load_progress()\cell symfile.c\cell\row
\cell load_section_callback()\cell symfile.c\cell\row
\cell lookup_objc_class()\cell objc-lang.c\cell\row
\cell lookup_symbol_in_language()\cell ada-lang.c\cell\row
\cell macro_expand_command()\cell macrocmd.c\cell\row
\cell macro_expand_next()\cell macroexp.c\cell\row
\cell macro_expand_once_command()\cell macrocmd.c\cell\row
\cell maintenance_print_msymbols()\cell symmisc.c\cell\row
\cell maintenance_print_psymbols()\cell symmisc.c\cell\row
\cell maintenance_print_symbols()\cell symmisc.c\cell\row
\cell maintenance_print_type()\cell typeprint.c\cell\row
\cell make_cleanup_init_objc_exception_catcher()\cell objc-lang.c\cell\row
\cell make_cleanup_set_restore_debugger_mode()\cell objc-lang.c\cell\row
\cell maybe_expand()\cell macroexp.c\cell\row
\cell mention()\cell breakpoint.c\cell\row
\cell minsym_found()\cell linespec.c\cell\row
\cell minsyms_found()\cell linespec.c\cell\row
\cell mipscoff_symfile_read()\cell mipsread.c\cell\row
\cell new_objc_runtime_find_impl()\cell objc-lang.c\cell\row
\cell new_objc_runtime_get_classname()\cell objc-lang.c\cell\row
\cell nlm_symfile_read()\cell nlmread.c\cell\row
\cell nlm_symtab_read()\cell nlmread.c\cell\row
\cell objc_fixup_ivar_offset()\cell objc-lang.c\cell\row
\cell objc_setup_safe_print()\cell objc-lang.c\cell\row
\cell open_bfd_from_oso()\cell dbxread.c\cell\row
\cell oso_scan_partial_symtab()\cell dbxread.c\cell\row
\cell output_command()\cell printcmd.c\cell\row
\cell parse_and_eval()\cell eval.c\cell\row
\cell parse_and_eval_address()\cell eval.c\cell\row
\cell parse_and_eval_address_1()\cell eval.c\cell\row
\cell parse_and_eval_long()\cell eval.c\cell\row
\cell parse_breakpoint_sals()\cell breakpoint.c\cell\row
\cell parse_exp_in_context()\cell parse.c\cell\row
\cell parse_frame_specification_1()\cell stack.c\cell\row
\cell parse_partial_symbols()\cell mdebugread.c\cell\row
\cell parse_to_comma_and_eval()\cell eval.c\cell\row
\cell print_address_symbolic()\cell printcmd.c\cell\row
\cell print_command_1()\cell printcmd.c\cell\row
\cell print_frame()\cell stack.c\cell\row
\cell print_frame_args()\cell stack.c\cell\row
\cell print_frame_info()\cell stack.c\cell\row
\cell print_inlined_frame()\cell inlining.c\cell\row
\cell print_inlined_frames_lite()\cell inlining.c\cell\row
\cell print_it_typical()\cell breakpoint.c\cell\row
\cell print_object_command()\cell objc-lang.c\cell\row
\cell print_one_breakpoint()\cell breakpoint.c\cell\row
\cell print_return_value()\cell infcmd.c\cell\row
\cell print_stop_reason()\cell infrun.c\cell\row
\cell printf_command()\cell printcmd.c\cell\row
\cell process_full_comp_unit()\cell dwarf2read.c\cell\row
\cell psymtab_to_symtab()\cell symfile.c\cell\row
\cell psymtab_to_symtab_1()\cell mdebugread.c\cell\row
\cell ptype_command()\cell typeprint.c\cell\row
\cell rbr_break_command()\cell breakpoint.c\cell\row
\cell rbreak_command()\cell symtab.c\cell\row
\cell re_enable_breakpoints_in_shlibs()\cell breakpoint.c\cell\row
\cell read_alphacoff_dynamic_symtab()\cell mipsread.c\cell\row
\cell read_array_type()\cell dwarf2read.c\cell\row
\cell read_command_file()\cell top.c\cell\row
\cell read_dbx_dynamic_symtab()\cell dbxread.c\cell\row
\cell read_dbx_symtab()\cell dbxread.c\cell\row
\cell read_file_scope()\cell dwarf2read.c\cell\row
\cell read_func_scope()\cell dwarf2read.c\cell\row
\cell read_namespace()\cell dwarf2read.c\cell\row
\cell read_objc_object()\cell objc-lang.c\cell\row
\cell read_ofile_symtab()\cell dwarfread.c\cell\row
\cell read_ofile_symtab_from_oso()\cell dbxread.c\cell\row
\cell read_oso_nlists()\cell dbxread.c\cell\row
\cell read_pe_exported_syms()\cell coff-pe-read.c\cell\row
\cell read_struct_type()\cell stabsread.c\cell\row
\cell read_structure_type()\cell dwarf2read.c\cell\row
\cell read_type_die()\cell dwarf2read.c\cell\row
\cell reattach_breakpoints()\cell breakpoint.c\cell\row
\cell regcache_dump()\cell regcache.c\cell\row
\cell remote_macosx_create_inferior()\cell remote.c\cell\row
\cell remote_vcont_resume()\cell remote.c\cell\row
\cell report_timer_internal()\cell maint.c\cell\row
\cell resolve_pending_breakpoint()\cell breakpoint.c\cell\row
\cell safe_check_is_thread_unsafe()\cell valops.c\cell\row
\cell save_breakpoints_command()\cell breakpoint.c\cell\row
\cell set_command()\cell printcmd.c\cell\row
\cell simplified_command_loop()\cell top.c\cell\row
\cell slide_objfile()\cell objfiles.c\cell\row
\cell solib_load_unload_1()\cell breakpoint.c\cell\row
\cell solib_map_sections()\cell solib.c\cell\row
\cell stabsect_build_psymtabs()\cell dbxread.c\cell\row
\cell step_1_inlining()\cell infcmd.c\cell\row
\cell step_1_no_inlining()\cell infcmd.c\cell\row
\cell symbol_file_add_with_addrs_or_offsets_using_objfile()\cell symfile.c\cell\row
\cell symbol_file_command()\cell symfile.c\cell\row
\cell symtab_symbol_info()\cell symtab.c\cell\row
\cell thread_apply_all_command()\cell thread.c\cell\row
\cell thread_apply_command()\cell thread.c\cell\row
\cell trace_find_line_command()\cell tracepoint.c\cell\row
\cell trace_start_command()\cell tracepoint.c\cell\row
\cell type_sprint()\cell typeprint.c\cell\row
\cell ui_out_field_stream()\cell ui-out.c\cell\row
\cell until_break_command()\cell breakpoint.c\cell\row
\cell val_print_string()\cell valprint.c\cell\row
\cell validate_actionline()\cell tracepoint.c\cell\row
\cell varobj_create()\cell varobj.c\cell\row
\cell varobj_delete_objfiles_vars()\cell varobj.c\cell\row
\cell varobj_evaluate_expression()\cell varobj.c\cell\row
\cell varobj_evaluate_type()\cell varobj.c\cell\row
\cell varobj_parse_exp_1()\cell varobj.c\cell\row
\cell varobj_set_value()\cell varobj.c\cell\row
\cell vcomplaint()\cell complaints.c\cell\row
\cell verify_gdbarch()\cell gdbarch.c\cell\row
\cell vfprintf_maybe_filtered()\cell utils.c\cell\row
\cell vfprintf_unfiltered()\cell utils.c\cell\row
\cell wait_for_inferior()\cell infrun.c\cell\row
\cell whatis_exp()\cell typeprint.c\cell\row
\cell x_command()\cell printcmd.c\cell\row
\cell xdb_handle_command()\cell infrun.c\cell\row
Refs Var:\cell cleanup_chain\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function do_exec_cleanups()\par}
{\s5\f1\fs20\ql\sb50\sa50 void do_exec_cleanups ( struct cleanup* old_chain )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell do_my_cleanups()\cell utils.c\cell\row
Called by:\cell fetch_inferior_event()\cell infrun.c\cell\row
\cell finish_command_continuation()\cell infcmd.c\cell\row
\cell finish_inlined_subroutine_command()\cell infcmd.c\cell\row
\cell finish_inlined_subroutine_command_continuation()\cell infcmd.c\cell\row
\cell step_1_continuation()\cell infcmd.c\cell\row
\cell until_break_command_continuation()\cell breakpoint.c\cell\row
Refs Var:\cell exec_cleanup_chain\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function do_exec_error_cleanups()\par}
{\s5\f1\fs20\ql\sb50\sa50 void do_exec_error_cleanups ( struct cleanup* old_chain )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell do_my_cleanups()\cell utils.c\cell\row
Called by:\cell complete_execution()\cell inf-loop.c\cell\row
\cell inferior_event_handler()\cell inf-loop.c\cell\row
Refs Var:\cell exec_error_cleanup_chain\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function do_final_cleanups()\par}
{\s5\f1\fs20\ql\sb50\sa50 void do_final_cleanups ( struct cleanup* old_chain )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell do_my_cleanups()\cell utils.c\cell\row
Called by:\cell quit_target()\cell top.c\cell\row
Refs Var:\cell final_cleanup_chain\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function do_hand_call_cleanups()\par}
{\s5\f1\fs20\ql\sb50\sa50 void do_hand_call_cleanups ( struct cleanup* old_chain )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell do_my_cleanups()\cell utils.c\cell\row
\cell printf_unfiltered()\cell utils.c\cell\row
Called by:\cell bpstat_stop_status()\cell breakpoint.c\cell\row
\cell keep_going()\cell infrun.c\cell\row
\cell make_cleanup_set_restore_debugger_mode()\cell objc-lang.c\cell\row
\cell proceed()\cell infrun.c\cell\row
\cell run_command_1()\cell infcmd.c\cell\row
\cell set_non_blocking_mode_func()\cell objc-lang.c\cell\row
\cell switch_to_thread()\cell thread.c\cell\row
\cell target_detach()\cell target/target.c\cell\row
Refs Var:\cell debug_handcall_setup\cell infrun.c\cell\row
\cell hand_call_cleanup_chain\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function do_run_cleanups()\par}
{\s5\f1\fs20\ql\sb50\sa50 void do_run_cleanups ( struct cleanup* old_chain )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell do_my_cleanups()\cell utils.c\cell\row
Called by:\cell run_command_1()\cell infcmd.c\cell\row
Refs Var:\cell run_cleanup_chain\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function error()\par}
{\s5\f1\fs20\ql\sb50\sa50 void error ( const char* string, ... )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell  __builtin_va_end(), __builtin_va_start(), throw_verror()\cell\cell\row
Called by:\cell _ada_parse()\cell ada-exp.c\cell\row
\cell access_value_history()\cell value.c\cell\row
\cell ada_coerce_to_simple_array()\cell ada-lang.c\cell\row
\cell ada_decoded_op_name()\cell ada-lang.c\cell\row
\cell ada_encode()\cell ada-lang.c\cell\row
\cell ada_error()\cell ada-exp.c\cell\row
\cell ada_evaluate_subexp()\cell ada-lang.c\cell\row
\cell ada_get_field_index()\cell ada-lang.c\cell\row
\cell ada_lex()\cell ada-exp.c\cell\row
\cell ada_lookup_struct_elt_type()\cell ada-lang.c\cell\row
\cell ada_main_name()\cell ada-lang.c\cell\row
\cell ada_print_scalar()\cell ada-valprint.c\cell\row
\cell ada_simple_renamed_entity()\cell ada-lang.c\cell\row
\cell ada_template_to_fixed_record_type_1()\cell ada-lang.c\cell\row
\cell ada_value_assign()\cell ada-lang.c\cell\row
\cell ada_value_binop()\cell ada-lang.c\cell\row
\cell ada_value_equal()\cell ada-lang.c\cell\row
\cell ada_value_ptr_subscript()\cell ada-lang.c\cell\row
\cell ada_value_struct_elt()\cell ada-lang.c\cell\row
\cell ada_value_subscript()\cell ada-lang.c\cell\row
\cell ada_vax_float_print_function()\cell ada-lang.c\cell\row
\cell add_dsym_command()\cell symfile.c\cell\row
\cell add_kext_command()\cell symfile.c\cell\row
\cell add_path()\cell source.c\cell\row
\cell add_register()\cell tracepoint.c\cell\row
\cell add_shared_symbol_files_command()\cell symfile.c\cell\row
\cell add_symbol_file_command()\cell symfile.c\cell\row
\cell add_symbol_file_from_memory_command()\cell symfile-mem.c\cell\row
\cell address_info()\cell printcmd.c\cell\row
\cell address_space_name_to_int()\cell gdbtypes.c\cell\row
\cell advance_command()\cell infcmd.c\cell\row
\cell agent_command()\cell ax-gdb.c\cell\row
\cell allocate_objfile_internal()\cell objfiles.c\cell\row
\cell allocate_space_in_inferior_malloc()\cell valops.c\cell\row
\cell async_float_handler()\cell event-top.c\cell\row
\cell attach_command()\cell infcmd.c\cell\row
\cell ax_const_d()\cell ax-general.c\cell\row
\cell ax_label()\cell ax-general.c\cell\row
\cell ax_print()\cell ax-general.c\cell\row
\cell ax_reg()\cell ax-general.c\cell\row
\cell ax_trace_quick()\cell ax-general.c\cell\row
\cell backtrace_command_1()\cell stack.c\cell\row
\cell baseclass_offset()\cell cp-abi.c\cell\row
\cell block_lookup()\cell ada-exp.c\cell\row
\cell break_command_1()\cell breakpoint.c\cell\row
\cell break_command_2()\cell breakpoint.c\cell\row
\cell c_error()\cell c-exp.c\cell\row
\cell c_lex()\cell c-exp.c\cell\row
\cell c_parse()\cell c-exp.c\cell\row
\cell c_path_expr_of_child()\cell varobj.c\cell\row
\cell c_type_of_child()\cell varobj.c\cell\row
\cell c_type_print_varspec_prefix()\cell c-typeprint.c\cell\row
\cell c_type_print_varspec_suffix()\cell c-typeprint.c\cell\row
\cell c_val_print()\cell c-valprint.c\cell\row
\cell c_value_of_child()\cell varobj.c\cell\row
\cell calc_f77_array_dims()\cell eval.c\cell\row
\cell captured_main()\cell main.c\cell\row
\cell cast_into_complex()\cell valops.c\cell\row
\cell catch_command_1()\cell breakpoint.c\cell\row
\cell catch_exception_command_1()\cell breakpoint.c\cell\row
\cell catch_exec_command_1()\cell breakpoint.c\cell\row
\cell catch_fork_command_1()\cell breakpoint.c\cell\row
\cell catch_load_command_1()\cell breakpoint.c\cell\row
\cell catch_unload_command_1()\cell breakpoint.c\cell\row
\cell check_field()\cell valops.c\cell\row
\cell check_size()\cell ada-lang.c\cell\row
\cell check_stub_method()\cell gdbtypes.c\cell\row
\cell check_valid_host_charset()\cell charset.c\cell\row
\cell cisco_kod_open()\cell kod-cisco.c\cell\row
\cell classes_info()\cell objc-lang.c\cell\row
\cell clear_command()\cell breakpoint.c\cell\row
\cell coerce_for_assign()\cell ada-lang.c\cell\row
\cell coff_symfile_read()\cell coffread.c\cell\row
\cell coff_symtab_read()\cell coffread.c\cell\row
\cell coffstab_build_psymtabs()\cell dbxread.c\cell\row
\cell collect_pseudocommand()\cell tracepoint.c\cell\row
\cell commands_command()\cell breakpoint.c\cell\row
\cell commands_from_control_command()\cell breakpoint.c\cell\row
\cell compare_classes()\cell objc-lang.c\cell\row
\cell compare_sections_command()\cell remote.c\cell\row
\cell compare_selectors()\cell objc-lang.c\cell\row
\cell condition_command()\cell breakpoint.c\cell\row
\cell condition_command_1()\cell breakpoint.c\cell\row
\cell construct_inferior_arguments()\cell infcmd.c\cell\row
\cell continue_command()\cell infcmd.c\cell\row
\cell core_file_attach()\cell corefile.c\cell\row
\cell core_file_command()\cell corefile.c\cell\row
\cell cp_print_class_method()\cell cp-valprint.c\cell\row
\cell cp_print_value()\cell cp-valprint.c\cell\row
\cell cplus_path_expr_of_child()\cell varobj.c\cell\row
\cell cplus_value_of_child()\cell varobj.c\cell\row
\cell create_breakpoints()\cell breakpoint.c\cell\row
\cell create_exception_catchpoint()\cell breakpoint.c\cell\row
\cell db_read_attribute_value()\cell dwarf2read.c\cell\row
\cell dbx_symfile_init()\cell dbxread.c\cell\row
\cell decode_all_variables()\cell linespec.c\cell\row
\cell decode_compound()\cell linespec.c\cell\row
\cell decode_dollar()\cell linespec.c\cell\row
\cell decode_line_1()\cell linespec.c\cell\row
\cell decode_line_2()\cell linespec.c\cell\row
\cell decode_line_spec()\cell symtab.c\cell\row
\cell decode_line_spec_1()\cell breakpoint.c\cell\row
\cell decode_packed_array()\cell ada-lang.c\cell\row
\cell decode_variable()\cell linespec.c\cell\row
\cell default_memory_insert_breakpoint()\cell mem-break.c\cell\row
\cell default_memory_remove_breakpoint()\cell mem-break.c\cell\row
\cell default_skip_permanent_breakpoint()\cell infrun.c\cell\row
\cell delete_display()\cell printcmd.c\cell\row
\cell desc_bounds()\cell ada-lang.c\cell\row
\cell destructor_name_p()\cell valops.c\cell\row
\cell detach_breakpoints()\cell breakpoint.c\cell\row
\cell die_containing_type()\cell dwarf2read.c\cell\row
\cell die_type()\cell dwarf2read.c\cell\row
\cell disable_display_command()\cell printcmd.c\cell\row
\cell discrete_type_high_bound()\cell ada-lang.c\cell\row
\cell discrete_type_low_bound()\cell ada-lang.c\cell\row
\cell do_captured_breakpoint()\cell breakpoint.c\cell\row
\cell do_captured_list_thread_ids()\cell thread.c\cell\row
\cell do_captured_thread_select()\cell thread.c\cell\row
\cell do_enable_breakpoint()\cell breakpoint.c\cell\row
\cell do_monitor_command()\cell target/target.c\cell\row
\cell down_silently_base()\cell stack.c\cell\row
\cell dummy_find_memory_regions()\cell target/target.c\cell\row
\cell dummy_func_to_use_unused_top_c_funcs()\cell top.c\cell\row
\cell dummy_make_corefile_notes()\cell target/target.c\cell\row
\cell dump_packets_command()\cell remote.c\cell\row
\cell dwarf2_find_comp_unit()\cell dwarf2read.c\cell\row
\cell dwarf2_find_containing_comp_unit()\cell dwarf2read.c\cell\row
\cell dwarf2_fundamental_type()\cell dwarf2read.c\cell\row
\cell dwarf2_kext_psymtab_to_symtab()\cell dwarf2read.c\cell\row
\cell dwarf2_read_address()\cell dwarf2expr.c\cell\row
\cell dwarf2_read_section()\cell dwarf2read.c\cell\row
\cell dwarf2_scan_inlined_section_for_psymbols()\cell dwarf2read.c\cell\row
\cell dwarf2_tracepoint_var_ref()\cell dwarf2loc.c\cell\row
\cell dwarf_build_psymtabs()\cell dwarfread.c\cell\row
\cell dwarf_expr_fetch()\cell dwarf2expr.c\cell\row
\cell dwarf_expr_frame_base()\cell dwarf2loc.c\cell\row
\cell dwarf_expr_pop()\cell dwarf2expr.c\cell\row
\cell dwarf_expr_tls_address()\cell dwarf2loc.c\cell\row
\cell dwarf_fundamental_type()\cell dwarfread.c\cell\row
\cell elf_symtab_read()\cell elfread.c\cell\row
\cell elfmdebug_build_psymtabs()\cell mdebugread.c\cell\row
\cell elfstab_build_psymtabs()\cell dbxread.c\cell\row
\cell enable_display()\cell printcmd.c\cell\row
\cell encode_actions()\cell tracepoint.c\cell\row
\cell end_actions_pseudocommand()\cell tracepoint.c\cell\row
\cell end_msglist()\cell objc-lang.c\cell\row
\cell error_stream()\cell utils.c\cell\row
\cell evaluate_struct_tuple()\cell eval.c\cell\row
\cell evaluate_subexp_for_address()\cell eval.c\cell\row
\cell evaluate_subexp_for_sizeof()\cell eval.c\cell\row
\cell evaluate_subexp_java()\cell jv-lang.c\cell\row
\cell evaluate_subexp_standard()\cell eval.c\cell\row
\cell execute_command()\cell top.c\cell\row
\cell execute_stack_op()\cell dwarf2expr.c\cell\row
\cell expand()\cell macroexp.c\cell\row
\cell extract_signed_integer_with_byte_order()\cell findvar.c\cell\row
\cell extract_unsigned_integer_with_byte_order()\cell findvar.c\cell\row
\cell f77_create_arrayprint_offset_tbl()\cell f-valprint.c\cell\row
\cell f77_get_dynamic_length_of_aggregate()\cell f-valprint.c\cell\row
\cell f77_get_dynamic_lowerbound()\cell f-valprint.c\cell\row
\cell f77_get_dynamic_upperbound()\cell f-valprint.c\cell\row
\cell f77_print_array()\cell f-valprint.c\cell\row
\cell f_error()\cell f-exp.c\cell\row
\cell f_lex()\cell f-exp.c\cell\row
\cell f_parse()\cell f-exp.c\cell\row
\cell f_type_print_base()\cell f-typeprint.c\cell\row
\cell f_val_print()\cell f-valprint.c\cell\row
\cell fetch_register_using_p()\cell remote.c\cell\row
\cell fill_symbuf()\cell dbxread.c\cell\row
\cell find_default_run_target()\cell target/target.c\cell\row
\cell find_field()\cell ax-gdb.c\cell\row
\cell find_function_addr()\cell infcall.c\cell\row
\cell find_function_in_inferior()\cell valops.c\cell\row
\cell find_function_start_sal()\cell symtab.c\cell\row
\cell find_kext_files_by_bundle()\cell symfile.c\cell\row
\cell find_kext_files_by_symfile()\cell symfile.c\cell\row
\cell find_kext_loadaddrs_from_kernel()\cell symfile.c\cell\row
\cell find_method_list()\cell valops.c\cell\row
\cell find_name_end()\cell stabsread.c\cell\row
\cell find_overload_match()\cell valops.c\cell\row
\cell find_partial_die_in_comp_unit()\cell dwarf2read.c\cell\row
\cell find_rt_vbase_offset()\cell valops.c\cell\row
\cell find_size_for_pointer_math()\cell valarith.c\cell\row
\cell find_sym_fns()\cell symfile.c\cell\row
\cell find_text_range()\cell dbxread.c\cell\row
\cell finish_command()\cell infcmd.c\cell\row
\cell finish_inlined_subroutine_command()\cell infcmd.c\cell\row
\cell finish_tfind_command()\cell tracepoint.c\cell\row
\cell float_handler()\cell top.c\cell\row
\cell floatformat_from_length()\cell doublest.c\cell\row
\cell follow_die_ref()\cell dwarf2read.c\cell\row
\cell follow_exec()\cell infrun.c\cell\row
\cell forward_search_command()\cell source.c\cell\row
\cell frame_pop()\cell frame.c\cell\row
\cell fromhex()\cell remote.c\cell\row
\cell gather_arguments()\cell macroexp.c\cell\row
\cell gdb_check()\cell utils.c\cell\row
\cell gdb_kod_query()\cell kod.c\cell\row
\cell gen_add()\cell ax-gdb.c\cell\row
\cell gen_address_of()\cell ax-gdb.c\cell\row
\cell gen_binop()\cell ax-gdb.c\cell\row
\cell gen_cast()\cell ax-gdb.c\cell\row
\cell gen_complement()\cell ax-gdb.c\cell\row
\cell gen_expr()\cell ax-gdb.c\cell\row
\cell gen_logical_not()\cell ax-gdb.c\cell\row
\cell gen_repeat()\cell ax-gdb.c\cell\row
\cell gen_struct_ref()\cell ax-gdb.c\cell\row
\cell gen_sub()\cell ax-gdb.c\cell\row
\cell gen_var_ref()\cell ax-gdb.c\cell\row
\cell generic_ext()\cell ax-general.c\cell\row
\cell generic_load()\cell symfile.c\cell\row
\cell get_character_constant()\cell macroexp.c\cell\row
\cell get_comment()\cell macroexp.c\cell\row
\cell get_current_frame()\cell frame.c\cell\row
\cell get_exec_file()\cell corefile.c\cell\row
\cell get_field()\cell doublest.c\cell\row
\cell get_java_object_type()\cell jv-lang.c\cell\row
\cell get_kext_bundle_ident_and_binary_path()\cell symfile.c\cell\row
\cell get_number_or_range()\cell breakpoint.c\cell\row
\cell get_offsets()\cell remote.c\cell\row
\cell get_prev_frame_1()\cell frame.c\cell\row
\cell get_selected_frame()\cell frame.c\cell\row
\cell get_selections()\cell ada-lang.c\cell\row
\cell get_string_literal()\cell macroexp.c\cell\row
\cell get_var_value()\cell ada-lang.c\cell\row
\cell getpkt_sane()\cell remote.c\cell\row
\cell gnuv2_virtual_fn_field()\cell gnu-v2-abi.c\cell\row
\cell gnuv3_baseclass_offset()\cell gnu-v3-abi.c\cell\row
\cell gnuv3_virtual_fn_field()\cell gnu-v3-abi.c\cell\row
\cell hand_function_call()\cell infcall.c\cell\row
\cell handle_command()\cell infrun.c\cell\row
\cell hpacc_value_rtti_type()\cell hpacc-abi.c\cell\row
\cell hpacc_virtual_fn_field()\cell hpacc-abi.c\cell\row
\cell ignore_command()\cell breakpoint.c\cell\row
\cell info_common_command()\cell f-valprint.c\cell\row
\cell info_macro_command()\cell macrocmd.c\cell\row
\cell init_array_element()\cell eval.c\cell\row
\cell install_variable()\cell varobj.c\cell\row
\cell interp_set()\cell interps.c\cell\row
\cell interp_set_ui_out()\cell interps.c\cell\row
\cell interpreter_exec_cmd()\cell interps.c\cell\row
\cell invoke_block_command()\cell printcmd.c\cell\row
\cell is_constructor_name()\cell cp-abi.c\cell\row
\cell is_destructor_name()\cell cp-abi.c\cell\row
\cell is_operator_name()\cell cp-abi.c\cell\row
\cell is_vtable_name()\cell cp-abi.c\cell\row
\cell java_error()\cell jv-exp.c\cell\row
\cell java_lex()\cell jv-exp.c\cell\row
\cell java_parse()\cell jv-exp.c\cell\row
\cell java_primitive_type()\cell jv-lang.c\cell\row
\cell java_type_from_name()\cell jv-exp.c\cell\row
\cell java_value_string()\cell jv-lang.c\cell\row
\cell jump_command()\cell infcmd.c\cell\row
\cell kill_command()\cell inflow.c\cell\row
\cell kill_if_already_running()\cell infcmd.c\cell\row
\cell kill_or_be_killed()\cell target/target.c\cell\row
\cell load_kod_library()\cell kod.c\cell\row
\cell load_progress()\cell symfile.c\cell\row
\cell load_section_callback()\cell symfile.c\cell\row
\cell locate_first_half()\cell linespec.c\cell\row
\cell locate_var_value()\cell findvar.c\cell\row
\cell loclist_tracepoint_var_ref()\cell dwarf2loc.c\cell\row
\cell longest_to_int()\cell valprint.c\cell\row
\cell lookup_cached_function()\cell value.c\cell\row
\cell lookup_charset_or_error()\cell charset.c\cell\row
\cell lookup_enum()\cell gdbtypes.c\cell\row
\cell lookup_fundamental_type()\cell gdbtypes.c\cell\row
\cell lookup_struct()\cell gdbtypes.c\cell\row
\cell lookup_struct_elt_type()\cell gdbtypes.c\cell\row
\cell lookup_struct_typedef()\cell objc-lang.c\cell\row
\cell lookup_symtab()\cell symtab.c\cell\row
\cell lookup_template_type()\cell gdbtypes.c\cell\row
\cell lookup_typename()\cell gdbtypes.c\cell\row
\cell lookup_union()\cell gdbtypes.c\cell\row
\cell m2_error()\cell m2-exp.c\cell\row
\cell m2_lex()\cell m2-exp.c\cell\row
\cell m2_parse()\cell m2-exp.c\cell\row
\cell macro_define_command()\cell macrocmd.c\cell\row
\cell macro_expand_command()\cell macrocmd.c\cell\row
\cell macro_expand_once()\cell macroexp.c\cell\row
\cell macro_expand_once_command()\cell macrocmd.c\cell\row
\cell macro_list_command()\cell macrocmd.c\cell\row
\cell macro_undef_command()\cell macrocmd.c\cell\row
\cell maintenance_print_msymbols()\cell symmisc.c\cell\row
\cell maintenance_print_psymbols()\cell symmisc.c\cell\row
\cell maintenance_print_symbols()\cell symmisc.c\cell\row
\cell maintenance_set_profile_cmd()\cell maint.c\cell\row
\cell maintenance_translate_address()\cell maint.c\cell\row
\cell make_cleanup_start_report_timer()\cell maint.c\cell\row
\cell make_cleanup_ui_out_suppress_output()\cell utils.c\cell\row
\cell map_overlay_command()\cell symfile.c\cell\row
\cell mem_command()\cell memattr.c\cell\row
\cell mem_delete_command()\cell memattr.c\cell\row
\cell mem_disable_command()\cell memattr.c\cell\row
\cell mem_enable_command()\cell memattr.c\cell\row
\cell mipscoff_symfile_read()\cell mipsread.c\cell\row
\cell name_lookup()\cell ada-exp.c\cell\row
\cell nlm_symtab_read()\cell nlmread.c\cell\row
\cell no_control_char_error()\cell utils.c\cell\row
\cell noprocess()\cell target/target.c\cell\row
\cell nosupport_runtime()\cell target/target.c\cell\row
\cell objc_error()\cell objc-exp.c\cell\row
\cell objc_lex()\cell objc-exp.c\cell\row
\cell objc_parse()\cell objc-exp.c\cell\row
\cell open_source_file_fullpath()\cell source.c\cell\row
\cell operator_chars()\cell symtab.c\cell\row
\cell operator_length_standard()\cell parse.c\cell\row
\cell oso_scan_partial_symtab()\cell dbxread.c\cell\row
\cell overlay_load_command()\cell symfile.c\cell\row
\cell pack_long()\cell value.c\cell\row
\cell packet_command()\cell remote.c\cell\row
\cell packet_ok()\cell remote.c\cell\row
\cell parse_and_eval_type()\cell eval.c\cell\row
\cell parse_breakpoint_sals()\cell breakpoint.c\cell\row
\cell parse_escape()\cell utils.c\cell\row
\cell parse_expression()\cell parse.c\cell\row
\cell parse_expression_in_context()\cell parse.c\cell\row
\cell parse_frame_specification_1()\cell stack.c\cell\row
\cell parse_number()\cell p-exp.c\cell\row
\cell partial_read_comp_unit_head()\cell dwarf2read.c\cell\row
\cell pascal_error()\cell p-exp.c\cell\row
\cell pascal_lex()\cell p-exp.c\cell\row
\cell pascal_object_print_class_method()\cell p-valprint.c\cell\row
\cell pascal_parse()\cell p-exp.c\cell\row
\cell pascal_type_print_varspec_prefix()\cell p-typeprint.c\cell\row
\cell pascal_type_print_varspec_suffix()\cell p-typeprint.c\cell\row
\cell pascal_val_print()\cell p-valprint.c\cell\row
\cell peek_die_abbrev()\cell dwarf2read.c\cell\row
\cell perror_with_name()\cell utils.c\cell\row
\cell pid_info()\cell infcmd.c\cell\row
\cell pos_atr()\cell ada-lang.c\cell\row
\cell print_float_info()\cell infcmd.c\cell\row
\cell print_frame_label_vars()\cell stack.c\cell\row
\cell print_object_command()\cell objc-lang.c\cell\row
\cell print_octal_chars()\cell valprint.c\cell\row
\cell print_scalar_formatted()\cell printcmd.c\cell\row
\cell print_single_dwarf_location()\cell dwarf2loc.c\cell\row
\cell print_source_lines_base()\cell source.c\cell\row
\cell print_subexp_standard()\cell expprint.c\cell\row
\cell print_type_scalar()\cell typeprint.c\cell\row
\cell print_vector_info()\cell infcmd.c\cell\row
\cell printf_command()\cell printcmd.c\cell\row
\cell processAttribute()\cell ada-exp.c\cell\row
\cell processInt()\cell ada-exp.c\cell\row
\cell push_expression_name()\cell jv-exp.c\cell\row
\cell push_qualified_expression_name()\cell jv-exp.c\cell\row
\cell put_frame_register()\cell frame.c\cell\row
\cell re_exec_1()\cell infcmd.c\cell\row
\cell re_exec_once()\cell infcmd.c\cell\row
\cell read_attribute_value()\cell dwarf2read.c\cell\row
\cell read_const()\cell ax-general.c\cell\row
\cell read_dbx_symtab()\cell dbxread.c\cell\row
\cell read_full_die()\cell dwarf2read.c\cell\row
\cell read_indirect_string()\cell dwarf2read.c\cell\row
\cell read_ofile_symtab()\cell dwarfread.c\cell\row
\cell read_ofile_symtab_from_oso()\cell dbxread.c\cell\row
\cell read_sleb128()\cell dwarf2expr.c\cell\row
\cell read_uleb128()\cell dwarf2expr.c\cell\row
\cell read_var_value()\cell findvar.c\cell\row
\cell readchar()\cell remote.c\cell\row
\cell registers_info()\cell infcmd.c\cell\row
\cell remote_async_wait()\cell remote.c\cell\row
\cell remote_detach()\cell remote.c\cell\row
\cell remote_disconnect()\cell remote.c\cell\row
\cell remote_fetch_registers()\cell remote.c\cell\row
\cell remote_get_noisy_reply()\cell tracepoint.c\cell\row
\cell remote_insert_hw_breakpoint()\cell remote.c\cell\row
\cell remote_insert_watchpoint()\cell remote.c\cell\row
\cell remote_macosx_attach()\cell remote.c\cell\row
\cell remote_macosx_create_inferior()\cell remote.c\cell\row
\cell remote_open_1()\cell remote.c\cell\row
\cell remote_rcmd()\cell remote.c\cell\row
\cell remote_remove_hw_breakpoint()\cell remote.c\cell\row
\cell remote_remove_watchpoint()\cell remote.c\cell\row
\cell remote_send()\cell remote.c\cell\row
\cell remote_store_registers()\cell remote.c\cell\row
\cell remote_threads_info()\cell remote.c\cell\row
\cell remote_wait()\cell remote.c\cell\row
\cell remote_xfer_partial()\cell remote.c\cell\row
\cell remove_all_typedefs()\cell gdbtypes.c\cell\row
\cell remove_symbol_file_command()\cell symfile.c\cell\row
\cell reread_symbols_for_objfile()\cell symfile.c\cell\row
\cell resolve_sal_pc()\cell breakpoint.c\cell\row
\cell resolve_subexp()\cell ada-lang.c\cell\row
\cell return_command()\cell stack.c\cell\row
\cell reverse_search_command()\cell source.c\cell\row
\cell run_command_1()\cell infcmd.c\cell\row
\cell save_breakpoints_command()\cell breakpoint.c\cell\row
\cell scm_lookup_name()\cell scm-lang.c\cell\row
\cell scm_lreadparen()\cell scm-exp.c\cell\row
\cell scm_lreadr()\cell scm-exp.c\cell\row
\cell scm_unpack()\cell scm-lang.c\cell\row
\cell scope_info()\cell tracepoint.c\cell\row
\cell search_struct_field()\cell valops.c\cell\row
\cell search_struct_method()\cell valops.c\cell\row
\cell search_symbols()\cell symtab.c\cell\row
\cell select_source_symtab()\cell source.c\cell\row
\cell selectors_info()\cell objc-lang.c\cell\row
\cell set_case_str()\cell language.c\cell\row
\cell set_cp_abi_cmd()\cell cp-abi.c\cell\row
\cell set_default_source_symtab_and_line()\cell source.c\cell\row
\cell set_ext_lang_command()\cell symfile.c\cell\row
\cell set_gdbarch_from_file()\cell arch-utils.c\cell\row
\cell set_history_size_command()\cell top.c\cell\row
\cell set_host_and_target_charsets()\cell charset.c\cell\row
\cell set_ignore_count()\cell breakpoint.c\cell\row
\cell set_input_radix_1()\cell valprint.c\cell\row
\cell set_interpreter_cmd()\cell interps.c\cell\row
\cell set_language_command()\cell language.c\cell\row
\cell set_max_remote_packet_size()\cell remote.c\cell\row
\cell set_memory_packet_size()\cell remote.c\cell\row
\cell set_output_radix_1()\cell valprint.c\cell\row
\cell set_range_str()\cell language.c\cell\row
\cell set_remote_debugflags_command()\cell remote.c\cell\row
\cell set_schedlock_helper()\cell infrun.c\cell\row
\cell set_scheduler_locking_mode()\cell infrun.c\cell\row
\cell set_system_call_allowed()\cell remote-fileio.c\cell\row
\cell set_type_str()\cell language.c\cell\row
\cell show_system_call_allowed()\cell remote-fileio.c\cell\row
\cell signal_command()\cell infcmd.c\cell\row
\cell simple_read_overlay_table()\cell symfile.c\cell\row
\cell skip_one_die()\cell dwarf2read.c\cell\row
\cell solib_add()\cell solib.c\cell\row
\cell solib_map_sections()\cell solib.c\cell\row
\cell sources_info()\cell symtab.c\cell\row
\cell stabsect_build_psymtabs()\cell dbxread.c\cell\row
\cell start_command()\cell infcmd.c\cell\row
\cell step_1_inlining()\cell infcmd.c\cell\row
\cell step_1_no_inlining()\cell infcmd.c\cell\row
\cell step_once()\cell infcmd.c\cell\row
\cell string_to_operator()\cell ada-exp.c\cell\row
\cell substitute_args()\cell macroexp.c\cell\row
\cell symbol_file_add_from_memory()\cell symfile-mem.c\cell\row
\cell symbol_file_add_with_addrs_or_offsets_using_objfile()\cell symfile.c\cell\row
\cell symbol_file_clear()\cell symfile.c\cell\row
\cell symbol_file_command()\cell symfile.c\cell\row
\cell symbol_found()\cell linespec.c\cell\row
\cell symbols_found()\cell linespec.c\cell\row
\cell symfile_bfd_open()\cell symfile.c\cell\row
\cell tag_type_to_type()\cell dwarf2read.c\cell\row
\cell target_preopen()\cell target/target.c\cell\row
\cell tcomplain()\cell target/target.c\cell\row
\cell thread_apply_all_command()\cell thread.c\cell\row
\cell thread_apply_command()\cell thread.c\cell\row
\cell thread_command()\cell thread.c\cell\row
\cell to_fixed_array_type()\cell ada-lang.c\cell\row
\cell trace_command()\cell tracepoint.c\cell\row
\cell trace_dump_command()\cell tracepoint.c\cell\row
\cell trace_error()\cell tracepoint.c\cell\row
\cell trace_find_command()\cell tracepoint.c\cell\row
\cell trace_find_line_command()\cell tracepoint.c\cell\row
\cell trace_find_outside_command()\cell tracepoint.c\cell\row
\cell trace_find_pc_command()\cell tracepoint.c\cell\row
\cell trace_find_range_command()\cell tracepoint.c\cell\row
\cell trace_find_tracepoint_command()\cell tracepoint.c\cell\row
\cell trace_pass_command()\cell tracepoint.c\cell\row
\cell trace_start_command()\cell tracepoint.c\cell\row
\cell trace_status_command()\cell tracepoint.c\cell\row
\cell trace_stop_command()\cell tracepoint.c\cell\row
\cell tracepoint_save_command()\cell tracepoint.c\cell\row
\cell trad_frame_get_prev_register()\cell trad-frame.c\cell\row
\cell typedef_print()\cell typeprint.c\cell\row
\cell undisplay_command()\cell printcmd.c\cell\row
\cell unk_lang_create_fundamental_type()\cell language.c\cell\row
\cell unk_lang_emit_char()\cell language.c\cell\row
\cell unk_lang_error()\cell language.c\cell\row
\cell unk_lang_print_type()\cell language.c\cell\row
\cell unk_lang_printchar()\cell language.c\cell\row
\cell unk_lang_printstr()\cell language.c\cell\row
\cell unk_lang_val_print()\cell language.c\cell\row
\cell unk_lang_value_print()\cell language.c\cell\row
\cell unmap_overlay_command()\cell symfile.c\cell\row
\cell unpack_long()\cell value.c\cell\row
\cell until_break_command()\cell breakpoint.c\cell\row
\cell until_command()\cell infcmd.c\cell\row
\cell until_next_command()\cell infcmd.c\cell\row
\cell up_silently_base()\cell stack.c\cell\row
\cell user_select_syms()\cell ada-lang.c\cell\row
\cell using_struct_return()\cell value.c\cell\row
\cell validate_actionline()\cell tracepoint.c\cell\row
\cell validate_format()\cell printcmd.c\cell\row
\cell value_addr()\cell valops.c\cell\row
\cell value_array()\cell valops.c\cell\row
\cell value_as_double()\cell value.c\cell\row
\cell value_assign()\cell valops.c\cell\row
\cell value_at()\cell valops.c\cell\row
\cell value_at_lazy()\cell valops.c\cell\row
\cell value_binop()\cell valarith.c\cell\row
\cell value_cast_1()\cell valops.c\cell\row
\cell value_coerce_array()\cell valops.c\cell\row
\cell value_coerce_function()\cell valops.c\cell\row
\cell value_complement()\cell valarith.c\cell\row
\cell value_concat()\cell valarith.c\cell\row
\cell value_equal()\cell valarith.c\cell\row
\cell value_find_oload_method_list()\cell valops.c\cell\row
\cell value_fn_field()\cell value.c\cell\row
\cell value_from_double()\cell value.c\cell\row
\cell value_from_longest()\cell value.c\cell\row
\cell value_in()\cell valarith.c\cell\row
\cell value_ind()\cell valops.c\cell\row
\cell value_less()\cell valarith.c\cell\row
\cell value_namespace_elt()\cell valops.c\cell\row
\cell value_neg()\cell valarith.c\cell\row
\cell value_nsstring()\cell objc-lang.c\cell\row
\cell value_of_builtin_frame_ps_reg()\cell std-regs.c\cell\row
\cell value_of_builtin_frame_sp_reg()\cell std-regs.c\cell\row
\cell value_of_child()\cell varobj.c\cell\row
\cell value_of_local()\cell valops.c\cell\row
\cell value_of_this()\cell valops.c\cell\row
\cell value_of_variable()\cell valops.c\cell\row
\cell value_pos()\cell valarith.c\cell\row
\cell value_repeat()\cell valops.c\cell\row
\cell value_slice()\cell valops.c\cell\row
\cell value_struct_elt()\cell valops.c\cell\row
\cell value_struct_elt_for_reference()\cell valops.c\cell\row
\cell value_sub()\cell valarith.c\cell\row
\cell value_subscript()\cell valarith.c\cell\row
\cell value_subscript_packed()\cell ada-lang.c\cell\row
\cell value_subscripted_rvalue()\cell valarith.c\cell\row
\cell value_val_atr()\cell ada-lang.c\cell\row
\cell value_x_binop()\cell valarith.c\cell\row
\cell value_x_unop()\cell valarith.c\cell\row
\cell varobj_get_handle()\cell varobj.c\cell\row
\cell varobj_lookup_struct_elt_type_by_index()\cell varobj.c\cell\row
\cell varobj_value_struct_elt_by_index()\cell varobj.c\cell\row
\cell watch_command_1()\cell breakpoint.c\cell\row
\cell while_stepping_pseudocommand()\cell tracepoint.c\cell\row
\cell write_object_renaming()\cell ada-exp.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function error_stream()\par}
{\s5\f1\fs20\ql\sb50\sa50 void error_stream ( struct ui_file* stream )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell ui_file_xstrdup()\cell ui-file.c\cell\row
Called by:\cell cplusplus_error()\cell linespec.c\cell\row
\cell delete_breakpoint()\cell breakpoint.c\cell\row
\cell memory_error()\cell corefile.c\cell\row
Refs Func:\cell xfree()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function fatal()\par}
{\s5\f1\fs20\ql\sb50\sa50 void fatal ( const char* string, ... )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell  __builtin_va_end(), __builtin_va_start(), throw_vfatal()\cell\cell\row
Called by:\cell quit()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function fprintf_filtered()\par}
{\s5\f1\fs20\ql\sb50\sa50 void fprintf_filtered ( struct ui_file* stream, const char* format, ... )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell vfprintf_filtered()\cell utils.c\cell\row
\cell  __builtin_va_end(), __builtin_va_start()\cell\cell\row
Called by:\cell ada_dump_subexp_body()\cell ada-lang.c\cell\row
\cell ada_emit_char()\cell ada-valprint.c\cell\row
\cell ada_print_floating()\cell ada-valprint.c\cell\row
\cell ada_print_scalar()\cell ada-valprint.c\cell\row
\cell ada_print_subexp()\cell ada-lang.c\cell\row
\cell ada_print_type()\cell ada-typeprint.c\cell\row
\cell ada_typedef_print()\cell ada-typeprint.c\cell\row
\cell ada_val_print_1()\cell ada-valprint.c\cell\row
\cell ada_value_print()\cell ada-valprint.c\cell\row
\cell ax_print()\cell ax-general.c\cell\row
\cell c_emit_char()\cell c-lang.c\cell\row
\cell c_printstr()\cell c-lang.c\cell\row
\cell c_type_print_args()\cell c-typeprint.c\cell\row
\cell c_type_print_base()\cell c-typeprint.c\cell\row
\cell c_type_print_modifier()\cell c-typeprint.c\cell\row
\cell c_type_print_varspec_prefix()\cell c-typeprint.c\cell\row
\cell c_type_print_varspec_suffix()\cell c-typeprint.c\cell\row
\cell c_val_print()\cell c-valprint.c\cell\row
\cell c_value_print()\cell c-valprint.c\cell\row
\cell catch_info()\cell stack.c\cell\row
\cell complaints_show_value()\cell complaints.c\cell\row
\cell cp_print_class_member()\cell cp-valprint.c\cell\row
\cell cp_print_class_method()\cell cp-valprint.c\cell\row
\cell cp_print_hpacc_virtual_table_entries()\cell cp-valprint.c\cell\row
\cell cp_print_value()\cell cp-valprint.c\cell\row
\cell cp_print_value_fields()\cell cp-valprint.c\cell\row
\cell cp_type_print_derivation_info()\cell c-typeprint.c\cell\row
\cell cp_type_print_method_args()\cell c-typeprint.c\cell\row
\cell default_print_registers_info()\cell infcmd.c\cell\row
\cell delete_breakpoint()\cell breakpoint.c\cell\row
\cell dump_msymbols()\cell symmisc.c\cell\row
\cell dump_prefix_expression()\cell expprint.c\cell\row
\cell dump_protocol_log()\cell remote.c\cell\row
\cell dump_psymtab()\cell symmisc.c\cell\row
\cell dump_raw_expression()\cell expprint.c\cell\row
\cell dump_subexp()\cell expprint.c\cell\row
\cell dump_subexp_body_standard()\cell expprint.c\cell\row
\cell dump_symtab_1()\cell symmisc.c\cell\row
\cell f77_create_arrayprint_offset_tbl()\cell f-valprint.c\cell\row
\cell f77_print_array_1()\cell f-valprint.c\cell\row
\cell f_emit_char()\cell f-lang.c\cell\row
\cell f_printstr()\cell f-lang.c\cell\row
\cell f_type_print_base()\cell f-typeprint.c\cell\row
\cell f_type_print_varspec_prefix()\cell f-typeprint.c\cell\row
\cell f_type_print_varspec_suffix()\cell f-typeprint.c\cell\row
\cell f_val_print()\cell f-valprint.c\cell\row
\cell find_oload_champ()\cell valops.c\cell\row
\cell gdb_print_host_address()\cell utils.c\cell\row
\cell hardwire_print_tty_state()\cell ser-unix.c\cell\row
\cell info_macro_command()\cell macrocmd.c\cell\row
\cell insert_bp_location()\cell breakpoint.c\cell\row
\cell java_emit_char()\cell jv-lang.c\cell\row
\cell java_print_value_fields()\cell jv-valprint.c\cell\row
\cell java_type_print_base()\cell jv-typeprint.c\cell\row
\cell java_type_print_derivation_info()\cell jv-typeprint.c\cell\row
\cell java_value_print()\cell jv-valprint.c\cell\row
\cell locexpr_describe_location()\cell dwarf2loc.c\cell\row
\cell loclist_describe_location()\cell dwarf2loc.c\cell\row
\cell m2_emit_char()\cell m2-lang.c\cell\row
\cell m2_printstr()\cell m2-lang.c\cell\row
\cell maintenance_print_msymbols()\cell symmisc.c\cell\row
\cell make_cleanup_set_restore_debugger_mode()\cell objc-lang.c\cell\row
\cell memory_error()\cell corefile.c\cell\row
\cell objc_emit_char()\cell objc-lang.c\cell\row
\cell objc_printstr()\cell objc-lang.c\cell\row
\cell pascal_object_print_class_member()\cell p-valprint.c\cell\row
\cell pascal_object_print_class_method()\cell p-valprint.c\cell\row
\cell pascal_object_print_value()\cell p-valprint.c\cell\row
\cell pascal_object_print_value_fields()\cell p-valprint.c\cell\row
\cell pascal_one_char()\cell p-lang.c\cell\row
\cell pascal_print_func_args()\cell p-typeprint.c\cell\row
\cell pascal_printstr()\cell p-lang.c\cell\row
\cell pascal_type_print_base()\cell p-typeprint.c\cell\row
\cell pascal_type_print_derivation_info()\cell p-typeprint.c\cell\row
\cell pascal_type_print_varspec_prefix()\cell p-typeprint.c\cell\row
\cell pascal_type_print_varspec_suffix()\cell p-typeprint.c\cell\row
\cell pascal_val_print()\cell p-valprint.c\cell\row
\cell pascal_value_print()\cell p-valprint.c\cell\row
\cell print_address_demangle()\cell printcmd.c\cell\row
\cell print_address_symbolic()\cell printcmd.c\cell\row
\cell print_array_type()\cell ada-typeprint.c\cell\row
\cell print_binary_chars()\cell valprint.c\cell\row
\cell print_block_frame_labels()\cell stack.c\cell\row
\cell print_block_frame_locals()\cell stack.c\cell\row
\cell print_choices()\cell ada-typeprint.c\cell\row
\cell print_decimal_chars()\cell valprint.c\cell\row
\cell print_dynamic_range_bound()\cell ada-typeprint.c\cell\row
\cell print_enum_type()\cell ada-typeprint.c\cell\row
\cell print_equivalent_f77_float_type()\cell f-typeprint.c\cell\row
\cell print_field_values()\cell ada-valprint.c\cell\row
\cell print_fixed_point_type()\cell ada-typeprint.c\cell\row
\cell print_float_info()\cell infcmd.c\cell\row
\cell print_floating()\cell valprint.c\cell\row
\cell print_floating_in_hex()\cell valprint.c\cell\row
\cell print_frame_arg_vars()\cell stack.c\cell\row
\cell print_frame_label_vars()\cell stack.c\cell\row
\cell print_frame_local_vars()\cell stack.c\cell\row
\cell print_frame_nameless_args()\cell stack.c\cell\row
\cell print_func_type()\cell ada-typeprint.c\cell\row
\cell print_gdb_version()\cell top.c\cell\row
\cell print_hex_chars_with_byte_order()\cell valprint.c\cell\row
\cell print_octal_chars()\cell valprint.c\cell\row
\cell print_optional_low_bound()\cell ada-valprint.c\cell\row
\cell print_ostype()\cell valprint.c\cell\row
\cell print_partial_symbols()\cell symmisc.c\cell\row
\cell print_range()\cell ada-typeprint.c\cell\row
\cell print_range_bound()\cell ada-typeprint.c\cell\row
\cell print_range_type_named()\cell ada-typeprint.c\cell\row
\cell print_record()\cell ada-valprint.c\cell\row
\cell print_record_field_types()\cell ada-typeprint.c\cell\row
\cell print_record_type()\cell ada-typeprint.c\cell\row
\cell print_scalar_formatted()\cell printcmd.c\cell\row
\cell print_single_dwarf_location()\cell dwarf2loc.c\cell\row
\cell print_subexp_standard()\cell expprint.c\cell\row
\cell print_symbol()\cell symmisc.c\cell\row
\cell print_type_scalar()\cell typeprint.c\cell\row
\cell print_unchecked_union_type()\cell ada-typeprint.c\cell\row
\cell print_variant_clauses()\cell ada-typeprint.c\cell\row
\cell print_variant_part()\cell ada-typeprint.c\cell\row
\cell print_vax_floating_point_type()\cell ada-typeprint.c\cell\row
\cell print_vector_info()\cell infcmd.c\cell\row
\cell printstr()\cell ada-valprint.c\cell\row
\cell range_error()\cell language.c\cell\row
\cell rank_one_type()\cell gdbtypes.c\cell\row
\cell read_frame()\cell remote.c\cell\row
\cell remote_backtrace_self()\cell remote.c\cell\row
\cell scm_ipruk()\cell scm-valprint.c\cell\row
\cell scm_printchar()\cell scm-lang.c\cell\row
\cell scm_printstr()\cell scm-lang.c\cell\row
\cell scm_scmval_print()\cell scm-valprint.c\cell\row
\cell scope_info()\cell tracepoint.c\cell\row
\cell show_addressprint()\cell valprint.c\cell\row
\cell show_annotation_level()\cell top.c\cell\row
\cell show_architecture()\cell arch-utils.c\cell\row
\cell show_asm_demangle()\cell utils.c\cell\row
\cell show_async_command_editing_p()\cell top.c\cell\row
\cell show_auto_solib_add()\cell solib.c\cell\row
\cell show_backtrace_limit()\cell frame.c\cell\row
\cell show_backtrace_past_entry()\cell frame.c\cell\row
\cell show_backtrace_past_main()\cell frame.c\cell\row
\cell show_can_use_hw_watchpoints()\cell breakpoint.c\cell\row
\cell show_caution()\cell top.c\cell\row
\cell show_chars_per_line()\cell utils.c\cell\row
\cell show_charset()\cell charset.c\cell\row
\cell show_coerce_float_to_double_p()\cell infcall.c\cell\row
\cell show_debug_debugmap()\cell dwarf2read.c\cell\row
\cell show_debug_file_directory()\cell symfile.c\cell\row
\cell show_debug_infrun()\cell infrun.c\cell\row
\cell show_debug_x86bt()\cell target/x86-shared-tdep.c\cell\row
\cell show_demangle()\cell utils.c\cell\row
\cell show_demangling_style_names()\cell demangle.c\cell\row
\cell show_download_write_size()\cell symfile.c\cell\row
\cell show_dwarf2_max_cache_age()\cell dwarf2read.c\cell\row
\cell show_exec_done_display_p()\cell top.c\cell\row
\cell show_expressiondebug()\cell parse.c\cell\row
\cell show_ext_args()\cell symfile.c\cell\row
\cell show_follow_fork_mode_string()\cell infrun.c\cell\row
\cell show_frame_debug()\cell frame.c\cell\row
\cell show_gdbarch_debug()\cell gdbarch.c\cell\row
\cell show_gnutarget_string()\cell corefile.c\cell\row
\cell show_history_filename()\cell top.c\cell\row
\cell show_history_size()\cell top.c\cell\row
\cell show_host_charset_name()\cell charset.c\cell\row
\cell show_input_radix()\cell valprint.c\cell\row
\cell show_lines_per_page()\cell utils.c\cell\row
\cell show_lines_to_list()\cell source.c\cell\row
\cell show_maintenance_profile_p()\cell maint.c\cell\row
\cell show_max_symbolic_offset()\cell printcmd.c\cell\row
\cell show_new_async_prompt()\cell top.c\cell\row
\cell show_objectprint()\cell cp-valprint.c\cell\row
\cell show_observer_debug()\cell observer.c\cell\row
\cell show_opaque_type_resolution()\cell gdbtypes.c\cell\row
\cell show_osabi()\cell osabi.c\cell\row
\cell show_output_radix()\cell valprint.c\cell\row
\cell show_overload_debug()\cell gdbtypes.c\cell\row
\cell show_overload_resolution()\cell valops.c\cell\row
\cell show_pagination_enabled()\cell utils.c\cell\row
\cell show_pascal_static_field_print()\cell p-valprint.c\cell\row
\cell show_pathname_substitutions()\cell source.c\cell\row
\cell show_pending_break_support()\cell breakpoint.c\cell\row
\cell show_pp_source_pos()\cell macrocmd.c\cell\row
\cell show_prettyprint_arrays()\cell valprint.c\cell\row
\cell show_prettyprint_structs()\cell valprint.c\cell\row
\cell show_print_max()\cell valprint.c\cell\row
\cell show_print_symbol_filename()\cell printcmd.c\cell\row
\cell show_repeat_count_threshold()\cell valprint.c\cell\row
\cell show_scheduler_mode()\cell infrun.c\cell\row
\cell show_sevenbit_strings()\cell utils.c\cell\row
\cell show_solib_search_path()\cell solib.c\cell\row
\cell show_static_field_print()\cell cp-valprint.c\cell\row
\cell show_step_stop_if_no_debug()\cell infrun.c\cell\row
\cell show_stop_on_solib_events()\cell infrun.c\cell\row
\cell show_stop_print_at_null()\cell valprint.c\cell\row
\cell show_symbol_reloading()\cell symfile.c\cell\row
\cell show_target_charset_name()\cell charset.c\cell\row
\cell show_targetdebug()\cell target/target.c\cell\row
\cell show_trust_readonly()\cell target/target.c\cell\row
\cell show_unionprint()\cell valprint.c\cell\row
\cell show_unwind_on_signal_p()\cell infcall.c\cell\row
\cell show_varobjdebug()\cell varobj.c\cell\row
\cell show_vtblprint()\cell cp-valprint.c\cell\row
\cell show_watchdog()\cell maint.c\cell\row
\cell show_write_history_p()\cell top.c\cell\row
\cell target_xfer_partial()\cell target/target.c\cell\row
\cell type_error()\cell language.c\cell\row
\cell typedef_print()\cell typeprint.c\cell\row
\cell val_print()\cell valprint.c\cell\row
\cell val_print_array_elements()\cell valprint.c\cell\row
\cell val_print_packed_array_elements()\cell ada-valprint.c\cell\row
\cell val_print_string()\cell valprint.c\cell\row
\cell value_check_printable()\cell valprint.c\cell\row
\cell vcomplaint()\cell complaints.c\cell\row
Used in:\cell fputstr_filtered()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function fprintf_symbol_filtered()\par}
{\s5\f1\fs20\ql\sb50\sa50 void fprintf_symbol_filtered ( struct ui_file* stream, const char* name, enum language lang, int arg_mode )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell fputs_filtered()\cell utils.c\cell\row
\cell language_def()\cell language.c\cell\row
\cell language_demangle()\cell language.c\cell\row
\cell xfree()\cell utils.c\cell\row
Called by:\cell address_info()\cell printcmd.c\cell\row
\cell cp_print_value_fields()\cell cp-valprint.c\cell\row
\cell cp_type_print_method_args()\cell c-typeprint.c\cell\row
\cell frame_info()\cell stack.c\cell\row
\cell java_print_value_fields()\cell jv-valprint.c\cell\row
\cell pascal_object_print_value_fields()\cell p-valprint.c\cell\row
\cell print_field_values()\cell ada-valprint.c\cell\row
\cell print_frame()\cell stack.c\cell\row
\cell print_frame_args()\cell stack.c\cell\row
\cell print_inlined_frame()\cell inlining.c\cell\row
Refs Var:\cell demangle\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function fprintf_unfiltered()\par}
{\s5\f1\fs20\ql\sb50\sa50 void fprintf_unfiltered ( struct ui_file* stream, const char* format, ... )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell vfprintf_unfiltered()\cell utils.c\cell\row
\cell  __builtin_va_end(), __builtin_va_start()\cell\cell\row
Called by:\cell ada_lookup_struct_elt_type()\cell ada-lang.c\cell\row
\cell add_language()\cell language.c\cell\row
\cell add_path()\cell source.c\cell\row
\cell async_remote_interrupt()\cell remote.c\cell\row
\cell async_remote_interrupt_twice()\cell remote.c\cell\row
\cell captured_main()\cell main.c\cell\row
\cell check_binary_download()\cell remote.c\cell\row
\cell check_inlined_function_calls()\cell dwarf2read.c\cell\row
\cell convert_oso_map_to_final_map()\cell dwarf2read.c\cell\row
\cell cplusplus_error()\cell linespec.c\cell\row
\cell create_kext_addr_map()\cell dwarf2read.c\cell\row
\cell create_new_frame()\cell frame.c\cell\row
\cell create_sentinel_frame()\cell frame.c\cell\row
\cell dbx_psymtab_to_symtab()\cell dbxread.c\cell\row
\cell dbx_psymtab_to_symtab_1()\cell dbxread.c\cell\row
\cell debug_check_is_objfile_loaded()\cell target/target.c\cell\row
\cell debug_free_thread_inferior_status()\cell target/target.c\cell\row
\cell debug_keep_going()\cell target/target.c\cell\row
\cell debug_load_solib()\cell target/target.c\cell\row
\cell debug_print_register()\cell target/target.c\cell\row
\cell debug_restore_thread_inferior_status()\cell target/target.c\cell\row
\cell debug_save_thread_inferior_status()\cell target/target.c\cell\row
\cell debug_to_acknowledge_created_inferior()\cell target/target.c\cell\row
\cell debug_to_attach()\cell target/target.c\cell\row
\cell debug_to_can_run()\cell target/target.c\cell\row
\cell debug_to_can_use_hw_breakpoint()\cell target/target.c\cell\row
\cell debug_to_close()\cell target/target.c\cell\row
\cell debug_to_create_inferior()\cell target/target.c\cell\row
\cell debug_to_detach()\cell target/target.c\cell\row
\cell debug_to_disconnect()\cell target/target.c\cell\row
\cell debug_to_enable_exception_callback()\cell target/target.c\cell\row
\cell debug_to_files_info()\cell target/target.c\cell\row
\cell debug_to_find_exception_catchpoints()\cell target/target.c\cell\row
\cell debug_to_follow_fork()\cell target/target.c\cell\row
\cell debug_to_get_current_exception_event()\cell target/target.c\cell\row
\cell debug_to_has_exited()\cell target/target.c\cell\row
\cell debug_to_insert_breakpoint()\cell target/target.c\cell\row
\cell debug_to_insert_exec_catchpoint()\cell target/target.c\cell\row
\cell debug_to_insert_fork_catchpoint()\cell target/target.c\cell\row
\cell debug_to_insert_hw_breakpoint()\cell target/target.c\cell\row
\cell debug_to_insert_vfork_catchpoint()\cell target/target.c\cell\row
\cell debug_to_insert_watchpoint()\cell target/target.c\cell\row
\cell debug_to_kill()\cell target/target.c\cell\row
\cell debug_to_load()\cell target/target.c\cell\row
\cell debug_to_lookup_symbol()\cell target/target.c\cell\row
\cell debug_to_mourn_inferior()\cell target/target.c\cell\row
\cell debug_to_notice_signals()\cell target/target.c\cell\row
\cell debug_to_open()\cell target/target.c\cell\row
\cell debug_to_pid_to_exec_file()\cell target/target.c\cell\row
\cell debug_to_pid_to_str()\cell target/target.c\cell\row
\cell debug_to_post_attach()\cell target/target.c\cell\row
\cell debug_to_post_startup_inferior()\cell target/target.c\cell\row
\cell debug_to_prepare_to_store()\cell target/target.c\cell\row
\cell debug_to_rcmd()\cell target/target.c\cell\row
\cell debug_to_region_size_ok_for_hw_watchpoint()\cell target/target.c\cell\row
\cell debug_to_remove_breakpoint()\cell target/target.c\cell\row
\cell debug_to_remove_exec_catchpoint()\cell target/target.c\cell\row
\cell debug_to_remove_fork_catchpoint()\cell target/target.c\cell\row
\cell debug_to_remove_hw_breakpoint()\cell target/target.c\cell\row
\cell debug_to_remove_vfork_catchpoint()\cell target/target.c\cell\row
\cell debug_to_remove_watchpoint()\cell target/target.c\cell\row
\cell debug_to_reported_exec_events_per_exec_call()\cell target/target.c\cell\row
\cell debug_to_resume()\cell target/target.c\cell\row
\cell debug_to_stop()\cell target/target.c\cell\row
\cell debug_to_stopped_by_watchpoint()\cell target/target.c\cell\row
\cell debug_to_stopped_data_address()\cell target/target.c\cell\row
\cell debug_to_store_registers()\cell target/target.c\cell\row
\cell debug_to_terminal_inferior()\cell target/target.c\cell\row
\cell debug_to_terminal_info()\cell target/target.c\cell\row
\cell debug_to_terminal_init()\cell target/target.c\cell\row
\cell debug_to_terminal_ours()\cell target/target.c\cell\row
\cell debug_to_terminal_ours_for_output()\cell target/target.c\cell\row
\cell debug_to_terminal_save_ours()\cell target/target.c\cell\row
\cell debug_to_thread_alive()\cell target/target.c\cell\row
\cell debug_to_wait()\cell target/target.c\cell\row
\cell delete_breakpoint()\cell breakpoint.c\cell\row
\cell deprecated_debug_xfer_memory()\cell target/target.c\cell\row
\cell deprecated_update_frame_base_hack()\cell frame.c\cell\row
\cell deprecated_update_frame_pc_hack()\cell frame.c\cell\row
\cell disable_current_display()\cell printcmd.c\cell\row
\cell do_end_debugger_mode()\cell objc-lang.c\cell\row
\cell do_reset_debug_mode_flag()\cell objc-lang.c\cell\row
\cell dump_die()\cell dwarf2read.c\cell\row
\cell dump_endian_bytes()\cell regcache.c\cell\row
\cell dump_psymtab()\cell symmisc.c\cell\row
\cell dwarf2_record_line()\cell dwarf2read.c\cell\row
\cell find_arch_by_info()\cell gdbarch.c\cell\row
\cell find_implementation()\cell objc-lang.c\cell\row
\cell find_implementation_from_class()\cell objc-lang.c\cell\row
\cell flush_cached_frames()\cell frame.c\cell\row
\cell fprint_dummy_frames()\cell dummy-frame.c\cell\row
\cell fprint_field()\cell frame.c\cell\row
\cell fprint_frame()\cell frame.c\cell\row
\cell fprint_frame_id()\cell frame.c\cell\row
\cell fprint_frame_type()\cell frame.c\cell\row
\cell frame_debug_got_null_frame()\cell frame.c\cell\row
\cell frame_func_unwind()\cell frame.c\cell\row
\cell frame_id_eq()\cell frame.c\cell\row
\cell frame_id_inner()\cell frame.c\cell\row
\cell frame_id_p()\cell frame.c\cell\row
\cell frame_pc_unwind()\cell frame.c\cell\row
\cell frame_register_unwind()\cell frame.c\cell\row
\cell gdbarch_addr_bit()\cell gdbarch.c\cell\row
\cell gdbarch_addr_bits_remove()\cell gdbarch.c\cell\row
\cell gdbarch_address_class_name_to_type_flags()\cell gdbarch.c\cell\row
\cell gdbarch_address_class_type_flags()\cell gdbarch.c\cell\row
\cell gdbarch_address_class_type_flags_to_name()\cell gdbarch.c\cell\row
\cell gdbarch_address_to_pointer()\cell gdbarch.c\cell\row
\cell gdbarch_adjust_breakpoint_address()\cell gdbarch.c\cell\row
\cell gdbarch_adjust_ehframe_regnum()\cell gdbarch.c\cell\row
\cell gdbarch_believe_pcc_promotion()\cell gdbarch.c\cell\row
\cell gdbarch_bfd_arch_info()\cell gdbarch.c\cell\row
\cell gdbarch_bfd_vma_bit()\cell gdbarch.c\cell\row
\cell gdbarch_breakpoint_from_pc()\cell gdbarch.c\cell\row
\cell gdbarch_byte_order()\cell gdbarch.c\cell\row
\cell gdbarch_call_dummy_location()\cell gdbarch.c\cell\row
\cell gdbarch_cannot_fetch_register()\cell gdbarch.c\cell\row
\cell gdbarch_cannot_step_breakpoint()\cell gdbarch.c\cell\row
\cell gdbarch_cannot_store_register()\cell gdbarch.c\cell\row
\cell gdbarch_char_signed()\cell gdbarch.c\cell\row
\cell gdbarch_coff_make_msymbol_special()\cell gdbarch.c\cell\row
\cell gdbarch_construct_inferior_arguments()\cell gdbarch.c\cell\row
\cell gdbarch_convert_from_func_ptr_addr()\cell gdbarch.c\cell\row
\cell gdbarch_convert_register_p()\cell gdbarch.c\cell\row
\cell gdbarch_dbx_make_msymbol_special()\cell gdbarch.c\cell\row
\cell gdbarch_decr_pc_after_break()\cell gdbarch.c\cell\row
\cell gdbarch_deprecated_extract_return_value()\cell gdbarch.c\cell\row
\cell gdbarch_deprecated_extract_struct_value_address()\cell gdbarch.c\cell\row
\cell gdbarch_deprecated_fp_regnum()\cell gdbarch.c\cell\row
\cell gdbarch_deprecated_function_start_offset()\cell gdbarch.c\cell\row
\cell gdbarch_deprecated_push_arguments()\cell gdbarch.c\cell\row
\cell gdbarch_deprecated_reg_struct_has_addr()\cell gdbarch.c\cell\row
\cell gdbarch_deprecated_register_byte()\cell gdbarch.c\cell\row
\cell gdbarch_deprecated_register_size()\cell gdbarch.c\cell\row
\cell gdbarch_deprecated_saved_pc_after_call()\cell gdbarch.c\cell\row
\cell gdbarch_deprecated_stack_align()\cell gdbarch.c\cell\row
\cell gdbarch_deprecated_store_return_value()\cell gdbarch.c\cell\row
\cell gdbarch_deprecated_store_struct_return()\cell gdbarch.c\cell\row
\cell gdbarch_deprecated_use_struct_convention()\cell gdbarch.c\cell\row
\cell gdbarch_double_bit()\cell gdbarch.c\cell\row
\cell gdbarch_double_format()\cell gdbarch.c\cell\row
\cell gdbarch_dump()\cell gdbarch.c\cell\row
\cell gdbarch_dwarf2_reg_to_regnum()\cell gdbarch.c\cell\row
\cell gdbarch_dwarf_reg_to_regnum()\cell gdbarch.c\cell\row
\cell gdbarch_ecoff_reg_to_regnum()\cell gdbarch.c\cell\row
\cell gdbarch_elf_make_msymbol_special()\cell gdbarch.c\cell\row
\cell gdbarch_extract_return_value()\cell gdbarch.c\cell\row
\cell gdbarch_fetch_pointer_argument()\cell gdbarch.c\cell\row
\cell gdbarch_fetch_tls_load_module_address()\cell gdbarch.c\cell\row
\cell gdbarch_float_bit()\cell gdbarch.c\cell\row
\cell gdbarch_float_format()\cell gdbarch.c\cell\row
\cell gdbarch_fp0_regnum()\cell gdbarch.c\cell\row
\cell gdbarch_frame_align()\cell gdbarch.c\cell\row
\cell gdbarch_frame_args_skip()\cell gdbarch.c\cell\row
\cell gdbarch_frame_num_args()\cell gdbarch.c\cell\row
\cell gdbarch_frame_red_zone_size()\cell gdbarch.c\cell\row
\cell gdbarch_get_longjmp_target()\cell gdbarch.c\cell\row
\cell gdbarch_have_nonsteppable_watchpoint()\cell gdbarch.c\cell\row
\cell gdbarch_in_function_epilogue_p()\cell gdbarch.c\cell\row
\cell gdbarch_in_solib_return_trampoline()\cell gdbarch.c\cell\row
\cell gdbarch_info_fill()\cell arch-utils.c\cell\row
\cell gdbarch_inner_than()\cell gdbarch.c\cell\row
\cell gdbarch_int_bit()\cell gdbarch.c\cell\row
\cell gdbarch_integer_to_address()\cell gdbarch.c\cell\row
\cell gdbarch_long_bit()\cell gdbarch.c\cell\row
\cell gdbarch_long_double_bit()\cell gdbarch.c\cell\row
\cell gdbarch_long_double_format()\cell gdbarch.c\cell\row
\cell gdbarch_long_long_bit()\cell gdbarch.c\cell\row
\cell gdbarch_memory_insert_breakpoint()\cell gdbarch.c\cell\row
\cell gdbarch_memory_remove_breakpoint()\cell gdbarch.c\cell\row
\cell gdbarch_name_of_malloc()\cell gdbarch.c\cell\row
\cell gdbarch_num_pseudo_regs()\cell gdbarch.c\cell\row
\cell gdbarch_num_regs()\cell gdbarch.c\cell\row
\cell gdbarch_osabi()\cell gdbarch.c\cell\row
\cell gdbarch_pc_regnum()\cell gdbarch.c\cell\row
\cell gdbarch_pointer_to_address()\cell gdbarch.c\cell\row
\cell gdbarch_print_float_info()\cell gdbarch.c\cell\row
\cell gdbarch_print_insn()\cell gdbarch.c\cell\row
\cell gdbarch_print_registers_info()\cell gdbarch.c\cell\row
\cell gdbarch_print_vector_info()\cell gdbarch.c\cell\row
\cell gdbarch_ps_regnum()\cell gdbarch.c\cell\row
\cell gdbarch_pseudo_register_read()\cell gdbarch.c\cell\row
\cell gdbarch_pseudo_register_write()\cell gdbarch.c\cell\row
\cell gdbarch_ptr_bit()\cell gdbarch.c\cell\row
\cell gdbarch_push_dummy_call()\cell gdbarch.c\cell\row
\cell gdbarch_push_dummy_code()\cell gdbarch.c\cell\row
\cell gdbarch_read_pc()\cell gdbarch.c\cell\row
\cell gdbarch_read_sp()\cell gdbarch.c\cell\row
\cell gdbarch_register()\cell gdbarch.c\cell\row
\cell gdbarch_register_bytes_ok()\cell gdbarch.c\cell\row
\cell gdbarch_register_name()\cell gdbarch.c\cell\row
\cell gdbarch_register_reggroup_p()\cell gdbarch.c\cell\row
\cell gdbarch_register_sim_regno()\cell gdbarch.c\cell\row
\cell gdbarch_register_to_value()\cell gdbarch.c\cell\row
\cell gdbarch_register_type()\cell gdbarch.c\cell\row
\cell gdbarch_regset_from_core_section()\cell gdbarch.c\cell\row
\cell gdbarch_remote_translate_xfer_address()\cell gdbarch.c\cell\row
\cell gdbarch_return_value()\cell gdbarch.c\cell\row
\cell gdbarch_sdb_reg_to_regnum()\cell gdbarch.c\cell\row
\cell gdbarch_short_bit()\cell gdbarch.c\cell\row
\cell gdbarch_single_step_through_delay()\cell gdbarch.c\cell\row
\cell gdbarch_skip_prologue()\cell gdbarch.c\cell\row
\cell gdbarch_skip_prologue_addr_ctx()\cell gdbarch.c\cell\row
\cell gdbarch_skip_solib_resolver()\cell gdbarch.c\cell\row
\cell gdbarch_skip_trampoline_code()\cell gdbarch.c\cell\row
\cell gdbarch_smash_text_address()\cell gdbarch.c\cell\row
\cell gdbarch_software_single_step()\cell gdbarch.c\cell\row
\cell gdbarch_sp_regnum()\cell gdbarch.c\cell\row
\cell gdbarch_stab_reg_to_regnum()\cell gdbarch.c\cell\row
\cell gdbarch_stabs_argument_has_addr()\cell gdbarch.c\cell\row
\cell gdbarch_store_return_value()\cell gdbarch.c\cell\row
\cell gdbarch_unwind_dummy_id()\cell gdbarch.c\cell\row
\cell gdbarch_unwind_pc()\cell gdbarch.c\cell\row
\cell gdbarch_unwind_sp()\cell gdbarch.c\cell\row
\cell gdbarch_update_p()\cell arch-utils.c\cell\row
\cell gdbarch_value_to_register()\cell gdbarch.c\cell\row
\cell gdbarch_virtual_frame_pointer()\cell gdbarch.c\cell\row
\cell gdbarch_write_pc()\cell gdbarch.c\cell\row
\cell get_class_address_from_object()\cell objc-lang.c\cell\row
\cell get_frame_id()\cell frame.c\cell\row
\cell get_prev_frame_1()\cell frame.c\cell\row
\cell getpkt_sane()\cell remote.c\cell\row
\cell handle_inferior_event()\cell infrun.c\cell\row
\cell hardwire_raw()\cell ser-unix.c\cell\row
\cell insert_bp_location()\cell breakpoint.c\cell\row
\cell insert_breakpoints()\cell breakpoint.c\cell\row
\cell insert_step_resume_breakpoint_at_frame()\cell infrun.c\cell\row
\cell make_cleanup_set_restore_debugger_mode()\cell objc-lang.c\cell\row
\cell memory_error()\cell corefile.c\cell\row
\cell new_gdbarch_tdep()\cell gdbarch.c\cell\row
\cell new_objc_runtime_class_getClass()\cell objc-lang.c\cell\row
\cell new_objc_runtime_find_impl()\cell objc-lang.c\cell\row
\cell objc_fixup_ivar_offset()\cell objc-lang.c\cell\row
\cell objc_setup_safe_print()\cell objc-lang.c\cell\row
\cell observer_notify_executable_changed()\cell observer.c\cell\row
\cell observer_notify_inferior_created()\cell observer.c\cell\row
\cell observer_notify_normal_stop()\cell observer.c\cell\row
\cell observer_notify_solib_loaded()\cell observer.c\cell\row
\cell observer_notify_solib_unloaded()\cell observer.c\cell\row
\cell observer_notify_target_changed()\cell observer.c\cell\row
\cell packet_ok()\cell remote.c\cell\row
\cell parser_fprintf()\cell parse.c\cell\row
\cell pop_target()\cell target/target.c\cell\row
\cell prepare_to_wait()\cell infrun.c\cell\row
\cell print_subexp_standard()\cell expprint.c\cell\row
\cell print_sys_errmsg()\cell utils.c\cell\row
\cell proceed()\cell infrun.c\cell\row
\cell push_target()\cell target/target.c\cell\row
\cell putpkt_binary()\cell remote.c\cell\row
\cell puts_debug()\cell utils.c\cell\row
\cell read_objc_object()\cell objc-lang.c\cell\row
\cell record_line()\cell buildsym.c\cell\row
\cell regcache_dump()\cell regcache.c\cell\row
\cell reggroups_dump()\cell reggroups.c\cell\row
\cell remote_fetch_registers()\cell remote.c\cell\row
\cell remote_interrupt()\cell remote.c\cell\row
\cell remote_stop()\cell remote.c\cell\row
\cell reschedule()\cell ser-base.c\cell\row
\cell resume()\cell infrun.c\cell\row
\cell save_breakpoints_command()\cell breakpoint.c\cell\row
\cell ser_base_async()\cell ser-base.c\cell\row
\cell serial_logchar()\cell serial.c\cell\row
\cell serial_readchar()\cell serial.c\cell\row
\cell stop_stepping()\cell infrun.c\cell\row
\cell target_xfer_partial()\cell target/target.c\cell\row
\cell terminal_inferior()\cell inflow.c\cell\row
\cell translate_common_symbol_debug_map_address()\cell dwarf2read.c\cell\row
\cell translate_debug_map_address()\cell dwarf2read.c\cell\row
\cell translate_debug_map_address_with_tuple()\cell dwarf2read.c\cell\row
\cell uninstall_variable()\cell varobj.c\cell\row
\cell varobj_update()\cell varobj.c\cell\row
\cell verify_gdbarch()\cell gdbarch.c\cell\row
\cell vwarning()\cell utils.c\cell\row
\cell wait_for_inferior()\cell infrun.c\cell\row
\cell write_one_breakpoint()\cell breakpoint.c\cell\row
Used in:\cell fputstr_unfiltered()\cell utils.c\cell\row
\cell fputstrn_unfiltered()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function fprintfi_filtered()\par}
{\s5\f1\fs20\ql\sb50\sa50 void fprintfi_filtered ( int spaces, struct ui_file* stream, const char* format, ... )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell print_spaces_filtered()\cell utils.c\cell\row
\cell vfprintf_filtered()\cell utils.c\cell\row
\cell  __builtin_va_end(), __builtin_va_start()\cell\cell\row
Called by:\cell c_type_print_base()\cell c-typeprint.c\cell\row
\cell java_type_print_base()\cell jv-typeprint.c\cell\row
\cell pascal_type_print_base()\cell p-typeprint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function fputc_filtered()\par}
{\s5\f1\fs20\ql\sb50\sa50 int fputc_filtered ( int c, struct ui_file* stream )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell fputs_filtered()\cell utils.c\cell\row
Called by:\cell c_printchar()\cell c-lang.c\cell\row
\cell field_separator()\cell cli-out.c\cell\row
\cell java_emit_char()\cell jv-lang.c\cell\row
\cell putchar_filtered()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function fputc_unfiltered()\par}
{\s5\f1\fs20\ql\sb50\sa50 int fputc_unfiltered ( int c, struct ui_file* stream )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell ui_file_write()\cell ui-file.c\cell\row
Called by:\cell deprecated_debug_xfer_memory()\cell target/target.c\cell\row
\cell fputs_maybe_filtered()\cell utils.c\cell\row
\cell putpkt_binary()\cell remote.c\cell\row
\cell puts_debug()\cell utils.c\cell\row
\cell remote_rcmd()\cell remote.c\cell\row
\cell save_breakpoints_command()\cell breakpoint.c\cell\row
\cell serial_logchar()\cell serial.c\cell\row
\cell target_xfer_partial()\cell target/target.c\cell\row
\cell write_one_breakpoint()\cell breakpoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function fputs_filtered()\par}
{\s5\f1\fs20\ql\sb50\sa50 void fputs_filtered ( const char* linebuffer, struct ui_file* stream )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell fputs_maybe_filtered()\cell utils.c\cell\row
Called by:\cell ada_print_scalar()\cell ada-valprint.c\cell\row
\cell ada_print_subexp()\cell ada-lang.c\cell\row
\cell ada_printchar()\cell ada-valprint.c\cell\row
\cell ada_val_print_1()\cell ada-valprint.c\cell\row
\cell ax_print()\cell ax-general.c\cell\row
\cell c_emit_char()\cell c-lang.c\cell\row
\cell c_print_type()\cell c-typeprint.c\cell\row
\cell c_print_typename_possibly_quoted()\cell c-typeprint.c\cell\row
\cell c_printstr()\cell c-lang.c\cell\row
\cell c_type_print_base()\cell c-typeprint.c\cell\row
\cell c_type_print_varspec_prefix()\cell c-typeprint.c\cell\row
\cell c_type_print_varspec_suffix()\cell c-typeprint.c\cell\row
\cell c_val_print()\cell c-valprint.c\cell\row
\cell cli_text()\cell cli-out.c\cell\row
\cell cp_print_class_member()\cell cp-valprint.c\cell\row
\cell cp_print_class_method()\cell cp-valprint.c\cell\row
\cell cp_print_hpacc_virtual_table_entries()\cell cp-valprint.c\cell\row
\cell cp_print_static_field()\cell cp-valprint.c\cell\row
\cell cp_print_value()\cell cp-valprint.c\cell\row
\cell cp_print_value_fields()\cell cp-valprint.c\cell\row
\cell cp_type_print_derivation_info()\cell c-typeprint.c\cell\row
\cell cp_type_print_method_args()\cell c-typeprint.c\cell\row
\cell dbx_psymtab_to_symtab_1()\cell dbxread.c\cell\row
\cell default_print_registers_info()\cell infcmd.c\cell\row
\cell deprecated_print_address_numeric()\cell printcmd.c\cell\row
\cell dump_msymbols()\cell symmisc.c\cell\row
\cell dump_prefix_expression()\cell expprint.c\cell\row
\cell dwarf2_debug_map_psymtab_to_symtab()\cell dwarf2read.c\cell\row
\cell dwarf2_kext_psymtab_to_symtab()\cell dwarf2read.c\cell\row
\cell f_emit_char()\cell f-lang.c\cell\row
\cell f_print_type()\cell f-typeprint.c\cell\row
\cell f_printchar()\cell f-lang.c\cell\row
\cell f_printstr()\cell f-lang.c\cell\row
\cell f_type_print_base()\cell f-typeprint.c\cell\row
\cell f_val_print()\cell f-valprint.c\cell\row
\cell fprintf_symbol_filtered()\cell utils.c\cell\row
\cell fputc_filtered()\cell utils.c\cell\row
\cell getpkt_sane()\cell remote.c\cell\row
\cell info_macro_command()\cell macrocmd.c\cell\row
\cell java_emit_char()\cell jv-lang.c\cell\row
\cell java_print_type()\cell jv-typeprint.c\cell\row
\cell java_print_value_fields()\cell jv-valprint.c\cell\row
\cell java_type_print_base()\cell jv-typeprint.c\cell\row
\cell java_type_print_derivation_info()\cell jv-typeprint.c\cell\row
\cell java_val_print()\cell jv-valprint.c\cell\row
\cell java_value_print()\cell jv-valprint.c\cell\row
\cell kill_command()\cell inflow.c\cell\row
\cell m2_emit_char()\cell m2-lang.c\cell\row
\cell m2_printchar()\cell m2-lang.c\cell\row
\cell m2_printstr()\cell m2-lang.c\cell\row
\cell macro_expand_command()\cell macrocmd.c\cell\row
\cell macro_expand_once_command()\cell macrocmd.c\cell\row
\cell objc_emit_char()\cell objc-lang.c\cell\row
\cell objc_printchar()\cell objc-lang.c\cell\row
\cell objc_printstr()\cell objc-lang.c\cell\row
\cell output_source_filename()\cell symtab.c\cell\row
\cell pascal_emit_char()\cell p-lang.c\cell\row
\cell pascal_object_print_class_member()\cell p-valprint.c\cell\row
\cell pascal_object_print_class_method()\cell p-valprint.c\cell\row
\cell pascal_object_print_static_field()\cell p-valprint.c\cell\row
\cell pascal_object_print_value()\cell p-valprint.c\cell\row
\cell pascal_object_print_value_fields()\cell p-valprint.c\cell\row
\cell pascal_one_char()\cell p-lang.c\cell\row
\cell pascal_print_func_args()\cell p-typeprint.c\cell\row
\cell pascal_print_type()\cell p-typeprint.c\cell\row
\cell pascal_printchar()\cell p-lang.c\cell\row
\cell pascal_printstr()\cell p-lang.c\cell\row
\cell pascal_type_print_base()\cell p-typeprint.c\cell\row
\cell pascal_type_print_derivation_info()\cell p-typeprint.c\cell\row
\cell pascal_type_print_method_args()\cell p-typeprint.c\cell\row
\cell pascal_type_print_varspec_prefix()\cell p-typeprint.c\cell\row
\cell pascal_val_print()\cell p-valprint.c\cell\row
\cell print_address_symbolic()\cell printcmd.c\cell\row
\cell print_block_frame_labels()\cell stack.c\cell\row
\cell print_block_frame_locals()\cell stack.c\cell\row
\cell print_enum_type()\cell ada-typeprint.c\cell\row
\cell print_field_values()\cell ada-valprint.c\cell\row
\cell print_floating()\cell valprint.c\cell\row
\cell print_floating_in_hex()\cell valprint.c\cell\row
\cell print_frame_arg_vars()\cell stack.c\cell\row
\cell print_func_type()\cell ada-typeprint.c\cell\row
\cell print_function_pointer_address()\cell c-valprint.c\cell\row
\cell print_hex_chars_with_byte_order()\cell valprint.c\cell\row
\cell print_longest()\cell valprint.c\cell\row
\cell print_octal_chars()\cell valprint.c\cell\row
\cell print_partial_symbols()\cell symmisc.c\cell\row
\cell print_scalar_formatted()\cell printcmd.c\cell\row
\cell print_spaces_filtered()\cell utils.c\cell\row
\cell print_subexp_standard()\cell expprint.c\cell\row
\cell print_symbol_info()\cell symtab.c\cell\row
\cell print_type_scalar()\cell typeprint.c\cell\row
\cell printstr()\cell ada-valprint.c\cell\row
\cell psymtab_to_symtab_1()\cell mdebugread.c\cell\row
\cell puts_filtered()\cell utils.c\cell\row
\cell puts_filtered_tabular()\cell utils.c\cell\row
\cell read_frame()\cell remote.c\cell\row
\cell scm_scmlist_print()\cell scm-valprint.c\cell\row
\cell scm_scmval_print()\cell scm-valprint.c\cell\row
\cell target_command()\cell target/target.c\cell\row
\cell tracepoints_info()\cell tracepoint.c\cell\row
\cell val_print_string()\cell valprint.c\cell\row
\cell vcomplaint()\cell complaints.c\cell\row
Used in:\cell fputstr_filtered()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function fputstr_filtered()\par}
{\s5\f1\fs20\ql\sb50\sa50 void fputstr_filtered ( const char* str, int quoter, struct ui_file* stream )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell printchar()\cell utils.c\cell\row
Called by:\cell print_packet()\cell remote.c\cell\row
Refs Func:\cell fprintf_filtered()\cell utils.c\cell\row
\cell fputs_filtered()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function fputstr_unfiltered()\par}
{\s5\f1\fs20\ql\sb50\sa50 void fputstr_unfiltered ( const char* str, int quoter, struct ui_file* stream )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell printchar()\cell utils.c\cell\row
Called by:\cell getpkt_sane()\cell remote.c\cell\row
Refs Func:\cell fprintf_unfiltered()\cell utils.c\cell\row
\cell fputs_unfiltered()\cell ui-file.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function fputstrn_unfiltered()\par}
{\s5\f1\fs20\ql\sb50\sa50 void fputstrn_unfiltered ( const char* str, int n, int quoter, struct ui_file* stream )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell printchar()\cell utils.c\cell\row
Called by:\cell putpkt_binary()\cell remote.c\cell\row
Refs Func:\cell fprintf_unfiltered()\cell utils.c\cell\row
\cell fputs_unfiltered()\cell ui-file.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function free_current_contents()\par}
{\s5\f1\fs20\ql\sb50\sa50 void free_current_contents ( void* ptr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell internal_error()\cell utils.c\cell\row
\cell xfree()\cell utils.c\cell\row
Called by:\cell free_variable()\cell varobj.c\cell\row
\cell varobj_create()\cell varobj.c\cell\row
Used in:\cell agent_command()\cell ax-gdb.c\cell\row
\cell c_preprocess_and_parse()\cell c-lang.c\cell\row
\cell coff_symfile_read()\cell coffread.c\cell\row
\cell dbx_psymtab_to_symtab()\cell dbxread.c\cell\row
\cell dwarf2_add_member_fn()\cell dwarf2read.c\cell\row
\cell elfstab_build_psymtabs()\cell dbxread.c\cell\row
\cell encode_actions()\cell tracepoint.c\cell\row
\cell expand()\cell macroexp.c\cell\row
\cell gather_arguments()\cell macroexp.c\cell\row
\cell info_macro_command()\cell macrocmd.c\cell\row
\cell macro_expand_command()\cell macrocmd.c\cell\row
\cell macro_expand_once_command()\cell macrocmd.c\cell\row
\cell maintenance_print_type()\cell typeprint.c\cell\row
\cell output_command()\cell printcmd.c\cell\row
\cell parse_and_eval()\cell eval.c\cell\row
\cell parse_and_eval_address()\cell eval.c\cell\row
\cell parse_and_eval_address_1()\cell eval.c\cell\row
\cell parse_and_eval_long()\cell eval.c\cell\row
\cell parse_exp_in_context()\cell parse.c\cell\row
\cell parse_to_comma_and_eval()\cell eval.c\cell\row
\cell print_address_symbolic()\cell printcmd.c\cell\row
\cell print_command_1()\cell printcmd.c\cell\row
\cell print_object_command()\cell objc-lang.c\cell\row
\cell printf_command()\cell printcmd.c\cell\row
\cell ptype_command()\cell typeprint.c\cell\row
\cell read_array_type()\cell dwarf2read.c\cell\row
\cell set_command()\cell printcmd.c\cell\row
\cell validate_actionline()\cell tracepoint.c\cell\row
\cell whatis_exp()\cell typeprint.c\cell\row
\cell x_command()\cell printcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function free_uuids_array()\par}
{\s5\f1\fs20\ql\sb50\sa50 void free_uuids_array ( uint8_t** uuids )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell xfree()\cell utils.c\cell\row
Used in:\cell find_kext_loadaddrs_from_kernel()\cell symfile.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function gcalloc()\par}
{\s5\f1\fs20\ql\sb50\sa50 void* gcalloc ( size_t number, size_t size )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell utils.c\cell\cell\row
Calls: \cell xmcalloc()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function gdb_check()\par}
{\s5\f1\fs20\ql\sb50\sa50 void gdb_check ( const char* str, const char* file, unsigned int line, const char* func )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function gdb_check_fatal()\par}
{\s5\f1\fs20\ql\sb50\sa50 void gdb_check_fatal ( const char* str, const char* file, unsigned int line, const char* func )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell internal_error()\cell utils.c\cell\row
Called by:\cell dummy_func_to_use_unused_top_c_funcs()\cell top.c\cell\row
\cell jump_command()\cell infcmd.c\cell\row
\cell objfile_add_to_ordered_sections()\cell objfiles.c\cell\row
\cell open_source_file_fullpath()\cell source.c\cell\row
\cell packet_ok()\cell remote.c\cell\row
\cell remove_solib_event_breakpoints()\cell breakpoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function gdb_print_host_address()\par}
{\s5\f1\fs20\ql\sb50\sa50 void gdb_print_host_address ( const void* addr, struct ui_file* stream )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell fprintf_filtered()\cell utils.c\cell\row
Called by:\cell ada_dump_subexp_body()\cell ada-lang.c\cell\row
\cell dump_fn_fieldlists()\cell gdbtypes.c\cell\row
\cell dump_objfile()\cell symmisc.c\cell\row
\cell dump_prefix_expression()\cell expprint.c\cell\row
\cell dump_psymtab()\cell symmisc.c\cell\row
\cell dump_raw_expression()\cell expprint.c\cell\row
\cell dump_subexp_body_standard()\cell expprint.c\cell\row
\cell dump_symtab_1()\cell symmisc.c\cell\row
\cell fprint_dummy_frames()\cell dummy-frame.c\cell\row
\cell fprint_frame()\cell frame.c\cell\row
\cell print_cplus_stuff()\cell gdbtypes.c\cell\row
\cell print_symbol()\cell symmisc.c\cell\row
\cell recursive_dump_type()\cell gdbtypes.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function gdb_realpath()\par}
{\s5\f1\fs20\ql\sb50\sa50 char* gdb_realpath ( const char* filename )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell  __builtin_alloca(), pathconf(), realpath(), xstrdup()\cell\cell\row
Called by:\cell lookup_partial_symtab()\cell symtab.c\cell\row
\cell lookup_partial_symtab_all()\cell symtab.c\cell\row
\cell lookup_symtab()\cell symtab.c\cell\row
\cell lookup_symtab_all()\cell symtab.c\cell\row
\cell xfullpath()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function get_binary_file_uuids()\par}
{\s5\f1\fs20\ql\sb50\sa50 uint8_t** get_binary_file_uuids ( const char* filename )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell symfile_bfd_open()\cell symfile.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell xrealloc()\cell utils.c\cell\row
\cell  __builtin___memcpy_chk(), __builtin___memset_chk(), __builtin_object_size(), __inline_memcpy_chk(), __inline_memset_chk(), bfd_check_format(), bfd_close(), bfd_mach_o_get_uuid(), bfd_openr_next_archived_file(), exceptions_state_mc_action_iter(), exceptions_state_mc_action_iter_1(), exceptions_state_mc_init(), file_exists_p(), sigsetjmp(), strcmp()\cell\cell\row
Called by:\cell find_kext_loadaddrs_from_kernel()\cell symfile.c\cell\row
Refs Var:\cell uiout\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function gfree()\par}
{\s5\f1\fs20\ql\sb50\sa50 void gfree ( void* ptr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell utils.c\cell\cell\row
Calls: \cell xmfree()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function gmalloc()\par}
{\s5\f1\fs20\ql\sb50\sa50 void* gmalloc ( size_t size )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell utils.c\cell\cell\row
Calls: \cell xmmalloc()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function gnu_debuglink_crc32()\par}
{\s5\f1\fs20\ql\sb50\sa50 unsigned long gnu_debuglink_crc32 ( unsigned long crc, unsigned char* buf, size_t len )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function grealloc()\par}
{\s5\f1\fs20\ql\sb50\sa50 void* grealloc ( void* ptr, size_t size )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell utils.c\cell\cell\row
Calls: \cell xmrealloc()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function hex_string()\par}
{\s5\f1\fs20\ql\sb50\sa50 char* hex_string ( long num )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell get_cell()\cell utils.c\cell\row
\cell phex_nz()\cell utils.c\cell\row
\cell xsnprintf()\cell utils.c\cell\row
Called by:\cell hand_function_call()\cell infcall.c\cell\row
\cell int_string()\cell utils.c\cell\row
\cell make_blockvector()\cell buildsym.c\cell\row
\cell paddress()\cell utils.c\cell\row
\cell paddress_with_arch()\cell utils.c\cell\row
\cell parse_partial_symbols()\cell mdebugread.c\cell\row
\cell process_one_symbol()\cell dbxread.c\cell\row
\cell program_info()\cell infcmd.c\cell\row
\cell read_dbx_symtab()\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function hex_string_custom()\par}
{\s5\f1\fs20\ql\sb50\sa50 char* hex_string_custom ( long num, int width )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell get_cell()\cell utils.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell phex_nz()\cell utils.c\cell\row
\cell  __builtin___memset_chk(), __builtin___strcpy_chk(), __builtin_object_size(), __inline_memset_chk(), __inline_strcpy_chk(), strlen()\cell\cell\row
Called by:\cell breakpoint_adjustment_warning()\cell breakpoint.c\cell\row
\cell info_sharedlibrary_command()\cell solib.c\cell\row
\cell int_string()\cell utils.c\cell\row
\cell maint_print_section_info()\cell maint.c\cell\row
\cell mem_info_command()\cell memattr.c\cell\row
\cell print_msymbol_info()\cell symtab.c\cell\row
\cell tracepoints_info()\cell tracepoint.c\cell\row
\cell ui_out_field_core_addr()\cell ui-out.c\cell\row
\cell write_one_breakpoint()\cell breakpoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function init_malloc()\par}
{\s5\f1\fs20\ql\sb50\sa50 void* init_malloc ( void* md )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Called by:\cell captured_main()\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function init_page_info()\par}
{\s5\f1\fs20\ql\sb50\sa50 void init_page_info ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell macosx_resize_window_handler()\cell utils.c\cell\row
\cell set_screen_size()\cell utils.c\cell\row
\cell set_width()\cell utils.c\cell\row
\cell ui_file_isatty()\cell ui-file.c\cell\row
\cell  getenv(), rl_get_screen_size(), rl_reset_terminal(), tgetnum()\cell\cell\row
Called by:\cell initialize_utils()\cell utils.c\cell\row
Refs Var:\cell chars_per_line\cell utils.c\cell\row
\cell gdb_stdout\cell main.c\cell\row
\cell lines_per_page\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function initialize_utils()\par}
{\s5\f1\fs20\ql\sb50\sa50 void initialize_utils ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell init_page_info()\cell utils.c\cell\row
\cell set_screen_size()\cell utils.c\cell\row
\cell set_width()\cell utils.c\cell\row
\cell  add_com(), add_setshow_boolean_cmd(), add_setshow_uinteger_cmd()\cell\cell\row
Called by:\cell gdb_init()\cell top.c\cell\row
Refs Func:\cell pagination_off_command()\cell utils.c\cell\row
\cell pagination_on_command()\cell utils.c\cell\row
\cell set_height_command()\cell utils.c\cell\row
\cell set_width_command()\cell utils.c\cell\row
\cell show_asm_demangle()\cell utils.c\cell\row
\cell show_chars_per_line()\cell utils.c\cell\row
\cell show_demangle()\cell utils.c\cell\row
\cell show_lines_per_page()\cell utils.c\cell\row
\cell show_pagination_enabled()\cell utils.c\cell\row
\cell show_sevenbit_strings()\cell utils.c\cell\row
Refs Var:\cell asm_demangle\cell utils.c\cell\row
\cell chars_per_line\cell utils.c\cell\row
\cell demangle\cell utils.c\cell\row
\cell lines_per_page\cell utils.c\cell\row
\cell pagination_enabled\cell utils.c\cell\row
\cell sevenbit_strings\cell utils.c\cell\row
\cell xdb_commands\cell main.c\cell\row
\cell  setlist, setprintlist, showlist, showprintlist\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function int_string()\par}
{\s5\f1\fs20\ql\sb50\sa50 char* int_string ( long val, int radix, int is_signed, int width, int use_c_format )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell decimal2str()\cell utils.c\cell\row
\cell hex_string()\cell utils.c\cell\row
\cell hex_string_custom()\cell utils.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell octal2str()\cell utils.c\cell\row
Called by:\cell print_longest()\cell valprint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function internal_error()\par}
{\s5\f1\fs20\ql\sb50\sa50 void internal_error ( const char* file, int line, const char* string, ... )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell internal_verror()\cell utils.c\cell\row
\cell  __builtin_va_end(), __builtin_va_start()\cell\cell\row
Called by:\cell _initialize_gdb_osabi()\cell osabi.c\cell\row
\cell ada_array_arity()\cell ada-lang.c\cell\row
\cell ada_array_bound_from_type()\cell ada-lang.c\cell\row
\cell ada_array_element_type()\cell ada-lang.c\cell\row
\cell ada_decode()\cell ada-lang.c\cell\row
\cell ada_enum_name()\cell ada-lang.c\cell\row
\cell ada_find_parallel_type()\cell ada-lang.c\cell\row
\cell ada_in_variant()\cell ada-lang.c\cell\row
\cell ada_is_aligner_type()\cell ada-lang.c\cell\row
\cell ada_is_simple_array_type()\cell ada-lang.c\cell\row
\cell ada_lookup_struct_elt_type()\cell ada-lang.c\cell\row
\cell ada_search_struct_field()\cell ada-lang.c\cell\row
\cell ada_template_to_fixed_record_type_1()\cell ada-lang.c\cell\row
\cell ada_to_fixed_type()\cell ada-lang.c\cell\row
\cell ada_type_match()\cell ada-lang.c\cell\row
\cell ada_type_of_array()\cell ada-lang.c\cell\row
\cell ada_value_primitive_field()\cell ada-lang.c\cell\row
\cell ada_value_primitive_packed_val()\cell ada-lang.c\cell\row
\cell ada_value_struct_elt()\cell ada-lang.c\cell\row
\cell ada_variant_discrim_name()\cell ada-lang.c\cell\row
\cell add_group()\cell reggroups.c\cell\row
\cell add_item_to_inlined_subroutine_stack()\cell inlining.c\cell\row
\cell add_item_to_temp_frame_stack()\cell inlining.c\cell\row
\cell add_language()\cell language.c\cell\row
\cell add_psymbol_with_dem_name_to_list()\cell symfile.c\cell\row
\cell add_symbol_nonexpandable()\cell dictionary.c\cell\row
\cell align_down()\cell utils.c\cell\row
\cell align_up()\cell utils.c\cell\row
\cell alloc_gdbarch_data()\cell gdbarch.c\cell\row
\cell alloc_type()\cell gdbtypes.c\cell\row
\cell allocate_bp_location()\cell breakpoint.c\cell\row
\cell allocate_psymtab()\cell symfile.c\cell\row
\cell append_psymbols_as_msymbols()\cell symfile.c\cell\row
\cell append_tokens_without_splicing()\cell macroexp.c\cell\row
\cell append_user_reg()\cell user-regs.c\cell\row
\cell blockvector_for_pc_sect()\cell block.c\cell\row
\cell bpstat_find_step_resume_breakpoint()\cell breakpoint.c\cell\row
\cell bpstat_get_triggered_catchpoints()\cell breakpoint.c\cell\row
\cell bpstat_what_to_do()\cell breakpoint.c\cell\row
\cell breakpoint_re_set_one()\cell breakpoint.c\cell\row
\cell breakpoints_relocate()\cell breakpoint.c\cell\row
\cell build_builtin_bitfield()\cell gdbtypes.c\cell\row
\cell build_builtin_enum()\cell gdbtypes.c\cell\row
\cell build_complex()\cell gdbtypes.c\cell\row
\cell build_flt()\cell gdbtypes.c\cell\row
\cell build_gdb_vtable_type()\cell gnu-v3-abi.c\cell\row
\cell build_section_addr_info_from_section_table()\cell symfile.c\cell\row
\cell build_target_sections_from_bfd()\cell bfd-target.c\cell\row
\cell c_make_name_of_child()\cell varobj.c\cell\row
\cell c_number_of_children()\cell varobj.c\cell\row
\cell c_path_expr_of_child()\cell varobj.c\cell\row
\cell c_preprocess_and_parse()\cell c-lang.c\cell\row
\cell c_type_of_child()\cell varobj.c\cell\row
\cell c_value_of_child()\cell varobj.c\cell\row
\cell c_value_of_variable()\cell varobj.c\cell\row
\cell c_variable_editable()\cell varobj.c\cell\row
\cell cached_iconv_convert()\cell charset.c\cell\row
\cell cashier_psymtab()\cell symfile.c\cell\row
\cell catch_load_command_1()\cell breakpoint.c\cell\row
\cell catch_unload_command_1()\cell breakpoint.c\cell\row
\cell check_duplicates()\cell breakpoint.c\cell\row
\cell check_inlined_function_calls()\cell dwarf2read.c\cell\row
\cell check_note()\cell osabi.c\cell\row
\cell check_size()\cell ada-lang.c\cell\row
\cell clear_complaints()\cell complaints.c\cell\row
\cell clear_header_list()\cell ui-out.c\cell\row
\cell clear_objfile_data()\cell objfiles.c\cell\row
\cell cli_table_begin()\cell cli-out.c\cell\row
\cell coff_end_symtab()\cell coffread.c\cell\row
\cell coff_symtab_read()\cell coffread.c\cell\row
\cell coffstab_build_psymtabs()\cell dbxread.c\cell\row
\cell compare_locations()\cell macrotab.c\cell\row
\cell convert_actual()\cell ada-lang.c\cell\row
\cell convert_floatformat_to_doublest()\cell doublest.c\cell\row
\cell convert_oso_map_to_final_map()\cell dwarf2read.c\cell\row
\cell convert_typed_floating()\cell doublest.c\cell\row
\cell copy_inlined_call_stack_record()\cell inlining.c\cell\row
\cell copy_temp_frame_stack_record()\cell inlining.c\cell\row
\cell core_file_command()\cell corefile.c\cell\row
\cell cp_add_using()\cell cp-namespace.c\cell\row
\cell cp_entire_prefix_len()\cell cp-support.c\cell\row
\cell cp_lookup_nested_type()\cell cp-namespace.c\cell\row
\cell cplus_make_name_of_child()\cell varobj.c\cell\row
\cell cplus_real_type_index_for_fake_child_index()\cell varobj.c\cell\row
\cell cplus_type_of_child()\cell varobj.c\cell\row
\cell cplus_value_of_variable()\cell varobj.c\cell\row
\cell cplus_variable_editable()\cell varobj.c\cell\row
\cell create_all_comp_units()\cell dwarf2read.c\cell\row
\cell create_kext_addr_map()\cell dwarf2read.c\cell\row
\cell create_name()\cell dwarfread.c\cell\row
\cell create_range_type()\cell gdbtypes.c\cell\row
\cell cs_to_section()\cell coffread.c\cell\row
\cell current_gdbarch_swap_in_hack()\cell gdbarch.c\cell\row
\cell current_gdbarch_swap_out_hack()\cell gdbarch.c\cell\row
\cell db_error()\cell dwarf2read.c\cell\row
\cell db_read_n_bytes()\cell dwarf2read.c\cell\row
\cell dbx_fixup_type()\cell stabsread.c\cell\row
\cell decimal2str()\cell utils.c\cell\row
\cell decode_all_variables()\cell linespec.c\cell\row
\cell decode_format()\cell printcmd.c\cell\row
\cell decode_frame_entry_1()\cell dwarf2-frame.c\cell\row
\cell decode_locdesc()\cell dwarf2read.c\cell\row
\cell decode_objc()\cell linespec.c\cell\row
\cell default_double_format()\cell arch-utils.c\cell\row
\cell default_float_format()\cell arch-utils.c\cell\row
\cell define_symbol()\cell stabsread.c\cell\row
\cell delete_breakpoint()\cell breakpoint.c\cell\row
\cell deprecated_current_gdbarch_select_hack()\cell gdbarch.c\cell\row
\cell deprecated_read_register_gen()\cell regcache.c\cell\row
\cell deprecated_serial_fd()\cell serial.c\cell\row
\cell deprecated_set_gdbarch_data()\cell gdbarch.c\cell\row
\cell deprecated_write_register_gen()\cell regcache.c\cell\row
\cell desc_bound_bitpos()\cell ada-lang.c\cell\row
\cell desc_bound_bitsize()\cell ada-lang.c\cell\row
\cell desc_bounds_type()\cell ada-lang.c\cell\row
\cell desc_data_type()\cell ada-lang.c\cell\row
\cell dict_create_hashed()\cell dictionary.c\cell\row
\cell disable_exception_catch()\cell breakpoint.c\cell\row
\cell do_end_debugger_mode()\cell objc-lang.c\cell\row
\cell dummy_frame_prev_register()\cell dummy-frame.c\cell\row
\cell dummy_frame_this_id()\cell dummy-frame.c\cell\row
\cell dump_endian_bytes()\cell regcache.c\cell\row
\cell dump_psymtab()\cell symmisc.c\cell\row
\cell dwarf2_find_containing_comp_unit()\cell dwarf2read.c\cell\row
\cell dwarf2_frame_cache()\cell dwarf2-frame.c\cell\row
\cell dwarf2_frame_find_fde()\cell dwarf2-frame.c\cell\row
\cell dwarf2_frame_prev_register()\cell dwarf2-frame.c\cell\row
\cell dwarf2_read_abbrevs()\cell dwarf2read.c\cell\row
\cell dwarf2_symbol_mark_computed()\cell dwarf2read.c\cell\row
\cell dwarf_alloc_abbrev()\cell dwarf2read.c\cell\row
\cell dwarf_build_psymtabs()\cell dwarfread.c\cell\row
\cell dwarf_decode_macros()\cell dwarf2read.c\cell\row
\cell elf_symtab_read()\cell elfread.c\cell\row
\cell encoding_for_size()\cell dwarf2-frame.c\cell\row
\cell end_psymtab()\cell dbxread.c\cell\row
\cell end_symtab()\cell buildsym.c\cell\row
\cell ensure_lval()\cell ada-lang.c\cell\row
\cell equivalence_table_add()\cell symmisc.c\cell\row
\cell evaluate_subexp_standard()\cell eval.c\cell\row
\cell exception_catchpoints_enabled()\cell breakpoint.c\cell\row
\cell execute_cfa_program()\cell dwarf2-frame.c\cell\row
\cell execute_stack_op()\cell dwarf2expr.c\cell\row
\cell expand()\cell macroexp.c\cell\row
\cell extract_typed_address()\cell findvar.c\cell\row
\cell extract_typed_floating()\cell doublest.c\cell\row
\cell f_print_type()\cell f-typeprint.c\cell\row
\cell fat_pntr_bounds_bitpos()\cell ada-lang.c\cell\row
\cell filename_seen()\cell symtab.c\cell\row
\cell fill_in_die_info()\cell dwarf2read.c\cell\row
\cell find_arch_by_info()\cell gdbarch.c\cell\row
\cell find_debug_info_for_pst()\cell dwarf2read.c\cell\row
\cell find_field()\cell ax-gdb.c\cell\row
\cell find_imps()\cell objc-lang.c\cell\row
\cell find_line_pc_range()\cell symtab.c\cell\row
\cell find_methods()\cell objc-lang.c\cell\row
\cell find_oload_champ_namespace_loop()\cell valops.c\cell\row
\cell find_overload_match()\cell valops.c\cell\row
\cell find_pc_offset()\cell disasm.c\cell\row
\cell find_pc_sect_line()\cell symtab.c\cell\row
\cell find_stab_function_addr()\cell dbxread.c\cell\row
\cell find_struct_field()\cell ada-lang.c\cell\row
\cell find_text_range()\cell dbxread.c\cell\row
\cell finish_command()\cell infcmd.c\cell\row
\cell finish_command_continuation()\cell infcmd.c\cell\row
\cell finish_inlined_subroutine_command()\cell infcmd.c\cell\row
\cell finish_inlined_subroutine_command_continuation()\cell infcmd.c\cell\row
\cell finished_macro_expansion()\cell c-lang.c\cell\row
\cell floatformat_from_doublest()\cell doublest.c\cell\row
\cell floatformat_from_type()\cell doublest.c\cell\row
\cell floatformat_is_nan()\cell doublest.c\cell\row
\cell floatformat_is_negative()\cell doublest.c\cell\row
\cell floatformat_mantissa()\cell doublest.c\cell\row
\cell floatformat_normalize_byteorder()\cell doublest.c\cell\row
\cell floatformat_to_doublest()\cell doublest.c\cell\row
\cell fputs_maybe_filtered()\cell utils.c\cell\row
\cell frame_cache_hack()\cell frame.c\cell\row
\cell frame_info()\cell stack.c\cell\row
\cell frame_obstack_zalloc()\cell frame.c\cell\row
\cell frame_pc_unwind()\cell frame.c\cell\row
\cell frame_register()\cell frame.c\cell\row
\cell frame_register_unwind()\cell frame.c\cell\row
\cell frame_sp_unwind()\cell frame.c\cell\row
\cell frame_unwind_find_by_frame()\cell frame-unwind.c\cell\row
\cell free_buffer()\cell macroexp.c\cell\row
\cell free_current_contents()\cell utils.c\cell\row
\cell free_namespace_block()\cell cp-namespace.c\cell\row
\cell gdb_check_fatal()\cell utils.c\cell\row
\cell gdb_wait_for_event()\cell event-loop.c\cell\row
\cell gdbarch_addr_bit()\cell gdbarch.c\cell\row
\cell gdbarch_addr_bits_remove()\cell gdbarch.c\cell\row
\cell gdbarch_address_class_name_to_type_flags()\cell gdbarch.c\cell\row
\cell gdbarch_address_class_name_to_type_flags_p()\cell gdbarch.c\cell\row
\cell gdbarch_address_class_type_flags()\cell gdbarch.c\cell\row
\cell gdbarch_address_class_type_flags_p()\cell gdbarch.c\cell\row
\cell gdbarch_address_class_type_flags_to_name()\cell gdbarch.c\cell\row
\cell gdbarch_address_class_type_flags_to_name_p()\cell gdbarch.c\cell\row
\cell gdbarch_address_to_pointer()\cell gdbarch.c\cell\row
\cell gdbarch_adjust_breakpoint_address()\cell gdbarch.c\cell\row
\cell gdbarch_adjust_breakpoint_address_p()\cell gdbarch.c\cell\row
\cell gdbarch_adjust_ehframe_regnum()\cell gdbarch.c\cell\row
\cell gdbarch_believe_pcc_promotion()\cell gdbarch.c\cell\row
\cell gdbarch_bfd_arch_info()\cell gdbarch.c\cell\row
\cell gdbarch_bfd_vma_bit()\cell gdbarch.c\cell\row
\cell gdbarch_breakpoint_from_pc()\cell gdbarch.c\cell\row
\cell gdbarch_byte_order()\cell gdbarch.c\cell\row
\cell gdbarch_call_dummy_location()\cell gdbarch.c\cell\row
\cell gdbarch_cannot_fetch_register()\cell gdbarch.c\cell\row
\cell gdbarch_cannot_step_breakpoint()\cell gdbarch.c\cell\row
\cell gdbarch_cannot_store_register()\cell gdbarch.c\cell\row
\cell gdbarch_char_signed()\cell gdbarch.c\cell\row
\cell gdbarch_coff_make_msymbol_special()\cell gdbarch.c\cell\row
\cell gdbarch_construct_inferior_arguments()\cell gdbarch.c\cell\row
\cell gdbarch_convert_from_func_ptr_addr()\cell gdbarch.c\cell\row
\cell gdbarch_convert_register_p()\cell gdbarch.c\cell\row
\cell gdbarch_dbx_make_msymbol_special()\cell gdbarch.c\cell\row
\cell gdbarch_decr_pc_after_break()\cell gdbarch.c\cell\row
\cell gdbarch_deprecated_extract_return_value()\cell gdbarch.c\cell\row
\cell gdbarch_deprecated_extract_struct_value_address()\cell gdbarch.c\cell\row
\cell gdbarch_deprecated_extract_struct_value_address_p()\cell gdbarch.c\cell\row
\cell gdbarch_deprecated_fp_regnum()\cell gdbarch.c\cell\row
\cell gdbarch_deprecated_function_start_offset()\cell gdbarch.c\cell\row
\cell gdbarch_deprecated_push_arguments()\cell gdbarch.c\cell\row
\cell gdbarch_deprecated_push_arguments_p()\cell gdbarch.c\cell\row
\cell gdbarch_deprecated_reg_struct_has_addr()\cell gdbarch.c\cell\row
\cell gdbarch_deprecated_reg_struct_has_addr_p()\cell gdbarch.c\cell\row
\cell gdbarch_deprecated_register_byte()\cell gdbarch.c\cell\row
\cell gdbarch_deprecated_register_byte_p()\cell gdbarch.c\cell\row
\cell gdbarch_deprecated_register_size()\cell gdbarch.c\cell\row
\cell gdbarch_deprecated_saved_pc_after_call()\cell gdbarch.c\cell\row
\cell gdbarch_deprecated_saved_pc_after_call_p()\cell gdbarch.c\cell\row
\cell gdbarch_deprecated_stack_align()\cell gdbarch.c\cell\row
\cell gdbarch_deprecated_stack_align_p()\cell gdbarch.c\cell\row
\cell gdbarch_deprecated_store_return_value()\cell gdbarch.c\cell\row
\cell gdbarch_deprecated_store_struct_return()\cell gdbarch.c\cell\row
\cell gdbarch_deprecated_store_struct_return_p()\cell gdbarch.c\cell\row
\cell gdbarch_deprecated_use_struct_convention()\cell gdbarch.c\cell\row
\cell gdbarch_double_bit()\cell gdbarch.c\cell\row
\cell gdbarch_double_format()\cell gdbarch.c\cell\row
\cell gdbarch_dwarf2_reg_to_regnum()\cell gdbarch.c\cell\row
\cell gdbarch_dwarf_reg_to_regnum()\cell gdbarch.c\cell\row
\cell gdbarch_ecoff_reg_to_regnum()\cell gdbarch.c\cell\row
\cell gdbarch_elf_make_msymbol_special()\cell gdbarch.c\cell\row
\cell gdbarch_extract_return_value()\cell gdbarch.c\cell\row
\cell gdbarch_fetch_pointer_argument()\cell gdbarch.c\cell\row
\cell gdbarch_fetch_pointer_argument_p()\cell gdbarch.c\cell\row
\cell gdbarch_fetch_tls_load_module_address()\cell gdbarch.c\cell\row
\cell gdbarch_fetch_tls_load_module_address_p()\cell gdbarch.c\cell\row
\cell gdbarch_find_by_info()\cell gdbarch.c\cell\row
\cell gdbarch_float_bit()\cell gdbarch.c\cell\row
\cell gdbarch_float_format()\cell gdbarch.c\cell\row
\cell gdbarch_fp0_regnum()\cell gdbarch.c\cell\row
\cell gdbarch_frame_align()\cell gdbarch.c\cell\row
\cell gdbarch_frame_align_p()\cell gdbarch.c\cell\row
\cell gdbarch_frame_args_skip()\cell gdbarch.c\cell\row
\cell gdbarch_frame_num_args()\cell gdbarch.c\cell\row
\cell gdbarch_frame_num_args_p()\cell gdbarch.c\cell\row
\cell gdbarch_frame_red_zone_size()\cell gdbarch.c\cell\row
\cell gdbarch_free()\cell gdbarch.c\cell\row
\cell gdbarch_get_longjmp_target()\cell gdbarch.c\cell\row
\cell gdbarch_get_longjmp_target_p()\cell gdbarch.c\cell\row
\cell gdbarch_have_nonsteppable_watchpoint()\cell gdbarch.c\cell\row
\cell gdbarch_in_function_epilogue_p()\cell gdbarch.c\cell\row
\cell gdbarch_in_solib_return_trampoline()\cell gdbarch.c\cell\row
\cell gdbarch_info_fill()\cell arch-utils.c\cell\row
\cell gdbarch_inner_than()\cell gdbarch.c\cell\row
\cell gdbarch_int_bit()\cell gdbarch.c\cell\row
\cell gdbarch_integer_to_address()\cell gdbarch.c\cell\row
\cell gdbarch_integer_to_address_p()\cell gdbarch.c\cell\row
\cell gdbarch_long_bit()\cell gdbarch.c\cell\row
\cell gdbarch_long_double_bit()\cell gdbarch.c\cell\row
\cell gdbarch_long_double_format()\cell gdbarch.c\cell\row
\cell gdbarch_long_long_bit()\cell gdbarch.c\cell\row
\cell gdbarch_lookup_osabi_from_bfd()\cell osabi.c\cell\row
\cell gdbarch_memory_insert_breakpoint()\cell gdbarch.c\cell\row
\cell gdbarch_memory_remove_breakpoint()\cell gdbarch.c\cell\row
\cell gdbarch_name_of_malloc()\cell gdbarch.c\cell\row
\cell gdbarch_num_pseudo_regs()\cell gdbarch.c\cell\row
\cell gdbarch_num_regs()\cell gdbarch.c\cell\row
\cell gdbarch_obstack_zalloc()\cell gdbarch.c\cell\row
\cell gdbarch_osabi()\cell gdbarch.c\cell\row
\cell gdbarch_pc_regnum()\cell gdbarch.c\cell\row
\cell gdbarch_pointer_to_address()\cell gdbarch.c\cell\row
\cell gdbarch_print_float_info()\cell gdbarch.c\cell\row
\cell gdbarch_print_float_info_p()\cell gdbarch.c\cell\row
\cell gdbarch_print_insn()\cell gdbarch.c\cell\row
\cell gdbarch_print_registers_info()\cell gdbarch.c\cell\row
\cell gdbarch_print_vector_info()\cell gdbarch.c\cell\row
\cell gdbarch_print_vector_info_p()\cell gdbarch.c\cell\row
\cell gdbarch_printable_names()\cell gdbarch.c\cell\row
\cell gdbarch_ps_regnum()\cell gdbarch.c\cell\row
\cell gdbarch_pseudo_register_read()\cell gdbarch.c\cell\row
\cell gdbarch_pseudo_register_read_p()\cell gdbarch.c\cell\row
\cell gdbarch_pseudo_register_write()\cell gdbarch.c\cell\row
\cell gdbarch_pseudo_register_write_p()\cell gdbarch.c\cell\row
\cell gdbarch_ptr_bit()\cell gdbarch.c\cell\row
\cell gdbarch_push_dummy_call()\cell gdbarch.c\cell\row
\cell gdbarch_push_dummy_call_p()\cell gdbarch.c\cell\row
\cell gdbarch_push_dummy_code()\cell gdbarch.c\cell\row
\cell gdbarch_push_dummy_code_p()\cell gdbarch.c\cell\row
\cell gdbarch_read_pc()\cell gdbarch.c\cell\row
\cell gdbarch_read_pc_p()\cell gdbarch.c\cell\row
\cell gdbarch_read_sp()\cell gdbarch.c\cell\row
\cell gdbarch_read_sp_p()\cell gdbarch.c\cell\row
\cell gdbarch_register()\cell gdbarch.c\cell\row
\cell gdbarch_register_bytes_ok()\cell gdbarch.c\cell\row
\cell gdbarch_register_bytes_ok_p()\cell gdbarch.c\cell\row
\cell gdbarch_register_name()\cell gdbarch.c\cell\row
\cell gdbarch_register_osabi()\cell osabi.c\cell\row
\cell gdbarch_register_reggroup_p()\cell gdbarch.c\cell\row
\cell gdbarch_register_sim_regno()\cell gdbarch.c\cell\row
\cell gdbarch_register_to_value()\cell gdbarch.c\cell\row
\cell gdbarch_register_type()\cell gdbarch.c\cell\row
\cell gdbarch_register_type_p()\cell gdbarch.c\cell\row
\cell gdbarch_regset_from_core_section()\cell gdbarch.c\cell\row
\cell gdbarch_regset_from_core_section_p()\cell gdbarch.c\cell\row
\cell gdbarch_remote_translate_xfer_address()\cell gdbarch.c\cell\row
\cell gdbarch_return_value()\cell gdbarch.c\cell\row
\cell gdbarch_return_value_p()\cell gdbarch.c\cell\row
\cell gdbarch_sdb_reg_to_regnum()\cell gdbarch.c\cell\row
\cell gdbarch_short_bit()\cell gdbarch.c\cell\row
\cell gdbarch_single_step_through_delay()\cell gdbarch.c\cell\row
\cell gdbarch_single_step_through_delay_p()\cell gdbarch.c\cell\row
\cell gdbarch_skip_prologue()\cell gdbarch.c\cell\row
\cell gdbarch_skip_prologue_addr_ctx()\cell gdbarch.c\cell\row
\cell gdbarch_skip_prologue_addr_ctx_p()\cell gdbarch.c\cell\row
\cell gdbarch_skip_solib_resolver()\cell gdbarch.c\cell\row
\cell gdbarch_skip_trampoline_code()\cell gdbarch.c\cell\row
\cell gdbarch_smash_text_address()\cell gdbarch.c\cell\row
\cell gdbarch_software_single_step()\cell gdbarch.c\cell\row
\cell gdbarch_software_single_step_p()\cell gdbarch.c\cell\row
\cell gdbarch_sp_regnum()\cell gdbarch.c\cell\row
\cell gdbarch_stab_reg_to_regnum()\cell gdbarch.c\cell\row
\cell gdbarch_stabs_argument_has_addr()\cell gdbarch.c\cell\row
\cell gdbarch_store_return_value()\cell gdbarch.c\cell\row
\cell gdbarch_unwind_dummy_id()\cell gdbarch.c\cell\row
\cell gdbarch_unwind_dummy_id_p()\cell gdbarch.c\cell\row
\cell gdbarch_unwind_pc()\cell gdbarch.c\cell\row
\cell gdbarch_unwind_pc_p()\cell gdbarch.c\cell\row
\cell gdbarch_unwind_sp()\cell gdbarch.c\cell\row
\cell gdbarch_unwind_sp_p()\cell gdbarch.c\cell\row
\cell gdbarch_value_to_register()\cell gdbarch.c\cell\row
\cell gdbarch_virtual_frame_pointer()\cell gdbarch.c\cell\row
\cell gdbarch_write_pc()\cell gdbarch.c\cell\row
\cell gen_bitfield_ref()\cell ax-gdb.c\cell\row
\cell gen_deref()\cell ax-gdb.c\cell\row
\cell gen_expr()\cell ax-gdb.c\cell\row
\cell gen_fetch()\cell ax-gdb.c\cell\row
\cell gen_var_ref()\cell ax-gdb.c\cell\row
\cell generic_elf_osabi_sniff_abi_tag_sections()\cell osabi.c\cell\row
\cell generic_push_dummy_code()\cell infcall.c\cell\row
\cell generic_register_byte()\cell arch-utils.c\cell\row
\cell generic_register_size()\cell arch-utils.c\cell\row
\cell generic_target_write_pc()\cell regcache.c\cell\row
\cell get_array_bounds()\cell gdbtypes.c\cell\row
\cell get_character_constant()\cell macroexp.c\cell\row
\cell get_field()\cell doublest.c\cell\row
\cell get_frame_pc()\cell frame.c\cell\row
\cell get_frame_type()\cell frame.c\cell\row
\cell get_join_type()\cell varobj.c\cell\row
\cell get_objfile_data()\cell objfiles.c\cell\row
\cell get_offsets()\cell remote.c\cell\row
\cell get_prev_frame()\cell frame.c\cell\row
\cell get_prev_frame_1()\cell frame.c\cell\row
\cell get_selected_frame()\cell frame.c\cell\row
\cell get_string_literal()\cell macroexp.c\cell\row
\cell get_target_memory_unsigned()\cell target/target.c\cell\row
\cell get_token()\cell macroexp.c\cell\row
\cell get_type_deref()\cell varobj.c\cell\row
\cell gnu_v3_update_exception_catchpoints()\cell breakpoint.c\cell\row
\cell hand_function_call()\cell infcall.c\cell\row
\cell handle_inferior_event()\cell infrun.c\cell\row
\cell has_vtable()\cell gdbtypes.c\cell\row
\cell hex_string_custom()\cell utils.c\cell\row
\cell info_sharedlibrary_command()\cell solib.c\cell\row
\cell init_composite_type()\cell gdbtypes.c\cell\row
\cell init_objfile_sect_indices()\cell symfile.c\cell\row
\cell init_regcache_descr()\cell regcache.c\cell\row
\cell initialize_cu_func_list()\cell dwarf2read.c\cell\row
\cell initialize_current_architecture()\cell arch-utils.c\cell\row
\cell inlined_frame_this_id()\cell inlining.c\cell\row
\cell inlined_function_end_of_inlined_code_p()\cell inlining.c\cell\row
\cell inlined_subroutine_adjust_position_for_breakpoint()\cell inlining.c\cell\row
\cell inlined_subroutine_objfile_relocate()\cell inlining.c\cell\row
\cell inlined_subroutine_restore_after_dummy_call()\cell inlining.c\cell\row
\cell insert_catchpoint()\cell breakpoint.c\cell\row
\cell insert_step_resume_breakpoint_at_sal()\cell infrun.c\cell\row
\cell int_string()\cell utils.c\cell\row
\cell internal_vproblem()\cell utils.c\cell\row
\cell interp_add()\cell interps.c\cell\row
\cell interp_set()\cell interps.c\cell\row
\cell is_root_p()\cell varobj.c\cell\row
\cell java_link_class_type()\cell jv-lang.c\cell\row
\cell java_make_name_of_child()\cell varobj.c\cell\row
\cell java_parse()\cell jv-exp.c\cell\row
\cell java_type_of_child()\cell varobj.c\cell\row
\cell legacy_register_sim_regno()\cell arch-utils.c\cell\row
\cell legacy_return_value()\cell arch-utils.c\cell\row
\cell legacy_store_return_value()\cell arch-utils.c\cell\row
\cell legacy_virtual_frame_pointer()\cell arch-utils.c\cell\row
\cell lesseq_defined_than()\cell ada-lang.c\cell\row
\cell link_objfile()\cell objfiles.c\cell\row
\cell list_all_visible_commons()\cell f-valprint.c\cell\row
\cell list_overlays_command()\cell symfile.c\cell\row
\cell locate_var_value()\cell findvar.c\cell\row
\cell locval()\cell dwarfread.c\cell\row
\cell lookup_namespace_scope()\cell cp-namespace.c\cell\row
\cell lookup_partial_symbol()\cell symtab.c\cell\row
\cell lookup_repository_type()\cell dwarf2read.c\cell\row
\cell lookup_symbol_aux_psymtabs()\cell symtab.c\cell\row
\cell lookup_symbol_aux_symtabs()\cell symtab.c\cell\row
\cell macro_bcache_free()\cell macrotab.c\cell\row
\cell macro_free()\cell macrotab.c\cell\row
\cell macro_main()\cell macrotab.c\cell\row
\cell macro_set_main()\cell macrotab.c\cell\row
\cell maintenance_internal_error()\cell maint.c\cell\row
\cell make_cleanup_set_restore_debugger_mode()\cell objc-lang.c\cell\row
\cell make_my_cleanup()\cell utils.c\cell\row
\cell make_qualified_type()\cell gdbtypes.c\cell\row
\cell mark_async_signal_handler()\cell event-loop.c\cell\row
\cell maybe_expand()\cell macroexp.c\cell\row
\cell mem_file_delete()\cell ui-file.c\cell\row
\cell mem_file_put()\cell ui-file.c\cell\row
\cell mem_file_rewind()\cell ui-file.c\cell\row
\cell mem_file_write()\cell ui-file.c\cell\row
\cell mention()\cell breakpoint.c\cell\row
\cell minsyms_found()\cell linespec.c\cell\row
\cell my_value_equal()\cell varobj.c\cell\row
\cell new_gdbarch_data()\cell gdbarch.c\cell\row
\cell new_symbol()\cell mdebugread.c\cell\row
\cell no_get_frame_base()\cell dwarf2-frame.c\cell\row
\cell no_get_tls_address()\cell dwarf2-frame.c\cell\row
\cell nomem()\cell utils.c\cell\row
\cell normal_stop()\cell infrun.c\cell\row
\cell objc_invalidate_objc_class()\cell objc-lang.c\cell\row
\cell objc_read_trampoline_region()\cell objc-lang.c\cell\row
\cell objfile_alloc_data()\cell objfiles.c\cell\row
\cell objfile_bss_section_offset()\cell objfiles.c\cell\row
\cell objfile_data_section_offset()\cell objfiles.c\cell\row
\cell objfile_free_data()\cell objfiles.c\cell\row
\cell objfile_init_hitlist()\cell objfiles.c\cell\row
\cell objfile_relocate()\cell objfiles.c\cell\row
\cell objfile_rodata_section_offset()\cell objfiles.c\cell\row
\cell objfile_section_offset()\cell objfiles.c\cell\row
\cell objfile_text_section_offset()\cell objfiles.c\cell\row
\cell obsavestring()\cell symfile.c\cell\row
\cell octal2str()\cell utils.c\cell\row
\cell open_dwarf_repository()\cell dwarf2read.c\cell\row
\cell packed_array_type()\cell ada-lang.c\cell\row
\cell packet_ok()\cell remote.c\cell\row
\cell packet_reg_from_regnum()\cell remote.c\cell\row
\cell parse_method()\cell objc-lang.c\cell\row
\cell parse_partial_symbols()\cell mdebugread.c\cell\row
\cell parse_selector()\cell objc-lang.c\cell\row
\cell parse_symbol()\cell mdebugread.c\cell\row
\cell path_expr_of_root()\cell varobj.c\cell\row
\cell pop_context()\cell buildsym.c\cell\row
\cell pop_level()\cell ui-out.c\cell\row
\cell pop_subfile()\cell buildsym.c\cell\row
\cell pop_target()\cell target/target.c\cell\row
\cell prim_record_minimal_symbol()\cell minsyms.c\cell\row
\cell prim_record_minimal_symbol_and_info()\cell minsyms.c\cell\row
\cell print_args_stub()\cell stack.c\cell\row
\cell print_bcache_statistics()\cell bcache.c\cell\row
\cell print_bp_stop_message()\cell breakpoint.c\cell\row
\cell print_dynamic_range_bound()\cell ada-typeprint.c\cell\row
\cell print_longest()\cell valprint.c\cell\row
\cell print_one_breakpoint()\cell breakpoint.c\cell\row
\cell print_one_exception_catchpoint()\cell breakpoint.c\cell\row
\cell print_return_value()\cell infcmd.c\cell\row
\cell print_scalar_formatted()\cell printcmd.c\cell\row
\cell print_single_dwarf_location()\cell dwarf2loc.c\cell\row
\cell print_stop_reason()\cell infrun.c\cell\row
\cell process_die()\cell dwarf2read.c\cell\row
\cell process_full_comp_unit()\cell dwarf2read.c\cell\row
\cell process_one_symbol()\cell dbxread.c\cell\row
\cell psymtab_to_symtab()\cell symfile.c\cell\row
\cell psymtab_to_symtab_1()\cell mdebugread.c\cell\row
\cell push_level()\cell ui-out.c\cell\row
\cell push_subfile()\cell buildsym.c\cell\row
\cell push_target()\cell target/target.c\cell\row
\cell put_field()\cell doublest.c\cell\row
\cell put_objfile_before()\cell objfiles.c\cell\row
\cell puts_filtered_tabular()\cell utils.c\cell\row
\cell range_error()\cell language.c\cell\row
\cell rb_delete_fixup()\cell dwarf2read.c\cell\row
\cell rb_tree_remove_node()\cell dwarf2read.c\cell\row
\cell rbreak_command()\cell symtab.c\cell\row
\cell read_1_byte()\cell dwarf2read.c\cell\row
\cell read_address()\cell dwarf2read.c\cell\row
\cell read_alphacoff_dynamic_symtab()\cell mipsread.c\cell\row
\cell read_baseclasses()\cell stabsread.c\cell\row
\cell read_dbx_symtab()\cell dbxread.c\cell\row
\cell read_encoded_value()\cell dwarf2-frame.c\cell\row
\cell read_file_scope()\cell dwarf2read.c\cell\row
\cell read_indirect_string()\cell dwarf2read.c\cell\row
\cell read_initial_length()\cell dwarf2read.c\cell\row
\cell read_n_bytes()\cell dwarf2read.c\cell\row
\cell read_objc_method_list_method()\cell objc-lang.c\cell\row
\cell read_offset()\cell dwarf2read.c\cell\row
\cell read_ofile_symtab()\cell dwarfread.c\cell\row
\cell read_ofile_symtab_from_oso()\cell dbxread.c\cell\row
\cell read_partial_die()\cell dwarf2read.c\cell\row
\cell read_pc_pid()\cell regcache.c\cell\row
\cell read_sp()\cell regcache.c\cell\row
\cell read_string()\cell dwarf2read.c\cell\row
\cell read_tag_pointer_type()\cell dwarf2read.c\cell\row
\cell read_tag_string_type()\cell dwarfread.c\cell\row
\cell read_var_value()\cell findvar.c\cell\row
\cell record_minimal_symbol()\cell mdebugread.c\cell\row
\cell regcache_cooked_read()\cell regcache.c\cell\row
\cell regcache_cooked_read_part()\cell regcache.c\cell\row
\cell regcache_cooked_read_signed()\cell regcache.c\cell\row
\cell regcache_cooked_read_unsigned()\cell regcache.c\cell\row
\cell regcache_cooked_write()\cell regcache.c\cell\row
\cell regcache_cooked_write_part()\cell regcache.c\cell\row
\cell regcache_cooked_write_signed()\cell regcache.c\cell\row
\cell regcache_cooked_write_unsigned()\cell regcache.c\cell\row
\cell regcache_cpy()\cell regcache.c\cell\row
\cell regcache_cpy_no_passthrough()\cell regcache.c\cell\row
\cell regcache_dump()\cell regcache.c\cell\row
\cell regcache_dup()\cell regcache.c\cell\row
\cell regcache_dup_no_passthrough()\cell regcache.c\cell\row
\cell regcache_raw_collect()\cell regcache.c\cell\row
\cell regcache_raw_read()\cell regcache.c\cell\row
\cell regcache_raw_read_part()\cell regcache.c\cell\row
\cell regcache_raw_read_signed()\cell regcache.c\cell\row
\cell regcache_raw_read_unsigned()\cell regcache.c\cell\row
\cell regcache_raw_supply()\cell regcache.c\cell\row
\cell regcache_raw_write()\cell regcache.c\cell\row
\cell regcache_raw_write_part()\cell regcache.c\cell\row
\cell regcache_raw_write_signed()\cell regcache.c\cell\row
\cell regcache_raw_write_unsigned()\cell regcache.c\cell\row
\cell regcache_restore()\cell regcache.c\cell\row
\cell regcache_save()\cell regcache.c\cell\row
\cell regcache_valid_p()\cell regcache.c\cell\row
\cell regcache_xfer_part()\cell regcache.c\cell\row
\cell regcache_xmalloc()\cell regcache.c\cell\row
\cell reggroup_next()\cell reggroups.c\cell\row
\cell reggroups_dump()\cell reggroups.c\cell\row
\cell register_cp_abi()\cell cp-abi.c\cell\row
\cell register_offset_hack()\cell regcache.c\cell\row
\cell register_size()\cell regcache.c\cell\row
\cell register_type()\cell regcache.c\cell\row
\cell remote_async()\cell remote.c\cell\row
\cell remote_fetch_registers()\cell remote.c\cell\row
\cell remote_insert_hw_breakpoint()\cell remote.c\cell\row
\cell remote_insert_watchpoint()\cell remote.c\cell\row
\cell remote_remove_hw_breakpoint()\cell remote.c\cell\row
\cell remote_remove_watchpoint()\cell remote.c\cell\row
\cell remote_threads_extra_info()\cell remote.c\cell\row
\cell remote_vcont_resume()\cell remote.c\cell\row
\cell remote_write_bytes()\cell remote.c\cell\row
\cell remote_xfer_partial()\cell remote.c\cell\row
\cell remove_child_from_parent()\cell varobj.c\cell\row
\cell remove_duplicates()\cell breakpoint.c\cell\row
\cell replace_psymbols_with_correct_psymbols()\cell symfile.c\cell\row
\cell replace_type()\cell gdbtypes.c\cell\row
\cell resize_buffer()\cell macroexp.c\cell\row
\cell restore_step_resume_breakpoint()\cell infrun.c\cell\row
\cell restore_thread_inlined_call_stack()\cell inlining.c\cell\row
\cell return_command()\cell stack.c\cell\row
\cell scan()\cell macroexp.c\cell\row
\cell scan_discrim_bound()\cell ada-lang.c\cell\row
\cell scan_macro_expansion()\cell c-lang.c\cell\row
\cell select_source_symtab()\cell source.c\cell\row
\cell sentinel_frame_this_id()\cell sentinel-frame.c\cell\row
\cell serial_readchar()\cell serial.c\cell\row
\cell set_architecture()\cell arch-utils.c\cell\row
\cell set_architecture_from_string()\cell arch-utils.c\cell\row
\cell set_cp_abi_as_auto_default()\cell cp-abi.c\cell\row
\cell set_die_type()\cell dwarf2read.c\cell\row
\cell set_endian()\cell arch-utils.c\cell\row
\cell set_objfile_data()\cell objfiles.c\cell\row
\cell set_osabi()\cell osabi.c\cell\row
\cell set_register_cached()\cell regcache.c\cell\row
\cell set_repository_cu_language()\cell dwarf2read.c\cell\row
\cell signed_address_type()\cell dwarf2expr.c\cell\row
\cell size_of_encoded_value()\cell dwarf2-frame.c\cell\row
\cell static_unwrap_type()\cell ada-lang.c\cell\row
\cell stdio_file_delete()\cell ui-file.c\cell\row
\cell stdio_file_flush()\cell ui-file.c\cell\row
\cell stdio_file_fputs()\cell ui-file.c\cell\row
\cell stdio_file_isatty()\cell ui-file.c\cell\row
\cell stdio_file_read()\cell ui-file.c\cell\row
\cell stdio_file_write()\cell ui-file.c\cell\row
\cell step_1_inlining()\cell infcmd.c\cell\row
\cell step_once()\cell infcmd.c\cell\row
\cell stop_report_timer()\cell maint.c\cell\row
\cell store_register_using_P()\cell remote.c\cell\row
\cell store_typed_address()\cell findvar.c\cell\row
\cell store_typed_floating()\cell doublest.c\cell\row
\cell string_to_core_addr()\cell utils.c\cell\row
\cell stringify_collection_list()\cell tracepoint.c\cell\row
\cell substitute_args()\cell macroexp.c\cell\row
\cell symbol_file_add_main_1()\cell symfile.c\cell\row
\cell syms_from_objfile()\cell symfile.c\cell\row
\cell target_xfer_partial()\cell target/target.c\cell\row
\cell tee_file_delete()\cell ui-file.c\cell\row
\cell tee_file_flush()\cell ui-file.c\cell\row
\cell tee_file_fputs()\cell ui-file.c\cell\row
\cell tee_file_isatty()\cell ui-file.c\cell\row
\cell tee_file_write()\cell ui-file.c\cell\row
\cell to_fixed_range_type()\cell ada-lang.c\cell\row
\cell to_static_fixed_type()\cell ada-lang.c\cell\row
\cell tramp_frame_prepend_unwinder()\cell tramp-frame.c\cell\row
\cell translate_debug_map_address_with_tuple()\cell dwarf2read.c\cell\row
\cell type_error()\cell language.c\cell\row
\cell typecmp()\cell valops.c\cell\row
\cell ui_file_data()\cell ui-file.c\cell\row
\cell ui_out_begin()\cell ui-out.c\cell\row
\cell ui_out_table_begin()\cell ui-out.c\cell\row
\cell ui_out_table_body()\cell ui-out.c\cell\row
\cell ui_out_table_end()\cell ui-out.c\cell\row
\cell ui_out_table_header()\cell ui-out.c\cell\row
\cell unlink_objfile()\cell objfiles.c\cell\row
\cell unqualified_name_from_comp()\cell cp-support.c\cell\row
\cell unsigned_address_type()\cell dwarf2expr.c\cell\row
\cell update_current_target()\cell target/target.c\cell\row
\cell update_exception_catchpoints()\cell breakpoint.c\cell\row
\cell update_inlined_function_line_table_entry()\cell symtab.c\cell\row
\cell val_elt_addr()\cell valprint.c\cell\row
\cell value_aggregate_elt()\cell valops.c\cell\row
\cell value_concat()\cell valarith.c\cell\row
\cell value_fn_field()\cell value.c\cell\row
\cell value_of_builtin_frame_reg()\cell std-regs.c\cell\row
\cell value_of_user_reg()\cell user-regs.c\cell\row
\cell value_subscript()\cell valarith.c\cell\row
\cell value_subscripted_rvalue()\cell valarith.c\cell\row
\cell varobj_get_type_index_from_fake_child()\cell varobj.c\cell\row
\cell vcomplaint()\cell complaints.c\cell\row
\cell verify_field()\cell ui-out.c\cell\row
\cell verify_gdbarch()\cell gdbarch.c\cell\row
\cell verify_stack()\cell inlining.c\cell\row
\cell watch_command_1()\cell breakpoint.c\cell\row
\cell watchpoint_to_Z_packet()\cell remote.c\cell\row
\cell wild_match()\cell ada-lang.c\cell\row
\cell wrap_here()\cell utils.c\cell\row
\cell write_one_breakpoint()\cell breakpoint.c\cell\row
\cell x86_frame_prev_register()\cell target/x86-shared-tdep.c\cell\row
\cell xsnprintf()\cell utils.c\cell\row
\cell xstrvprintf()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function internal_verror()\par}
{\s5\f1\fs20\ql\sb50\sa50 void internal_verror ( const char* file, int line, const char* fmt, va_list ap )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell internal_vproblem()\cell utils.c\cell\row
\cell  deprecated_throw_reason()\cell\cell\row
Called by:\cell internal_error()\cell utils.c\cell\row
Refs Var:\cell internal_error_problem\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function internal_vwarning()\par}
{\s5\f1\fs20\ql\sb50\sa50 void internal_vwarning ( const char* file, int line, const char* fmt, va_list ap )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell internal_vproblem()\cell utils.c\cell\row
Called by:\cell internal_warning()\cell utils.c\cell\row
\cell vcomplaint()\cell complaints.c\cell\row
Refs Var:\cell internal_warning_problem\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function internal_warning()\par}
{\s5\f1\fs20\ql\sb50\sa50 void internal_warning ( const char* file, int line, const char* string, ... )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell internal_vwarning()\cell utils.c\cell\row
\cell  __builtin_va_end(), __builtin_va_start()\cell\cell\row
Called by:\cell maintenance_internal_warning()\cell maint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function macosx_resize_window_handler()\par}
{\s5\f1\fs20\ql\sb50\sa50 void macosx_resize_window_handler ( void* d )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell macosx/xm-macosx.h\cell\cell\row
Calls: \cell  macosx_resize_window()\cell\cell\row
Called by:\cell init_page_info()\cell utils.c\cell\row
Used in:\cell async_init_signals()\cell event-top.c\cell\row
Refs Var:\cell chars_per_line\cell utils.c\cell\row
\cell lines_per_page\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function make_cleanup()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct cleanup* make_cleanup ( make_cleanup_ftype* function, void* arg )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell make_my_cleanup()\cell utils.c\cell\row
Called by:\cell add_dsym_command()\cell symfile.c\cell\row
\cell add_kext_command()\cell symfile.c\cell\row
\cell add_path()\cell source.c\cell\row
\cell add_symbol_file_command()\cell symfile.c\cell\row
\cell agent_command()\cell ax-gdb.c\cell\row
\cell bpstat_do_actions()\cell breakpoint.c\cell\row
\cell bpstat_stop_status()\cell breakpoint.c\cell\row
\cell break_command_2()\cell breakpoint.c\cell\row
\cell breakpoint_re_set_all()\cell breakpoint.c\cell\row
\cell breakpoint_re_set_one()\cell breakpoint.c\cell\row
\cell breakpoint_update()\cell breakpoint.c\cell\row
\cell c_preprocess_and_parse()\cell c-lang.c\cell\row
\cell clear_command()\cell breakpoint.c\cell\row
\cell coff_locate_sections()\cell coffread.c\cell\row
\cell coff_symfile_read()\cell coffread.c\cell\row
\cell command_handler()\cell event-top.c\cell\row
\cell command_loop()\cell top.c\cell\row
\cell commands_command()\cell breakpoint.c\cell\row
\cell compare_sections_command()\cell remote.c\cell\row
\cell dbx_psymtab_to_symtab()\cell dbxread.c\cell\row
\cell dbx_psymtab_to_symtab_1()\cell dbxread.c\cell\row
\cell dbx_symfile_read()\cell dbxread.c\cell\row
\cell decode_line_2()\cell linespec.c\cell\row
\cell default_memory_insert_breakpoint()\cell mem-break.c\cell\row
\cell default_memory_remove_breakpoint()\cell mem-break.c\cell\row
\cell default_setup_safe_print()\cell target/target.c\cell\row
\cell default_xfer_partial()\cell target/target.c\cell\row
\cell delete_breakpoint()\cell breakpoint.c\cell\row
\cell determine_class_name()\cell dwarf2read.c\cell\row
\cell do_captured_breakpoint()\cell breakpoint.c\cell\row
\cell do_mixed_source_and_assembly()\cell disasm.c\cell\row
\cell dwarf2_add_field()\cell dwarf2read.c\cell\row
\cell dwarf2_add_member_fn()\cell dwarf2read.c\cell\row
\cell dwarf2_build_psymtabs_hard()\cell dwarf2read.c\cell\row
\cell dwarf2_frame_cache()\cell dwarf2-frame.c\cell\row
\cell dwarf2_start_subfile()\cell dwarf2read.c\cell\row
\cell dwarf_build_psymtabs()\cell dwarfread.c\cell\row
\cell dwarf_decode_line_header()\cell dwarf2read.c\cell\row
\cell dwarf_decode_lines()\cell dwarf2read.c\cell\row
\cell elf_symfile_read()\cell elfread.c\cell\row
\cell elf_symtab_read()\cell elfread.c\cell\row
\cell elfstab_build_psymtabs()\cell dbxread.c\cell\row
\cell encode_actions()\cell tracepoint.c\cell\row
\cell error_stream()\cell utils.c\cell\row
\cell expand()\cell macroexp.c\cell\row
\cell fill_symbuf()\cell dbxread.c\cell\row
\cell find_debug_info_for_pst()\cell dwarf2read.c\cell\row
\cell find_kext_loadaddrs_from_kernel()\cell symfile.c\cell\row
\cell find_oload_champ_namespace_loop()\cell valops.c\cell\row
\cell find_overload_match()\cell valops.c\cell\row
\cell find_pc_offset()\cell disasm.c\cell\row
\cell find_source_lines()\cell source.c\cell\row
\cell future_break_command()\cell breakpoint.c\cell\row
\cell gather_arguments()\cell macroexp.c\cell\row
\cell gdb_breakpoint()\cell breakpoint.c\cell\row
\cell generic_load()\cell symfile.c\cell\row
\cell hand_function_call()\cell infcall.c\cell\row
\cell info_macro_command()\cell macrocmd.c\cell\row
\cell insert_bp_location()\cell breakpoint.c\cell\row
\cell internal_vproblem()\cell utils.c\cell\row
\cell invoke_block_command()\cell printcmd.c\cell\row
\cell java_parse()\cell jv-exp.c\cell\row
\cell load_comp_unit()\cell dwarf2read.c\cell\row
\cell load_full_comp_unit()\cell dwarf2read.c\cell\row
\cell load_progress()\cell symfile.c\cell\row
\cell load_section_callback()\cell symfile.c\cell\row
\cell lookup_partial_symtab()\cell symtab.c\cell\row
\cell lookup_partial_symtab_all()\cell symtab.c\cell\row
\cell lookup_struct_elt_type()\cell gdbtypes.c\cell\row
\cell lookup_symbol_in_language()\cell ada-lang.c\cell\row
\cell lookup_symtab()\cell symtab.c\cell\row
\cell lookup_symtab_all()\cell symtab.c\cell\row
\cell macro_expand()\cell macroexp.c\cell\row
\cell macro_expand_command()\cell macrocmd.c\cell\row
\cell macro_expand_next()\cell macroexp.c\cell\row
\cell macro_expand_once_command()\cell macrocmd.c\cell\row
\cell maintenance_print_msymbols()\cell symmisc.c\cell\row
\cell maintenance_print_psymbols()\cell symmisc.c\cell\row
\cell maintenance_print_symbols()\cell symmisc.c\cell\row
\cell maintenance_print_type()\cell typeprint.c\cell\row
\cell make_cleanup_bfd_close()\cell utils.c\cell\row
\cell make_cleanup_close()\cell utils.c\cell\row
\cell make_cleanup_delete_breakpoint()\cell breakpoint.c\cell\row
\cell make_cleanup_discard_minimal_symbols()\cell minsyms.c\cell\row
\cell make_cleanup_enable_disable_bpts_during_operation()\cell breakpoint.c\cell\row
\cell make_cleanup_free_actions()\cell tracepoint.c\cell\row
\cell make_cleanup_free_agent_expr()\cell ax-general.c\cell\row
\cell make_cleanup_free_bincl_list()\cell dbxread.c\cell\row
\cell make_cleanup_free_objfile()\cell objfiles.c\cell\row
\cell make_cleanup_free_search_symbols()\cell symtab.c\cell\row
\cell make_cleanup_free_variable()\cell varobj.c\cell\row
\cell make_cleanup_init_objc_exception_catcher()\cell objc-lang.c\cell\row
\cell make_cleanup_objfile_init_clear_hitlist()\cell objfiles.c\cell\row
\cell make_cleanup_regcache_xfree()\cell regcache.c\cell\row
\cell make_cleanup_restore_current_thread()\cell thread.c\cell\row
\cell make_cleanup_restore_inferior_status()\cell infrun.c\cell\row
\cell make_cleanup_restore_language()\cell language.c\cell\row
\cell make_cleanup_restrict_to_objfile()\cell objfiles.c\cell\row
\cell make_cleanup_restrict_to_objfile_by_name()\cell objfiles.c\cell\row
\cell make_cleanup_restrict_to_objfile_list()\cell objfiles.c\cell\row
\cell make_cleanup_set_restore_debugger_mode()\cell objc-lang.c\cell\row
\cell make_cleanup_set_restore_print_closure()\cell eval.c\cell\row
\cell make_cleanup_set_restore_unwind_on_signal()\cell infcall.c\cell\row
\cell make_cleanup_start_report_timer()\cell maint.c\cell\row
\cell make_cleanup_suppress_hook_stop()\cell infrun.c\cell\row
\cell make_cleanup_ui_out_end()\cell ui-out.c\cell\row
\cell make_cleanup_ui_out_notify_begin_end()\cell ui-out.c\cell\row
\cell make_cleanup_ui_out_stream_delete()\cell ui-out.c\cell\row
\cell make_cleanup_ui_out_suppress_output()\cell utils.c\cell\row
\cell make_cleanup_ui_out_table_begin_end()\cell ui-out.c\cell\row
\cell make_symbol_overload_list()\cell cp-support.c\cell\row
\cell maybe_expand()\cell macroexp.c\cell\row
\cell minsym_found()\cell linespec.c\cell\row
\cell minsyms_found()\cell linespec.c\cell\row
\cell new_objc_runtime_find_impl()\cell objc-lang.c\cell\row
\cell new_objc_runtime_get_classname()\cell objc-lang.c\cell\row
\cell nlm_symtab_read()\cell nlmread.c\cell\row
\cell objc_fixup_ivar_offset()\cell objc-lang.c\cell\row
\cell objc_read_trampoline_region()\cell objc-lang.c\cell\row
\cell objc_setup_safe_print()\cell objc-lang.c\cell\row
\cell open_bfd_from_oso()\cell dbxread.c\cell\row
\cell output_command()\cell printcmd.c\cell\row
\cell parse_and_eval()\cell eval.c\cell\row
\cell parse_and_eval_address()\cell eval.c\cell\row
\cell parse_and_eval_address_1()\cell eval.c\cell\row
\cell parse_and_eval_long()\cell eval.c\cell\row
\cell parse_breakpoint_sals()\cell breakpoint.c\cell\row
\cell parse_exp_in_context()\cell parse.c\cell\row
\cell parse_frame_specification_1()\cell stack.c\cell\row
\cell parse_partial_symbols()\cell mdebugread.c\cell\row
\cell parse_to_comma_and_eval()\cell eval.c\cell\row
\cell print_address_symbolic()\cell printcmd.c\cell\row
\cell print_command_1()\cell printcmd.c\cell\row
\cell print_object_command()\cell objc-lang.c\cell\row
\cell printf_command()\cell printcmd.c\cell\row
\cell process_full_comp_unit()\cell dwarf2read.c\cell\row
\cell psymtab_to_symtab()\cell symfile.c\cell\row
\cell psymtab_to_symtab_1()\cell mdebugread.c\cell\row
\cell ptype_command()\cell typeprint.c\cell\row
\cell rbr_break_command()\cell breakpoint.c\cell\row
\cell rbreak_command()\cell symtab.c\cell\row
\cell re_enable_breakpoints_in_shlibs()\cell breakpoint.c\cell\row
\cell read_alphacoff_dynamic_symtab()\cell mipsread.c\cell\row
\cell read_array_type()\cell dwarf2read.c\cell\row
\cell read_baseclasses()\cell stabsread.c\cell\row
\cell read_command_file()\cell top.c\cell\row
\cell read_dbx_dynamic_symtab()\cell dbxread.c\cell\row
\cell read_dbx_symtab()\cell dbxread.c\cell\row
\cell read_file_scope()\cell dwarf2read.c\cell\row
\cell read_func_scope()\cell dwarf2read.c\cell\row
\cell read_member_functions()\cell stabsread.c\cell\row
\cell read_namespace()\cell dwarf2read.c\cell\row
\cell read_ofile_symtab()\cell dwarfread.c\cell\row
\cell read_pe_exported_syms()\cell coff-pe-read.c\cell\row
\cell read_struct_fields()\cell stabsread.c\cell\row
\cell read_struct_type()\cell stabsread.c\cell\row
\cell read_structure_type()\cell dwarf2read.c\cell\row
\cell read_type_die()\cell dwarf2read.c\cell\row
\cell regcache_dump()\cell regcache.c\cell\row
\cell remote_macosx_create_inferior()\cell remote.c\cell\row
\cell remote_vcont_resume()\cell remote.c\cell\row
\cell remove_symbol_file_command()\cell symfile.c\cell\row
\cell renaming_is_visible()\cell ada-lang.c\cell\row
\cell reopen_exec_file()\cell corefile.c\cell\row
\cell reread_symbols_for_objfile()\cell symfile.c\cell\row
\cell resolve_pending_breakpoint()\cell breakpoint.c\cell\row
\cell resume()\cell infrun.c\cell\row
\cell save_breakpoints_command()\cell breakpoint.c\cell\row
\cell save_inferior_ptid()\cell infrun.c\cell\row
\cell set_command()\cell printcmd.c\cell\row
\cell set_language_command()\cell language.c\cell\row
\cell set_raw_tracepoint()\cell tracepoint.c\cell\row
\cell simplified_command_loop()\cell top.c\cell\row
\cell slide_objfile()\cell objfiles.c\cell\row
\cell solib_load_unload_1()\cell breakpoint.c\cell\row
\cell solib_map_sections()\cell solib.c\cell\row
\cell stabsect_build_psymtabs()\cell dbxread.c\cell\row
\cell stabsect_read_strtab_from_oso()\cell dbxread.c\cell\row
\cell start_timer()\cell maint.c\cell\row
\cell step_1_inlining()\cell infcmd.c\cell\row
\cell step_1_no_inlining()\cell infcmd.c\cell\row
\cell symbol_file_add_from_memory()\cell symfile-mem.c\cell\row
\cell symbol_file_add_with_addrs_or_offsets_using_objfile()\cell symfile.c\cell\row
\cell symfile_bfd_open()\cell symfile.c\cell\row
\cell syms_from_objfile()\cell symfile.c\cell\row
\cell thread_apply_all_command()\cell thread.c\cell\row
\cell thread_apply_command()\cell thread.c\cell\row
\cell trace_dump_command()\cell tracepoint.c\cell\row
\cell trace_find_line_command()\cell tracepoint.c\cell\row
\cell trace_start_command()\cell tracepoint.c\cell\row
\cell ui_out_field_stream()\cell ui-out.c\cell\row
\cell val_print_string()\cell valprint.c\cell\row
\cell validate_actionline()\cell tracepoint.c\cell\row
\cell varobj_create()\cell varobj.c\cell\row
\cell varobj_lookup_struct_elt_type_by_index()\cell varobj.c\cell\row
\cell vcomplaint()\cell complaints.c\cell\row
\cell verify_gdbarch()\cell gdbarch.c\cell\row
\cell vfprintf_maybe_filtered()\cell utils.c\cell\row
\cell vfprintf_unfiltered()\cell utils.c\cell\row
\cell wait_for_inferior()\cell infrun.c\cell\row
\cell whatis_exp()\cell typeprint.c\cell\row
\cell x_command()\cell printcmd.c\cell\row
Refs Var:\cell cleanup_chain\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function make_cleanup_bfd_close()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct cleanup* make_cleanup_bfd_close ( bfd* abfd )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell make_cleanup()\cell utils.c\cell\row
Called by:\cell convert_sect_addrs_to_offsets_via_on_disk_file()\cell symfile.c\cell\row
\cell generic_load()\cell symfile.c\cell\row
\cell symbol_file_add_with_addrs_or_offsets_using_objfile()\cell symfile.c\cell\row
Refs Func:\cell do_bfd_close_cleanup()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function make_cleanup_close()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct cleanup* make_cleanup_close ( int fd )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell make_cleanup()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
Refs Func:\cell do_close_cleanup()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function make_cleanup_free_section_addr_info()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct cleanup* make_cleanup_free_section_addr_info ( struct section_addr_info* addrs )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell make_my_cleanup()\cell utils.c\cell\row
Called by:\cell add_kext_command()\cell symfile.c\cell\row
\cell symbol_file_add_with_addrs_or_offsets_using_objfile()\cell symfile.c\cell\row
Refs Func:\cell do_free_section_addr_info()\cell utils.c\cell\row
Refs Var:\cell cleanup_chain\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function make_cleanup_freeargv()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct cleanup* make_cleanup_freeargv ( char** arg )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell make_my_cleanup()\cell utils.c\cell\row
Called by:\cell add_dsym_command()\cell symfile.c\cell\row
\cell add_kext_command()\cell symfile.c\cell\row
\cell add_symbol_file_command()\cell symfile.c\cell\row
\cell backtrace_command()\cell stack.c\cell\row
\cell core_file_command()\cell corefile.c\cell\row
\cell handle_command()\cell infrun.c\cell\row
\cell invoke_block_command()\cell printcmd.c\cell\row
\cell maintenance_print_msymbols()\cell symmisc.c\cell\row
\cell maintenance_print_psymbols()\cell symmisc.c\cell\row
\cell maintenance_print_symbols()\cell symmisc.c\cell\row
\cell save_breakpoints_command()\cell breakpoint.c\cell\row
\cell symbol_file_command()\cell symfile.c\cell\row
\cell xdb_handle_command()\cell infrun.c\cell\row
Refs Func:\cell do_freeargv()\cell utils.c\cell\row
Refs Var:\cell cleanup_chain\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function make_cleanup_restore_uiout()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct cleanup* make_cleanup_restore_uiout ( struct ui_out* old_uiout )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell make_my_cleanup()\cell utils.c\cell\row
Refs Func:\cell do_restore_uiout_cleanup()\cell utils.c\cell\row
Refs Var:\cell cleanup_chain\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function make_cleanup_set_restore_scheduler_locking_mode()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct cleanup* make_cleanup_set_restore_scheduler_locking_mode ( enum scheduler_locking_mode new_mode )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell make_my_cleanup()\cell utils.c\cell\row
\cell set_scheduler_locking_mode()\cell infrun.c\cell\row
Called by:\cell c_value_of_root()\cell varobj.c\cell\row
\cell do_end_debugger_mode()\cell objc-lang.c\cell\row
\cell get_class_address_from_object()\cell objc-lang.c\cell\row
\cell lookup_objc_class()\cell objc-lang.c\cell\row
\cell make_cleanup_set_restore_debugger_mode()\cell objc-lang.c\cell\row
\cell new_objc_runtime_find_impl()\cell objc-lang.c\cell\row
\cell new_objc_runtime_get_classname()\cell objc-lang.c\cell\row
\cell objc_setup_safe_print()\cell objc-lang.c\cell\row
\cell varobj_create()\cell varobj.c\cell\row
\cell varobj_set_value()\cell varobj.c\cell\row
Refs Func:\cell do_set_schedlock_mode()\cell utils.c\cell\row
Refs Var:\cell cleanup_chain\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function make_cleanup_ui_file_delete()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct cleanup* make_cleanup_ui_file_delete ( struct ui_file* arg )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell make_my_cleanup()\cell utils.c\cell\row
Called by:\cell ada_print_floating()\cell ada-valprint.c\cell\row
\cell c_value_of_variable()\cell varobj.c\cell\row
\cell cplusplus_error()\cell linespec.c\cell\row
\cell delete_breakpoint()\cell breakpoint.c\cell\row
\cell insert_breakpoints()\cell breakpoint.c\cell\row
\cell maintenance_print_msymbols()\cell symmisc.c\cell\row
\cell maintenance_print_psymbols()\cell symmisc.c\cell\row
\cell maintenance_print_symbols()\cell symmisc.c\cell\row
\cell memory_error()\cell corefile.c\cell\row
\cell save_breakpoints_command()\cell breakpoint.c\cell\row
\cell type_sprint()\cell typeprint.c\cell\row
\cell verify_gdbarch()\cell gdbarch.c\cell\row
Refs Func:\cell do_ui_file_delete()\cell utils.c\cell\row
Refs Var:\cell cleanup_chain\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function make_cleanup_ui_out_delete()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct cleanup* make_cleanup_ui_out_delete ( struct ui_out* arg )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell make_my_cleanup()\cell utils.c\cell\row
Called by:\cell save_breakpoints_command()\cell breakpoint.c\cell\row
Refs Func:\cell do_ui_out_delete()\cell utils.c\cell\row
Refs Var:\cell cleanup_chain\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function make_cleanup_ui_out_suppress_output()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct cleanup* make_cleanup_ui_out_suppress_output ( struct ui_out* cur_uiout )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell cli_out_new()\cell cli-out.c\cell\row
\cell error()\cell utils.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
Called by:\cell get_class_address_from_object()\cell objc-lang.c\cell\row
\cell make_cleanup_init_objc_exception_catcher()\cell objc-lang.c\cell\row
\cell new_objc_runtime_find_impl()\cell objc-lang.c\cell\row
\cell new_objc_runtime_get_classname()\cell objc-lang.c\cell\row
\cell read_objc_object()\cell objc-lang.c\cell\row
Refs Func:\cell do_restore_output()\cell utils.c\cell\row
Refs Var:\cell gdb_null\cell main.c\cell\row
\cell uiout\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function make_exec_cleanup()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct cleanup* make_exec_cleanup ( make_cleanup_ftype* function, void* arg )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell make_my_cleanup()\cell utils.c\cell\row
Called by:\cell fetch_inferior_event()\cell infrun.c\cell\row
\cell make_exec_cleanup_delete_breakpoint()\cell breakpoint.c\cell\row
\cell step_1_inlining()\cell infcmd.c\cell\row
\cell step_1_no_inlining()\cell infcmd.c\cell\row
Refs Var:\cell exec_cleanup_chain\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function make_exec_error_cleanup()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct cleanup* make_exec_error_cleanup ( make_cleanup_ftype* function, void* arg )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell make_my_cleanup()\cell utils.c\cell\row
Called by:\cell async_disable_stdin()\cell event-top.c\cell\row
Refs Var:\cell exec_error_cleanup_chain\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function make_final_cleanup()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct cleanup* make_final_cleanup ( make_cleanup_ftype* function, void* arg )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell make_my_cleanup()\cell utils.c\cell\row
Refs Var:\cell final_cleanup_chain\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function make_hand_call_cleanup()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct cleanup* make_hand_call_cleanup ( make_cleanup_ftype* function, void* arg )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell make_my_cleanup()\cell utils.c\cell\row
Called by:\cell make_cleanup_set_restore_debugger_mode()\cell objc-lang.c\cell\row
Refs Var:\cell hand_call_cleanup_chain\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function make_my_cleanup()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct cleanup* make_my_cleanup ( struct cleanup** pmy_chain, make_cleanup_ftype* function, void* arg )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell internal_error()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
Called by:\cell make_cleanup()\cell utils.c\cell\row
\cell make_cleanup_free_section_addr_info()\cell utils.c\cell\row
\cell make_cleanup_freeargv()\cell utils.c\cell\row
\cell make_cleanup_restore_uiout()\cell utils.c\cell\row
\cell make_cleanup_set_restore_scheduler_locking_mode()\cell utils.c\cell\row
\cell make_cleanup_ui_file_delete()\cell utils.c\cell\row
\cell make_cleanup_ui_out_delete()\cell utils.c\cell\row
\cell make_exec_cleanup()\cell utils.c\cell\row
\cell make_exec_error_cleanup()\cell utils.c\cell\row
\cell make_final_cleanup()\cell utils.c\cell\row
\cell make_hand_call_cleanup()\cell utils.c\cell\row
\cell make_run_cleanup()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function make_run_cleanup()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct cleanup* make_run_cleanup ( make_cleanup_ftype* function, void* arg )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell make_my_cleanup()\cell utils.c\cell\row
Called by:\cell update_solib_list()\cell solib.c\cell\row
Refs Var:\cell run_cleanup_chain\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function myread()\par}
{\s5\f1\fs20\ql\sb50\sa50 int myread ( int desc, char* addr, int len )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell  read()\cell\cell\row
Called by:\cell find_source_lines()\cell source.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function n_spaces()\par}
{\s5\f1\fs20\ql\sb50\sa50 char* n_spaces ( int n )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell xfree()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
Called by:\cell cp_print_value_fields()\cell cp-valprint.c\cell\row
\cell java_print_value_fields()\cell jv-valprint.c\cell\row
\cell java_value_print()\cell jv-valprint.c\cell\row
\cell pascal_object_print_value_fields()\cell p-valprint.c\cell\row
\cell print_field_values()\cell ada-valprint.c\cell\row
\cell print_spaces()\cell utils.c\cell\row
\cell print_spaces_filtered()\cell utils.c\cell\row
\cell val_print_array_elements()\cell valprint.c\cell\row
\cell val_print_packed_array_elements()\cell ada-valprint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function nomem()\par}
{\s5\f1\fs20\ql\sb50\sa50 void nomem ( long size )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell internal_error()\cell utils.c\cell\row
Called by:\cell add_kext_command()\cell symfile.c\cell\row
\cell add_symbol_file_command()\cell symfile.c\cell\row
\cell backtrace_command()\cell stack.c\cell\row
\cell core_file_command()\cell corefile.c\cell\row
\cell handle_command()\cell infrun.c\cell\row
\cell maintenance_print_msymbols()\cell symmisc.c\cell\row
\cell maintenance_print_psymbols()\cell symmisc.c\cell\row
\cell maintenance_print_symbols()\cell symmisc.c\cell\row
\cell save_breakpoints_command()\cell breakpoint.c\cell\row
\cell symbol_file_command()\cell symfile.c\cell\row
\cell xcalloc()\cell utils.c\cell\row
\cell xdb_handle_command()\cell infrun.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell xmcalloc()\cell utils.c\cell\row
\cell xmmalloc()\cell utils.c\cell\row
\cell xmrealloc()\cell utils.c\cell\row
\cell xrealloc()\cell utils.c\cell\row
\cell xstrvprintf()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function nquery()\par}
{\s5\f1\fs20\ql\sb50\sa50 int nquery ( const char* ctlstr, ... )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell defaulted_query()\cell utils.c\cell\row
\cell  __builtin_va_end(), __builtin_va_start()\cell\cell\row
Called by:\cell break_command_2()\cell breakpoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function null_cleanup()\par}
{\s5\f1\fs20\ql\sb50\sa50 void null_cleanup ( void* arg )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Used in:\cell add_kext_command()\cell symfile.c\cell\row
\cell add_symbol_file_command()\cell symfile.c\cell\row
\cell break_command_2()\cell breakpoint.c\cell\row
\cell breakpoint_re_set_one()\cell breakpoint.c\cell\row
\cell command_handler()\cell event-top.c\cell\row
\cell command_loop()\cell top.c\cell\row
\cell default_setup_safe_print()\cell target/target.c\cell\row
\cell do_captured_breakpoint()\cell breakpoint.c\cell\row
\cell do_mixed_source_and_assembly()\cell disasm.c\cell\row
\cell dwarf2_start_subfile()\cell dwarf2read.c\cell\row
\cell expand()\cell macroexp.c\cell\row
\cell hand_function_call()\cell infcall.c\cell\row
\cell make_cleanup_restrict_to_objfile_by_name()\cell objfiles.c\cell\row
\cell make_cleanup_set_restore_debugger_mode()\cell objc-lang.c\cell\row
\cell make_cleanup_start_report_timer()\cell maint.c\cell\row
\cell minsym_found()\cell linespec.c\cell\row
\cell minsyms_found()\cell linespec.c\cell\row
\cell objc_setup_safe_print()\cell objc-lang.c\cell\row
\cell parse_breakpoint_sals()\cell breakpoint.c\cell\row
\cell read_array_type()\cell dwarf2read.c\cell\row
\cell read_file_scope()\cell dwarf2read.c\cell\row
\cell read_namespace()\cell dwarf2read.c\cell\row
\cell read_struct_type()\cell stabsread.c\cell\row
\cell read_structure_type()\cell dwarf2read.c\cell\row
\cell regcache_dump()\cell regcache.c\cell\row
\cell simplified_command_loop()\cell top.c\cell\row
\cell slide_objfile()\cell objfiles.c\cell\row
\cell solib_load_unload_1()\cell breakpoint.c\cell\row
\cell stabsect_read_strtab_from_oso()\cell dbxread.c\cell\row
\cell start_timer()\cell maint.c\cell\row
\cell trace_dump_command()\cell tracepoint.c\cell\row
\cell val_print_string()\cell valprint.c\cell\row
\cell varobj_create()\cell varobj.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function paddr()\par}
{\s5\f1\fs20\ql\sb50\sa50 char* paddr ( CORE_ADDR addr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell gdbarch_addr_bit()\cell gdbarch.c\cell\row
\cell phex()\cell utils.c\cell\row
Called by:\cell compare_sections_command()\cell remote.c\cell\row
\cell convert_oso_map_to_final_map()\cell dwarf2read.c\cell\row
\cell create_breakpoints()\cell breakpoint.c\cell\row
\cell create_thread_event_breakpoint()\cell breakpoint.c\cell\row
\cell debug_keep_going()\cell target/target.c\cell\row
\cell execute_cfa_program()\cell dwarf2-frame.c\cell\row
\cell handle_inferior_event()\cell infrun.c\cell\row
\cell load_progress()\cell symfile.c\cell\row
\cell maint_print_section_info()\cell maint.c\cell\row
\cell maintenance_translate_address()\cell maint.c\cell\row
\cell record_minimal_symbol()\cell dbxread.c\cell\row
\cell syms_from_objfile()\cell symfile.c\cell\row
\cell translate_debug_map_address_with_tuple()\cell dwarf2read.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function paddr_d()\par}
{\s5\f1\fs20\ql\sb50\sa50 char* paddr_d ( long addr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell decimal2str()\cell utils.c\cell\row
Called by:\cell debug_print_register()\cell target/target.c\cell\row
\cell gdbarch_dump()\cell gdbarch.c\cell\row
\cell target_xfer_partial()\cell target/target.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function paddr_nz()\par}
{\s5\f1\fs20\ql\sb50\sa50 char* paddr_nz ( CORE_ADDR addr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell gdbarch_addr_bit()\cell gdbarch.c\cell\row
\cell phex_nz()\cell utils.c\cell\row
Called by:\cell add_symbol_file_command()\cell symfile.c\cell\row
\cell add_vsyscall_page()\cell symfile-mem.c\cell\row
\cell create_kext_addr_map()\cell dwarf2read.c\cell\row
\cell create_new_frame()\cell frame.c\cell\row
\cell debug_load_solib()\cell target/target.c\cell\row
\cell debug_print_register()\cell target/target.c\cell\row
\cell debug_to_insert_breakpoint()\cell target/target.c\cell\row
\cell debug_to_remove_breakpoint()\cell target/target.c\cell\row
\cell deprecated_debug_xfer_memory()\cell target/target.c\cell\row
\cell deprecated_update_frame_base_hack()\cell frame.c\cell\row
\cell deprecated_update_frame_pc_hack()\cell frame.c\cell\row
\cell dump_objfile()\cell symmisc.c\cell\row
\cell dwarf2_record_line()\cell dwarf2read.c\cell\row
\cell find_implementation()\cell objc-lang.c\cell\row
\cell find_implementation_from_class()\cell objc-lang.c\cell\row
\cell find_pc_sect_symtab()\cell symtab.c\cell\row
\cell finish_block()\cell buildsym.c\cell\row
\cell fprint_field()\cell frame.c\cell\row
\cell fprint_frame()\cell frame.c\cell\row
\cell frame_func_unwind()\cell frame.c\cell\row
\cell frame_pc_unwind()\cell frame.c\cell\row
\cell frame_register_unwind()\cell frame.c\cell\row
\cell gdbarch_dump()\cell gdbarch.c\cell\row
\cell generic_load()\cell symfile.c\cell\row
\cell get_class_address_from_object()\cell objc-lang.c\cell\row
\cell hand_function_call()\cell infcall.c\cell\row
\cell handle_inferior_event()\cell infrun.c\cell\row
\cell inlined_function_add_function_names()\cell inlining.c\cell\row
\cell insert_step_resume_breakpoint_at_frame()\cell infrun.c\cell\row
\cell java_value_print()\cell jv-valprint.c\cell\row
\cell load_section_callback()\cell symfile.c\cell\row
\cell locexpr_describe_location()\cell dwarf2loc.c\cell\row
\cell loclist_describe_location()\cell dwarf2loc.c\cell\row
\cell new_objc_runtime_class_getClass()\cell objc-lang.c\cell\row
\cell new_objc_runtime_find_impl()\cell objc-lang.c\cell\row
\cell objc_fixup_ivar_offset()\cell objc-lang.c\cell\row
\cell objfile_delete_from_ordered_sections()\cell objfiles.c\cell\row
\cell print_object_command()\cell objc-lang.c\cell\row
\cell print_single_dwarf_location()\cell dwarf2loc.c\cell\row
\cell print_symbol()\cell symmisc.c\cell\row
\cell proceed()\cell infrun.c\cell\row
\cell rb_print_node()\cell dwarf2read.c\cell\row
\cell read_objc_object()\cell objc-lang.c\cell\row
\cell remote_check_symbols()\cell remote.c\cell\row
\cell remove_breakpoints()\cell breakpoint.c\cell\row
\cell scm_ipruk()\cell scm-valprint.c\cell\row
\cell scm_scmval_print()\cell scm-valprint.c\cell\row
\cell target_xfer_partial()\cell target/target.c\cell\row
\cell translate_common_symbol_debug_map_address()\cell dwarf2read.c\cell\row
\cell translate_debug_map_address()\cell dwarf2read.c\cell\row
\cell watch_command_1()\cell breakpoint.c\cell\row
\cell x86_analyze_prologue()\cell target/x86-shared-tdep.c\cell\row
\cell x86_frame_prev_register()\cell target/x86-shared-tdep.c\cell\row
\cell x86_frame_this_id()\cell target/x86-shared-tdep.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function paddr_u()\par}
{\s5\f1\fs20\ql\sb50\sa50 char* paddr_u ( CORE_ADDR addr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell decimal2str()\cell utils.c\cell\row
Called by:\cell maintenance_translate_address()\cell maint.c\cell\row
\cell parse_breakpoint_sals()\cell breakpoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function paddress()\par}
{\s5\f1\fs20\ql\sb50\sa50 const char* paddress ( CORE_ADDR addr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell gdbarch_addr_bit()\cell gdbarch.c\cell\row
\cell hex_string()\cell utils.c\cell\row
Called by:\cell deprecated_print_address_numeric()\cell printcmd.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function paddress_with_arch()\par}
{\s5\f1\fs20\ql\sb50\sa50 const char* paddress_with_arch ( struct gdbarch* gdbarch, CORE_ADDR addr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell gdbarch_addr_bit()\cell gdbarch.c\cell\row
\cell hex_string()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function parse_escape()\par}
{\s5\f1\fs20\ql\sb50\sa50 int parse_escape ( const char** string_ptr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell c_parse_backslash()\cell cp-name-parser.c\cell\row
\cell error()\cell utils.c\cell\row
\cell host_char_to_target()\cell charset.c\cell\row
\cell host_charset()\cell charset.c\cell\row
\cell no_control_char_error()\cell utils.c\cell\row
\cell parse_escape()\cell utils.c\cell\row
\cell target_char_to_control_char()\cell charset.c\cell\row
\cell target_charset()\cell charset.c\cell\row
Called by:\cell c_lex()\cell c-exp.c\cell\row
\cell get_character_constant()\cell macroexp.c\cell\row
\cell get_string_literal()\cell macroexp.c\cell\row
\cell java_lex()\cell jv-exp.c\cell\row
\cell objc_lex()\cell objc-exp.c\cell\row
\cell parse_escape()\cell utils.c\cell\row
\cell pascal_lex()\cell p-exp.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function perror_with_name()\par}
{\s5\f1\fs20\ql\sb50\sa50 void perror_with_name ( const char* string )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
\cell safe_strerror()\cell utils.c\cell\row
\cell  __builtin___strcat_chk(), __builtin___strcpy_chk(), __builtin_alloca(), __builtin_object_size(), __error(), __inline_strcat_chk(), __inline_strcpy_chk(), bfd_set_error(), strlen()\cell\cell\row
Called by:\cell coff_symtab_read()\cell coffread.c\cell\row
\cell coffstab_build_psymtabs()\cell dbxread.c\cell\row
\cell dbx_symfile_init()\cell dbxread.c\cell\row
\cell dbx_symfile_read()\cell dbxread.c\cell\row
\cell dwarf2_scan_inlined_section_for_psymbols()\cell dwarf2read.c\cell\row
\cell dwarf2_scan_pubtype_for_psymbols()\cell dwarf2read.c\cell\row
\cell elfstab_build_psymtabs()\cell dbxread.c\cell\row
\cell fill_symbuf()\cell dbxread.c\cell\row
\cell find_source_lines()\cell source.c\cell\row
\cell forward_search_command()\cell source.c\cell\row
\cell gdb_wait_for_event()\cell event-loop.c\cell\row
\cell generic_load()\cell symfile.c\cell\row
\cell maintenance_print_architecture()\cell maint.c\cell\row
\cell maintenance_print_dummy_frames()\cell dummy-frame.c\cell\row
\cell maintenance_print_msymbols()\cell symmisc.c\cell\row
\cell maintenance_print_psymbols()\cell symmisc.c\cell\row
\cell maintenance_print_reggroups()\cell reggroups.c\cell\row
\cell maintenance_print_symbols()\cell symmisc.c\cell\row
\cell print_source_lines_base()\cell source.c\cell\row
\cell putpkt_binary()\cell remote.c\cell\row
\cell readchar()\cell remote.c\cell\row
\cell regcache_print()\cell regcache.c\cell\row
\cell remote_open_1()\cell remote.c\cell\row
\cell reverse_search_command()\cell source.c\cell\row
\cell serial_open()\cell serial.c\cell\row
\cell solib_map_sections()\cell solib.c\cell\row
\cell stabsect_build_psymtabs()\cell dbxread.c\cell\row
\cell stabsect_read_strtab_from_oso()\cell dbxread.c\cell\row
\cell symfile_bfd_open()\cell symfile.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function phex()\par}
{\s5\f1\fs20\ql\sb50\sa50 char* phex ( unsigned long l, int sizeof_l )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell get_cell()\cell utils.c\cell\row
\cell phex()\cell utils.c\cell\row
\cell xsnprintf()\cell utils.c\cell\row
Called by:\cell core_addr_to_string()\cell utils.c\cell\row
\cell paddr()\cell utils.c\cell\row
\cell phex()\cell utils.c\cell\row
Refs Var:\cell thirty_two\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function phex_nz()\par}
{\s5\f1\fs20\ql\sb50\sa50 char* phex_nz ( unsigned long l, int sizeof_l )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell get_cell()\cell utils.c\cell\row
\cell phex_nz()\cell utils.c\cell\row
\cell xsnprintf()\cell utils.c\cell\row
Called by:\cell core_addr_to_string_nz()\cell utils.c\cell\row
\cell hex_string()\cell utils.c\cell\row
\cell hex_string_custom()\cell utils.c\cell\row
\cell memory_error()\cell corefile.c\cell\row
\cell paddr_nz()\cell utils.c\cell\row
\cell phex_nz()\cell utils.c\cell\row
\cell remote_wait()\cell remote.c\cell\row
\cell remote_xfer_partial()\cell remote.c\cell\row
\cell store_register_using_P()\cell remote.c\cell\row
Refs Var:\cell thirty_two\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function print_spaces()\par}
{\s5\f1\fs20\ql\sb50\sa50 void print_spaces ( int n, struct ui_file* file )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell fputs_unfiltered()\cell ui-file.c\cell\row
\cell n_spaces()\cell utils.c\cell\row
Called by:\cell dump_symtab_1()\cell symmisc.c\cell\row
\cell print_symbol()\cell symmisc.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function print_spaces_filtered()\par}
{\s5\f1\fs20\ql\sb50\sa50 void print_spaces_filtered ( int n, struct ui_file* stream )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell fputs_filtered()\cell utils.c\cell\row
\cell n_spaces()\cell utils.c\cell\row
Called by:\cell ada_val_print_1()\cell ada-valprint.c\cell\row
\cell c_type_print_base()\cell c-typeprint.c\cell\row
\cell c_val_print()\cell c-valprint.c\cell\row
\cell cli_spaces()\cell cli-out.c\cell\row
\cell cp_print_value()\cell cp-valprint.c\cell\row
\cell cp_print_value_fields()\cell cp-valprint.c\cell\row
\cell default_print_registers_info()\cell infcmd.c\cell\row
\cell fprintfi_filtered()\cell utils.c\cell\row
\cell java_print_value_fields()\cell jv-valprint.c\cell\row
\cell java_type_print_base()\cell jv-typeprint.c\cell\row
\cell pascal_object_print_value()\cell p-valprint.c\cell\row
\cell pascal_object_print_value_fields()\cell p-valprint.c\cell\row
\cell pascal_type_print_base()\cell p-typeprint.c\cell\row
\cell pascal_val_print()\cell p-valprint.c\cell\row
\cell print_field_values()\cell ada-valprint.c\cell\row
\cell print_record()\cell ada-valprint.c\cell\row
\cell printfi_filtered()\cell utils.c\cell\row
\cell val_print_array_elements()\cell valprint.c\cell\row
\cell val_print_packed_array_elements()\cell ada-valprint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function print_sys_errmsg()\par}
{\s5\f1\fs20\ql\sb50\sa50 void print_sys_errmsg ( const char* string, int errcode )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell fprintf_unfiltered()\cell utils.c\cell\row
\cell gdb_flush()\cell ui-file.c\cell\row
\cell safe_strerror()\cell utils.c\cell\row
\cell  __builtin___strcat_chk(), __builtin___strcpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_strcat_chk(), __inline_strcpy_chk(), strlen()\cell\cell\row
Called by:\cell add_path()\cell source.c\cell\row
\cell new_tty()\cell inflow.c\cell\row
\cell print_source_lines_base()\cell source.c\cell\row
Refs Var:\cell gdb_stderr\cell main.c\cell\row
\cell gdb_stdout\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function printf_filtered()\par}
{\s5\f1\fs20\ql\sb50\sa50 void printf_filtered ( const char* format, ... )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell vfprintf_filtered()\cell utils.c\cell\row
\cell  __builtin_va_end(), __builtin_va_start()\cell\cell\row
Called by:\cell ada_resolve_function()\cell ada-lang.c\cell\row
\cell add_kext_command()\cell symfile.c\cell\row
\cell add_memrange()\cell tracepoint.c\cell\row
\cell add_register()\cell tracepoint.c\cell\row
\cell add_symbol_file_command()\cell symfile.c\cell\row
\cell address_info()\cell printcmd.c\cell\row
\cell backtrace_command_1()\cell stack.c\cell\row
\cell basic_lookup_transparent_type()\cell symtab.c\cell\row
\cell bpstat_stop_status()\cell breakpoint.c\cell\row
\cell breakpoint_re_set_one()\cell breakpoint.c\cell\row
\cell captured_main()\cell main.c\cell\row
\cell child_terminal_info()\cell inflow.c\cell\row
\cell classes_info()\cell objc-lang.c\cell\row
\cell collect_symbol()\cell tracepoint.c\cell\row
\cell compare_sections_command()\cell remote.c\cell\row
\cell condition_command_1()\cell breakpoint.c\cell\row
\cell continue_command()\cell infcmd.c\cell\row
\cell dbx_psymtab_to_symtab()\cell dbxread.c\cell\row
\cell dbx_psymtab_to_symtab_1()\cell dbxread.c\cell\row
\cell decode_line_2()\cell linespec.c\cell\row
\cell defaulted_query()\cell utils.c\cell\row
\cell describe_other_breakpoints()\cell breakpoint.c\cell\row
\cell disable_breakpoints_in_shlibs()\cell breakpoint.c\cell\row
\cell display_info()\cell printcmd.c\cell\row
\cell do_enable_breakpoint()\cell breakpoint.c\cell\row
\cell do_examine()\cell printcmd.c\cell\row
\cell do_one_display()\cell printcmd.c\cell\row
\cell dump_fn_fieldlists()\cell gdbtypes.c\cell\row
\cell dump_objfile()\cell symmisc.c\cell\row
\cell dwarf2_debug_map_psymtab_to_symtab()\cell dwarf2read.c\cell\row
\cell dwarf2_kext_psymtab_to_symtab()\cell dwarf2read.c\cell\row
\cell dwarf2_psymtab_to_symtab()\cell dwarf2read.c\cell\row
\cell dwarf_psymtab_to_symtab()\cell dwarfread.c\cell\row
\cell encode_actions()\cell tracepoint.c\cell\row
\cell execute_command()\cell top.c\cell\row
\cell find_implementation_from_class()\cell objc-lang.c\cell\row
\cell finish_command()\cell infcmd.c\cell\row
\cell finish_tfind_command()\cell tracepoint.c\cell\row
\cell forward_search_command()\cell source.c\cell\row
\cell frame_info()\cell stack.c\cell\row
\cell func_command()\cell stack.c\cell\row
\cell gdb_kod_display()\cell kod.c\cell\row
\cell get_number_trailer()\cell breakpoint.c\cell\row
\cell get_tracepoint_by_number()\cell tracepoint.c\cell\row
\cell go_command()\cell infcmd.c\cell\row
\cell handle_inferior_event()\cell infrun.c\cell\row
\cell ignore_command()\cell breakpoint.c\cell\row
\cell info_common_command()\cell f-valprint.c\cell\row
\cell info_ext_lang_command()\cell symfile.c\cell\row
\cell insert_bp_location()\cell breakpoint.c\cell\row
\cell internal_vproblem()\cell utils.c\cell\row
\cell invoke_block_command()\cell printcmd.c\cell\row
\cell jump_command()\cell infcmd.c\cell\row
\cell kill_command()\cell inflow.c\cell\row
\cell kod_set_os()\cell kod.c\cell\row
\cell line_info()\cell source.c\cell\row
\cell list_all_visible_commons()\cell f-valprint.c\cell\row
\cell list_overlays_command()\cell symfile.c\cell\row
\cell lookup_symbol_aux_psymtabs()\cell symtab.c\cell\row
\cell lookup_symtab_all()\cell symtab.c\cell\row
\cell maint_print_section_info()\cell maint.c\cell\row
\cell maintenance_check_symtabs()\cell symmisc.c\cell\row
\cell maintenance_do_deprecate()\cell maint.c\cell\row
\cell maintenance_info_psymtabs()\cell symmisc.c\cell\row
\cell maintenance_info_sections()\cell maint.c\cell\row
\cell maintenance_info_symtabs()\cell symmisc.c\cell\row
\cell maintenance_translate_address()\cell maint.c\cell\row
\cell mdebug_psymtab_to_symtab()\cell mdebugread.c\cell\row
\cell mem_info_command()\cell memattr.c\cell\row
\cell mention()\cell breakpoint.c\cell\row
\cell normal_stop()\cell infrun.c\cell\row
\cell objc_init_trampoline_observer()\cell objc-lang.c\cell\row
\cell output_source_filename()\cell symtab.c\cell\row
\cell parse_external()\cell mdebugread.c\cell\row
\cell prim_record_minimal_symbol_and_info()\cell minsyms.c\cell\row
\cell print_bcache_statistics()\cell bcache.c\cell\row
\cell print_bfd_flags()\cell maint.c\cell\row
\cell print_bit_vector()\cell gdbtypes.c\cell\row
\cell print_bound_type()\cell gdbtypes.c\cell\row
\cell print_command_1()\cell printcmd.c\cell\row
\cell print_cplus_stuff()\cell gdbtypes.c\cell\row
\cell print_exception_catchpoint()\cell breakpoint.c\cell\row
\cell print_formatted()\cell printcmd.c\cell\row
\cell print_it_typical()\cell breakpoint.c\cell\row
\cell print_mention_exception_catchpoint()\cell breakpoint.c\cell\row
\cell print_msymbol_info()\cell symtab.c\cell\row
\cell print_object_command()\cell objc-lang.c\cell\row
\cell print_objfile_statistics()\cell symmisc.c\cell\row
\cell print_percentage()\cell bcache.c\cell\row
\cell print_symbol_bcache_statistics()\cell symmisc.c\cell\row
\cell print_symbol_info()\cell symtab.c\cell\row
\cell printf_command()\cell printcmd.c\cell\row
\cell program_info()\cell infcmd.c\cell\row
\cell psymtab_to_symtab_1()\cell mdebugread.c\cell\row
\cell ptype_command()\cell typeprint.c\cell\row
\cell push_remote_macosx_target()\cell remote.c\cell\row
\cell push_remote_target()\cell remote.c\cell\row
\cell query()\cell utils.c\cell\row
\cell rbreak_command()\cell symtab.c\cell\row
\cell re_enable_breakpoints_in_shlibs()\cell breakpoint.c\cell\row
\cell read_frame()\cell remote.c\cell\row
\cell read_pe_exported_syms()\cell coff-pe-read.c\cell\row
\cell record_minimal_symbol()\cell dbxread.c\cell\row
\cell recursive_dump_type()\cell gdbtypes.c\cell\row
\cell reg_flush_command()\cell regcache.c\cell\row
\cell remote_async_wait()\cell remote.c\cell\row
\cell remote_wait()\cell remote.c\cell\row
\cell resolve_pending_breakpoint()\cell breakpoint.c\cell\row
\cell resolve_subexp()\cell ada-lang.c\cell\row
\cell reverse_search_command()\cell source.c\cell\row
\cell save_breakpoints_command()\cell breakpoint.c\cell\row
\cell scope_info()\cell tracepoint.c\cell\row
\cell selectors_info()\cell objc-lang.c\cell\row
\cell set_environment_command()\cell infcmd.c\cell\row
\cell set_ignore_count()\cell breakpoint.c\cell\row
\cell set_input_radix_1()\cell valprint.c\cell\row
\cell set_output_radix_1()\cell valprint.c\cell\row
\cell set_radix()\cell valprint.c\cell\row
\cell show_commands()\cell top.c\cell\row
\cell show_convenience()\cell value.c\cell\row
\cell show_language_command()\cell language.c\cell\row
\cell show_max_remote_packet_size()\cell remote.c\cell\row
\cell show_memory_packet_size()\cell remote.c\cell\row
\cell show_no_ack_mode_cmd()\cell remote.c\cell\row
\cell show_packet_config_cmd()\cell remote.c\cell\row
\cell show_radix()\cell valprint.c\cell\row
\cell show_remote_debugflags_command()\cell remote.c\cell\row
\cell show_values()\cell value.c\cell\row
\cell sig_print_header()\cell infrun.c\cell\row
\cell sig_print_info()\cell infrun.c\cell\row
\cell signal_command()\cell infcmd.c\cell\row
\cell signals_info()\cell infrun.c\cell\row
\cell slide_objfile()\cell objfiles.c\cell\row
\cell source_info()\cell source.c\cell\row
\cell sources_info()\cell symtab.c\cell\row
\cell step_1_inlining()\cell infcmd.c\cell\row
\cell step_1_no_inlining()\cell infcmd.c\cell\row
\cell step_once()\cell infcmd.c\cell\row
\cell stop_command()\cell breakpoint.c\cell\row
\cell stopat_command()\cell breakpoint.c\cell\row
\cell stopin_command()\cell breakpoint.c\cell\row
\cell stringify_collection_list()\cell tracepoint.c\cell\row
\cell sym_info()\cell printcmd.c\cell\row
\cell syms_from_objfile()\cell symfile.c\cell\row
\cell symtab_symbol_info()\cell symtab.c\cell\row
\cell thread_apply_all_command()\cell thread.c\cell\row
\cell thread_apply_command()\cell thread.c\cell\row
\cell thread_command()\cell thread.c\cell\row
\cell trace_actions_command()\cell tracepoint.c\cell\row
\cell trace_command()\cell tracepoint.c\cell\row
\cell trace_dump_command()\cell tracepoint.c\cell\row
\cell trace_find_line_command()\cell tracepoint.c\cell\row
\cell trace_find_outside_command()\cell tracepoint.c\cell\row
\cell trace_find_range_command()\cell tracepoint.c\cell\row
\cell trace_mention()\cell tracepoint.c\cell\row
\cell trace_pass_command()\cell tracepoint.c\cell\row
\cell tracepoint_save_command()\cell tracepoint.c\cell\row
\cell tracepoints_info()\cell tracepoint.c\cell\row
\cell unset_command()\cell infcmd.c\cell\row
\cell whatis_exp()\cell typeprint.c\cell\row
\cell x86_analyze_prologue()\cell target/x86-shared-tdep.c\cell\row
\cell x86_frame_prev_register()\cell target/x86-shared-tdep.c\cell\row
\cell x86_frame_this_id()\cell target/x86-shared-tdep.c\cell\row
\cell xdb_handle_command()\cell infrun.c\cell\row
Refs Var:\cell gdb_stdout\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function printf_unfiltered()\par}
{\s5\f1\fs20\ql\sb50\sa50 void printf_unfiltered ( const char* format, ... )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell vfprintf_unfiltered()\cell utils.c\cell\row
\cell  __builtin_va_end(), __builtin_va_start()\cell\cell\row
Called by:\cell add_symbol_file_command()\cell symfile.c\cell\row
\cell async_stop_sig()\cell event-top.c\cell\row
\cell captured_main()\cell main.c\cell\row
\cell check_field()\cell valops.c\cell\row
\cell clear_command()\cell breakpoint.c\cell\row
\cell command_handler()\cell event-top.c\cell\row
\cell command_line_handler()\cell event-top.c\cell\row
\cell command_line_handler_continuation()\cell event-top.c\cell\row
\cell command_line_input()\cell top.c\cell\row
\cell command_loop()\cell top.c\cell\row
\cell create_mem_region()\cell memattr.c\cell\row
\cell decode_line_2()\cell linespec.c\cell\row
\cell default_terminal_info()\cell target/target.c\cell\row
\cell disable_display()\cell printcmd.c\cell\row
\cell discard_hand_call_cleanups()\cell utils.c\cell\row
\cell display_info()\cell printcmd.c\cell\row
\cell do_hand_call_cleanups()\cell utils.c\cell\row
\cell enable_display()\cell printcmd.c\cell\row
\cell find_implementation_from_class()\cell objc-lang.c\cell\row
\cell first_component_command()\cell cp-support.c\cell\row
\cell follow_exec()\cell infrun.c\cell\row
\cell get_selections()\cell ada-lang.c\cell\row
\cell get_tracepoint_by_number()\cell tracepoint.c\cell\row
\cell getpkt_sane()\cell remote.c\cell\row
\cell handle_command()\cell infrun.c\cell\row
\cell handle_file_event()\cell event-loop.c\cell\row
\cell inferior_event_handler()\cell inf-loop.c\cell\row
\cell info_sharedlibrary_command()\cell solib.c\cell\row
\cell kill_or_be_killed()\cell target/target.c\cell\row
\cell language_info()\cell language.c\cell\row
\cell macro_command()\cell macrocmd.c\cell\row
\cell maint_cplus_command()\cell cp-support.c\cell\row
\cell maintenance_command()\cell maint.c\cell\row
\cell maintenance_cplus_namespace()\cell cp-namespace.c\cell\row
\cell maintenance_demangle()\cell maint.c\cell\row
\cell maintenance_deprecate()\cell maint.c\cell\row
\cell maintenance_info_command()\cell maint.c\cell\row
\cell maintenance_interval_display()\cell maint.c\cell\row
\cell maintenance_print_command()\cell maint.c\cell\row
\cell maintenance_set_cmd()\cell maint.c\cell\row
\cell maintenance_space_display()\cell maint.c\cell\row
\cell maintenance_time_display()\cell maint.c\cell\row
\cell maintenance_undeprecate()\cell maint.c\cell\row
\cell map_breakpoint_numbers()\cell breakpoint.c\cell\row
\cell map_overlay_command()\cell symfile.c\cell\row
\cell mdebug_build_psymtabs()\cell mdebugread.c\cell\row
\cell mem_delete()\cell memattr.c\cell\row
\cell mem_disable()\cell memattr.c\cell\row
\cell mem_enable()\cell memattr.c\cell\row
\cell mem_info_command()\cell memattr.c\cell\row
\cell overlay_auto_command()\cell symfile.c\cell\row
\cell overlay_command()\cell symfile.c\cell\row
\cell overlay_manual_command()\cell symfile.c\cell\row
\cell overlay_off_command()\cell symfile.c\cell\row
\cell print_command_1()\cell printcmd.c\cell\row
\cell prompt_for_continue()\cell utils.c\cell\row
\cell reread_symbols_for_objfile()\cell symfile.c\cell\row
\cell serial_set_cmd()\cell serial.c\cell\row
\cell set_architecture()\cell arch-utils.c\cell\row
\cell set_check()\cell language.c\cell\row
\cell set_demangling_command()\cell demangle.c\cell\row
\cell set_endian()\cell arch-utils.c\cell\row
\cell set_history()\cell top.c\cell\row
\cell set_language_command()\cell language.c\cell\row
\cell set_print()\cell valprint.c\cell\row
\cell set_scheduler_locking_mode()\cell infrun.c\cell\row
\cell show_case_command()\cell language.c\cell\row
\cell show_convenience()\cell value.c\cell\row
\cell show_endian()\cell arch-utils.c\cell\row
\cell show_range_command()\cell language.c\cell\row
\cell show_system_call_allowed()\cell remote-fileio.c\cell\row
\cell show_type_command()\cell language.c\cell\row
\cell solib_add()\cell solib.c\cell\row
\cell solib_read_symbols()\cell solib.c\cell\row
\cell stdin_event_handler()\cell event-top.c\cell\row
\cell stop_sig()\cell top.c\cell\row
\cell symbol_file_add_with_addrs_or_offsets_using_objfile()\cell symfile.c\cell\row
\cell symbol_file_clear()\cell symfile.c\cell\row
\cell target_info()\cell target/target.c\cell\row
\cell user_select_syms()\cell ada-lang.c\cell\row
Refs Var:\cell gdb_stdout\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function printfi_filtered()\par}
{\s5\f1\fs20\ql\sb50\sa50 void printfi_filtered ( int spaces, const char* format, ... )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell print_spaces_filtered()\cell utils.c\cell\row
\cell vfprintf_filtered()\cell utils.c\cell\row
\cell  __builtin_va_end(), __builtin_va_start()\cell\cell\row
Called by:\cell dump_fn_fieldlists()\cell gdbtypes.c\cell\row
\cell print_cplus_stuff()\cell gdbtypes.c\cell\row
\cell recursive_dump_type()\cell gdbtypes.c\cell\row
Refs Var:\cell gdb_stdout\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function putchar_filtered()\par}
{\s5\f1\fs20\ql\sb50\sa50 int putchar_filtered ( int c )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell fputc_filtered()\cell utils.c\cell\row
Refs Var:\cell gdb_stdout\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function putchar_unfiltered()\par}
{\s5\f1\fs20\ql\sb50\sa50 int putchar_unfiltered ( int c )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell ui_file_write()\cell ui-file.c\cell\row
Called by:\cell clear_command()\cell breakpoint.c\cell\row
\cell putpkt_binary()\cell remote.c\cell\row
Refs Var:\cell gdb_stdout\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function puts_debug()\par}
{\s5\f1\fs20\ql\sb50\sa50 void puts_debug ( const char* prefix, const char* string, const char* suffix )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell fprintf_unfiltered()\cell utils.c\cell\row
\cell fputc_unfiltered()\cell utils.c\cell\row
\cell fputs_unfiltered()\cell ui-file.c\cell\row
\cell  isprint(), strcmp()\cell\cell\row
Refs Var:\cell gdb_stdlog\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function puts_filtered()\par}
{\s5\f1\fs20\ql\sb50\sa50 void puts_filtered ( const char* string )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell fputs_filtered()\cell utils.c\cell\row
Called by:\cell begin_line()\cell utils.c\cell\row
\cell environment_info()\cell infcmd.c\cell\row
\cell frame_info()\cell stack.c\cell\row
\cell list_overlays_command()\cell symfile.c\cell\row
\cell maintenance_check_symtabs()\cell symmisc.c\cell\row
\cell packet_command()\cell remote.c\cell\row
\cell path_info()\cell infcmd.c\cell\row
\cell print_bit_vector()\cell gdbtypes.c\cell\row
\cell print_cplus_stuff()\cell gdbtypes.c\cell\row
\cell print_packet()\cell remote.c\cell\row
\cell printf_command()\cell printcmd.c\cell\row
\cell read_frame()\cell remote.c\cell\row
\cell recursive_dump_type()\cell gdbtypes.c\cell\row
\cell remote_detach()\cell remote.c\cell\row
\cell remote_disconnect()\cell remote.c\cell\row
\cell remote_files_info()\cell remote.c\cell\row
\cell remote_open_1()\cell remote.c\cell\row
\cell show_directories()\cell source.c\cell\row
\cell wrap_here()\cell utils.c\cell\row
Refs Var:\cell gdb_stdout\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function puts_filtered_tabular()\par}
{\s5\f1\fs20\ql\sb50\sa50 void puts_filtered_tabular ( char* string, int width, int right )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell fputs_filtered()\cell utils.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell  __builtin_alloca(), strlen()\cell\cell\row
Called by:\cell classes_info()\cell objc-lang.c\cell\row
\cell selectors_info()\cell objc-lang.c\cell\row
Refs Var:\cell chars_per_line\cell utils.c\cell\row
\cell chars_printed\cell utils.c\cell\row
\cell gdb_stdout\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function puts_unfiltered()\par}
{\s5\f1\fs20\ql\sb50\sa50 void puts_unfiltered ( const char* string )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell fputs_unfiltered()\cell ui-file.c\cell\row
Called by:\cell command_line_handler()\cell event-top.c\cell\row
\cell command_line_input()\cell top.c\cell\row
Refs Var:\cell gdb_stdout\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function puuid()\par}
{\s5\f1\fs20\ql\sb50\sa50 char* puuid ( uint8_t* uuid )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell get_cell()\cell utils.c\cell\row
\cell  uuid_unparse_upper()\cell\cell\row
Called by:\cell find_kext_files_by_symfile()\cell symfile.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function query()\par}
{\s5\f1\fs20\ql\sb50\sa50 int query ( const char* ctlstr, ... )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell gdb_flush()\cell ui-file.c\cell\row
\cell input_from_terminal_p()\cell top.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell vfprintf_filtered()\cell utils.c\cell\row
\cell wrap_here()\cell utils.c\cell\row
\cell  __builtin_va_end(), __builtin_va_start(), clearerr(), deprecated_query_hook(), fgetc()\cell\cell\row
Called by:\cell add_symbol_file_command()\cell symfile.c\cell\row
\cell attach_command()\cell infcmd.c\cell\row
\cell delete_command()\cell breakpoint.c\cell\row
\cell delete_trace_command()\cell tracepoint.c\cell\row
\cell directory_command()\cell source.c\cell\row
\cell handle_command()\cell infrun.c\cell\row
\cell internal_vproblem()\cell utils.c\cell\row
\cell interrupt_query()\cell remote.c\cell\row
\cell jump_command()\cell infcmd.c\cell\row
\cell kill_command()\cell inflow.c\cell\row
\cell kill_if_already_running()\cell infcmd.c\cell\row
\cell kill_or_be_killed()\cell target/target.c\cell\row
\cell maintenance_dump_me()\cell maint.c\cell\row
\cell mem_delete_command()\cell memattr.c\cell\row
\cell quit_confirm()\cell top.c\cell\row
\cell return_command()\cell stack.c\cell\row
\cell set_memory_packet_size()\cell remote.c\cell\row
\cell symbol_file_add_with_addrs_or_offsets_using_objfile()\cell symfile.c\cell\row
\cell symbol_file_clear()\cell symfile.c\cell\row
\cell target_preopen()\cell target/target.c\cell\row
\cell undisplay_command()\cell printcmd.c\cell\row
\cell unset_environment_command()\cell infcmd.c\cell\row
Refs Var:\cell annotation_level\cell stack.c\cell\row
\cell deprecated_query_hook\cell top.c\cell\row
\cell gdb_stdout\cell main.c\cell\row
\cell quit_flag\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function quit()\par}
{\s5\f1\fs20\ql\sb50\sa50 void quit ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell fatal()\cell utils.c\cell\row
Called by:\cell ada_lookup_symbol_list()\cell ada-lang.c\cell\row
\cell ada_val_print_1()\cell ada-valprint.c\cell\row
\cell add_local_symbols()\cell tracepoint.c\cell\row
\cell async_request_quit()\cell event-top.c\cell\row
\cell backtrace_command_1()\cell stack.c\cell\row
\cell c_printstr()\cell c-lang.c\cell\row
\cell c_type_print_base()\cell c-typeprint.c\cell\row
\cell c_type_print_varspec_prefix()\cell c-typeprint.c\cell\row
\cell c_type_print_varspec_suffix()\cell c-typeprint.c\cell\row
\cell c_val_print()\cell c-valprint.c\cell\row
\cell classes_info()\cell objc-lang.c\cell\row
\cell coff_symtab_read()\cell coffread.c\cell\row
\cell cp_print_class_member()\cell cp-valprint.c\cell\row
\cell decode_line_2()\cell linespec.c\cell\row
\cell do_examine()\cell printcmd.c\cell\row
\cell dump_insns()\cell disasm.c\cell\row
\cell encode_actions()\cell tracepoint.c\cell\row
\cell f_printstr()\cell f-lang.c\cell\row
\cell f_type_print_base()\cell f-typeprint.c\cell\row
\cell f_type_print_varspec_prefix()\cell f-typeprint.c\cell\row
\cell f_type_print_varspec_suffix()\cell f-typeprint.c\cell\row
\cell find_methods()\cell objc-lang.c\cell\row
\cell getpkt_sane()\cell remote.c\cell\row
\cell java_type_print_base()\cell jv-typeprint.c\cell\row
\cell m2_printstr()\cell m2-lang.c\cell\row
\cell make_symbol_completion_list()\cell symtab.c\cell\row
\cell make_symbol_overload_list_qualified()\cell cp-support.c\cell\row
\cell map_args_over_tracepoints()\cell tracepoint.c\cell\row
\cell objc_printstr()\cell objc-lang.c\cell\row
\cell pascal_object_print_class_member()\cell p-valprint.c\cell\row
\cell pascal_printstr()\cell p-lang.c\cell\row
\cell pascal_type_print_base()\cell p-typeprint.c\cell\row
\cell pascal_type_print_varspec_prefix()\cell p-typeprint.c\cell\row
\cell pascal_type_print_varspec_suffix()\cell p-typeprint.c\cell\row
\cell pascal_val_print()\cell p-valprint.c\cell\row
\cell print_enum_type()\cell ada-typeprint.c\cell\row
\cell print_frame()\cell stack.c\cell\row
\cell print_frame_args()\cell stack.c\cell\row
\cell print_frame_nameless_args()\cell stack.c\cell\row
\cell print_object_command()\cell objc-lang.c\cell\row
\cell print_record_field_types()\cell ada-typeprint.c\cell\row
\cell printf_command()\cell printcmd.c\cell\row
\cell printstr()\cell ada-valprint.c\cell\row
\cell read_dbx_symtab()\cell dbxread.c\cell\row
\cell read_ofile_symtab()\cell dbxread.c\cell\row
\cell read_ofile_symtab_from_oso()\cell dbxread.c\cell\row
\cell remote_get_noisy_reply()\cell tracepoint.c\cell\row
\cell request_quit()\cell utils.c\cell\row
\cell resume()\cell infrun.c\cell\row
\cell scan_file_globals()\cell stabsread.c\cell\row
\cell scope_info()\cell tracepoint.c\cell\row
\cell search_symbols()\cell symtab.c\cell\row
\cell selectors_info()\cell objc-lang.c\cell\row
\cell signals_info()\cell infrun.c\cell\row
\cell stringify_collection_list()\cell tracepoint.c\cell\row
\cell symtab_symbol_info()\cell symtab.c\cell\row
\cell target_read()\cell target/target.c\cell\row
\cell target_write_with_progress()\cell target/target.c\cell\row
\cell trace_dump_command()\cell tracepoint.c\cell\row
\cell trace_start_command()\cell tracepoint.c\cell\row
\cell tracepoint_save_command()\cell tracepoint.c\cell\row
\cell val_print()\cell valprint.c\cell\row
\cell val_print_string()\cell valprint.c\cell\row
\cell validate_actionline()\cell tracepoint.c\cell\row
Refs Var:\cell current_target\cell target/target.c\cell\row
\cell job_control\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function re_comp()\par}
{\s5\f1\fs20\ql\sb50\sa50 const char* re_comp ( const char* str )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk(), regcomp(), regfree()\cell\cell\row
Called by:\cell classes_info()\cell objc-lang.c\cell\row
\cell current_exception_should_stop()\cell breakpoint.c\cell\row
\cell forward_search_command()\cell source.c\cell\row
\cell maintenance_info_psymtabs()\cell symmisc.c\cell\row
\cell maintenance_info_symtabs()\cell symmisc.c\cell\row
\cell reverse_search_command()\cell source.c\cell\row
\cell search_symbols()\cell symtab.c\cell\row
\cell selectors_info()\cell objc-lang.c\cell\row
\cell solib_add()\cell solib.c\cell\row
Refs Var:\cell rebuf\cell utils.c\cell\row
\cell rebuf_needs_freeing\cell utils.c\cell\row
\cell regex_fmt\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function re_exec()\par}
{\s5\f1\fs20\ql\sb50\sa50 int re_exec ( const char* str )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk(), regexec()\cell\cell\row
Called by:\cell classes_info()\cell objc-lang.c\cell\row
\cell current_exception_should_stop()\cell breakpoint.c\cell\row
\cell forward_search_command()\cell source.c\cell\row
\cell maintenance_info_psymtabs()\cell symmisc.c\cell\row
\cell maintenance_info_symtabs()\cell symmisc.c\cell\row
\cell reverse_search_command()\cell source.c\cell\row
\cell search_symbols()\cell symtab.c\cell\row
\cell selectors_info()\cell objc-lang.c\cell\row
\cell solib_add()\cell solib.c\cell\row
Refs Var:\cell rebuf\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function re_search_oneshot()\par}
{\s5\f1\fs20\ql\sb50\sa50 int re_search_oneshot ( regex_t* patbuf, const char* str, int size, int start, int range, void* regs )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk(), regexec()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function re_set_syntax()\par}
{\s5\f1\fs20\ql\sb50\sa50 int re_set_syntax ( int newflags )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Called by:\cell _initialize_source()\cell source.c\cell\row
\cell current_exception_should_stop()\cell breakpoint.c\cell\row
Refs Var:\cell regex_fmt\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function reinitialize_more_filter()\par}
{\s5\f1\fs20\ql\sb50\sa50 void reinitialize_more_filter ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Called by:\cell command_handler()\cell event-top.c\cell\row
\cell command_loop()\cell top.c\cell\row
\cell prompt_for_continue()\cell utils.c\cell\row
\cell simplified_command_loop()\cell top.c\cell\row
Refs Var:\cell chars_printed\cell utils.c\cell\row
\cell lines_printed\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function request_quit()\par}
{\s5\f1\fs20\ql\sb50\sa50 void request_quit ( int signo )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell quit()\cell utils.c\cell\row
\cell  signal()\cell\cell\row
Used in:\cell request_quit()\cell utils.c\cell\row
Refs Func:\cell request_quit()\cell utils.c\cell\row
Refs Var:\cell immediate_quit\cell utils.c\cell\row
\cell quit_flag\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function restore_cleanups()\par}
{\s5\f1\fs20\ql\sb50\sa50 void restore_cleanups ( struct cleanup* chain )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell restore_my_cleanups()\cell utils.c\cell\row
Refs Var:\cell cleanup_chain\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function restore_file_rlimit()\par}
{\s5\f1\fs20\ql\sb50\sa50 void restore_file_rlimit ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell  getrlimit(), setrlimit()\cell\cell\row
Refs Var:\cell orig_file_rlimit\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function restore_final_cleanups()\par}
{\s5\f1\fs20\ql\sb50\sa50 void restore_final_cleanups ( struct cleanup* chain )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell restore_my_cleanups()\cell utils.c\cell\row
Refs Var:\cell final_cleanup_chain\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function restore_my_cleanups()\par}
{\s5\f1\fs20\ql\sb50\sa50 void restore_my_cleanups ( struct cleanup** pmy_chain, struct cleanup* chain )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Called by:\cell restore_cleanups()\cell utils.c\cell\row
\cell restore_final_cleanups()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function safe_strerror()\par}
{\s5\f1\fs20\ql\sb50\sa50 char* safe_strerror ( int errnum )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell xsnprintf()\cell utils.c\cell\row
\cell  strerror()\cell\cell\row
Called by:\cell add_dsym_command()\cell symfile.c\cell\row
\cell delete_breakpoint()\cell breakpoint.c\cell\row
\cell hardwire_raw()\cell ser-unix.c\cell\row
\cell init_history()\cell top.c\cell\row
\cell insert_bp_location()\cell breakpoint.c\cell\row
\cell memory_error()\cell corefile.c\cell\row
\cell open_bfd_from_oso()\cell dbxread.c\cell\row
\cell perror_with_name()\cell utils.c\cell\row
\cell print_sys_errmsg()\cell utils.c\cell\row
\cell reopen_exec_file()\cell corefile.c\cell\row
\cell save_breakpoints_command()\cell breakpoint.c\cell\row
\cell serial_logchar()\cell serial.c\cell\row
\cell terminal_inferior()\cell inflow.c\cell\row
\cell terminal_ours_1()\cell inflow.c\cell\row
\cell tracepoint_save_command()\cell tracepoint.c\cell\row
\cell unlimit_file_rlimit()\cell utils.c\cell\row
\cell val_print_string()\cell valprint.c\cell\row
\cell value_binop()\cell valarith.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function save_cleanups()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct cleanup* save_cleanups ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell save_my_cleanups()\cell utils.c\cell\row
Refs Var:\cell cleanup_chain\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function save_final_cleanups()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct cleanup* save_final_cleanups ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell save_my_cleanups()\cell utils.c\cell\row
Refs Var:\cell final_cleanup_chain\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function save_my_cleanups()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct cleanup* save_my_cleanups ( struct cleanup** pmy_chain )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Called by:\cell save_cleanups()\cell utils.c\cell\row
\cell save_final_cleanups()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function savestring()\par}
{\s5\f1\fs20\ql\sb50\sa50 char* savestring ( const char* ptr, size_t size )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell xmalloc()\cell utils.c\cell\row
\cell  __builtin___memcpy_chk(), __builtin_object_size(), __inline_memcpy_chk()\cell\cell\row
Called by:\cell _initialize_language()\cell language.c\cell\row
\cell add_new_header_file()\cell dbxread.c\cell\row
\cell add_path()\cell source.c\cell\row
\cell attach_command()\cell infcmd.c\cell\row
\cell break_command_2()\cell breakpoint.c\cell\row
\cell breakpoint_re_set_one()\cell breakpoint.c\cell\row
\cell c_make_name_of_child()\cell varobj.c\cell\row
\cell coff_start_symtab()\cell coffread.c\cell\row
\cell command_line_handler()\cell event-top.c\cell\row
\cell complete_symtab()\cell coffread.c\cell\row
\cell condition_command_1()\cell breakpoint.c\cell\row
\cell cp_add_using()\cell cp-namespace.c\cell\row
\cell cplus_make_name_of_child()\cell varobj.c\cell\row
\cell create_breakpoints()\cell breakpoint.c\cell\row
\cell create_exception_catchpoint()\cell breakpoint.c\cell\row
\cell create_exec_event_catchpoint()\cell breakpoint.c\cell\row
\cell create_fork_vfork_event_catchpoint()\cell breakpoint.c\cell\row
\cell decode_line_2()\cell linespec.c\cell\row
\cell handle_inferior_event()\cell infrun.c\cell\row
\cell init_history()\cell top.c\cell\row
\cell init_main()\cell top.c\cell\row
\cell parse_breakpoint_sals()\cell breakpoint.c\cell\row
\cell parse_frame_specification_1()\cell stack.c\cell\row
\cell patch_subfile_names()\cell buildsym.c\cell\row
\cell pop_prompt()\cell event-top.c\cell\row
\cell push_prompt()\cell event-top.c\cell\row
\cell read_member_functions()\cell stabsread.c\cell\row
\cell record_debugformat()\cell buildsym.c\cell\row
\cell record_producer()\cell buildsym.c\cell\row
\cell set_async_prompt()\cell event-top.c\cell\row
\cell set_demangling_command()\cell demangle.c\cell\row
\cell set_demangling_style()\cell demangle.c\cell\row
\cell set_environment_command()\cell infcmd.c\cell\row
\cell set_gnutarget()\cell corefile.c\cell\row
\cell set_inferior_io_terminal()\cell infcmd.c\cell\row
\cell set_language_command()\cell language.c\cell\row
\cell set_prompt()\cell top.c\cell\row
\cell set_raw_breakpoint()\cell breakpoint.c\cell\row
\cell set_raw_tracepoint()\cell tracepoint.c\cell\row
\cell solib_load_unload_1()\cell breakpoint.c\cell\row
\cell start_subfile()\cell buildsym.c\cell\row
\cell stringify_collection_list()\cell tracepoint.c\cell\row
\cell trace_command()\cell tracepoint.c\cell\row
\cell value_of_root()\cell varobj.c\cell\row
\cell varobj_create()\cell varobj.c\cell\row
\cell varobj_get_type_internal()\cell varobj.c\cell\row
\cell watch_command_1()\cell breakpoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function set_screen_size()\par}
{\s5\f1\fs20\ql\sb50\sa50 void set_screen_size ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell  rl_get_screen_size(), rl_set_screen_size()\cell\cell\row
Called by:\cell init_page_info()\cell utils.c\cell\row
\cell initialize_utils()\cell utils.c\cell\row
\cell set_height_command()\cell utils.c\cell\row
\cell set_width_command()\cell utils.c\cell\row
Refs Var:\cell chars_per_line\cell utils.c\cell\row
\cell lines_per_page\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function set_width()\par}
{\s5\f1\fs20\ql\sb50\sa50 void set_width ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell xmalloc()\cell utils.c\cell\row
\cell xrealloc()\cell utils.c\cell\row
Called by:\cell init_page_info()\cell utils.c\cell\row
\cell initialize_utils()\cell utils.c\cell\row
\cell set_width_command()\cell utils.c\cell\row
Refs Var:\cell chars_per_line\cell utils.c\cell\row
\cell wrap_buffer\cell utils.c\cell\row
\cell wrap_pointer\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function strcmp_iw()\par}
{\s5\f1\fs20\ql\sb50\sa50 int strcmp_iw ( const char* string1, const char* string2 )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell  isspace()\cell\cell\row
Called by:\cell check_field_in()\cell valops.c\cell\row
\cell find_method_list()\cell valops.c\cell\row
\cell find_methods()\cell linespec.c\cell\row
\cell gnu_v3_update_exception_catchpoints()\cell breakpoint.c\cell\row
\cell iter_name_first_hashed()\cell dictionary.c\cell\row
\cell iter_name_next_hashed()\cell dictionary.c\cell\row
\cell iter_name_next_linear()\cell dictionary.c\cell\row
\cell lookup_minimal_symbol()\cell minsyms.c\cell\row
\cell lookup_minimal_symbol_all()\cell minsyms.c\cell\row
\cell lookup_partial_symbol()\cell symtab.c\cell\row
\cell lookup_struct_elt_type()\cell gdbtypes.c\cell\row
\cell search_struct_field()\cell valops.c\cell\row
\cell search_struct_method()\cell valops.c\cell\row
\cell value_objc_target_type()\cell objc-lang.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function strcmp_iw_ordered()\par}
{\s5\f1\fs20\ql\sb50\sa50 int strcmp_iw_ordered ( const char* string1, const char* string2 )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell  isspace()\cell\cell\row
Called by:\cell compare_psymbols()\cell symfile.c\cell\row
\cell lookup_partial_symbol()\cell symtab.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function streq()\par}
{\s5\f1\fs20\ql\sb50\sa50 int streq ( const char* lhs, const char* rhs )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell  strcmp()\cell\cell\row
Used in:\cell _initialize_ada_language()\cell ada-lang.c\cell\row
\cell create_demangled_names_hash()\cell symtab.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function string_to_core_addr()\par}
{\s5\f1\fs20\ql\sb50\sa50 CORE_ADDR string_to_core_addr ( const char* my_string )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell internal_error()\cell utils.c\cell\row
\cell  isdigit(), tolower()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function strlen_paddr()\par}
{\s5\f1\fs20\ql\sb50\sa50 int strlen_paddr ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell gdbarch_addr_bit()\cell gdbarch.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function subset_compare()\par}
{\s5\f1\fs20\ql\sb50\sa50 int subset_compare ( char* string_to_compare, const char* template_string )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell  strlen(), strncmp()\cell\cell\row
Called by:\cell backtrace_command()\cell stack.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function unlimit_file_rlimit()\par}
{\s5\f1\fs20\ql\sb50\sa50 void unlimit_file_rlimit ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell safe_strerror()\cell utils.c\cell\row
\cell warning()\cell utils.c\cell\row
\cell  __error(), bfd_set_cache_max_open(), getrlimit(), setrlimit()\cell\cell\row
Called by:\cell captured_main()\cell main.c\cell\row
Refs Var:\cell orig_file_rlimit\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function verror()\par}
{\s5\f1\fs20\ql\sb50\sa50 void verror ( const char* string, va_list args )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell  throw_verror()\cell\cell\row
Called by:\cell range_error()\cell language.c\cell\row
\cell type_error()\cell language.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function vfatal()\par}
{\s5\f1\fs20\ql\sb50\sa50 void vfatal ( const char* string, va_list args )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell  throw_vfatal()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function vfprintf_filtered()\par}
{\s5\f1\fs20\ql\sb50\sa50 void vfprintf_filtered ( struct ui_file* stream, const char* format, va_list args )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell vfprintf_maybe_filtered()\cell utils.c\cell\row
Called by:\cell cli_field_fmt()\cell cli-out.c\cell\row
\cell cli_text_fmt()\cell cli-out.c\cell\row
\cell defaulted_query()\cell utils.c\cell\row
\cell fprintf_disasm()\cell disasm.c\cell\row
\cell fprintf_filtered()\cell utils.c\cell\row
\cell fprintfi_filtered()\cell utils.c\cell\row
\cell out_field_fmt()\cell cli-out.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell printfi_filtered()\cell utils.c\cell\row
\cell query()\cell utils.c\cell\row
\cell range_error()\cell language.c\cell\row
\cell type_error()\cell language.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function vfprintf_unfiltered()\par}
{\s5\f1\fs20\ql\sb50\sa50 void vfprintf_unfiltered ( struct ui_file* stream, const char* format, va_list args )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell do_cleanups()\cell utils.c\cell\row
\cell fputs_unfiltered()\cell ui-file.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell xstrvprintf()\cell utils.c\cell\row
Called by:\cell cli_message()\cell cli-out.c\cell\row
\cell cplusplus_error()\cell linespec.c\cell\row
\cell fprintf_unfiltered()\cell utils.c\cell\row
\cell parser_fprintf()\cell parse.c\cell\row
\cell printf_unfiltered()\cell utils.c\cell\row
\cell vprintf_unfiltered()\cell utils.c\cell\row
\cell vwarning()\cell utils.c\cell\row
Refs Func:\cell xfree()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function vprintf_filtered()\par}
{\s5\f1\fs20\ql\sb50\sa50 void vprintf_filtered ( const char* format, va_list args )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell vfprintf_maybe_filtered()\cell utils.c\cell\row
Refs Var:\cell gdb_stdout\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function vprintf_unfiltered()\par}
{\s5\f1\fs20\ql\sb50\sa50 void vprintf_unfiltered ( const char* format, va_list args )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell vfprintf_unfiltered()\cell utils.c\cell\row
Refs Var:\cell gdb_stdout\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function vwarning()\par}
{\s5\f1\fs20\ql\sb50\sa50 void vwarning ( const char* string, va_list args )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell fprintf_unfiltered()\cell utils.c\cell\row
\cell fputs_unfiltered()\cell ui-file.c\cell\row
\cell gdb_flush()\cell ui-file.c\cell\row
\cell vfprintf_unfiltered()\cell utils.c\cell\row
\cell wrap_here()\cell utils.c\cell\row
\cell  __builtin_va_end()\cell\cell\row
Called by:\cell lim_warning()\cell ada-lang.c\cell\row
\cell range_error()\cell language.c\cell\row
\cell type_error()\cell language.c\cell\row
\cell vcomplaint()\cell complaints.c\cell\row
\cell warning()\cell utils.c\cell\row
Refs Var:\cell current_target\cell target/target.c\cell\row
\cell deprecated_warning_hook\cell top.c\cell\row
\cell gdb_stderr\cell main.c\cell\row
\cell gdb_stdout\cell main.c\cell\row
\cell warning_pre_print\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function warning()\par}
{\s5\f1\fs20\ql\sb50\sa50 void warning ( const char* string, ... )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell vwarning()\cell utils.c\cell\row
\cell  __builtin_va_end(), __builtin_va_start()\cell\cell\row
Called by:\cell _initialize_symfile()\cell symfile.c\cell\row
\cell ada_create_fundamental_type()\cell ada-lang.c\cell\row
\cell ada_print_scalar()\cell ada-valprint.c\cell\row
\cell ada_template_to_fixed_record_type_1()\cell ada-lang.c\cell\row
\cell ada_value_assign()\cell ada-lang.c\cell\row
\cell ada_value_primitive_packed_val()\cell ada-lang.c\cell\row
\cell add_dsym_command()\cell symfile.c\cell\row
\cell add_kext_command()\cell symfile.c\cell\row
\cell add_local_symbols()\cell tracepoint.c\cell\row
\cell add_path()\cell source.c\cell\row
\cell add_symbol_file_command()\cell symfile.c\cell\row
\cell add_vsyscall_page()\cell symfile-mem.c\cell\row
\cell append_psymbols_as_msymbols()\cell symfile.c\cell\row
\cell block_lookup()\cell ada-exp.c\cell\row
\cell bpstat_stop_status()\cell breakpoint.c\cell\row
\cell break_command_2()\cell breakpoint.c\cell\row
\cell breakpoint_adjustment_warning()\cell breakpoint.c\cell\row
\cell breakpoint_init_inferior()\cell breakpoint.c\cell\row
\cell breakpoint_re_set_one()\cell breakpoint.c\cell\row
\cell c_create_fundamental_type()\cell c-lang.c\cell\row
\cell c_type_of_child()\cell varobj.c\cell\row
\cell c_value_of_child()\cell varobj.c\cell\row
\cell can_use_hardware_watchpoint()\cell breakpoint.c\cell\row
\cell catch_exception_command_1()\cell breakpoint.c\cell\row
\cell catch_load_command_1()\cell breakpoint.c\cell\row
\cell catch_unload_command_1()\cell breakpoint.c\cell\row
\cell change_annotation_level()\cell event-top.c\cell\row
\cell check_bfd_for_matching_uuid()\cell symfile.c\cell\row
\cell check_safe_call()\cell valops.c\cell\row
\cell cleanup_undefined_arrays()\cell gdbtypes.c\cell\row
\cell coffstab_build_psymtabs()\cell dbxread.c\cell\row
\cell compare_sections_command()\cell remote.c\cell\row
\cell compare_translation_final_addr()\cell dwarf2read.c\cell\row
\cell convert_actual()\cell ada-lang.c\cell\row
\cell convert_typed_floating()\cell doublest.c\cell\row
\cell cp_lookup_rtti_type()\cell cp-support.c\cell\row
\cell cp_print_value()\cell cp-valprint.c\cell\row
\cell cp_print_value_fields()\cell cp-valprint.c\cell\row
\cell cplus_path_expr_of_child()\cell varobj.c\cell\row
\cell create_breakpoints()\cell breakpoint.c\cell\row
\cell current_exception_should_stop()\cell breakpoint.c\cell\row
\cell dbx_lookup_type()\cell stabsread.c\cell\row
\cell dbx_psymtab_to_symtab_1()\cell dbxread.c\cell\row
\cell decode_objc()\cell linespec.c\cell\row
\cell deprecated_read_memory_nobpt()\cell breakpoint.c\cell\row
\cell disable_breakpoints_in_shlibs()\cell breakpoint.c\cell\row
\cell disable_breakpoints_in_unloaded_shlib()\cell breakpoint.c\cell\row
\cell disable_command()\cell breakpoint.c\cell\row
\cell dump_insns()\cell disasm.c\cell\row
\cell dump_msymbols()\cell symmisc.c\cell\row
\cell dwarf2_debug_map_psymtab_to_symtab()\cell dwarf2read.c\cell\row
\cell dwarf2_psymtab_to_symtab()\cell dwarf2read.c\cell\row
\cell dwarf2_scan_inlined_section_for_psymbols()\cell dwarf2read.c\cell\row
\cell dwarf2_scan_pubtype_for_psymbols()\cell dwarf2read.c\cell\row
\cell dwarf_psymtab_to_symtab()\cell dwarfread.c\cell\row
\cell elfstab_build_psymtabs()\cell dbxread.c\cell\row
\cell enable_command()\cell breakpoint.c\cell\row
\cell evaluate_subexp_standard()\cell eval.c\cell\row
\cell f_create_fundamental_type()\cell f-lang.c\cell\row
\cell field_alignment()\cell ada-lang.c\cell\row
\cell fill_symbuf()\cell dbxread.c\cell\row
\cell find_implementation_from_class()\cell objc-lang.c\cell\row
\cell find_kext_files_by_symfile()\cell symfile.c\cell\row
\cell find_line_symtab()\cell symtab.c\cell\row
\cell find_methods()\cell objc-lang.c\cell\row
\cell find_objfile()\cell symfile.c\cell\row
\cell find_overload_match()\cell valops.c\cell\row
\cell find_pc_sect_line()\cell symtab.c\cell\row
\cell find_pc_sect_symtab()\cell symtab.c\cell\row
\cell find_source_lines()\cell source.c\cell\row
\cell free_named_symtabs()\cell symfile.c\cell\row
\cell free_objfile_internal()\cell objfiles.c\cell\row
\cell free_so()\cell solib.c\cell\row
\cell gdbarch_init_osabi()\cell osabi.c\cell\row
\cell generic_observer_detach()\cell observer.c\cell\row
\cell get_offsets()\cell remote.c\cell\row
\cell gnuv3_rtti_type()\cell gnu-v3-abi.c\cell\row
\cell hand_function_call()\cell infcall.c\cell\row
\cell handle_inferior_event()\cell infrun.c\cell\row
\cell iconv_convert()\cell charset.c\cell\row
\cell inferior_event_handler()\cell inf-loop.c\cell\row
\cell info_threads_command()\cell thread.c\cell\row
\cell init_history()\cell top.c\cell\row
\cell insert_bp_location()\cell breakpoint.c\cell\row
\cell insert_breakpoints()\cell breakpoint.c\cell\row
\cell lookup_minimal_symbol()\cell minsyms.c\cell\row
\cell lookup_minimal_symbol_all()\cell minsyms.c\cell\row
\cell lookup_minimal_symbol_by_pc_section_from_objfile()\cell minsyms.c\cell\row
\cell lookup_psymbol_from_namestring()\cell dbxread.c\cell\row
\cell lookup_symbol_aux_psymtabs()\cell symtab.c\cell\row
\cell m2_create_fundamental_type()\cell m2-lang.c\cell\row
\cell map_breakpoint_numbers()\cell breakpoint.c\cell\row
\cell modify_field()\cell value.c\cell\row
\cell new_objc_runtime_class_getClass()\cell objc-lang.c\cell\row
\cell objc_check_safe_to_run_all_threads()\cell objc-lang.c\cell\row
\cell objc_create_fundamental_type()\cell objc-lang.c\cell\row
\cell objc_fixup_ivar_offset()\cell objc-lang.c\cell\row
\cell objc_target_type_from_object()\cell objc-lang.c\cell\row
\cell objfile_delete_from_ordered_sections()\cell objfiles.c\cell\row
\cell objfile_relocate()\cell objfiles.c\cell\row
\cell open_bfd_from_oso()\cell dbxread.c\cell\row
\cell oso_scan_partial_symtab()\cell dbxread.c\cell\row
\cell pascal_create_fundamental_type()\cell p-lang.c\cell\row
\cell pascal_object_print_value()\cell p-valprint.c\cell\row
\cell pascal_object_print_value_fields()\cell p-valprint.c\cell\row
\cell path_expr_of_root()\cell varobj.c\cell\row
\cell prim_record_minimal_symbol_and_info()\cell minsyms.c\cell\row
\cell print_object_command()\cell objc-lang.c\cell\row
\cell psymtab_to_symtab_1()\cell dwarfread.c\cell\row
\cell rate_to_code()\cell ser-unix.c\cell\row
\cell read_actions()\cell tracepoint.c\cell\row
\cell read_dbx_symtab()\cell dbxread.c\cell\row
\cell read_objc_object()\cell objc-lang.c\cell\row
\cell read_ofile_symtab_from_oso()\cell dbxread.c\cell\row
\cell read_oso_nlists()\cell dbxread.c\cell\row
\cell read_target_long_array()\cell symfile.c\cell\row
\cell read_type()\cell stabsread.c\cell\row
\cell remote_async_wait()\cell remote.c\cell\row
\cell remote_fetch_registers()\cell remote.c\cell\row
\cell remote_get_threadlist()\cell remote.c\cell\row
\cell remote_insert_watchpoint()\cell remote.c\cell\row
\cell remote_macosx_create_inferior()\cell remote.c\cell\row
\cell remote_remove_watchpoint()\cell remote.c\cell\row
\cell remote_serial_open()\cell remote.c\cell\row
\cell remote_threadlist_iterator()\cell remote.c\cell\row
\cell remote_unpack_thread_info_response()\cell remote.c\cell\row
\cell remote_wait()\cell remote.c\cell\row
\cell remove_breakpoint()\cell breakpoint.c\cell\row
\cell remove_breakpoints()\cell breakpoint.c\cell\row
\cell reopen_exec_file()\cell corefile.c\cell\row
\cell reread_symbols()\cell symfile.c\cell\row
\cell reread_symbols_command()\cell symfile.c\cell\row
\cell reread_symbols_for_objfile()\cell symfile.c\cell\row
\cell restore_selected_frame()\cell infrun.c\cell\row
\cell scan_partial_inlined_function_symbols()\cell dwarf2read.c\cell\row
\cell set_architecture_from_string()\cell arch-utils.c\cell\row
\cell set_case_command()\cell language.c\cell\row
\cell set_demangling_command()\cell demangle.c\cell\row
\cell set_pathname_substitution()\cell source.c\cell\row
\cell set_range_command()\cell language.c\cell\row
\cell set_type_command()\cell language.c\cell\row
\cell simple_overlay_update_1()\cell symfile.c\cell\row
\cell solib_load_unload_1()\cell breakpoint.c\cell\row
\cell symbol_file_add_with_addrs_or_offsets_using_objfile()\cell symfile.c\cell\row
\cell syms_from_objfile()\cell symfile.c\cell\row
\cell terminal_inferior()\cell inflow.c\cell\row
\cell terminal_ours_1()\cell inflow.c\cell\row
\cell thread_apply_command()\cell thread.c\cell\row
\cell trace_dump_command()\cell tracepoint.c\cell\row
\cell tracepoint_save_command()\cell tracepoint.c\cell\row
\cell uninstall_variable()\cell varobj.c\cell\row
\cell unlimit_file_rlimit()\cell utils.c\cell\row
\cell validate_actionline()\cell tracepoint.c\cell\row
\cell validate_files()\cell corefile.c\cell\row
\cell value_assign()\cell valops.c\cell\row
\cell value_cast_1()\cell valops.c\cell\row
\cell value_full_object()\cell valops.c\cell\row
\cell value_static_field()\cell value.c\cell\row
\cell value_subscript()\cell valarith.c\cell\row
\cell varobj_create()\cell varobj.c\cell\row
\cell varobj_delete()\cell varobj.c\cell\row
\cell varobj_list()\cell varobj.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function wrap_here()\par}
{\s5\f1\fs20\ql\sb50\sa50 void wrap_here ( const char* indent )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell fputs_unfiltered()\cell ui-file.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell puts_filtered()\cell utils.c\cell\row
Called by:\cell c_type_print_args()\cell c-typeprint.c\cell\row
\cell c_type_print_base()\cell c-typeprint.c\cell\row
\cell c_type_print_varspec_suffix()\cell c-typeprint.c\cell\row
\cell captured_main()\cell main.c\cell\row
\cell cli_wrap_hint()\cell cli-out.c\cell\row
\cell command_line_handler()\cell event-top.c\cell\row
\cell command_line_input()\cell top.c\cell\row
\cell cp_print_value_fields()\cell cp-valprint.c\cell\row
\cell dbx_psymtab_to_symtab_1()\cell dbxread.c\cell\row
\cell defaulted_query()\cell utils.c\cell\row
\cell dump_psymtab()\cell symmisc.c\cell\row
\cell dwarf2_debug_map_psymtab_to_symtab()\cell dwarf2read.c\cell\row
\cell dwarf2_kext_psymtab_to_symtab()\cell dwarf2read.c\cell\row
\cell f_type_print_base()\cell f-typeprint.c\cell\row
\cell fputs_maybe_filtered()\cell utils.c\cell\row
\cell frame_info()\cell stack.c\cell\row
\cell java_print_value_fields()\cell jv-valprint.c\cell\row
\cell java_type_print_base()\cell jv-typeprint.c\cell\row
\cell java_value_print()\cell jv-valprint.c\cell\row
\cell line_info()\cell source.c\cell\row
\cell maintenance_info_psymtabs()\cell symmisc.c\cell\row
\cell maintenance_info_sections()\cell maint.c\cell\row
\cell maintenance_info_symtabs()\cell symmisc.c\cell\row
\cell output_command()\cell printcmd.c\cell\row
\cell output_source_filename()\cell symtab.c\cell\row
\cell pascal_object_print_value_fields()\cell p-valprint.c\cell\row
\cell pascal_print_func_args()\cell p-typeprint.c\cell\row
\cell pascal_type_print_base()\cell p-typeprint.c\cell\row
\cell print_array_type()\cell ada-typeprint.c\cell\row
\cell print_enum_type()\cell ada-typeprint.c\cell\row
\cell print_field_values()\cell ada-valprint.c\cell\row
\cell print_formatted()\cell printcmd.c\cell\row
\cell print_func_type()\cell ada-typeprint.c\cell\row
\cell psymtab_to_symtab_1()\cell mdebugread.c\cell\row
\cell query()\cell utils.c\cell\row
\cell read_actions()\cell tracepoint.c\cell\row
\cell read_pe_exported_syms()\cell coff-pe-read.c\cell\row
\cell symbol_file_add_with_addrs_or_offsets_using_objfile()\cell symfile.c\cell\row
\cell trace_find_line_command()\cell tracepoint.c\cell\row
\cell tracepoints_info()\cell tracepoint.c\cell\row
\cell val_print_array_elements()\cell valprint.c\cell\row
\cell val_print_packed_array_elements()\cell ada-valprint.c\cell\row
\cell vcomplaint()\cell complaints.c\cell\row
\cell vwarning()\cell utils.c\cell\row
Refs Var:\cell chars_per_line\cell utils.c\cell\row
\cell chars_printed\cell utils.c\cell\row
\cell gdb_stdout\cell main.c\cell\row
\cell wrap_buffer\cell utils.c\cell\row
\cell wrap_column\cell utils.c\cell\row
\cell wrap_indent\cell utils.c\cell\row
\cell wrap_pointer\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function xasprintf()\par}
{\s5\f1\fs20\ql\sb50\sa50 void xasprintf ( char** ret, const char* format, ... )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell xstrvprintf()\cell utils.c\cell\row
\cell  __builtin_va_end(), __builtin_va_start()\cell\cell\row
Called by:\cell add_vsyscall_page()\cell symfile-mem.c\cell\row
\cell minsym_found()\cell linespec.c\cell\row
\cell minsyms_found()\cell linespec.c\cell\row
\cell set_cp_abi_as_auto_default()\cell cp-abi.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function xcalloc()\par}
{\s5\f1\fs20\ql\sb50\sa50 void* xcalloc ( size_t number, size_t size )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ../include/libiberty.h\cell\cell\row
Calls: \cell nomem()\cell utils.c\cell\row
\cell  calloc()\cell\cell\row
Called by:\cell _initialize_demangler()\cell demangle.c\cell\row
\cell break_command_2()\cell breakpoint.c\cell\row
\cell build_dummy_objfile()\cell dwarf2read.c\cell\row
\cell dict_create_hashed_expandable()\cell dictionary.c\cell\row
\cell do_captured_breakpoint()\cell breakpoint.c\cell\row
\cell equivalence_table_initialize()\cell symmisc.c\cell\row
\cell expand_hashtable()\cell dictionary.c\cell\row
\cell find_equivalent_msymbol()\cell symmisc.c\cell\row
\cell find_method()\cell linespec.c\cell\row
\cell new_dwarf_expr_context()\cell dwarf2expr.c\cell\row
\cell objfile_alloc_data()\cell objfiles.c\cell\row
\cell parse_breakpoint_sals()\cell breakpoint.c\cell\row
\cell print_bcache_statistics()\cell bcache.c\cell\row
\cell regcache_xmalloc()\cell regcache.c\cell\row
\cell xzalloc()\cell utils.c\cell\row
Used in:\cell _initialize_ada_language()\cell ada-lang.c\cell\row
\cell create_demangled_names_hash()\cell symtab.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function xfree()\par}
{\s5\f1\fs20\ql\sb50\sa50 void xfree ( void* ptr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ../include/libiberty.h\cell\cell\row
Calls: \cell  free()\cell\cell\row
Called by:\cell _ada_parse()\cell ada-exp.c\cell\row
\cell add_kext_command()\cell symfile.c\cell\row
\cell add_matching_methods()\cell linespec.c\cell\row
\cell add_msglist()\cell objc-lang.c\cell\row
\cell add_partial_symbol()\cell dwarf2read.c\cell\row
\cell add_path()\cell source.c\cell\row
\cell add_pe_exported_sym()\cell coff-pe-read.c\cell\row
\cell adjust_prompts_for_optimized_code()\cell event-top.c\cell\row
\cell ax_reqs()\cell ax-general.c\cell\row
\cell backtrace_command()\cell stack.c\cell\row
\cell bpstat_clear()\cell breakpoint.c\cell\row
\cell bpstat_get_triggered_catchpoints()\cell breakpoint.c\cell\row
\cell break_command_2()\cell breakpoint.c\cell\row
\cell breakpoint_re_set_one()\cell breakpoint.c\cell\row
\cell c_parse()\cell c-exp.c\cell\row
\cell c_type_print_base()\cell c-typeprint.c\cell\row
\cell c_value_of_root()\cell varobj.c\cell\row
\cell captured_main()\cell main.c\cell\row
\cell catch_info()\cell stack.c\cell\row
\cell check_stub_method()\cell gdbtypes.c\cell\row
\cell cisco_kod_request()\cell kod-cisco.c\cell\row
\cell cleanup_oso_data()\cell dbxread.c\cell\row
\cell clear_displays()\cell printcmd.c\cell\row
\cell clear_header_list()\cell ui-out.c\cell\row
\cell clear_internalvars()\cell value.c\cell\row
\cell clear_new_breakpoint_list()\cell breakpoint.c\cell\row
\cell clear_restrict_list()\cell objfiles.c\cell\row
\cell clear_value_history()\cell value.c\cell\row
\cell coff_symfile_finish()\cell coffread.c\cell\row
\cell coff_symtab_read()\cell coffread.c\cell\row
\cell command_line_handler()\cell event-top.c\cell\row
\cell command_line_input()\cell top.c\cell\row
\cell complete_symtab()\cell coffread.c\cell\row
\cell condition_command_1()\cell breakpoint.c\cell\row
\cell convert_oso_map_to_final_map()\cell dwarf2read.c\cell\row
\cell cp_canonicalize_string()\cell cp-support.c\cell\row
\cell cp_class_name_from_physname()\cell cp-support.c\cell\row
\cell cp_comp_to_string()\cell cp-name-parser.c\cell\row
\cell cp_copy_usings()\cell cp-namespace.c\cell\row
\cell cp_demangled_name_to_comp()\cell cp-name-parser.c\cell\row
\cell cp_func_name()\cell cp-support.c\cell\row
\cell cp_print_class_method()\cell cp-valprint.c\cell\row
\cell cpname_parse()\cell cp-name-parser.c\cell\row
\cell cppop()\cell varobj.c\cell\row
\cell create_all_comp_units()\cell dwarf2read.c\cell\row
\cell create_breakpoints()\cell breakpoint.c\cell\row
\cell create_kext_addr_map()\cell dwarf2read.c\cell\row
\cell dbx_symfile_finish()\cell dbxread.c\cell\row
\cell decode_line_1()\cell linespec.c\cell\row
\cell delete_async_signal_handler()\cell event-loop.c\cell\row
\cell delete_breakpoint()\cell breakpoint.c\cell\row
\cell delete_file_handler()\cell event-loop.c\cell\row
\cell delete_mem_region()\cell memattr.c\cell\row
\cell delete_timer()\cell event-loop.c\cell\row
\cell delete_variable_1()\cell varobj.c\cell\row
\cell determine_prefix()\cell dwarf2read.c\cell\row
\cell directory_command()\cell source.c\cell\row
\cell discard_all_continuations()\cell utils.c\cell\row
\cell discard_all_intermediate_continuations()\cell utils.c\cell\row
\cell discard_inferior_status()\cell infrun.c\cell\row
\cell discard_my_cleanups()\cell utils.c\cell\row
\cell do_all_continuations()\cell utils.c\cell\row
\cell do_all_intermediate_continuations()\cell utils.c\cell\row
\cell do_cleanup_end()\cell ui-out.c\cell\row
\cell do_close_cleanup()\cell utils.c\cell\row
\cell do_discard_minimal_symbols_cleanup()\cell minsyms.c\cell\row
\cell do_my_cleanups()\cell utils.c\cell\row
\cell do_restore_current_thread_cleanup()\cell thread.c\cell\row
\cell do_serial_close()\cell serial.c\cell\row
\cell dummy_frame_push()\cell dummy-frame.c\cell\row
\cell dump_insns()\cell disasm.c\cell\row
\cell dwarf2_frame_state_free()\cell dwarf2-frame.c\cell\row
\cell dwarf2_frame_state_free_regs()\cell dwarf2-frame.c\cell\row
\cell dwarf2_read_abbrevs()\cell dwarf2read.c\cell\row
\cell dwarf2_release_queue()\cell dwarf2read.c\cell\row
\cell dwarf2_start_subfile()\cell dwarf2read.c\cell\row
\cell dwarf_build_psymtabs()\cell dwarfread.c\cell\row
\cell elf_symfile_finish()\cell elfread.c\cell\row
\cell end_arglist()\cell parse.c\cell\row
\cell end_msglist()\cell objc-lang.c\cell\row
\cell end_oso_pst_list()\cell dbxread.c\cell\row
\cell end_stabs()\cell stabsread.c\cell\row
\cell end_symtab()\cell buildsym.c\cell\row
\cell equivalence_table_delete()\cell symmisc.c\cell\row
\cell execute_cfa_program()\cell dwarf2-frame.c\cell\row
\cell expand_hashtable()\cell dictionary.c\cell\row
\cell f_parse()\cell f-exp.c\cell\row
\cell filename_completer()\cell completer.c\cell\row
\cell fill_symbuf()\cell dbxread.c\cell\row
\cell find_and_open_source()\cell source.c\cell\row
\cell find_equivalent_msymbol()\cell symmisc.c\cell\row
\cell find_function_names_and_address_ranges()\cell inlining.c\cell\row
\cell find_kext_files_by_bundle()\cell symfile.c\cell\row
\cell find_method()\cell linespec.c\cell\row
\cell find_oload_champ()\cell valops.c\cell\row
\cell find_oload_champ_namespace_loop()\cell valops.c\cell\row
\cell find_pc_sect_line()\cell symtab.c\cell\row
\cell finish_global_stabs()\cell stabsread.c\cell\row
\cell finished_macro_expansion()\cell c-lang.c\cell\row
\cell fixup_section()\cell symtab.c\cell\row
\cell forget_cached_source_info()\cell source.c\cell\row
\cell fprintf_symbol_filtered()\cell utils.c\cell\row
\cell free_actions()\cell tracepoint.c\cell\row
\cell free_actions_list()\cell tracepoint.c\cell\row
\cell free_agent_expr()\cell ax-general.c\cell\row
\cell free_bincl_list()\cell dbxread.c\cell\row
\cell free_buffer()\cell macroexp.c\cell\row
\cell free_current_contents()\cell utils.c\cell\row
\cell free_die_list()\cell dwarf2read.c\cell\row
\cell free_display()\cell printcmd.c\cell\row
\cell free_dwarf_expr_context()\cell dwarf2expr.c\cell\row
\cell free_elfinfo()\cell elfread.c\cell\row
\cell free_environ()\cell environ.c\cell\row
\cell free_funcalls()\cell parse.c\cell\row
\cell free_hashed_expandable()\cell dictionary.c\cell\row
\cell free_header_files()\cell dbxread.c\cell\row
\cell free_line_header()\cell dwarf2read.c\cell\row
\cell free_linear_expandable()\cell dictionary.c\cell\row
\cell free_linetab()\cell coffread.c\cell\row
\cell free_objfile()\cell objfiles.c\cell\row
\cell free_objfile_internal()\cell objfiles.c\cell\row
\cell free_one_comp_unit()\cell dwarf2read.c\cell\row
\cell free_rb_tree_data()\cell objc-lang.c\cell\row
\cell free_search_symbols()\cell symtab.c\cell\row
\cell free_section_addr_info()\cell symfile.c\cell\row
\cell free_so()\cell solib.c\cell\row
\cell free_stringtab()\cell coffread.c\cell\row
\cell free_symtab()\cell symmisc.c\cell\row
\cell free_symtab_block()\cell symmisc.c\cell\row
\cell free_thread()\cell thread.c\cell\row
\cell free_utypes()\cell dwarfread.c\cell\row
\cell free_uuids_array()\cell utils.c\cell\row
\cell free_variable()\cell varobj.c\cell\row
\cell func_command()\cell stack.c\cell\row
\cell gdb_readline()\cell top.c\cell\row
\cell gdb_readline2()\cell event-top.c\cell\row
\cell gdbarch_free()\cell gdbarch.c\cell\row
\cell get_binary_file_uuids()\cell utils.c\cell\row
\cell get_inferior_args()\cell infcmd.c\cell\row
\cell get_kext_bundle_ident_and_binary_path()\cell symfile.c\cell\row
\cell guess_structure_name()\cell dwarf2read.c\cell\row
\cell hand_function_call()\cell infcall.c\cell\row
\cell handle_inferior_event()\cell infrun.c\cell\row
\cell handle_timer_event()\cell event-loop.c\cell\row
\cell init_psymbol_list()\cell symfile.c\cell\row
\cell initialize_protocol_log()\cell remote.c\cell\row
\cell inlined_function_add_function_names()\cell inlining.c\cell\row
\cell inlined_subroutine_adjust_position_for_breakpoint()\cell inlining.c\cell\row
\cell inlined_subroutine_free_objfile_call_sites()\cell inlining.c\cell\row
\cell inlined_subroutine_free_objfile_data()\cell inlining.c\cell\row
\cell internal_vproblem()\cell utils.c\cell\row
\cell interp_set()\cell interps.c\cell\row
\cell interpreter_completer()\cell interps.c\cell\row
\cell java_class_name_from_physname()\cell jv-lang.c\cell\row
\cell java_parse()\cell jv-exp.c\cell\row
\cell java_type_print_base()\cell jv-typeprint.c\cell\row
\cell jump_command()\cell infcmd.c\cell\row
\cell kod_set_os()\cell kod.c\cell\row
\cell line_completion_function()\cell completer.c\cell\row
\cell line_info()\cell source.c\cell\row
\cell location_completer()\cell completer.c\cell\row
\cell lookup_partial_symtab_all()\cell symtab.c\cell\row
\cell lookup_psymbol_from_namestring()\cell dbxread.c\cell\row
\cell lookup_symbol()\cell symtab.c\cell\row
\cell lookup_symbol_all()\cell symtab.c\cell\row
\cell lookup_symtab_all()\cell symtab.c\cell\row
\cell m2_parse()\cell m2-exp.c\cell\row
\cell macro_bcache_free()\cell macrotab.c\cell\row
\cell macro_free()\cell macrotab.c\cell\row
\cell macro_start_file()\cell dwarf2read.c\cell\row
\cell maintenance_demangle()\cell maint.c\cell\row
\cell maintenance_do_deprecate()\cell maint.c\cell\row
\cell maintenance_interval_display()\cell maint.c\cell\row
\cell mangled_name_to_comp()\cell cp-support.c\cell\row
\cell mem_file_delete()\cell ui-file.c\cell\row
\cell method_name_from_physname()\cell cp-support.c\cell\row
\cell n_spaces()\cell utils.c\cell\row
\cell name_lookup()\cell ada-exp.c\cell\row
\cell nlm_symfile_finish()\cell nlmread.c\cell\row
\cell null_free_so()\cell solib-null.c\cell\row
\cell objc_clear_trampoline_data()\cell objc-lang.c\cell\row
\cell objc_demangle()\cell objc-lang.c\cell\row
\cell objc_parse()\cell objc-exp.c\cell\row
\cell objfile_add_to_ordered_sections()\cell objfiles.c\cell\row
\cell objfile_clear_hitlist()\cell objfiles.c\cell\row
\cell objfile_clear_restrict_list()\cell objfiles.c\cell\row
\cell objfile_delete_from_ordered_sections()\cell objfiles.c\cell\row
\cell objfile_free_data()\cell objfiles.c\cell\row
\cell objfile_relocate()\cell objfiles.c\cell\row
\cell objfile_remove_from_restrict_list()\cell objfiles.c\cell\row
\cell openp()\cell source.c\cell\row
\cell oso_statics_pop()\cell dbxread.c\cell\row
\cell overload_list_add_symbol()\cell cp-support.c\cell\row
\cell parse_macro_definition()\cell dwarf2read.c\cell\row
\cell parse_number()\cell f-exp.c\cell\row
\cell parse_partial_symbols()\cell mdebugread.c\cell\row
\cell pascal_lex()\cell p-exp.c\cell\row
\cell pascal_object_print_class_method()\cell p-valprint.c\cell\row
\cell pascal_parse()\cell p-exp.c\cell\row
\cell pascal_val_print()\cell p-valprint.c\cell\row
\cell patch_type()\cell coffread.c\cell\row
\cell path_command()\cell infcmd.c\cell\row
\cell pop_current_type()\cell p-exp.c\cell\row
\cell pop_prompt()\cell event-top.c\cell\row
\cell pop_subfile()\cell buildsym.c\cell\row
\cell pop_timer()\cell maint.c\cell\row
\cell print_bcache_statistics()\cell bcache.c\cell\row
\cell print_decimal_chars()\cell valprint.c\cell\row
\cell print_inlined_frames_lite()\cell inlining.c\cell\row
\cell print_subexp_standard()\cell expprint.c\cell\row
\cell process_dies()\cell dwarfread.c\cell\row
\cell process_enumeration_scope()\cell dwarf2read.c\cell\row
\cell process_event()\cell event-loop.c\cell\row
\cell process_queue()\cell dwarf2read.c\cell\row
\cell prompt_for_continue()\cell utils.c\cell\row
\cell rb_print_tree()\cell dwarf2read.c\cell\row
\cell read_args()\cell stabsread.c\cell\row
\cell read_dbx_symtab()\cell dbxread.c\cell\row
\cell read_member_functions()\cell stabsread.c\cell\row
\cell read_ofile_symtab()\cell dwarfread.c\cell\row
\cell read_ofile_symtab_from_oso()\cell dbxread.c\cell\row
\cell read_oso_nlists()\cell dbxread.c\cell\row
\cell really_free_pendings()\cell buildsym.c\cell\row
\cell regcache_xfree()\cell regcache.c\cell\row
\cell remote_fileio_func_read()\cell remote-fileio.c\cell\row
\cell remote_fileio_func_write()\cell remote-fileio.c\cell\row
\cell remove_duplicates()\cell breakpoint.c\cell\row
\cell remove_params()\cell cp-support.c\cell\row
\cell replace_operator_with_call()\cell ada-lang.c\cell\row
\cell report_timer_internal()\cell maint.c\cell\row
\cell reread_separate_symbols()\cell symfile.c\cell\row
\cell reread_symbols_for_objfile()\cell symfile.c\cell\row
\cell reset_child_selector_cache()\cell objc-lang.c\cell\row
\cell restore_inferior_ptid()\cell infrun.c\cell\row
\cell restore_inferior_status()\cell infrun.c\cell\row
\cell run_command_1()\cell infcmd.c\cell\row
\cell run_no_args_command()\cell infcmd.c\cell\row
\cell scan_compilation_units()\cell dwarfread.c\cell\row
\cell select_source_symtab()\cell source.c\cell\row
\cell serial_open()\cell serial.c\cell\row
\cell serial_printf()\cell serial.c\cell\row
\cell set_async_prompt()\cell event-top.c\cell\row
\cell set_case_str()\cell language.c\cell\row
\cell set_cp_abi_as_auto_default()\cell cp-abi.c\cell\row
\cell set_demangling_command()\cell demangle.c\cell\row
\cell set_demangling_style()\cell demangle.c\cell\row
\cell set_environment_command()\cell infcmd.c\cell\row
\cell set_ext_lang_command()\cell symfile.c\cell\row
\cell set_gnutarget()\cell corefile.c\cell\row
\cell set_in_environ()\cell environ.c\cell\row
\cell set_inferior_io_terminal()\cell infcmd.c\cell\row
\cell set_internalvar()\cell value.c\cell\row
\cell set_lang_str()\cell language.c\cell\row
\cell set_main_name()\cell symtab.c\cell\row
\cell set_range_str()\cell language.c\cell\row
\cell set_type_str()\cell language.c\cell\row
\cell simple_free_overlay_table()\cell symfile.c\cell\row
\cell sort_search_symbols()\cell symtab.c\cell\row
\cell stdio_file_delete()\cell ui-file.c\cell\row
\cell struct_type()\cell dwarfread.c\cell\row
\cell symbol_file_add_with_addrs_or_offsets_using_objfile()\cell symfile.c\cell\row
\cell symbol_init_demangled_name()\cell symtab.c\cell\row
\cell symbol_set_names()\cell symtab.c\cell\row
\cell symfile_bfd_open()\cell symfile.c\cell\row
\cell target_bfd_xclose()\cell bfd-target.c\cell\row
\cell tee_file_delete()\cell ui-file.c\cell\row
\cell terminal_init_inferior_with_pgrp()\cell inflow.c\cell\row
\cell terminal_ours_1()\cell inflow.c\cell\row
\cell terminal_save_ours()\cell inflow.c\cell\row
\cell tracepoint_operation()\cell tracepoint.c\cell\row
\cell tracepoint_save_command()\cell tracepoint.c\cell\row
\cell ui_file_delete()\cell ui-file.c\cell\row
\cell ui_out_delete()\cell ui-out.c\cell\row
\cell ui_out_stream_delete()\cell ui-out.c\cell\row
\cell ui_out_table_end()\cell ui-out.c\cell\row
\cell uninstall_variable()\cell varobj.c\cell\row
\cell unset_in_environ()\cell environ.c\cell\row
\cell until_break_command()\cell breakpoint.c\cell\row
\cell update_exception_catchpoints()\cell breakpoint.c\cell\row
\cell value_clear_inferior_string_pool()\cell valops.c\cell\row
\cell value_free()\cell value.c\cell\row
\cell value_objc_target_type()\cell objc-lang.c\cell\row
\cell value_of_child()\cell varobj.c\cell\row
\cell varobj_changelist_pop()\cell varobj.c\cell\row
\cell varobj_delete_objfiles_vars()\cell varobj.c\cell\row
\cell varobj_fixup_value()\cell varobj.c\cell\row
\cell varobj_set_value()\cell varobj.c\cell\row
\cell varobj_type_is_equal_p()\cell varobj.c\cell\row
\cell virtual_base_list()\cell gdbtypes.c\cell\row
\cell vpop()\cell varobj.c\cell\row
\cell watch_command_1()\cell breakpoint.c\cell\row
\cell xdb_handle_command()\cell infrun.c\cell\row
\cell xfree_observer_list_node()\cell observer.c\cell\row
\cell xfullpath()\cell utils.c\cell\row
\cell yyxfree()\cell ada-exp.c\cell\row
Used in:\cell _initialize_ada_exp()\cell ada-exp.c\cell\row
\cell _initialize_ada_language()\cell ada-lang.c\cell\row
\cell _initialize_cp_valprint()\cell cp-valprint.c\cell\row
\cell _initialize_frame()\cell frame.c\cell\row
\cell ada_lookup_symbol_list()\cell ada-lang.c\cell\row
\cell ada_parse()\cell ada-exp.c\cell\row
\cell add_dsym_command()\cell symfile.c\cell\row
\cell add_path()\cell source.c\cell\row
\cell add_symbol_file_command()\cell symfile.c\cell\row
\cell bpstat_stop_status()\cell breakpoint.c\cell\row
\cell break_command_2()\cell breakpoint.c\cell\row
\cell breakpoint_re_set_all()\cell breakpoint.c\cell\row
\cell breakpoint_update()\cell breakpoint.c\cell\row
\cell build_dummy_cu()\cell dwarf2read.c\cell\row
\cell build_dummy_objfile()\cell dwarf2read.c\cell\row
\cell clear_command()\cell breakpoint.c\cell\row
\cell coff_locate_sections()\cell coffread.c\cell\row
\cell commands_command()\cell breakpoint.c\cell\row
\cell compare_sections_command()\cell remote.c\cell\row
\cell create_demangled_names_hash()\cell symtab.c\cell\row
\cell create_objfile_using_objfile()\cell objfiles.c\cell\row
\cell decode_line_2()\cell linespec.c\cell\row
\cell default_xfer_partial()\cell target/target.c\cell\row
\cell delete_breakpoint()\cell breakpoint.c\cell\row
\cell determine_class_name()\cell dwarf2read.c\cell\row
\cell do_captured_breakpoint()\cell breakpoint.c\cell\row
\cell dwarf2_add_field()\cell dwarf2read.c\cell\row
\cell dwarf2_add_member_fn()\cell dwarf2read.c\cell\row
\cell dwarf2_build_psymtabs_hard()\cell dwarf2read.c\cell\row
\cell dwarf2_read_abbrevs()\cell dwarf2read.c\cell\row
\cell dwarf2_start_subfile()\cell dwarf2read.c\cell\row
\cell dwarf_build_psymtabs()\cell dwarfread.c\cell\row
\cell dwarf_decode_lines()\cell dwarf2read.c\cell\row
\cell elf_symtab_read()\cell elfread.c\cell\row
\cell error_stream()\cell utils.c\cell\row
\cell find_debug_info_for_pst()\cell dwarf2read.c\cell\row
\cell find_kext_loadaddrs_from_kernel()\cell symfile.c\cell\row
\cell find_oload_champ_namespace_loop()\cell valops.c\cell\row
\cell find_overload_match()\cell valops.c\cell\row
\cell find_pc_offset()\cell disasm.c\cell\row
\cell find_source_lines()\cell source.c\cell\row
\cell flush_cached_frames()\cell frame.c\cell\row
\cell gdbarch_alloc()\cell gdbarch.c\cell\row
\cell generic_load()\cell symfile.c\cell\row
\cell insert_bp_location()\cell breakpoint.c\cell\row
\cell internal_vproblem()\cell utils.c\cell\row
\cell invoke_block_command()\cell printcmd.c\cell\row
\cell java_parse()\cell jv-exp.c\cell\row
\cell load_comp_unit()\cell dwarf2read.c\cell\row
\cell load_full_comp_unit()\cell dwarf2read.c\cell\row
\cell load_progress()\cell symfile.c\cell\row
\cell load_section_callback()\cell symfile.c\cell\row
\cell lookup_partial_symtab()\cell symtab.c\cell\row
\cell lookup_partial_symtab_all()\cell symtab.c\cell\row
\cell lookup_struct_elt_type()\cell gdbtypes.c\cell\row
\cell lookup_symtab()\cell symtab.c\cell\row
\cell lookup_symtab_all()\cell symtab.c\cell\row
\cell maintenance_print_msymbols()\cell symmisc.c\cell\row
\cell maintenance_print_psymbols()\cell symmisc.c\cell\row
\cell maintenance_print_symbols()\cell symmisc.c\cell\row
\cell make_symbol_overload_list()\cell cp-support.c\cell\row
\cell maybe_expand()\cell macroexp.c\cell\row
\cell minsym_found()\cell linespec.c\cell\row
\cell minsyms_found()\cell linespec.c\cell\row
\cell nlm_symtab_read()\cell nlmread.c\cell\row
\cell objc_clear_caches()\cell objc-lang.c\cell\row
\cell objc_fixup_ivar_offset()\cell objc-lang.c\cell\row
\cell objc_read_trampoline_region()\cell objc-lang.c\cell\row
\cell open_bfd_from_oso()\cell dbxread.c\cell\row
\cell parse_frame_specification_1()\cell stack.c\cell\row
\cell parse_partial_symbols()\cell mdebugread.c\cell\row
\cell psymtab_to_symtab_1()\cell mdebugread.c\cell\row
\cell re_enable_breakpoints_in_shlibs()\cell breakpoint.c\cell\row
\cell read_alphacoff_dynamic_symtab()\cell mipsread.c\cell\row
\cell read_baseclasses()\cell stabsread.c\cell\row
\cell read_dbx_dynamic_symtab()\cell dbxread.c\cell\row
\cell read_dbx_symtab()\cell dbxread.c\cell\row
\cell read_func_scope()\cell dwarf2read.c\cell\row
\cell read_member_functions()\cell stabsread.c\cell\row
\cell read_namespace()\cell dwarf2read.c\cell\row
\cell read_ofile_symtab()\cell dwarfread.c\cell\row
\cell read_pe_exported_syms()\cell coff-pe-read.c\cell\row
\cell read_struct_fields()\cell stabsread.c\cell\row
\cell read_structure_type()\cell dwarf2read.c\cell\row
\cell read_type_die()\cell dwarf2read.c\cell\row
\cell recursive_dump_type()\cell gdbtypes.c\cell\row
\cell regcache_dump()\cell regcache.c\cell\row
\cell remote_macosx_create_inferior()\cell remote.c\cell\row
\cell remote_vcont_resume()\cell remote.c\cell\row
\cell remove_symbol_file_command()\cell symfile.c\cell\row
\cell renaming_is_visible()\cell ada-lang.c\cell\row
\cell reopen_exec_file()\cell corefile.c\cell\row
\cell reread_symbols_for_objfile()\cell symfile.c\cell\row
\cell save_breakpoints_command()\cell breakpoint.c\cell\row
\cell set_language_command()\cell language.c\cell\row
\cell set_raw_tracepoint()\cell tracepoint.c\cell\row
\cell slide_objfile()\cell objfiles.c\cell\row
\cell solib_load_unload_1()\cell breakpoint.c\cell\row
\cell solib_map_sections()\cell solib.c\cell\row
\cell symbol_file_add_from_memory()\cell symfile-mem.c\cell\row
\cell symbol_file_add_with_addrs_or_offsets_using_objfile()\cell symfile.c\cell\row
\cell symfile_bfd_open()\cell symfile.c\cell\row
\cell syms_from_objfile()\cell symfile.c\cell\row
\cell thread_apply_all_command()\cell thread.c\cell\row
\cell thread_apply_command()\cell thread.c\cell\row
\cell trace_find_line_command()\cell tracepoint.c\cell\row
\cell ui_out_field_stream()\cell ui-out.c\cell\row
\cell val_print_string()\cell valprint.c\cell\row
\cell validate_actionline()\cell tracepoint.c\cell\row
\cell varobj_lookup_struct_elt_type_by_index()\cell varobj.c\cell\row
\cell vcomplaint()\cell complaints.c\cell\row
\cell verify_gdbarch()\cell gdbarch.c\cell\row
\cell vfprintf_maybe_filtered()\cell utils.c\cell\row
\cell vfprintf_unfiltered()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function xfullpath()\par}
{\s5\f1\fs20\ql\sb50\sa50 char* xfullpath ( const char* filename )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell gdb_realpath()\cell utils.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell  __builtin___strncpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_strncpy_chk(), concat(), lbasename(), strlen(), xstrdup()\cell\cell\row
Called by:\cell lookup_partial_symtab()\cell symtab.c\cell\row
\cell lookup_partial_symtab_all()\cell symtab.c\cell\row
\cell lookup_symtab()\cell symtab.c\cell\row
\cell lookup_symtab_all()\cell symtab.c\cell\row
\cell maintenance_print_msymbols()\cell symmisc.c\cell\row
\cell openp()\cell source.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function xmalloc()\par}
{\s5\f1\fs20\ql\sb50\sa50 void* xmalloc ( size_t size )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ../include/libiberty.h\cell\cell\row
Calls: \cell nomem()\cell utils.c\cell\row
\cell  malloc()\cell\cell\row
Called by:\cell _ada_parse()\cell ada-exp.c\cell\row
\cell _initialize_gdbtypes()\cell gdbtypes.c\cell\row
\cell _initialize_parse()\cell parse.c\cell\row
\cell _initialize_reggroup()\cell reggroups.c\cell\row
\cell _initialize_ser_hardwire()\cell ser-unix.c\cell\row
\cell _initialize_stabsread()\cell stabsread.c\cell\row
\cell _initialize_tracepoint()\cell tracepoint.c\cell\row
\cell _initialize_varobj()\cell varobj.c\cell\row
\cell ada_simple_renamed_entity()\cell ada-lang.c\cell\row
\cell ada_template_to_fixed_record_type_1()\cell ada-lang.c\cell\row
\cell add_bits_piece()\cell dwarf2expr.c\cell\row
\cell add_breakpoint_to_new_list()\cell breakpoint.c\cell\row
\cell add_class_to_cache()\cell objc-lang.c\cell\row
\cell add_classname_to_cache()\cell objc-lang.c\cell\row
\cell add_continuation()\cell utils.c\cell\row
\cell add_equiv_psym()\cell dwarf2read.c\cell\row
\cell add_file_name()\cell dwarf2read.c\cell\row
\cell add_filename_to_list()\cell symtab.c\cell\row
\cell add_implementation_to_cache()\cell objc-lang.c\cell\row
\cell add_include_dir()\cell dwarf2read.c\cell\row
\cell add_intermediate_continuation()\cell utils.c\cell\row
\cell add_item_to_inlined_subroutine_stack()\cell inlining.c\cell\row
\cell add_item_to_temp_frame_stack()\cell inlining.c\cell\row
\cell add_language()\cell language.c\cell\row
\cell add_msglist()\cell objc-lang.c\cell\row
\cell add_new_header_file()\cell dbxread.c\cell\row
\cell add_one_pathname_substitution()\cell source.c\cell\row
\cell add_oso_pst_to_list()\cell dbxread.c\cell\row
\cell add_pe_exported_sym()\cell coff-pe-read.c\cell\row
\cell add_piece()\cell dwarf2expr.c\cell\row
\cell add_real_class_to_cache()\cell objc-lang.c\cell\row
\cell add_symbol_file_command()\cell symfile.c\cell\row
\cell add_symbol_to_inlined_subroutine_list()\cell inlining.c\cell\row
\cell add_symbol_to_list()\cell buildsym.c\cell\row
\cell add_target()\cell target/target.c\cell\row
\cell add_thread()\cell thread.c\cell\row
\cell add_to_list()\cell inlining.c\cell\row
\cell adjust_prompts_for_optimized_code()\cell event-top.c\cell\row
\cell alloc_section_addr_info()\cell symfile.c\cell\row
\cell alloc_type()\cell gdbtypes.c\cell\row
\cell alloc_type_instance()\cell gdbtypes.c\cell\row
\cell allocate_bp_location()\cell breakpoint.c\cell\row
\cell allocate_cplus_struct_type()\cell gdbtypes.c\cell\row
\cell allocate_info()\cell cp-name-parser.c\cell\row
\cell allocate_signal_set()\cell infrun.c\cell\row
\cell allocate_string_in_inferior()\cell valops.c\cell\row
\cell append_header_to_list()\cell ui-out.c\cell\row
\cell attach_fields_to_type()\cell stabsread.c\cell\row
\cell ax_reqs()\cell ax-general.c\cell\row
\cell backtrace_command()\cell stack.c\cell\row
\cell bpstat_alloc()\cell breakpoint.c\cell\row
\cell bpstat_copy()\cell breakpoint.c\cell\row
\cell bpstat_get_triggered_catchpoints()\cell breakpoint.c\cell\row
\cell break_command_1()\cell breakpoint.c\cell\row
\cell break_command_2()\cell breakpoint.c\cell\row
\cell build_builtin_bitfield()\cell gdbtypes.c\cell\row
\cell build_builtin_enum()\cell gdbtypes.c\cell\row
\cell build_canonical_line_spec()\cell linespec.c\cell\row
\cell build_dummy_cu()\cell dwarf2read.c\cell\row
\cell build_dummy_objfile()\cell dwarf2read.c\cell\row
\cell build_gdb_vtable_type()\cell gnu-v3-abi.c\cell\row
\cell build_objfile_section_table()\cell objfiles.c\cell\row
\cell c_parse()\cell c-exp.c\cell\row
\cell c_path_expr_of_child()\cell varobj.c\cell\row
\cell c_type_print_base()\cell c-typeprint.c\cell\row
\cell captured_main()\cell main.c\cell\row
\cell check_for_additional_inlined_breakpoint_locations()\cell inlining.c\cell\row
\cell check_stub_method()\cell gdbtypes.c\cell\row
\cell check_stub_method_group()\cell gdbtypes.c\cell\row
\cell clear_command()\cell breakpoint.c\cell\row
\cell cli_command_loop()\cell event-top.c\cell\row
\cell cli_out_new()\cell cli-out.c\cell\row
\cell cli_quoted_out_new()\cell cli-out.c\cell\row
\cell coff_locate_sections()\cell coffread.c\cell\row
\cell coff_read_enum_type()\cell coffread.c\cell\row
\cell coff_read_struct_type()\cell coffread.c\cell\row
\cell coff_symfile_init()\cell coffread.c\cell\row
\cell coff_symfile_read()\cell coffread.c\cell\row
\cell coff_symtab_read()\cell coffread.c\cell\row
\cell command_handler()\cell event-top.c\cell\row
\cell command_line_handler()\cell event-top.c\cell\row
\cell command_line_input()\cell top.c\cell\row
\cell compare_sections_command()\cell remote.c\cell\row
\cell completion_list_add_name()\cell symtab.c\cell\row
\cell construct_inferior_arguments()\cell infcmd.c\cell\row
\cell convert_oso_map_to_final_map()\cell dwarf2read.c\cell\row
\cell convert_sect_addrs_to_offsets_via_on_disk_file()\cell symfile.c\cell\row
\cell copy_exp()\cell jv-exp.c\cell\row
\cell copy_sal()\cell symtab.c\cell\row
\cell copy_string()\cell dwarf2read.c\cell\row
\cell cp_add_using()\cell cp-namespace.c\cell\row
\cell cp_comp_to_string()\cell cp-name-parser.c\cell\row
\cell cplus_path_expr_of_child()\cell varobj.c\cell\row
\cell cpname_parse()\cell cp-name-parser.c\cell\row
\cell cppush()\cell varobj.c\cell\row
\cell create_all_comp_units()\cell dwarf2read.c\cell\row
\cell create_array_type()\cell gdbtypes.c\cell\row
\cell create_async_signal_handler()\cell event-loop.c\cell\row
\cell create_cached_function()\cell value.c\cell\row
\cell create_file_handler()\cell event-loop.c\cell\row
\cell create_kext_addr_map()\cell dwarf2read.c\cell\row
\cell create_mem_region()\cell memattr.c\cell\row
\cell create_objfile()\cell objfiles.c\cell\row
\cell create_range_type()\cell gdbtypes.c\cell\row
\cell create_set_type()\cell gdbtypes.c\cell\row
\cell create_timer()\cell event-loop.c\cell\row
\cell db_error()\cell dwarf2read.c\cell\row
\cell db_lookup_type()\cell dwarf2read.c\cell\row
\cell db_read_attribute_value()\cell dwarf2read.c\cell\row
\cell dbx_lookup_type()\cell stabsread.c\cell\row
\cell dbx_symfile_init()\cell dbxread.c\cell\row
\cell decode_all_digits()\cell linespec.c\cell\row
\cell decode_all_digits_exhaustive()\cell linespec.c\cell\row
\cell decode_all_variables()\cell linespec.c\cell\row
\cell decode_dollar()\cell linespec.c\cell\row
\cell decode_indirect()\cell linespec.c\cell\row
\cell decode_line_1()\cell linespec.c\cell\row
\cell decode_line_2()\cell linespec.c\cell\row
\cell decode_objc()\cell linespec.c\cell\row
\cell default_xfer_partial()\cell target/target.c\cell\row
\cell define_symbol()\cell stabsread.c\cell\row
\cell delete_file_handler()\cell event-loop.c\cell\row
\cell deprecated_register_gdbarch_swap()\cell gdbarch.c\cell\row
\cell dict_create_hashed_expandable()\cell dictionary.c\cell\row
\cell dict_create_linear_expandable()\cell dictionary.c\cell\row
\cell display_command()\cell printcmd.c\cell\row
\cell do_ui_file_xstrdup()\cell ui-file.c\cell\row
\cell dwarf2_add_field()\cell dwarf2read.c\cell\row
\cell dwarf2_add_member_fn()\cell dwarf2read.c\cell\row
\cell dwarf2_add_to_list_of_inlined_calls()\cell dwarf2read.c\cell\row
\cell dwarf2_attach_fields_to_type()\cell dwarf2read.c\cell\row
\cell dwarf2_attach_fn_fields_to_type()\cell dwarf2read.c\cell\row
\cell dwarf2_frame_cache()\cell dwarf2-frame.c\cell\row
\cell dwarf2_frame_state_copy_regs()\cell dwarf2-frame.c\cell\row
\cell dwarf2_get_pc_bounds()\cell dwarf2read.c\cell\row
\cell dwarf2_read_abbrevs()\cell dwarf2read.c\cell\row
\cell dwarf_alloc_die()\cell dwarf2read.c\cell\row
\cell dwarf_build_psymtabs()\cell dwarfread.c\cell\row
\cell dwarf_decode_line_header()\cell dwarf2read.c\cell\row
\cell elf_symfile_read()\cell elfread.c\cell\row
\cell elf_symtab_read()\cell elfread.c\cell\row
\cell equivalence_table_add()\cell symmisc.c\cell\row
\cell execute_cfa_program()\cell dwarf2-frame.c\cell\row
\cell extend_psymbol_list()\cell symmisc.c\cell\row
\cell f_parse()\cell f-exp.c\cell\row
\cell file_full_name()\cell dwarf2read.c\cell\row
\cell filename_completer()\cell completer.c\cell\row
\cell filename_seen()\cell symtab.c\cell\row
\cell fill_in_die_info()\cell dwarf2read.c\cell\row
\cell fill_symbuf()\cell dbxread.c\cell\row
\cell find_arch_by_info()\cell gdbarch.c\cell\row
\cell find_complaint()\cell complaints.c\cell\row
\cell find_kext_files_by_bundle()\cell symfile.c\cell\row
\cell find_method()\cell linespec.c\cell\row
\cell find_oload_champ()\cell valops.c\cell\row
\cell find_pc_offset()\cell disasm.c\cell\row
\cell find_pc_sect_line()\cell symtab.c\cell\row
\cell find_source_lines()\cell source.c\cell\row
\cell finish_block()\cell buildsym.c\cell\row
\cell finish_command()\cell infcmd.c\cell\row
\cell finish_inlined_subroutine_command()\cell infcmd.c\cell\row
\cell fixup_section()\cell symtab.c\cell\row
\cell forward_search_command()\cell source.c\cell\row
\cell func_command()\cell stack.c\cell\row
\cell gather_arguments()\cell macroexp.c\cell\row
\cell gdb_create_event()\cell event-loop.c\cell\row
\cell gdb_mangle_name()\cell symtab.c\cell\row
\cell gdb_readline()\cell top.c\cell\row
\cell gdb_readline2()\cell event-top.c\cell\row
\cell gdbarch_alloc()\cell gdbarch.c\cell\row
\cell gdbarch_data_register()\cell gdbarch.c\cell\row
\cell gdbarch_register()\cell gdbarch.c\cell\row
\cell gdbarch_register_osabi()\cell osabi.c\cell\row
\cell gdbarch_register_osabi_sniffer()\cell osabi.c\cell\row
\cell generic_load()\cell symfile.c\cell\row
\cell get_binary_file_uuids()\cell utils.c\cell\row
\cell get_complaints()\cell complaints.c\cell\row
\cell get_kext_bundle_ident_and_binary_path()\cell symfile.c\cell\row
\cell get_repository_name()\cell dwarf2read.c\cell\row
\cell growbuf_by_size()\cell f-exp.c\cell\row
\cell hardwire_get_tty_state()\cell ser-unix.c\cell\row
\cell increment_use_count()\cell dwarf2read.c\cell\row
\cell init_bincl_list()\cell dbxread.c\cell\row
\cell init_buffer()\cell macroexp.c\cell\row
\cell init_environ()\cell environ.c\cell\row
\cell init_filename_language_table()\cell symfile.c\cell\row
\cell init_header_files()\cell dbxread.c\cell\row
\cell init_lineno()\cell coffread.c\cell\row
\cell init_psymbol_list()\cell symfile.c\cell\row
\cell init_stringtab()\cell coffread.c\cell\row
\cell initialize_protocol_log()\cell remote.c\cell\row
\cell initialize_repositories()\cell dwarf2read.c\cell\row
\cell inlined_function_add_function_names()\cell inlining.c\cell\row
\cell inlined_function_initialize_call_stack()\cell inlining.c\cell\row
\cell inlined_function_update_call_stack()\cell inlining.c\cell\row
\cell inlined_subroutine_adjust_position_for_breakpoint()\cell inlining.c\cell\row
\cell install_variable()\cell varobj.c\cell\row
\cell interp_new()\cell interps.c\cell\row
\cell interpreter_completer()\cell interps.c\cell\row
\cell invoke_block_command()\cell printcmd.c\cell\row
\cell java_class_name_from_physname()\cell jv-lang.c\cell\row
\cell java_demangle_type_signature()\cell jv-lang.c\cell\row
\cell java_link_class_type()\cell jv-lang.c\cell\row
\cell java_parse()\cell jv-exp.c\cell\row
\cell line_info()\cell source.c\cell\row
\cell load_comp_unit()\cell dwarf2read.c\cell\row
\cell load_full_comp_unit()\cell dwarf2read.c\cell\row
\cell load_progress()\cell symfile.c\cell\row
\cell load_section_callback()\cell symfile.c\cell\row
\cell location_completer()\cell completer.c\cell\row
\cell lookup_block_symbol_all()\cell symtab.c\cell\row
\cell lookup_child_selector()\cell objc-lang.c\cell\row
\cell lookup_internalvar()\cell value.c\cell\row
\cell lookup_minimal_symbol_all()\cell minsyms.c\cell\row
\cell lookup_partial_symtab_all()\cell symtab.c\cell\row
\cell lookup_repository_type()\cell dwarf2read.c\cell\row
\cell lookup_symtab_all()\cell symtab.c\cell\row
\cell m2_parse()\cell m2-exp.c\cell\row
\cell macro_alloc()\cell macrotab.c\cell\row
\cell macro_bcache()\cell macrotab.c\cell\row
\cell make_cleanup_close()\cell utils.c\cell\row
\cell make_cleanup_restore_current_thread()\cell thread.c\cell\row
\cell make_cleanup_restrict_to_objfile()\cell objfiles.c\cell\row
\cell make_cleanup_restrict_to_objfile_by_name()\cell objfiles.c\cell\row
\cell make_cleanup_restrict_to_objfile_list()\cell objfiles.c\cell\row
\cell make_cleanup_ui_out_end()\cell ui-out.c\cell\row
\cell make_environ()\cell environ.c\cell\row
\cell make_file_symbol_completion_list()\cell symtab.c\cell\row
\cell make_my_cleanup()\cell utils.c\cell\row
\cell make_source_files_completion_list()\cell symtab.c\cell\row
\cell make_symbol_completion_list()\cell symtab.c\cell\row
\cell make_symbol_overload_list()\cell cp-support.c\cell\row
\cell maybe_expand()\cell macroexp.c\cell\row
\cell mem_file_new()\cell ui-file.c\cell\row
\cell mem_file_write()\cell ui-file.c\cell\row
\cell minsym_found()\cell linespec.c\cell\row
\cell minsyms_found()\cell linespec.c\cell\row
\cell n_spaces()\cell utils.c\cell\row
\cell new_agent_expr()\cell ax-general.c\cell\row
\cell new_dwarf_expr_context()\cell dwarf2expr.c\cell\row
\cell new_linetable()\cell mdebugread.c\cell\row
\cell new_macro_table()\cell macrotab.c\cell\row
\cell new_root_variable()\cell varobj.c\cell\row
\cell new_variable()\cell varobj.c\cell\row
\cell nlm_symtab_read()\cell nlmread.c\cell\row
\cell objc_demangle()\cell objc-lang.c\cell\row
\cell objc_fixup_ivar_offset()\cell objc-lang.c\cell\row
\cell objc_parse()\cell objc-exp.c\cell\row
\cell objc_read_trampoline_region()\cell objc-lang.c\cell\row
\cell objfile_add_special_psym()\cell objfiles.c\cell\row
\cell objfile_add_to_ordered_sections()\cell objfiles.c\cell\row
\cell objfile_add_to_restrict_list()\cell objfiles.c\cell\row
\cell objfile_delete_from_ordered_sections()\cell objfiles.c\cell\row
\cell objfile_init_hitlist()\cell objfiles.c\cell\row
\cell objfile_relocate()\cell objfiles.c\cell\row
\cell open_dwarf_repository()\cell dwarf2read.c\cell\row
\cell parse_archive_name()\cell dbxread.c\cell\row
\cell parse_breakpoint_sals()\cell breakpoint.c\cell\row
\cell parse_exp_in_context()\cell parse.c\cell\row
\cell parse_macro_definition()\cell dwarf2read.c\cell\row
\cell parse_nested_classes_for_hpacc()\cell parse.c\cell\row
\cell parse_partial_symbols()\cell mdebugread.c\cell\row
\cell parse_symbol()\cell mdebugread.c\cell\row
\cell parse_type()\cell mdebugread.c\cell\row
\cell pascal_parse()\cell p-exp.c\cell\row
\cell pascal_val_print()\cell p-valprint.c\cell\row
\cell patch_type()\cell coffread.c\cell\row
\cell path_expr_of_root()\cell varobj.c\cell\row
\cell poll_timers()\cell event-loop.c\cell\row
\cell prim_record_minimal_symbol_and_info()\cell minsyms.c\cell\row
\cell print_decimal_chars()\cell valprint.c\cell\row
\cell print_inlined_frame()\cell inlining.c\cell\row
\cell print_inlined_frames_lite()\cell inlining.c\cell\row
\cell printf_command()\cell printcmd.c\cell\row
\cell process_dies()\cell dwarfread.c\cell\row
\cell process_enumeration_scope()\cell dwarf2read.c\cell\row
\cell psymtab_to_symtab_1()\cell mdebugread.c\cell\row
\cell push_current_type()\cell p-exp.c\cell\row
\cell push_front_restrict_list()\cell objfiles.c\cell\row
\cell push_subfile()\cell buildsym.c\cell\row
\cell push_timer()\cell maint.c\cell\row
\cell queue_comp_unit()\cell dwarf2read.c\cell\row
\cell rank_function()\cell gdbtypes.c\cell\row
\cell rb_print_tree()\cell dwarf2read.c\cell\row
\cell rb_tree_find_all_exact_matches()\cell inlining.c\cell\row
\cell rb_tree_find_all_matching_nodes()\cell inlining.c\cell\row
\cell rb_tree_find_all_nodes_in_between()\cell inlining.c\cell\row
\cell rb_tree_remove_node()\cell dwarf2read.c\cell\row
\cell re_exec_once()\cell infcmd.c\cell\row
\cell read_actions()\cell tracepoint.c\cell\row
\cell read_alphacoff_dynamic_symtab()\cell mipsread.c\cell\row
\cell read_baseclasses()\cell stabsread.c\cell\row
\cell read_dbx_dynamic_symtab()\cell dbxread.c\cell\row
\cell read_dbx_symtab()\cell dbxread.c\cell\row
\cell read_enum_type()\cell stabsread.c\cell\row
\cell read_file_scope()\cell dwarfread.c\cell\row
\cell read_full_die()\cell dwarf2read.c\cell\row
\cell read_in_db_abbrev_table()\cell dwarf2read.c\cell\row
\cell read_member_functions()\cell stabsread.c\cell\row
\cell read_ofile_symtab()\cell dwarfread.c\cell\row
\cell read_ofile_symtab_from_oso()\cell dbxread.c\cell\row
\cell read_oso_nlists()\cell dbxread.c\cell\row
\cell read_pe_exported_syms()\cell coff-pe-read.c\cell\row
\cell read_struct_fields()\cell stabsread.c\cell\row
\cell read_subroutine_type()\cell dwarf2read.c\cell\row
\cell read_type()\cell stabsread.c\cell\row
\cell record_latest_value()\cell value.c\cell\row
\cell record_line()\cell buildsym.c\cell\row
\cell regcache_xmalloc()\cell regcache.c\cell\row
\cell reggroup_new()\cell reggroups.c\cell\row
\cell register_objfile_data()\cell objfiles.c\cell\row
\cell remote_fileio_func_read()\cell remote-fileio.c\cell\row
\cell remote_fileio_func_write()\cell remote-fileio.c\cell\row
\cell remote_fileio_init_fd_map()\cell remote-fileio.c\cell\row
\cell remote_macosx_create_inferior()\cell remote.c\cell\row
\cell remote_vcont_resume()\cell remote.c\cell\row
\cell remove_duplicates()\cell breakpoint.c\cell\row
\cell replace_operator_with_call()\cell ada-lang.c\cell\row
\cell sal_macro_scope()\cell macroscope.c\cell\row
\cell save_breakpoints_command()\cell breakpoint.c\cell\row
\cell save_child_in_parent()\cell varobj.c\cell\row
\cell save_inferior_ptid()\cell infrun.c\cell\row
\cell save_inferior_status()\cell infrun.c\cell\row
\cell save_thread_inlined_call_stack()\cell inlining.c\cell\row
\cell savestring()\cell utils.c\cell\row
\cell scan_compilation_units()\cell dwarfread.c\cell\row
\cell search_symbols()\cell symtab.c\cell\row
\cell ser_base_get_tty_state()\cell ser-base.c\cell\row
\cell serial_fdopen()\cell serial.c\cell\row
\cell serial_open()\cell serial.c\cell\row
\cell set_async_prompt()\cell event-top.c\cell\row
\cell set_in_environ()\cell environ.c\cell\row
\cell set_raw_breakpoint()\cell breakpoint.c\cell\row
\cell set_raw_tracepoint()\cell tracepoint.c\cell\row
\cell set_width()\cell utils.c\cell\row
\cell simple_charset()\cell charset.c\cell\row
\cell simple_read_overlay_table()\cell symfile.c\cell\row
\cell slide_objfile()\cell objfiles.c\cell\row
\cell solib_load_unload_1()\cell breakpoint.c\cell\row
\cell sort_search_symbols()\cell symtab.c\cell\row
\cell specify_exec_file_hook()\cell corefile.c\cell\row
\cell stabsect_build_psymtabs()\cell dbxread.c\cell\row
\cell stabsect_read_strtab_from_oso()\cell dbxread.c\cell\row
\cell start_arglist()\cell parse.c\cell\row
\cell start_msglist()\cell objc-lang.c\cell\row
\cell start_subfile()\cell buildsym.c\cell\row
\cell start_symtab()\cell buildsym.c\cell\row
\cell stdio_file_new()\cell ui-file.c\cell\row
\cell step_once()\cell infcmd.c\cell\row
\cell stringify_collection_list()\cell tracepoint.c\cell\row
\cell struct_type()\cell dwarfread.c\cell\row
\cell symbol_found()\cell linespec.c\cell\row
\cell symbols_found()\cell linespec.c\cell\row
\cell table_translation()\cell charset.c\cell\row
\cell target_read_string()\cell target/target.c\cell\row
\cell target_resize_to_sections()\cell target/target.c\cell\row
\cell tee_file_new()\cell ui-file.c\cell\row
\cell template_to_static_fixed_type()\cell ada-lang.c\cell\row
\cell to_record_with_fixed_variant_part()\cell ada-lang.c\cell\row
\cell trace_find_line_command()\cell tracepoint.c\cell\row
\cell typename_concat()\cell dwarf2read.c\cell\row
\cell ui_file_new()\cell ui-file.c\cell\row
\cell ui_out_new()\cell ui-out.c\cell\row
\cell ui_out_stream_new()\cell ui-out.c\cell\row
\cell until_break_command()\cell breakpoint.c\cell\row
\cell update_tmp_frame_stack()\cell inlining.c\cell\row
\cell uptok()\cell p-exp.c\cell\row
\cell user_reg_add_builtin()\cell user-regs.c\cell\row
\cell val_print_string()\cell valprint.c\cell\row
\cell varobj_add_to_changelist()\cell varobj.c\cell\row
\cell varobj_changelist_init()\cell varobj.c\cell\row
\cell varobj_delete()\cell varobj.c\cell\row
\cell varobj_fixup_value()\cell varobj.c\cell\row
\cell varobj_list()\cell varobj.c\cell\row
\cell varobj_list_children()\cell varobj.c\cell\row
\cell virtual_base_list()\cell gdbtypes.c\cell\row
\cell virtual_base_list_aux()\cell gdbtypes.c\cell\row
\cell vpush()\cell varobj.c\cell\row
\cell watch_command_1()\cell breakpoint.c\cell\row
\cell write_object_renaming()\cell ada-exp.c\cell\row
\cell xalloc_observer_list_node()\cell observer.c\cell\row
\cell xdb_handle_command()\cell infrun.c\cell\row
\cell xget_renaming_scope()\cell ada-lang.c\cell\row
\cell yyalloc()\cell ada-exp.c\cell\row
Used in:\cell _initialize_ada_exp()\cell ada-exp.c\cell\row
\cell _initialize_ada_language()\cell ada-lang.c\cell\row
\cell _initialize_cp_valprint()\cell cp-valprint.c\cell\row
\cell _initialize_frame()\cell frame.c\cell\row
\cell ada_lookup_symbol_list()\cell ada-lang.c\cell\row
\cell ada_parse()\cell ada-exp.c\cell\row
\cell build_dummy_cu()\cell dwarf2read.c\cell\row
\cell build_dummy_objfile()\cell dwarf2read.c\cell\row
\cell create_objfile_using_objfile()\cell objfiles.c\cell\row
\cell dwarf2_build_psymtabs_hard()\cell dwarf2read.c\cell\row
\cell dwarf2_read_abbrevs()\cell dwarf2read.c\cell\row
\cell find_debug_info_for_pst()\cell dwarf2read.c\cell\row
\cell flush_cached_frames()\cell frame.c\cell\row
\cell gdbarch_alloc()\cell gdbarch.c\cell\row
\cell load_comp_unit()\cell dwarf2read.c\cell\row
\cell load_full_comp_unit()\cell dwarf2read.c\cell\row
\cell recursive_dump_type()\cell gdbtypes.c\cell\row
\cell reread_symbols_for_objfile()\cell symfile.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function xmcalloc()\par}
{\s5\f1\fs20\ql\sb50\sa50 void* xmcalloc ( void* md, size_t number, size_t size )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell mcalloc()\cell utils.c\cell\row
\cell nomem()\cell utils.c\cell\row
Called by:\cell bcache_xmalloc()\cell bcache.c\cell\row
\cell gcalloc()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function xmfree()\par}
{\s5\f1\fs20\ql\sb50\sa50 void xmfree ( void* md, void* ptr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell mfree()\cell utils.c\cell\row
Called by:\cell bcache_xfree()\cell bcache.c\cell\row
\cell expand_hash_table()\cell bcache.c\cell\row
\cell gfree()\cell utils.c\cell\row
Used in:\cell bcache_xmalloc()\cell bcache.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function xmmalloc()\par}
{\s5\f1\fs20\ql\sb50\sa50 void* xmmalloc ( void* md, size_t size )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell mmalloc()\cell utils.c\cell\row
\cell nomem()\cell utils.c\cell\row
Called by:\cell expand_hash_table()\cell bcache.c\cell\row
\cell gmalloc()\cell utils.c\cell\row
Used in:\cell bcache_xmalloc()\cell bcache.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function xmrealloc()\par}
{\s5\f1\fs20\ql\sb50\sa50 void* xmrealloc ( void* md, void* ptr, size_t size )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell mmalloc()\cell utils.c\cell\row
\cell mrealloc()\cell utils.c\cell\row
\cell nomem()\cell utils.c\cell\row
Called by:\cell grealloc()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function xrealloc()\par}
{\s5\f1\fs20\ql\sb50\sa50 void* xrealloc ( void* ptr, size_t size )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ../include/libiberty.h\cell\cell\row
Calls: \cell nomem()\cell utils.c\cell\row
\cell  malloc(), realloc()\cell\cell\row
Called by:\cell add_aexpr()\cell tracepoint.c\cell\row
\cell add_bincl_to_list()\cell dbxread.c\cell\row
\cell add_bits_piece()\cell dwarf2expr.c\cell\row
\cell add_block()\cell mdebugread.c\cell\row
\cell add_constructors()\cell linespec.c\cell\row
\cell add_equiv_psym()\cell dwarf2read.c\cell\row
\cell add_file_name()\cell dwarf2read.c\cell\row
\cell add_filename_language()\cell symfile.c\cell\row
\cell add_filename_to_list()\cell symtab.c\cell\row
\cell add_include_dir()\cell dwarf2read.c\cell\row
\cell add_item_to_inlined_subroutine_stack()\cell inlining.c\cell\row
\cell add_item_to_temp_frame_stack()\cell inlining.c\cell\row
\cell add_language()\cell language.c\cell\row
\cell add_matching_methods()\cell linespec.c\cell\row
\cell add_memrange()\cell tracepoint.c\cell\row
\cell add_new_header_file()\cell dbxread.c\cell\row
\cell add_one_pathname_substitution()\cell source.c\cell\row
\cell add_oso_pst_to_list()\cell dbxread.c\cell\row
\cell add_partial_symtab_to_array()\cell symtab.c\cell\row
\cell add_piece()\cell dwarf2expr.c\cell\row
\cell add_symbol_linear_expandable()\cell dictionary.c\cell\row
\cell add_symtab_to_array()\cell symtab.c\cell\row
\cell add_target()\cell target/target.c\cell\row
\cell add_this_object_header_file()\cell dbxread.c\cell\row
\cell add_to_containing_archive_cache()\cell dbxread.c\cell\row
\cell add_undefined_array()\cell gdbtypes.c\cell\row
\cell add_undefined_field()\cell stabsread.c\cell\row
\cell add_undefined_type()\cell stabsread.c\cell\row
\cell append_composite_type_field()\cell gdbtypes.c\cell\row
\cell append_name()\cell gdbarch.c\cell\row
\cell ax_reqs()\cell ax-general.c\cell\row
\cell c_lex()\cell c-exp.c\cell\row
\cell c_parse()\cell c-exp.c\cell\row
\cell captured_main()\cell main.c\cell\row
\cell check_for_additional_inlined_breakpoint_locations()\cell inlining.c\cell\row
\cell check_type_stack_depth()\cell parse.c\cell\row
\cell cisco_kod_request()\cell kod-cisco.c\cell\row
\cell coff_lookup_type()\cell coffread.c\cell\row
\cell collect_methods()\cell linespec.c\cell\row
\cell command_line_handler()\cell event-top.c\cell\row
\cell command_line_input()\cell top.c\cell\row
\cell completion_list_add_name()\cell symtab.c\cell\row
\cell completion_list_objc_symbol()\cell symtab.c\cell\row
\cell copy_name()\cell parse.c\cell\row
\cell create_all_comp_units()\cell dwarf2read.c\cell\row
\cell create_file_handler()\cell event-loop.c\cell\row
\cell dbx_lookup_type()\cell stabsread.c\cell\row
\cell decode_all_digits_exhaustive()\cell linespec.c\cell\row
\cell decoded_type_name()\cell ada-typeprint.c\cell\row
\cell do_ui_file_xstrdup()\cell ui-file.c\cell\row
\cell dwarf2_add_member_fn()\cell dwarf2read.c\cell\row
\cell dwarf2_frame_state_alloc_regs()\cell dwarf2-frame.c\cell\row
\cell dwarf2_get_pc_bounds()\cell dwarf2read.c\cell\row
\cell dwarf2_read_abbrevs()\cell dwarf2read.c\cell\row
\cell dwarf_expr_grow_stack()\cell dwarf2expr.c\cell\row
\cell extend_psymbol_list()\cell symmisc.c\cell\row
\cell f_parse()\cell f-exp.c\cell\row
\cell filename_completer()\cell completer.c\cell\row
\cell filename_seen()\cell symtab.c\cell\row
\cell find_methods()\cell objc-lang.c\cell\row
\cell find_source_lines()\cell source.c\cell\row
\cell forward_search_command()\cell source.c\cell\row
\cell gather_arguments()\cell macroexp.c\cell\row
\cell gdb_readline()\cell top.c\cell\row
\cell gdb_readline2()\cell event-top.c\cell\row
\cell get_binary_file_uuids()\cell utils.c\cell\row
\cell grow_expr()\cell ax-general.c\cell\row
\cell grow_vect()\cell ada-lang.c\cell\row
\cell growbuf_by_size()\cell f-exp.c\cell\row
\cell init_environ()\cell environ.c\cell\row
\cell init_timer()\cell maint.c\cell\row
\cell initialize_current_architecture()\cell arch-utils.c\cell\row
\cell insert_exp()\cell jv-exp.c\cell\row
\cell interpreter_completer()\cell interps.c\cell\row
\cell java_lex()\cell jv-exp.c\cell\row
\cell location_completer()\cell completer.c\cell\row
\cell mem_file_write()\cell ui-file.c\cell\row
\cell objc_lex()\cell objc-exp.c\cell\row
\cell objc_parse()\cell objc-exp.c\cell\row
\cell objfile_add_special_psym()\cell objfiles.c\cell\row
\cell objfile_add_to_hitlist()\cell objfiles.c\cell\row
\cell objfile_add_to_ordered_sections()\cell objfiles.c\cell\row
\cell overload_list_add_symbol()\cell cp-support.c\cell\row
\cell parse_exp_in_context()\cell parse.c\cell\row
\cell parse_macro_definition()\cell dwarf2read.c\cell\row
\cell parse_partial_symbols()\cell mdebugread.c\cell\row
\cell pascal_lex()\cell p-exp.c\cell\row
\cell printf_command()\cell printcmd.c\cell\row
\cell process_enumeration_scope()\cell dwarf2read.c\cell\row
\cell push_context()\cell buildsym.c\cell\row
\cell read_args()\cell stabsread.c\cell\row
\cell read_array_type()\cell dwarf2read.c\cell\row
\cell read_in_db_abbrev_table()\cell dwarf2read.c\cell\row
\cell read_oso_nlists()\cell dbxread.c\cell\row
\cell record_line()\cell buildsym.c\cell\row
\cell ref_add()\cell stabsread.c\cell\row
\cell remote_fileio_resize_fd_map()\cell remote-fileio.c\cell\row
\cell resize_buffer()\cell macroexp.c\cell\row
\cell resize_tempbuf()\cell ada-exp.c\cell\row
\cell sals_pushback()\cell linespec.c\cell\row
\cell set_in_environ()\cell environ.c\cell\row
\cell set_namestring_1()\cell dbxread.c\cell\row
\cell set_width()\cell utils.c\cell\row
\cell shrink_linetable()\cell mdebugread.c\cell\row
\cell specify_exec_file_hook()\cell corefile.c\cell\row
\cell target_read_string()\cell target/target.c\cell\row
\cell target_resize_to_sections()\cell target/target.c\cell\row
\cell val_print_string()\cell valprint.c\cell\row
\cell value_change_enclosing_type()\cell value.c\cell\row
\cell write_exp_bitstring()\cell parse.c\cell\row
\cell write_exp_elt()\cell parse.c\cell\row
\cell write_exp_string()\cell parse.c\cell\row
\cell yyxrealloc()\cell ada-exp.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function xsnprintf()\par}
{\s5\f1\fs20\ql\sb50\sa50 int xsnprintf ( char* str, size_t size, const char* format, ... )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell internal_error()\cell utils.c\cell\row
\cell  __builtin___vsnprintf_chk(), __builtin_object_size(), __builtin_va_end(), __builtin_va_start()\cell\cell\row
Called by:\cell compare_sections_command()\cell remote.c\cell\row
\cell decimal2str()\cell utils.c\cell\row
\cell extended_remote_restart()\cell remote.c\cell\row
\cell hex_string()\cell utils.c\cell\row
\cell normal_pid_to_str()\cell target/target.c\cell\row
\cell octal2str()\cell utils.c\cell\row
\cell phex()\cell utils.c\cell\row
\cell phex_nz()\cell utils.c\cell\row
\cell remote_check_symbols()\cell remote.c\cell\row
\cell remote_pid_to_str()\cell remote.c\cell\row
\cell remote_thread_alive()\cell remote.c\cell\row
\cell remote_threads_extra_info()\cell remote.c\cell\row
\cell safe_strerror()\cell utils.c\cell\row
\cell set_thread()\cell remote.c\cell\row
\cell store_register_using_P()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function xstrprintf()\par}
{\s5\f1\fs20\ql\sb50\sa50 char* xstrprintf ( const char* format, ... )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell xstrvprintf()\cell utils.c\cell\row
\cell  __builtin_va_end(), __builtin_va_start()\cell\cell\row
Called by:\cell add_packet_config_cmd()\cell remote.c\cell\row
\cell bpstat_stop_status()\cell breakpoint.c\cell\row
\cell breakpoint_re_set_all()\cell breakpoint.c\cell\row
\cell breakpoint_update()\cell breakpoint.c\cell\row
\cell c_make_name_of_child()\cell varobj.c\cell\row
\cell c_value_of_variable()\cell varobj.c\cell\row
\cell captured_main()\cell main.c\cell\row
\cell commands_command()\cell breakpoint.c\cell\row
\cell create_breakpoints()\cell breakpoint.c\cell\row
\cell create_child()\cell varobj.c\cell\row
\cell create_thread_event_breakpoint()\cell breakpoint.c\cell\row
\cell delete_breakpoint()\cell breakpoint.c\cell\row
\cell hand_function_call()\cell infcall.c\cell\row
\cell insert_bp_location()\cell breakpoint.c\cell\row
\cell internal_vproblem()\cell utils.c\cell\row
\cell is_package_name()\cell ada-lang.c\cell\row
\cell re_enable_breakpoints_in_shlibs()\cell breakpoint.c\cell\row
\cell regcache_dump()\cell regcache.c\cell\row
\cell remote_vcont_resume()\cell remote.c\cell\row
\cell varobj_gen_name()\cell varobj.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function xstrvprintf()\par}
{\s5\f1\fs20\ql\sb50\sa50 char* xstrvprintf ( const char* format, va_list ap )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell internal_error()\cell utils.c\cell\row
\cell nomem()\cell utils.c\cell\row
\cell  __error(), vasprintf()\cell\cell\row
Called by:\cell internal_vproblem()\cell utils.c\cell\row
\cell serial_printf()\cell serial.c\cell\row
\cell vcomplaint()\cell complaints.c\cell\row
\cell vfprintf_maybe_filtered()\cell utils.c\cell\row
\cell vfprintf_unfiltered()\cell utils.c\cell\row
\cell xasprintf()\cell utils.c\cell\row
\cell xstrprintf()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function xzalloc()\par}
{\s5\f1\fs20\ql\sb50\sa50 void* xzalloc ( size_t size )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell xcalloc()\cell utils.c\cell\row
Called by:\cell allocate_value()\cell value.c\cell\row
\cell dummy_frame_push()\cell dummy-frame.c\cell\row
\cell new_block()\cell mdebugread.c\cell\row
\cell new_bvect()\cell mdebugread.c\cell\row
\cell parse_partial_symbols()\cell mdebugread.c\cell\row
\cell push_parse_stack()\cell mdebugread.c\cell\row
\cell target_bfd_reopen()\cell bfd-target.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function yquery()\par}
{\s5\f1\fs20\ql\sb50\sa50 int yquery ( const char* ctlstr, ... )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell defaulted_query()\cell utils.c\cell\row
\cell  __builtin_va_end(), __builtin_va_start()\cell\cell\row
Called by:\cell internal_vproblem()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function decimal2str()\par}
{\s5\f1\fs20\ql\sb50\sa50 static char* decimal2str ( const char* sign, unsigned long addr, int8_t width )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell get_cell()\cell utils.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell xsnprintf()\cell utils.c\cell\row
Called by:\cell int_string()\cell utils.c\cell\row
\cell paddr_d()\cell utils.c\cell\row
\cell paddr_u()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function defaulted_query()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int defaulted_query ( const char* ctlstr, const char defchar, va_list args )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell gdb_flush()\cell ui-file.c\cell\row
\cell input_from_terminal_p()\cell top.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell vfprintf_filtered()\cell utils.c\cell\row
\cell wrap_here()\cell utils.c\cell\row
\cell  clearerr(), deprecated_query_hook(), fgetc()\cell\cell\row
Called by:\cell nquery()\cell utils.c\cell\row
\cell yquery()\cell utils.c\cell\row
Refs Var:\cell annotation_level\cell stack.c\cell\row
\cell deprecated_query_hook\cell top.c\cell\row
\cell gdb_stdout\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function do_bfd_close_cleanup()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void do_bfd_close_cleanup ( void* arg )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell  bfd_close()\cell\cell\row
Used in:\cell make_cleanup_bfd_close()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function do_close_cleanup()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void do_close_cleanup ( void* arg )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell xfree()\cell utils.c\cell\row
\cell  close()\cell\cell\row
Used in:\cell make_cleanup_close()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function do_free_section_addr_info()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void do_free_section_addr_info ( void* arg )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell free_section_addr_info()\cell symfile.c\cell\row
Used in:\cell make_cleanup_free_section_addr_info()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function do_freeargv()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void do_freeargv ( void* arg )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell  freeargv()\cell\cell\row
Used in:\cell make_cleanup_freeargv()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function do_my_cleanups()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void do_my_cleanups ( struct cleanup** pmy_chain, struct cleanup* old_chain )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell utils.c\cell\cell\row
Calls: \cell xfree()\cell utils.c\cell\row
Called by:\cell do_cleanups()\cell utils.c\cell\row
\cell do_exec_cleanups()\cell utils.c\cell\row
\cell do_exec_error_cleanups()\cell utils.c\cell\row
\cell do_final_cleanups()\cell utils.c\cell\row
\cell do_hand_call_cleanups()\cell utils.c\cell\row
\cell do_run_cleanups()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function do_restore_output()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void do_restore_output ( void* data )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell ui_file_rewind()\cell ui-file.c\cell\row
Used in:\cell make_cleanup_ui_out_suppress_output()\cell utils.c\cell\row
Refs Var:\cell gdb_null\cell main.c\cell\row
\cell uiout\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function do_restore_uiout_cleanup()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void do_restore_uiout_cleanup ( void* arg )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell make_cleanup_restore_uiout()\cell utils.c\cell\row
Refs Var:\cell uiout\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function do_set_schedlock_mode()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void do_set_schedlock_mode ( void* in_mode )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell set_scheduler_locking_mode()\cell infrun.c\cell\row
Used in:\cell make_cleanup_set_restore_scheduler_locking_mode()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function do_ui_file_delete()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void do_ui_file_delete ( void* arg )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell ui_file_delete()\cell ui-file.c\cell\row
Used in:\cell make_cleanup_ui_file_delete()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function do_ui_out_delete()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void do_ui_out_delete ( void* arg )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell ui_out_delete()\cell ui-out.c\cell\row
Used in:\cell make_cleanup_ui_out_delete()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function fputs_maybe_filtered()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void fputs_maybe_filtered ( const char* linebuffer, struct ui_file* stream, int filter )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell utils.c\cell\cell\row
Calls: \cell fputc_unfiltered()\cell utils.c\cell\row
\cell fputs_unfiltered()\cell ui-file.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell prompt_for_continue()\cell utils.c\cell\row
\cell wrap_here()\cell utils.c\cell\row
\cell  strlen()\cell\cell\row
Called by:\cell fputs_filtered()\cell utils.c\cell\row
\cell vfprintf_maybe_filtered()\cell utils.c\cell\row
Refs Var:\cell chars_per_line\cell utils.c\cell\row
\cell chars_printed\cell utils.c\cell\row
\cell gdb_stdout\cell main.c\cell\row
\cell lines_per_page\cell utils.c\cell\row
\cell lines_printed\cell utils.c\cell\row
\cell pagination_enabled\cell utils.c\cell\row
\cell wrap_buffer\cell utils.c\cell\row
\cell wrap_column\cell utils.c\cell\row
\cell wrap_indent\cell utils.c\cell\row
\cell wrap_pointer\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function get_cell()\par}
{\s5\f1\fs20\ql\sb50\sa50 static char* get_cell ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Called by:\cell core_addr_to_string()\cell utils.c\cell\row
\cell core_addr_to_string_nz()\cell utils.c\cell\row
\cell decimal2str()\cell utils.c\cell\row
\cell hex_string()\cell utils.c\cell\row
\cell hex_string_custom()\cell utils.c\cell\row
\cell octal2str()\cell utils.c\cell\row
\cell phex()\cell utils.c\cell\row
\cell phex_nz()\cell utils.c\cell\row
\cell puuid()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function internal_vproblem()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void internal_vproblem ( struct internal_problem* problem, const char* file, int line, const char* fmt, va_list ap )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell begin_line()\cell utils.c\cell\row
\cell fputs_unfiltered()\cell ui-file.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell query()\cell utils.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell xstrprintf()\cell utils.c\cell\row
\cell xstrvprintf()\cell utils.c\cell\row
\cell yquery()\cell utils.c\cell\row
\cell  abort(), backtrace(), backtrace_symbols_fd(), exit(), fork(), fprintf(), fputs(), vfprintf(), write()\cell\cell\row
Called by:\cell internal_verror()\cell utils.c\cell\row
\cell internal_vwarning()\cell utils.c\cell\row
Refs Func:\cell xfree()\cell utils.c\cell\row
Refs Var:\cell current_target\cell target/target.c\cell\row
\cell gdb_stderr\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function mcalloc()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void* mcalloc ( void* md, size_t number, size_t size )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell  calloc()\cell\cell\row
Called by:\cell xmcalloc()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function mfree()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void mfree ( void* md, void* volatile ptr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell  free()\cell\cell\row
Called by:\cell xmfree()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function mmalloc()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void* mmalloc ( void* md, size_t size )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell  malloc()\cell\cell\row
Called by:\cell mrealloc()\cell utils.c\cell\row
\cell xmmalloc()\cell utils.c\cell\row
\cell xmrealloc()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function mrealloc()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void* mrealloc ( void* md, void* volatile ptr, size_t size )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell mmalloc()\cell utils.c\cell\row
\cell  realloc()\cell\cell\row
Called by:\cell xmrealloc()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function no_control_char_error()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int no_control_char_error ( const char* start, const char* end )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell error()\cell utils.c\cell\row
\cell target_charset()\cell charset.c\cell\row
\cell  __builtin___memcpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_memcpy_chk()\cell\cell\row
Called by:\cell parse_escape()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function octal2str()\par}
{\s5\f1\fs20\ql\sb50\sa50 static char* octal2str ( unsigned long addr, int8_t width )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell get_cell()\cell utils.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell xsnprintf()\cell utils.c\cell\row
Called by:\cell int_string()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function pagination_off_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void pagination_off_command ( const char* arg, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell utils.c\cell\cell\row
Used in:\cell initialize_utils()\cell utils.c\cell\row
Refs Var:\cell pagination_enabled\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function pagination_on_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void pagination_on_command ( const char* arg, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell utils.c\cell\cell\row
Used in:\cell initialize_utils()\cell utils.c\cell\row
Refs Var:\cell pagination_enabled\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function printchar()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void printchar ( int c, void (*do_fputs)(const char*,struct ui_file*), void (*do_fprintf)(struct ui_file*,const char*,...), struct ui_file* stream, int quoter )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Called by:\cell fputstr_filtered()\cell utils.c\cell\row
\cell fputstr_unfiltered()\cell utils.c\cell\row
\cell fputstrn_unfiltered()\cell utils.c\cell\row
Refs Var:\cell sevenbit_strings\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function prompt_for_continue()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void prompt_for_continue ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell utils.c\cell\cell\row
Calls: \cell async_request_quit()\cell event-top.c\cell\row
\cell dont_repeat()\cell top.c\cell\row
\cell gdb_readline_wrapper()\cell top.c\cell\row
\cell printf_unfiltered()\cell utils.c\cell\row
\cell reinitialize_more_filter()\cell utils.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell  __builtin___strcat_chk(), __builtin___strcpy_chk(), __builtin_object_size(), __inline_strcat_chk(), __inline_strcpy_chk()\cell\cell\row
Called by:\cell fputs_maybe_filtered()\cell utils.c\cell\row
Refs Var:\cell annotation_level\cell stack.c\cell\row
\cell immediate_quit\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_height_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void set_height_command ( const char* args, int from_tty, struct cmd_list_element* c )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell set_screen_size()\cell utils.c\cell\row
Used in:\cell initialize_utils()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_width_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void set_width_command ( const char* args, int from_tty, struct cmd_list_element* c )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell utils.c\cell\cell\row
Calls: \cell set_screen_size()\cell utils.c\cell\row
\cell set_width()\cell utils.c\cell\row
Used in:\cell initialize_utils()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_asm_demangle()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_asm_demangle ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell fprintf_filtered()\cell utils.c\cell\row
Used in:\cell initialize_utils()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_chars_per_line()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_chars_per_line ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell fprintf_filtered()\cell utils.c\cell\row
Used in:\cell initialize_utils()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_demangle()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_demangle ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell fprintf_filtered()\cell utils.c\cell\row
Used in:\cell initialize_utils()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_lines_per_page()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_lines_per_page ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell fprintf_filtered()\cell utils.c\cell\row
Used in:\cell initialize_utils()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_pagination_enabled()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_pagination_enabled ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell fprintf_filtered()\cell utils.c\cell\row
Used in:\cell initialize_utils()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_sevenbit_strings()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_sevenbit_strings ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell fprintf_filtered()\cell utils.c\cell\row
Used in:\cell initialize_utils()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function strrchr_bounded()\par}
{\s5\f1\fs20\ql\sb50\sa50 static const char* strrchr_bounded ( const char* beg, const char* end, char c )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Called by:\cell bundle_basename()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function strrstr()\par}
{\s5\f1\fs20\ql\sb50\sa50 static const char* strrstr ( const char* s, const char* r )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell  strlen(), strstr()\cell\cell\row
Called by:\cell bundle_basename()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function vfprintf_maybe_filtered()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void vfprintf_maybe_filtered ( struct ui_file* stream, const char* format, va_list args, int filter )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell utils.c\cell\cell\row
Calls: \cell do_cleanups()\cell utils.c\cell\row
\cell fputs_maybe_filtered()\cell utils.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell xstrvprintf()\cell utils.c\cell\row
Called by:\cell vfprintf_filtered()\cell utils.c\cell\row
\cell vprintf_filtered()\cell utils.c\cell\row
Refs Func:\cell xfree()\cell utils.c\cell\row
\intbl0
}
