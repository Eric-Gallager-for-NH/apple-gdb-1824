{\rtf\ansi
\deff0
{\fonttbl
{\f0\froman Times New Roman;}
{\f1\fmodern Courier New;}
}
{\stylesheet
{\s0\f0\fs24 Normal;}
{\s1\f0\fs40\b\sb400\sa200\keepn\keep Heading 1;}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Heading 2;}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Heading 3;}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Heading 4;}
{\s5\f1\fs20\ql\sb50\sa50 Code;}
}
{\info{\comment
 This RTF file generated by cxref (version 1.6e).
 cxref program (c) Andrew M. Bishop 1995-2014.
 Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF source.c
 CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
}}
\paperw11880\paperh16848\margl1440\margr1440\margt1440\margb1440
\sectd\plain
\s0\f0\fs24
{\s1\f0\fs40\b\sb400\sa200\keepn\keep File source.c\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Included Files\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <errno.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <unistd.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_locale.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <locale.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../gdb/signals.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/symcat.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-file.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "xm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/xm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "nm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/i386/nm-i386.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/nm-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "tm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/tm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-tdep.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-tdep.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-thread-status.h"\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_types.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <inttypes.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_vm.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/kmod.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/tm-i386-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/fopen-bin.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdlib.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbarch.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "expression.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/floatformat.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "language.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "command.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "source.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdbcmd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "command.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-out.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_regex.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "gdbtypes.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "expression.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "top.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_string.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_stat.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/stat.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <fcntl.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdbcore.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_regex.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "symfile.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "objfiles.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <uuid/uuid.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_obstack.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/obstack.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symfile.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "inlining.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <block.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sqlite3.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "annotate.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbtypes.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdbtypes.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "linespec.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../include/filenames.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/hashtab.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "completer.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "ui-out.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../readline/readline.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../readline/rlstdc.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../readline/rltypedefs.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../readline/keymaps.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../readline/tilde.h>\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Preprocessor definitions\par}
{\s5\f1\fs20\ql\sb50\sa50 #define O_BINARY 0\par}
{\s5\f1\fs20\ql\sb50\sa50 #define OPEN_MODE\par}
{\s5\f1\fs20\ql\sb50\sa50 #define FDOPEN_MODE FOPEN_RB\par}
{\s5\f1\fs20\ql\sb50\sa50 #define cdir_len 5\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Variables\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable source_path\par}
{\s5\f1\fs20\ql\sb50\sa50 char* source_path\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell ada-exp.c\cell\cell\row
\cell ada-lang.c\cell\cell\row
\cell ada-typeprint.c\cell\cell\row
\cell ada-valprint.c\cell\cell\row
\cell arch-utils.c\cell\cell\row
\cell ax-gdb.c\cell\cell\row
\cell ax-general.c\cell\cell\row
\cell bcache.c\cell\cell\row
\cell bfd-target.c\cell\cell\row
\cell block.c\cell\cell\row
\cell blockframe.c\cell\cell\row
\cell breakpoint.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell c-exp.c\cell\cell\row
\cell c-lang.c\cell\cell\row
\cell c-typeprint.c\cell\cell\row
\cell c-valprint.c\cell\cell\row
\cell charset.c\cell\cell\row
\cell cli-out.c\cell\cell\row
\cell coff-pe-read.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell complaints.c\cell\cell\row
\cell completer.c\cell\cell\row
\cell corefile.c\cell\cell\row
\cell cp-abi.c\cell\cell\row
\cell cp-namespace.c\cell\cell\row
\cell cp-support.c\cell\cell\row
\cell cp-valprint.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell demangle.c\cell\cell\row
\cell dictionary.c\cell\cell\row
\cell disasm.c\cell\cell\row
\cell doublest.c\cell\cell\row
\cell dummy-frame.c\cell\cell\row
\cell dwarf2-frame.c\cell\cell\row
\cell dwarf2expr.c\cell\cell\row
\cell dwarf2loc.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell environ.c\cell\cell\row
\cell eval.c\cell\cell\row
\cell event-loop.c\cell\cell\row
\cell event-top.c\cell\cell\row
\cell expprint.c\cell\cell\row
\cell f-exp.c\cell\cell\row
\cell f-lang.c\cell\cell\row
\cell f-typeprint.c\cell\cell\row
\cell f-valprint.c\cell\cell\row
\cell findvar.c\cell\cell\row
\cell frame-base.c\cell\cell\row
\cell frame-unwind.c\cell\cell\row
\cell frame.c\cell\cell\row
\cell gdbarch.c\cell\cell\row
\cell gdbtypes.c\cell\cell\row
\cell gnu-v2-abi.c\cell\cell\row
\cell gnu-v3-abi.c\cell\cell\row
\cell hpacc-abi.c\cell\cell\row
\cell inf-loop.c\cell\cell\row
\cell infcall.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell inflow.c\cell\cell\row
\cell infrun.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell interps.c\cell\cell\row
\cell jv-exp.c\cell\cell\row
\cell jv-lang.c\cell\cell\row
\cell jv-typeprint.c\cell\cell\row
\cell jv-valprint.c\cell\cell\row
\cell kod-cisco.c\cell\cell\row
\cell kod.c\cell\cell\row
\cell language.c\cell\cell\row
\cell linespec.c\cell\cell\row
\cell m2-exp.c\cell\cell\row
\cell m2-lang.c\cell\cell\row
\cell m2-typeprint.c\cell\cell\row
\cell m2-valprint.c\cell\cell\row
\cell macrocmd.c\cell\cell\row
\cell macroexp.c\cell\cell\row
\cell macroscope.c\cell\cell\row
\cell macrotab.c\cell\cell\row
\cell main.c\cell\cell\row
\cell maint.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell mem-break.c\cell\cell\row
\cell memattr.c\cell\cell\row
\cell minsyms.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objc-exp.c\cell\cell\row
\cell objc-lang.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell observer.c\cell\cell\row
\cell osabi.c\cell\cell\row
\cell p-exp.c\cell\cell\row
\cell p-lang.c\cell\cell\row
\cell p-typeprint.c\cell\cell\row
\cell p-valprint.c\cell\cell\row
\cell parse.c\cell\cell\row
\cell printcmd.c\cell\cell\row
\cell regcache.c\cell\cell\row
\cell reggroups.c\cell\cell\row
\cell remote-fileio.c\cell\cell\row
\cell remote.c\cell\cell\row
\cell scm-exp.c\cell\cell\row
\cell scm-lang.c\cell\cell\row
\cell scm-valprint.c\cell\cell\row
\cell sentinel-frame.c\cell\cell\row
\cell ser-base.c\cell\cell\row
\cell ser-unix.c\cell\cell\row
\cell serial.c\cell\cell\row
\cell solib-null.c\cell\cell\row
\cell solib.c\cell\cell\row
\cell source.c\cell\cell\row
\cell stabsread.c\cell\cell\row
\cell stack.c\cell\cell\row
\cell std-regs.c\cell\cell\row
\cell symfile-mem.c\cell\cell\row
\cell symfile.c\cell\cell\row
\cell symmisc.c\cell\cell\row
\cell symtab.c\cell\cell\row
\cell target/target.c\cell\cell\row
\cell target/x86-shared-tdep.c\cell\cell\row
\cell thread.c\cell\cell\row
\cell top.c\cell\cell\row
\cell tracepoint.c\cell\cell\row
\cell trad-frame.c\cell\cell\row
\cell tramp-frame.c\cell\cell\row
\cell typeprint.c\cell\cell\row
\cell ui-file.c\cell\cell\row
\cell ui-out.c\cell\cell\row
\cell user-regs.c\cell\cell\row
\cell utils.c\cell\cell\row
\cell valarith.c\cell\cell\row
\cell valops.c\cell\cell\row
\cell valprint.c\cell\cell\row
\cell value.c\cell\cell\row
\cell varobj.c\cell\cell\row
\cell wrapper.c\cell\cell\row
Used in:\cell directory_command()\cell source.c\cell\row
\cell find_and_open_source()\cell source.c\cell\row
\cell init_source_path()\cell source.c\cell\row
\cell show_directories()\cell source.c\cell\row
\cell source_full_path_of()\cell source.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable lines_to_list\par}
{\s5\f1\fs20\ql\sb50\sa50 int lines_to_list\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell source.c\cell\cell\row
Used in:\cell _initialize_source()\cell source.c\cell\row
\cell forward_search_command()\cell source.c\cell\row
\cell get_lines_to_list()\cell source.c\cell\row
\cell reverse_search_command()\cell source.c\cell\row
\cell select_source_symtab()\cell source.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable current_source_symtab\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct symtab* current_source_symtab\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_source()\cell\cell\row
\cell clear_current_source_symtab_and_line()\cell\cell\row
\cell forward_search_command()\cell\cell\row
\cell get_current_source_symtab_and_line()\cell\cell\row
\cell identify_source_line()\cell\cell\row
\cell line_info()\cell\cell\row
\cell print_source_lines_base()\cell\cell\row
\cell reverse_search_command()\cell\cell\row
\cell select_source_symtab()\cell\cell\row
\cell set_current_source_symtab_and_line()\cell\cell\row
\cell set_default_source_symtab_and_line()\cell\cell\row
\cell source_info()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable current_source_line\par}
{\s5\f1\fs20\ql\sb50\sa50 static int current_source_line\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell clear_current_source_symtab_and_line()\cell\cell\row
\cell forward_search_command()\cell\cell\row
\cell get_current_source_symtab_and_line()\cell\cell\row
\cell identify_source_line()\cell\cell\row
\cell print_source_lines_base()\cell\cell\row
\cell reverse_search_command()\cell\cell\row
\cell select_source_symtab()\cell\cell\row
\cell set_current_source_symtab_and_line()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable pathname_substitutions\par}
{\s5\f1\fs20\ql\sb50\sa50 static char* pathname_substitutions\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_source()\cell\cell\row
\cell set_pathname_substitution()\cell\cell\row
\cell show_pathname_substitutions()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable pathname_substitutions_argv\par}
{\s5\f1\fs20\ql\sb50\sa50 static char** pathname_substitutions_argv\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell add_one_pathname_substitution()\cell\cell\row
\cell open_source_file_fullpath()\cell\cell\row
\cell set_pathname_substitution()\cell\cell\row
\cell show_pathname_substitutions()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable last_line_listed\par}
{\s5\f1\fs20\ql\sb50\sa50 static int last_line_listed\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell forward_search_command()\cell\cell\row
\cell identify_source_line()\cell\cell\row
\cell line_info()\cell\cell\row
\cell print_source_lines_base()\cell\cell\row
\cell reverse_search_command()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable first_line_listed\par}
{\s5\f1\fs20\ql\sb50\sa50 static int first_line_listed\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell get_first_line_listed()\cell\cell\row
\cell identify_source_line()\cell\cell\row
\cell print_source_lines_base()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable last_source_visited\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct symtab* last_source_visited\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell directory_command()\cell\cell\row
\cell init_last_source_visited()\cell\cell\row
\cell print_source_lines_base()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable last_source_error\par}
{\s5\f1\fs20\ql\sb50\sa50 static int last_source_error\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell print_source_lines_base()\cell\cell\row
\cell set_pathname_substitution()\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Functions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function _initialize_source()\par}
{\s5\f1\fs20\ql\sb50\sa50 void _initialize_source ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell source.c\cell\cell\row
Calls: \cell init_source_path()\cell source.c\cell\row
\cell re_set_syntax()\cell utils.c\cell\row
\cell  add_cmd(), add_com(), add_com_alias(), add_info(), add_setshow_integer_cmd(), add_setshow_string_cmd(), set_cmd_completer()\cell\cell\row
Refs Func:\cell directory_command()\cell source.c\cell\row
\cell filename_completer()\cell completer.c\cell\row
\cell forward_search_command()\cell source.c\cell\row
\cell line_info()\cell source.c\cell\row
\cell reverse_search_command()\cell source.c\cell\row
\cell set_pathname_substitution()\cell source.c\cell\row
\cell show_directories()\cell source.c\cell\row
\cell show_lines_to_list()\cell source.c\cell\row
\cell show_pathname_substitutions()\cell source.c\cell\row
\cell source_info()\cell source.c\cell\row
Refs Var:\cell current_source_symtab\cell source.c\cell\row
\cell dbx_commands\cell main.c\cell\row
\cell lines_to_list\cell source.c\cell\row
\cell pathname_substitutions\cell source.c\cell\row
\cell xdb_commands\cell main.c\cell\row
\cell  cmdlist, setlist, showlist\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function add_one_pathname_substitution()\par}
{\s5\f1\fs20\ql\sb50\sa50 void add_one_pathname_substitution ( const char* oldpath, const char* newpath )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell source.h\cell\cell\row
Calls: \cell xmalloc()\cell utils.c\cell\row
\cell xrealloc()\cell utils.c\cell\row
\cell  strcmp(), xstrdup()\cell\cell\row
Refs Var:\cell pathname_substitutions_argv\cell source.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function add_path()\par}
{\s5\f1\fs20\ql\sb50\sa50 void add_path ( const char* dirname, char** which_path, int parse_separators )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
\cell fprintf_unfiltered()\cell utils.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell print_sys_errmsg()\cell utils.c\cell\row
\cell savestring()\cell utils.c\cell\row
\cell warning()\cell utils.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell  __builtin___strcpy_chk(), __builtin_object_size(), __error(), __inline_strcpy_chk(), concat(), stat(), strchr(), strlen(), strncmp(), tilde_expand(), xstrdup()\cell\cell\row
Called by:\cell mod_path()\cell source.c\cell\row
Refs Func:\cell xfree()\cell utils.c\cell\row
Refs Var:\cell current_directory\cell top.c\cell\row
\cell gdb_stderr\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function clear_current_source_symtab_and_line()\par}
{\s5\f1\fs20\ql\sb50\sa50 void clear_current_source_symtab_and_line ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell source.h\cell\cell\row
Called by:\cell clear_symtab_users()\cell symfile.c\cell\row
Refs Var:\cell current_source_line\cell source.c\cell\row
\cell current_source_symtab\cell source.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function convert_sal()\par}
{\s5\f1\fs20\ql\sb50\sa50 void convert_sal ( struct symtab_and_line* sal )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell source.h\cell\cell\row
Calls: \cell find_source_lines()\cell source.c\cell\row
\cell open_source_file()\cell source.c\cell\row
\cell  close()\cell\cell\row
Called by:\cell find_pc_sect_line()\cell symtab.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function directory_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 void directory_command ( const char* dirname, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell dont_repeat()\cell top.c\cell\row
\cell forget_cached_source_info()\cell source.c\cell\row
\cell init_source_path()\cell source.c\cell\row
\cell mod_path()\cell source.c\cell\row
\cell query()\cell utils.c\cell\row
\cell show_directories()\cell source.c\cell\row
\cell xfree()\cell utils.c\cell\row
Used in:\cell _initialize_source()\cell source.c\cell\row
\cell captured_main()\cell main.c\cell\row
Refs Var:\cell last_source_visited\cell source.c\cell\row
\cell source_path\cell source.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function find_and_open_source()\par}
{\s5\f1\fs20\ql\sb50\sa50 int find_and_open_source ( struct objfile* objfile, const char* filename, const char* dirname, char** fullname )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell source.h\cell\cell\row
Calls: \cell open_source_file_fullpath()\cell source.c\cell\row
\cell openp()\cell source.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell  __builtin___strcat_chk(), __builtin___strcpy_chk(), __builtin___strncpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_strcat_chk(), __inline_strcpy_chk(), __inline_strncpy_chk(), lbasename(), open(), strlen(), strstr(), xstrdup()\cell\cell\row
Called by:\cell open_source_file()\cell source.c\cell\row
\cell psymtab_to_fullname()\cell source.c\cell\row
\cell symtab_to_fullname()\cell source.c\cell\row
Refs Var:\cell source_path\cell source.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function find_source_lines()\par}
{\s5\f1\fs20\ql\sb50\sa50 void find_source_lines ( struct symtab* s, int desc )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell source.h\cell\cell\row
Calls: \cell do_cleanups()\cell utils.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell myread()\cell utils.c\cell\row
\cell perror_with_name()\cell utils.c\cell\row
\cell warning()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell xrealloc()\cell utils.c\cell\row
\cell  bfd_get_mtime(), fstat()\cell\cell\row
Called by:\cell convert_sal()\cell source.c\cell\row
\cell find_line_pc_range()\cell symtab.c\cell\row
\cell forward_search_command()\cell source.c\cell\row
\cell get_filename_and_charpos()\cell source.c\cell\row
\cell print_source_lines_base()\cell source.c\cell\row
\cell reverse_search_command()\cell source.c\cell\row
Refs Func:\cell xfree()\cell utils.c\cell\row
Refs Var:\cell  exec_bfd\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function forget_cached_source_info()\par}
{\s5\f1\fs20\ql\sb50\sa50 void forget_cached_source_info ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell symtab.h\cell\cell\row
Calls: \cell objfile_get_first()\cell objfiles.c\cell\row
\cell objfile_get_next()\cell objfiles.c\cell\row
\cell psymtab_get_first()\cell objfiles.c\cell\row
\cell psymtab_get_next()\cell objfiles.c\cell\row
\cell symtab_get_first()\cell objfiles.c\cell\row
\cell symtab_get_next()\cell objfiles.c\cell\row
\cell xfree()\cell utils.c\cell\row
Called by:\cell directory_command()\cell source.c\cell\row
\cell init_source_path()\cell source.c\cell\row
\cell set_pathname_substitution()\cell source.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function get_current_source_symtab_and_line()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct symtab_and_line get_current_source_symtab_and_line ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell source.h\cell\cell\row
Called by:\cell backtrace_command_1()\cell stack.c\cell\row
\cell decode_line_spec()\cell symtab.c\cell\row
\cell default_macro_scope()\cell macroscope.c\cell\row
\cell in_eval_c()\cell scm-lang.c\cell\row
\cell initialize_defaults()\cell linespec.c\cell\row
\cell parse_breakpoint_sals()\cell breakpoint.c\cell\row
Refs Var:\cell current_source_line\cell source.c\cell\row
\cell current_source_symtab\cell source.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function get_first_line_listed()\par}
{\s5\f1\fs20\ql\sb50\sa50 int get_first_line_listed ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell source.h\cell\cell\row
Refs Var:\cell first_line_listed\cell source.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function get_lines_to_list()\par}
{\s5\f1\fs20\ql\sb50\sa50 int get_lines_to_list ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell source.h\cell\cell\row
Called by:\cell set_current_sal_from_frame()\cell stack.c\cell\row
Refs Var:\cell lines_to_list\cell source.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function identify_source_line()\par}
{\s5\f1\fs20\ql\sb50\sa50 int identify_source_line ( struct symtab* s, int line, int mid_statement, CORE_ADDR pc )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell symtab.h\cell\cell\row
Calls: \cell get_filename_and_charpos()\cell source.c\cell\row
\cell  annotate_source()\cell\cell\row
Called by:\cell line_info()\cell source.c\cell\row
\cell print_frame_info()\cell stack.c\cell\row
\cell step_1_inlining()\cell infcmd.c\cell\row
\cell step_once()\cell infcmd.c\cell\row
Refs Var:\cell current_source_line\cell source.c\cell\row
\cell current_source_symtab\cell source.c\cell\row
\cell first_line_listed\cell source.c\cell\row
\cell last_line_listed\cell source.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function init_last_source_visited()\par}
{\s5\f1\fs20\ql\sb50\sa50 void init_last_source_visited ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Refs Var:\cell last_source_visited\cell source.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function init_source_path()\par}
{\s5\f1\fs20\ql\sb50\sa50 void init_source_path ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell forget_cached_source_info()\cell source.c\cell\row
\cell  __builtin___snprintf_chk(), __builtin_object_size(), xstrdup()\cell\cell\row
Called by:\cell _initialize_source()\cell source.c\cell\row
\cell directory_command()\cell source.c\cell\row
Refs Var:\cell source_path\cell source.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function mod_path()\par}
{\s5\f1\fs20\ql\sb50\sa50 void mod_path ( const char* dirname, char** which_path )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell add_path()\cell source.c\cell\row
Called by:\cell directory_command()\cell source.c\cell\row
\cell path_command()\cell infcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function open_source_file()\par}
{\s5\f1\fs20\ql\sb50\sa50 int open_source_file ( struct symtab* s )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell source.h\cell\cell\row
Calls: \cell find_and_open_source()\cell source.c\cell\row
Called by:\cell convert_sal()\cell source.c\cell\row
\cell find_line_pc_range()\cell symtab.c\cell\row
\cell forward_search_command()\cell source.c\cell\row
\cell get_filename_and_charpos()\cell source.c\cell\row
\cell print_source_lines_base()\cell source.c\cell\row
\cell reverse_search_command()\cell source.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function open_source_file_fullpath()\par}
{\s5\f1\fs20\ql\sb50\sa50 int open_source_file_fullpath ( const char* dirname, const char* filename, char** fullname )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell source.h\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
\cell gdb_check_fatal()\cell utils.c\cell\row
\cell openp()\cell source.c\cell\row
\cell  __builtin___memmove_chk(), __builtin___snprintf_chk(), __builtin_alloca(), __builtin_object_size(), __inline_memmove_chk(), strlen(), strncmp(), strstr()\cell\cell\row
Called by:\cell find_and_open_source()\cell source.c\cell\row
Refs Var:\cell pathname_substitutions_argv\cell source.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function openp()\par}
{\s5\f1\fs20\ql\sb50\sa50 int openp ( const char* path, int opts, const char* string, int mode, int prot, char** filename_opened )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell is_regular_file()\cell source.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell xfullpath()\cell utils.c\cell\row
\cell  __builtin___strcat_chk(), __builtin___strcpy_chk(), __builtin___strncpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_strcat_chk(), __inline_strcpy_chk(), __inline_strncpy_chk(), concat(), file_exists_p(), open(), strchr(), strlen()\cell\cell\row
Called by:\cell find_and_open_source()\cell source.c\cell\row
\cell open_source_file_fullpath()\cell source.c\cell\row
\cell solib_open()\cell solib.c\cell\row
\cell source_full_path_of()\cell source.c\cell\row
\cell symfile_bfd_open()\cell symfile.c\cell\row
Refs Var:\cell current_directory\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function print_source_lines()\par}
{\s5\f1\fs20\ql\sb50\sa50 void print_source_lines ( struct symtab* s, int line, int nlines, int noerror )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell symtab.h\cell\cell\row
Calls: \cell print_source_lines_base()\cell source.c\cell\row
Called by:\cell do_mixed_source_and_assembly()\cell disasm.c\cell\row
\cell forward_search_command()\cell source.c\cell\row
\cell print_frame_info()\cell stack.c\cell\row
\cell reverse_search_command()\cell source.c\cell\row
\cell step_1_inlining()\cell infcmd.c\cell\row
\cell step_once()\cell infcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function psymtab_to_fullname()\par}
{\s5\f1\fs20\ql\sb50\sa50 char* psymtab_to_fullname ( struct partial_symtab* ps )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell source.h\cell\cell\row
Calls: \cell find_and_open_source()\cell source.c\cell\row
\cell  close()\cell\cell\row
Called by:\cell lookup_partial_symtab_all()\cell symtab.c\cell\row
\cell sources_info()\cell symtab.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function select_source_symtab()\par}
{\s5\f1\fs20\ql\sb50\sa50 void select_source_symtab ( struct symtab* s )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell symtab.h\cell\cell\row
Calls: \cell decode_line_spec()\cell symtab.c\cell\row
\cell error()\cell utils.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell lookup_symbol()\cell symtab.c\cell\row
\cell main_name()\cell symtab.c\cell\row
\cell objfile_get_first()\cell objfiles.c\cell\row
\cell objfile_get_next()\cell objfiles.c\cell\row
\cell psymtab_get_first()\cell objfiles.c\cell\row
\cell psymtab_get_next()\cell objfiles.c\cell\row
\cell psymtab_to_symtab()\cell symfile.c\cell\row
\cell symtab_get_first()\cell objfiles.c\cell\row
\cell symtab_get_next()\cell objfiles.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell  strcmp(), strlen()\cell\cell\row
Called by:\cell forward_search_command()\cell source.c\cell\row
\cell reverse_search_command()\cell source.c\cell\row
\cell set_default_source_symtab_and_line()\cell source.c\cell\row
Refs Var:\cell current_source_line\cell source.c\cell\row
\cell current_source_symtab\cell source.c\cell\row
\cell lines_to_list\cell source.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function set_current_source_symtab_and_line()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct symtab_and_line set_current_source_symtab_and_line ( const struct symtab_and_line* sal )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell source.h\cell\cell\row
Called by:\cell backtrace_command_1()\cell stack.c\cell\row
\cell set_current_sal_from_frame()\cell stack.c\cell\row
Refs Var:\cell current_source_line\cell source.c\cell\row
\cell current_source_symtab\cell source.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function set_default_source_symtab_and_line()\par}
{\s5\f1\fs20\ql\sb50\sa50 void set_default_source_symtab_and_line ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell source.h\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
\cell have_full_symbols()\cell objfiles.c\cell\row
\cell have_partial_symbols()\cell objfiles.c\cell\row
\cell select_source_symtab()\cell source.c\cell\row
Called by:\cell decode_all_digits()\cell linespec.c\cell\row
\cell decode_all_digits_exhaustive()\cell linespec.c\cell\row
Refs Var:\cell current_source_symtab\cell source.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function source_full_path_of()\par}
{\s5\f1\fs20\ql\sb50\sa50 int source_full_path_of ( char* filename, char** full_pathname )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell defs.h\cell\cell\row
Calls: \cell openp()\cell source.c\cell\row
\cell  close()\cell\cell\row
Called by:\cell attach_command()\cell infcmd.c\cell\row
\cell lookup_partial_symtab()\cell symtab.c\cell\row
Refs Var:\cell source_path\cell source.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function symtab_to_fullname()\par}
{\s5\f1\fs20\ql\sb50\sa50 char* symtab_to_fullname ( struct symtab* s )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell source.h\cell\cell\row
Calls: \cell find_and_open_source()\cell source.c\cell\row
\cell  close()\cell\cell\row
Called by:\cell lookup_symtab()\cell symtab.c\cell\row
\cell lookup_symtab_all()\cell symtab.c\cell\row
\cell print_frame()\cell stack.c\cell\row
\cell print_inlined_frame()\cell inlining.c\cell\row
\cell sources_info()\cell symtab.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function forward_search_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void forward_search_command ( const char* regex, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell source.c\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
\cell find_source_lines()\cell source.c\cell\row
\cell lookup_internalvar()\cell value.c\cell\row
\cell open_source_file()\cell source.c\cell\row
\cell perror_with_name()\cell utils.c\cell\row
\cell print_source_lines()\cell source.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell re_comp()\cell utils.c\cell\row
\cell re_exec()\cell utils.c\cell\row
\cell select_source_symtab()\cell source.c\cell\row
\cell set_internalvar()\cell value.c\cell\row
\cell value_from_longest()\cell value.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell xrealloc()\cell utils.c\cell\row
\cell  clearerr(), close(), fclose(), fdopen(), getc(), lseek()\cell\cell\row
Used in:\cell _initialize_source()\cell source.c\cell\row
Refs Var:\cell builtin_type_int\cell gdbtypes.c\cell\row
\cell current_source_line\cell source.c\cell\row
\cell current_source_symtab\cell source.c\cell\row
\cell last_line_listed\cell source.c\cell\row
\cell lines_to_list\cell source.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function get_filename_and_charpos()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int get_filename_and_charpos ( struct symtab* s, char** fullname )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell source.c\cell\cell\row
Calls: \cell find_source_lines()\cell source.c\cell\row
\cell open_source_file()\cell source.c\cell\row
\cell  close()\cell\cell\row
Called by:\cell identify_source_line()\cell source.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function is_regular_file()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int is_regular_file ( const char* name )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell  __error(), stat()\cell\cell\row
Called by:\cell openp()\cell source.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function line_info()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void line_info ( const char* arg, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell source.c\cell\cell\row
Calls: \cell decode_line_spec_1()\cell breakpoint.c\cell\row
\cell dont_repeat()\cell top.c\cell\row
\cell find_line_pc_range()\cell symtab.c\cell\row
\cell identify_source_line()\cell source.c\cell\row
\cell init_sal()\cell symtab.c\cell\row
\cell print_address()\cell printcmd.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell set_next_address()\cell printcmd.c\cell\row
\cell wrap_here()\cell utils.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
Used in:\cell _initialize_source()\cell source.c\cell\row
Refs Var:\cell annotation_level\cell stack.c\cell\row
\cell current_source_symtab\cell source.c\cell\row
\cell gdb_stdout\cell main.c\cell\row
\cell last_line_listed\cell source.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function print_source_lines_base()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void print_source_lines_base ( struct symtab* s, int line, int nlines, int noerror )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell source.c\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
\cell find_source_lines()\cell source.c\cell\row
\cell open_source_file()\cell source.c\cell\row
\cell perror_with_name()\cell utils.c\cell\row
\cell print_sys_errmsg()\cell utils.c\cell\row
\cell ui_out_field_int()\cell ui-out.c\cell\row
\cell ui_out_field_string()\cell ui-out.c\cell\row
\cell ui_out_test_flags()\cell ui-out.c\cell\row
\cell ui_out_text()\cell ui-out.c\cell\row
\cell ui_out_text_fmt()\cell ui-out.c\cell\row
\cell  __builtin___snprintf_chk(), __builtin_alloca(), __builtin_object_size(), __error(), clearerr(), close(), fclose(), fdopen(), fgetc(), lseek(), print_source_lines_hook(), strlen()\cell\cell\row
Called by:\cell print_source_lines()\cell source.c\cell\row
Refs Var:\cell current_source_line\cell source.c\cell\row
\cell current_source_symtab\cell source.c\cell\row
\cell first_line_listed\cell source.c\cell\row
\cell last_line_listed\cell source.c\cell\row
\cell last_source_error\cell source.c\cell\row
\cell last_source_visited\cell source.c\cell\row
\cell print_source_lines_hook\cell top.c\cell\row
\cell uiout\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function reverse_search_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void reverse_search_command ( const char* regex, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell source.c\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
\cell find_source_lines()\cell source.c\cell\row
\cell lookup_internalvar()\cell value.c\cell\row
\cell open_source_file()\cell source.c\cell\row
\cell perror_with_name()\cell utils.c\cell\row
\cell print_source_lines()\cell source.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell re_comp()\cell utils.c\cell\row
\cell re_exec()\cell utils.c\cell\row
\cell select_source_symtab()\cell source.c\cell\row
\cell set_internalvar()\cell value.c\cell\row
\cell value_from_longest()\cell value.c\cell\row
\cell  clearerr(), close(), fclose(), fdopen(), fseek(), getc(), lseek()\cell\cell\row
Used in:\cell _initialize_source()\cell source.c\cell\row
Refs Var:\cell builtin_type_int\cell gdbtypes.c\cell\row
\cell current_source_line\cell source.c\cell\row
\cell current_source_symtab\cell source.c\cell\row
\cell last_line_listed\cell source.c\cell\row
\cell lines_to_list\cell source.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_pathname_substitution()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void set_pathname_substitution ( const char* args, int from_tty, struct cmd_list_element* c )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell forget_cached_source_info()\cell source.c\cell\row
\cell warning()\cell utils.c\cell\row
\cell  buildargv(), freeargv()\cell\cell\row
Used in:\cell _initialize_source()\cell source.c\cell\row
Refs Var:\cell last_source_error\cell source.c\cell\row
\cell pathname_substitutions\cell source.c\cell\row
\cell pathname_substitutions_argv\cell source.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_directories()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_directories ( const char* ignore, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell source.c\cell\cell\row
Calls: \cell puts_filtered()\cell utils.c\cell\row
Called by:\cell directory_command()\cell source.c\cell\row
Used in:\cell _initialize_source()\cell source.c\cell\row
Refs Var:\cell source_path\cell source.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_lines_to_list()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_lines_to_list ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell fprintf_filtered()\cell utils.c\cell\row
Used in:\cell _initialize_source()\cell source.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_pathname_substitutions()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_pathname_substitutions ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell fprintf_filtered()\cell utils.c\cell\row
Used in:\cell _initialize_source()\cell source.c\cell\row
Refs Var:\cell pathname_substitutions\cell source.c\cell\row
\cell pathname_substitutions_argv\cell source.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function source_info()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void source_info ( const char* ignore, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell source.c\cell\cell\row
Calls: \cell language_str()\cell language.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
Used in:\cell _initialize_source()\cell source.c\cell\row
Refs Var:\cell current_source_symtab\cell source.c\cell\row
\intbl0
}
