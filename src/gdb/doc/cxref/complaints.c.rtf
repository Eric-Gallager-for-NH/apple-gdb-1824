{\rtf\ansi
\deff0
{\fonttbl
{\f0\froman Times New Roman;}
{\f1\fmodern Courier New;}
}
{\stylesheet
{\s0\f0\fs24 Normal;}
{\s1\f0\fs40\b\sb400\sa200\keepn\keep Heading 1;}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Heading 2;}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Heading 3;}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Heading 4;}
{\s5\f1\fs20\ql\sb50\sa50 Code;}
}
{\info{\comment
 This RTF file generated by cxref (version 1.6e).
 cxref program (c) Andrew M. Bishop 1995-2014.
 Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF complaints.c
 CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
}}
\paperw11880\paperh16848\margl1440\margr1440\margt1440\margb1440
\sectd\plain
\s0\f0\fs24
{\s1\f0\fs40\b\sb400\sa200\keepn\keep File complaints.c\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Refs Var:\cell complaint_sentinel\cell complaints.c\cell\row
\cell symfile_complaint_book\cell complaints.c\cell\row
\cell symfile_explanations\cell complaints.c\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Included Files\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <errno.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <unistd.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_locale.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <locale.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../gdb/signals.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/symcat.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-file.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "xm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/xm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "nm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/i386/nm-i386.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/nm-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "tm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/tm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-tdep.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-tdep.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-thread-status.h"\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_types.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <inttypes.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_vm.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/kmod.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/tm-i386-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/fopen-bin.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdlib.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbarch.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "complaints.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_assert.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "command.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdbcmd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "command.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-out.h"\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Type definitions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type enum complaint_series\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 enum complaint_series}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 ISOLATED_MESSAGE;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 FIRST_MESSAGE;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 SHORT_FIRST_MESSAGE;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 SUBSEQUENT_MESSAGE;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct complain\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct complain}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 const char* file;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int line;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 const char* fmt;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int counter;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct complain* next;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct explanation\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct explanation}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 const char* prefix;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 const char* postfix;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct complaints\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct complaints}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct complain* root;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int series;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 const struct explanation* explanation;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Variables\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable symfile_complaints\par}
{\s5\f1\fs20\ql\sb50\sa50 struct complaints* symfile_complaints\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell buildsym.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell complaints.c\cell\cell\row
\cell cp-support.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell dwarf2-frame.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell gdbtypes.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell macroscope.c\cell\cell\row
\cell macrotab.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell objc-lang.c\cell\cell\row
\cell stabsread.c\cell\cell\row
\cell symfile.c\cell\cell\row
\cell symtab.c\cell\cell\row
Used in:\cell add_partial_enumeration()\cell dwarf2read.c\cell\row
\cell alloc_utype()\cell dwarfread.c\cell\row
\cell attach_fields_to_type()\cell stabsread.c\cell\row
\cell bad_array_element_type_complaint()\cell dwarfread.c\cell\row
\cell bad_die_ref_complaint()\cell dwarfread.c\cell\row
\cell bad_rfd_entry_complaint()\cell mdebugread.c\cell\row
\cell bad_tag_guess_complaint()\cell mdebugread.c\cell\row
\cell basic_lookup_transparent_type()\cell symtab.c\cell\row
\cell basic_type_complaint()\cell mdebugread.c\cell\row
\cell basicdieinfo()\cell dwarfread.c\cell\row
\cell check_cu_functions()\cell dwarf2read.c\cell\row
\cell check_for_redefinition()\cell macrotab.c\cell\row
\cell cleanup_undefined_types()\cell stabsread.c\cell\row
\cell coff_symtab_read()\cell coffread.c\cell\row
\cell common_block_end()\cell stabsread.c\cell\row
\cell common_block_start()\cell stabsread.c\cell\row
\cell complain_about_struct_wipeout()\cell stabsread.c\cell\row
\cell completedieinfo()\cell dwarfread.c\cell\row
\cell consume_improper_spaces()\cell dwarf2read.c\cell\row
\cell cp_lookup_rtti_type()\cell cp-support.c\cell\row
\cell cross_ref()\cell mdebugread.c\cell\row
\cell dbx_lookup_type()\cell stabsread.c\cell\row
\cell dbx_next_symbol_text()\cell dbxread.c\cell\row
\cell decode_base_type()\cell coffread.c\cell\row
\cell decode_frame_entry()\cell dwarf2-frame.c\cell\row
\cell decode_fund_type()\cell dwarfread.c\cell\row
\cell decode_locdesc()\cell dwarf2read.c\cell\row
\cell decode_modified_type()\cell dwarfread.c\cell\row
\cell decode_subscript_data_item()\cell dwarfread.c\cell\row
\cell decode_type()\cell coffread.c\cell\row
\cell define_symbol()\cell stabsread.c\cell\row
\cell demangled_name_complaint()\cell cp-support.c\cell\row
\cell dup_user_type_definition_complaint()\cell dwarfread.c\cell\row
\cell dwarf2_add_member_fn()\cell dwarf2read.c\cell\row
\cell dwarf2_attach_fields_to_type()\cell dwarf2read.c\cell\row
\cell dwarf2_complex_location_expr_complaint()\cell dwarf2read.c\cell\row
\cell dwarf2_const_value()\cell dwarf2read.c\cell\row
\cell dwarf2_const_value_length_mismatch_complaint()\cell dwarf2read.c\cell\row
\cell dwarf2_get_attr_constant_value()\cell dwarf2read.c\cell\row
\cell dwarf2_get_pc_bounds()\cell dwarf2read.c\cell\row
\cell dwarf2_get_ref_die_offset()\cell dwarf2read.c\cell\row
\cell dwarf2_invalid_attrib_class_complaint()\cell dwarf2read.c\cell\row
\cell dwarf2_macro_malformed_definition_complaint()\cell dwarf2read.c\cell\row
\cell dwarf2_macros_too_long_complaint()\cell dwarf2read.c\cell\row
\cell dwarf2_statement_list_fits_in_line_number_section_complaint()\cell dwarf2read.c\cell\row
\cell dwarf2_symbol_mark_computed()\cell dwarf2read.c\cell\row
\cell dwarf_decode_line_header()\cell dwarf2read.c\cell\row
\cell dwarf_decode_lines()\cell dwarf2read.c\cell\row
\cell dwarf_decode_macros()\cell dwarf2read.c\cell\row
\cell dwarf_read_array_type()\cell dwarfread.c\cell\row
\cell elf_symtab_read()\cell elfread.c\cell\row
\cell elfstab_offset_sections()\cell elfread.c\cell\row
\cell end_symtab()\cell buildsym.c\cell\row
\cell enter_linenos()\cell coffread.c\cell\row
\cell error_type()\cell stabsread.c\cell\row
\cell execute_cfa_program()\cell dwarf2-frame.c\cell\row
\cell finish_block()\cell buildsym.c\cell\row
\cell function_outside_compilation_unit_complaint()\cell mdebugread.c\cell\row
\cell index_complaint()\cell mdebugread.c\cell\row
\cell inlined_function_add_function_names()\cell inlining.c\cell\row
\cell invalid_cpp_abbrev_complaint()\cell stabsread.c\cell\row
\cell lbrac_mismatch_complaint()\cell dbxread.c\cell\row
\cell load_partial_dies()\cell dwarf2read.c\cell\row
\cell locval()\cell dwarfread.c\cell\row
\cell lookup_child_selector_nocache()\cell objc-lang.c\cell\row
\cell lookup_psymbol_from_namestring()\cell dbxread.c\cell\row
\cell lookup_symbol_aux_psymtabs()\cell symtab.c\cell\row
\cell macro_include()\cell macrotab.c\cell\row
\cell macro_undef()\cell macrotab.c\cell\row
\cell make_blockvector()\cell buildsym.c\cell\row
\cell new_symbol()\cell dwarf2read.c\cell\row
\cell new_symfile_objfile()\cell symfile.c\cell\row
\cell parse_lines()\cell mdebugread.c\cell\row
\cell parse_partial_symbols()\cell mdebugread.c\cell\row
\cell parse_procedure()\cell mdebugread.c\cell\row
\cell parse_symbol()\cell mdebugread.c\cell\row
\cell parse_type()\cell mdebugread.c\cell\row
\cell partial_die_parent_scope()\cell dwarf2read.c\cell\row
\cell process_one_symbol()\cell dbxread.c\cell\row
\cell process_symbol_types_only()\cell stabsread.c\cell\row
\cell psymtab_to_symtab_1()\cell mdebugread.c\cell\row
\cell read_base_type()\cell dwarf2read.c\cell\row
\cell read_baseclasses()\cell stabsread.c\cell\row
\cell read_cpp_abbrev()\cell stabsread.c\cell\row
\cell read_dbx_symtab()\cell dbxread.c\cell\row
\cell read_func_scope()\cell dwarfread.c\cell\row
\cell read_initial_length()\cell dwarf2read.c\cell\row
\cell read_member_functions()\cell stabsread.c\cell\row
\cell read_ofile_symtab_from_oso()\cell dbxread.c\cell\row
\cell read_partial_die()\cell dwarf2read.c\cell\row
\cell read_range_type()\cell stabsread.c\cell\row
\cell read_structure_type()\cell dwarf2read.c\cell\row
\cell read_subrange_type()\cell dwarf2read.c\cell\row
\cell read_tag_pointer_type()\cell dwarf2read.c\cell\row
\cell read_tilde_fields()\cell stabsread.c\cell\row
\cell read_type()\cell stabsread.c\cell\row
\cell read_type_die()\cell dwarf2read.c\cell\row
\cell reg_value_complaint()\cell stabsread.c\cell\row
\cell repeated_header_complaint()\cell dbxread.c\cell\row
\cell reread_symbols_for_objfile()\cell symfile.c\cell\row
\cell rs6000_builtin_type()\cell stabsread.c\cell\row
\cell sal_macro_scope()\cell macroscope.c\cell\row
\cell scan_file_globals()\cell stabsread.c\cell\row
\cell set_namestring_1()\cell dbxread.c\cell\row
\cell skip_one_die()\cell dwarf2read.c\cell\row
\cell stabs_general_complaint()\cell stabsread.c\cell\row
\cell stabsect_read_strtab_from_oso()\cell dbxread.c\cell\row
\cell struct_type()\cell dwarfread.c\cell\row
\cell stub_noname_complaint()\cell gdbtypes.c\cell\row
\cell syms_from_objfile()\cell symfile.c\cell\row
\cell target_to_host()\cell dwarfread.c\cell\row
\cell unexpected_type_code_complaint()\cell mdebugread.c\cell\row
\cell unknown_attribute_form_complaint()\cell dwarfread.c\cell\row
\cell unknown_ext_complaint()\cell mdebugread.c\cell\row
\cell unknown_symtype_complaint()\cell dbxread.c\cell\row
\cell upgrade_type()\cell mdebugread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable complaint_sentinel\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct complain complaint_sentinel\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell complaints.c\cell\cell\row
\cell get_complaints()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable symfile_explanations\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct explanation symfile_explanations[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell complaints.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable symfile_complaint_book\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct complaints symfile_complaint_book\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell complaints.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable stop_whining\par}
{\s5\f1\fs20\ql\sb50\sa50 static unsigned int stop_whining\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_complaints()\cell\cell\row
\cell vcomplaint()\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Functions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function _initialize_complaints()\par}
{\s5\f1\fs20\ql\sb50\sa50 void _initialize_complaints ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell complaints.c\cell\cell\row
Calls: \cell  add_setshow_uinteger_cmd()\cell\cell\row
Refs Func:\cell complaints_show_value()\cell complaints.c\cell\row
Refs Var:\cell stop_whining\cell complaints.c\cell\row
\cell  setlist, showlist\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function clear_complaints()\par}
{\s5\f1\fs20\ql\sb50\sa50 void clear_complaints ( struct complaints** c, int less_verbose, int noisy )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell complaints.h\cell\cell\row
Calls: \cell fputs_unfiltered()\cell ui-file.c\cell\row
\cell get_complaints()\cell complaints.c\cell\row
\cell internal_error()\cell utils.c\cell\row
Called by:\cell new_symfile_objfile()\cell symfile.c\cell\row
\cell reread_symbols_for_objfile()\cell symfile.c\cell\row
\cell syms_from_objfile()\cell symfile.c\cell\row
Refs Var:\cell gdb_stderr\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function complaint()\par}
{\s5\f1\fs20\ql\sb50\sa50 void complaint ( struct complaints** complaints, const char* fmt, ... )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell complaints.h\cell\cell\row
Calls: \cell vcomplaint()\cell complaints.c\cell\row
\cell  __builtin_va_end(), __builtin_va_start()\cell\cell\row
Called by:\cell add_partial_enumeration()\cell dwarf2read.c\cell\row
\cell alloc_utype()\cell dwarfread.c\cell\row
\cell attach_fields_to_type()\cell stabsread.c\cell\row
\cell bad_array_element_type_complaint()\cell dwarfread.c\cell\row
\cell bad_die_ref_complaint()\cell dwarfread.c\cell\row
\cell bad_rfd_entry_complaint()\cell mdebugread.c\cell\row
\cell bad_tag_guess_complaint()\cell mdebugread.c\cell\row
\cell basic_lookup_transparent_type()\cell symtab.c\cell\row
\cell basic_type_complaint()\cell mdebugread.c\cell\row
\cell basicdieinfo()\cell dwarfread.c\cell\row
\cell check_cu_functions()\cell dwarf2read.c\cell\row
\cell check_for_redefinition()\cell macrotab.c\cell\row
\cell cleanup_undefined_types()\cell stabsread.c\cell\row
\cell coff_symtab_read()\cell coffread.c\cell\row
\cell common_block_end()\cell stabsread.c\cell\row
\cell common_block_start()\cell stabsread.c\cell\row
\cell complain_about_struct_wipeout()\cell stabsread.c\cell\row
\cell completedieinfo()\cell dwarfread.c\cell\row
\cell consume_improper_spaces()\cell dwarf2read.c\cell\row
\cell cp_lookup_rtti_type()\cell cp-support.c\cell\row
\cell cross_ref()\cell mdebugread.c\cell\row
\cell dbx_lookup_type()\cell stabsread.c\cell\row
\cell dbx_next_symbol_text()\cell dbxread.c\cell\row
\cell decode_base_type()\cell coffread.c\cell\row
\cell decode_frame_entry()\cell dwarf2-frame.c\cell\row
\cell decode_fund_type()\cell dwarfread.c\cell\row
\cell decode_locdesc()\cell dwarf2read.c\cell\row
\cell decode_modified_type()\cell dwarfread.c\cell\row
\cell decode_subscript_data_item()\cell dwarfread.c\cell\row
\cell decode_type()\cell coffread.c\cell\row
\cell define_symbol()\cell stabsread.c\cell\row
\cell demangled_name_complaint()\cell cp-support.c\cell\row
\cell dup_user_type_definition_complaint()\cell dwarfread.c\cell\row
\cell dwarf2_add_member_fn()\cell dwarf2read.c\cell\row
\cell dwarf2_attach_fields_to_type()\cell dwarf2read.c\cell\row
\cell dwarf2_complex_location_expr_complaint()\cell dwarf2read.c\cell\row
\cell dwarf2_const_value()\cell dwarf2read.c\cell\row
\cell dwarf2_const_value_length_mismatch_complaint()\cell dwarf2read.c\cell\row
\cell dwarf2_get_attr_constant_value()\cell dwarf2read.c\cell\row
\cell dwarf2_get_pc_bounds()\cell dwarf2read.c\cell\row
\cell dwarf2_get_ref_die_offset()\cell dwarf2read.c\cell\row
\cell dwarf2_invalid_attrib_class_complaint()\cell dwarf2read.c\cell\row
\cell dwarf2_macro_malformed_definition_complaint()\cell dwarf2read.c\cell\row
\cell dwarf2_macros_too_long_complaint()\cell dwarf2read.c\cell\row
\cell dwarf2_statement_list_fits_in_line_number_section_complaint()\cell dwarf2read.c\cell\row
\cell dwarf2_symbol_mark_computed()\cell dwarf2read.c\cell\row
\cell dwarf_decode_line_header()\cell dwarf2read.c\cell\row
\cell dwarf_decode_lines()\cell dwarf2read.c\cell\row
\cell dwarf_decode_macros()\cell dwarf2read.c\cell\row
\cell dwarf_read_array_type()\cell dwarfread.c\cell\row
\cell elf_symtab_read()\cell elfread.c\cell\row
\cell elfstab_offset_sections()\cell elfread.c\cell\row
\cell end_symtab()\cell buildsym.c\cell\row
\cell enter_linenos()\cell coffread.c\cell\row
\cell error_type()\cell stabsread.c\cell\row
\cell execute_cfa_program()\cell dwarf2-frame.c\cell\row
\cell finish_block()\cell buildsym.c\cell\row
\cell function_outside_compilation_unit_complaint()\cell mdebugread.c\cell\row
\cell index_complaint()\cell mdebugread.c\cell\row
\cell inlined_function_add_function_names()\cell inlining.c\cell\row
\cell invalid_cpp_abbrev_complaint()\cell stabsread.c\cell\row
\cell lbrac_mismatch_complaint()\cell dbxread.c\cell\row
\cell load_partial_dies()\cell dwarf2read.c\cell\row
\cell locval()\cell dwarfread.c\cell\row
\cell lookup_child_selector_nocache()\cell objc-lang.c\cell\row
\cell lookup_psymbol_from_namestring()\cell dbxread.c\cell\row
\cell lookup_symbol_aux_psymtabs()\cell symtab.c\cell\row
\cell macro_include()\cell macrotab.c\cell\row
\cell macro_undef()\cell macrotab.c\cell\row
\cell make_blockvector()\cell buildsym.c\cell\row
\cell new_symbol()\cell dwarf2read.c\cell\row
\cell parse_lines()\cell mdebugread.c\cell\row
\cell parse_partial_symbols()\cell mdebugread.c\cell\row
\cell parse_procedure()\cell mdebugread.c\cell\row
\cell parse_symbol()\cell mdebugread.c\cell\row
\cell parse_type()\cell mdebugread.c\cell\row
\cell partial_die_parent_scope()\cell dwarf2read.c\cell\row
\cell process_one_symbol()\cell dbxread.c\cell\row
\cell process_symbol_types_only()\cell stabsread.c\cell\row
\cell psymtab_to_symtab_1()\cell mdebugread.c\cell\row
\cell read_base_type()\cell dwarf2read.c\cell\row
\cell read_baseclasses()\cell stabsread.c\cell\row
\cell read_cpp_abbrev()\cell stabsread.c\cell\row
\cell read_dbx_symtab()\cell dbxread.c\cell\row
\cell read_func_scope()\cell dwarfread.c\cell\row
\cell read_initial_length()\cell dwarf2read.c\cell\row
\cell read_member_functions()\cell stabsread.c\cell\row
\cell read_ofile_symtab_from_oso()\cell dbxread.c\cell\row
\cell read_partial_die()\cell dwarf2read.c\cell\row
\cell read_range_type()\cell stabsread.c\cell\row
\cell read_structure_type()\cell dwarf2read.c\cell\row
\cell read_subrange_type()\cell dwarf2read.c\cell\row
\cell read_tag_pointer_type()\cell dwarf2read.c\cell\row
\cell read_tilde_fields()\cell stabsread.c\cell\row
\cell read_type()\cell stabsread.c\cell\row
\cell read_type_die()\cell dwarf2read.c\cell\row
\cell reg_value_complaint()\cell stabsread.c\cell\row
\cell repeated_header_complaint()\cell dbxread.c\cell\row
\cell rs6000_builtin_type()\cell stabsread.c\cell\row
\cell sal_macro_scope()\cell macroscope.c\cell\row
\cell scan_file_globals()\cell stabsread.c\cell\row
\cell set_namestring_1()\cell dbxread.c\cell\row
\cell skip_one_die()\cell dwarf2read.c\cell\row
\cell stabs_general_complaint()\cell stabsread.c\cell\row
\cell stabsect_read_strtab_from_oso()\cell dbxread.c\cell\row
\cell struct_type()\cell dwarfread.c\cell\row
\cell stub_noname_complaint()\cell gdbtypes.c\cell\row
\cell target_to_host()\cell dwarfread.c\cell\row
\cell unexpected_type_code_complaint()\cell mdebugread.c\cell\row
\cell unknown_attribute_form_complaint()\cell dwarfread.c\cell\row
\cell unknown_ext_complaint()\cell mdebugread.c\cell\row
\cell unknown_symtype_complaint()\cell dbxread.c\cell\row
\cell upgrade_type()\cell mdebugread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function internal_complaint()\par}
{\s5\f1\fs20\ql\sb50\sa50 void internal_complaint ( struct complaints** complaints, const char* file, int line, const char* fmt, ... )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell complaints.h\cell\cell\row
Calls: \cell vcomplaint()\cell complaints.c\cell\row
\cell  __builtin_va_end(), __builtin_va_start()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function complaints_show_value()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void complaints_show_value ( struct ui_file* file, int from_tty, struct cmd_list_element* cmd, const char* value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell fprintf_filtered()\cell utils.c\cell\row
Used in:\cell _initialize_complaints()\cell complaints.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function find_complaint()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct complain* find_complaint ( struct complaints* complaints, const char* file, int line, const char* fmt )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell xmalloc()\cell utils.c\cell\row
Called by:\cell vcomplaint()\cell complaints.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function get_complaints()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct complaints* get_complaints ( struct complaints** c )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell xmalloc()\cell utils.c\cell\row
Called by:\cell clear_complaints()\cell complaints.c\cell\row
\cell vcomplaint()\cell complaints.c\cell\row
Refs Var:\cell complaint_sentinel\cell complaints.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function vcomplaint()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void vcomplaint ( struct complaints** c, const char* file, int line, const char* fmt, va_list args )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell begin_line()\cell utils.c\cell\row
\cell do_cleanups()\cell utils.c\cell\row
\cell find_complaint()\cell complaints.c\cell\row
\cell fprintf_filtered()\cell utils.c\cell\row
\cell fputs_filtered()\cell utils.c\cell\row
\cell gdb_flush()\cell ui-file.c\cell\row
\cell get_complaints()\cell complaints.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell internal_vwarning()\cell utils.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell vwarning()\cell utils.c\cell\row
\cell wrap_here()\cell utils.c\cell\row
\cell xstrvprintf()\cell utils.c\cell\row
Called by:\cell complaint()\cell complaints.c\cell\row
\cell internal_complaint()\cell complaints.c\cell\row
Refs Func:\cell xfree()\cell utils.c\cell\row
Refs Var:\cell deprecated_warning_hook\cell top.c\cell\row
\cell gdb_stderr\cell main.c\cell\row
\cell info_verbose\cell top.c\cell\row
\cell stop_whining\cell complaints.c\cell\row
\intbl0
}
