<!DOCTYPE LINUXDOC SYSTEM>

<!-- This SGML file generated by cxref (version 1.6e). -->
<!-- cxref program (c) Andrew M. Bishop 1995-2014. -->

<!--
Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF event-loop.c
CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
-->

<article>

<title>Cross reference for event-loop.c of gdb.cxref.
<author>cxref

<sect>File event-loop.c

<sect1>Included Files

<p>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<itemize>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
<item><tt>#include &lt;sys/time.h&gt;</tt>
<item><tt>#include &lt;time.h&gt;</tt>
<item><tt>#include &lt;sys/types.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
<item><tt>#include &lt;errno.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
<item><tt>#include &lt;regex.h&gt;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;unistd.h&gt;</tt>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;gdb_locale.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<item><tt>#include &lt;locale.h&gt;</tt>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../gdb/signals.h&quot;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &quot;../include/libiberty.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/symcat.h&quot;</tt>
</itemize>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
<item><tt>#include &quot;ui-file.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;xm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/xm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &lt;mach/mach.h&gt;</tt>
<item><tt>#include &lt;signal.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;nm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/i386/nm-i386.h&quot;</tt>
<item><tt>#include &quot;macosx/nm-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;tm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/tm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;macosx/i386-macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/i386-macosx-thread-status.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &lt;mach/mach_types.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
<item><tt>#include &lt;inttypes.h&gt;</tt>
<item><tt>#include &lt;mach/mach_vm.h&gt;</tt>
<item><tt>#include &lt;mach/kmod.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;macosx/tm-i386-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;../include/fopen-bin.h&quot;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdlib.h&gt;</tt>
<item><tt>#include &quot;gdbarch.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;event-loop.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;event-top.h&quot;</tt>
<itemize>
<item><tt>#include &lt;signal.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;interps.h&quot;</tt>
<itemize>
<item><tt>#include &quot;exceptions.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;ui-out.h&quot;</tt>
<item><tt>#include &lt;setjmp.h&gt;</tt>
</itemize>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;ui-out.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &lt;poll.h&gt;</tt>
</itemize>
<itemize>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_string.h&quot;</tt>
<itemize>
<item><tt>#include &lt;string.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &lt;errno.h&gt;</tt>
</itemize>
<itemize>
<item><tt>#include &lt;sys/time.h&gt;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;exceptions.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_assert.h&quot;</tt>
</itemize>

<sect1>Preprocessor definitions

<p>
<tt>#define USE_POLL 1</tt><newline>
<p>
<tt>#define USE_POLL 0</tt><newline>

<sect1>Typedef gdb_event

<p>
<tt>typedef struct gdb_event gdb_event</tt><newline>
<descrip>
<tag>See:</tag>
<itemize>
<item>Type struct gdb_event
</itemize>
</descrip>

<sect1>Type struct gdb_event

<p>
<itemize>
<item><tt>struct gdb_event</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>event_handler_func* proc;</tt><newline>
<item><tt>void* data;</tt><newline>
<item><tt>struct gdb_event* next_event;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Typedef file_handler

<p>
<tt>typedef struct file_handler file_handler</tt><newline>
<itemize>
<item><tt>struct file_handler</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>int fd;</tt><newline>
<item><tt>int mask;</tt><newline>
<item><tt>int ready_mask;</tt><newline>
<item><tt>handler_func* proc;</tt><newline>
<item><tt>gdb_client_data client_data;</tt><newline>
<item><tt>int error;</tt><newline>
<item><tt>struct file_handler* next_file;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Typedef async_signal_handler

<p>
<tt>typedef struct async_signal_handler async_signal_handler</tt><newline>
<itemize>
<item><tt>struct async_signal_handler</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>int ready;</tt><newline>
<item><tt>struct async_signal_handler* next_handler;</tt><newline>
<item><tt>sig_handler_func* proc;</tt><newline>
<item><tt>gdb_client_data client_data;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Type struct gdb_timer

<p>
<itemize>
<item><tt>struct gdb_timer</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>struct timeval when;</tt><newline>
<item><tt>int timer_id;</tt><newline>
<item><tt>struct gdb_timer* next;</tt><newline>
<item><tt>timer_handler_func* proc;</tt><newline>
<item><tt>gdb_client_data client_data;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Global Variable gdb_timer

<p>
<tt>struct gdb_timer gdb_timer</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>event-loop.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>create_timer()  :  event-loop.c
</itemize>
</descrip>

<sect1>External Variables

<p>
<bf>sigint_token</bf><newline>
<tt>extern void* sigint_token</tt><newline>
<descrip>
<tag>Defined in:</tag>
<itemize>
<item>sigint_token</itemize>
</descrip>

<sect1>Local Variables

<p>
<bf>event_queue</bf><newline>
<tt>static struct {...} event_queue</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>async_queue_event()
<item>print_event_queue()
<item>process_event()
</itemize>
</descrip>
<p>
<bf>use_poll</bf><newline>
<tt>static unsigned char use_poll</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>add_file_handler()
<item>create_file_handler()
<item>delete_file_handler()
<item>gdb_wait_for_event()
<item>handle_file_event()
<item>poll_timers()
</itemize>
</descrip>
<p>
<bf>gdb_notifier</bf><newline>
<tt>static struct {...} gdb_notifier</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>create_file_handler()
<item>create_timer()
<item>delete_file_handler()
<item>delete_timer()
<item>gdb_wait_for_event()
<item>handle_file_event()
<item>handle_timer_event()
<item>poll_timers()
<item>print_event_queue()
</itemize>
</descrip>
<p>
<bf>timer_list</bf><newline>
<tt>static struct {...} timer_list</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>create_timer()
<item>delete_timer()
<item>handle_timer_event()
<item>poll_timers()
</itemize>
</descrip>
<p>
<bf>sighandler_list</bf><newline>
<tt>static struct {...} sighandler_list</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>create_async_signal_handler()
<item>delete_async_signal_handler()
<item>invoke_async_signal_handler()
</itemize>
</descrip>
<p>
<bf>async_handler_ready</bf><newline>
<tt>static int async_handler_ready</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>check_async_ready()
<item>invoke_async_signal_handler()
<item>mark_async_signal_handler()
</itemize>
</descrip>

<sect1>Global Function add_file_handler()

<p><tt>void add_file_handler ( int fd, handler_func* proc, gdb_client_data client_data )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-loop.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>create_file_handler()  :  event-loop.c
<item>poll()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>display_gdb_prompt()  :  event-top.c
<item>gdb_setup_readline()  :  event-top.c
<item>remote_async_terminal_ours()  :  remote.c
<item>reschedule()  :  ser-base.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>use_poll  :  event-loop.c
</itemize>
</descrip>

<sect1>Global Function async_queue_event()

<p><tt>void async_queue_event ( gdb_event* event_ptr, queue_position position )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-loop.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>gdb_queue_event()  :  event-loop.c
<item>gdb_wait_for_event()  :  event-loop.c
<item>poll_timers()  :  event-loop.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>event_queue  :  event-loop.c
</itemize>
</descrip>

<sect1>Global Function create_async_signal_handler()

<p><tt>async_signal_handler* create_async_signal_handler ( sig_handler_func* proc, gdb_client_data client_data )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-loop.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xmalloc()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>async_init_signals()  :  event-top.c
<item>handle_remote_sigint()  :  remote.c
<item>handle_remote_sigint_twice()  :  remote.c
<item>initialize_sigint_signal_handler()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>sighandler_list  :  event-loop.c
</itemize>
</descrip>

<sect1>Global Function create_timer()

<p><tt>int create_timer ( int milliseconds, timer_handler_func* proc, gdb_client_data client_data )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-loop.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xmalloc()  :  utils.c
<item>gettimeofday()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>reschedule()  :  ser-base.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_notifier  :  event-loop.c
<item>gdb_timer  :  event-loop.c
<item>timer_list  :  event-loop.c
</itemize>
</descrip>

<sect1>Global Function delete_async_signal_handler()

<p><tt>void delete_async_signal_handler ( async_signal_handler** async_handler_ptr )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-loop.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xfree()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>cleanup_sigint_signal_handler()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>sighandler_list  :  event-loop.c
</itemize>
</descrip>

<sect1>Global Function delete_file_handler()

<p><tt>void delete_file_handler ( int fd )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-loop.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xfree()  :  utils.c
<item>xmalloc()  :  utils.c
<item>__darwin_fd_isset()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>display_gdb_prompt()  :  event-top.c
<item>gdb_disable_readline()  :  event-top.c
<item>remote_async_terminal_inferior()  :  remote.c
<item>reschedule()  :  ser-base.c
<item>ser_base_async()  :  ser-base.c
<item>stdin_event_handler()  :  event-top.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_notifier  :  event-loop.c
<item>use_poll  :  event-loop.c
</itemize>
</descrip>

<sect1>Global Function delete_timer()

<p><tt>void delete_timer ( int id )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-loop.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xfree()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>reschedule()  :  ser-base.c
<item>ser_base_async()  :  ser-base.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_notifier  :  event-loop.c
<item>timer_list  :  event-loop.c
</itemize>
</descrip>

<sect1>Global Function gdb_do_one_event()

<p><tt>int gdb_do_one_event ( void* data )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-loop.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>gdb_wait_for_event()  :  event-loop.c
<item>poll_timers()  :  event-loop.c
<item>process_event()  :  event-loop.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>start_event_loop()  :  event-loop.c
</itemize>
</descrip>

<sect1>Global Function gdb_queue_event()

<p><tt>void gdb_queue_event ( event_handler_func proc, void* data, queue_position position )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-loop.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>async_queue_event()  :  event-loop.c
<item>gdb_create_event()  :  event-loop.c
</itemize>
</descrip>

<sect1>Global Function mark_async_signal_handler()

<p><tt>void mark_async_signal_handler ( async_signal_handler* async_handler_ptr )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-loop.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>mark_async_signal_handler_wrapper()  :  event-top.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>async_handler_ready  :  event-loop.c
</itemize>
</descrip>

<sect1>Global Function print_event_queue()

<p><tt>void print_event_queue ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-loop.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>check_async_ready()  :  event-loop.c
<item>printf()
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>handle_file_event()  :  event-loop.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>event_queue  :  event-loop.c
<item>gdb_notifier  :  event-loop.c
</itemize>
</descrip>

<sect1>Global Function sigint_taken_p()

<p><tt>int sigint_taken_p ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-loop.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>sigint_token  :  event-top.c
</itemize>
</descrip>

<sect1>Global Function start_event_loop()

<p><tt>void start_event_loop ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-loop.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>current_interp()  :  interps.c
<item>display_gdb_prompt()  :  event-top.c
<item>interp_ui_out()  :  interps.c
<item>catch_errors()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>cli_command_loop()  :  event-top.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>gdb_do_one_event()  :  event-loop.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>after_char_processing_hook  :  event-top.c
<item>uiout  :  ui-out.c
</itemize>
</descrip>

<sect1>Global Function unmark_async_signal_handler()

<p><tt>void unmark_async_signal_handler ( async_signal_handler* async_handler_ptr )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-loop.h
</itemize>
</descrip>

<sect1>Local Function check_async_ready()

<p><tt>static int check_async_ready ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-loop.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>print_event_queue()  :  event-loop.c
<item>process_event()  :  event-loop.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>async_handler_ready  :  event-loop.c
</itemize>
</descrip>

<sect1>Local Function create_file_event()

<p><tt>static gdb_event* create_file_event ( int fd )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-loop.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>gdb_create_event()  :  event-loop.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>gdb_wait_for_event()  :  event-loop.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>handle_file_event()  :  event-loop.c
</itemize>
</descrip>

<sect1>Local Function create_file_handler()

<p><tt>static void create_file_handler ( int fd, int mask, handler_func* proc, gdb_client_data client_data )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-loop.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xmalloc()  :  utils.c
<item>xrealloc()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>add_file_handler()  :  event-loop.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_notifier  :  event-loop.c
<item>use_poll  :  event-loop.c
</itemize>
</descrip>

<sect1>Local Function gdb_create_event()

<p><tt>static gdb_event* gdb_create_event ( event_handler_func proc, void* data )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-loop.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xmalloc()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>create_file_event()  :  event-loop.c
<item>gdb_queue_event()  :  event-loop.c
</itemize>
</descrip>

<sect1>Local Function gdb_select()

<p><tt>static int gdb_select ( int n, fd_set* readfds, fd_set* writefds, fd_set* exceptfds, struct timeval* timeout )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>select()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>gdb_wait_for_event()  :  event-loop.c
</itemize>
</descrip>

<sect1>Local Function gdb_wait_for_event()

<p><tt>static int gdb_wait_for_event ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-loop.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>async_queue_event()  :  event-loop.c
<item>create_file_event()  :  event-loop.c
<item>gdb_flush()  :  ui-file.c
<item>gdb_select()  :  event-loop.c
<item>internal_error()  :  utils.c
<item>perror_with_name()  :  utils.c
<item>__builtin_bzero(), __darwin_fd_isset(), __error(), poll()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>gdb_do_one_event()  :  event-loop.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_notifier  :  event-loop.c
<item>gdb_stderr  :  main.c
<item>gdb_stdout  :  main.c
<item>use_poll  :  event-loop.c
</itemize>
</descrip>

<sect1>Local Function handle_file_event()

<p><tt>static void handle_file_event ( void* data )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-loop.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>printf_unfiltered()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>create_file_event()  :  event-loop.c
<item>print_event_queue()  :  event-loop.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_notifier  :  event-loop.c
<item>use_poll  :  event-loop.c
</itemize>
</descrip>

<sect1>Local Function handle_timer_event()

<p><tt>static void handle_timer_event ( void* dummy )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-loop.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xfree()  :  utils.c
<item>gettimeofday()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>poll_timers()  :  event-loop.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_notifier  :  event-loop.c
<item>timer_list  :  event-loop.c
</itemize>
</descrip>

<sect1>Local Function invoke_async_signal_handler()

<p><tt>static void invoke_async_signal_handler ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-loop.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>process_event()  :  event-loop.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>async_handler_ready  :  event-loop.c
<item>sighandler_list  :  event-loop.c
</itemize>
</descrip>

<sect1>Local Function poll_timers()

<p><tt>static void poll_timers ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-loop.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>async_queue_event()  :  event-loop.c
<item>xmalloc()  :  utils.c
<item>gettimeofday()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>gdb_do_one_event()  :  event-loop.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>handle_timer_event()  :  event-loop.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_notifier  :  event-loop.c
<item>timer_list  :  event-loop.c
<item>use_poll  :  event-loop.c
</itemize>
</descrip>

<sect1>Local Function process_event()

<p><tt>static int process_event ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>event-loop.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>check_async_ready()  :  event-loop.c
<item>invoke_async_signal_handler()  :  event-loop.c
<item>xfree()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>gdb_do_one_event()  :  event-loop.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>event_queue  :  event-loop.c
</itemize>
</descrip>

</article>
