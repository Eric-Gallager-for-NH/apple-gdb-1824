# Makefile for libcheckpoint library of helper functions for the inferior process.

SRCROOT = .
OBJROOT = $(SRCROOT)
SYMROOT = $(OBJROOT)
DSTROOT =

GDBDIR = /usr/libexec/gdb
DSTDIR = $(DSTROOT)$(GDBDIR)

LIB = libcheckpoint.dylib

CFILES = cpfork.c cpcg.c

OBJS = $(CFILES:%.c=$(OBJROOT)/%.o)

INSTALL = install

CC = cc

CFLAGS = -gdwarf-2 $(RC_CFLAGS)

.SUFFIXES : .c .h .o

.PHONY : all install clean

# Standard targets.

all : $(SYMROOT)/$(LIB)

# (Note that installsrc and installhdrs not needed)

install : all
	mkdir -p $(DSTDIR)
	dsymutil $(SYMROOT)/$(LIB)
	strip -S -o $(DSTDIR)/$(LIB) $(SYMROOT)/$(LIB)

clean :
	rm -f $(OBJS) $(SYMROOT)/$(LIB)

$(OBJROOT)/%.o : $(SRCROOT)/%.c
	mkdir -p $(OBJROOT)
	$(CC) -c $(CFLAGS) $< -o $@

$(SYMROOT)/$(LIB) : $(OBJS)
	$(CC) $(CFLAGS) -o $@ -dynamiclib \
		-install_name $(GDBDIR)/$(LIB) \
		-single_module -compatibility_version 1 \
		-current_version 1 $(OBJS) -framework ApplicationServices
	stat $(SYMROOT)/$(LIB) || stat $(GDBDIR)/$(LIB) || stat $(OBJS)
	du $(SYMROOT)/$(LIB) || du $(GDBDIR)/$(LIB) || du $(OBJS)
	if test -x "`which machocheck`"; then \
	  machocheck -progress $(SYMROOT)/$(LIB) || test -r $(SYMROOT)/$(LIB); \
	else \
	  echo "no usable machocheck found; skipping running on $(SYMROOT)/$(LIB)"; \
	fi
