<!DOCTYPE LINUXDOC SYSTEM>

<!-- This SGML file generated by cxref (version 1.6e). -->
<!-- cxref program (c) Andrew M. Bishop 1995-2014. -->

<!--
Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF f-valprint.c
CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
-->

<article>

<title>Cross reference for f-valprint.c of gdb.cxref.
<author>cxref

<sect>File f-valprint.c

<sect1>Included Files

<p>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<itemize>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
<item><tt>#include &lt;sys/time.h&gt;</tt>
<item><tt>#include &lt;time.h&gt;</tt>
<item><tt>#include &lt;sys/types.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
<item><tt>#include &lt;errno.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
<item><tt>#include &lt;regex.h&gt;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;unistd.h&gt;</tt>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;gdb_locale.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<item><tt>#include &lt;locale.h&gt;</tt>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../gdb/signals.h&quot;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &quot;../include/libiberty.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/symcat.h&quot;</tt>
</itemize>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
<item><tt>#include &quot;ui-file.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;xm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/xm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &lt;mach/mach.h&gt;</tt>
<item><tt>#include &lt;signal.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;nm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/i386/nm-i386.h&quot;</tt>
<item><tt>#include &quot;macosx/nm-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;tm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/tm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;macosx/i386-macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/i386-macosx-thread-status.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &lt;mach/mach_types.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
<item><tt>#include &lt;inttypes.h&gt;</tt>
<item><tt>#include &lt;mach/mach_vm.h&gt;</tt>
<item><tt>#include &lt;mach/kmod.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;macosx/tm-i386-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;../include/fopen-bin.h&quot;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdlib.h&gt;</tt>
<item><tt>#include &quot;gdbarch.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_assert.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_string.h&quot;</tt>
<itemize>
<item><tt>#include &lt;string.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdbtypes.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;expression.h&quot;</tt>
<itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/floatformat.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;value.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
<item><tt>#include &quot;gdb_regex.h&quot;</tt>
<itemize>
<item><tt>#include &lt;regex.h&gt;</tt>
</itemize>
<item><tt>#include &quot;frame.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
</itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;gdbtypes.h&quot;</tt>
<item><tt>#include &quot;expression.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;valprint.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;language.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;f-lang.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;frame.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdbcore.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;command.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;block.h&quot;</tt>
</itemize>

<sect1>Preprocessor definitions

<p>
<tt>#define F77_DIM_SIZE( n )</tt><newline>
<p>
<tt>#define F77_DIM_OFFSET( n )</tt><newline>

<sect1>Global Variable f77_array_offset_tbl

<p>
<tt>int f77_array_offset_tbl[7+1][2]</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>f-valprint.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>f77_create_arrayprint_offset_tbl()  :  f-valprint.c
<item>f77_print_array_1()  :  f-valprint.c
</itemize>
</descrip>

<sect1>Global Function _initialize_f_valprint()

<p><tt>void _initialize_f_valprint ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>f-valprint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>add_com(), add_info()
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>info_common_command()  :  f-valprint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>xdb_commands  :  main.c
</itemize>
</descrip>

<sect1>Global Function f77_get_dynamic_lowerbound()

<p><tt>int f77_get_dynamic_lowerbound ( struct type* type, int* lower_bound )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>f-lang.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>get_frame_base()  :  frame.c
<item>read_memory_integer()  :  corefile.c
<item>read_memory_typed_address()  :  corefile.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>evaluate_subexp_standard()  :  eval.c
<item>f77_create_arrayprint_offset_tbl()  :  f-valprint.c
<item>f77_get_dynamic_length_of_aggregate()  :  f-valprint.c
<item>f77_get_dynamic_upperbound()  :  f-valprint.c
<item>f_type_print_varspec_suffix()  :  f-typeprint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>builtin_type_void_data_ptr  :  gdbtypes.c
<item>deprecated_selected_frame  :  frame.c
</itemize>
</descrip>

<sect1>Global Function f77_get_dynamic_upperbound()

<p><tt>int f77_get_dynamic_upperbound ( struct type* type, int* upper_bound )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>f-lang.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>f77_get_dynamic_lowerbound()  :  f-valprint.c
<item>get_frame_base()  :  frame.c
<item>read_memory_integer()  :  corefile.c
<item>read_memory_typed_address()  :  corefile.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>evaluate_subexp_standard()  :  eval.c
<item>f77_create_arrayprint_offset_tbl()  :  f-valprint.c
<item>f77_get_dynamic_length_of_aggregate()  :  f-valprint.c
<item>f_type_print_base()  :  f-typeprint.c
<item>f_type_print_varspec_suffix()  :  f-typeprint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>builtin_type_void_data_ptr  :  gdbtypes.c
<item>deprecated_selected_frame  :  frame.c
</itemize>
</descrip>

<sect1>Global Function f_val_print()

<p><tt>int f_val_print ( struct type* type, const gdb_byte* valaddr, int embedded_offset, CORE_ADDR address, struct ui_file* stream, int format, int deref_ref, int recurse, enum val_prettyprint pretty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>f-lang.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>check_typedef()  :  gdbtypes.c
<item>common_val_print()  :  valprint.c
<item>deprecated_print_address_numeric()  :  printcmd.c
<item>error()  :  utils.c
<item>extract_typed_address()  :  findvar.c
<item>f77_get_dynamic_length_of_aggregate()  :  f-valprint.c
<item>f77_print_array()  :  f-valprint.c
<item>f_val_print()  :  f-valprint.c
<item>fprintf_filtered()  :  utils.c
<item>fputs_filtered()  :  utils.c
<item>gdb_flush()  :  ui-file.c
<item>lookup_pointer_type()  :  gdbtypes.c
<item>objc_fixup_class_length()  :  objc-lang.c
<item>print_address_demangle()  :  printcmd.c
<item>print_floating()  :  valprint.c
<item>print_scalar_formatted()  :  printcmd.c
<item>type_print()  :  typeprint.c
<item>unpack_long()  :  value.c
<item>unpack_pointer()  :  value.c
<item>val_print_string()  :  valprint.c
<item>val_print_type_code_int()  :  valprint.c
<item>value_at()  :  valops.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>f_val_print()  :  f-valprint.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>f-lang.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>addressprint  :  valprint.c
<item>builtin_type_f_logical  :  f-lang.c
<item>builtin_type_f_logical_s1  :  f-lang.c
<item>builtin_type_f_logical_s2  :  f-lang.c
<item>builtin_type_f_real  :  f-lang.c
<item>builtin_type_f_real_s16  :  f-lang.c
<item>builtin_type_f_real_s8  :  f-lang.c
<item>builtin_type_void  :  gdbtypes.c
<item>current_language  :  language.c
<item>demangle  :  utils.c
<item>output_format  :  valprint.c
</itemize>
</descrip>

<sect1>Local Function f77_create_arrayprint_offset_tbl()

<p><tt>static void f77_create_arrayprint_offset_tbl ( struct type* type, struct ui_file* stream )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>f-valprint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>f77_get_dynamic_lowerbound()  :  f-valprint.c
<item>f77_get_dynamic_upperbound()  :  f-valprint.c
<item>fprintf_filtered()  :  utils.c
<item>objc_fixup_class_length()  :  objc-lang.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>f77_print_array()  :  f-valprint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>f77_array_offset_tbl  :  f-valprint.c
</itemize>
</descrip>

<sect1>Local Function f77_get_dynamic_length_of_aggregate()

<p><tt>static void f77_get_dynamic_length_of_aggregate ( struct type* type )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>f-valprint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>check_typedef()  :  gdbtypes.c
<item>error()  :  utils.c
<item>f77_get_dynamic_length_of_aggregate()  :  f-valprint.c
<item>f77_get_dynamic_lowerbound()  :  f-valprint.c
<item>f77_get_dynamic_upperbound()  :  f-valprint.c
<item>objc_fixup_class_length()  :  objc-lang.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>f77_get_dynamic_length_of_aggregate()  :  f-valprint.c
<item>f_val_print()  :  f-valprint.c
</itemize>
</descrip>

<sect1>Local Function f77_print_array()

<p><tt>static void f77_print_array ( struct type* type, const gdb_byte* valaddr, CORE_ADDR address, struct ui_file* stream, int format, int deref_ref, int recurse, enum val_prettyprint pretty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>calc_f77_array_dims()  :  eval.c
<item>error()  :  utils.c
<item>f77_create_arrayprint_offset_tbl()  :  f-valprint.c
<item>f77_print_array_1()  :  f-valprint.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>f_val_print()  :  f-valprint.c
</itemize>
</descrip>

<sect1>Local Function f77_print_array_1()

<p><tt>static void f77_print_array_1 ( int nss, int ndimensions, struct type* type, const gdb_byte* valaddr, CORE_ADDR address, struct ui_file* stream, int format, int deref_ref, int recurse, enum val_prettyprint pretty, int* elts )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>f77_print_array_1()  :  f-valprint.c
<item>fprintf_filtered()  :  utils.c
<item>val_print()  :  valprint.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>f77_print_array()  :  f-valprint.c
<item>f77_print_array_1()  :  f-valprint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>f77_array_offset_tbl  :  f-valprint.c
<item>print_max  :  valprint.c
</itemize>
</descrip>

<sect1>Local Function info_common_command()

<p><tt>static void info_common_command ( const char* comname, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>f-valprint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>find_common_for_function()  :  f-lang.c
<item>find_pc_function()  :  blockframe.c
<item>get_frame_pc()  :  frame.c
<item>list_all_visible_commons()  :  f-valprint.c
<item>lookup_minimal_symbol_by_pc()  :  minsyms.c
<item>print_variable_value()  :  printcmd.c
<item>printf_filtered()  :  utils.c
<item>strcmp()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_f_valprint()  :  f-valprint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>deprecated_selected_frame  :  frame.c
<item>gdb_stdout  :  main.c
</itemize>
</descrip>

<sect1>Local Function list_all_visible_commons()

<p><tt>static void list_all_visible_commons ( const char* funname )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>f-valprint.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
<item>printf_filtered()  :  utils.c
<item>strcmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>info_common_command()  :  f-valprint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>head_common_list  :  f-lang.c
</itemize>
</descrip>

</article>
