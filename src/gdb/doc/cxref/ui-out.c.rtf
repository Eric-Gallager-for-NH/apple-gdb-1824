{\rtf\ansi
\deff0
{\fonttbl
{\f0\froman Times New Roman;}
{\f1\fmodern Courier New;}
}
{\stylesheet
{\s0\f0\fs24 Normal;}
{\s1\f0\fs40\b\sb400\sa200\keepn\keep Heading 1;}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Heading 2;}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Heading 3;}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Heading 4;}
{\s5\f1\fs20\ql\sb50\sa50 Code;}
}
{\info{\comment
 This RTF file generated by cxref (version 1.6e).
 cxref program (c) Andrew M. Bishop 1995-2014.
 Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF ui-out.c
 CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
}}
\paperw11880\paperh16848\margl1440\margr1440\margt1440\margb1440
\sectd\plain
\s0\f0\fs24
{\s1\f0\fs40\b\sb400\sa200\keepn\keep File ui-out.c\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Refs Func:\cell default_begin()\cell ui-out.c\cell\row
\cell default_end()\cell ui-out.c\cell\row
\cell default_field_fmt()\cell ui-out.c\cell\row
\cell default_field_int()\cell ui-out.c\cell\row
\cell default_field_skip()\cell ui-out.c\cell\row
\cell default_field_string()\cell ui-out.c\cell\row
\cell default_flush()\cell ui-out.c\cell\row
\cell default_message()\cell ui-out.c\cell\row
\cell default_notify_begin()\cell ui-out.c\cell\row
\cell default_notify_end()\cell ui-out.c\cell\row
\cell default_spaces()\cell ui-out.c\cell\row
\cell default_table_begin()\cell ui-out.c\cell\row
\cell default_table_body()\cell ui-out.c\cell\row
\cell default_table_end()\cell ui-out.c\cell\row
\cell default_table_header()\cell ui-out.c\cell\row
\cell default_text()\cell ui-out.c\cell\row
\cell default_text_fmt()\cell ui-out.c\cell\row
\cell default_wrap_hint()\cell ui-out.c\cell\row
Refs Var:\cell def_uiout\cell ui-out.c\cell\row
\cell default_ui_out_impl\cell ui-out.c\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Included Files\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <errno.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <unistd.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_locale.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <locale.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../gdb/signals.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/symcat.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-file.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "xm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/xm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "nm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/i386/nm-i386.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/nm-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "tm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/tm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-tdep.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-tdep.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-thread-status.h"\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_types.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <inttypes.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_vm.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/kmod.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/tm-i386-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/fopen-bin.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdlib.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbarch.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_string.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "expression.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/floatformat.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "language.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "ui-out.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_assert.h"\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Type definitions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct ui_out_hdr\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct ui_out_hdr}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int colno;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int width;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int alignment;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 char* col_name;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 char* colhdr;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct ui_out_hdr* next;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct ui_out_level\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct ui_out_level}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int field_count;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 enum ui_out_type type;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct ui_out_table\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct ui_out_table}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int flag;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int body_flag;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int entry_level;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int columns;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 char* id;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct ui_out_hdr* header_first;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct ui_out_hdr* header_last;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct ui_out_hdr* header_next;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct ui_out\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct ui_out}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int flags;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct ui_out_impl* impl;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct ui_out_data* data;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int level;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct ui_out_level levels[MAX_UI_OUT_LEVELS];}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct ui_out_table table;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct ui_out_end_cleanup_data\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct ui_out_end_cleanup_data}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct ui_out* uiout;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 enum ui_out_type type;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Variables\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable uiout\par}
{\s5\f1\fs20\ql\sb50\sa50 struct ui_out* uiout\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell ada-lang.c\cell\cell\row
\cell ada-typeprint.c\cell\cell\row
\cell ada-valprint.c\cell\cell\row
\cell arch-utils.c\cell\cell\row
\cell ax-gdb.c\cell\cell\row
\cell blockframe.c\cell\cell\row
\cell breakpoint.c\cell\cell\row
\cell charset.c\cell\cell\row
\cell cli-out.c\cell\cell\row
\cell complaints.c\cell\cell\row
\cell completer.c\cell\cell\row
\cell corefile.c\cell\cell\row
\cell cp-abi.c\cell\cell\row
\cell cp-support.c\cell\cell\row
\cell cp-valprint.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell demangle.c\cell\cell\row
\cell disasm.c\cell\cell\row
\cell dummy-frame.c\cell\cell\row
\cell dwarf2expr.c\cell\cell\row
\cell dwarf2loc.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell event-loop.c\cell\cell\row
\cell event-top.c\cell\cell\row
\cell frame.c\cell\cell\row
\cell gdbarch.c\cell\cell\row
\cell gdbtypes.c\cell\cell\row
\cell inf-loop.c\cell\cell\row
\cell infcall.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell inflow.c\cell\cell\row
\cell infrun.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell interps.c\cell\cell\row
\cell kod.c\cell\cell\row
\cell language.c\cell\cell\row
\cell linespec.c\cell\cell\row
\cell macrocmd.c\cell\cell\row
\cell main.c\cell\cell\row
\cell maint.c\cell\cell\row
\cell memattr.c\cell\cell\row
\cell objc-lang.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell observer.c\cell\cell\row
\cell osabi.c\cell\cell\row
\cell p-valprint.c\cell\cell\row
\cell parse.c\cell\cell\row
\cell printcmd.c\cell\cell\row
\cell regcache.c\cell\cell\row
\cell reggroups.c\cell\cell\row
\cell remote-fileio.c\cell\cell\row
\cell remote.c\cell\cell\row
\cell serial.c\cell\cell\row
\cell solib.c\cell\cell\row
\cell source.c\cell\cell\row
\cell stack.c\cell\cell\row
\cell symfile-mem.c\cell\cell\row
\cell symfile.c\cell\cell\row
\cell symmisc.c\cell\cell\row
\cell symtab.c\cell\cell\row
\cell target/target.c\cell\cell\row
\cell target/x86-shared-tdep.c\cell\cell\row
\cell thread.c\cell\cell\row
\cell top.c\cell\cell\row
\cell tracepoint.c\cell\cell\row
\cell typeprint.c\cell\cell\row
\cell ui-out.c\cell\cell\row
\cell utils.c\cell\cell\row
\cell valops.c\cell\cell\row
\cell valprint.c\cell\cell\row
\cell value.c\cell\cell\row
\cell varobj.c\cell\cell\row
\cell wrapper.c\cell\cell\row
Used in:\cell add_dsym_command()\cell symfile.c\cell\row
\cell add_vsyscall_page()\cell symfile-mem.c\cell\row
\cell backtrace_command_1()\cell stack.c\cell\row
\cell bpstat_do_actions()\cell breakpoint.c\cell\row
\cell break_command_2()\cell breakpoint.c\cell\row
\cell breakpoint_1()\cell breakpoint.c\cell\row
\cell check_bfd_for_matching_uuid()\cell symfile.c\cell\row
\cell decode_all_digits_exhaustive()\cell linespec.c\cell\row
\cell decode_objc()\cell linespec.c\cell\row
\cell do_check_is_thread_unsafe()\cell valops.c\cell\row
\cell do_end_debugger_mode()\cell objc-lang.c\cell\row
\cell do_restore_output()\cell utils.c\cell\row
\cell do_restore_uiout_cleanup()\cell utils.c\cell\row
\cell dwarf_expr_tls_address()\cell dwarf2loc.c\cell\row
\cell enable_breakpoint()\cell breakpoint.c\cell\row
\cell field_separator()\cell cli-out.c\cell\row
\cell find_implementation_from_class()\cell objc-lang.c\cell\row
\cell find_method()\cell linespec.c\cell\row
\cell find_pc_offset()\cell disasm.c\cell\row
\cell fsf_gdb_breakpoint()\cell breakpoint.c\cell\row
\cell gdb_evaluate_expression()\cell wrapper.c\cell\row
\cell gdb_evaluate_type()\cell wrapper.c\cell\row
\cell gdb_parse_and_eval_type()\cell wrapper.c\cell\row
\cell gdb_parse_exp_1()\cell wrapper.c\cell\row
\cell gdb_print_expression()\cell wrapper.c\cell\row
\cell gdb_print_insn()\cell disasm.c\cell\row
\cell gdb_value_assign()\cell wrapper.c\cell\row
\cell gdb_value_cast()\cell wrapper.c\cell\row
\cell gdb_value_equal()\cell wrapper.c\cell\row
\cell gdb_value_fetch_lazy()\cell wrapper.c\cell\row
\cell gdb_value_ind()\cell wrapper.c\cell\row
\cell gdb_value_subscript()\cell wrapper.c\cell\row
\cell gdb_varobj_get_value()\cell wrapper.c\cell\row
\cell generic_load()\cell symfile.c\cell\row
\cell get_binary_file_uuids()\cell utils.c\cell\row
\cell get_class_address_from_object()\cell objc-lang.c\cell\row
\cell get_closure_dynamic_type()\cell gdbtypes.c\cell\row
\cell get_closure_implementation_fn()\cell gdbtypes.c\cell\row
\cell get_current_frame()\cell frame.c\cell\row
\cell hand_function_call()\cell infcall.c\cell\row
\cell handle_inferior_event()\cell infrun.c\cell\row
\cell inferior_event_handler()\cell inf-loop.c\cell\row
\cell info_threads_command()\cell thread.c\cell\row
\cell insert_bp_location()\cell breakpoint.c\cell\row
\cell interp_set()\cell interps.c\cell\row
\cell kill_command()\cell inflow.c\cell\row
\cell length_of_this_instruction()\cell target/target.c\cell\row
\cell list_cp_abis()\cell cp-abi.c\cell\row
\cell list_interpreter_cmd()\cell interps.c\cell\row
\cell load_section_callback()\cell symfile.c\cell\row
\cell make_cleanup_init_objc_exception_catcher()\cell objc-lang.c\cell\row
\cell make_cleanup_set_restore_debugger_mode()\cell objc-lang.c\cell\row
\cell make_cleanup_ui_out_suppress_output()\cell utils.c\cell\row
\cell mention()\cell breakpoint.c\cell\row
\cell new_objc_runtime_class_getClass()\cell objc-lang.c\cell\row
\cell new_objc_runtime_find_impl()\cell objc-lang.c\cell\row
\cell new_objc_runtime_get_classname()\cell objc-lang.c\cell\row
\cell normal_stop()\cell infrun.c\cell\row
\cell objc_init_trampoline_observer()\cell objc-lang.c\cell\row
\cell objc_runtime_lock_taken_p()\cell objc-lang.c\cell\row
\cell objc_setup_safe_print()\cell objc-lang.c\cell\row
\cell pid_info()\cell infcmd.c\cell\row
\cell print_catch_info()\cell breakpoint.c\cell\row
\cell print_exception_catchpoint()\cell breakpoint.c\cell\row
\cell print_frame()\cell stack.c\cell\row
\cell print_frame_args()\cell stack.c\cell\row
\cell print_frame_info()\cell stack.c\cell\row
\cell print_inlined_frame()\cell inlining.c\cell\row
\cell print_it_typical()\cell breakpoint.c\cell\row
\cell print_one_breakpoint()\cell breakpoint.c\cell\row
\cell print_one_exception_catchpoint()\cell breakpoint.c\cell\row
\cell print_return_value()\cell infcmd.c\cell\row
\cell print_source_lines_base()\cell source.c\cell\row
\cell print_stop_reason()\cell infrun.c\cell\row
\cell print_transfer_performance()\cell symfile.c\cell\row
\cell read_objc_object()\cell objc-lang.c\cell\row
\cell record_currthread()\cell remote.c\cell\row
\cell remote_fileio_request()\cell remote-fileio.c\cell\row
\cell remote_macosx_complete_create_or_attach()\cell remote.c\cell\row
\cell remote_open_1()\cell remote.c\cell\row
\cell report_timer_internal()\cell maint.c\cell\row
\cell return_command()\cell stack.c\cell\row
\cell run_command_1()\cell infcmd.c\cell\row
\cell safe_value_objc_target_type()\cell wrapper.c\cell\row
\cell safe_value_rtti_target_type()\cell varobj.c\cell\row
\cell show_cp_abi_cmd()\cell cp-abi.c\cell\row
\cell show_endian()\cell arch-utils.c\cell\row
\cell start_event_loop()\cell event-loop.c\cell\row
\cell step_1_inlining()\cell infcmd.c\cell\row
\cell step_once()\cell infcmd.c\cell\row
\cell thread_apply_all_command()\cell thread.c\cell\row
\cell thread_command()\cell thread.c\cell\row
\cell type_sprint_quoted()\cell typeprint.c\cell\row
\cell value_assign()\cell valops.c\cell\row
\cell value_full_object()\cell valops.c\cell\row
\cell varobj_delete_objfiles_vars()\cell varobj.c\cell\row
\cell varobj_value_struct_elt_by_index()\cell varobj.c\cell\row
\cell watchpoint_check()\cell breakpoint.c\cell\row
\cell x86_frame_this_id()\cell target/x86-shared-tdep.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable ui_out_c_inited\par}
{\s5\f1\fs20\ql\sb50\sa50 int ui_out_c_inited\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell ada-lang.c\cell\cell\row
\cell ada-typeprint.c\cell\cell\row
\cell ada-valprint.c\cell\cell\row
\cell arch-utils.c\cell\cell\row
\cell ax-gdb.c\cell\cell\row
\cell blockframe.c\cell\cell\row
\cell breakpoint.c\cell\cell\row
\cell charset.c\cell\cell\row
\cell cli-out.c\cell\cell\row
\cell complaints.c\cell\cell\row
\cell completer.c\cell\cell\row
\cell corefile.c\cell\cell\row
\cell cp-abi.c\cell\cell\row
\cell cp-support.c\cell\cell\row
\cell cp-valprint.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell demangle.c\cell\cell\row
\cell disasm.c\cell\cell\row
\cell dummy-frame.c\cell\cell\row
\cell dwarf2expr.c\cell\cell\row
\cell dwarf2loc.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell event-loop.c\cell\cell\row
\cell event-top.c\cell\cell\row
\cell frame.c\cell\cell\row
\cell gdbarch.c\cell\cell\row
\cell gdbtypes.c\cell\cell\row
\cell inf-loop.c\cell\cell\row
\cell infcall.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell inflow.c\cell\cell\row
\cell infrun.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell interps.c\cell\cell\row
\cell kod.c\cell\cell\row
\cell language.c\cell\cell\row
\cell linespec.c\cell\cell\row
\cell macrocmd.c\cell\cell\row
\cell main.c\cell\cell\row
\cell maint.c\cell\cell\row
\cell memattr.c\cell\cell\row
\cell objc-lang.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell observer.c\cell\cell\row
\cell osabi.c\cell\cell\row
\cell p-valprint.c\cell\cell\row
\cell parse.c\cell\cell\row
\cell printcmd.c\cell\cell\row
\cell regcache.c\cell\cell\row
\cell reggroups.c\cell\cell\row
\cell remote-fileio.c\cell\cell\row
\cell remote.c\cell\cell\row
\cell serial.c\cell\cell\row
\cell solib.c\cell\cell\row
\cell source.c\cell\cell\row
\cell stack.c\cell\cell\row
\cell symfile-mem.c\cell\cell\row
\cell symfile.c\cell\cell\row
\cell symmisc.c\cell\cell\row
\cell symtab.c\cell\cell\row
\cell target/target.c\cell\cell\row
\cell target/x86-shared-tdep.c\cell\cell\row
\cell thread.c\cell\cell\row
\cell top.c\cell\cell\row
\cell tracepoint.c\cell\cell\row
\cell typeprint.c\cell\cell\row
\cell ui-out.c\cell\cell\row
\cell utils.c\cell\cell\row
\cell valops.c\cell\cell\row
\cell valprint.c\cell\cell\row
\cell value.c\cell\cell\row
\cell varobj.c\cell\cell\row
\cell wrapper.c\cell\cell\row
Used in:\cell _initialize_ui_out()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable default_ui_out_impl\par}
{\s5\f1\fs20\ql\sb50\sa50 struct ui_out_impl default_ui_out_impl\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell ui-out.c\cell\cell\row
Used in:\cell ui-out.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable def_uiout\par}
{\s5\f1\fs20\ql\sb50\sa50 struct ui_out def_uiout\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell ui-out.c\cell\cell\row
Used in:\cell ui-out.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable ui_out_annotation_printer\par}
{\s5\f1\fs20\ql\sb50\sa50 static void (*ui_out_annotation_printer)(const char*,const char*)\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell ui_out_print_annotation_string()\cell\cell\row
\cell ui_out_set_annotation_printer()\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Functions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function _initialize_ui_out()\par}
{\s5\f1\fs20\ql\sb50\sa50 void _initialize_ui_out ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Refs Var:\cell ui_out_c_inited\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function access_ui_out_data()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct ui_out_data* access_ui_out_data ( struct ui_out* uiout )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.h\cell\cell\row
Called by:\cell cli_begin()\cell cli-out.c\cell\row
\cell cli_end()\cell cli-out.c\cell\row
\cell cli_field_fmt()\cell cli-out.c\cell\row
\cell cli_field_int()\cell cli-out.c\cell\row
\cell cli_field_skip()\cell cli-out.c\cell\row
\cell cli_field_string()\cell cli-out.c\cell\row
\cell cli_flush()\cell cli-out.c\cell\row
\cell cli_message()\cell cli-out.c\cell\row
\cell cli_out_set_stream()\cell cli-out.c\cell\row
\cell cli_redirect()\cell cli-out.c\cell\row
\cell cli_spaces()\cell cli-out.c\cell\row
\cell cli_table_begin()\cell cli-out.c\cell\row
\cell cli_table_body()\cell cli-out.c\cell\row
\cell cli_table_end()\cell cli-out.c\cell\row
\cell cli_table_header()\cell cli-out.c\cell\row
\cell cli_text()\cell cli-out.c\cell\row
\cell cli_text_fmt()\cell cli-out.c\cell\row
\cell cli_wrap_hint()\cell cli-out.c\cell\row
\cell field_separator()\cell cli-out.c\cell\row
\cell out_field_fmt()\cell cli-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function make_cleanup_ui_out_list_begin_end()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct cleanup* make_cleanup_ui_out_list_begin_end ( struct ui_out* uiout, const char* id )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.h\cell\cell\row
Calls: \cell make_cleanup_ui_out_end()\cell ui-out.c\cell\row
\cell ui_out_begin()\cell ui-out.c\cell\row
Called by:\cell break_command_2()\cell breakpoint.c\cell\row
\cell breakpoint_print_commands()\cell breakpoint.c\cell\row
\cell do_assembly_only()\cell disasm.c\cell\row
\cell do_captured_list_thread_ids()\cell thread.c\cell\row
\cell do_mixed_source_and_assembly()\cell disasm.c\cell\row
\cell list_interpreter_cmd()\cell interps.c\cell\row
\cell print_frame()\cell stack.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function make_cleanup_ui_out_notify_begin_end()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct cleanup* make_cleanup_ui_out_notify_begin_end ( struct ui_out* uiout, const char* class_in )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.h\cell\cell\row
Calls: \cell make_cleanup()\cell utils.c\cell\row
\cell ui_out_notify_begin()\cell ui-out.c\cell\row
Called by:\cell bpstat_do_actions()\cell breakpoint.c\cell\row
\cell check_bfd_for_matching_uuid()\cell symfile.c\cell\row
\cell print_stop_reason()\cell infrun.c\cell\row
\cell report_timer_internal()\cell maint.c\cell\row
\cell varobj_delete_objfiles_vars()\cell varobj.c\cell\row
Refs Func:\cell ui_out_notify_end()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function make_cleanup_ui_out_stream_delete()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct cleanup* make_cleanup_ui_out_stream_delete ( struct ui_stream* buf )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.h\cell\cell\row
Calls: \cell make_cleanup()\cell utils.c\cell\row
Called by:\cell gdb_disassembly()\cell disasm.c\cell\row
\cell gdb_print_insn()\cell disasm.c\cell\row
\cell mention()\cell breakpoint.c\cell\row
\cell print_frame()\cell stack.c\cell\row
\cell print_frame_args()\cell stack.c\cell\row
\cell print_inlined_frame()\cell inlining.c\cell\row
\cell print_it_typical()\cell breakpoint.c\cell\row
\cell print_one_breakpoint()\cell breakpoint.c\cell\row
\cell print_return_value()\cell infcmd.c\cell\row
Refs Func:\cell do_stream_delete()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function make_cleanup_ui_out_table_begin_end()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct cleanup* make_cleanup_ui_out_table_begin_end ( struct ui_out* ui_out, int nr_cols, int nr_rows, const char* tblid )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.h\cell\cell\row
Calls: \cell make_cleanup()\cell utils.c\cell\row
\cell ui_out_table_begin()\cell ui-out.c\cell\row
Called by:\cell breakpoint_1()\cell breakpoint.c\cell\row
Refs Func:\cell do_cleanup_table_end()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function make_cleanup_ui_out_tuple_begin_end()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct cleanup* make_cleanup_ui_out_tuple_begin_end ( struct ui_out* uiout, const char* id )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.h\cell\cell\row
Calls: \cell make_cleanup_ui_out_end()\cell ui-out.c\cell\row
\cell ui_out_begin()\cell ui-out.c\cell\row
Called by:\cell add_dsym_command()\cell symfile.c\cell\row
\cell do_captured_list_thread_ids()\cell thread.c\cell\row
\cell do_check_is_thread_unsafe()\cell valops.c\cell\row
\cell do_mixed_source_and_assembly()\cell disasm.c\cell\row
\cell dump_insns()\cell disasm.c\cell\row
\cell gdb_print_insn()\cell disasm.c\cell\row
\cell list_cp_abis()\cell cp-abi.c\cell\row
\cell mention()\cell breakpoint.c\cell\row
\cell print_frame()\cell stack.c\cell\row
\cell print_frame_args()\cell stack.c\cell\row
\cell print_frame_info()\cell stack.c\cell\row
\cell print_inlined_frame()\cell inlining.c\cell\row
\cell print_inlined_frames_lite()\cell inlining.c\cell\row
\cell print_it_typical()\cell breakpoint.c\cell\row
\cell print_one_breakpoint()\cell breakpoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function ui_out_begin()\par}
{\s5\f1\fs20\ql\sb50\sa50 void ui_out_begin ( struct ui_out* uiout, enum ui_out_type type, const char* id )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.h\cell\cell\row
Calls: \cell internal_error()\cell utils.c\cell\row
\cell push_level()\cell ui-out.c\cell\row
\cell uo_begin()\cell ui-out.c\cell\row
\cell verify_field()\cell ui-out.c\cell\row
Called by:\cell make_cleanup_ui_out_list_begin_end()\cell ui-out.c\cell\row
\cell make_cleanup_ui_out_tuple_begin_end()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function ui_out_cleanup_after_error()\par}
{\s5\f1\fs20\ql\sb50\sa50 void ui_out_cleanup_after_error ( struct ui_out* uiout )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.h\cell\cell\row
Calls: \cell current_level()\cell ui-out.c\cell\row
\cell ui_out_end()\cell ui-out.c\cell\row
\cell ui_out_table_end()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function ui_out_clear_flags()\par}
{\s5\f1\fs20\ql\sb50\sa50 int ui_out_clear_flags ( struct ui_out* uiout, int mask )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.h\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function ui_out_delete()\par}
{\s5\f1\fs20\ql\sb50\sa50 void ui_out_delete ( struct ui_out* uiout )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.h\cell\cell\row
Calls: \cell xfree()\cell utils.c\cell\row
Called by:\cell do_ui_out_delete()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function ui_out_end()\par}
{\s5\f1\fs20\ql\sb50\sa50 void ui_out_end ( struct ui_out* uiout, enum ui_out_type type )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.h\cell\cell\row
Calls: \cell pop_level()\cell ui-out.c\cell\row
\cell uo_end()\cell ui-out.c\cell\row
Called by:\cell do_cleanup_end()\cell ui-out.c\cell\row
\cell ui_out_cleanup_after_error()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function ui_out_field_core_addr()\par}
{\s5\f1\fs20\ql\sb50\sa50 void ui_out_field_core_addr ( struct ui_out* uiout, const char* fldname, CORE_ADDR address )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.h\cell\cell\row
Calls: \cell gdbarch_addr_bit()\cell gdbarch.c\cell\row
\cell hex_string_custom()\cell utils.c\cell\row
\cell ui_out_field_string()\cell ui-out.c\cell\row
\cell  __builtin___strcpy_chk(), __builtin_object_size(), __inline_strcpy_chk()\cell\cell\row
Called by:\cell break_command_2()\cell breakpoint.c\cell\row
\cell dump_insns()\cell disasm.c\cell\row
\cell print_frame()\cell stack.c\cell\row
\cell print_frame_info()\cell stack.c\cell\row
\cell print_inlined_frame()\cell inlining.c\cell\row
\cell print_inlined_frames_lite()\cell inlining.c\cell\row
\cell print_one_breakpoint()\cell breakpoint.c\cell\row
\cell print_one_exception_catchpoint()\cell breakpoint.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function ui_out_field_fmt()\par}
{\s5\f1\fs20\ql\sb50\sa50 void ui_out_field_fmt ( struct ui_out* uiout, const char* fldname, const char* format, ... )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.h\cell\cell\row
Calls: \cell uo_field_fmt()\cell ui-out.c\cell\row
\cell verify_field()\cell ui-out.c\cell\row
\cell  __builtin_va_end(), __builtin_va_start()\cell\cell\row
Called by:\cell do_check_is_thread_unsafe()\cell valops.c\cell\row
\cell generic_load()\cell symfile.c\cell\row
\cell print_one_breakpoint()\cell breakpoint.c\cell\row
\cell print_return_value()\cell infcmd.c\cell\row
\cell print_stop_reason()\cell infrun.c\cell\row
\cell print_transfer_performance()\cell symfile.c\cell\row
\cell report_timer_internal()\cell maint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function ui_out_field_fmt_int()\par}
{\s5\f1\fs20\ql\sb50\sa50 void ui_out_field_fmt_int ( struct ui_out* uiout, int input_width, enum ui_align input_align, const char* fldname, int value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.h\cell\cell\row
Calls: \cell uo_field_int()\cell ui-out.c\cell\row
\cell verify_field()\cell ui-out.c\cell\row
Called by:\cell print_frame()\cell stack.c\cell\row
\cell print_frame_info()\cell stack.c\cell\row
\cell print_inlined_frame()\cell inlining.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function ui_out_field_int()\par}
{\s5\f1\fs20\ql\sb50\sa50 void ui_out_field_int ( struct ui_out* uiout, const char* fldname, int value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.h\cell\cell\row
Calls: \cell uo_field_int()\cell ui-out.c\cell\row
\cell verify_field()\cell ui-out.c\cell\row
Called by:\cell break_command_2()\cell breakpoint.c\cell\row
\cell do_captured_list_thread_ids()\cell thread.c\cell\row
\cell do_captured_thread_select()\cell thread.c\cell\row
\cell do_check_is_thread_unsafe()\cell valops.c\cell\row
\cell dump_insns()\cell disasm.c\cell\row
\cell enable_breakpoint()\cell breakpoint.c\cell\row
\cell info_threads_command()\cell thread.c\cell\row
\cell mention()\cell breakpoint.c\cell\row
\cell pid_info()\cell infcmd.c\cell\row
\cell print_catch_info()\cell breakpoint.c\cell\row
\cell print_frame()\cell stack.c\cell\row
\cell print_inlined_frame()\cell inlining.c\cell\row
\cell print_inlined_frames_lite()\cell inlining.c\cell\row
\cell print_one_breakpoint()\cell breakpoint.c\cell\row
\cell print_source_lines_base()\cell source.c\cell\row
\cell watchpoint_check()\cell breakpoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function ui_out_field_skip()\par}
{\s5\f1\fs20\ql\sb50\sa50 void ui_out_field_skip ( struct ui_out* uiout, const char* fldname )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.h\cell\cell\row
Calls: \cell uo_field_skip()\cell ui-out.c\cell\row
\cell verify_field()\cell ui-out.c\cell\row
Called by:\cell break_command_2()\cell breakpoint.c\cell\row
\cell print_catch_info()\cell breakpoint.c\cell\row
\cell print_one_breakpoint()\cell breakpoint.c\cell\row
\cell ui_out_field_stream()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function ui_out_field_stream()\par}
{\s5\f1\fs20\ql\sb50\sa50 void ui_out_field_stream ( struct ui_out* uiout, const char* fldname, struct ui_stream* buf )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.h\cell\cell\row
Calls: \cell do_cleanups()\cell utils.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell ui_file_rewind()\cell ui-file.c\cell\row
\cell ui_file_xstrdup()\cell ui-file.c\cell\row
\cell ui_out_field_skip()\cell ui-out.c\cell\row
\cell ui_out_field_string()\cell ui-out.c\cell\row
Called by:\cell dump_insns()\cell disasm.c\cell\row
\cell gdb_print_insn()\cell disasm.c\cell\row
\cell mention()\cell breakpoint.c\cell\row
\cell print_frame()\cell stack.c\cell\row
\cell print_frame_args()\cell stack.c\cell\row
\cell print_inlined_frame()\cell inlining.c\cell\row
\cell print_it_typical()\cell breakpoint.c\cell\row
\cell print_one_breakpoint()\cell breakpoint.c\cell\row
\cell print_return_value()\cell infcmd.c\cell\row
Refs Func:\cell xfree()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function ui_out_field_string()\par}
{\s5\f1\fs20\ql\sb50\sa50 void ui_out_field_string ( struct ui_out* uiout, const char* fldname, const char* string )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.h\cell\cell\row
Calls: \cell uo_field_string()\cell ui-out.c\cell\row
\cell verify_field()\cell ui-out.c\cell\row
Called by:\cell add_dsym_command()\cell symfile.c\cell\row
\cell break_command_2()\cell breakpoint.c\cell\row
\cell check_bfd_for_matching_uuid()\cell symfile.c\cell\row
\cell do_captured_thread_select()\cell thread.c\cell\row
\cell dump_insns()\cell disasm.c\cell\row
\cell inferior_event_handler()\cell inf-loop.c\cell\row
\cell info_threads_command()\cell thread.c\cell\row
\cell list_cp_abis()\cell cp-abi.c\cell\row
\cell list_interpreter_cmd()\cell interps.c\cell\row
\cell mention()\cell breakpoint.c\cell\row
\cell print_catch_info()\cell breakpoint.c\cell\row
\cell print_frame()\cell stack.c\cell\row
\cell print_frame_info()\cell stack.c\cell\row
\cell print_inlined_frame()\cell inlining.c\cell\row
\cell print_inlined_frames_lite()\cell inlining.c\cell\row
\cell print_it_typical()\cell breakpoint.c\cell\row
\cell print_one_breakpoint()\cell breakpoint.c\cell\row
\cell print_one_exception_catchpoint()\cell breakpoint.c\cell\row
\cell print_return_value()\cell infcmd.c\cell\row
\cell print_source_lines_base()\cell source.c\cell\row
\cell report_timer_internal()\cell maint.c\cell\row
\cell run_command_1()\cell infcmd.c\cell\row
\cell show_cp_abi_cmd()\cell cp-abi.c\cell\row
\cell show_endian()\cell arch-utils.c\cell\row
\cell ui_out_field_core_addr()\cell ui-out.c\cell\row
\cell ui_out_field_stream()\cell ui-out.c\cell\row
\cell ui_out_print_annotation_string()\cell ui-out.c\cell\row
\cell varobj_delete_objfiles_vars()\cell varobj.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function ui_out_flush()\par}
{\s5\f1\fs20\ql\sb50\sa50 void ui_out_flush ( struct ui_out* uiout )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.h\cell\cell\row
Calls: \cell uo_flush()\cell ui-out.c\cell\row
Called by:\cell interp_set()\cell interps.c\cell\row
\cell pid_info()\cell infcmd.c\cell\row
\cell run_command_1()\cell infcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function ui_out_get_field_separator()\par}
{\s5\f1\fs20\ql\sb50\sa50 void ui_out_get_field_separator ( struct ui_out* uiout )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.h\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function ui_out_get_verblvl()\par}
{\s5\f1\fs20\ql\sb50\sa50 int ui_out_get_verblvl ( struct ui_out* uiout )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.h\cell\cell\row
Called by:\cell cli_message()\cell cli-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function ui_out_is_mi_like_p()\par}
{\s5\f1\fs20\ql\sb50\sa50 int ui_out_is_mi_like_p ( struct ui_out* uiout )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.h\cell\cell\row
Called by:\cell bpstat_do_actions()\cell breakpoint.c\cell\row
\cell break_command_2()\cell breakpoint.c\cell\row
\cell check_bfd_for_matching_uuid()\cell symfile.c\cell\row
\cell decode_objc()\cell linespec.c\cell\row
\cell enable_breakpoint()\cell breakpoint.c\cell\row
\cell find_method()\cell linespec.c\cell\row
\cell find_pc_offset()\cell disasm.c\cell\row
\cell hand_function_call()\cell infcall.c\cell\row
\cell handle_inferior_event()\cell infrun.c\cell\row
\cell inferior_event_handler()\cell inf-loop.c\cell\row
\cell kill_command()\cell inflow.c\cell\row
\cell mention()\cell breakpoint.c\cell\row
\cell normal_stop()\cell infrun.c\cell\row
\cell print_exception_catchpoint()\cell breakpoint.c\cell\row
\cell print_frame()\cell stack.c\cell\row
\cell print_frame_info()\cell stack.c\cell\row
\cell print_inlined_frame()\cell inlining.c\cell\row
\cell print_it_typical()\cell breakpoint.c\cell\row
\cell print_one_breakpoint()\cell breakpoint.c\cell\row
\cell print_stop_reason()\cell infrun.c\cell\row
\cell show_endian()\cell arch-utils.c\cell\row
\cell ui_out_print_annotation_string()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function ui_out_message()\par}
{\s5\f1\fs20\ql\sb50\sa50 void ui_out_message ( struct ui_out* uiout, int verbosity, const char* format, ... )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.h\cell\cell\row
Calls: \cell uo_message()\cell ui-out.c\cell\row
\cell  __builtin_va_end(), __builtin_va_start()\cell\cell\row
Called by:\cell breakpoint_1()\cell breakpoint.c\cell\row
\cell dump_insns()\cell disasm.c\cell\row
\cell gdb_print_insn()\cell disasm.c\cell\row
\cell load_section_callback()\cell symfile.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function ui_out_new()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct ui_out* ui_out_new ( struct ui_out_impl* impl, struct ui_out_data* data, int flags )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.h\cell\cell\row
Calls: \cell xmalloc()\cell utils.c\cell\row
\cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk()\cell\cell\row
Called by:\cell cli_out_new()\cell cli-out.c\cell\row
\cell cli_quoted_out_new()\cell cli-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function ui_out_print_annotation_int()\par}
{\s5\f1\fs20\ql\sb50\sa50 void ui_out_print_annotation_int ( struct ui_out* uiout, int tee, const char* name, const int value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.h\cell\cell\row
Calls: \cell ui_out_print_annotation_string()\cell ui-out.c\cell\row
\cell  __builtin___snprintf_chk(), __builtin_object_size()\cell\cell\row
Called by:\cell normal_stop()\cell infrun.c\cell\row
\cell print_it_typical()\cell breakpoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function ui_out_print_annotation_string()\par}
{\s5\f1\fs20\ql\sb50\sa50 void ui_out_print_annotation_string ( struct ui_out* uiout, int tee, const char* name, const char* reason )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.h\cell\cell\row
Calls: \cell ui_out_field_string()\cell ui-out.c\cell\row
\cell ui_out_is_mi_like_p()\cell ui-out.c\cell\row
\cell  ui_out_annotation_printer()\cell\cell\row
Called by:\cell normal_stop()\cell infrun.c\cell\row
\cell print_exception_catchpoint()\cell breakpoint.c\cell\row
\cell print_it_typical()\cell breakpoint.c\cell\row
\cell print_stop_reason()\cell infrun.c\cell\row
\cell ui_out_print_annotation_int()\cell ui-out.c\cell\row
\cell watchpoint_check()\cell breakpoint.c\cell\row
Refs Var:\cell ui_out_annotation_printer\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function ui_out_redirect()\par}
{\s5\f1\fs20\ql\sb50\sa50 int ui_out_redirect ( struct ui_out* uiout, struct ui_file* outstream )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.h\cell\cell\row
Calls: \cell uo_redirect()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function ui_out_set_annotation_printer()\par}
{\s5\f1\fs20\ql\sb50\sa50 void ui_out_set_annotation_printer ( void (*printer)(const char*,const char*) )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.h\cell\cell\row
Refs Var:\cell ui_out_annotation_printer\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function ui_out_set_flags()\par}
{\s5\f1\fs20\ql\sb50\sa50 int ui_out_set_flags ( struct ui_out* uiout, int mask )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.h\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function ui_out_spaces()\par}
{\s5\f1\fs20\ql\sb50\sa50 void ui_out_spaces ( struct ui_out* uiout, int numspaces )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.h\cell\cell\row
Calls: \cell uo_spaces()\cell ui-out.c\cell\row
Called by:\cell cli_field_string()\cell cli-out.c\cell\row
\cell print_one_breakpoint()\cell breakpoint.c\cell\row
\cell print_one_exception_catchpoint()\cell breakpoint.c\cell\row
\cell run_command_1()\cell infcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function ui_out_stream_delete()\par}
{\s5\f1\fs20\ql\sb50\sa50 void ui_out_stream_delete ( struct ui_stream* buf )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.h\cell\cell\row
Calls: \cell ui_file_delete()\cell ui-file.c\cell\row
\cell xfree()\cell utils.c\cell\row
Called by:\cell do_stream_delete()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function ui_out_stream_new()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct ui_stream* ui_out_stream_new ( struct ui_out* uiout )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.h\cell\cell\row
Calls: \cell mem_fileopen()\cell ui-file.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
Called by:\cell gdb_disassembly()\cell disasm.c\cell\row
\cell gdb_print_insn()\cell disasm.c\cell\row
\cell length_of_this_instruction()\cell target/target.c\cell\row
\cell mention()\cell breakpoint.c\cell\row
\cell print_frame()\cell stack.c\cell\row
\cell print_frame_args()\cell stack.c\cell\row
\cell print_inlined_frame()\cell inlining.c\cell\row
\cell print_it_typical()\cell breakpoint.c\cell\row
\cell print_one_breakpoint()\cell breakpoint.c\cell\row
\cell print_return_value()\cell infcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function ui_out_table_body()\par}
{\s5\f1\fs20\ql\sb50\sa50 void ui_out_table_body ( struct ui_out* uiout )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.h\cell\cell\row
Calls: \cell internal_error()\cell utils.c\cell\row
\cell uo_table_body()\cell ui-out.c\cell\row
Called by:\cell breakpoint_1()\cell breakpoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function ui_out_table_header()\par}
{\s5\f1\fs20\ql\sb50\sa50 void ui_out_table_header ( struct ui_out* uiout, int width, enum ui_align alignment, const char* col_name, const char* colhdr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.h\cell\cell\row
Calls: \cell append_header_to_list()\cell ui-out.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell uo_table_header()\cell ui-out.c\cell\row
Called by:\cell breakpoint_1()\cell breakpoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function ui_out_test_flags()\par}
{\s5\f1\fs20\ql\sb50\sa50 int ui_out_test_flags ( struct ui_out* uiout, int mask )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.h\cell\cell\row
Called by:\cell print_source_lines_base()\cell source.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function ui_out_text()\par}
{\s5\f1\fs20\ql\sb50\sa50 void ui_out_text ( struct ui_out* uiout, const char* string )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.h\cell\cell\row
Calls: \cell uo_text()\cell ui-out.c\cell\row
Called by:\cell add_dsym_command()\cell symfile.c\cell\row
\cell do_captured_thread_select()\cell thread.c\cell\row
\cell do_check_is_thread_unsafe()\cell valops.c\cell\row
\cell do_mixed_source_and_assembly()\cell disasm.c\cell\row
\cell dump_insns()\cell disasm.c\cell\row
\cell gdb_print_insn()\cell disasm.c\cell\row
\cell generic_load()\cell symfile.c\cell\row
\cell handle_inferior_event()\cell infrun.c\cell\row
\cell info_threads_command()\cell thread.c\cell\row
\cell interp_set()\cell interps.c\cell\row
\cell list_cp_abis()\cell cp-abi.c\cell\row
\cell list_interpreter_cmd()\cell interps.c\cell\row
\cell mention()\cell breakpoint.c\cell\row
\cell pid_info()\cell infcmd.c\cell\row
\cell print_catch_info()\cell breakpoint.c\cell\row
\cell print_frame()\cell stack.c\cell\row
\cell print_frame_args()\cell stack.c\cell\row
\cell print_frame_info()\cell stack.c\cell\row
\cell print_inlined_frame()\cell inlining.c\cell\row
\cell print_inlined_frames_lite()\cell inlining.c\cell\row
\cell print_it_typical()\cell breakpoint.c\cell\row
\cell print_one_breakpoint()\cell breakpoint.c\cell\row
\cell print_return_value()\cell infcmd.c\cell\row
\cell print_source_lines_base()\cell source.c\cell\row
\cell print_stop_reason()\cell infrun.c\cell\row
\cell print_transfer_performance()\cell symfile.c\cell\row
\cell record_currthread()\cell remote.c\cell\row
\cell report_timer_internal()\cell maint.c\cell\row
\cell run_command_1()\cell infcmd.c\cell\row
\cell show_cp_abi_cmd()\cell cp-abi.c\cell\row
\cell step_1_inlining()\cell infcmd.c\cell\row
\cell step_once()\cell infcmd.c\cell\row
\cell watchpoint_check()\cell breakpoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function ui_out_text_fmt()\par}
{\s5\f1\fs20\ql\sb50\sa50 void ui_out_text_fmt ( struct ui_out* uiout, const char* format, ... )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.h\cell\cell\row
Calls: \cell uo_text_fmt()\cell ui-out.c\cell\row
\cell  __builtin_va_end(), __builtin_va_start()\cell\cell\row
Called by:\cell info_threads_command()\cell thread.c\cell\row
\cell print_source_lines_base()\cell source.c\cell\row
\cell return_command()\cell stack.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function ui_out_wrap_hint()\par}
{\s5\f1\fs20\ql\sb50\sa50 void ui_out_wrap_hint ( struct ui_out* uiout, const char* identstring )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.h\cell\cell\row
Calls: \cell uo_wrap_hint()\cell ui-out.c\cell\row
Called by:\cell print_frame()\cell stack.c\cell\row
\cell print_frame_args()\cell stack.c\cell\row
\cell print_inlined_frame()\cell inlining.c\cell\row
\cell print_one_breakpoint()\cell breakpoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function uo_begin()\par}
{\s5\f1\fs20\ql\sb50\sa50 void uo_begin ( struct ui_out* uiout, enum ui_out_type type, int level, const char* id )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Called by:\cell ui_out_begin()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function uo_end()\par}
{\s5\f1\fs20\ql\sb50\sa50 void uo_end ( struct ui_out* uiout, enum ui_out_type type, int level )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Called by:\cell ui_out_end()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function uo_field_fmt()\par}
{\s5\f1\fs20\ql\sb50\sa50 void uo_field_fmt ( struct ui_out* uiout, int fldno, int width, enum ui_align align, const char* fldname, const char* format, va_list args )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Called by:\cell ui_out_field_fmt()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function uo_field_int()\par}
{\s5\f1\fs20\ql\sb50\sa50 void uo_field_int ( struct ui_out* uiout, int fldno, int width, enum ui_align align, const char* fldname, int value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Called by:\cell ui_out_field_fmt_int()\cell ui-out.c\cell\row
\cell ui_out_field_int()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function uo_field_skip()\par}
{\s5\f1\fs20\ql\sb50\sa50 void uo_field_skip ( struct ui_out* uiout, int fldno, int width, enum ui_align align, const char* fldname )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Called by:\cell ui_out_field_skip()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function uo_field_string()\par}
{\s5\f1\fs20\ql\sb50\sa50 void uo_field_string ( struct ui_out* uiout, int fldno, int width, enum ui_align align, const char* fldname, const char* string )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Called by:\cell ui_out_field_string()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function uo_flush()\par}
{\s5\f1\fs20\ql\sb50\sa50 void uo_flush ( struct ui_out* uiout )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Called by:\cell ui_out_flush()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function uo_message()\par}
{\s5\f1\fs20\ql\sb50\sa50 void uo_message ( struct ui_out* uiout, int verbosity, const char* format, va_list args )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Called by:\cell ui_out_message()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function uo_redirect()\par}
{\s5\f1\fs20\ql\sb50\sa50 int uo_redirect ( struct ui_out* uiout, struct ui_file* outstream )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Called by:\cell ui_out_redirect()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function uo_spaces()\par}
{\s5\f1\fs20\ql\sb50\sa50 void uo_spaces ( struct ui_out* uiout, int numspaces )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Called by:\cell ui_out_spaces()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function uo_table_begin()\par}
{\s5\f1\fs20\ql\sb50\sa50 void uo_table_begin ( struct ui_out* uiout, int nbrofcols, int nr_rows, const char* tblid )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Called by:\cell ui_out_table_begin()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function uo_table_body()\par}
{\s5\f1\fs20\ql\sb50\sa50 void uo_table_body ( struct ui_out* uiout )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Called by:\cell ui_out_table_body()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function uo_table_end()\par}
{\s5\f1\fs20\ql\sb50\sa50 void uo_table_end ( struct ui_out* uiout )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Called by:\cell ui_out_table_end()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function uo_table_header()\par}
{\s5\f1\fs20\ql\sb50\sa50 void uo_table_header ( struct ui_out* uiout, int width, enum ui_align align, const char* col_name, const char* colhdr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Called by:\cell ui_out_table_header()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function uo_text()\par}
{\s5\f1\fs20\ql\sb50\sa50 void uo_text ( struct ui_out* uiout, const char* string )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Called by:\cell ui_out_text()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function uo_text_fmt()\par}
{\s5\f1\fs20\ql\sb50\sa50 void uo_text_fmt ( struct ui_out* uiout, const char* format, va_list args )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Called by:\cell ui_out_text_fmt()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function uo_wrap_hint()\par}
{\s5\f1\fs20\ql\sb50\sa50 void uo_wrap_hint ( struct ui_out* uiout, const char* identstring )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Called by:\cell ui_out_wrap_hint()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function append_header_to_list()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void append_header_to_list ( struct ui_out* uiout, int width, int alignment, const char* col_name, const char* colhdr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Calls: \cell xmalloc()\cell utils.c\cell\row
\cell  xstrdup()\cell\cell\row
Called by:\cell ui_out_table_header()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function clear_header_list()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void clear_header_list ( struct ui_out* uiout )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Calls: \cell internal_error()\cell utils.c\cell\row
\cell xfree()\cell utils.c\cell\row
Called by:\cell ui_out_table_begin()\cell ui-out.c\cell\row
\cell ui_out_table_end()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function current_level()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct ui_out_level* current_level ( struct ui_out* uiout )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Called by:\cell pop_level()\cell ui-out.c\cell\row
\cell push_level()\cell ui-out.c\cell\row
\cell ui_out_cleanup_after_error()\cell ui-out.c\cell\row
\cell verify_field()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function default_begin()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void default_begin ( struct ui_out* uiout, enum ui_out_type type, int level, const char* id )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Used in:\cell ui-out.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function default_end()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void default_end ( struct ui_out* uiout, enum ui_out_type type, int level )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Used in:\cell ui-out.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function default_field_fmt()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void default_field_fmt ( struct ui_out* uiout, int fldno, int width, enum ui_align align, const char* fldname, const char* format, va_list args )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Used in:\cell ui-out.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function default_field_int()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void default_field_int ( struct ui_out* uiout, int fldno, int width, enum ui_align align, const char* fldname, int value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Used in:\cell ui-out.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function default_field_skip()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void default_field_skip ( struct ui_out* uiout, int fldno, int width, enum ui_align align, const char* fldname )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Used in:\cell ui-out.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function default_field_string()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void default_field_string ( struct ui_out* uiout, int fldno, int width, enum ui_align align, const char* fldname, const char* string )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Used in:\cell ui-out.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function default_flush()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void default_flush ( struct ui_out* uiout )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Used in:\cell ui-out.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function default_message()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void default_message ( struct ui_out* uiout, int verbosity, const char* format, va_list args )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Used in:\cell ui-out.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function default_notify_begin()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void default_notify_begin ( struct ui_out* uiout, const char* unused_class )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Used in:\cell ui-out.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function default_notify_end()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void default_notify_end ( struct ui_out* uiout )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Used in:\cell ui-out.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function default_spaces()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void default_spaces ( struct ui_out* uiout, int numspaces )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Used in:\cell ui-out.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function default_table_begin()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void default_table_begin ( struct ui_out* uiout, int nbrofcols, int nr_rows, const char* tblid )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Used in:\cell ui-out.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function default_table_body()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void default_table_body ( struct ui_out* uiout )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Used in:\cell ui-out.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function default_table_end()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void default_table_end ( struct ui_out* uiout )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Used in:\cell ui-out.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function default_table_header()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void default_table_header ( struct ui_out* uiout, int width, enum ui_align alignment, const char* col_name, const char* colhdr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Used in:\cell ui-out.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function default_text()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void default_text ( struct ui_out* uiout, const char* string )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Used in:\cell ui-out.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function default_text_fmt()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void default_text_fmt ( struct ui_out* uiout, const char* format, va_list args )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Used in:\cell ui-out.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function default_wrap_hint()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void default_wrap_hint ( struct ui_out* uiout, const char* identstring )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Used in:\cell ui-out.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function do_cleanup_end()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void do_cleanup_end ( void* data )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell ui_out_end()\cell ui-out.c\cell\row
\cell xfree()\cell utils.c\cell\row
Used in:\cell make_cleanup_ui_out_end()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function do_cleanup_table_end()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void do_cleanup_table_end ( void* data )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell ui_out_table_end()\cell ui-out.c\cell\row
Used in:\cell make_cleanup_ui_out_table_begin_end()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function do_stream_delete()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void do_stream_delete ( void* buf )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell ui_out_stream_delete()\cell ui-out.c\cell\row
Used in:\cell make_cleanup_ui_out_stream_delete()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function get_next_header()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int get_next_header ( struct ui_out* uiout, int* colno, int* width, int* alignment, char** colhdr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Called by:\cell verify_field()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function make_cleanup_ui_out_end()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct cleanup* make_cleanup_ui_out_end ( struct ui_out* uiout, enum ui_out_type type )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell make_cleanup()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
Called by:\cell make_cleanup_ui_out_list_begin_end()\cell ui-out.c\cell\row
\cell make_cleanup_ui_out_tuple_begin_end()\cell ui-out.c\cell\row
Refs Func:\cell do_cleanup_end()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function pop_level()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int pop_level ( struct ui_out* uiout, enum ui_out_type type )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell current_level()\cell ui-out.c\cell\row
\cell internal_error()\cell utils.c\cell\row
Called by:\cell ui_out_end()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function push_level()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int push_level ( struct ui_out* uiout, enum ui_out_type type, const char* id )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell current_level()\cell ui-out.c\cell\row
\cell internal_error()\cell utils.c\cell\row
Called by:\cell ui_out_begin()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function ui_out_notify_begin()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void ui_out_notify_begin ( struct ui_out* uiout, const char* the_class )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell uo_notify_begin()\cell ui-out.c\cell\row
Called by:\cell make_cleanup_ui_out_notify_begin_end()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function ui_out_notify_end()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void ui_out_notify_end ( void* uiout )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell uo_notify_end()\cell ui-out.c\cell\row
Used in:\cell make_cleanup_ui_out_notify_begin_end()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function ui_out_table_begin()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void ui_out_table_begin ( struct ui_out* uiout, int nbrofcols, int nr_rows, const char* tblid )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell clear_header_list()\cell ui-out.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell uo_table_begin()\cell ui-out.c\cell\row
\cell  xstrdup()\cell\cell\row
Called by:\cell make_cleanup_ui_out_table_begin_end()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function ui_out_table_end()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void ui_out_table_end ( struct ui_out* uiout )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Calls: \cell clear_header_list()\cell ui-out.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell uo_table_end()\cell ui-out.c\cell\row
\cell xfree()\cell utils.c\cell\row
Called by:\cell do_cleanup_table_end()\cell ui-out.c\cell\row
\cell ui_out_cleanup_after_error()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function uo_notify_begin()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void uo_notify_begin ( struct ui_out* uiout, const char* classp )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Called by:\cell ui_out_notify_begin()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function uo_notify_end()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void uo_notify_end ( struct ui_out* uiout )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Called by:\cell ui_out_notify_end()\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function verify_field()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void verify_field ( struct ui_out* uiout, int* fldno, int* width, int* align )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ui-out.c\cell\cell\row
Calls: \cell current_level()\cell ui-out.c\cell\row
\cell get_next_header()\cell ui-out.c\cell\row
\cell internal_error()\cell utils.c\cell\row
Called by:\cell ui_out_begin()\cell ui-out.c\cell\row
\cell ui_out_field_fmt()\cell ui-out.c\cell\row
\cell ui_out_field_fmt_int()\cell ui-out.c\cell\row
\cell ui_out_field_int()\cell ui-out.c\cell\row
\cell ui_out_field_skip()\cell ui-out.c\cell\row
\cell ui_out_field_string()\cell ui-out.c\cell\row
\intbl0
}
