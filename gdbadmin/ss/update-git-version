#!/bin/sh

PATH=/bin:/usr/bin:/usr/local/bin:$HOME/bin
export PATH

# Usage: version-file <git-options> clone <clone-options>
if test $# -eq 0
then
    cat <<EOF 1>&2
Usage: version-file <git-options> clone <clone-options>
EOF
    exit 1
fi


file=$1
shift

dir=src


workdir=/sourceware/snapshot-tmp/gdb/update-git-version.$$
mkdir -p ${workdir}
cd ${workdir}


date=`date -u +%Y-%m-%d`
DATE=`date -u +%Y%m%d`


echo ${date} "$@"


git "$@" $dir > /dev/null

# Loop in case pushing fails and we need to pull again first.
while true; do
    cd $dir
    sed \
	-e 's/[Y0-9][Y0-9][Y0-9][Y0-9]-[M0-9][M0-9]-[D0-9][D0-9]/'$date'/' \
	-e 's/[Y0-9][Y0-9][Y0-9][Y0-9][M0-9][M0-9][D0-9][D0-9]/'$DATE'/' \
	< ${file} > ${file}.new

    if diff ${file}.new ${file}
    then
	break
    else
	mv ${file}.new ${file}
	git commit -a -m '' --allow-empty-message \
	    --author='GDB Administrator <gdbadmin@sourceware.org>'
	if git push origin HEAD; then
	    break
	fi
	# Try again.
	if ! git pull --rebase; then
	    # If a pull failed, bail out.
	    break
	fi
    fi
done

cd
rm -rf ${workdir}
