# Makefile for program source directory in GNU NLS utilities package.
# Copyright (C) 1995, 1996, 1997 by Ulrich Drepper <drepper@gnu.ai.mit.edu>
# Copyright 2001, 2003 Free Software Foundation, Inc.
#
# This file may be copied and used freely without restrictions.  It can
# be used in projects which are not available under the GNU Public License
# but which still want to provide support for the GNU gettext functionality.
# Please note that the actual code is *not* freely available.

PACKAGE = @PACKAGE@
VERSION = @VERSION@

SHELL = /bin/sh
@SET_MAKE@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@

prefix = @prefix@
exec_prefix = @exec_prefix@
datadir = $(prefix)/@DATADIRNAME@
localedir = $(datadir)/locale
gnulocaledir = $(prefix)/share/locale
gettextsrcdir = $(prefix)/share/gettext/po
subdir = po

DESTDIR =

INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
MKINSTALLDIRS = @MKINSTALLDIRS@

CC = @CC@
GENCAT = @GENCAT@
GMSGFMT = PATH=../src:$${PATH} @GMSGFMT@
MSGFMT = @MSGFMT@
XGETTEXT = PATH=../src:$${PATH} @XGETTEXT@
MSGMERGE = PATH=../src:$${PATH} msgmerge

SED = @SED@

DEFS = @DEFS@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@

INCLUDES = -I.. -I$(top_srcdir)/intl

COMPILE = $(CC) -c $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(XCFLAGS)

SOURCES = cat-id-tbl.c
POFILES = @POFILES@
GMOFILES = @GMOFILES@
DISTFILES = ChangeLog Makefile.in.in SRC-POTFILES.in BLD-POTFILES.in $(PACKAGE).pot \
stamp-cat-id $(POFILES) $(GMOFILES) $(SOURCES)

# Note - the following line gets processed by bfd/configure and amended
# to contain the full list of source dir POTFILES.
SRC-POTFILES = \

# Note - the following line gets processed by bfd/configure and amended
# to contain the full list of build dir POTFILES.
BLD-POTFILES = \

CATALOGS = @CATALOGS@
CATOBJEXT = @CATOBJEXT@
INSTOBJEXT = @INSTOBJEXT@

.SUFFIXES:
.SUFFIXES: .c .o .po .pox .gmo .mo .msg .cat

.c.o:
	$(COMPILE) $<

.po.pox:
	$(MAKE) $(PACKAGE).pot
	$(MSGMERGE) $< $(srcdir)/$(PACKAGE).pot -o $*.pox

.po.mo:
	$(MSGFMT) -o $@ $<

.po.gmo:
	file=$(srcdir)/`echo $* | $(SED) 's,.*/,,'`.gmo \
	  && rm -f $${file} && $(GMSGFMT) -o $${file} $<

.po.cat:
	$(SED) -f ../intl/po2msg.sed < $< > $*.msg \
	  && rm -f $@ && $(GENCAT) $@ $*.msg


all: all-@USE_NLS@

all-yes: $(CATALOGS) @MAINT@ $(PACKAGE).pot
all-no:

$(srcdir)/$(PACKAGE).pot: $(SRC-POTFILES) $(BLD-POTFILES)
	$(XGETTEXT) --default-domain=$(PACKAGE) \
	  --directory=$(top_srcdir) \
	  --add-comments --keyword=_ --keyword=N_ \
	  --files-from=$(srcdir)/SRC-POTFILES.in 
	$(XGETTEXT) --default-domain=$(PACKAGE) \
	  --directory=.. \
	  --directory=. \
	  --add-comments --keyword=_ --keyword=N_ \
	  --join-existing \
	  --files-from=$(srcdir)/BLD-POTFILES.in
	if test -f $(PACKAGE).po; then \
		rm -f $(srcdir)/$(PACKAGE).pot; \
		mv $(PACKAGE).po $(srcdir)/$(PACKAGE).pot; \
	fi

$(srcdir)/cat-id-tbl.c: stamp-cat-id
	@echo "this target, '$@', just makes its dependency, '$<'"
$(srcdir)/stamp-cat-id: $(PACKAGE).pot
	rm -f cat-id-tbl.tmp
	$(SED) -f ../intl/po2tbl.sed $(srcdir)/$(PACKAGE).pot \
		| $(SED) -e "s/@PACKAGE NAME@/$(PACKAGE)/" > cat-id-tbl.tmp
	if cmp -s cat-id-tbl.tmp $(srcdir)/cat-id-tbl.c; then \
	  rm cat-id-tbl.tmp; \
	else \
	  echo "cat-id-tbl.c changed"; \
	  rm -f $(srcdir)/cat-id-tbl.c; \
	  mv cat-id-tbl.tmp $(srcdir)/cat-id-tbl.c; \
	fi
	cd $(srcdir) && rm -f stamp-cat-id && \
	  echo "timestamp" > stamp-cat-id


install: install-exec install-data
install-exec:
install-info:
install-data: install-data-@USE_NLS@
install-data-no: all
install-data-yes: all
	if test -r $(MKINSTALLDIRS); then \
	  $(MKINSTALLDIRS) $(DESTDIR)$(datadir); \
	else \
	  $(top_srcdir)/mkinstalldirs $(DESTDIR)$(datadir); \
	fi
	@catalogs='$(CATALOGS)'; \
	for cat in $${catalogs}; do \
	  cat=`basename $${cat}`; \
	  case "$${cat}" in \
	    *.gmo) destdir=$(gnulocaledir);; \
	    *)     destdir=$(localedir);; \
	  esac; \
	  lang=`echo $${cat} | $(SED) 's/\$(CATOBJEXT)$$//'`; \
	  dir=$(DESTDIR)$${destdir}/$${lang}/LC_MESSAGES; \
	  if test -r $(MKINSTALLDIRS); then \
	    $(MKINSTALLDIRS) $${dir}; \
	  else \
	    $(top_srcdir)/mkinstalldirs $${dir}; \
	  fi; \
	  if test -r $${cat}; then \
	    $(INSTALL_DATA) $${cat} $${dir}/$(PACKAGE)$(INSTOBJEXT); \
	    echo "installing $${cat} as $${dir}/$(PACKAGE)$(INSTOBJEXT)"; \
	  else \
	    $(INSTALL_DATA) $(srcdir)/$${cat} $${dir}/$(PACKAGE)$(INSTOBJEXT); \
	    echo "installing $(srcdir)/$${cat} as" \
		 "$${dir}/$(PACKAGE)$(INSTOBJEXT)"; \
	  fi; \
	  if test -r $${cat}.m; then \
	    $(INSTALL_DATA) $${cat}.m $${dir}/$(PACKAGE)$(INSTOBJEXT).m; \
	    echo "installing $${cat}.m as $${dir}/$(PACKAGE)$(INSTOBJEXT).m"; \
	  else \
	    if test -r $(srcdir)/$${cat}.m ; then \
	      $(INSTALL_DATA) $(srcdir)/$$cat.m \
		$$dir/$(PACKAGE)$(INSTOBJEXT).m; \
	      echo "installing $(srcdir)/$$cat as" \
		   "$$dir/$(PACKAGE)$(INSTOBJEXT).m"; \
	    else \
	      echo "$(srcdir)/$${cat}.m is not readable"; \
	    fi; \
	  fi; \
	done
	if test "x$(PACKAGE)" = "xgettext"; then \
	  if test -r $(MKINSTALLDIRS); then \
	    $(MKINSTALLDIRS) $(DESTDIR)$(gettextsrcdir); \
	  else \
	    $(top_srcdir)/mkinstalldirs $(DESTDIR)$(gettextsrcdir); \
	  fi; \
	  $(INSTALL_DATA) $(srcdir)/Makefile.in.in \
			  $(DESTDIR)$(gettextsrcdir)/Makefile.in.in; \
	else \
	  echo "we are NOT the gettext package itself"; \
	fi

# Define this as empty until I found a useful application.
installcheck:
.PHONY: installcheck

uninstall:
	catalogs='$(CATALOGS)'; \
	for cat in $${catalogs}; do \
	  cat=`basename $${cat}`; \
	  lang=`echo $${cat} | $(SED) 's/\$(CATOBJEXT)$$//'`; \
	  rm -fv $(DESTDIR)$(localedir)/$${lang}/LC_MESSAGES/$(PACKAGE)$(INSTOBJEXT); \
	  rm -fv $(DESTDIR)$(localedir)/$${lang}/LC_MESSAGES/$(PACKAGE)$(INSTOBJEXT).m; \
	  rm -fv $(DESTDIR)$(gnulocaledir)/$${lang}/LC_MESSAGES/$(PACKAGE)$(INSTOBJEXT); \
	  rm -fv $(DESTDIR)$(gnulocaledir)/$${lang}/LC_MESSAGES/$(PACKAGE)$(INSTOBJEXT).m; \
	done
	rm -fv $(DESTDIR)$(gettextsrcdir)/po-Makefile.in.in

check: all
.PHONY: check all

cat-id-tbl.o: ../intl/libgettext.h

dvi info tags TAGS ID: @MAINT@ all-no
.PHONY: dvi info

mostlyclean:
	rm -fv core core.* *.pox $(PACKAGE).po *.old.po cat-id-tbl.tmp
	rm -frv *.o
.PHONY: mostlyclean

clean: mostlyclean
.PHONY: clean

distclean: clean
	rm -fv Makefile Makefile.in *.mo *.msg *.cat *.cat.m
	rm -f SRC-POTFILES BLD-POTFILES
.PHONY: distclean

maintainer-clean: distclean
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."
	rm -fv $(GMOFILES) SRC-POTFILES.in BLD-POTFILES.in
.PHONY: maintainer-clean

distdir = ../$(PACKAGE)-$(VERSION)/$(subdir)
dist distdir: update-po $(DISTFILES)
	dists="$(DISTFILES)"; \
	for file in $${dists}; do \
	  ln $(srcdir)/$${file} $(distdir) 2>/dev/null \
	    || cp -pv $(srcdir)/$${file} $(distdir); \
	done

update-po: Makefile
	$(MAKE) $(PACKAGE).pot
	PATH=`pwd`/../src:$${PATH}; \
	cd $(srcdir); \
	catalogs='$(CATALOGS)'; \
	for cat in $${catalogs}; do \
	  cat=`basename $${cat}`; \
	  lang=`echo $${cat} | $(SED) 's/\$(CATOBJEXT)$$//'`; \
	  mv $${lang}.po $${lang}.old.po; \
	  echo "$${lang}:"; \
	  if $(MSGMERGE) $${lang}.old.po $(PACKAGE).pot -o $${lang}.po; then \
	    rm -f $${lang}.old.po; \
	  else \
	    echo "msgmerge for $${cat} failed!"; \
	    rm -f $${lang}.po; \
	    mv $${lang}.old.po $${lang}.po; \
	  fi; \
	done

SRC-POTFILES: SRC-POTFILES.in
	( if test 'x$(srcdir)' != 'x.'; then \
	    posrcprefix='$(top_srcdir)/'; \
	  else \
	    posrcprefix="../"; \
	  fi; \
	  rm -f $@-t $@ \
	    && ($(SED) -e '/^#/d' \
	            -e '/^[ 	]*$$/d' \
		    -e "s@.*@	$$posrcprefix& \\\\@" < $(srcdir)/$@.in \
		| $(SED) -e '$$s/\\$$//') > $@-t \
	    && chmod a-w $@-t \
	    && mv $@-t $@ )

BLD-POTFILES: BLD-POTFILES.in
	  ( rm -f $@-t $@ \
	    && ($(SED) -e '/^#/d' \
	            -e '/^[ 	]*$$/d' \
		    -e "s@.*@	../& \\\\@" < $(srcdir)/$@.in \
		| $(SED) -e '$$s/\\$$//') > $@-t \
	    && chmod a-w $@-t \
	    && mv $@-t $@ )

SRC-POTFILES.in: @MAINT@ ../Makefile
	cd .. && $(MAKE) po/SRC-POTFILES.in

BLD-POTFILES.in: @MAINT@ ../Makefile
	cd .. && $(MAKE) po/BLD-POTFILES.in

# Note - The presence of SRC-POTFILES and BLD-POTFILES as dependencies
# here breaks the implementation of the 'distclean' rule for maintainers.
# This is because if 'make distclean' is run in the BFD directory, the
# Makefile there will be deleted before 'distclean' is made here, and so
# the dependency SRC-POTFILES -> SRC-POTFILES.in -> ../Makefile cannot
# be satisfied.
#
# The SRC-POTFILES and BLD-POTFILES dependencies cannot be removed,
# however since it is necessary that these files be built during
# *configure* time, so that configure can insert them into the
# po/Makefile that it is creating, so that the Makefile will have
# the correct dependencies.
Makefile: Make-in ../config.status SRC-POTFILES BLD-POTFILES
	cd .. \
	  && CONFIG_FILES=$(subdir)/Makefile.in:$(subdir)/Make-in \
	     CONFIG_HEADERS="" $(SHELL) ./config.status

# Tell versions [3.59,3.63) of GNU make not to export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
