/Developer/Applications/Xcode.app/Contents/PlugIns/DebuggerGDB.ideplugin/Contents/MacOS/DebuggerGDB:
(__TEXT,__text) section
+[PBXGDB_CommandSequence initialize]:
0000000000001310	pushq	%rbp
0000000000001311	movq	%rsp,%rbp
0000000000001314	pushq	%r15
0000000000001316	pushq	%r14
0000000000001318	pushq	%r12
000000000000131a	pushq	%rbx
000000000000131b	movq	%rdi,%rbx
000000000000131e	movq	0x000a73c3(%rip),%rdi
0000000000001325	leaq	0x000a7004(%rip),%rsi
000000000000132c	call	*0x000a6ffe(%rip)
0000000000001332	cmpq	%rbx,%rax
0000000000001335	jne	0x000013b2
0000000000001337	movq	0x000a733a(%rip),%rbx
000000000000133e	movq	0x000a466b(%rip),%rsi
0000000000001345	movq	0x000a73a4(%rip),%rdi
000000000000134c	movq	0x00082d85(%rip),%r12
0000000000001353	movl	$0x00000001,%edx
0000000000001358	call	*%r12
000000000000135b	movq	0x000a4656(%rip),%rsi
0000000000001362	leaq	0x000af86f(%rip),%r14
0000000000001369	movq	%rbx,%rdi
000000000000136c	movq	%rax,%rdx
000000000000136f	movq	%r14,%rcx
0000000000001372	call	*%r12
0000000000001375	movq	%rax,%r15
0000000000001378	movq	0x000a39f1(%rip),%rsi
000000000000137f	movq	0x000a713a(%rip),%rdi
0000000000001386	call	*%r12
0000000000001389	movq	%rax,%rbx
000000000000138c	movq	0x000a462d(%rip),%rsi
0000000000001393	movq	%rbx,%rdi
0000000000001396	movq	%r15,%rdx
0000000000001399	call	*%r12
000000000000139c	movq	0x000a39d5(%rip),%rsi
00000000000013a3	movq	%rbx,%rdi
00000000000013a6	movq	%r14,%rdx
00000000000013a9	call	*%r12
00000000000013ac	movb	%al,0x000b62de(%rip)
00000000000013b2	popq	%rbx
00000000000013b3	popq	%r12
00000000000013b5	popq	%r14
00000000000013b7	popq	%r15
00000000000013b9	popq	%rbp
00000000000013ba	ret
00000000000013bb	nop
00000000000013bc	nop
00000000000013bd	nop
00000000000013be	nop
00000000000013bf	nop
-[DBGGDBLauncher initWithExtensionIdentifier:launchSession:]:
00000000000013c0	pushq	%rbp
00000000000013c1	movq	%rsp,%rbp
00000000000013c4	pushq	%r15
00000000000013c6	pushq	%r14
00000000000013c8	pushq	%r12
00000000000013ca	pushq	%rbx
00000000000013cb	subq	$0x10,%rsp
00000000000013cf	movq	%rcx,%r14
00000000000013d2	movq	%rdi,0xd0(%rbp)
00000000000013d6	movq	0x000a7c7b(%rip),%rax
00000000000013dd	movq	%rax,0xd8(%rbp)
00000000000013e1	movq	0x000a6560(%rip),%rsi
00000000000013e8	leaq	0xd0(%rbp),%rdi
00000000000013ec	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000013f1	movq	%rax,%rbx
00000000000013f4	testq	%rbx,%rbx
00000000000013f7	je	0x0000149f
00000000000013fd	movq	0x000a7774(%rip),%rdi
0000000000001404	leaq	0x000a6ed5(%rip),%r15
000000000000140b	movq	%r15,%rsi
000000000000140e	call	*0x000a6ecc(%rip)
0000000000001414	movq	0x000a3655(%rip),%rsi
000000000000141b	movq	0x00082cb6(%rip),%r12
0000000000001422	movq	%rax,%rdi
0000000000001425	call	*%r12
0000000000001428	movq	0x000ae0c9(%rip),%rdx
000000000000142f	movq	%rax,%rdi
0000000000001432	movq	%rbx,%rsi
0000000000001435	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000000143a	movq	0x000a7757(%rip),%rdi
0000000000001441	movq	%r15,%rsi
0000000000001444	call	*0x000a6e96(%rip)
000000000000144a	movq	0x000ae0a7(%rip),%rcx
0000000000001451	movq	(%rbx,%rcx),%rcx
0000000000001455	movq	0x000a64f4(%rip),%rsi
000000000000145c	movq	%rax,%rdi
000000000000145f	movq	%rbx,%rdx
0000000000001462	call	*%r12
0000000000001465	movq	0x000ae094(%rip),%rdx
000000000000146c	movq	%rax,%rdi
000000000000146f	movq	%rbx,%rsi
0000000000001472	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000001477	movq	0x000a64da(%rip),%rsi
000000000000147e	movq	%r14,%rdi
0000000000001481	call	*%r12
0000000000001484	leaq	0x000a6e75(%rip),%rsi
000000000000148b	movq	0x000ae06e(%rip),%rcx
0000000000001492	movq	(%rbx,%rcx),%rdx
0000000000001496	movq	%rax,%rdi
0000000000001499	call	*0x000a6e61(%rip)
000000000000149f	movq	%rbx,%rax
00000000000014a2	addq	$0x10,%rsp
00000000000014a6	popq	%rbx
00000000000014a7	popq	%r12
00000000000014a9	popq	%r14
00000000000014ab	popq	%r15
00000000000014ad	popq	%rbp
00000000000014ae	ret
00000000000014af	nop
-[PBXLSDebuggingSession init]:
00000000000014b0	pushq	%rbp
00000000000014b1	movq	%rsp,%rbp
00000000000014b4	pushq	%r14
00000000000014b6	pushq	%rbx
00000000000014b7	subq	$0x10,%rsp
00000000000014bb	movq	%rdi,0xe0(%rbp)
00000000000014bf	movq	0x000a7b82(%rip),%rax
00000000000014c6	movq	%rax,0xe8(%rbp)
00000000000014ca	movq	0x000a359f(%rip),%rsi
00000000000014d1	leaq	0xe0(%rbp),%rdi
00000000000014d5	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000014da	movq	%rax,%rbx
00000000000014dd	testq	%rbx,%rbx
00000000000014e0	je	0x00001548
00000000000014e2	movq	0x000a7677(%rip),%rdi
00000000000014e9	leaq	0x000a6df0(%rip),%rsi
00000000000014f0	call	*0x000a6dea(%rip)
00000000000014f6	movq	0x000a3853(%rip),%rsi
00000000000014fd	movq	0x00082bd4(%rip),%r14
0000000000001504	movq	%rax,%rdi
0000000000001507	xorl	%edx,%edx
0000000000001509	call	*%r14
000000000000150c	movq	0x000adf95(%rip),%rdx
0000000000001513	movq	%rax,%rdi
0000000000001516	movq	%rbx,%rsi
0000000000001519	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000000151e	movq	0x000a628b(%rip),%rsi
0000000000001525	movq	0x000a7654(%rip),%rdi
000000000000152c	movl	$0x00000200,%edx
0000000000001531	xorl	%ecx,%ecx
0000000000001533	call	*%r14
0000000000001536	movq	0x000adf73(%rip),%rdx
000000000000153d	movq	%rax,%rdi
0000000000001540	movq	%rbx,%rsi
0000000000001543	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000001548	movq	%rbx,%rax
000000000000154b	addq	$0x10,%rsp
000000000000154f	popq	%rbx
0000000000001550	popq	%r14
0000000000001552	popq	%rbp
0000000000001553	ret
-[PBXLSLaunchSession init]:
0000000000001554	pushq	%rbp
0000000000001555	movq	%rsp,%rbp
0000000000001558	pushq	%rbx
0000000000001559	subq	$0x18,%rsp
000000000000155d	movq	%rdi,0xe8(%rbp)
0000000000001561	movq	0x000a7ae8(%rip),%rax
0000000000001568	movq	%rax,0xf0(%rbp)
000000000000156c	movq	0x000a34fd(%rip),%rsi
0000000000001573	leaq	0xe8(%rbp),%rdi
0000000000001577	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000000157c	movq	%rax,%rbx
000000000000157f	testq	%rbx,%rbx
0000000000001582	je	0x000015ba
0000000000001584	movq	0x000a6f25(%rip),%rdi
000000000000158b	leaq	0x000a6d4e(%rip),%rsi
0000000000001592	call	*0x000a6d48(%rip)
0000000000001598	movq	0x000a34d1(%rip),%rsi
000000000000159f	movq	%rax,%rdi
00000000000015a2	call	*0x00082b30(%rip)
00000000000015a8	movq	0x000adf29(%rip),%rdx
00000000000015af	movq	%rax,%rdi
00000000000015b2	movq	%rbx,%rsi
00000000000015b5	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000015ba	movq	%rbx,%rax
00000000000015bd	addq	$0x18,%rsp
00000000000015c1	popq	%rbx
00000000000015c2	popq	%rbp
00000000000015c3	ret
+[PBXLSModel initialize]:
00000000000015c4	pushq	%rbp
00000000000015c5	movq	%rsp,%rbp
00000000000015c8	pushq	%rbx
00000000000015c9	pushq	%rax
00000000000015ca	movq	%rdi,%rbx
00000000000015cd	movq	0x000a757c(%rip),%rdi
00000000000015d4	leaq	0x000a6d55(%rip),%rsi
00000000000015db	call	*0x000a6d4f(%rip)
00000000000015e1	cmpq	%rbx,%rax
00000000000015e4	je	0x000015ed
00000000000015e6	addq	$0x08,%rsp
00000000000015ea	popq	%rbx
00000000000015eb	popq	%rbp
00000000000015ec	ret
00000000000015ed	movq	0x000a5ef4(%rip),%rsi
00000000000015f4	leaq	0x000b253d(%rip),%rdx
00000000000015fb	leaq	0x000b3f76(%rip),%rcx
0000000000001602	movq	%rbx,%rdi
0000000000001605	addq	$0x08,%rsp
0000000000001609	popq	%rbx
000000000000160a	popq	%rbp
000000000000160b	jmp	*0x00082ac7(%rip)
0000000000001611	nop
0000000000001612	nop
0000000000001613	nop
0000000000001614	nop
0000000000001615	nop
0000000000001616	nop
0000000000001617	nop
0000000000001618	nop
0000000000001619	nop
000000000000161a	nop
000000000000161b	nop
000000000000161c	nop
000000000000161d	nop
000000000000161e	nop
000000000000161f	nop
-[PBXLSProcess initWithDebugger:]:
0000000000001620	pushq	%rbp
0000000000001621	movq	%rsp,%rbp
0000000000001624	pushq	%r14
0000000000001626	pushq	%rbx
0000000000001627	subq	$0x10,%rsp
000000000000162b	movq	%rdx,%r14
000000000000162e	movq	%rdi,0xe0(%rbp)
0000000000001632	movq	0x000a79d7(%rip),%rax
0000000000001639	movq	%rax,0xe8(%rbp)
000000000000163d	movq	0x000a370c(%rip),%rsi
0000000000001644	leaq	0xe0(%rbp),%rdi
0000000000001648	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000000164d	movq	%rax,%rbx
0000000000001650	movq	0x000adcc9(%rip),%rdx
0000000000001657	xorl	%edi,%edi
0000000000001659	movq	%rbx,%rsi
000000000000165c	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000001661	leaq	0x000a6c78(%rip),%rsi
0000000000001668	movq	0x000a74e9(%rip),%rdi
000000000000166f	call	*0x000a6c6b(%rip)
0000000000001675	movq	0x000a36d4(%rip),%rsi
000000000000167c	movq	%rax,%rdi
000000000000167f	movq	%r14,%rdx
0000000000001682	call	*0x00082a50(%rip)
0000000000001688	movq	0x000adc99(%rip),%rdx
000000000000168f	movq	%rax,%rdi
0000000000001692	movq	%rbx,%rsi
0000000000001695	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000000169a	movq	%rbx,%rax
000000000000169d	addq	$0x10,%rsp
00000000000016a1	popq	%rbx
00000000000016a2	popq	%r14
00000000000016a4	popq	%rbp
00000000000016a5	ret
00000000000016a6	nop
00000000000016a7	nop
00000000000016a8	nop
-[PBXLSModel initWithDebugger:]:
00000000000016a9	pushq	%rbp
00000000000016aa	movq	%rsp,%rbp
00000000000016ad	pushq	%r14
00000000000016af	pushq	%rbx
00000000000016b0	subq	$0x10,%rsp
00000000000016b4	movq	%rdx,%r14
00000000000016b7	movq	%rdi,0xe0(%rbp)
00000000000016bb	movq	0x000a7946(%rip),%rax
00000000000016c2	movq	%rax,0xe8(%rbp)
00000000000016c6	movq	0x000a33a3(%rip),%rsi
00000000000016cd	leaq	0xe0(%rbp),%rdi
00000000000016d1	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000016d6	movq	%rax,%rbx
00000000000016d9	movq	0x000adc18(%rip),%rdx
00000000000016e0	movq	%r14,%rdi
00000000000016e3	movq	%rbx,%rsi
00000000000016e6	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000016eb	movq	0x000adc0e(%rip),%rax
00000000000016f2	movl	$0x00000002,(%rbx,%rax)
00000000000016f9	movq	0x000a3d30(%rip),%rsi
0000000000001700	movq	0x000a6d59(%rip),%rdi
0000000000001707	call	*0x000829cb(%rip)
000000000000170d	movq	0x000adbf4(%rip),%rdx
0000000000001714	movq	%rax,%rdi
0000000000001717	movq	%rbx,%rsi
000000000000171a	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000000171f	movq	%rbx,%rax
0000000000001722	addq	$0x10,%rsp
0000000000001726	popq	%rbx
0000000000001727	popq	%r14
0000000000001729	popq	%rbp
000000000000172a	ret
-[PBXLSDynamicLinkerImageController initWithDebugger:]:
000000000000172b	pushq	%rbp
000000000000172c	movq	%rsp,%rbp
000000000000172f	pushq	%r15
0000000000001731	pushq	%r14
0000000000001733	pushq	%r12
0000000000001735	pushq	%rbx
0000000000001736	subq	$0x10,%rsp
000000000000173a	movq	%rdi,0xd0(%rbp)
000000000000173e	movq	0x000a78bb(%rip),%rax
0000000000001745	movq	%rax,0xd8(%rbp)
0000000000001749	movq	0x000a3600(%rip),%rsi
0000000000001750	leaq	0xd0(%rbp),%rdi
0000000000001754	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000001759	movq	%rax,%r15
000000000000175c	movq	0x00082975(%rip),%r12
0000000000001763	leaq	0x000adbae(%rip),%rax
000000000000176a	movq	(%rax),%rax
000000000000176d	movl	$0x00000002,(%r15,%rax)
0000000000001775	movq	0x000a3e64(%rip),%rsi
000000000000177c	movq	%r15,%rdi
000000000000177f	movl	$0x00000002,%edx
0000000000001784	call	*%r12
0000000000001787	leaq	0x000a6b52(%rip),%r14
000000000000178e	movq	0x000a6d1b(%rip),%rdi
0000000000001795	movq	%r14,%rsi
0000000000001798	call	*0x000a6b42(%rip)
000000000000179e	movq	0x000a32cb(%rip),%rsi
00000000000017a5	movq	%rax,%rdi
00000000000017a8	call	*%r12
00000000000017ab	movq	0x000adb36(%rip),%rdx
00000000000017b2	movq	%rax,%rdi
00000000000017b5	movq	%r15,%rsi
00000000000017b8	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000017bd	movq	0x000a6cec(%rip),%rdi
00000000000017c4	movq	%r14,%rsi
00000000000017c7	call	*0x000a6b13(%rip)
00000000000017cd	movq	0x000a329c(%rip),%rsi
00000000000017d4	movq	%rax,%rdi
00000000000017d7	call	*%r12
00000000000017da	movq	0x000adb0f(%rip),%rdx
00000000000017e1	movq	%rax,%rdi
00000000000017e4	movq	%r15,%rsi
00000000000017e7	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000017ec	movq	0x000a71fd(%rip),%rdi
00000000000017f3	movq	%r14,%rsi
00000000000017f6	call	*0x000a6ae4(%rip)
00000000000017fc	movq	0x000a326d(%rip),%rsi
0000000000001803	movq	%rax,%rdi
0000000000001806	call	*%r12
0000000000001809	movq	%rax,%rbx
000000000000180c	movq	0x000a497d(%rip),%rsi
0000000000001813	movq	%rbx,%rdi
0000000000001816	movl	$0x00000003,%edx
000000000000181b	call	*%r12
000000000000181e	movq	0x000a52d3(%rip),%rsi
0000000000001825	movq	%rbx,%rdi
0000000000001828	movl	$0x00000003,%edx
000000000000182d	call	*%r12
0000000000001830	leaq	0x000b3c01(%rip),%rdx
0000000000001837	movq	0x000a361a(%rip),%rsi
000000000000183e	movq	%rbx,%rdi
0000000000001841	call	*%r12
0000000000001844	movq	0x000a5c1d(%rip),%rsi
000000000000184b	movq	%r15,%rdi
000000000000184e	movq	%rbx,%rdx
0000000000001851	call	*%r12
0000000000001854	movq	0x000a7195(%rip),%rdi
000000000000185b	movq	%r14,%rsi
000000000000185e	call	*0x000a6a7c(%rip)
0000000000001864	movq	0x000a3205(%rip),%rsi
000000000000186b	movq	%rax,%rdi
000000000000186e	call	*%r12
0000000000001871	movq	%rax,%rbx
0000000000001874	movq	0x000a4915(%rip),%rsi
000000000000187b	movq	%rbx,%rdi
000000000000187e	movl	$0x00000003,%edx
0000000000001883	call	*%r12
0000000000001886	movq	0x000a526b(%rip),%rsi
000000000000188d	movq	%rbx,%rdi
0000000000001890	movl	$0x00000003,%edx
0000000000001895	call	*%r12
0000000000001898	leaq	0x000b3bb9(%rip),%rdx
000000000000189f	movq	0x000a35b2(%rip),%rsi
00000000000018a6	movq	%rbx,%rdi
00000000000018a9	call	*%r12
00000000000018ac	movq	0x000a5bb5(%rip),%rsi
00000000000018b3	movq	%r15,%rdi
00000000000018b6	movq	%rbx,%rdx
00000000000018b9	call	*%r12
00000000000018bc	movq	0x000a712d(%rip),%rdi
00000000000018c3	movq	%r14,%rsi
00000000000018c6	call	*0x000a6a14(%rip)
00000000000018cc	movq	0x000a319d(%rip),%rsi
00000000000018d3	movq	%rax,%rdi
00000000000018d6	call	*%r12
00000000000018d9	movq	%rax,%rbx
00000000000018dc	movq	0x000a48ad(%rip),%rsi
00000000000018e3	movq	%rbx,%rdi
00000000000018e6	movl	$0x00000003,%edx
00000000000018eb	call	*%r12
00000000000018ee	movq	0x000a5203(%rip),%rsi
00000000000018f5	movq	%rbx,%rdi
00000000000018f8	movl	$0x00000003,%edx
00000000000018fd	call	*%r12
0000000000001900	leaq	0x000b3b71(%rip),%rdx
0000000000001907	movq	0x000a354a(%rip),%rsi
000000000000190e	movq	%rbx,%rdi
0000000000001911	call	*%r12
0000000000001914	movq	0x000a5b4d(%rip),%rsi
000000000000191b	movq	%r15,%rdi
000000000000191e	movq	%rbx,%rdx
0000000000001921	call	*%r12
0000000000001924	movq	0x000a70c5(%rip),%rdi
000000000000192b	movq	%r14,%rsi
000000000000192e	call	*0x000a69ac(%rip)
0000000000001934	movq	0x000a3135(%rip),%rsi
000000000000193b	movq	%rax,%rdi
000000000000193e	call	*%r12
0000000000001941	movq	%rax,%rbx
0000000000001944	movq	0x000a4845(%rip),%rsi
000000000000194b	movq	%rbx,%rdi
000000000000194e	movl	$0x00000003,%edx
0000000000001953	call	*%r12
0000000000001956	movq	0x000a519b(%rip),%rsi
000000000000195d	movq	%rbx,%rdi
0000000000001960	movl	$0x00000003,%edx
0000000000001965	call	*%r12
0000000000001968	leaq	0x000b3b29(%rip),%rdx
000000000000196f	movq	0x000a34e2(%rip),%rsi
0000000000001976	movq	%rbx,%rdi
0000000000001979	call	*%r12
000000000000197c	movq	0x000a5ae5(%rip),%rsi
0000000000001983	movq	%r15,%rdi
0000000000001986	movq	%rbx,%rdx
0000000000001989	call	*%r12
000000000000198c	movq	0x000a705d(%rip),%rdi
0000000000001993	movq	%r14,%rsi
0000000000001996	call	*0x000a6944(%rip)
000000000000199c	movq	0x000a30cd(%rip),%rsi
00000000000019a3	movq	%rax,%rdi
00000000000019a6	call	*%r12
00000000000019a9	movq	%rax,%rbx
00000000000019ac	movq	0x000a47dd(%rip),%rsi
00000000000019b3	movq	%rbx,%rdi
00000000000019b6	movl	$0x00000003,%edx
00000000000019bb	call	*%r12
00000000000019be	movq	0x000a5133(%rip),%rsi
00000000000019c5	movq	%rbx,%rdi
00000000000019c8	movl	$0x00000003,%edx
00000000000019cd	call	*%r12
00000000000019d0	leaq	0x000b3ae1(%rip),%rdx
00000000000019d7	movq	0x000a347a(%rip),%rsi
00000000000019de	movq	%rbx,%rdi
00000000000019e1	call	*%r12
00000000000019e4	movq	0x000a5a7d(%rip),%rsi
00000000000019eb	movq	%r15,%rdi
00000000000019ee	movq	%rbx,%rdx
00000000000019f1	call	*%r12
00000000000019f4	movq	0x000a6ff5(%rip),%rdi
00000000000019fb	movq	%r14,%rsi
00000000000019fe	call	*0x000a68dc(%rip)
0000000000001a04	movq	0x000a3065(%rip),%rsi
0000000000001a0b	movq	%rax,%rdi
0000000000001a0e	call	*%r12
0000000000001a11	movq	%rax,%rbx
0000000000001a14	movq	0x000a4775(%rip),%rsi
0000000000001a1b	movq	%rbx,%rdi
0000000000001a1e	movl	$0x00000003,%edx
0000000000001a23	call	*%r12
0000000000001a26	movq	0x000a50cb(%rip),%rsi
0000000000001a2d	movq	%rbx,%rdi
0000000000001a30	movl	$0x00000003,%edx
0000000000001a35	call	*%r12
0000000000001a38	leaq	0x000b3a99(%rip),%rdx
0000000000001a3f	movq	0x000a3412(%rip),%rsi
0000000000001a46	movq	%rbx,%rdi
0000000000001a49	call	*%r12
0000000000001a4c	movq	0x000a5a15(%rip),%rsi
0000000000001a53	movq	%r15,%rdi
0000000000001a56	movq	%rbx,%rdx
0000000000001a59	call	*%r12
0000000000001a5c	movq	0x000a6f8d(%rip),%rdi
0000000000001a63	movq	%r14,%rsi
0000000000001a66	call	*0x000a6874(%rip)
0000000000001a6c	movq	0x000a2ffd(%rip),%rsi
0000000000001a73	movq	%rax,%rdi
0000000000001a76	call	*%r12
0000000000001a79	movq	%rax,%rbx
0000000000001a7c	movq	0x000a470d(%rip),%rsi
0000000000001a83	movq	%rbx,%rdi
0000000000001a86	movl	$0x00000003,%edx
0000000000001a8b	call	*%r12
0000000000001a8e	movq	0x000a5063(%rip),%rsi
0000000000001a95	movq	%rbx,%rdi
0000000000001a98	movl	$0x00000003,%edx
0000000000001a9d	call	*%r12
0000000000001aa0	leaq	0x000b3a51(%rip),%rdx
0000000000001aa7	movq	0x000a33aa(%rip),%rsi
0000000000001aae	movq	%rbx,%rdi
0000000000001ab1	call	*%r12
0000000000001ab4	movq	0x000a59ad(%rip),%rsi
0000000000001abb	movq	%r15,%rdi
0000000000001abe	movq	%rbx,%rdx
0000000000001ac1	call	*%r12
0000000000001ac4	movq	0x000a6f25(%rip),%rdi
0000000000001acb	movq	%r14,%rsi
0000000000001ace	call	*0x000a680c(%rip)
0000000000001ad4	movq	0x000a2f95(%rip),%rsi
0000000000001adb	movq	%rax,%rdi
0000000000001ade	call	*%r12
0000000000001ae1	movq	%rax,%rbx
0000000000001ae4	movq	0x000a46a5(%rip),%rsi
0000000000001aeb	movq	%rbx,%rdi
0000000000001aee	movl	$0x00000003,%edx
0000000000001af3	call	*%r12
0000000000001af6	movq	0x000a4ffb(%rip),%rsi
0000000000001afd	movq	%rbx,%rdi
0000000000001b00	movl	$0x00000003,%edx
0000000000001b05	call	*%r12
0000000000001b08	leaq	0x000b3a09(%rip),%rdx
0000000000001b0f	movq	0x000a3342(%rip),%rsi
0000000000001b16	movq	%rbx,%rdi
0000000000001b19	call	*%r12
0000000000001b1c	movq	0x000a5945(%rip),%rsi
0000000000001b23	movq	%r15,%rdi
0000000000001b26	movq	%rbx,%rdx
0000000000001b29	call	*%r12
0000000000001b2c	movq	0x000a6ebd(%rip),%rdi
0000000000001b33	movq	%r14,%rsi
0000000000001b36	call	*0x000a67a4(%rip)
0000000000001b3c	movq	0x000a2f2d(%rip),%rsi
0000000000001b43	movq	%rax,%rdi
0000000000001b46	call	*%r12
0000000000001b49	movq	%rax,%rbx
0000000000001b4c	movq	0x000a463d(%rip),%rsi
0000000000001b53	movq	%rbx,%rdi
0000000000001b56	movl	$0x00000003,%edx
0000000000001b5b	call	*%r12
0000000000001b5e	movq	0x000a4f93(%rip),%rsi
0000000000001b65	movq	%rbx,%rdi
0000000000001b68	movl	$0x00000003,%edx
0000000000001b6d	call	*%r12
0000000000001b70	leaq	0x000b39c1(%rip),%rdx
0000000000001b77	movq	0x000a32da(%rip),%rsi
0000000000001b7e	movq	%rbx,%rdi
0000000000001b81	call	*%r12
0000000000001b84	movq	0x000a58dd(%rip),%rsi
0000000000001b8b	movq	%r15,%rdi
0000000000001b8e	movq	%rbx,%rdx
0000000000001b91	call	*%r12
0000000000001b94	movq	0x000a6e55(%rip),%rdi
0000000000001b9b	movq	%r14,%rsi
0000000000001b9e	call	*0x000a673c(%rip)
0000000000001ba4	movq	0x000a2ec5(%rip),%rsi
0000000000001bab	movq	%rax,%rdi
0000000000001bae	call	*%r12
0000000000001bb1	movq	%rax,%rbx
0000000000001bb4	movq	0x000a45d5(%rip),%rsi
0000000000001bbb	movq	%rbx,%rdi
0000000000001bbe	movl	$0x00000003,%edx
0000000000001bc3	call	*%r12
0000000000001bc6	movq	0x000a4f2b(%rip),%rsi
0000000000001bcd	movq	%rbx,%rdi
0000000000001bd0	movl	$0x00000003,%edx
0000000000001bd5	call	*%r12
0000000000001bd8	leaq	0x000b3979(%rip),%rdx
0000000000001bdf	movq	0x000a3272(%rip),%rsi
0000000000001be6	movq	%rbx,%rdi
0000000000001be9	call	*%r12
0000000000001bec	movq	0x000a5875(%rip),%rsi
0000000000001bf3	movq	%r15,%rdi
0000000000001bf6	movq	%rbx,%rdx
0000000000001bf9	call	*%r12
0000000000001bfc	movq	%r15,%rax
0000000000001bff	addq	$0x10,%rsp
0000000000001c03	popq	%rbx
0000000000001c04	popq	%r12
0000000000001c06	popq	%r14
0000000000001c08	popq	%r15
0000000000001c0a	popq	%rbp
0000000000001c0b	ret
0000000000001c0c	nop
0000000000001c0d	nop
-[PBXLSModel setValidityStatus:]:
0000000000001c0e	pushq	%rbp
0000000000001c0f	movq	%rsp,%rbp
0000000000001c12	movq	0x000ad6e7(%rip),%rax
0000000000001c19	movl	%edx,(%rdi,%rax)
0000000000001c1c	popq	%rbp
0000000000001c1d	ret
0000000000001c1e	nop
-[PBXLSDynamicLinkerImage init]:
0000000000001c1f	pushq	%rbp
0000000000001c20	movq	%rsp,%rbp
0000000000001c23	subq	$0x10,%rsp
0000000000001c27	movq	%rdi,0xf0(%rbp)
0000000000001c2b	movq	0x000a73c6(%rip),%rax
0000000000001c32	movq	%rax,0xf8(%rbp)
0000000000001c36	movq	0x000a3113(%rip),%rsi
0000000000001c3d	leaq	0xf0(%rbp),%rdi
0000000000001c41	xorl	%edx,%edx
0000000000001c43	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000001c48	movq	0x000ad659(%rip),%rcx
0000000000001c4f	movl	$0x00000000,(%rax,%rcx)
0000000000001c56	movq	0x000ad653(%rip),%rcx
0000000000001c5d	movl	$0x00000001,(%rax,%rcx)
0000000000001c64	movq	0x000ad64d(%rip),%rcx
0000000000001c6b	movl	$0x00000000,(%rax,%rcx)
0000000000001c72	movq	0x000ad647(%rip),%rcx
0000000000001c79	movl	$0x00000000,(%rax,%rcx)
0000000000001c80	addq	$0x10,%rsp
0000000000001c84	popq	%rbp
0000000000001c85	ret
0000000000001c86	nop
0000000000001c87	nop
-[PBXLSDynamicLinkerImage setSymbolsLevel:]:
0000000000001c88	pushq	%rbp
0000000000001c89	movq	%rsp,%rbp
0000000000001c8c	movq	0x000ad61d(%rip),%rax
0000000000001c93	movl	%edx,(%rdi,%rax)
0000000000001c96	popq	%rbp
0000000000001c97	ret
-[PBXLSDynamicLinkerImage setSymbolsLoadTime:]:
0000000000001c98	pushq	%rbp
0000000000001c99	movq	%rsp,%rbp
0000000000001c9c	movq	0x000ad615(%rip),%rax
0000000000001ca3	movl	%edx,(%rdi,%rax)
0000000000001ca6	popq	%rbp
0000000000001ca7	ret
-[PBXLSDynamicLinkerImage setName:]:
0000000000001ca8	pushq	%rbp
0000000000001ca9	movq	%rsp,%rbp
0000000000001cac	movq	%rdx,%rax
0000000000001caf	movq	%rdi,%rcx
0000000000001cb2	movq	0x000ad617(%rip),%rdx
0000000000001cb9	cmpq	%rax,(%rcx,%rdx)
0000000000001cbd	jne	0x00001cc1
0000000000001cbf	popq	%rbp
0000000000001cc0	ret
0000000000001cc1	addq	%rcx,%rdx
0000000000001cc4	subq	%rcx,%rdx
0000000000001cc7	movq	%rax,%rdi
0000000000001cca	movq	%rcx,%rsi
0000000000001ccd	popq	%rbp
0000000000001cce	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXLSDynamicLinkerImageController _addPersistentImage:]:
0000000000001cd3	pushq	%rbp
0000000000001cd4	movq	%rsp,%rbp
0000000000001cd7	movq	0x000ad60a(%rip),%rax
0000000000001cde	movq	(%rdi,%rax),%rcx
0000000000001ce2	movq	0x000a5787(%rip),%rsi
0000000000001ce9	popq	%rbp
0000000000001cea	jmp	*0x000823e8(%rip)
-[PBXLSDynamicLinkerImageController _addImage:toDictionary:]:
0000000000001cf0	pushq	%rbp
0000000000001cf1	movq	%rsp,%rbp
0000000000001cf4	pushq	%r15
0000000000001cf6	pushq	%r14
0000000000001cf8	pushq	%r12
0000000000001cfa	pushq	%rbx
0000000000001cfb	movq	%rcx,%r14
0000000000001cfe	movq	%rdx,%rbx
0000000000001d01	movq	0x000a3678(%rip),%rsi
0000000000001d08	movq	0x000823c9(%rip),%r15
0000000000001d0f	movq	%rbx,%rdi
0000000000001d12	call	*%r15
0000000000001d15	movq	%rax,%r12
0000000000001d18	movq	0x000a2f81(%rip),%rsi
0000000000001d1f	movq	%rbx,%rdi
0000000000001d22	call	*%r15
0000000000001d25	movq	%rax,%r15
0000000000001d28	testq	%r12,%r12
0000000000001d2b	je	0x00001d43
0000000000001d2d	movq	0x000a2ffc(%rip),%rsi
0000000000001d34	movq	%r14,%rdi
0000000000001d37	movq	%rbx,%rdx
0000000000001d3a	movq	%r12,%rcx
0000000000001d3d	call	*0x00082395(%rip)
0000000000001d43	testq	%r15,%r15
0000000000001d46	jne	0x00001d51
0000000000001d48	popq	%rbx
0000000000001d49	popq	%r12
0000000000001d4b	popq	%r14
0000000000001d4d	popq	%r15
0000000000001d4f	popq	%rbp
0000000000001d50	ret
0000000000001d51	movq	0x000a2fd8(%rip),%rsi
0000000000001d58	movq	%r14,%rdi
0000000000001d5b	movq	%rbx,%rdx
0000000000001d5e	movq	%r15,%rcx
0000000000001d61	popq	%rbx
0000000000001d62	popq	%r12
0000000000001d64	popq	%r14
0000000000001d66	popq	%r15
0000000000001d68	popq	%rbp
0000000000001d69	jmp	*0x00082369(%rip)
-[PBXLSDynamicLinkerImage sharedLibraryPath]:
0000000000001d6f	pushq	%rbp
0000000000001d70	movq	%rsp,%rbp
0000000000001d73	movq	0x000ad54e(%rip),%rax
0000000000001d7a	movq	(%rdi,%rax),%rax
0000000000001d7e	popq	%rbp
0000000000001d7f	ret
0000000000001d80	nop
0000000000001d81	nop
-[PBXLSDynamicLinkerImage name]:
0000000000001d82	pushq	%rbp
0000000000001d83	movq	%rsp,%rbp
0000000000001d86	pushq	%r15
0000000000001d88	pushq	%r14
0000000000001d8a	pushq	%rbx
0000000000001d8b	pushq	%rax
0000000000001d8c	movq	%rdi,%rbx
0000000000001d8f	movq	0x000ad53a(%rip),%rax
0000000000001d96	movq	(%rbx,%rax),%rax
0000000000001d9a	testq	%rax,%rax
0000000000001d9d	jne	0x00001df1
0000000000001d9f	leaq	0x000a658a(%rip),%rsi
0000000000001da6	movq	%rbx,%rdi
0000000000001da9	call	*0x000a6581(%rip)
0000000000001daf	movq	%rax,%r14
0000000000001db2	movq	0x000a35c7(%rip),%rsi
0000000000001db9	movq	0x00082318(%rip),%r15
0000000000001dc0	movq	%rbx,%rdi
0000000000001dc3	call	*%r15
0000000000001dc6	movq	0x000a567b(%rip),%rsi
0000000000001dcd	movq	%r14,%rdi
0000000000001dd0	movq	%rax,%rdx
0000000000001dd3	call	*%r15
0000000000001dd6	movq	0x000a307b(%rip),%rsi
0000000000001ddd	movq	%rbx,%rdi
0000000000001de0	movq	%rax,%rdx
0000000000001de3	call	*%r15
0000000000001de6	movq	0x000ad4e3(%rip),%rax
0000000000001ded	movq	(%rbx,%rax),%rax
0000000000001df1	addq	$0x08,%rsp
0000000000001df5	popq	%rbx
0000000000001df6	popq	%r14
0000000000001df8	popq	%r15
0000000000001dfa	popq	%rbp
0000000000001dfb	ret
0000000000001dfc	nop
0000000000001dfd	nop
0000000000001dfe	nop
0000000000001dff	nop
-[DBGGDBSession initWithDebugLauncher:PBXDebugSession:]:
0000000000001e00	pushq	%rbp
0000000000001e01	movq	%rsp,%rbp
0000000000001e04	pushq	%r14
0000000000001e06	pushq	%rbx
0000000000001e07	subq	$0x10,%rsp
0000000000001e0b	movq	%rcx,%r14
0000000000001e0e	movq	%rdi,0xe0(%rbp)
0000000000001e12	movq	0x000a729f(%rip),%rax
0000000000001e19	movq	%rax,0xe8(%rbp)
0000000000001e1d	movq	0x000a60cc(%rip),%rsi
0000000000001e24	leaq	0xe0(%rbp),%rdi
0000000000001e28	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000001e2d	movq	%rax,%rbx
0000000000001e30	testq	%rbx,%rbx
0000000000001e33	je	0x00001e5a
0000000000001e35	movq	0x000ad80c(%rip),%rdx
0000000000001e3c	movq	%r14,%rdi
0000000000001e3f	movq	%rbx,%rsi
0000000000001e42	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000001e47	movq	0x000a60aa(%rip),%rsi
0000000000001e4e	movq	%r14,%rdi
0000000000001e51	movq	%rbx,%rdx
0000000000001e54	call	*0x0008227e(%rip)
0000000000001e5a	movq	%rbx,%rax
0000000000001e5d	addq	$0x10,%rsp
0000000000001e61	popq	%rbx
0000000000001e62	popq	%r14
0000000000001e64	popq	%rbp
0000000000001e65	ret
0000000000001e66	nop
0000000000001e67	nop
0000000000001e68	nop
0000000000001e69	nop
0000000000001e6a	nop
0000000000001e6b	nop
0000000000001e6c	nop
0000000000001e6d	nop
0000000000001e6e	nop
0000000000001e6f	nop
0000000000001e70	nop
0000000000001e71	nop
0000000000001e72	nop
0000000000001e73	nop
0000000000001e74	nop
-[PBXLSDebuggingSession setFoundationDebugSession:]:
0000000000001e75	pushq	%rbp
0000000000001e76	movq	%rsp,%rbp
0000000000001e79	pushq	%r15
0000000000001e7b	pushq	%r14
0000000000001e7d	pushq	%r13
0000000000001e7f	pushq	%r12
0000000000001e81	pushq	%rbx
0000000000001e82	subq	$0x000000f8,%rsp
0000000000001e89	movq	%rdx,0xfffffee0(%rbp)
0000000000001e90	movq	0x00082209(%rip),%rax
0000000000001e97	movq	(%rax),%rax
0000000000001e9a	movq	%rax,0xd0(%rbp)
0000000000001e9e	movq	0x000ad613(%rip),%rax
0000000000001ea5	cmpq	%rdx,(%rdi,%rax)
0000000000001ea9	je	0x000020ee
0000000000001eaf	movq	0x000ad60a(%rip),%rax
0000000000001eb6	movq	%rdi,%rbx
0000000000001eb9	movq	(%rbx,%rax),%rdi
0000000000001ebd	movq	0x000a576c(%rip),%rsi
0000000000001ec4	movq	0x0008220d(%rip),%r14
0000000000001ecb	call	*%r14
0000000000001ece	movq	0x000ad5e3(%rip),%rax
0000000000001ed5	movq	(%rbx,%rax),%rdi
0000000000001ed9	movq	0x000a58d8(%rip),%rsi
0000000000001ee0	movq	0x000b4e79(%rip),%rcx
0000000000001ee7	leaq	0x000b4e72(%rip),%r8
0000000000001eee	movq	%rbx,%rdx
0000000000001ef1	call	*%r14
0000000000001ef4	leaq	0x000b4e5d(%rip),%r8
0000000000001efb	movq	0x000ad5b6(%rip),%rax
0000000000001f02	movq	(%rbx,%rax),%rdi
0000000000001f06	movq	0x000a58ab(%rip),%rsi
0000000000001f0d	movq	0x000b4e44(%rip),%rcx
0000000000001f14	movq	%rbx,%rdx
0000000000001f17	call	*%r14
0000000000001f1a	xorps	%xmm0,%xmm0
0000000000001f1d	movaps	%xmm0,0xc0(%rbp)
0000000000001f21	movaps	%xmm0,0xb0(%rbp)
0000000000001f25	movaps	%xmm0,0xa0(%rbp)
0000000000001f29	movaps	%xmm0,0x90(%rbp)
0000000000001f2d	movq	0x000ad584(%rip),%rax
0000000000001f34	movq	(%rbx,%rax),%rdi
0000000000001f38	movq	%rbx,%r12
0000000000001f3b	movq	0x000a44a6(%rip),%rsi
0000000000001f42	call	*%r14
0000000000001f45	movq	0x000a5874(%rip),%rsi
0000000000001f4c	movq	%rax,%rdi
0000000000001f4f	call	*%r14
0000000000001f52	movq	%rax,%r13
0000000000001f55	leaq	0x000a6424(%rip),%rsi
0000000000001f5c	leaq	0x90(%rbp),%rdx
0000000000001f60	leaq	0xffffff10(%rbp),%rcx
0000000000001f67	movq	%r13,%rdi
0000000000001f6a	movl	$0x00000010,%r8d
0000000000001f70	call	*0x000a640a(%rip)
0000000000001f76	movq	%rax,%rbx
0000000000001f79	testq	%rbx,%rbx
0000000000001f7c	je	0x00001fe2
0000000000001f7e	movq	0xa0(%rbp),%rax
0000000000001f82	movq	(%rax),%r14
0000000000001f85	xorl	%r15d,%r15d
0000000000001f88	movq	0xa0(%rbp),%rax
0000000000001f8c	cmpq	%r14,(%rax)
0000000000001f8f	je	0x00001f99
0000000000001f91	movq	%r13,%rdi
0000000000001f94	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
0000000000001f99	movq	0x98(%rbp),%rax
0000000000001f9d	movq	(%rax,%r15,8),%rdx
0000000000001fa1	movq	%r12,%rdi
0000000000001fa4	movq	0x000a581d(%rip),%rsi
0000000000001fab	call	*0x00082127(%rip)
0000000000001fb1	incq	%r15
0000000000001fb4	cmpq	%rbx,%r15
0000000000001fb7	jb	0x00001f88
0000000000001fb9	movq	%r13,%rdi
0000000000001fbc	leaq	0x000a63bd(%rip),%rsi
0000000000001fc3	leaq	0x90(%rbp),%rdx
0000000000001fc7	leaq	0xffffff10(%rbp),%rcx
0000000000001fce	movl	$0x00000010,%r8d
0000000000001fd4	call	*0x000a63a6(%rip)
0000000000001fda	movq	%rax,%rbx
0000000000001fdd	testq	%rbx,%rbx
0000000000001fe0	jne	0x00001f85
0000000000001fe2	movq	0x000ad4cf(%rip),%rdx
0000000000001fe9	movq	0xfffffee0(%rbp),%rdi
0000000000001ff0	movq	%r12,%rbx
0000000000001ff3	movq	%rbx,%rsi
0000000000001ff6	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000001ffb	movq	0x000ad4b6(%rip),%rax
0000000000002002	movq	(%rbx,%rax),%rdi
0000000000002006	movq	0x000a2d9b(%rip),%rsi
000000000000200d	movq	0x000820c4(%rip),%r14
0000000000002014	call	*%r14
0000000000002017	movq	%rax,%r15
000000000000201a	leaq	0xffffff08(%rbp),%rsi
0000000000002021	leaq	0x000b5248(%rip),%rax
0000000000002028	leaq	0x00044bf6(%rip),%rcx
000000000000202f	movq	0x0008205a(%rip),%rdx
0000000000002036	movq	%rdx,0xfffffee8(%rbp)
000000000000203d	movl	$0x42000000,0xfffffef0(%rbp)
0000000000002047	movl	$0x00000000,0xfffffef4(%rbp)
0000000000002051	movq	%rcx,0xfffffef8(%rbp)
0000000000002058	movq	%rax,0xffffff00(%rbp)
000000000000205f	movq	%rbx,%rdi
0000000000002062	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
0000000000002067	leaq	0x000ae12a(%rip),%rdx
000000000000206e	leaq	0xfffffee8(%rbp),%r8
0000000000002075	movq	0x000a55c4(%rip),%rsi
000000000000207c	movq	%r15,%rdi
000000000000207f	xorl	%ecx,%ecx
0000000000002081	call	*%r14
0000000000002084	movq	0x000ad435(%rip),%rdx
000000000000208b	movq	%rax,%rdi
000000000000208e	movq	%rbx,%rsi
0000000000002091	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000002096	leaq	0x000b4cc3(%rip),%r9
000000000000209d	movq	0x000ad414(%rip),%rax
00000000000020a4	movq	(%rbx,%rax),%rdi
00000000000020a8	movq	0x000a5721(%rip),%rsi
00000000000020af	movq	0x000b4caa(%rip),%rcx
00000000000020b6	movq	%rbx,%rdx
00000000000020b9	movl	$0x00000003,%r8d
00000000000020bf	call	*%r14
00000000000020c2	leaq	0x000b4c8f(%rip),%r9
00000000000020c9	movq	_OBJC_METACLASS_$_PBXGDB_ContinueToCallSymbolSequence(%rip),%rax
00000000000020d0	movq	(%rbx,%rax),%rdi
00000000000020d4	movq	0x000a56f5(%rip),%rsi
00000000000020db	movq	0x000b4c76(%rip),%rcx
00000000000020e2	movq	%rbx,%rdx
00000000000020e5	movl	$0x00000001,%r8d
00000000000020eb	call	*%r14
00000000000020ee	movq	0x00081fab(%rip),%rax
00000000000020f5	movq	(%rax),%rax
00000000000020f8	cmpq	0xd0(%rbp),%rax
00000000000020fc	jne	0x00002110
00000000000020fe	addq	$0x000000f8,%rsp
0000000000002105	popq	%rbx
0000000000002106	popq	%r12
0000000000002108	popq	%r13
000000000000210a	popq	%r14
000000000000210c	popq	%r15
000000000000210e	popq	%rbp
000000000000210f	ret
0000000000002110	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
0000000000002115	nop
0000000000002116	nop
0000000000002117	nop
0000000000002118	nop
0000000000002119	nop
000000000000211a	nop
000000000000211b	nop
000000000000211c	nop
-[DBGGDBLauncher start]:
000000000000211d	pushq	%rbp
000000000000211e	movq	%rsp,%rbp
0000000000002121	subq	$0x30,%rsp
0000000000002125	movq	0x00081f64(%rip),%rax
000000000000212c	movq	%rax,0xd8(%rbp)
0000000000002130	movl	$0x42000000,0xe0(%rbp)
0000000000002137	movl	$0x00000000,0xe4(%rbp)
000000000000213e	leaq	0x0000002e(%rip),%rax
0000000000002145	movq	%rax,0xe8(%rbp)
0000000000002149	leaq	0x000b5180(%rip),%rax
0000000000002150	movq	%rax,0xf0(%rbp)
0000000000002154	leaq	0xf8(%rbp),%rsi
0000000000002158	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
000000000000215d	movq	0x00081f44(%rip),%rdi
0000000000002164	leaq	0xd8(%rbp),%rsi
0000000000002168	callq	0x0004e5a8	; symbol stub for: _DVTAsyncPerformBlock
000000000000216d	addq	$0x30,%rsp
0000000000002171	popq	%rbp
0000000000002172	ret
___23-[DBGGDBLauncher start]_block_invoke_0:
0000000000002173	pushq	%rbp
0000000000002174	movq	%rsp,%rbp
0000000000002177	pushq	%r15
0000000000002179	pushq	%r14
000000000000217b	pushq	%r13
000000000000217d	pushq	%r12
000000000000217f	pushq	%rbx
0000000000002180	subq	$0x18,%rsp
0000000000002184	movq	%rdi,%r12
0000000000002187	movq	0x20(%r12),%rdi
000000000000218c	movq	0x000ad385(%rip),%rax
0000000000002193	cmpb	$0x00,(%rdi,%rax)
0000000000002197	jne	0x000023db
000000000000219d	movq	%rdi,0xc8(%rbp)
00000000000021a1	movq	0x000a6eb0(%rip),%rax
00000000000021a8	movq	%rax,0xd0(%rbp)
00000000000021ac	movq	0x000a596d(%rip),%rsi
00000000000021b3	leaq	0xc8(%rbp),%rdi
00000000000021b7	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000021bc	leaq	0x000a611d(%rip),%r14
00000000000021c3	movq	0x000a69fe(%rip),%rdi
00000000000021ca	movq	%r14,%rsi
00000000000021cd	call	*0x000a610d(%rip)
00000000000021d3	movq	%rax,%r15
00000000000021d6	movq	0x00081efb(%rip),%r13
00000000000021dd	movq	0x20(%r12),%rax
00000000000021e2	movq	0x000ad317(%rip),%rcx
00000000000021e9	movq	(%rax,%rcx),%rbx
00000000000021ed	movq	0x000ad304(%rip),%rcx
00000000000021f4	movq	(%rax,%rcx),%rdi
00000000000021f8	movq	0x000a2bf1(%rip),%rsi
00000000000021ff	call	*%r13
0000000000002202	movq	0x000a591f(%rip),%rsi
0000000000002209	movq	%r15,%rdi
000000000000220c	movq	%rbx,%rdx
000000000000220f	movq	%rax,%rcx
0000000000002212	call	*%r13
0000000000002215	movq	0x20(%r12),%rsi
000000000000221a	movq	0x000ad307(%rip),%rdx
0000000000002221	movq	%rax,%rdi
0000000000002224	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000002229	movq	0x000a62b8(%rip),%rdi
0000000000002230	movq	%r14,%rsi
0000000000002233	call	*0x000a60a7(%rip)
0000000000002239	movq	0x20(%r12),%rcx
000000000000223e	movq	0x000ad2b3(%rip),%rdx
0000000000002245	movq	(%rcx,%rdx),%rdx
0000000000002249	movq	0x000a2ae8(%rip),%rsi
0000000000002250	movq	%rax,%rdi
0000000000002253	call	*%r13
0000000000002256	movq	0x20(%r12),%rsi
000000000000225b	movq	0x000ad2a6(%rip),%rdx
0000000000002262	movq	%rax,%rdi
0000000000002265	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000000226a	movq	0x20(%r12),%rdi
000000000000226f	movq	0x000a58ba(%rip),%rsi
0000000000002276	call	*%r13
0000000000002279	movq	0x20(%r12),%rdi
000000000000227e	movq	0x000a58b3(%rip),%rsi
0000000000002285	call	*%r13
0000000000002288	movq	0x000a2af9(%rip),%rsi
000000000000228f	movq	0x000a6232(%rip),%rdi
0000000000002296	call	*%r13
0000000000002299	movq	0x00081da0(%rip),%rcx
00000000000022a0	movq	(%rcx),%r14
00000000000022a3	movq	0x20(%r12),%rdx
00000000000022a8	movq	0x000ad261(%rip),%rcx
00000000000022af	movq	(%rdx,%rcx),%r9
00000000000022b3	movq	0x000a588e(%rip),%rsi
00000000000022ba	movq	0x000a587f(%rip),%rcx
00000000000022c1	movq	%rax,%rdi
00000000000022c4	movq	%r14,%r8
00000000000022c7	call	*%r13
00000000000022ca	movq	0x20(%r12),%rax
00000000000022cf	movq	0x000ad23a(%rip),%rcx
00000000000022d6	movq	(%rax,%rcx),%rdi
00000000000022da	movq	0x000a586f(%rip),%rsi
00000000000022e1	call	*%r13
00000000000022e4	movq	0x20(%r12),%rdi
00000000000022e9	movq	0x000a5868(%rip),%rsi
00000000000022f0	call	*0x00081de2(%rip)
00000000000022f6	jmp	0x000023e8
00000000000022fb	movq	%rax,%rbx
00000000000022fe	cmpl	$0x01,%edx
0000000000002301	jne	0x000023ff
0000000000002307	movq	%rbx,%rdi
000000000000230a	callq	0x0004e61a	; symbol stub for: _objc_begin_catch
000000000000230f	movq	%rax,%r15
0000000000002312	movq	0x20(%r12),%rdi
0000000000002317	movq	0x000a5842(%rip),%rsi
000000000000231e	call	*0x00081db4(%rip)
0000000000002324	movq	0x000a2975(%rip),%rsi
000000000000232b	movq	%r15,%rdi
000000000000232e	call	*0x00081da4(%rip)
0000000000002334	movq	0x000a6025(%rip),%rcx
000000000000233b	movq	0x00081cde(%rip),%rdx
0000000000002342	movq	(%rdx),%rdx
0000000000002345	leaq	0x000a6014(%rip),%rsi
000000000000234c	movq	%rax,%rdi
000000000000234f	call	*%rcx
0000000000002351	testb	%al,%al
0000000000002353	je	0x000023cc
0000000000002355	movq	0x000a2a2c(%rip),%rsi
000000000000235c	movq	0x000a6165(%rip),%rdi
0000000000002363	call	*0x00081d6f(%rip)
0000000000002369	movq	0x20(%r12),%rdx
000000000000236e	movq	0x000ad19b(%rip),%rcx
0000000000002375	movq	(%rdx,%rcx),%r8
0000000000002379	movq	0x000a5660(%rip),%rsi
0000000000002380	movq	%rax,%rdi
0000000000002383	movq	%r14,%rcx
0000000000002386	call	*0x00081d4c(%rip)
000000000000238c	movq	0x20(%r12),%rdi
0000000000002391	movq	0x000a5668(%rip),%rsi
0000000000002398	call	*0x00081d3a(%rip)
000000000000239e	movq	%rax,%r14
00000000000023a1	movq	0x20(%r12),%rdi
00000000000023a6	movq	0x000a564b(%rip),%rsi
00000000000023ad	xorl	%edx,%edx
00000000000023af	call	*0x00081d23(%rip)
00000000000023b5	movq	0x000a564c(%rip),%rsi
00000000000023bc	movq	%r14,%rdi
00000000000023bf	movl	$0x00000002,%edx
00000000000023c4	call	*0x00081d0e(%rip)
00000000000023ca	jmp	0x000023d4
00000000000023cc	movq	%r15,%rdi
00000000000023cf	callq	0x0004e62c	; symbol stub for: _objc_exception_throw
00000000000023d4	callq	0x0004e620	; symbol stub for: _objc_end_catch
00000000000023d9	jmp	0x000023e8
00000000000023db	movq	0x000a577e(%rip),%rsi
00000000000023e2	call	*0x00081cf0(%rip)
00000000000023e8	addq	$0x18,%rsp
00000000000023ec	popq	%rbx
00000000000023ed	popq	%r12
00000000000023ef	popq	%r13
00000000000023f1	popq	%r14
00000000000023f3	popq	%r15
00000000000023f5	popq	%rbp
00000000000023f6	ret
00000000000023f7	movq	%rax,%rbx
00000000000023fa	callq	0x0004e620	; symbol stub for: _objc_end_catch
00000000000023ff	movq	%rbx,%rdi
0000000000002402	callq	0x0004e66e	; symbol stub for: __Unwind_Resume
0000000000002407	nopw	0x00000000(%rax,%rax)
0000000000002410	nop
0000000000002411	nop
0000000000002412	nop
0000000000002413	nop
-[PBXLSDebuggingSession process]:
0000000000002414	pushq	%rbp
0000000000002415	movq	%rsp,%rbp
0000000000002418	movq	0x000ad089(%rip),%rax
000000000000241f	movq	(%rdi,%rax),%rax
0000000000002423	popq	%rbp
0000000000002424	ret
-[DBGGDBProcess initWithDebugSession:PBXProcess:]:
0000000000002425	pushq	%rbp
0000000000002426	movq	%rsp,%rbp
0000000000002429	pushq	%r14
000000000000242b	pushq	%rbx
000000000000242c	subq	$0x40,%rsp
0000000000002430	movq	%rcx,%r14
0000000000002433	movq	%rdx,%rbx
0000000000002436	movq	%rdi,0xe8(%rbp)
000000000000243a	movq	%rsi,0xe0(%rbp)
000000000000243e	movq	0x000a6753(%rip),%rdi
0000000000002445	leaq	0x000a5ee4(%rip),%rsi
000000000000244c	call	*0x000a5ede(%rip)
0000000000002452	leaq	0x000a5ee7(%rip),%rsi
0000000000002459	movq	%rbx,%rdi
000000000000245c	movq	%rax,%rdx
000000000000245f	call	*0x000a5edb(%rip)
0000000000002465	testb	%al,%al
0000000000002467	jne	0x000024aa
0000000000002469	leaq	0x000ad3c8(%rip),%rax
0000000000002470	leaq	0x00062a6f(%rip),%rcx
0000000000002477	movq	%rcx,0x08(%rsp)
000000000000247c	movq	%rax,(%rsp)
0000000000002480	leaq	0xe8(%rbp),%rdi
0000000000002484	leaq	0xe0(%rbp),%rsi
0000000000002488	leaq	0x0006299f(%rip),%rdx
000000000000248f	leaq	0x000629ca(%rip),%rcx
0000000000002496	leaq	0x000b403b(%rip),%r9
000000000000249d	movl	$0x00000020,%r8d
00000000000024a3	xorb	%al,%al
00000000000024a5	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
00000000000024aa	movq	0x000a5327(%rip),%rsi
00000000000024b1	movq	%rbx,%rdi
00000000000024b4	call	*0x00081c1e(%rip)
00000000000024ba	testq	%rax,%rax
00000000000024bd	jne	0x0000250c
00000000000024bf	leaq	0x00062a53(%rip),%rax
00000000000024c6	leaq	0x000ad36b(%rip),%rcx
00000000000024cd	leaq	0x00062a50(%rip),%rdx
00000000000024d4	movq	%rdx,0x10(%rsp)
00000000000024d9	movq	%rcx,0x08(%rsp)
00000000000024de	movq	%rax,(%rsp)
00000000000024e2	leaq	0xe8(%rbp),%rdi
00000000000024e6	leaq	0xe0(%rbp),%rsi
00000000000024ea	leaq	0x0006293d(%rip),%rdx
00000000000024f1	leaq	0x00062968(%rip),%rcx
00000000000024f8	leaq	0x000b1bd9(%rip),%r9
00000000000024ff	movl	$0x00000022,%r8d
0000000000002505	xorb	%al,%al
0000000000002507	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000000250c	movq	0xe8(%rbp),%rax
0000000000002510	movq	%rax,0xd0(%rbp)
0000000000002514	movq	0x000a6b95(%rip),%rax
000000000000251b	movq	%rax,0xd8(%rbp)
000000000000251f	movq	0x000a5972(%rip),%rsi
0000000000002526	leaq	0xd0(%rbp),%rdi
000000000000252a	movq	%rbx,%rdx
000000000000252d	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000002532	movq	%rax,0xe8(%rbp)
0000000000002536	testq	%rax,%rax
0000000000002539	je	0x0000256d
000000000000253b	movq	0x000ad0ee(%rip),%rdx
0000000000002542	movq	%r14,%rdi
0000000000002545	movq	%rax,%rsi
0000000000002548	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000000254d	movq	0x000ad0dc(%rip),%rax
0000000000002554	movq	0xe8(%rbp),%rdx
0000000000002558	movq	(%rdx,%rax),%rdi
000000000000255c	movq	0x000a593d(%rip),%rsi
0000000000002563	call	*0x00081b6f(%rip)
0000000000002569	movq	0xe8(%rbp),%rax
000000000000256d	addq	$0x40,%rsp
0000000000002571	popq	%rbx
0000000000002572	popq	%r14
0000000000002574	popq	%rbp
0000000000002575	ret
0000000000002576	nop
0000000000002577	nop
0000000000002578	nop
0000000000002579	nop
000000000000257a	nop
000000000000257b	nop
-[PBXLSProcess setFoundationProcess:]:
000000000000257c	pushq	%rbp
000000000000257d	movq	%rsp,%rbp
0000000000002580	pushq	%r15
0000000000002582	pushq	%r14
0000000000002584	pushq	%rbx
0000000000002585	subq	$0x38,%rsp
0000000000002589	movq	%rsi,%r14
000000000000258c	movq	%rdi,%rbx
000000000000258f	movq	0x000acd9a(%rip),%rax
0000000000002596	cmpq	%rdx,(%rbx,%rax)
000000000000259a	je	0x00002633
00000000000025a0	addq	%rbx,%rax
00000000000025a3	subq	%rbx,%rax
00000000000025a6	movq	%rdx,%rdi
00000000000025a9	movq	%rbx,%rsi
00000000000025ac	movq	%rax,%rdx
00000000000025af	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000025b4	movq	0x000acd75(%rip),%rax
00000000000025bb	movq	(%rbx,%rax),%r15
00000000000025bf	movq	0x00081aca(%rip),%rax
00000000000025c6	movq	%rax,0xb8(%rbp)
00000000000025ca	movl	$0x42000000,0xc0(%rbp)
00000000000025d1	leaq	0xd8(%rbp),%rsi
00000000000025d5	leaq	0x000b4bb4(%rip),%rax
00000000000025dc	leaq	0x0000005b(%rip),%rcx
00000000000025e3	movl	$0x00000000,0xc4(%rbp)
00000000000025ea	movq	%rcx,0xc8(%rbp)
00000000000025ee	movq	%rax,0xd0(%rbp)
00000000000025f2	movq	%rbx,%rdi
00000000000025f5	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
00000000000025fa	leaq	0x000b3057(%rip),%rdx
0000000000002601	leaq	0xb8(%rbp),%r9
0000000000002605	movq	%r14,0xe0(%rbp)
0000000000002609	movq	0x000a4f90(%rip),%rsi
0000000000002610	movq	%r15,%rdi
0000000000002613	movl	$0x00000004,%ecx
0000000000002618	movq	%rbx,%r8
000000000000261b	call	*0x00081ab7(%rip)
0000000000002621	movq	0x000acd10(%rip),%rdx
0000000000002628	movq	%rax,%rdi
000000000000262b	movq	%rbx,%rsi
000000000000262e	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000002633	addq	$0x38,%rsp
0000000000002637	popq	%rbx
0000000000002638	popq	%r14
000000000000263a	popq	%r15
000000000000263c	popq	%rbp
000000000000263d	ret
___37-[PBXLSProcess setFoundationProcess:]_block_invoke_0:
000000000000263e	pushq	%rbp
000000000000263f	movq	%rsp,%rbp
0000000000002642	pushq	%r15
0000000000002644	pushq	%r14
0000000000002646	pushq	%r13
0000000000002648	pushq	%r12
000000000000264a	pushq	%rbx
000000000000264b	subq	$0x58,%rsp
000000000000264f	movq	%rdi,%r14
0000000000002652	movq	0x20(%r14),%rax
0000000000002656	movq	0x000accd3(%rip),%rcx
000000000000265d	movq	(%rax,%rcx),%rdi
0000000000002661	movq	0x000a2868(%rip),%rsi
0000000000002668	call	*0x00081a6a(%rip)
000000000000266e	movq	%rax,%r12
0000000000002671	testq	%r12,%r12
0000000000002674	je	0x00002a4b
000000000000267a	movq	0x000a4eef(%rip),%rsi
0000000000002681	movq	%r12,%rdi
0000000000002684	call	*0x00081a4e(%rip)
000000000000268a	testq	%rax,%rax
000000000000268d	jne	0x00002a4b
0000000000002693	leaq	0x20(%r14),%r13
0000000000002697	movq	%r14,0xb8(%rbp)
000000000000269b	movq	0x000a2c9e(%rip),%rsi
00000000000026a2	movq	0x00081a2f(%rip),%r15
00000000000026a9	movq	%r12,%rdi
00000000000026ac	call	*%r15
00000000000026af	movq	0x000a4ec2(%rip),%rsi
00000000000026b6	movq	%rax,%rdi
00000000000026b9	call	*%r15
00000000000026bc	movq	%rax,%rbx
00000000000026bf	movq	%r12,%rdi
00000000000026c2	movq	%rdi,0xb0(%rbp)
00000000000026c6	movq	0x00(%r13),%r14
00000000000026ca	movq	0x000a280f(%rip),%rsi
00000000000026d1	call	*%r15
00000000000026d4	movq	0x000a380d(%rip),%rsi
00000000000026db	movq	%rax,%rdi
00000000000026de	call	*%r15
00000000000026e1	movq	0x000a4e98(%rip),%rsi
00000000000026e8	movq	%r14,%rdi
00000000000026eb	movq	%rax,%rdx
00000000000026ee	call	*%r15
00000000000026f1	testb	%al,%al
00000000000026f3	jne	0x000027de
00000000000026f9	movq	%rbx,%r15
00000000000026fc	movq	0x000a608d(%rip),%rdi
0000000000002703	leaq	0x000a5bd6(%rip),%rsi
000000000000270a	call	*0x000a5bd0(%rip)
0000000000002710	movq	0x000a4529(%rip),%rsi
0000000000002717	movq	$0x00000000,0x08(%rsp)
0000000000002720	movl	$0x00000000,(%rsp)
0000000000002727	movl	$0x00000001,%r9d
000000000000272d	subq	%r15,%r9
0000000000002730	addq	%rbx,%r9
0000000000002733	movq	0x0008199e(%rip),%r14
000000000000273a	movq	%rax,%rdi
000000000000273d	movq	%r15,%rdx
0000000000002740	movq	%rbx,%rcx
0000000000002743	movq	%r15,%r8
0000000000002746	call	*%r14
0000000000002749	movq	%rax,%r12
000000000000274c	movq	0x00(%r13),%rdi
0000000000002750	movq	0x000a2e71(%rip),%rsi
0000000000002757	call	*%r14
000000000000275a	movq	%rax,%rbx
000000000000275d	testq	%rbx,%rbx
0000000000002760	jne	0x000028cc
0000000000002766	movq	0x000a5d7b(%rip),%rdi
000000000000276d	leaq	0x000a5bbc(%rip),%rsi
0000000000002774	call	*0x000a5bb6(%rip)
000000000000277a	movq	%rax,%rdi
000000000000277d	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000002782	movq	0xb8(%rbp),%rsi
0000000000002786	addq	$0x28,%rsi
000000000000278a	leaq	0x000602ea(%rip),%rdx
0000000000002791	leaq	0x0006031c(%rip),%rcx
0000000000002798	leaq	0x000ad219(%rip),%r9
000000000000279f	leaq	0x00060374(%rip),%rbx
00000000000027a6	leaq	0x00060378(%rip),%rdi
00000000000027ad	movq	%rdi,0x18(%rsp)
00000000000027b2	leaq	0x000ad07f(%rip),%rdi
00000000000027b9	movq	%rdi,0x10(%rsp)
00000000000027be	movq	%rax,0x08(%rsp)
00000000000027c3	movq	%rbx,(%rsp)
00000000000027c7	movq	%r13,%rdi
00000000000027ca	movl	$0x00000096,%r8d
00000000000027d0	xorb	%al,%al
00000000000027d2	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
00000000000027d7	xorl	%ebx,%ebx
00000000000027d9	jmp	0x00002984
00000000000027de	movq	0x00(%r13),%rax
00000000000027e2	movq	%r13,0xd0(%rbp)
00000000000027e6	movq	0x000acb33(%rip),%rcx
00000000000027ed	movq	(%rax,%rcx),%rdi
00000000000027f1	movq	0x000a2a70(%rip),%rsi
00000000000027f8	call	*0x000818da(%rip)
00000000000027fe	movq	%rax,%r14
0000000000002801	movq	%rbx,0xa8(%rbp)
0000000000002805	movq	0x000818cc(%rip),%r12
000000000000280c	movq	%rbx,%r13
000000000000280f	movq	%r13,%r15
0000000000002812	decq	%r13
0000000000002815	js	0x00002852
0000000000002817	movq	%r14,%rdi
000000000000281a	leaq	0x000a5aff(%rip),%rsi
0000000000002821	movq	%r13,%rdx
0000000000002824	call	*0x000a5af6(%rip)
000000000000282a	movq	0xd0(%rbp),%rcx
000000000000282e	movq	(%rcx),%rbx
0000000000002831	movq	%rax,%rdi
0000000000002834	movq	0x000a36ad(%rip),%rsi
000000000000283b	call	*%r12
000000000000283e	movq	%rbx,%rdi
0000000000002841	movq	0x000a4d38(%rip),%rsi
0000000000002848	movq	%rax,%rdx
000000000000284b	call	*%r12
000000000000284e	testb	%al,%al
0000000000002850	jne	0x0000280f
0000000000002852	leaq	0x000a5ab7(%rip),%rsi
0000000000002859	movq	%r14,%rdi
000000000000285c	movq	%r14,0xc0(%rbp)
0000000000002860	call	*0x000a5aaa(%rip)
0000000000002866	movq	%rax,0xc8(%rbp)
000000000000286a	leaq	0x01(%r15),%r13
000000000000286e	movq	0x00081863(%rip),%r14
0000000000002875	movq	0xa8(%rbp),%rbx
0000000000002879	jmp	0x000028bd
000000000000287b	movq	0xc0(%rbp),%rdi
000000000000287f	leaq	0x000a5a9a(%rip),%rsi
0000000000002886	movq	%r13,%rdx
0000000000002889	call	*0x000a5a91(%rip)
000000000000288f	movq	0xd0(%rbp),%rcx
0000000000002893	movq	(%rcx),%r12
0000000000002896	movq	%rax,%rdi
0000000000002899	movq	0x000a3648(%rip),%rsi
00000000000028a0	call	*%r14
00000000000028a3	movq	%r12,%rdi
00000000000028a6	movq	0x000a4cd3(%rip),%rsi
00000000000028ad	movq	%rax,%rdx
00000000000028b0	call	*%r14
00000000000028b3	testb	%al,%al
00000000000028b5	je	0x000028c3
00000000000028b7	incq	%r13
00000000000028ba	incq	%rbx
00000000000028bd	cmpq	0xc8(%rbp),%r13
00000000000028c1	jb	0x0000287b
00000000000028c3	movq	0xd0(%rbp),%r13
00000000000028c7	jmp	0x000026fc
00000000000028cc	movq	0x000a5c15(%rip),%rdi
00000000000028d3	leaq	0x000a5a56(%rip),%rsi
00000000000028da	call	*0x000a5a50(%rip)
00000000000028e0	leaq	0x000a5a59(%rip),%rsi
00000000000028e7	movq	%rbx,%rdi
00000000000028ea	movq	%rax,%rdx
00000000000028ed	call	*0x000a5a4d(%rip)
00000000000028f3	testb	%al,%al
00000000000028f5	jne	0x00002984
00000000000028fb	movq	0x000a5be6(%rip),%rdi
0000000000002902	leaq	0x000a5a27(%rip),%rsi
0000000000002909	call	*0x000a5a21(%rip)
000000000000290f	movq	%rax,%rdi
0000000000002912	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000002917	movq	%rax,%r14
000000000000291a	movq	0x000a233f(%rip),%rsi
0000000000002921	movq	%rbx,%rdi
0000000000002924	call	*0x000817ae(%rip)
000000000000292a	leaq	0x000acf07(%rip),%r8
0000000000002931	leaq	0x00060201(%rip),%rdi
0000000000002938	movq	0xb8(%rbp),%rsi
000000000000293c	addq	$0x28,%rsi
0000000000002940	leaq	0x00060134(%rip),%rdx
0000000000002947	leaq	0x00060166(%rip),%rcx
000000000000294e	movq	%rdi,0x20(%rsp)
0000000000002953	leaq	0x000ad07e(%rip),%r9
000000000000295a	movq	%r8,0x18(%rsp)
000000000000295f	movq	%rax,0x10(%rsp)
0000000000002964	leaq	0x000601af(%rip),%rax
000000000000296b	movq	%r14,0x08(%rsp)
0000000000002970	movq	%rax,(%rsp)
0000000000002974	movq	%r13,%rdi
0000000000002977	movl	$0x00000096,%r8d
000000000000297d	xorb	%al,%al
000000000000297f	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000002984	movq	0x000a2445(%rip),%rsi
000000000000298b	movq	%rbx,%rdi
000000000000298e	call	*0x00081744(%rip)
0000000000002994	movq	0x000a243d(%rip),%rsi
000000000000299b	movq	%r12,%rdi
000000000000299e	movq	%rax,%rdx
00000000000029a1	call	*0x00081731(%rip)
00000000000029a7	movq	0x000a2532(%rip),%rsi
00000000000029ae	movq	0xb0(%rbp),%rdi
00000000000029b2	call	*0x00081720(%rip)
00000000000029b8	movq	0x000a28d9(%rip),%rsi
00000000000029bf	movq	%rax,%rdi
00000000000029c2	call	*0x00081710(%rip)
00000000000029c8	movq	0x000a2721(%rip),%rsi
00000000000029cf	movq	%rax,%rdi
00000000000029d2	call	*0x00081700(%rip)
00000000000029d8	movq	0x000a3251(%rip),%rsi
00000000000029df	movq	%r12,%rdi
00000000000029e2	movq	%rax,%rdx
00000000000029e5	call	*0x000816ed(%rip)
00000000000029eb	movq	0x000a4b96(%rip),%rsi
00000000000029f2	movq	%r12,%rdi
00000000000029f5	xorl	%edx,%edx
00000000000029f7	call	*0x000816db(%rip)
00000000000029fd	movq	0x000a23cc(%rip),%rsi
0000000000002a04	movq	%rbx,%rdi
0000000000002a07	call	*0x000816cb(%rip)
0000000000002a0d	movq	%rax,%rbx
0000000000002a10	movq	0x000a4b79(%rip),%rsi
0000000000002a17	movq	0x000a6142(%rip),%rdi
0000000000002a1e	call	*0x000816b4(%rip)
0000000000002a24	movq	0x000a4b6d(%rip),%rsi
0000000000002a2b	movq	%rbx,%rdi
0000000000002a2e	movq	%r12,%rdx
0000000000002a31	movq	%rax,%rcx
0000000000002a34	movq	0x0008169d(%rip),%rax
0000000000002a3b	addq	$0x58,%rsp
0000000000002a3f	popq	%rbx
0000000000002a40	popq	%r12
0000000000002a42	popq	%r13
0000000000002a44	popq	%r14
0000000000002a46	popq	%r15
0000000000002a48	popq	%rbp
0000000000002a49	jmp	*%rax
0000000000002a4b	addq	$0x58,%rsp
0000000000002a4f	popq	%rbx
0000000000002a50	popq	%r12
0000000000002a52	popq	%r13
0000000000002a54	popq	%r14
0000000000002a56	popq	%r15
0000000000002a58	popq	%rbp
0000000000002a59	ret
0000000000002a5a	nopw	0x00(%rax,%rax)
-[PBXGDB_Adaptor initWithSession:]:
0000000000002a60	pushq	%rbp
0000000000002a61	movq	%rsp,%rbp
0000000000002a64	pushq	%r15
0000000000002a66	pushq	%r14
0000000000002a68	pushq	%rbx
0000000000002a69	subq	$0x18,%rsp
0000000000002a6d	movq	%rdi,0xd8(%rbp)
0000000000002a71	movq	0x000a6298(%rip),%rax
0000000000002a78	movq	%rax,0xe0(%rbp)
0000000000002a7c	movq	0x000a22b5(%rip),%rsi
0000000000002a83	leaq	0xd8(%rbp),%rdi
0000000000002a87	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000002a8c	movq	%rax,%rbx
0000000000002a8f	testq	%rbx,%rbx
0000000000002a92	je	0x00002c1c
0000000000002a98	movq	0x000a22a1(%rip),%rsi
0000000000002a9f	movq	0x00081632(%rip),%r15
0000000000002aa6	movq	%rbx,%rdi
0000000000002aa9	call	*%r15
0000000000002aac	movq	0x000a59fd(%rip),%rdi
0000000000002ab3	leaq	0x000a5826(%rip),%r14
0000000000002aba	movq	%r14,%rsi
0000000000002abd	call	*0x000a581d(%rip)
0000000000002ac3	movq	0x000a1fa6(%rip),%rsi
0000000000002aca	movq	%rax,%rdi
0000000000002acd	call	*%r15
0000000000002ad0	movq	0x000abbc9(%rip),%rdx
0000000000002ad7	movq	%rax,%rdi
0000000000002ada	movq	%rbx,%rsi
0000000000002add	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000002ae2	movq	0x000a225f(%rip),%rsi
0000000000002ae9	movq	%rbx,%rdi
0000000000002aec	call	*%r15
0000000000002aef	movq	0x000abbb2(%rip),%rax
0000000000002af6	movb	$0x01,(%rbx,%rax)
0000000000002afa	movq	0x000a59b7(%rip),%rdi
0000000000002b01	movq	%r14,%rsi
0000000000002b04	call	*0x000a57d6(%rip)
0000000000002b0a	movq	0x000a223f(%rip),%rsi
0000000000002b11	movq	%rax,%rdi
0000000000002b14	movq	%rbx,%rdx
0000000000002b17	call	*%r15
0000000000002b1a	movq	0x000abb8f(%rip),%rdx
0000000000002b21	movq	%rax,%rdi
0000000000002b24	movq	%rbx,%rsi
0000000000002b27	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000002b2c	leaq	0x000ad885(%rip),%rdx
0000000000002b33	movq	0x000abb76(%rip),%rax
0000000000002b3a	movq	(%rbx,%rax),%rdi
0000000000002b3e	movq	0x000a2213(%rip),%rsi
0000000000002b45	call	*%r15
0000000000002b48	movq	0x000a5961(%rip),%rdi
0000000000002b4f	movq	%r14,%rsi
0000000000002b52	call	*0x000a5788(%rip)
0000000000002b58	movq	0x000a1f11(%rip),%rsi
0000000000002b5f	movq	%rax,%rdi
0000000000002b62	call	*%r15
0000000000002b65	movq	0x000abb4c(%rip),%rdx
0000000000002b6c	movq	%rax,%rdi
0000000000002b6f	movq	%rbx,%rsi
0000000000002b72	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000002b77	movq	0x000a21e2(%rip),%rsi
0000000000002b7e	movq	%rbx,%rdi
0000000000002b81	call	*%r15
0000000000002b84	movq	0x000a21dd(%rip),%rsi
0000000000002b8b	movq	%rax,%rdi
0000000000002b8e	call	*%r15
0000000000002b91	movq	0x000abb28(%rip),%rcx
0000000000002b98	movb	%al,(%rbx,%rcx)
0000000000002b9b	movq	0x000a21ce(%rip),%rsi
0000000000002ba2	movq	0x000a5917(%rip),%rdi
0000000000002ba9	call	*%r15
0000000000002bac	leaq	0x000ad825(%rip),%rdx
0000000000002bb3	movq	0x000a21be(%rip),%rsi
0000000000002bba	movq	%rax,%rdi
0000000000002bbd	call	*%r15
0000000000002bc0	movq	0x000abb01(%rip),%rcx
0000000000002bc7	movb	%al,(%rbx,%rcx)
0000000000002bca	movq	0x000a219f(%rip),%rsi
0000000000002bd1	movq	0x000a58e8(%rip),%rdi
0000000000002bd8	call	*%r15
0000000000002bdb	leaq	0x000ad816(%rip),%rdx
0000000000002be2	movq	0x000a218f(%rip),%rsi
0000000000002be9	movq	%rax,%rdi
0000000000002bec	call	*%r15
0000000000002bef	movq	0x000abada(%rip),%rcx
0000000000002bf6	movb	%al,(%rbx,%rcx)
0000000000002bf9	movq	0x000a2180(%rip),%rsi
0000000000002c00	movq	0x000a58a9(%rip),%rdi
0000000000002c07	call	*%r15
0000000000002c0a	movq	0x000abac7(%rip),%rdx
0000000000002c11	movq	%rax,%rdi
0000000000002c14	movq	%rbx,%rsi
0000000000002c17	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000002c1c	movq	%rbx,%rax
0000000000002c1f	addq	$0x18,%rsp
0000000000002c23	popq	%rbx
0000000000002c24	popq	%r14
0000000000002c26	popq	%r15
0000000000002c28	popq	%rbp
0000000000002c29	ret
-[PBXLSDebuggerAdaptor initWithSession:]:
0000000000002c2a	pushq	%rbp
0000000000002c2b	movq	%rsp,%rbp
0000000000002c2e	pushq	%r14
0000000000002c30	pushq	%rbx
0000000000002c31	subq	$0x10,%rsp
0000000000002c35	movq	%rdi,0xe0(%rbp)
0000000000002c39	movq	0x000a6400(%rip),%rax
0000000000002c40	movq	%rax,0xe8(%rbp)
0000000000002c44	movq	0x000a20ed(%rip),%rsi
0000000000002c4b	leaq	0xe0(%rbp),%rdi
0000000000002c4f	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000002c54	movq	%rax,%rbx
0000000000002c57	testq	%rbx,%rbx
0000000000002c5a	je	0x00002cb2
0000000000002c5c	movq	0x000ac80d(%rip),%rax
0000000000002c63	movq	$0x0000000a,(%rbx,%rax)
0000000000002c6b	movq	0x000a20fe(%rip),%rsi
0000000000002c72	movq	0x000a5847(%rip),%rdi
0000000000002c79	movq	0x00081458(%rip),%r14
0000000000002c80	call	*%r14
0000000000002c83	movq	0x000a456e(%rip),%rsi
0000000000002c8a	leaq	0x000b2d47(%rip),%rdx
0000000000002c91	movq	%rax,%rdi
0000000000002c94	call	*%r14
0000000000002c97	testq	%rax,%rax
0000000000002c9a	jle	0x00002ca7
0000000000002c9c	movq	0x000ac7cd(%rip),%rcx
0000000000002ca3	movq	%rax,(%rbx,%rcx)
0000000000002ca7	movq	0x000ac7ca(%rip),%rax
0000000000002cae	movb	$0x01,(%rbx,%rax)
0000000000002cb2	movq	%rbx,%rax
0000000000002cb5	addq	$0x10,%rsp
0000000000002cb9	popq	%rbx
0000000000002cba	popq	%r14
0000000000002cbc	popq	%rbp
0000000000002cbd	ret
-[PBXLSAdaptor initWithSession:]:
0000000000002cbe	pushq	%rbp
0000000000002cbf	movq	%rsp,%rbp
0000000000002cc2	pushq	%r14
0000000000002cc4	pushq	%rbx
0000000000002cc5	subq	$0x10,%rsp
0000000000002cc9	movq	%rdx,%r14
0000000000002ccc	movq	%rdi,0xe0(%rbp)
0000000000002cd0	movq	0x000a6361(%rip),%rax
0000000000002cd7	movq	%rax,0xe8(%rbp)
0000000000002cdb	movq	0x000a1d8e(%rip),%rsi
0000000000002ce2	leaq	0xe0(%rbp),%rdi
0000000000002ce6	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000002ceb	movq	%rax,%rbx
0000000000002cee	testq	%rbx,%rbx
0000000000002cf1	je	0x00002d05
0000000000002cf3	movq	0x000ac75e(%rip),%rdx
0000000000002cfa	movq	%r14,%rdi
0000000000002cfd	movq	%rbx,%rsi
0000000000002d00	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000002d05	movq	%rbx,%rax
0000000000002d08	addq	$0x10,%rsp
0000000000002d0c	popq	%rbx
0000000000002d0d	popq	%r14
0000000000002d0f	popq	%rbp
0000000000002d10	ret
-[PBXGDB_Adaptor _initControllers]:
0000000000002d11	pushq	%rbp
0000000000002d12	movq	%rsp,%rbp
0000000000002d15	pushq	%r14
0000000000002d17	pushq	%rbx
0000000000002d18	movq	%rdi,%rbx
0000000000002d1b	movq	0x000a5766(%rip),%rdi
0000000000002d22	leaq	0x000a55b7(%rip),%r14
0000000000002d29	movq	%r14,%rsi
0000000000002d2c	call	*0x000a55ae(%rip)
0000000000002d32	movq	0x000a1d37(%rip),%rsi
0000000000002d39	movq	%rax,%rdi
0000000000002d3c	call	*0x00081396(%rip)
0000000000002d42	movq	0x000ab92f(%rip),%rdx
0000000000002d49	movq	%rax,%rdi
0000000000002d4c	movq	%rbx,%rsi
0000000000002d4f	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000002d54	movq	0x000ab91d(%rip),%rax
0000000000002d5b	movq	(%rbx,%rax),%rdi
0000000000002d5f	movq	0x000a1fc2(%rip),%rsi
0000000000002d66	movq	%rbx,%rdx
0000000000002d69	call	*0x00081369(%rip)
0000000000002d6f	movq	0x000a571a(%rip),%rdi
0000000000002d76	movq	%r14,%rsi
0000000000002d79	call	*0x000a5561(%rip)
0000000000002d7f	movq	0x000a1cea(%rip),%rsi
0000000000002d86	movq	%rax,%rdi
0000000000002d89	call	*0x00081349(%rip)
0000000000002d8f	movq	0x000ab8ea(%rip),%rdx
0000000000002d96	movq	%rax,%rdi
0000000000002d99	movq	%rbx,%rsi
0000000000002d9c	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000002da1	movq	0x000ab8d8(%rip),%rax
0000000000002da8	movq	(%rbx,%rax),%rdi
0000000000002dac	movq	0x000a1f75(%rip),%rsi
0000000000002db3	movq	%rbx,%rdx
0000000000002db6	call	*0x0008131c(%rip)
0000000000002dbc	movq	0x000a56d5(%rip),%rdi
0000000000002dc3	movq	%r14,%rsi
0000000000002dc6	call	*0x000a5514(%rip)
0000000000002dcc	movq	0x000a1c9d(%rip),%rsi
0000000000002dd3	movq	%rax,%rdi
0000000000002dd6	call	*0x000812fc(%rip)
0000000000002ddc	movq	0x000ab8a5(%rip),%rdx
0000000000002de3	movq	%rax,%rdi
0000000000002de6	movq	%rbx,%rsi
0000000000002de9	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000002dee	movq	0x000ab893(%rip),%rax
0000000000002df5	movq	(%rbx,%rax),%rdi
0000000000002df9	movq	0x000a1f28(%rip),%rsi
0000000000002e00	movq	%rbx,%rdx
0000000000002e03	call	*0x000812cf(%rip)
0000000000002e09	movq	0x000a5690(%rip),%rdi
0000000000002e10	movq	%r14,%rsi
0000000000002e13	call	*0x000a54c7(%rip)
0000000000002e19	movq	0x000a1c50(%rip),%rsi
0000000000002e20	movq	%rax,%rdi
0000000000002e23	call	*0x000812af(%rip)
0000000000002e29	movq	0x000ab860(%rip),%rdx
0000000000002e30	movq	%rax,%rdi
0000000000002e33	movq	%rbx,%rsi
0000000000002e36	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000002e3b	movq	0x000ab84e(%rip),%rax
0000000000002e42	movq	(%rbx,%rax),%rdi
0000000000002e46	movq	0x000a1edb(%rip),%rsi
0000000000002e4d	movq	%rbx,%rdx
0000000000002e50	call	*0x00081282(%rip)
0000000000002e56	movq	0x000a564b(%rip),%rdi
0000000000002e5d	movq	%r14,%rsi
0000000000002e60	call	*0x000a547a(%rip)
0000000000002e66	movq	0x000a1c03(%rip),%rsi
0000000000002e6d	movq	%rax,%rdi
0000000000002e70	call	*0x00081262(%rip)
0000000000002e76	movq	0x000ab81b(%rip),%rdx
0000000000002e7d	movq	%rax,%rdi
0000000000002e80	movq	%rbx,%rsi
0000000000002e83	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000002e88	movq	0x000ab809(%rip),%rax
0000000000002e8f	movq	(%rbx,%rax),%rdi
0000000000002e93	movq	0x000a1e8e(%rip),%rsi
0000000000002e9a	movq	%rbx,%rdx
0000000000002e9d	movq	0x00081234(%rip),%rax
0000000000002ea4	popq	%rbx
0000000000002ea5	popq	%r14
0000000000002ea7	popq	%rbp
0000000000002ea8	jmp	*%rax
0000000000002eaa	nop
0000000000002eab	nop
0000000000002eac	nop
0000000000002ead	nop
0000000000002eae	nop
0000000000002eaf	nop
0000000000002eb0	nop
0000000000002eb1	nop
0000000000002eb2	nop
-[PBXGDB_MIController init]:
0000000000002eb3	pushq	%rbp
0000000000002eb4	movq	%rsp,%rbp
0000000000002eb7	pushq	%r15
0000000000002eb9	pushq	%r14
0000000000002ebb	pushq	%rbx
0000000000002ebc	subq	$0x18,%rsp
0000000000002ec0	movq	%rdi,0xd8(%rbp)
0000000000002ec4	movq	0x000a5f9d(%rip),%rax
0000000000002ecb	movq	%rax,0xe0(%rbp)
0000000000002ecf	movq	0x000a1b9a(%rip),%rsi
0000000000002ed6	leaq	0xd8(%rbp),%rdi
0000000000002eda	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000002edf	movq	%rax,%rbx
0000000000002ee2	testq	%rbx,%rbx
0000000000002ee5	je	0x00003069
0000000000002eeb	movq	0x000a5a16(%rip),%rdi
0000000000002ef2	leaq	0x000a53e7(%rip),%r14
0000000000002ef9	movq	%r14,%rsi
0000000000002efc	call	*0x000a53de(%rip)
0000000000002f02	movq	0x000a33bf(%rip),%rsi
0000000000002f09	movq	0x000811c8(%rip),%r15
0000000000002f10	movq	%rax,%rdi
0000000000002f13	movq	%rbx,%rdx
0000000000002f16	call	*%r15
0000000000002f19	movq	0x000abcc0(%rip),%rdx
0000000000002f20	movq	%rax,%rdi
0000000000002f23	movq	%rbx,%rsi
0000000000002f26	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000002f2b	movq	0x000a552e(%rip),%rdi
0000000000002f32	movq	%r14,%rsi
0000000000002f35	call	*0x000a53a5(%rip)
0000000000002f3b	movq	0x000a1b2e(%rip),%rsi
0000000000002f42	movq	%rax,%rdi
0000000000002f45	call	*%r15
0000000000002f48	movq	0x000abc99(%rip),%rdx
0000000000002f4f	movq	%rax,%rdi
0000000000002f52	movq	%rbx,%rsi
0000000000002f55	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000002f5a	movq	0x000a54ff(%rip),%rdi
0000000000002f61	movq	%r14,%rsi
0000000000002f64	call	*0x000a5376(%rip)
0000000000002f6a	movq	0x000a1aff(%rip),%rsi
0000000000002f71	movq	%rax,%rdi
0000000000002f74	call	*%r15
0000000000002f77	movq	0x000abc72(%rip),%rdx
0000000000002f7e	movq	%rax,%rdi
0000000000002f81	movq	%rbx,%rsi
0000000000002f84	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000002f89	movq	0x000a54d0(%rip),%rdi
0000000000002f90	movq	%r14,%rsi
0000000000002f93	call	*0x000a5347(%rip)
0000000000002f99	movq	0x000a1ad0(%rip),%rsi
0000000000002fa0	movq	%rax,%rdi
0000000000002fa3	call	*%r15
0000000000002fa6	movq	0x000abc4b(%rip),%rdx
0000000000002fad	movq	%rax,%rdi
0000000000002fb0	movq	%rbx,%rsi
0000000000002fb3	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000002fb8	movq	0x000a54f1(%rip),%rdi
0000000000002fbf	movq	%r14,%rsi
0000000000002fc2	call	*0x000a5318(%rip)
0000000000002fc8	movq	0x000a1aa1(%rip),%rsi
0000000000002fcf	movq	%rax,%rdi
0000000000002fd2	call	*%r15
0000000000002fd5	movq	0x000abc24(%rip),%rdx
0000000000002fdc	movq	%rax,%rdi
0000000000002fdf	movq	%rbx,%rsi
0000000000002fe2	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000002fe7	movq	0x000abc1a(%rip),%rax
0000000000002fee	movl	$0x00000001,(%rbx,%rax)
0000000000002ff5	movq	0x000abc14(%rip),%rax
0000000000002ffc	movl	$0x00000000,(%rbx,%rax)
0000000000003003	movq	0x000abc0e(%rip),%rax
000000000000300a	movl	$0x00000000,(%rbx,%rax)
0000000000003011	movq	0x000a58e8(%rip),%rdi
0000000000003018	movq	%r14,%rsi
000000000000301b	call	*0x000a52bf(%rip)
0000000000003021	movq	0x000a1a48(%rip),%rsi
0000000000003028	movq	%rax,%rdi
000000000000302b	call	*%r15
000000000000302e	movq	0x000abbeb(%rip),%rdx
0000000000003035	movq	%rax,%rdi
0000000000003038	movq	%rbx,%rsi
000000000000303b	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000003040	movq	0x000abbe1(%rip),%rax
0000000000003047	movq	$0xffffffff,(%rbx,%rax)
000000000000304f	movq	0x000abbda(%rip),%rax
0000000000003056	movq	$0xffffffff,(%rbx,%rax)
000000000000305e	movq	0x000abbd3(%rip),%rax
0000000000003065	movb	$0x00,(%rbx,%rax)
0000000000003069	movq	%rbx,%rax
000000000000306c	addq	$0x18,%rsp
0000000000003070	popq	%rbx
0000000000003071	popq	%r14
0000000000003073	popq	%r15
0000000000003075	popq	%rbp
0000000000003076	ret
0000000000003077	nop
-[PBXGDB_MIParser initWithMIController:]:
0000000000003078	pushq	%rbp
0000000000003079	movq	%rsp,%rbp
000000000000307c	pushq	%r15
000000000000307e	pushq	%r14
0000000000003080	pushq	%rbx
0000000000003081	subq	$0x18,%rsp
0000000000003085	movq	%rdx,%r14
0000000000003088	movq	%rdi,0xd8(%rbp)
000000000000308c	movq	0x000a5e05(%rip),%rax
0000000000003093	movq	%rax,0xe0(%rbp)
0000000000003097	movq	0x000a19d2(%rip),%rsi
000000000000309e	leaq	0xd8(%rbp),%rdi
00000000000030a2	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000030a7	movq	%rax,%rbx
00000000000030aa	movq	0x000abc4f(%rip),%rdx
00000000000030b1	movq	%r14,%rdi
00000000000030b4	movq	%rbx,%rsi
00000000000030b7	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000030bc	leaq	0x000a521d(%rip),%r14
00000000000030c3	movq	0x000a536e(%rip),%rdi
00000000000030ca	movq	%r14,%rsi
00000000000030cd	call	*0x000a520d(%rip)
00000000000030d3	movq	0x00080ffe(%rip),%r15
00000000000030da	movq	0x000a198f(%rip),%rsi
00000000000030e1	movq	%rax,%rdi
00000000000030e4	call	*%r15
00000000000030e7	movq	0x000abc1a(%rip),%rdx
00000000000030ee	movq	%rax,%rdi
00000000000030f1	movq	%rbx,%rsi
00000000000030f4	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000030f9	movq	0x000a5858(%rip),%rdi
0000000000003100	movq	%r14,%rsi
0000000000003103	call	*0x000a51d7(%rip)
0000000000003109	movq	0x000a1960(%rip),%rsi
0000000000003110	movq	%rax,%rdi
0000000000003113	call	*%r15
0000000000003116	movq	0x000abbf3(%rip),%rdx
000000000000311d	movq	%rax,%rdi
0000000000003120	movq	%rbx,%rsi
0000000000003123	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000003128	movq	0x000a3451(%rip),%rsi
000000000000312f	movq	0x000a54a2(%rip),%rdi
0000000000003136	call	*%r15
0000000000003139	movq	_OBJC_METACLASS_$_PBXGDB_MIStackDepthCommand(%rip),%rdx
0000000000003140	movq	%rax,%rdi
0000000000003143	movq	%rbx,%rsi
0000000000003146	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000000314b	movq	0x000a52e6(%rip),%rdi
0000000000003152	movq	%r14,%rsi
0000000000003155	call	*0x000a5185(%rip)
000000000000315b	movq	0x000a190e(%rip),%rsi
0000000000003162	movq	%rax,%rdi
0000000000003165	call	*%r15
0000000000003168	movq	0x000abbb1(%rip),%rdx
000000000000316f	movq	%rax,%rdi
0000000000003172	movq	%rbx,%rsi
0000000000003175	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000000317a	movq	%rbx,%rax
000000000000317d	addq	$0x18,%rsp
0000000000003181	popq	%rbx
0000000000003182	popq	%r14
0000000000003184	popq	%r15
0000000000003186	popq	%rbp
0000000000003187	ret
-[PBXGDB_MIResultList init]:
0000000000003188	pushq	%rbp
0000000000003189	movq	%rsp,%rbp
000000000000318c	pushq	%rbx
000000000000318d	subq	$0x18,%rsp
0000000000003191	movq	%rdi,0xe8(%rbp)
0000000000003195	movq	0x000a5d04(%rip),%rax
000000000000319c	movq	%rax,0xf0(%rbp)
00000000000031a0	movq	0x000a18c9(%rip),%rsi
00000000000031a7	leaq	0xe8(%rbp),%rdi
00000000000031ab	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000031b0	movq	%rax,%rbx
00000000000031b3	leaq	0x000a5126(%rip),%rsi
00000000000031ba	movq	0x000a57af(%rip),%rdi
00000000000031c1	call	*0x000a5119(%rip)
00000000000031c7	movq	0x000a18a2(%rip),%rsi
00000000000031ce	movq	%rax,%rdi
00000000000031d1	call	*0x00080f01(%rip)
00000000000031d7	movq	0x000abb92(%rip),%rdx
00000000000031de	movq	%rax,%rdi
00000000000031e1	movq	%rbx,%rsi
00000000000031e4	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000031e9	movq	%rbx,%rax
00000000000031ec	addq	$0x18,%rsp
00000000000031f0	popq	%rbx
00000000000031f1	popq	%rbp
00000000000031f2	ret
-[PBXGDB_Controller setGDBAdaptor:]:
00000000000031f3	pushq	%rbp
00000000000031f4	movq	%rsp,%rbp
00000000000031f7	movq	%rdx,%rax
00000000000031fa	movq	%rdi,%rcx
00000000000031fd	movq	0x000ab674(%rip),%rdx
0000000000003204	movq	%rax,%rdi
0000000000003207	movq	%rcx,%rsi
000000000000320a	popq	%rbp
000000000000320b	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000003210	nop
-[PBXGDB_ThreadController setGDBAdaptor:]:
0000000000003211	pushq	%rbp
0000000000003212	movq	%rsp,%rbp
0000000000003215	subq	$0x10,%rsp
0000000000003219	movq	%rdi,0xf0(%rbp)
000000000000321d	movq	0x000a5d5c(%rip),%rax
0000000000003224	movq	%rax,0xf8(%rbp)
0000000000003228	movq	0x000a1af9(%rip),%rsi
000000000000322f	leaq	0xf0(%rbp),%rdi
0000000000003233	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000003238	addq	$0x10,%rsp
000000000000323c	popq	%rbp
000000000000323d	ret
-[PBXGDB_BreakpointController init]:
000000000000323e	pushq	%rbp
000000000000323f	movq	%rsp,%rbp
0000000000003242	pushq	%r15
0000000000003244	pushq	%r14
0000000000003246	pushq	%rbx
0000000000003247	subq	$0x18,%rsp
000000000000324b	movq	%rdi,0xd8(%rbp)
000000000000324f	movq	0x000a5e0a(%rip),%rax
0000000000003256	movq	%rax,0xe0(%rbp)
000000000000325a	movq	0x000a180f(%rip),%rsi
0000000000003261	leaq	0xd8(%rbp),%rdi
0000000000003265	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000000326a	movq	%rax,%rbx
000000000000326d	leaq	0x000a506c(%rip),%r14
0000000000003274	movq	0x000a53ed(%rip),%rdi
000000000000327b	movq	%r14,%rsi
000000000000327e	call	*0x000a505c(%rip)
0000000000003284	movq	0x00080e4d(%rip),%r15
000000000000328b	movq	0x000a17de(%rip),%rsi
0000000000003292	movq	%rax,%rdi
0000000000003295	call	*%r15
0000000000003298	movq	0x000ac291(%rip),%rdx
000000000000329f	movq	%rax,%rdi
00000000000032a2	movq	%rbx,%rsi
00000000000032a5	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000032aa	movq	0x000a51ff(%rip),%rdi
00000000000032b1	movq	%r14,%rsi
00000000000032b4	call	*0x000a5026(%rip)
00000000000032ba	movq	0x000a17af(%rip),%rsi
00000000000032c1	movq	%rax,%rdi
00000000000032c4	call	*%r15
00000000000032c7	movq	0x000ac26a(%rip),%rdx
00000000000032ce	movq	%rax,%rdi
00000000000032d1	movq	%rbx,%rsi
00000000000032d4	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000032d9	movq	0x000a58a0(%rip),%rdi
00000000000032e0	movq	%r14,%rsi
00000000000032e3	call	*0x000a4ff7(%rip)
00000000000032e9	movq	0x000a1780(%rip),%rsi
00000000000032f0	movq	%rax,%rdi
00000000000032f3	call	*%r15
00000000000032f6	movq	0x000ac243(%rip),%rdx
00000000000032fd	movq	%rax,%rdi
0000000000003300	movq	%rbx,%rsi
0000000000003303	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000003308	movq	%rbx,%rax
000000000000330b	addq	$0x18,%rsp
000000000000330f	popq	%rbx
0000000000003310	popq	%r14
0000000000003312	popq	%r15
0000000000003314	popq	%rbp
0000000000003315	ret
0000000000003316	nop
0000000000003317	nop
0000000000003318	nop
0000000000003319	nop
000000000000331a	nop
000000000000331b	nop
000000000000331c	nop
000000000000331d	nop
000000000000331e	nop
000000000000331f	nop
-[PBXGDB_SequenceController init]:
0000000000003320	pushq	%rbp
0000000000003321	movq	%rsp,%rbp
0000000000003324	pushq	%r15
0000000000003326	pushq	%r14
0000000000003328	pushq	%rbx
0000000000003329	subq	$0x18,%rsp
000000000000332d	movq	%rdi,0xd8(%rbp)
0000000000003331	movq	0x000a5c20(%rip),%rax
0000000000003338	movq	%rax,0xe0(%rbp)
000000000000333c	movq	0x000a172d(%rip),%rsi
0000000000003343	leaq	0xd8(%rbp),%rdi
0000000000003347	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000000334c	movq	%rax,%rbx
000000000000334f	testq	%rbx,%rbx
0000000000003352	je	0x0000346d
0000000000003358	movq	0x000a5101(%rip),%rdi
000000000000335f	leaq	0x000a4f7a(%rip),%r14
0000000000003366	movq	%r14,%rsi
0000000000003369	call	*0x000a4f71(%rip)
000000000000336f	movq	0x000a16fa(%rip),%rsi
0000000000003376	movq	0x00080d5b(%rip),%r15
000000000000337d	movq	%rax,%rdi
0000000000003380	call	*%r15
0000000000003383	movq	0x000abbce(%rip),%rdx
000000000000338a	movq	%rax,%rdi
000000000000338d	movq	%rbx,%rsi
0000000000003390	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000003395	movq	0x000a50c4(%rip),%rdi
000000000000339c	movq	%r14,%rsi
000000000000339f	call	*0x000a4f3b(%rip)
00000000000033a5	movq	0x000a16c4(%rip),%rsi
00000000000033ac	movq	%rax,%rdi
00000000000033af	call	*%r15
00000000000033b2	movq	0x000abba7(%rip),%rdx
00000000000033b9	movq	%rax,%rdi
00000000000033bc	movq	%rbx,%rsi
00000000000033bf	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000033c4	movq	0x000a5095(%rip),%rdi
00000000000033cb	movq	%r14,%rsi
00000000000033ce	call	*0x000a4f0c(%rip)
00000000000033d4	movq	0x000a1695(%rip),%rsi
00000000000033db	movq	%rax,%rdi
00000000000033de	call	*%r15
00000000000033e1	movq	0x000abb80(%rip),%rdx
00000000000033e8	movq	%rax,%rdi
00000000000033eb	movq	%rbx,%rsi
00000000000033ee	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000033f3	movq	0x000a5066(%rip),%rdi
00000000000033fa	movq	%r14,%rsi
00000000000033fd	call	*0x000a4edd(%rip)
0000000000003403	movq	0x000a1666(%rip),%rsi
000000000000340a	movq	%rax,%rdi
000000000000340d	call	*%r15
0000000000003410	movq	0x000abb59(%rip),%rdx
0000000000003417	movq	%rax,%rdi
000000000000341a	movq	%rbx,%rsi
000000000000341d	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000003422	movq	0x000a5037(%rip),%rdi
0000000000003429	movq	%r14,%rsi
000000000000342c	call	*0x000a4eae(%rip)
0000000000003432	movq	0x000a1637(%rip),%rsi
0000000000003439	movq	%rax,%rdi
000000000000343c	call	*%r15
000000000000343f	movq	0x000abb32(%rip),%rdx
0000000000003446	movq	%rax,%rdi
0000000000003449	movq	%rbx,%rsi
000000000000344c	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000003451	movq	0x000abb28(%rip),%rdx
0000000000003458	xorl	%edi,%edi
000000000000345a	movq	%rbx,%rsi
000000000000345d	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000003462	movq	0x000abb1f(%rip),%rax
0000000000003469	movb	$0x00,(%rbx,%rax)
000000000000346d	movq	%rbx,%rax
0000000000003470	addq	$0x18,%rsp
0000000000003474	popq	%rbx
0000000000003475	popq	%r14
0000000000003477	popq	%r15
0000000000003479	popq	%rbp
000000000000347a	ret
000000000000347b	nop
000000000000347c	nop
-[PBXGDB_SequenceController setGDBAdaptor:]:
000000000000347d	pushq	%rbp
000000000000347e	movq	%rsp,%rbp
0000000000003481	subq	$0x10,%rsp
0000000000003485	testq	%rdx,%rdx
0000000000003488	je	0x0000349b
000000000000348a	movq	0x000abb07(%rip),%rax
0000000000003491	cmpb	$0x00,(%rdi,%rax)
0000000000003495	jne	0x0000349b
0000000000003497	movb	$0x01,(%rdi,%rax)
000000000000349b	movq	%rdi,0xf0(%rbp)
000000000000349f	movq	0x000a5ab2(%rip),%rax
00000000000034a6	movq	%rax,0xf8(%rbp)
00000000000034aa	movq	0x000a1877(%rip),%rsi
00000000000034b1	leaq	0xf0(%rbp),%rdi
00000000000034b5	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000034ba	addq	$0x10,%rsp
00000000000034be	popq	%rbp
00000000000034bf	ret
-[PBXGDB_Adaptor _initStringTable]:
00000000000034c0	pushq	%rbp
00000000000034c1	movq	%rsp,%rbp
00000000000034c4	pushq	%rbx
00000000000034c5	pushq	%rax
00000000000034c6	movq	%rdi,%rbx
00000000000034c9	movq	0x000ab1d0(%rip),%rax
00000000000034d0	movq	(%rbx,%rax),%rdi
00000000000034d4	movq	0x000a1855(%rip),%rsi
00000000000034db	leaq	0x000ac5b6(%rip),%rcx
00000000000034e2	movq	%rcx,%rdx
00000000000034e5	call	*0x00080bed(%rip)
00000000000034eb	movq	0x000ab1ae(%rip),%rax
00000000000034f2	movq	(%rbx,%rax),%rdi
00000000000034f6	movq	0x000a1833(%rip),%rsi
00000000000034fd	leaq	0x000ac5b4(%rip),%rcx
0000000000003504	movq	%rcx,%rdx
0000000000003507	call	*0x00080bcb(%rip)
000000000000350d	leaq	0x000ac5c4(%rip),%rcx
0000000000003514	movq	0x000ab185(%rip),%rax
000000000000351b	movq	(%rbx,%rax),%rdi
000000000000351f	movq	0x000a180a(%rip),%rsi
0000000000003526	movq	%rcx,%rdx
0000000000003529	call	*0x00080ba9(%rip)
000000000000352f	leaq	0x000ac5c2(%rip),%rcx
0000000000003536	movq	0x000ab163(%rip),%rax
000000000000353d	movq	(%rbx,%rax),%rdi
0000000000003541	movq	0x000a17e8(%rip),%rsi
0000000000003548	movq	%rcx,%rdx
000000000000354b	call	*0x00080b87(%rip)
0000000000003551	leaq	0x000ac5c0(%rip),%rcx
0000000000003558	movq	0x000ab141(%rip),%rax
000000000000355f	movq	(%rbx,%rax),%rdi
0000000000003563	movq	0x000a17c6(%rip),%rsi
000000000000356a	movq	%rcx,%rdx
000000000000356d	call	*0x00080b65(%rip)
0000000000003573	leaq	0x000ac5be(%rip),%rcx
000000000000357a	movq	0x000ab11f(%rip),%rax
0000000000003581	movq	(%rbx,%rax),%rdi
0000000000003585	movq	0x000a17a4(%rip),%rsi
000000000000358c	movq	%rcx,%rdx
000000000000358f	call	*0x00080b43(%rip)
0000000000003595	leaq	0x000ac5bc(%rip),%rcx
000000000000359c	movq	0x000ab0fd(%rip),%rax
00000000000035a3	movq	(%rbx,%rax),%rdi
00000000000035a7	movq	0x000a1782(%rip),%rsi
00000000000035ae	movq	%rcx,%rdx
00000000000035b1	call	*0x00080b21(%rip)
00000000000035b7	leaq	0x000ac5ba(%rip),%rcx
00000000000035be	movq	0x000ab0db(%rip),%rax
00000000000035c5	movq	(%rbx,%rax),%rdi
00000000000035c9	movq	0x000a1760(%rip),%rsi
00000000000035d0	movq	%rcx,%rdx
00000000000035d3	call	*0x00080aff(%rip)
00000000000035d9	leaq	0x000ac5b8(%rip),%rcx
00000000000035e0	movq	0x000ab0b9(%rip),%rax
00000000000035e7	movq	(%rbx,%rax),%rdi
00000000000035eb	movq	0x000a173e(%rip),%rsi
00000000000035f2	movq	%rcx,%rdx
00000000000035f5	call	*0x00080add(%rip)
00000000000035fb	leaq	0x000ac5b6(%rip),%rcx
0000000000003602	movq	0x000ab097(%rip),%rax
0000000000003609	movq	(%rbx,%rax),%rdi
000000000000360d	movq	0x000a171c(%rip),%rsi
0000000000003614	movq	%rcx,%rdx
0000000000003617	call	*0x00080abb(%rip)
000000000000361d	leaq	0x000ac5b4(%rip),%rcx
0000000000003624	movq	0x000ab075(%rip),%rax
000000000000362b	movq	(%rbx,%rax),%rdi
000000000000362f	movq	0x000a16fa(%rip),%rsi
0000000000003636	movq	%rcx,%rdx
0000000000003639	call	*0x00080a99(%rip)
000000000000363f	leaq	0x000ac5b2(%rip),%rcx
0000000000003646	movq	0x000ab053(%rip),%rax
000000000000364d	movq	(%rbx,%rax),%rdi
0000000000003651	movq	0x000a16d8(%rip),%rsi
0000000000003658	movq	%rcx,%rdx
000000000000365b	call	*0x00080a77(%rip)
0000000000003661	leaq	_OBJC_METACLASS_$_PBXGDB_MISingleVarObjCommand(%rip),%rcx
0000000000003668	movq	0x000ab031(%rip),%rax
000000000000366f	movq	(%rbx,%rax),%rdi
0000000000003673	movq	0x000a16b6(%rip),%rsi
000000000000367a	movq	%rcx,%rdx
000000000000367d	call	*0x00080a55(%rip)
0000000000003683	leaq	0x000ac5ae(%rip),%rcx
000000000000368a	movq	0x000ab00f(%rip),%rax
0000000000003691	movq	(%rbx,%rax),%rdi
0000000000003695	movq	0x000a1694(%rip),%rsi
000000000000369c	movq	%rcx,%rdx
000000000000369f	call	*0x00080a33(%rip)
00000000000036a5	leaq	0x000ac5ac(%rip),%rcx
00000000000036ac	movq	0x000aafed(%rip),%rax
00000000000036b3	movq	(%rbx,%rax),%rdi
00000000000036b7	movq	0x000a1672(%rip),%rsi
00000000000036be	movq	%rcx,%rdx
00000000000036c1	call	*0x00080a11(%rip)
00000000000036c7	leaq	0x000ac5aa(%rip),%rcx
00000000000036ce	movq	0x000aafcb(%rip),%rax
00000000000036d5	movq	(%rbx,%rax),%rdi
00000000000036d9	movq	0x000a1650(%rip),%rsi
00000000000036e0	movq	%rcx,%rdx
00000000000036e3	call	*0x000809ef(%rip)
00000000000036e9	leaq	0x000ac5a8(%rip),%rcx
00000000000036f0	movq	0x000aafa9(%rip),%rax
00000000000036f7	movq	(%rbx,%rax),%rdi
00000000000036fb	movq	0x000a162e(%rip),%rsi
0000000000003702	movq	%rcx,%rdx
0000000000003705	call	*0x000809cd(%rip)
000000000000370b	leaq	0x000ac5a6(%rip),%rcx
0000000000003712	movq	0x000aaf87(%rip),%rax
0000000000003719	movq	(%rbx,%rax),%rdi
000000000000371d	movq	0x000a160c(%rip),%rsi
0000000000003724	movq	%rcx,%rdx
0000000000003727	call	*0x000809ab(%rip)
000000000000372d	leaq	0x000ac5a4(%rip),%rcx
0000000000003734	movq	0x000aaf65(%rip),%rax
000000000000373b	movq	(%rbx,%rax),%rdi
000000000000373f	movq	0x000a15ea(%rip),%rsi
0000000000003746	movq	%rcx,%rdx
0000000000003749	call	*0x00080989(%rip)
000000000000374f	leaq	0x000ac5a2(%rip),%rcx
0000000000003756	movq	0x000aaf43(%rip),%rax
000000000000375d	movq	(%rbx,%rax),%rdi
0000000000003761	movq	0x000a15c8(%rip),%rsi
0000000000003768	movq	%rcx,%rdx
000000000000376b	call	*0x00080967(%rip)
0000000000003771	leaq	0x000ac5a0(%rip),%rcx
0000000000003778	movq	0x000aaf21(%rip),%rax
000000000000377f	movq	(%rbx,%rax),%rdi
0000000000003783	movq	0x000a15a6(%rip),%rsi
000000000000378a	movq	%rcx,%rdx
000000000000378d	call	*0x00080945(%rip)
0000000000003793	leaq	0x000ac59e(%rip),%rcx
000000000000379a	movq	0x000aaeff(%rip),%rax
00000000000037a1	movq	(%rbx,%rax),%rdi
00000000000037a5	movq	0x000a1584(%rip),%rsi
00000000000037ac	movq	%rcx,%rdx
00000000000037af	call	*0x00080923(%rip)
00000000000037b5	leaq	0x000abfdc(%rip),%rcx
00000000000037bc	movq	0x000aaedd(%rip),%rax
00000000000037c3	movq	(%rbx,%rax),%rdi
00000000000037c7	movq	0x000a1562(%rip),%rsi
00000000000037ce	movq	%rcx,%rdx
00000000000037d1	call	*0x00080901(%rip)
00000000000037d7	leaq	0x000ac57a(%rip),%rcx
00000000000037de	movq	0x000aaebb(%rip),%rax
00000000000037e5	movq	(%rbx,%rax),%rdi
00000000000037e9	movq	0x000a1540(%rip),%rsi
00000000000037f0	movq	%rcx,%rdx
00000000000037f3	call	*0x000808df(%rip)
00000000000037f9	leaq	0x000ac578(%rip),%rcx
0000000000003800	movq	0x000aae99(%rip),%rax
0000000000003807	movq	(%rbx,%rax),%rdi
000000000000380b	movq	0x000a151e(%rip),%rsi
0000000000003812	movq	%rcx,%rdx
0000000000003815	call	*0x000808bd(%rip)
000000000000381b	leaq	0x000ac576(%rip),%rcx
0000000000003822	movq	0x000aae77(%rip),%rax
0000000000003829	movq	(%rbx,%rax),%rdi
000000000000382d	movq	0x000a14fc(%rip),%rsi
0000000000003834	movq	%rcx,%rdx
0000000000003837	call	*0x0008089b(%rip)
000000000000383d	leaq	0x000ac574(%rip),%rcx
0000000000003844	movq	0x000aae55(%rip),%rax
000000000000384b	movq	(%rbx,%rax),%rdi
000000000000384f	movq	0x000a14da(%rip),%rsi
0000000000003856	movq	%rcx,%rdx
0000000000003859	call	*0x00080879(%rip)
000000000000385f	leaq	0x000ac572(%rip),%rcx
0000000000003866	movq	0x000aae33(%rip),%rax
000000000000386d	movq	(%rbx,%rax),%rdi
0000000000003871	movq	0x000a14b8(%rip),%rsi
0000000000003878	movq	%rcx,%rdx
000000000000387b	call	*0x00080857(%rip)
0000000000003881	leaq	0x000ac570(%rip),%rcx
0000000000003888	movq	0x000aae11(%rip),%rax
000000000000388f	movq	(%rbx,%rax),%rdi
0000000000003893	movq	0x000a1496(%rip),%rsi
000000000000389a	movq	%rcx,%rdx
000000000000389d	call	*0x00080835(%rip)
00000000000038a3	leaq	0x000ac56e(%rip),%rcx
00000000000038aa	movq	0x000aadef(%rip),%rax
00000000000038b1	movq	(%rbx,%rax),%rdi
00000000000038b5	movq	0x000a1474(%rip),%rsi
00000000000038bc	movq	%rcx,%rdx
00000000000038bf	call	*0x00080813(%rip)
00000000000038c5	leaq	0x000ac56c(%rip),%rcx
00000000000038cc	movq	0x000aadcd(%rip),%rax
00000000000038d3	movq	(%rbx,%rax),%rdi
00000000000038d7	movq	0x000a1452(%rip),%rsi
00000000000038de	movq	%rcx,%rdx
00000000000038e1	call	*0x000807f1(%rip)
00000000000038e7	leaq	0x000ac56a(%rip),%rcx
00000000000038ee	movq	0x000aadab(%rip),%rax
00000000000038f5	movq	(%rbx,%rax),%rdi
00000000000038f9	movq	0x000a1430(%rip),%rsi
0000000000003900	movq	%rcx,%rdx
0000000000003903	call	*0x000807cf(%rip)
0000000000003909	leaq	0x000ac568(%rip),%rcx
0000000000003910	movq	0x000aad89(%rip),%rax
0000000000003917	movq	(%rbx,%rax),%rdi
000000000000391b	movq	0x000a140e(%rip),%rsi
0000000000003922	movq	%rcx,%rdx
0000000000003925	call	*0x000807ad(%rip)
000000000000392b	leaq	0x000ac566(%rip),%rcx
0000000000003932	movq	0x000aad67(%rip),%rax
0000000000003939	movq	(%rbx,%rax),%rdi
000000000000393d	movq	0x000a13ec(%rip),%rsi
0000000000003944	movq	%rcx,%rdx
0000000000003947	call	*0x0008078b(%rip)
000000000000394d	leaq	0x000ac564(%rip),%rcx
0000000000003954	movq	0x000aad45(%rip),%rax
000000000000395b	movq	(%rbx,%rax),%rdi
000000000000395f	movq	0x000a13ca(%rip),%rsi
0000000000003966	movq	%rcx,%rdx
0000000000003969	call	*0x00080769(%rip)
000000000000396f	leaq	0x000ac562(%rip),%rcx
0000000000003976	movq	0x000aad23(%rip),%rax
000000000000397d	movq	(%rbx,%rax),%rdi
0000000000003981	movq	0x000a13a8(%rip),%rsi
0000000000003988	movq	%rcx,%rdx
000000000000398b	call	*0x00080747(%rip)
0000000000003991	leaq	_OBJC_CLASS_$_PBXGDB_MICreateVarObjCommand(%rip),%rcx
0000000000003998	movq	0x000aad01(%rip),%rax
000000000000399f	movq	(%rbx,%rax),%rdi
00000000000039a3	movq	0x000a1386(%rip),%rsi
00000000000039aa	movq	%rcx,%rdx
00000000000039ad	call	*0x00080725(%rip)
00000000000039b3	leaq	0x000ac55e(%rip),%rcx
00000000000039ba	movq	0x000aacdf(%rip),%rax
00000000000039c1	movq	(%rbx,%rax),%rdi
00000000000039c5	movq	0x000a1364(%rip),%rsi
00000000000039cc	movq	%rcx,%rdx
00000000000039cf	call	*0x00080703(%rip)
00000000000039d5	leaq	0x000ac55c(%rip),%rcx
00000000000039dc	movq	0x000aacbd(%rip),%rax
00000000000039e3	movq	(%rbx,%rax),%rdi
00000000000039e7	movq	0x000a1342(%rip),%rsi
00000000000039ee	movq	%rcx,%rdx
00000000000039f1	call	*0x000806e1(%rip)
00000000000039f7	leaq	0x000ac55a(%rip),%rcx
00000000000039fe	movq	0x000aac9b(%rip),%rax
0000000000003a05	movq	(%rbx,%rax),%rdi
0000000000003a09	movq	0x000a1320(%rip),%rsi
0000000000003a10	movq	%rcx,%rdx
0000000000003a13	call	*0x000806bf(%rip)
0000000000003a19	leaq	0x000ac558(%rip),%rcx
0000000000003a20	movq	0x000aac79(%rip),%rax
0000000000003a27	movq	(%rbx,%rax),%rdi
0000000000003a2b	movq	0x000a12fe(%rip),%rsi
0000000000003a32	movq	%rcx,%rdx
0000000000003a35	call	*0x0008069d(%rip)
0000000000003a3b	leaq	0x000ac556(%rip),%rcx
0000000000003a42	movq	0x000aac57(%rip),%rax
0000000000003a49	movq	(%rbx,%rax),%rdi
0000000000003a4d	movq	0x000a12dc(%rip),%rsi
0000000000003a54	movq	%rcx,%rdx
0000000000003a57	call	*0x0008067b(%rip)
0000000000003a5d	leaq	0x000ac554(%rip),%rcx
0000000000003a64	movq	0x000aac35(%rip),%rax
0000000000003a6b	movq	(%rbx,%rax),%rdi
0000000000003a6f	movq	0x000a12ba(%rip),%rsi
0000000000003a76	movq	%rcx,%rdx
0000000000003a79	call	*0x00080659(%rip)
0000000000003a7f	leaq	0x000ac552(%rip),%rcx
0000000000003a86	movq	0x000aac13(%rip),%rax
0000000000003a8d	movq	(%rbx,%rax),%rdi
0000000000003a91	movq	0x000a1298(%rip),%rsi
0000000000003a98	movq	%rcx,%rdx
0000000000003a9b	call	*0x00080637(%rip)
0000000000003aa1	leaq	0x000ac550(%rip),%rcx
0000000000003aa8	movq	0x000aabf1(%rip),%rax
0000000000003aaf	movq	(%rbx,%rax),%rdi
0000000000003ab3	movq	0x000a1276(%rip),%rsi
0000000000003aba	movq	%rcx,%rdx
0000000000003abd	call	*0x00080615(%rip)
0000000000003ac3	leaq	0x000ac54e(%rip),%rcx
0000000000003aca	movq	0x000aabcf(%rip),%rax
0000000000003ad1	movq	(%rbx,%rax),%rdi
0000000000003ad5	movq	0x000a1254(%rip),%rsi
0000000000003adc	movq	%rcx,%rdx
0000000000003adf	call	*0x000805f3(%rip)
0000000000003ae5	leaq	0x000ac54c(%rip),%rcx
0000000000003aec	movq	0x000aabad(%rip),%rax
0000000000003af3	movq	(%rbx,%rax),%rdi
0000000000003af7	movq	0x000a1232(%rip),%rsi
0000000000003afe	movq	%rcx,%rdx
0000000000003b01	call	*0x000805d1(%rip)
0000000000003b07	leaq	0x000ac54a(%rip),%rcx
0000000000003b0e	movq	0x000aab8b(%rip),%rax
0000000000003b15	movq	(%rbx,%rax),%rdi
0000000000003b19	movq	0x000a1210(%rip),%rsi
0000000000003b20	movq	%rcx,%rdx
0000000000003b23	call	*0x000805af(%rip)
0000000000003b29	leaq	0x000ac548(%rip),%rcx
0000000000003b30	movq	0x000aab69(%rip),%rax
0000000000003b37	movq	(%rbx,%rax),%rdi
0000000000003b3b	movq	0x000a11ee(%rip),%rsi
0000000000003b42	movq	%rcx,%rdx
0000000000003b45	call	*0x0008058d(%rip)
0000000000003b4b	leaq	0x000ac546(%rip),%rcx
0000000000003b52	movq	0x000aab47(%rip),%rax
0000000000003b59	movq	(%rbx,%rax),%rdi
0000000000003b5d	movq	0x000a11cc(%rip),%rsi
0000000000003b64	movq	%rcx,%rdx
0000000000003b67	call	*0x0008056b(%rip)
0000000000003b6d	leaq	0x000ac544(%rip),%rcx
0000000000003b74	movq	0x000aab25(%rip),%rax
0000000000003b7b	movq	(%rbx,%rax),%rdi
0000000000003b7f	movq	0x000a11aa(%rip),%rsi
0000000000003b86	movq	%rcx,%rdx
0000000000003b89	call	*0x00080549(%rip)
0000000000003b8f	leaq	0x000ac542(%rip),%rcx
0000000000003b96	movq	0x000aab03(%rip),%rax
0000000000003b9d	movq	(%rbx,%rax),%rdi
0000000000003ba1	movq	0x000a1188(%rip),%rsi
0000000000003ba8	movq	%rcx,%rdx
0000000000003bab	call	*0x00080527(%rip)
0000000000003bb1	leaq	0x000ac540(%rip),%rcx
0000000000003bb8	movq	0x000aaae1(%rip),%rax
0000000000003bbf	movq	(%rbx,%rax),%rdi
0000000000003bc3	movq	0x000a1166(%rip),%rsi
0000000000003bca	movq	%rcx,%rdx
0000000000003bcd	call	*0x00080505(%rip)
0000000000003bd3	leaq	0x000ac53e(%rip),%rcx
0000000000003bda	movq	0x000aaabf(%rip),%rax
0000000000003be1	movq	(%rbx,%rax),%rdi
0000000000003be5	movq	0x000a1144(%rip),%rsi
0000000000003bec	movq	%rcx,%rdx
0000000000003bef	call	*0x000804e3(%rip)
0000000000003bf5	leaq	0x000ac53c(%rip),%rcx
0000000000003bfc	movq	0x000aaa9d(%rip),%rax
0000000000003c03	movq	(%rbx,%rax),%rdi
0000000000003c07	movq	0x000a1122(%rip),%rsi
0000000000003c0e	movq	%rcx,%rdx
0000000000003c11	call	*0x000804c1(%rip)
0000000000003c17	leaq	0x000ac53a(%rip),%rcx
0000000000003c1e	movq	0x000aaa7b(%rip),%rax
0000000000003c25	movq	(%rbx,%rax),%rdi
0000000000003c29	movq	0x000a1100(%rip),%rsi
0000000000003c30	movq	%rcx,%rdx
0000000000003c33	call	*0x0008049f(%rip)
0000000000003c39	leaq	_OBJC_CLASS_$_PBXGDB_MIBaseVarObjCommand(%rip),%rcx
0000000000003c40	movq	0x000aaa59(%rip),%rax
0000000000003c47	movq	(%rbx,%rax),%rdi
0000000000003c4b	movq	0x000a10de(%rip),%rsi
0000000000003c52	movq	%rcx,%rdx
0000000000003c55	call	*0x0008047d(%rip)
0000000000003c5b	leaq	0x000ac536(%rip),%rcx
0000000000003c62	movq	0x000aaa37(%rip),%rax
0000000000003c69	movq	(%rbx,%rax),%rdi
0000000000003c6d	movq	0x000a10bc(%rip),%rsi
0000000000003c74	movq	%rcx,%rdx
0000000000003c77	call	*0x0008045b(%rip)
0000000000003c7d	leaq	0x000ac534(%rip),%rcx
0000000000003c84	movq	0x000aaa15(%rip),%rax
0000000000003c8b	movq	(%rbx,%rax),%rdi
0000000000003c8f	movq	0x000a109a(%rip),%rsi
0000000000003c96	movq	%rcx,%rdx
0000000000003c99	call	*0x00080439(%rip)
0000000000003c9f	leaq	0x000ac532(%rip),%rcx
0000000000003ca6	movq	0x000aa9f3(%rip),%rax
0000000000003cad	movq	(%rbx,%rax),%rdi
0000000000003cb1	movq	0x000a1078(%rip),%rsi
0000000000003cb8	movq	%rcx,%rdx
0000000000003cbb	call	*0x00080417(%rip)
0000000000003cc1	leaq	0x000ac530(%rip),%rcx
0000000000003cc8	movq	0x000aa9d1(%rip),%rax
0000000000003ccf	movq	(%rbx,%rax),%rdi
0000000000003cd3	movq	0x000a1056(%rip),%rsi
0000000000003cda	movq	%rcx,%rdx
0000000000003cdd	call	*0x000803f5(%rip)
0000000000003ce3	leaq	0x000ac52e(%rip),%rcx
0000000000003cea	movq	0x000aa9af(%rip),%rax
0000000000003cf1	movq	(%rbx,%rax),%rdi
0000000000003cf5	movq	0x000a1034(%rip),%rsi
0000000000003cfc	movq	%rcx,%rdx
0000000000003cff	call	*0x000803d3(%rip)
0000000000003d05	leaq	0x000ac52c(%rip),%rcx
0000000000003d0c	movq	0x000aa98d(%rip),%rax
0000000000003d13	movq	(%rbx,%rax),%rdi
0000000000003d17	movq	0x000a1012(%rip),%rsi
0000000000003d1e	movq	%rcx,%rdx
0000000000003d21	call	*0x000803b1(%rip)
0000000000003d27	leaq	0x000ac52a(%rip),%rcx
0000000000003d2e	movq	0x000aa96b(%rip),%rax
0000000000003d35	movq	(%rbx,%rax),%rdi
0000000000003d39	movq	0x000a0ff0(%rip),%rsi
0000000000003d40	movq	%rcx,%rdx
0000000000003d43	call	*0x0008038f(%rip)
0000000000003d49	leaq	0x000ac528(%rip),%rcx
0000000000003d50	movq	0x000aa949(%rip),%rax
0000000000003d57	movq	(%rbx,%rax),%rdi
0000000000003d5b	movq	0x000a0fce(%rip),%rsi
0000000000003d62	movq	%rcx,%rdx
0000000000003d65	call	*0x0008036d(%rip)
0000000000003d6b	leaq	0x000ac526(%rip),%rcx
0000000000003d72	movq	0x000aa927(%rip),%rax
0000000000003d79	movq	(%rbx,%rax),%rdi
0000000000003d7d	movq	0x000a0fac(%rip),%rsi
0000000000003d84	movq	%rcx,%rdx
0000000000003d87	call	*0x0008034b(%rip)
0000000000003d8d	leaq	0x000ac524(%rip),%rcx
0000000000003d94	movq	0x000aa905(%rip),%rax
0000000000003d9b	movq	(%rbx,%rax),%rdi
0000000000003d9f	movq	0x000a0f8a(%rip),%rsi
0000000000003da6	movq	%rcx,%rdx
0000000000003da9	call	*0x00080329(%rip)
0000000000003daf	leaq	0x000ac522(%rip),%rcx
0000000000003db6	movq	0x000aa8e3(%rip),%rax
0000000000003dbd	movq	(%rbx,%rax),%rdi
0000000000003dc1	movq	0x000a0f68(%rip),%rsi
0000000000003dc8	movq	%rcx,%rdx
0000000000003dcb	call	*0x00080307(%rip)
0000000000003dd1	leaq	0x000ac520(%rip),%rcx
0000000000003dd8	movq	0x000aa8c1(%rip),%rax
0000000000003ddf	movq	(%rbx,%rax),%rdi
0000000000003de3	movq	0x000a0f46(%rip),%rsi
0000000000003dea	movq	%rcx,%rdx
0000000000003ded	call	*0x000802e5(%rip)
0000000000003df3	leaq	0x000ac51e(%rip),%rcx
0000000000003dfa	movq	0x000aa89f(%rip),%rax
0000000000003e01	movq	(%rbx,%rax),%rdi
0000000000003e05	movq	0x000a0f24(%rip),%rsi
0000000000003e0c	movq	%rcx,%rdx
0000000000003e0f	call	*0x000802c3(%rip)
0000000000003e15	leaq	0x000ac51c(%rip),%rcx
0000000000003e1c	movq	0x000aa87d(%rip),%rax
0000000000003e23	movq	(%rbx,%rax),%rdi
0000000000003e27	movq	0x000a0f02(%rip),%rsi
0000000000003e2e	movq	%rcx,%rdx
0000000000003e31	call	*0x000802a1(%rip)
0000000000003e37	leaq	0x000ac51a(%rip),%rcx
0000000000003e3e	movq	0x000aa85b(%rip),%rax
0000000000003e45	movq	(%rbx,%rax),%rdi
0000000000003e49	movq	0x000a0ee0(%rip),%rsi
0000000000003e50	movq	%rcx,%rdx
0000000000003e53	call	*0x0008027f(%rip)
0000000000003e59	leaq	0x000ac518(%rip),%rcx
0000000000003e60	movq	0x000aa839(%rip),%rax
0000000000003e67	movq	(%rbx,%rax),%rdi
0000000000003e6b	movq	0x000a0ebe(%rip),%rsi
0000000000003e72	movq	%rcx,%rdx
0000000000003e75	call	*0x0008025d(%rip)
0000000000003e7b	leaq	0x000ac516(%rip),%rcx
0000000000003e82	movq	0x000aa817(%rip),%rax
0000000000003e89	movq	(%rbx,%rax),%rdi
0000000000003e8d	movq	0x000a0e9c(%rip),%rsi
0000000000003e94	movq	%rcx,%rdx
0000000000003e97	call	*0x0008023b(%rip)
0000000000003e9d	leaq	0x000aba94(%rip),%rcx
0000000000003ea4	movq	0x000aa7f5(%rip),%rax
0000000000003eab	movq	(%rbx,%rax),%rdi
0000000000003eaf	movq	0x000a0e7a(%rip),%rsi
0000000000003eb6	movq	%rcx,%rdx
0000000000003eb9	movq	0x00080218(%rip),%rax
0000000000003ec0	addq	$0x08,%rsp
0000000000003ec4	popq	%rbx
0000000000003ec5	popq	%rbp
0000000000003ec6	jmp	*%rax
-[PBXGDB_DescriptionDataValue initWithDebugger:]:
0000000000003ec8	pushq	%rbp
0000000000003ec9	movq	%rsp,%rbp
0000000000003ecc	pushq	%r14
0000000000003ece	pushq	%rbx
0000000000003ecf	subq	$0x10,%rsp
0000000000003ed3	movq	%rdi,0xe0(%rbp)
0000000000003ed7	movq	0x000a4efa(%rip),%rax
0000000000003ede	movq	%rax,0xe8(%rbp)
0000000000003ee2	movq	0x000a0e67(%rip),%rsi
0000000000003ee9	leaq	0xe0(%rbp),%rdi
0000000000003eed	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000003ef2	movq	%rax,%rbx
0000000000003ef5	movq	0x000801dc(%rip),%r14
0000000000003efc	movq	0x000a17cd(%rip),%rsi
0000000000003f03	movq	%rbx,%rdi
0000000000003f06	movl	$0x00000001,%edx
0000000000003f0b	call	*%r14
0000000000003f0e	movq	0x000a18fb(%rip),%rsi
0000000000003f15	movq	%rbx,%rdi
0000000000003f18	movl	$0x00000001,%edx
0000000000003f1d	call	*%r14
0000000000003f20	movq	0x000a1671(%rip),%rsi
0000000000003f27	movq	%rbx,%rdi
0000000000003f2a	movl	$0x00000002,%edx
0000000000003f2f	call	*%r14
0000000000003f32	movq	%rbx,%rax
0000000000003f35	addq	$0x10,%rsp
0000000000003f39	popq	%rbx
0000000000003f3a	popq	%r14
0000000000003f3c	popq	%rbp
0000000000003f3d	ret
-[PBXGDB_DataValue2 initWithDebugger:]:
0000000000003f3e	pushq	%rbp
0000000000003f3f	movq	%rsp,%rbp
0000000000003f42	subq	$0x10,%rsp
0000000000003f46	movq	%rdi,0xf0(%rbp)
0000000000003f4a	movq	0x000a4e3f(%rip),%rax
0000000000003f51	movq	%rax,0xf8(%rbp)
0000000000003f55	movq	0x000a0df4(%rip),%rsi
0000000000003f5c	leaq	0xf0(%rbp),%rdi
0000000000003f60	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000003f65	movq	0x000aa97c(%rip),%rcx
0000000000003f6c	movq	$0xffffffff,(%rax,%rcx)
0000000000003f74	movq	0x000aa975(%rip),%rcx
0000000000003f7b	movq	$0xffffffff,(%rax,%rcx)
0000000000003f83	addq	$0x10,%rsp
0000000000003f87	popq	%rbp
0000000000003f88	ret
-[PBXLSDataValue initWithDebugger:]:
0000000000003f89	pushq	%rbp
0000000000003f8a	movq	%rsp,%rbp
0000000000003f8d	pushq	%r15
0000000000003f8f	pushq	%r14
0000000000003f91	pushq	%rbx
0000000000003f92	subq	$0x18,%rsp
0000000000003f96	movq	%rdx,%r14
0000000000003f99	movq	%rdi,0xd8(%rbp)
0000000000003f9d	movq	0x000a504c(%rip),%rax
0000000000003fa4	movq	%rax,0xe0(%rbp)
0000000000003fa8	movq	0x000a0da1(%rip),%rsi
0000000000003faf	leaq	0xd8(%rbp),%rdi
0000000000003fb3	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000003fb8	movq	%rax,%rbx
0000000000003fbb	testq	%rbx,%rbx
0000000000003fbe	je	0x00004027
0000000000003fc0	movq	0x000a33a1(%rip),%rsi
0000000000003fc7	movq	0x0008010a(%rip),%r15
0000000000003fce	movq	%r14,%rdi
0000000000003fd1	call	*%r15
0000000000003fd4	movq	0x000a3395(%rip),%rsi
0000000000003fdb	movq	%rbx,%rdi
0000000000003fde	movq	%rax,%rdx
0000000000003fe1	call	*%r15
0000000000003fe4	movq	0x000a15e5(%rip),%rsi
0000000000003feb	movq	%r14,%rdi
0000000000003fee	call	*%r15
0000000000003ff1	movq	_OBJC_METACLASS_$_PBXGDB_MIUntilCommand(%rip),%rcx
0000000000003ff8	movl	%eax,(%rbx,%rcx)
0000000000003ffb	movq	0x000ab186(%rip),%rax
0000000000004002	movq	$0xffffffff,(%rbx,%rax)
000000000000400a	movq	0x000ab17f(%rip),%rax
0000000000004011	movq	$0xffffffff,(%rbx,%rax)
0000000000004019	movq	0x000ab178(%rip),%rax
0000000000004020	movl	$0x00000002,(%rbx,%rax)
0000000000004027	movq	%rbx,%rax
000000000000402a	addq	$0x18,%rsp
000000000000402e	popq	%rbx
000000000000402f	popq	%r14
0000000000004031	popq	%r15
0000000000004033	popq	%rbp
0000000000004034	ret
-[PBXLSDebuggerAdaptor operationNumber]:
0000000000004035	pushq	%rbp
0000000000004036	movq	%rsp,%rbp
0000000000004039	movq	_OBJC_CLASS_$_PBXGDB_MIMemoryViewerReadCommand(%rip),%rax
0000000000004040	movq	(%rdi,%rax),%rax
0000000000004044	popq	%rbp
0000000000004045	ret
-[PBXLSDataValue _pushNewValueAtOperationNumber:]:
0000000000004046	pushq	%rbp
0000000000004047	movq	%rsp,%rbp
000000000000404a	pushq	%r15
000000000000404c	pushq	%r14
000000000000404e	pushq	%r12
0000000000004050	pushq	%rbx
0000000000004051	movq	%rdx,%r15
0000000000004054	movq	%rdi,%r14
0000000000004057	movq	0x000a4aea(%rip),%rdi
000000000000405e	leaq	0x000a427b(%rip),%rsi
0000000000004065	call	*0x000a4275(%rip)
000000000000406b	movq	0x000a09fe(%rip),%rsi
0000000000004072	movq	0x0008005f(%rip),%r12
0000000000004079	movq	%rax,%rdi
000000000000407c	call	*%r12
000000000000407f	movq	%rax,%rbx
0000000000004082	movq	0x000a32d7(%rip),%rsi
0000000000004089	movq	%rbx,%rdi
000000000000408c	movq	%r15,%rdx
000000000000408f	call	*%r12
0000000000004092	movq	0x000ab0df(%rip),%rdx
0000000000004099	movq	%rbx,%rdi
000000000000409c	movq	%r14,%rsi
000000000000409f	popq	%rbx
00000000000040a0	popq	%r12
00000000000040a2	popq	%r14
00000000000040a4	popq	%r15
00000000000040a6	popq	%rbp
00000000000040a7	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXLSDVValue setOperationNumber:]:
00000000000040ac	pushq	%rbp
00000000000040ad	movq	%rsp,%rbp
00000000000040b0	movq	0x000ab1e9(%rip),%rax
00000000000040b7	movq	%rdx,(%rdi,%rax)
00000000000040bb	popq	%rbp
00000000000040bc	ret
-[PBXLSDebuggerAdaptor dataContainerStride]:
00000000000040bd	pushq	%rbp
00000000000040be	movq	%rsp,%rbp
00000000000040c1	movq	0x000ab3a8(%rip),%rax
00000000000040c8	movq	(%rdi,%rax),%rax
00000000000040cc	popq	%rbp
00000000000040cd	ret
-[PBXLSDataValue setInScope:]:
00000000000040ce	pushq	%rbp
00000000000040cf	movq	%rsp,%rbp
00000000000040d2	movq	0x000ab0ff(%rip),%rax
00000000000040d9	movb	%dl,(%rdi,%rax)
00000000000040dc	popq	%rbp
00000000000040dd	ret
-[PBXLSDataValue setHasChildren:]:
00000000000040de	pushq	%rbp
00000000000040df	movq	%rsp,%rbp
00000000000040e2	movq	0x000ab117(%rip),%rax
00000000000040e9	movb	%dl,(%rdi,%rax)
00000000000040ec	popq	%rbp
00000000000040ed	ret
-[PBXLSDataValue setChildValidityStatus:]:
00000000000040ee	pushq	%rbp
00000000000040ef	movq	%rsp,%rbp
00000000000040f2	pushq	%rbx
00000000000040f3	pushq	%rax
00000000000040f4	movq	%rdi,%rbx
00000000000040f7	leaq	0x000ab21a(%rip),%rax
00000000000040fe	movq	(%rax),%rax
0000000000004101	cmpl	%edx,(%rbx,%rax)
0000000000004104	jne	0x0000410d
0000000000004106	addq	$0x08,%rsp
000000000000410a	popq	%rbx
000000000000410b	popq	%rbp
000000000000410c	ret
000000000000410d	movl	%edx,(%rbx,%rax)
0000000000004110	movq	0x000a1d81(%rip),%rsi
0000000000004117	movq	%rbx,%rdi
000000000000411a	call	*0x0007ffb8(%rip)
0000000000004120	leaq	0x000ab1f1(%rip),%rcx
0000000000004127	movq	(%rcx),%rcx
000000000000412a	movl	(%rbx,%rcx),%edx
000000000000412d	movq	0x000a329c(%rip),%rsi
0000000000004134	movq	%rax,%rdi
0000000000004137	movq	0x0007ff9a(%rip),%rax
000000000000413e	addq	$0x08,%rsp
0000000000004142	popq	%rbx
0000000000004143	popq	%rbp
0000000000004144	jmp	*%rax
-[PBXLSDataValue delegate]:
0000000000004146	pushq	%rbp
0000000000004147	movq	%rsp,%rbp
000000000000414a	movq	0x000ab12f(%rip),%rax
0000000000004151	movq	(%rdi,%rax),%rax
0000000000004155	popq	%rbp
0000000000004156	ret
-[PBXLSDataValue setSymbolicName:]:
0000000000004157	pushq	%rbp
0000000000004158	movq	%rsp,%rbp
000000000000415b	movq	%rdx,%rax
000000000000415e	movq	%rdi,%rcx
0000000000004161	movq	0x000ab038(%rip),%rdx
0000000000004168	cmpq	%rax,(%rcx,%rdx)
000000000000416c	jne	0x00004170
000000000000416e	popq	%rbp
000000000000416f	ret
0000000000004170	addq	%rcx,%rdx
0000000000004173	subq	%rcx,%rdx
0000000000004176	movq	%rax,%rdi
0000000000004179	movq	%rcx,%rsi
000000000000417c	popq	%rbp
000000000000417d	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_Adaptor launchParameters]:
0000000000004182	pushq	%rbp
0000000000004183	movq	%rsp,%rbp
0000000000004186	movq	0x000a0b5b(%rip),%rsi
000000000000418d	call	*0x0007ff45(%rip)
0000000000004193	movq	0x000a0b56(%rip),%rsi
000000000000419a	movq	%rax,%rdi
000000000000419d	call	*0x0007ff35(%rip)
00000000000041a3	movq	0x000a0bfe(%rip),%rsi
00000000000041aa	movq	%rax,%rdi
00000000000041ad	call	*0x0007ff25(%rip)
00000000000041b3	movq	0x000a0ba6(%rip),%rsi
00000000000041ba	movq	%rax,%rdi
00000000000041bd	movq	0x0007ff14(%rip),%rax
00000000000041c4	popq	%rbp
00000000000041c5	jmp	*%rax
-[PBXLSDebuggerAdaptor debuggingSession]:
00000000000041c7	pushq	%rbp
00000000000041c8	movq	%rsp,%rbp
00000000000041cb	pushq	%r15
00000000000041cd	pushq	%r14
00000000000041cf	pushq	%rbx
00000000000041d0	subq	$0x38,%rsp
00000000000041d4	movq	%rdi,0xe0(%rbp)
00000000000041d8	movq	%rsi,0xd8(%rbp)
00000000000041dc	movq	0x000a35bd(%rip),%rsi
00000000000041e3	call	*0x0007feef(%rip)
00000000000041e9	movq	%rax,%r15
00000000000041ec	testq	%r15,%r15
00000000000041ef	je	0x000042aa
00000000000041f5	movq	0x000a497c(%rip),%rdi
00000000000041fc	leaq	0x000a412d(%rip),%rsi
0000000000004203	call	*0x000a4127(%rip)
0000000000004209	leaq	0x000a4130(%rip),%rsi
0000000000004210	movq	%r15,%rdi
0000000000004213	movq	%rax,%rdx
0000000000004216	call	*0x000a4124(%rip)
000000000000421c	testb	%al,%al
000000000000421e	jne	0x000042aa
0000000000004224	movq	0x000a494d(%rip),%rdi
000000000000422b	leaq	0x000a40fe(%rip),%rsi
0000000000004232	call	*0x000a40f8(%rip)
0000000000004238	movq	%rax,%rdi
000000000000423b	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000004240	movq	%rax,%r14
0000000000004243	movq	0x000a0a16(%rip),%rsi
000000000000424a	movq	%r15,%rdi
000000000000424d	call	*0x0007fe85(%rip)
0000000000004253	leaq	0x0005ef1c(%rip),%r8
000000000000425a	leaq	0xe0(%rbp),%rdi
000000000000425e	leaq	0xd8(%rbp),%rsi
0000000000004262	leaq	0x0005ee72(%rip),%rdx
0000000000004269	leaq	0x0005ee94(%rip),%rcx
0000000000004270	leaq	0x000ab761(%rip),%r9
0000000000004277	movq	%r8,0x20(%rsp)
000000000000427c	leaq	0x000ab5b5(%rip),%rbx
0000000000004283	movq	%rbx,0x18(%rsp)
0000000000004288	leaq	0x0005eed6(%rip),%r8
000000000000428f	movq	%rax,0x10(%rsp)
0000000000004294	movq	%r14,0x08(%rsp)
0000000000004299	movq	%r8,(%rsp)
000000000000429d	movl	$0x000000ce,%r8d
00000000000042a3	xorb	%al,%al
00000000000042a5	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
00000000000042aa	movq	%r15,%rax
00000000000042ad	addq	$0x38,%rsp
00000000000042b1	popq	%rbx
00000000000042b2	popq	%r14
00000000000042b4	popq	%r15
00000000000042b6	popq	%rbp
00000000000042b7	ret
-[PBXLSAdaptor PBXLaunchSession]:
00000000000042b8	pushq	%rbp
00000000000042b9	movq	%rsp,%rbp
00000000000042bc	movq	0x000ab195(%rip),%rax
00000000000042c3	movq	(%rdi,%rax),%rax
00000000000042c7	popq	%rbp
00000000000042c8	ret
00000000000042c9	nop
00000000000042ca	nop
00000000000042cb	nop
00000000000042cc	nop
-[PBXLSDebuggingSession foundationDebugSession]:
00000000000042cd	pushq	%rbp
00000000000042ce	movq	%rsp,%rbp
00000000000042d1	movq	0x000ab1e0(%rip),%rax
00000000000042d8	movq	(%rdi,%rax),%rax
00000000000042dc	popq	%rbp
00000000000042dd	ret
00000000000042de	nop
00000000000042df	nop
00000000000042e0	nop
00000000000042e1	nop
00000000000042e2	nop
00000000000042e3	nop
00000000000042e4	nop
-[DBGGDBLauncher _taskAllocate]:
00000000000042e5	pushq	%rbp
00000000000042e6	movq	%rsp,%rbp
00000000000042e9	pushq	%r15
00000000000042eb	pushq	%r14
00000000000042ed	pushq	%r13
00000000000042ef	pushq	%r12
00000000000042f1	pushq	%rbx
00000000000042f2	pushq	%rax
00000000000042f3	movq	%rdi,%rbx
00000000000042f6	movq	0x000ab213(%rip),%rax
00000000000042fd	cmpq	$0x00,(%rbx,%rax)
0000000000004302	jne	0x00004561
0000000000004308	movq	0x000a48a9(%rip),%rdi
000000000000430f	leaq	0x000a3fca(%rip),%r14
0000000000004316	movq	%r14,%rsi
0000000000004319	call	*0x000a3fc1(%rip)
000000000000431f	movq	0x000a074a(%rip),%rsi
0000000000004326	movq	0x0007fdab(%rip),%r13
000000000000432d	movq	%rax,%rdi
0000000000004330	call	*%r13
0000000000004333	movq	0x000ab1d6(%rip),%rdx
000000000000433a	movq	%rax,%rdi
000000000000433d	movq	%rbx,%rsi
0000000000004340	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000004345	movq	0x000ab1c4(%rip),%rax
000000000000434c	movq	(%rbx,%rax),%r15
0000000000004350	movq	0x000a3739(%rip),%rsi
0000000000004357	movq	0x000a4862(%rip),%rdi
000000000000435e	call	*%r13
0000000000004361	movq	0x000a3730(%rip),%rsi
0000000000004368	movq	%r15,%rdi
000000000000436b	movq	%rax,%rdx
000000000000436e	call	*%r13
0000000000004371	movq	0x000ab198(%rip),%rax
0000000000004378	movq	(%rbx,%rax),%r15
000000000000437c	movq	0x000a370d(%rip),%rsi
0000000000004383	movq	0x000a4836(%rip),%rdi
000000000000438a	call	*%r13
000000000000438d	movq	0x000a370c(%rip),%rsi
0000000000004394	movq	%r15,%rdi
0000000000004397	movq	%rax,%rdx
000000000000439a	call	*%r13
000000000000439d	movq	0x000ab16c(%rip),%rax
00000000000043a4	movq	(%rbx,%rax),%r15
00000000000043a8	movq	0x000a36e1(%rip),%rsi
00000000000043af	movq	0x000a480a(%rip),%rdi
00000000000043b6	call	*%r13
00000000000043b9	movq	0x000a36e8(%rip),%rsi
00000000000043c0	movq	%r15,%rdi
00000000000043c3	movq	%rax,%rdx
00000000000043c6	call	*%r13
00000000000043c9	movq	0x000a4128(%rip),%rdi
00000000000043d0	movq	%r14,%rsi
00000000000043d3	call	*0x000a3f07(%rip)
00000000000043d9	movq	%rax,%r14
00000000000043dc	movq	0x000ab12d(%rip),%rax
00000000000043e3	movq	(%rbx,%rax),%rdi
00000000000043e7	movq	0x000a36c2(%rip),%rsi
00000000000043ee	call	*%r13
00000000000043f1	movq	0x000a36c0(%rip),%rsi
00000000000043f8	movq	%rax,%rdi
00000000000043fb	call	*%r13
00000000000043fe	movq	%rax,%r15
0000000000004401	movq	0x000ab108(%rip),%rax
0000000000004408	movq	(%rbx,%rax),%rdi
000000000000440c	movq	0x000a36ad(%rip),%rsi
0000000000004413	call	*%r13
0000000000004416	movq	0x000a36ab(%rip),%rsi
000000000000441d	movq	%rax,%rdi
0000000000004420	call	*%r13
0000000000004423	movq	%rax,%r12
0000000000004426	movq	0x000ab0e3(%rip),%rax
000000000000442d	movq	(%rbx,%rax),%rdi
0000000000004431	movq	0x000a3698(%rip),%rsi
0000000000004438	call	*%r13
000000000000443b	movq	0x000a3686(%rip),%rsi
0000000000004442	movq	%rax,%rdi
0000000000004445	call	*%r13
0000000000004448	movq	0x0007fc79(%rip),%rcx
000000000000444f	movq	(%rcx),%rdx
0000000000004452	movq	0x000a0a27(%rip),%rsi
0000000000004459	movq	%r14,%rdi
000000000000445c	movq	%r15,%rcx
000000000000445f	movq	%r12,%r8
0000000000004462	movq	%rax,%r9
0000000000004465	call	*%r13
0000000000004468	movq	0x000ab0b1(%rip),%rdx
000000000000446f	movq	%rax,%rdi
0000000000004472	movq	%rbx,%rsi
0000000000004475	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000000447a	movq	0x000ab09f(%rip),%rax
0000000000004481	movq	(%rbx,%rax),%rdi
0000000000004485	movq	0x000a364c(%rip),%rsi
000000000000448c	movq	%rbx,%rdx
000000000000448f	call	*%r13
0000000000004492	movq	0x000a090f(%rip),%rsi
0000000000004499	movq	%rbx,%rdi
000000000000449c	call	*%r13
000000000000449f	movq	0x000ab07a(%rip),%rcx
00000000000044a6	movq	(%rbx,%rcx),%rdx
00000000000044aa	movq	0x000a09d7(%rip),%rsi
00000000000044b1	movq	%rax,%rdi
00000000000044b4	call	*%r13
00000000000044b7	movq	0x000ab062(%rip),%rax
00000000000044be	movq	(%rbx,%rax),%rdx
00000000000044c2	movq	0x000ab037(%rip),%rax
00000000000044c9	movq	(%rbx,%rax),%rdi
00000000000044cd	movq	0x000a360c(%rip),%rsi
00000000000044d4	call	*%r13
00000000000044d7	movq	0x000ab032(%rip),%rax
00000000000044de	movq	(%rbx,%rax),%r14
00000000000044e2	movq	0x000a0987(%rip),%rsi
00000000000044e9	movq	%rbx,%rdi
00000000000044ec	call	*%r13
00000000000044ef	movq	0x000a35f2(%rip),%rsi
00000000000044f6	movq	%r14,%rdi
00000000000044f9	movq	%rax,%rdx
00000000000044fc	call	*%r13
00000000000044ff	movq	0x000ab00a(%rip),%rax
0000000000004506	movq	(%rbx,%rax),%r14
000000000000450a	movq	0x000a35df(%rip),%rsi
0000000000004511	movq	%rbx,%rdi
0000000000004514	call	*%r13
0000000000004517	movq	0x000a35da(%rip),%rsi
000000000000451e	movq	%r14,%rdi
0000000000004521	movq	%rax,%rdx
0000000000004524	call	*%r13
0000000000004527	movq	0x000aafe2(%rip),%rax
000000000000452e	movq	(%rbx,%rax),%r14
0000000000004532	movq	0x000a35c7(%rip),%rsi
0000000000004539	movq	%rbx,%rdi
000000000000453c	call	*%r13
000000000000453f	movq	0x000a35c2(%rip),%rsi
0000000000004546	movq	%r14,%rdi
0000000000004549	movq	%rax,%rdx
000000000000454c	call	*%r13
000000000000454f	movq	0x000a35ba(%rip),%rsi
0000000000004556	movq	%rbx,%rdi
0000000000004559	call	*%r13
000000000000455c	testq	%rax,%rax
000000000000455f	jne	0x00004570
0000000000004561	addq	$0x08,%rsp
0000000000004565	popq	%rbx
0000000000004566	popq	%r12
0000000000004568	popq	%r13
000000000000456a	popq	%r14
000000000000456c	popq	%r15
000000000000456e	popq	%rbp
000000000000456f	ret
0000000000004570	movq	0x000aaf99(%rip),%rax
0000000000004577	movq	(%rbx,%rax),%r14
000000000000457b	movq	0x000a358e(%rip),%rsi
0000000000004582	movq	%rbx,%rdi
0000000000004585	call	*0x0007fb4d(%rip)
000000000000458b	movq	0x000a3586(%rip),%rsi
0000000000004592	movq	%r14,%rdi
0000000000004595	movq	%rax,%rdx
0000000000004598	movq	0x0007fb39(%rip),%rax
000000000000459f	addq	$0x08,%rsp
00000000000045a3	popq	%rbx
00000000000045a4	popq	%r12
00000000000045a6	popq	%r13
00000000000045a8	popq	%r14
00000000000045aa	popq	%r15
00000000000045ac	popq	%rbp
00000000000045ad	jmp	*%rax
00000000000045af	nop
00000000000045b0	nop
00000000000045b1	nop
00000000000045b2	nop
00000000000045b3	nop
00000000000045b4	nop
00000000000045b5	nop
00000000000045b6	nop
00000000000045b7	nop
00000000000045b8	nop
00000000000045b9	nop
00000000000045ba	nop
00000000000045bb	nop
-[DBGGDBLauncher externalLauncherPath]:
00000000000045bc	pushq	%rbp
00000000000045bd	movq	%rsp,%rbp
00000000000045c0	pushq	%r14
00000000000045c2	pushq	%rbx
00000000000045c3	movq	%rdi,%rbx
00000000000045c6	movq	0x000aaf3b(%rip),%rax
00000000000045cd	movq	(%rbx,%rax),%rdi
00000000000045d1	movq	0x000a33c8(%rip),%rsi
00000000000045d8	call	*0x0007fafa(%rip)
00000000000045de	testb	%al,%al
00000000000045e0	je	0x000045eb
00000000000045e2	leaq	0x000b1b0f(%rip),%rax
00000000000045e9	jmp	0x0000461c
00000000000045eb	movq	0x000a077e(%rip),%rsi
00000000000045f2	movq	0x000a3ec7(%rip),%rdi
00000000000045f9	movq	0x0007fad8(%rip),%r14
0000000000004600	call	*%r14
0000000000004603	movq	0x000a112e(%rip),%rsi
000000000000460a	leaq	0x000b1b07(%rip),%rdx
0000000000004611	movq	%rax,%rdi
0000000000004614	call	*%r14
0000000000004617	testq	%rax,%rax
000000000000461a	je	0x00004621
000000000000461c	popq	%rbx
000000000000461d	popq	%r14
000000000000461f	popq	%rbp
0000000000004620	ret
0000000000004621	movq	0x000a4580(%rip),%r14
0000000000004628	movq	0x000a0779(%rip),%rsi
000000000000462f	movq	%rbx,%rdi
0000000000004632	call	*0x0007faa0(%rip)
0000000000004638	movq	0x000a0721(%rip),%rsi
000000000000463f	movq	%rax,%rdi
0000000000004642	call	*0x0007fa90(%rip)
0000000000004648	movq	0x000a3359(%rip),%rsi
000000000000464f	movq	%rax,%rdi
0000000000004652	call	*0x0007fa80(%rip)
0000000000004658	movq	0x000a3351(%rip),%rsi
000000000000465f	movq	%r14,%rdi
0000000000004662	movq	%rax,%rdx
0000000000004665	call	*0x0007fa6d(%rip)
000000000000466b	movq	%rax,%rbx
000000000000466e	movq	0x000a3343(%rip),%rsi
0000000000004675	movq	0x000a4534(%rip),%rdi
000000000000467c	call	*0x0007fa56(%rip)
0000000000004682	movq	0x000a3337(%rip),%rsi
0000000000004689	movq	%rax,%rdi
000000000000468c	movq	%rbx,%rdx
000000000000468f	call	*0x0007fa43(%rip)
0000000000004695	leaq	0x000b1a9c(%rip),%rdx
000000000000469c	movq	0x000a3325(%rip),%rsi
00000000000046a3	movq	%rax,%rdi
00000000000046a6	call	*0x0007fa2c(%rip)
00000000000046ac	movq	0x000a087d(%rip),%rsi
00000000000046b3	movq	%rax,%rdi
00000000000046b6	movq	0x0007fa1b(%rip),%rax
00000000000046bd	popq	%rbx
00000000000046be	popq	%r14
00000000000046c0	popq	%rbp
00000000000046c1	jmp	*%rax
-[PBXGDB_Adaptor isSSHRemote]:
00000000000046c3	pushq	%rbp
00000000000046c4	movq	%rsp,%rbp
00000000000046c7	movq	0x000aa0b2(%rip),%rax
00000000000046ce	movsbl	(%rdi,%rax),%eax
00000000000046d2	popq	%rbp
00000000000046d3	ret
00000000000046d4	nop
00000000000046d5	nop
00000000000046d6	nop
00000000000046d7	nop
00000000000046d8	nop
00000000000046d9	nop
00000000000046da	nop
-[DBGGDBLauncher gdbArguments]:
00000000000046db	pushq	%rbp
00000000000046dc	movq	%rsp,%rbp
00000000000046df	pushq	%r15
00000000000046e1	pushq	%r14
00000000000046e3	pushq	%r13
00000000000046e5	pushq	%r12
00000000000046e7	pushq	%rbx
00000000000046e8	pushq	%rax
00000000000046e9	movq	%rdi,%r15
00000000000046ec	movq	0x000a0d3d(%rip),%rsi
00000000000046f3	movq	0x000a3d66(%rip),%rdi
00000000000046fa	movq	0x0007f9d7(%rip),%rbx
0000000000004701	call	*%rbx
0000000000004703	movq	%rax,%r13
0000000000004706	movq	0x000a0663(%rip),%rsi
000000000000470d	movq	0x000a3dac(%rip),%rdi
0000000000004714	call	*%rbx
0000000000004716	leaq	0x000b18fb(%rip),%rdx
000000000000471d	movq	0x000a1014(%rip),%rsi
0000000000004724	movq	%rax,%rdi
0000000000004727	call	*%rbx
0000000000004729	movq	%rax,%r14
000000000000472c	movq	0x000a3d1d(%rip),%r12
0000000000004733	movq	0x000a066e(%rip),%rsi
000000000000473a	movq	%r15,%rdi
000000000000473d	call	*%rbx
000000000000473f	movq	0x000a061a(%rip),%rsi
0000000000004746	movq	%rax,%rdi
0000000000004749	call	*%rbx
000000000000474b	movq	0x000a3226(%rip),%rsi
0000000000004752	movq	%rax,%rdi
0000000000004755	call	*%rbx
0000000000004757	leaq	0x000b18fa(%rip),%rdx
000000000000475e	movq	0x000a0413(%rip),%rsi
0000000000004765	movq	%r12,%rdi
0000000000004768	movq	%rax,%rcx
000000000000476b	xorb	%al,%al
000000000000476d	call	*%rbx
000000000000476f	leaq	0x000a3b8a(%rip),%rsi
0000000000004776	movq	%r13,%rdi
0000000000004779	movq	%rax,%rdx
000000000000477c	call	*0x000a3b7e(%rip)
0000000000004782	testq	%r14,%r14
0000000000004785	jne	0x00004790
0000000000004787	leaq	0x000b18aa(%rip),%rdx
000000000000478e	jmp	0x000047b3
0000000000004790	movq	0x000a03e1(%rip),%rsi
0000000000004797	movq	0x000a3cb2(%rip),%rdi
000000000000479e	leaq	0x000b18d3(%rip),%rdx
00000000000047a5	movq	%r14,%rcx
00000000000047a8	xorb	%al,%al
00000000000047aa	call	*0x0007f928(%rip)
00000000000047b0	movq	%rax,%rdx
00000000000047b3	leaq	0x000a3b46(%rip),%rbx
00000000000047ba	movq	%r13,%rdi
00000000000047bd	movq	%rbx,%rsi
00000000000047c0	call	*0x000a3b3a(%rip)
00000000000047c6	leaq	0x000b18cb(%rip),%rdx
00000000000047cd	movq	%r13,%rdi
00000000000047d0	movq	%rbx,%rsi
00000000000047d3	call	*0x000a3b27(%rip)
00000000000047d9	movq	%r13,%rax
00000000000047dc	addq	$0x08,%rsp
00000000000047e0	popq	%rbx
00000000000047e1	popq	%r12
00000000000047e3	popq	%r13
00000000000047e5	popq	%r14
00000000000047e7	popq	%r15
00000000000047e9	popq	%rbp
00000000000047ea	ret
-[DBGGDBLauncher environmentVariables]:
00000000000047eb	pushq	%rbp
00000000000047ec	movq	%rsp,%rbp
00000000000047ef	pushq	%r15
00000000000047f1	pushq	%r14
00000000000047f3	pushq	%rbx
00000000000047f4	pushq	%rax
00000000000047f5	movq	%rdi,%r14
00000000000047f8	movq	0x000a0581(%rip),%rsi
00000000000047ff	movq	0x000a3caa(%rip),%rdi
0000000000004806	movq	0x0007f8cb(%rip),%r15
000000000000480d	call	*%r15
0000000000004810	movq	%rax,%rbx
0000000000004813	movq	0x000a058e(%rip),%rsi
000000000000481a	movq	%r14,%rdi
000000000000481d	call	*%r15
0000000000004820	movq	0x000a0539(%rip),%rsi
0000000000004827	movq	%rax,%rdi
000000000000482a	call	*%r15
000000000000482d	movq	0x000a0534(%rip),%rsi
0000000000004834	movq	%rax,%rdi
0000000000004837	call	*%r15
000000000000483a	testb	%al,%al
000000000000483c	jne	0x00004873
000000000000483e	movq	0x000a313b(%rip),%rsi
0000000000004845	movq	0x000a4354(%rip),%rdi
000000000000484c	movq	0x0007f885(%rip),%r14
0000000000004853	call	*%r14
0000000000004856	movq	0x000a312b(%rip),%rsi
000000000000485d	movq	%rax,%rdi
0000000000004860	call	*%r14
0000000000004863	movq	0x000a3126(%rip),%rsi
000000000000486a	movq	%rbx,%rdi
000000000000486d	movq	%rax,%rdx
0000000000004870	call	*%r14
0000000000004873	leaq	0x000a3ad6(%rip),%rsi
000000000000487a	leaq	0x000b1837(%rip),%rdx
0000000000004881	movq	%rbx,%rdi
0000000000004884	call	*0x000a3ac6(%rip)
000000000000488a	testq	%rax,%rax
000000000000488d	je	0x000048a6
000000000000488f	movq	0x000a0aca(%rip),%rsi
0000000000004896	leaq	0x000b181b(%rip),%rdx
000000000000489d	movq	%rbx,%rdi
00000000000048a0	call	*0x0007f832(%rip)
00000000000048a6	leaq	0x000a3aa3(%rip),%rsi
00000000000048ad	leaq	0x000b1824(%rip),%rdx
00000000000048b4	movq	%rbx,%rdi
00000000000048b7	call	*0x000a3a93(%rip)
00000000000048bd	testq	%rax,%rax
00000000000048c0	je	0x000048d9
00000000000048c2	movq	0x000a0a97(%rip),%rsi
00000000000048c9	leaq	0x000b1808(%rip),%rdx
00000000000048d0	movq	%rbx,%rdi
00000000000048d3	call	*0x0007f7ff(%rip)
00000000000048d9	movq	%rbx,%rax
00000000000048dc	addq	$0x08,%rsp
00000000000048e0	popq	%rbx
00000000000048e1	popq	%r14
00000000000048e3	popq	%r15
00000000000048e5	popq	%rbp
00000000000048e6	ret
-[DBGGDBLauncher taskDirectory]:
00000000000048e7	pushq	%rbp
00000000000048e8	movq	%rsp,%rbp
00000000000048eb	movq	0x000a04b6(%rip),%rsi
00000000000048f2	call	*0x0007f7e0(%rip)
00000000000048f8	movq	0x000a0461(%rip),%rsi
00000000000048ff	movq	%rax,%rdi
0000000000004902	call	*0x0007f7d0(%rip)
0000000000004908	movq	0x000a3089(%rip),%rsi
000000000000490f	movq	%rax,%rdi
0000000000004912	call	*0x0007f7c0(%rip)
0000000000004918	movq	0x000a0611(%rip),%rsi
000000000000491f	movq	%rax,%rdi
0000000000004922	movq	0x0007f7af(%rip),%rax
0000000000004929	popq	%rbp
000000000000492a	jmp	*%rax
000000000000492c	nop
000000000000492d	nop
000000000000492e	nop
000000000000492f	nop
0000000000004930	nop
0000000000004931	nop
0000000000004932	nop
-[DBGGDBLauncher _adaptorConfigure]:
0000000000004933	pushq	%rbp
0000000000004934	movq	%rsp,%rbp
0000000000004937	pushq	%rbx
0000000000004938	pushq	%rax
0000000000004939	movq	%rdi,%rbx
000000000000493c	movq	0x000aabc5(%rip),%rax
0000000000004943	movq	(%rbx,%rax),%rdi
0000000000004947	movq	0x000a3132(%rip),%rsi
000000000000494e	call	*0x0007f784(%rip)
0000000000004954	movq	0x000aabad(%rip),%rax
000000000000495b	movq	(%rbx,%rax),%rdi
000000000000495f	movq	0x000a3122(%rip),%rsi
0000000000004966	movq	0x0007f76b(%rip),%rax
000000000000496d	addq	$0x08,%rsp
0000000000004971	popq	%rbx
0000000000004972	popq	%rbp
0000000000004973	jmp	*%rax
-[PBXGDB_Adaptor configureAdaptor]:
0000000000004975	pushq	%rbp
0000000000004976	movq	%rsp,%rbp
0000000000004979	pushq	%r15
000000000000497b	pushq	%r14
000000000000497d	pushq	%rbx
000000000000497e	pushq	%rax
000000000000497f	movq	%rdi,%rbx
0000000000004982	movq	0x000a0477(%rip),%rsi
0000000000004989	movq	0x0007f748(%rip),%r15
0000000000004990	call	*%r15
0000000000004993	movq	%rax,%r14
0000000000004996	movq	0x000a049b(%rip),%rsi
000000000000499d	movq	%r14,%rdi
00000000000049a0	movq	%rbx,%rdx
00000000000049a3	call	*%r15
00000000000049a6	movq	0x000a0493(%rip),%rsi
00000000000049ad	movq	0x000a3b34(%rip),%rdi
00000000000049b4	movq	%rbx,%rdx
00000000000049b7	call	*%r15
00000000000049ba	movq	0x000a039f(%rip),%rsi
00000000000049c1	movq	%rbx,%rdi
00000000000049c4	call	*%r15
00000000000049c7	movq	0x000a039a(%rip),%rsi
00000000000049ce	movq	%rax,%rdi
00000000000049d1	call	*%r15
00000000000049d4	cmpb	$0x01,%al
00000000000049d6	jne	0x000049e3
00000000000049d8	movq	0x000a9d11(%rip),%rax
00000000000049df	movb	$0x01,(%rbx,%rax)
00000000000049e3	movq	0x000a02fe(%rip),%rsi
00000000000049ea	movq	0x0007f6e7(%rip),%r15
00000000000049f1	movq	%rbx,%rdi
00000000000049f4	call	*%r15
00000000000049f7	movq	0x000a02f2(%rip),%rsi
00000000000049fe	movq	%rax,%rdi
0000000000004a01	call	*%r15
0000000000004a04	movq	0x000a043d(%rip),%rsi
0000000000004a0b	movq	%rax,%rdi
0000000000004a0e	call	*%r15
0000000000004a11	testb	%al,%al
0000000000004a13	jne	0x00004a92
0000000000004a15	movq	0x000a3ad4(%rip),%rdi
0000000000004a1c	leaq	0x000a38bd(%rip),%rsi
0000000000004a23	call	*0x000a38b7(%rip)
0000000000004a29	movq	0x000a0420(%rip),%rsi
0000000000004a30	movq	0x0007f6a1(%rip),%r15
0000000000004a37	movq	%rax,%rdi
0000000000004a3a	call	*%r15
0000000000004a3d	movq	0x000a9c9c(%rip),%rdx
0000000000004a44	movq	%rax,%rdi
0000000000004a47	movq	%rbx,%rsi
0000000000004a4a	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000004a4f	leaq	0x000aba02(%rip),%rdx
0000000000004a56	movq	0x000a9c83(%rip),%rax
0000000000004a5d	movq	(%rbx,%rax),%rdi
0000000000004a61	movq	0x000a03f0(%rip),%rsi
0000000000004a68	call	*%r15
0000000000004a6b	movq	0x000a9c6e(%rip),%rax
0000000000004a72	movq	(%rbx,%rax),%rdi
0000000000004a76	movq	0x000a03e3(%rip),%rsi
0000000000004a7d	call	*%r15
0000000000004a80	movq	0x000a9c71(%rip),%rdx
0000000000004a87	movq	%rax,%rdi
0000000000004a8a	movq	%rbx,%rsi
0000000000004a8d	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000004a92	movq	0x000a035f(%rip),%rsi
0000000000004a99	movq	%rbx,%rdi
0000000000004a9c	call	*0x0007f636(%rip)
0000000000004aa2	movq	0x000a03bf(%rip),%rsi
0000000000004aa9	movq	%rax,%rdi
0000000000004aac	movq	%rbx,%rdx
0000000000004aaf	call	*0x0007f623(%rip)
0000000000004ab5	movq	0x000a03b4(%rip),%rsi
0000000000004abc	movq	%r14,%rdi
0000000000004abf	call	*0x0007f613(%rip)
0000000000004ac5	movq	0x000a024c(%rip),%rsi
0000000000004acc	movq	%rbx,%rdi
0000000000004acf	movq	%rax,%rdx
0000000000004ad2	movl	$0x00000001,%ecx
0000000000004ad7	movq	0x0007f5fa(%rip),%rax
0000000000004ade	addq	$0x08,%rsp
0000000000004ae2	popq	%rbx
0000000000004ae3	popq	%r14
0000000000004ae5	popq	%r15
0000000000004ae7	popq	%rbp
0000000000004ae8	jmp	*%rax
-[PBXLSAdaptor executableLauncher]:
0000000000004aea	pushq	%rbp
0000000000004aeb	movq	%rsp,%rbp
0000000000004aee	movq	0x000aa963(%rip),%rax
0000000000004af5	movq	(%rdi,%rax),%rdi
0000000000004af9	movq	0x000a2c30(%rip),%rsi
0000000000004b00	popq	%rbp
0000000000004b01	jmp	*0x0007f5d1(%rip)
0000000000004b07	nop
0000000000004b08	nop
0000000000004b09	nop
0000000000004b0a	nop
0000000000004b0b	nop
0000000000004b0c	nop
0000000000004b0d	nop
0000000000004b0e	nop
0000000000004b0f	nop
0000000000004b10	nop
0000000000004b11	nop
0000000000004b12	nop
-[PBXLSDebuggingSession launcher]:
0000000000004b13	pushq	%rbp
0000000000004b14	movq	%rsp,%rbp
0000000000004b17	movq	0x000a01d2(%rip),%rsi
0000000000004b1e	call	*0x0007f5b4(%rip)
0000000000004b24	movq	0x000a2cad(%rip),%rsi
0000000000004b2b	movq	%rax,%rdi
0000000000004b2e	movq	0x0007f5a3(%rip),%rax
0000000000004b35	popq	%rbp
0000000000004b36	jmp	*%rax
0000000000004b38	nop
0000000000004b39	nop
0000000000004b3a	nop
0000000000004b3b	nop
0000000000004b3c	nop
0000000000004b3d	nop
0000000000004b3e	nop
0000000000004b3f	nop
0000000000004b40	nop
0000000000004b41	nop
0000000000004b42	nop
0000000000004b43	nop
-[DBGGDBLauncher setGdbAdaptor:]:
0000000000004b44	pushq	%rbp
0000000000004b45	movq	%rsp,%rbp
0000000000004b48	movq	%rdx,%rax
0000000000004b4b	movq	%rdi,%rcx
0000000000004b4e	movq	0x000aa9b3(%rip),%rdx
0000000000004b55	movq	%rax,%rdi
0000000000004b58	movq	%rcx,%rsi
0000000000004b5b	popq	%rbp
0000000000004b5c	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
+[PBXGDB_Adaptor registerActiveAdaptor:]:
0000000000004b61	pushq	%rbp
0000000000004b62	movq	%rsp,%rbp
0000000000004b65	pushq	%rbx
0000000000004b66	pushq	%rax
0000000000004b67	movq	%rdx,%rbx
0000000000004b6a	movq	0x000b2aef(%rip),%rdi
0000000000004b71	testq	%rdi,%rdi
0000000000004b74	jne	0x00004bb0
0000000000004b76	movq	0x000a38e3(%rip),%rdi
0000000000004b7d	leaq	0x000a375c(%rip),%rsi
0000000000004b84	call	*0x000a3756(%rip)
0000000000004b8a	movq	0x0009fedf(%rip),%rsi
0000000000004b91	movq	%rax,%rdi
0000000000004b94	call	*0x0007f53e(%rip)
0000000000004b9a	leaq	0x000b2abf(%rip),%rsi
0000000000004ba1	movq	%rax,%rdi
0000000000004ba4	callq	0x0004e602	; symbol stub for: _objc_assign_global
0000000000004ba9	movq	0x000b2ab0(%rip),%rdi
0000000000004bb0	movq	0x000a3749(%rip),%rax
0000000000004bb7	leaq	0x000a3742(%rip),%rsi
0000000000004bbe	movq	%rbx,%rdx
0000000000004bc1	addq	$0x08,%rsp
0000000000004bc5	popq	%rbx
0000000000004bc6	popq	%rbp
0000000000004bc7	jmp	*%rax
-[DBGGDBPTYDeviceByteStream initWithControlOverReading]:
0000000000004bc9	pushq	%rbp
0000000000004bca	movq	%rsp,%rbp
0000000000004bcd	movq	0x000a9a0c(%rip),%rax
0000000000004bd4	movb	$0x01,(%rdi,%rax)
0000000000004bd8	movq	0x0009fe91(%rip),%rsi
0000000000004bdf	popq	%rbp
0000000000004be0	jmp	*0x0007f4f2(%rip)
-[DBGGDBPTYDeviceByteStream init]:
0000000000004be6	pushq	%rbp
0000000000004be7	movq	%rsp,%rbp
0000000000004bea	pushq	%r15
0000000000004bec	pushq	%r14
0000000000004bee	pushq	%rbx
0000000000004bef	subq	$0x00000468,%rsp
0000000000004bf6	movq	0x0007f4a3(%rip),%rax
0000000000004bfd	movq	(%rax),%rax
0000000000004c00	movq	%rax,0xe0(%rbp)
0000000000004c04	movq	%rdi,0xfffffbd0(%rbp)
0000000000004c0b	movq	0x000a40ee(%rip),%rax
0000000000004c12	movq	%rax,0xfffffbd8(%rbp)
0000000000004c19	leaq	0xfffffbd0(%rbp),%rdi
0000000000004c20	movq	0x0009fe49(%rip),%rsi
0000000000004c27	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000004c2c	movq	%rax,%r15
0000000000004c2f	leaq	0xfffffbe0(%rbp),%rdx
0000000000004c36	movq	0x000a997b(%rip),%rax
0000000000004c3d	movl	$0xffffffff,(%r15,%rax)
0000000000004c45	movq	0x000a9974(%rip),%rax
0000000000004c4c	movl	$0xffffffff,(%r15,%rax)
0000000000004c54	movq	0x000a996d(%rip),%rax
0000000000004c5b	movl	$0xffffffff,(%r15,%rax)
0000000000004c63	movq	0x000a9966(%rip),%rax
0000000000004c6a	movl	$0xffffffff,(%r15,%rax)
0000000000004c72	movq	0x000a9947(%rip),%rsi
0000000000004c79	addq	%r15,%rsi
0000000000004c7c	movq	0x000a9935(%rip),%rdi
0000000000004c83	addq	%r15,%rdi
0000000000004c86	xorl	%ecx,%ecx
0000000000004c88	xorl	%r8d,%r8d
0000000000004c8b	callq	0x0004e6c8	; symbol stub for: _openpty
0000000000004c90	cmpl	$0xff,%eax
0000000000004c93	jne	0x00004d02
0000000000004c95	callq	0x0004e67a	; symbol stub for: ___error
0000000000004c9a	movl	(%rax),%edi
0000000000004c9c	callq	0x0004e704	; symbol stub for: _strerror
0000000000004ca1	movq	0x0009fec8(%rip),%rsi
0000000000004ca8	movq	0x000a37a1(%rip),%rbx
0000000000004caf	movq	0x0007f422(%rip),%r14
0000000000004cb6	movq	%rbx,%rdi
0000000000004cb9	movq	%rax,%rdx
0000000000004cbc	call	*%r14
0000000000004cbf	leaq	0x000aaaf2(%rip),%rdx
0000000000004cc6	movq	0x0009feab(%rip),%rsi
0000000000004ccd	movq	%rbx,%rdi
0000000000004cd0	movq	%rax,%rcx
0000000000004cd3	xorb	%al,%al
0000000000004cd5	call	*%r14
0000000000004cd8	movq	%rax,%rbx
0000000000004cdb	movq	0x000a98f6(%rip),%rdx
0000000000004ce2	xorl	%edi,%edi
0000000000004ce4	movq	%r15,%rsi
0000000000004ce7	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000004cec	leaq	0x000aaae5(%rip),%rdi
0000000000004cf3	movq	%rbx,%rsi
0000000000004cf6	xorb	%al,%al
0000000000004cf8	callq	0x0004e5c0	; symbol stub for: _NSLog
0000000000004cfd	jmp	0x00004e53
0000000000004d02	movq	0x000a3747(%rip),%rdi
0000000000004d09	leaq	0x000a35d0(%rip),%rsi
0000000000004d10	call	*0x000a35ca(%rip)
0000000000004d16	movq	0x0009fe63(%rip),%rsi
0000000000004d1d	leaq	0xfffffbe0(%rbp),%rdx
0000000000004d24	movq	%rax,%rdi
0000000000004d27	movl	$0x00000004,%ecx
0000000000004d2c	call	*0x0007f3a6(%rip)
0000000000004d32	movq	0x000a989f(%rip),%rdx
0000000000004d39	movq	%rax,%rdi
0000000000004d3c	movq	%r15,%rsi
0000000000004d3f	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000004d44	leaq	0xfffffb88(%rbp),%rsi
0000000000004d4b	movq	0x000a9866(%rip),%rax
0000000000004d52	movl	(%r15,%rax),%edi
0000000000004d56	callq	0x0004e722	; symbol stub for: _tcgetattr
0000000000004d5b	testl	%eax,%eax
0000000000004d5d	jns	0x00004d6b
0000000000004d5f	leaq	0x00057ecc(%rip),%rdi
0000000000004d66	callq	0x0004e6ce	; symbol stub for: _perror
0000000000004d6b	movq	0xfffffb90(%rbp),%rax
0000000000004d72	testb	$0x02,%al
0000000000004d74	je	0x00004d81
0000000000004d76	andq	$0xfd,%rax
0000000000004d7a	movq	%rax,0xfffffb90(%rbp)
0000000000004d81	movl	$0x00008000,%eax
0000000000004d86	andq	0xfffffb98(%rbp),%rax
0000000000004d8d	orq	$0x00004b00,%eax
0000000000004d93	movq	%rax,0xfffffb98(%rbp)
0000000000004d9a	andb	$0xf7,0xfffffba0(%rbp)
0000000000004da1	movq	_OBJC_CLASS_$_PBXGDB_ContainingDataValue2(%rip),%rax
0000000000004da8	movl	(%r15,%rax),%edi
0000000000004dac	leaq	0xfffffb88(%rbp),%rdx
0000000000004db3	xorl	%esi,%esi
0000000000004db5	callq	0x0004e728	; symbol stub for: _tcsetattr
0000000000004dba	testl	%eax,%eax
0000000000004dbc	jns	0x00004dca
0000000000004dbe	leaq	0x00057e77(%rip),%rdi
0000000000004dc5	callq	0x0004e6ce	; symbol stub for: _perror
0000000000004dca	movq	0x000a980f(%rip),%rax
0000000000004dd1	cmpb	$0x00,(%r15,%rax)
0000000000004dd6	jne	0x00004e53
0000000000004dd8	movq	0x000a3679(%rip),%rdi
0000000000004ddf	leaq	0x000a34fa(%rip),%r14
0000000000004de6	movq	%r14,%rsi
0000000000004de9	call	*0x000a34f1(%rip)
0000000000004def	movq	0x0009fd92(%rip),%rsi
0000000000004df6	movq	0x0007f2db(%rip),%rbx
0000000000004dfd	movq	%rax,%rdi
0000000000004e00	movl	$0x00000001,%edx
0000000000004e05	call	*%rbx
0000000000004e07	movq	0x000a97da(%rip),%rdx
0000000000004e0e	movq	%rax,%rdi
0000000000004e11	movq	%r15,%rsi
0000000000004e14	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000004e19	movq	0x000a3640(%rip),%rdi
0000000000004e20	movq	%r14,%rsi
0000000000004e23	call	*0x000a34b7(%rip)
0000000000004e29	movq	0x0009fc40(%rip),%rsi
0000000000004e30	movq	%rax,%rdi
0000000000004e33	call	*%rbx
0000000000004e35	movq	0x000a97b4(%rip),%rdx
0000000000004e3c	movq	%rax,%rdi
0000000000004e3f	movq	%r15,%rsi
0000000000004e42	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000004e47	movq	0x0009fd42(%rip),%rsi
0000000000004e4e	movq	%r15,%rdi
0000000000004e51	call	*%rbx
0000000000004e53	movq	0x000a979e(%rip),%rax
0000000000004e5a	movb	$0x00,(%r15,%rax)
0000000000004e5f	movq	0x0007f23a(%rip),%rax
0000000000004e66	movq	(%rax),%rax
0000000000004e69	cmpq	0xe0(%rbp),%rax
0000000000004e6d	jne	0x00004e80
0000000000004e6f	movq	%r15,%rax
0000000000004e72	addq	$0x00000468,%rsp
0000000000004e79	popq	%rbx
0000000000004e7a	popq	%r14
0000000000004e7c	popq	%r15
0000000000004e7e	popq	%rbp
0000000000004e7f	ret
0000000000004e80	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
-[DBGGDBStream init]:
0000000000004e85	pushq	%rbp
0000000000004e86	movq	%rsp,%rbp
0000000000004e89	subq	$0x10,%rsp
0000000000004e8d	movq	%rdi,0xf0(%rbp)
0000000000004e91	movq	0x000a3e70(%rip),%rax
0000000000004e98	movq	%rax,0xf8(%rbp)
0000000000004e9c	movq	0x0009fbcd(%rip),%rsi
0000000000004ea3	leaq	0xf0(%rbp),%rdi
0000000000004ea7	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000004eac	movq	0x000a9785(%rip),%rcx
0000000000004eb3	andl	$0xfe,(%rax,%rcx)
0000000000004eb7	andl	$0xfd,(%rax,%rcx)
0000000000004ebb	addq	$0x10,%rsp
0000000000004ebf	popq	%rbp
0000000000004ec0	ret
-[DBGGDBStream setName:]:
0000000000004ec1	pushq	%rbp
0000000000004ec2	movq	%rsp,%rbp
0000000000004ec5	pushq	%rbx
0000000000004ec6	pushq	%rax
0000000000004ec7	movq	%rdi,%rbx
0000000000004eca	movq	0x000a977f(%rip),%rax
0000000000004ed1	cmpq	%rdx,(%rbx,%rax)
0000000000004ed5	jne	0x00004ede
0000000000004ed7	addq	$0x08,%rsp
0000000000004edb	popq	%rbx
0000000000004edc	popq	%rbp
0000000000004edd	ret
0000000000004ede	movq	0x0009fb93(%rip),%rsi
0000000000004ee5	movq	%rdx,%rdi
0000000000004ee8	call	*0x0007f1ea(%rip)
0000000000004eee	movq	0x000a975b(%rip),%rdx
0000000000004ef5	movq	%rax,%rdi
0000000000004ef8	movq	%rbx,%rsi
0000000000004efb	addq	$0x08,%rsp
0000000000004eff	popq	%rbx
0000000000004f00	popq	%rbp
0000000000004f01	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[DBGGDBPTYDeviceByteStream slaveDeviceName]:
0000000000004f06	pushq	%rbp
0000000000004f07	movq	%rsp,%rbp
0000000000004f0a	movq	0x000a96c7(%rip),%rax
0000000000004f11	movq	(%rdi,%rax),%rax
0000000000004f15	popq	%rbp
0000000000004f16	ret
-[PBXGDB_Adaptor dynamicLinkerImageController]:
0000000000004f17	pushq	%rbp
0000000000004f18	movq	%rsp,%rbp
0000000000004f1b	movq	0x0009fece(%rip),%rsi
0000000000004f22	call	*0x0007f1b0(%rip)
0000000000004f28	movq	0x0009fec9(%rip),%rsi
0000000000004f2f	movq	%rax,%rdi
0000000000004f32	movq	0x0007f19f(%rip),%rax
0000000000004f39	popq	%rbp
0000000000004f3a	jmp	*%rax
-[PBXLSDebuggerAdaptor process]:
0000000000004f3c	pushq	%rbp
0000000000004f3d	movq	%rsp,%rbp
0000000000004f40	movq	0x0009fda1(%rip),%rsi
0000000000004f47	call	*0x0007f18b(%rip)
0000000000004f4d	movq	0x0009fe9c(%rip),%rsi
0000000000004f54	movq	%rax,%rdi
0000000000004f57	movq	0x0007f17a(%rip),%rax
0000000000004f5e	popq	%rbp
0000000000004f5f	jmp	*%rax
0000000000004f61	nop
0000000000004f62	nop
0000000000004f63	nop
0000000000004f64	nop
0000000000004f65	nop
0000000000004f66	nop
0000000000004f67	nop
0000000000004f68	nop
-[PBXLSProcess dynamicLinkerImageController]:
0000000000004f69	pushq	%rbp
0000000000004f6a	movq	%rsp,%rbp
0000000000004f6d	movq	0x000aa3b4(%rip),%rax
0000000000004f74	movq	(%rdi,%rax),%rax
0000000000004f78	popq	%rbp
0000000000004f79	ret
-[PBXGDB_Adaptor(TraceLogging) logCommentString:withTimeStamp:]:
0000000000004f7a	pushq	%rbp
0000000000004f7b	movq	%rsp,%rbp
0000000000004f7e	pushq	%r15
0000000000004f80	pushq	%r14
0000000000004f82	pushq	%r12
0000000000004f84	pushq	%rbx
0000000000004f85	subq	$0x20,%rsp
0000000000004f89	movl	%ecx,%r15d
0000000000004f8c	movq	%rdx,%r14
0000000000004f8f	movq	0x0009fd52(%rip),%rsi
0000000000004f96	movq	0x0007f13b(%rip),%r12
0000000000004f9d	call	*%r12
0000000000004fa0	movq	0x0009fd49(%rip),%rsi
0000000000004fa7	movq	%rax,%rdi
0000000000004faa	call	*%r12
0000000000004fad	movq	%rax,%rbx
0000000000004fb0	movq	0x0009fd51(%rip),%rsi
0000000000004fb7	movq	%rbx,%rdi
0000000000004fba	call	*%r12
0000000000004fbd	testb	%r15b,%r15b
0000000000004fc0	je	0x0000501b
0000000000004fc2	testq	%rax,%rax
0000000000004fc5	je	0x0000501b
0000000000004fc7	movq	0x0009fd42(%rip),%rsi
0000000000004fce	movq	0x0007f103(%rip),%r15
0000000000004fd5	movq	%rax,%rdi
0000000000004fd8	call	*%r15
0000000000004fdb	movsd	%xmm0,0xc8(%rbp)
0000000000004fe0	leaq	0xd0(%rbp),%rdi
0000000000004fe4	xorl	%esi,%esi
0000000000004fe6	callq	0x0004e6b0	; symbol stub for: _gettimeofday
0000000000004feb	movsd	0xc8(%rbp),%xmm0
0000000000004ff0	xorpd	0x00049ae8(%rip),%xmm0
0000000000004ff8	movq	0x0009fd01(%rip),%rsi
0000000000004fff	movslq	0xd8(%rbp),%r9
0000000000005003	movq	0xd0(%rbp),%r8
0000000000005007	leaq	0x000aaa2a(%rip),%rdx
000000000000500e	movq	%rbx,%rdi
0000000000005011	movq	%r14,%rcx
0000000000005014	movb	$0x01,%al
0000000000005016	call	*%r15
0000000000005019	jmp	0x00005037
000000000000501b	movq	0x0009fcde(%rip),%rsi
0000000000005022	leaq	0x000aaa2f(%rip),%rdx
0000000000005029	movq	%rbx,%rdi
000000000000502c	movq	%r14,%rcx
000000000000502f	xorb	%al,%al
0000000000005031	call	*0x0007f0a1(%rip)
0000000000005037	addq	$0x20,%rsp
000000000000503b	popq	%rbx
000000000000503c	popq	%r12
000000000000503e	popq	%r14
0000000000005040	popq	%r15
0000000000005042	popq	%rbp
0000000000005043	ret
-[PBXGDB_Adaptor configureUI]:
0000000000005044	pushq	%rbp
0000000000005045	movq	%rsp,%rbp
0000000000005048	pushq	%r15
000000000000504a	pushq	%r14
000000000000504c	pushq	%rbx
000000000000504d	pushq	%rax
000000000000504e	movq	%rdi,%r14
0000000000005051	movq	0x000a9688(%rip),%rax
0000000000005058	movq	(%r14,%rax),%rdi
000000000000505c	testq	%rdi,%rdi
000000000000505f	je	0x000050f1
0000000000005065	movq	0x0009fe0c(%rip),%rsi
000000000000506c	movq	0x0007f065(%rip),%r15
0000000000005073	call	*%r15
0000000000005076	movq	%rax,%rbx
0000000000005079	movq	0x000a3478(%rip),%rdi
0000000000005080	leaq	0x000a3259(%rip),%rsi
0000000000005087	call	*0x000a3253(%rip)
000000000000508d	movq	0x0009fdec(%rip),%rsi
0000000000005094	movq	0x0007f035(%rip),%rcx
000000000000509b	movq	(%rcx),%rdx
000000000000509e	movq	%rax,%rdi
00000000000050a1	movq	%rbx,%rcx
00000000000050a4	movq	%rbx,%r8
00000000000050a7	movq	%rbx,%r9
00000000000050aa	call	*%r15
00000000000050ad	movq	0x000a964c(%rip),%rdx
00000000000050b4	movq	%rax,%rdi
00000000000050b7	movq	%r14,%rsi
00000000000050ba	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000050bf	movq	0x0009fd3a(%rip),%rsi
00000000000050c6	movq	%r14,%rdi
00000000000050c9	call	*%r15
00000000000050cc	movq	0x0009fcd5(%rip),%rsi
00000000000050d3	movq	%rax,%rdi
00000000000050d6	call	*%r15
00000000000050d9	movq	0x000a9620(%rip),%rcx
00000000000050e0	movq	(%r14,%rcx),%rdx
00000000000050e4	movq	0x0009fd9d(%rip),%rsi
00000000000050eb	movq	%rax,%rdi
00000000000050ee	call	*%r15
00000000000050f1	movq	0x000a3408(%rip),%rbx
00000000000050f8	movq	0x0009fbe9(%rip),%rsi
00000000000050ff	movq	%r14,%rdi
0000000000005102	call	*0x0007efd0(%rip)
0000000000005108	movq	0x0009fd81(%rip),%rsi
000000000000510f	movq	%rbx,%rdi
0000000000005112	movq	%rax,%rdx
0000000000005115	call	*0x0007efbd(%rip)
000000000000511b	movq	0x0009fd76(%rip),%rsi
0000000000005122	movq	%r14,%rdi
0000000000005125	movq	%rax,%rdx
0000000000005128	call	*0x0007efaa(%rip)
000000000000512e	movq	0x0009fbb3(%rip),%rsi
0000000000005135	movq	%r14,%rdi
0000000000005138	call	*0x0007ef9a(%rip)
000000000000513e	movq	0x0009fd5b(%rip),%rsi
0000000000005145	movq	%rax,%rdi
0000000000005148	movq	%r14,%rdx
000000000000514b	movq	0x0007ef86(%rip),%rax
0000000000005152	addq	$0x08,%rsp
0000000000005156	popq	%rbx
0000000000005157	popq	%r14
0000000000005159	popq	%r15
000000000000515b	popq	%rbp
000000000000515c	jmp	*%rax
-[DBGGDBPTYDeviceByteStream fileHandleForMasterDevice]:
000000000000515e	pushq	%rbp
000000000000515f	movq	%rsp,%rbp
0000000000005162	pushq	%rbx
0000000000005163	pushq	%rax
0000000000005164	movq	%rdi,%rbx
0000000000005167	movq	0x000a94b2(%rip),%rax
000000000000516e	movq	(%rbx,%rax),%rax
0000000000005172	testq	%rax,%rax
0000000000005175	jne	0x000051d3
0000000000005177	xorl	%eax,%eax
0000000000005179	movq	0x000a9438(%rip),%rcx
0000000000005180	cmpl	$0xff,(%rbx,%rcx)
0000000000005184	je	0x000051d3
0000000000005186	movq	0x000a32e3(%rip),%rdi
000000000000518d	leaq	0x000a314c(%rip),%rsi
0000000000005194	call	*0x000a3146(%rip)
000000000000519a	movq	0x000a9417(%rip),%rcx
00000000000051a1	movl	(%rbx,%rcx),%edx
00000000000051a4	movq	0x0009fa6d(%rip),%rsi
00000000000051ab	movq	%rax,%rdi
00000000000051ae	xorl	%ecx,%ecx
00000000000051b0	call	*0x0007ef22(%rip)
00000000000051b6	movq	0x000a9463(%rip),%rdx
00000000000051bd	movq	%rax,%rdi
00000000000051c0	movq	%rbx,%rsi
00000000000051c3	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000051c8	movq	0x000a9451(%rip),%rax
00000000000051cf	movq	(%rbx,%rax),%rax
00000000000051d3	addq	$0x08,%rsp
00000000000051d7	popq	%rbx
00000000000051d8	popq	%rbp
00000000000051d9	ret
+[PBXGDB_CTypeController typeControllerForSession:]:
00000000000051da	pushq	%rbp
00000000000051db	movq	%rsp,%rbp
00000000000051de	pushq	%r15
00000000000051e0	pushq	%r14
00000000000051e2	pushq	%r13
00000000000051e4	pushq	%r12
00000000000051e6	pushq	%rbx
00000000000051e7	subq	$0x18,%rsp
00000000000051eb	movq	%rdi,0xc8(%rbp)
00000000000051ef	movq	0x000a3dba(%rip),%rax
00000000000051f6	movq	%rax,0xd0(%rbp)
00000000000051fa	movq	0x0009fc8f(%rip),%rsi
0000000000005201	leaq	0xc8(%rbp),%rdi
0000000000005205	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000000520a	movq	%rax,%r15
000000000000520d	leaq	0x000af8a4(%rip),%rdx
0000000000005214	movq	0x0007eebd(%rip),%r13
000000000000521b	movq	0x000a0d76(%rip),%rsi
0000000000005222	movq	%r15,%rdi
0000000000005225	movl	$0x00000001,%ecx
000000000000522a	call	*%r13
000000000000522d	leaq	0x000af8a4(%rip),%rdx
0000000000005234	movq	0x000a0d5d(%rip),%rsi
000000000000523b	movq	%r15,%rdi
000000000000523e	movl	$0x00000001,%ecx
0000000000005243	call	*%r13
0000000000005246	leaq	0x000af8ab(%rip),%rdx
000000000000524d	movq	0x000a0d44(%rip),%rsi
0000000000005254	movq	%r15,%rdi
0000000000005257	movl	$0x00000001,%ecx
000000000000525c	call	*%r13
000000000000525f	leaq	0x000af8b2(%rip),%rdx
0000000000005266	movq	0x000a0d2b(%rip),%rsi
000000000000526d	movq	%r15,%rdi
0000000000005270	movl	$0x00000001,%ecx
0000000000005275	call	*%r13
0000000000005278	leaq	0x000af8b9(%rip),%rdx
000000000000527f	movq	0x000a0d12(%rip),%rsi
0000000000005286	movq	%r15,%rdi
0000000000005289	movl	$0x00000001,%ecx
000000000000528e	call	*%r13
0000000000005291	leaq	0x000af8c0(%rip),%rdx
0000000000005298	movq	0x000a0cf9(%rip),%rsi
000000000000529f	movq	%r15,%rdi
00000000000052a2	movl	$0x00000001,%ecx
00000000000052a7	call	*%r13
00000000000052aa	leaq	0x000af8c7(%rip),%rdx
00000000000052b1	movq	0x000a0ce0(%rip),%rsi
00000000000052b8	movq	%r15,%rdi
00000000000052bb	movl	$0x00000001,%ecx
00000000000052c0	call	*%r13
00000000000052c3	leaq	0x000af8ce(%rip),%rdx
00000000000052ca	movq	0x000a0cc7(%rip),%rsi
00000000000052d1	movq	%r15,%rdi
00000000000052d4	movl	$0x00000001,%ecx
00000000000052d9	call	*%r13
00000000000052dc	leaq	0x000a2ffd(%rip),%r14
00000000000052e3	movq	0x000a384e(%rip),%rdi
00000000000052ea	movq	%r14,%rsi
00000000000052ed	call	*0x000a2fed(%rip)
00000000000052f3	movq	0x000a2036(%rip),%rsi
00000000000052fa	movq	%rax,%rdi
00000000000052fd	movq	%r15,%rdx
0000000000005300	call	*%r13
0000000000005303	movq	0x000a3586(%rip),%rdi
000000000000530a	movq	%r14,%rsi
000000000000530d	call	*0x000a2fcd(%rip)
0000000000005313	movq	0x0009f756(%rip),%rsi
000000000000531a	movq	%rax,%rdi
000000000000531d	call	*%r13
0000000000005320	movq	%rax,%r12
0000000000005323	movq	0x000a3186(%rip),%rdi
000000000000532a	movq	%r14,%rsi
000000000000532d	call	*0x000a2fad(%rip)
0000000000005333	movq	0x0009f736(%rip),%rsi
000000000000533a	movq	%rax,%rdi
000000000000533d	call	*%r13
0000000000005340	movq	%rax,%rbx
0000000000005343	movq	0x000a1bf6(%rip),%rsi
000000000000534a	movq	0x000a353f(%rip),%rdi
0000000000005351	call	*%r13
0000000000005354	leaq	0x000af6fd(%rip),%rdx
000000000000535b	movq	0x0009f9ce(%rip),%rsi
0000000000005362	movq	%rbx,%rdi
0000000000005365	movq	%rax,%rcx
0000000000005368	call	*%r13
000000000000536b	movq	0x000a1f86(%rip),%rsi
0000000000005372	movq	%r12,%rdi
0000000000005375	movq	%rbx,%rdx
0000000000005378	call	*%r13
000000000000537b	movq	0x000a37be(%rip),%rdi
0000000000005382	movq	%r14,%rsi
0000000000005385	call	*0x000a2f55(%rip)
000000000000538b	movq	0x0009f6de(%rip),%rsi
0000000000005392	movq	%rax,%rdi
0000000000005395	call	*%r13
0000000000005398	movq	%rax,%rbx
000000000000539b	movq	0x000a1f5e(%rip),%rsi
00000000000053a2	movq	%rbx,%rdi
00000000000053a5	movq	%r12,%rdx
00000000000053a8	call	*%r13
00000000000053ab	leaq	0x000af6c6(%rip),%rdx
00000000000053b2	movq	0x000a1f4f(%rip),%rsi
00000000000053b9	movq	%rbx,%rdi
00000000000053bc	call	*%r13
00000000000053bf	movq	0x000a1f72(%rip),%rsi
00000000000053c6	movq	%r15,%rdi
00000000000053c9	movq	%rbx,%rdx
00000000000053cc	call	*%r13
00000000000053cf	movq	0x000a376a(%rip),%rdi
00000000000053d6	movq	%r14,%rsi
00000000000053d9	call	*0x000a2f01(%rip)
00000000000053df	movq	0x0009f68a(%rip),%rsi
00000000000053e6	movq	%rax,%rdi
00000000000053e9	call	*%r13
00000000000053ec	movq	%rax,%rbx
00000000000053ef	movq	0x000a1f0a(%rip),%rsi
00000000000053f6	movq	%rbx,%rdi
00000000000053f9	movq	%r12,%rdx
00000000000053fc	call	*%r13
00000000000053ff	leaq	0x000af7b2(%rip),%rdx
0000000000005406	movq	0x000a1efb(%rip),%rsi
000000000000540d	movq	%rbx,%rdi
0000000000005410	call	*%r13
0000000000005413	movq	0x000a1f1e(%rip),%rsi
000000000000541a	movq	%r15,%rdi
000000000000541d	movq	%rbx,%rdx
0000000000005420	call	*%r13
0000000000005423	movq	0x000a3716(%rip),%rdi
000000000000542a	movq	%r14,%rsi
000000000000542d	call	*0x000a2ead(%rip)
0000000000005433	movq	0x0009f636(%rip),%rsi
000000000000543a	movq	%rax,%rdi
000000000000543d	call	*%r13
0000000000005440	movq	%rax,%rbx
0000000000005443	movq	0x000a1eb6(%rip),%rsi
000000000000544a	movq	%rbx,%rdi
000000000000544d	movq	%r12,%rdx
0000000000005450	call	*%r13
0000000000005453	leaq	0x000af77e(%rip),%rdx
000000000000545a	movq	0x000a1ea7(%rip),%rsi
0000000000005461	movq	%rbx,%rdi
0000000000005464	call	*%r13
0000000000005467	movq	0x000a1eca(%rip),%rsi
000000000000546e	movq	%r15,%rdi
0000000000005471	movq	%rbx,%rdx
0000000000005474	call	*%r13
0000000000005477	movq	0x000a36c2(%rip),%rdi
000000000000547e	movq	%r14,%rsi
0000000000005481	call	*0x000a2e59(%rip)
0000000000005487	movq	0x0009f5e2(%rip),%rsi
000000000000548e	movq	%rax,%rdi
0000000000005491	call	*%r13
0000000000005494	movq	%rax,%rbx
0000000000005497	movq	0x000a1e62(%rip),%rsi
000000000000549e	movq	%rbx,%rdi
00000000000054a1	movq	%r12,%rdx
00000000000054a4	call	*%r13
00000000000054a7	leaq	0x000af74a(%rip),%rdx
00000000000054ae	movq	0x000a1e53(%rip),%rsi
00000000000054b5	movq	%rbx,%rdi
00000000000054b8	call	*%r13
00000000000054bb	movq	0x000a1e76(%rip),%rsi
00000000000054c2	movq	%r15,%rdi
00000000000054c5	movq	%rbx,%rdx
00000000000054c8	call	*%r13
00000000000054cb	movq	0x000a366e(%rip),%rdi
00000000000054d2	movq	%r14,%rsi
00000000000054d5	call	*0x000a2e05(%rip)
00000000000054db	movq	0x0009f58e(%rip),%rsi
00000000000054e2	movq	%rax,%rdi
00000000000054e5	call	*%r13
00000000000054e8	movq	%rax,%rbx
00000000000054eb	movq	0x000a1e0e(%rip),%rsi
00000000000054f2	movq	%rbx,%rdi
00000000000054f5	movq	%r12,%rdx
00000000000054f8	call	*%r13
00000000000054fb	leaq	0x000af716(%rip),%rdx
0000000000005502	movq	0x000a1dff(%rip),%rsi
0000000000005509	movq	%rbx,%rdi
000000000000550c	call	*%r13
000000000000550f	movq	0x000a1e22(%rip),%rsi
0000000000005516	movq	%r15,%rdi
0000000000005519	movq	%rbx,%rdx
000000000000551c	call	*%r13
000000000000551f	movq	0x000a361a(%rip),%rdi
0000000000005526	movq	%r14,%rsi
0000000000005529	call	*0x000a2db1(%rip)
000000000000552f	movq	0x0009f53a(%rip),%rsi
0000000000005536	movq	%rax,%rdi
0000000000005539	call	*%r13
000000000000553c	movq	%rax,%rbx
000000000000553f	movq	0x000a1dba(%rip),%rsi
0000000000005546	movq	%rbx,%rdi
0000000000005549	movq	%r12,%rdx
000000000000554c	call	*%r13
000000000000554f	leaq	0x000af6e2(%rip),%rdx
0000000000005556	movq	0x000a1dab(%rip),%rsi
000000000000555d	movq	%rbx,%rdi
0000000000005560	call	*%r13
0000000000005563	movq	0x000a1dce(%rip),%rsi
000000000000556a	movq	%r15,%rdi
000000000000556d	movq	%rbx,%rdx
0000000000005570	call	*%r13
0000000000005573	movq	0x000a35c6(%rip),%rdi
000000000000557a	movq	%r14,%rsi
000000000000557d	call	*0x000a2d5d(%rip)
0000000000005583	movq	0x0009f4e6(%rip),%rsi
000000000000558a	movq	%rax,%rdi
000000000000558d	call	*%r13
0000000000005590	movq	%rax,%rbx
0000000000005593	movq	0x000a1d66(%rip),%rsi
000000000000559a	movq	%rbx,%rdi
000000000000559d	movq	%r12,%rdx
00000000000055a0	call	*%r13
00000000000055a3	leaq	0x000af6ae(%rip),%rdx
00000000000055aa	movq	0x000a1d57(%rip),%rsi
00000000000055b1	movq	%rbx,%rdi
00000000000055b4	call	*%r13
00000000000055b7	movq	0x000a1d7a(%rip),%rsi
00000000000055be	movq	%r15,%rdi
00000000000055c1	movq	%rbx,%rdx
00000000000055c4	call	*%r13
00000000000055c7	movq	0x000a3572(%rip),%rdi
00000000000055ce	movq	%r14,%rsi
00000000000055d1	call	*0x000a2d09(%rip)
00000000000055d7	movq	0x0009f492(%rip),%rsi
00000000000055de	movq	%rax,%rdi
00000000000055e1	call	*%r13
00000000000055e4	movq	%rax,%rbx
00000000000055e7	movq	0x000a1d12(%rip),%rsi
00000000000055ee	movq	%rbx,%rdi
00000000000055f1	movq	%r12,%rdx
00000000000055f4	call	*%r13
00000000000055f7	leaq	0x000af67a(%rip),%rdx
00000000000055fe	movq	0x000a1d03(%rip),%rsi
0000000000005605	movq	%rbx,%rdi
0000000000005608	call	*%r13
000000000000560b	movq	0x000a1d26(%rip),%rsi
0000000000005612	movq	%r15,%rdi
0000000000005615	movq	%rbx,%rdx
0000000000005618	call	*%r13
000000000000561b	movq	0x000a326e(%rip),%rdi
0000000000005622	movq	%r14,%rsi
0000000000005625	call	*0x000a2cb5(%rip)
000000000000562b	movq	0x0009f43e(%rip),%rsi
0000000000005632	movq	%rax,%rdi
0000000000005635	call	*%r13
0000000000005638	movq	%rax,%r12
000000000000563b	movq	0x000a2e6e(%rip),%rdi
0000000000005642	movq	%r14,%rsi
0000000000005645	call	*0x000a2c95(%rip)
000000000000564b	movq	0x0009f41e(%rip),%rsi
0000000000005652	movq	%rax,%rdi
0000000000005655	call	*%r13
0000000000005658	movq	%rax,%rbx
000000000000565b	movq	0x000a18de(%rip),%rsi
0000000000005662	movq	0x000a3227(%rip),%rdi
0000000000005669	call	*%r13
000000000000566c	leaq	0x000af625(%rip),%rdx
0000000000005673	movq	0x0009f6b6(%rip),%rsi
000000000000567a	movq	%rbx,%rdi
000000000000567d	movq	%rax,%rcx
0000000000005680	call	*%r13
0000000000005683	movq	0x000a1c6e(%rip),%rsi
000000000000568a	movq	%r12,%rdi
000000000000568d	movq	%rbx,%rdx
0000000000005690	call	*%r13
0000000000005693	movq	0x000a34a6(%rip),%rdi
000000000000569a	movq	%r14,%rsi
000000000000569d	call	*0x000a2c3d(%rip)
00000000000056a3	movq	0x0009f3c6(%rip),%rsi
00000000000056aa	movq	%rax,%rdi
00000000000056ad	call	*%r13
00000000000056b0	movq	%rax,%rbx
00000000000056b3	movq	0x000a1c46(%rip),%rsi
00000000000056ba	movq	%rbx,%rdi
00000000000056bd	movq	%r12,%rdx
00000000000056c0	call	*%r13
00000000000056c3	leaq	0x000af5ee(%rip),%rdx
00000000000056ca	movq	0x000a1c37(%rip),%rsi
00000000000056d1	movq	%rbx,%rdi
00000000000056d4	call	*%r13
00000000000056d7	movq	0x000a1c5a(%rip),%rsi
00000000000056de	movq	%r15,%rdi
00000000000056e1	movq	%rbx,%rdx
00000000000056e4	call	*%r13
00000000000056e7	movq	0x000a3452(%rip),%rdi
00000000000056ee	movq	%r14,%rsi
00000000000056f1	call	*0x000a2be9(%rip)
00000000000056f7	movq	0x0009f372(%rip),%rsi
00000000000056fe	movq	%rax,%rdi
0000000000005701	call	*%r13
0000000000005704	movq	%rax,%rbx
0000000000005707	movq	0x000a1bf2(%rip),%rsi
000000000000570e	movq	%rbx,%rdi
0000000000005711	movq	%r12,%rdx
0000000000005714	call	*%r13
0000000000005717	leaq	0x000af5ba(%rip),%rdx
000000000000571e	movq	0x000a1be3(%rip),%rsi
0000000000005725	movq	%rbx,%rdi
0000000000005728	call	*%r13
000000000000572b	movq	0x000a1c06(%rip),%rsi
0000000000005732	movq	%r15,%rdi
0000000000005735	movq	%rbx,%rdx
0000000000005738	call	*%r13
000000000000573b	movq	0x000a33fe(%rip),%rdi
0000000000005742	movq	%r14,%rsi
0000000000005745	call	*0x000a2b95(%rip)
000000000000574b	movq	0x0009f31e(%rip),%rsi
0000000000005752	movq	%rax,%rdi
0000000000005755	call	*%r13
0000000000005758	movq	%rax,%rbx
000000000000575b	movq	0x000a1b9e(%rip),%rsi
0000000000005762	movq	%rbx,%rdi
0000000000005765	movq	%r12,%rdx
0000000000005768	call	*%r13
000000000000576b	leaq	0x000af586(%rip),%rdx
0000000000005772	movq	0x000a1b8f(%rip),%rsi
0000000000005779	movq	%rbx,%rdi
000000000000577c	call	*%r13
000000000000577f	movq	0x000a1bb2(%rip),%rsi
0000000000005786	movq	%r15,%rdi
0000000000005789	movq	%rbx,%rdx
000000000000578c	call	*%r13
000000000000578f	movq	0x000a33aa(%rip),%rdi
0000000000005796	movq	%r14,%rsi
0000000000005799	call	*0x000a2b41(%rip)
000000000000579f	movq	0x0009f2ca(%rip),%rsi
00000000000057a6	movq	%rax,%rdi
00000000000057a9	call	*%r13
00000000000057ac	movq	%rax,%rbx
00000000000057af	movq	0x000a1b4a(%rip),%rsi
00000000000057b6	movq	%rbx,%rdi
00000000000057b9	movq	%r12,%rdx
00000000000057bc	call	*%r13
00000000000057bf	leaq	0x000af552(%rip),%rdx
00000000000057c6	movq	0x000a1b3b(%rip),%rsi
00000000000057cd	movq	%rbx,%rdi
00000000000057d0	call	*%r13
00000000000057d3	movq	0x000a1b5e(%rip),%rsi
00000000000057da	movq	%r15,%rdi
00000000000057dd	movq	%rbx,%rdx
00000000000057e0	call	*%r13
00000000000057e3	movq	0x000a30a6(%rip),%rdi
00000000000057ea	movq	%r14,%rsi
00000000000057ed	call	*0x000a2aed(%rip)
00000000000057f3	movq	0x0009f276(%rip),%rsi
00000000000057fa	movq	%rax,%rdi
00000000000057fd	call	*%r13
0000000000005800	movq	%rax,%r12
0000000000005803	movq	0x000a2ca6(%rip),%rdi
000000000000580a	movq	%r14,%rsi
000000000000580d	call	*0x000a2acd(%rip)
0000000000005813	movq	0x0009f256(%rip),%rsi
000000000000581a	movq	%rax,%rdi
000000000000581d	call	*%r13
0000000000005820	movq	%rax,%rbx
0000000000005823	movq	0x000a1716(%rip),%rsi
000000000000582a	movq	0x000a305f(%rip),%rdi
0000000000005831	call	*%r13
0000000000005834	leaq	0x000af4fd(%rip),%rdx
000000000000583b	movq	0x0009f4ee(%rip),%rsi
0000000000005842	movq	%rbx,%rdi
0000000000005845	movq	%rax,%rcx
0000000000005848	call	*%r13
000000000000584b	movq	0x000a1aa6(%rip),%rsi
0000000000005852	movq	%r12,%rdi
0000000000005855	movq	%rbx,%rdx
0000000000005858	call	*%r13
000000000000585b	movq	0x000a32de(%rip),%rdi
0000000000005862	movq	%r14,%rsi
0000000000005865	call	*0x000a2a75(%rip)
000000000000586b	movq	0x0009f1fe(%rip),%rsi
0000000000005872	movq	%rax,%rdi
0000000000005875	call	*%r13
0000000000005878	movq	%rax,%rbx
000000000000587b	movq	0x000a1a7e(%rip),%rsi
0000000000005882	movq	%rbx,%rdi
0000000000005885	movq	%r12,%rdx
0000000000005888	call	*%r13
000000000000588b	leaq	0x000af4c6(%rip),%rdx
0000000000005892	movq	0x000a1a6f(%rip),%rsi
0000000000005899	movq	%rbx,%rdi
000000000000589c	call	*%r13
000000000000589f	movq	0x000a1a92(%rip),%rsi
00000000000058a6	movq	%r15,%rdi
00000000000058a9	movq	%rbx,%rdx
00000000000058ac	call	*%r13
00000000000058af	movq	0x000a328a(%rip),%rdi
00000000000058b6	movq	%r14,%rsi
00000000000058b9	call	*0x000a2a21(%rip)
00000000000058bf	movq	0x0009f1aa(%rip),%rsi
00000000000058c6	movq	%rax,%rdi
00000000000058c9	call	*%r13
00000000000058cc	movq	%rax,%rbx
00000000000058cf	movq	0x000a1a2a(%rip),%rsi
00000000000058d6	movq	%rbx,%rdi
00000000000058d9	movq	%r12,%rdx
00000000000058dc	call	*%r13
00000000000058df	leaq	0x000af492(%rip),%rdx
00000000000058e6	movq	0x000a1a1b(%rip),%rsi
00000000000058ed	movq	%rbx,%rdi
00000000000058f0	call	*%r13
00000000000058f3	movq	0x000a1a3e(%rip),%rsi
00000000000058fa	movq	%r15,%rdi
00000000000058fd	movq	%rbx,%rdx
0000000000005900	call	*%r13
0000000000005903	movq	0x000a3236(%rip),%rdi
000000000000590a	movq	%r14,%rsi
000000000000590d	call	*0x000a29cd(%rip)
0000000000005913	movq	0x0009f156(%rip),%rsi
000000000000591a	movq	%rax,%rdi
000000000000591d	call	*%r13
0000000000005920	movq	%rax,%rbx
0000000000005923	movq	0x000a19d6(%rip),%rsi
000000000000592a	movq	%rbx,%rdi
000000000000592d	movq	%r12,%rdx
0000000000005930	call	*%r13
0000000000005933	leaq	0x000af45e(%rip),%rdx
000000000000593a	movq	0x000a19c7(%rip),%rsi
0000000000005941	movq	%rbx,%rdi
0000000000005944	call	*%r13
0000000000005947	movq	0x000a19ea(%rip),%rsi
000000000000594e	movq	%r15,%rdi
0000000000005951	movq	%rbx,%rdx
0000000000005954	call	*%r13
0000000000005957	movq	0x000a31e2(%rip),%rdi
000000000000595e	movq	%r14,%rsi
0000000000005961	call	*0x000a2979(%rip)
0000000000005967	movq	0x0009f102(%rip),%rsi
000000000000596e	movq	%rax,%rdi
0000000000005971	call	*%r13
0000000000005974	movq	%rax,%rbx
0000000000005977	movq	0x000a1982(%rip),%rsi
000000000000597e	movq	%rbx,%rdi
0000000000005981	movq	%r12,%rdx
0000000000005984	call	*%r13
0000000000005987	leaq	0x000af42a(%rip),%rdx
000000000000598e	movq	0x000a1973(%rip),%rsi
0000000000005995	movq	%rbx,%rdi
0000000000005998	call	*%r13
000000000000599b	movq	0x000a1996(%rip),%rsi
00000000000059a2	movq	%r15,%rdi
00000000000059a5	movq	%rbx,%rdx
00000000000059a8	call	*%r13
00000000000059ab	movq	0x000a2ede(%rip),%rdi
00000000000059b2	movq	%r14,%rsi
00000000000059b5	call	*0x000a2925(%rip)
00000000000059bb	movq	0x0009f0ae(%rip),%rsi
00000000000059c2	movq	%rax,%rdi
00000000000059c5	call	*%r13
00000000000059c8	movq	%rax,%r12
00000000000059cb	movq	0x000a2ade(%rip),%rdi
00000000000059d2	movq	%r14,%rsi
00000000000059d5	call	*0x000a2905(%rip)
00000000000059db	movq	0x0009f08e(%rip),%rsi
00000000000059e2	movq	%rax,%rdi
00000000000059e5	call	*%r13
00000000000059e8	movq	%rax,%rbx
00000000000059eb	movq	0x000a154e(%rip),%rsi
00000000000059f2	movq	0x000a2e97(%rip),%rdi
00000000000059f9	call	*%r13
00000000000059fc	leaq	0x000af3d5(%rip),%rdx
0000000000005a03	movq	0x0009f326(%rip),%rsi
0000000000005a0a	movq	%rbx,%rdi
0000000000005a0d	movq	%rax,%rcx
0000000000005a10	call	*%r13
0000000000005a13	movq	0x000a18de(%rip),%rsi
0000000000005a1a	movq	%r12,%rdi
0000000000005a1d	movq	%rbx,%rdx
0000000000005a20	call	*%r13
0000000000005a23	movq	0x000a3116(%rip),%rdi
0000000000005a2a	movq	%r14,%rsi
0000000000005a2d	call	*0x000a28ad(%rip)
0000000000005a33	movq	0x0009f036(%rip),%rsi
0000000000005a3a	movq	%rax,%rdi
0000000000005a3d	call	*%r13
0000000000005a40	movq	%rax,%rbx
0000000000005a43	movq	0x000a18b6(%rip),%rsi
0000000000005a4a	movq	%rbx,%rdi
0000000000005a4d	movq	%r12,%rdx
0000000000005a50	call	*%r13
0000000000005a53	leaq	0x000af39e(%rip),%rdx
0000000000005a5a	movq	0x000a18a7(%rip),%rsi
0000000000005a61	movq	%rbx,%rdi
0000000000005a64	call	*%r13
0000000000005a67	movq	0x000a18ca(%rip),%rsi
0000000000005a6e	movq	%r15,%rdi
0000000000005a71	movq	%rbx,%rdx
0000000000005a74	call	*%r13
0000000000005a77	movq	0x000a30c2(%rip),%rdi
0000000000005a7e	movq	%r14,%rsi
0000000000005a81	call	*0x000a2859(%rip)
0000000000005a87	movq	0x0009efe2(%rip),%rsi
0000000000005a8e	movq	%rax,%rdi
0000000000005a91	call	*%r13
0000000000005a94	movq	%rax,%rbx
0000000000005a97	movq	0x000a1862(%rip),%rsi
0000000000005a9e	movq	%rbx,%rdi
0000000000005aa1	movq	%r12,%rdx
0000000000005aa4	call	*%r13
0000000000005aa7	leaq	0x000af36a(%rip),%rdx
0000000000005aae	movq	0x000a1853(%rip),%rsi
0000000000005ab5	movq	%rbx,%rdi
0000000000005ab8	call	*%r13
0000000000005abb	movq	0x000a1876(%rip),%rsi
0000000000005ac2	movq	%r15,%rdi
0000000000005ac5	movq	%rbx,%rdx
0000000000005ac8	call	*%r13
0000000000005acb	movq	0x000a306e(%rip),%rdi
0000000000005ad2	movq	%r14,%rsi
0000000000005ad5	call	*0x000a2805(%rip)
0000000000005adb	movq	0x0009ef8e(%rip),%rsi
0000000000005ae2	movq	%rax,%rdi
0000000000005ae5	call	*%r13
0000000000005ae8	movq	%rax,%rbx
0000000000005aeb	movq	0x000a180e(%rip),%rsi
0000000000005af2	movq	%rbx,%rdi
0000000000005af5	movq	%r12,%rdx
0000000000005af8	call	*%r13
0000000000005afb	leaq	0x000af336(%rip),%rdx
0000000000005b02	movq	0x000a17ff(%rip),%rsi
0000000000005b09	movq	%rbx,%rdi
0000000000005b0c	call	*%r13
0000000000005b0f	movq	0x000a1822(%rip),%rsi
0000000000005b16	movq	%r15,%rdi
0000000000005b19	movq	%rbx,%rdx
0000000000005b1c	call	*%r13
0000000000005b1f	movq	0x000a301a(%rip),%rdi
0000000000005b26	movq	%r14,%rsi
0000000000005b29	call	*0x000a27b1(%rip)
0000000000005b2f	movq	0x0009ef3a(%rip),%rsi
0000000000005b36	movq	%rax,%rdi
0000000000005b39	call	*%r13
0000000000005b3c	movq	%rax,%rbx
0000000000005b3f	movq	0x000a17ba(%rip),%rsi
0000000000005b46	movq	%rbx,%rdi
0000000000005b49	movq	%r12,%rdx
0000000000005b4c	call	*%r13
0000000000005b4f	leaq	0x000af302(%rip),%rdx
0000000000005b56	movq	0x000a17ab(%rip),%rsi
0000000000005b5d	movq	%rbx,%rdi
0000000000005b60	call	*%r13
0000000000005b63	movq	0x000a17ce(%rip),%rsi
0000000000005b6a	movq	%r15,%rdi
0000000000005b6d	movq	%rbx,%rdx
0000000000005b70	call	*%r13
0000000000005b73	movq	0x000a2fc6(%rip),%rdi
0000000000005b7a	movq	%r14,%rsi
0000000000005b7d	call	*0x000a275d(%rip)
0000000000005b83	movq	0x0009eee6(%rip),%rsi
0000000000005b8a	movq	%rax,%rdi
0000000000005b8d	call	*%r13
0000000000005b90	movq	%rax,%rbx
0000000000005b93	movq	0x000a1766(%rip),%rsi
0000000000005b9a	movq	%rbx,%rdi
0000000000005b9d	movq	%r12,%rdx
0000000000005ba0	call	*%r13
0000000000005ba3	leaq	0x000af2ce(%rip),%rdx
0000000000005baa	movq	0x000a1757(%rip),%rsi
0000000000005bb1	movq	%rbx,%rdi
0000000000005bb4	call	*%r13
0000000000005bb7	movq	0x000a177a(%rip),%rsi
0000000000005bbe	movq	%r15,%rdi
0000000000005bc1	movq	%rbx,%rdx
0000000000005bc4	call	*%r13
0000000000005bc7	movq	0x000a2f72(%rip),%rdi
0000000000005bce	movq	%r14,%rsi
0000000000005bd1	call	*0x000a2709(%rip)
0000000000005bd7	movq	0x0009ee92(%rip),%rsi
0000000000005bde	movq	%rax,%rdi
0000000000005be1	call	*%r13
0000000000005be4	movq	%rax,%rbx
0000000000005be7	movq	0x000a1712(%rip),%rsi
0000000000005bee	movq	%rbx,%rdi
0000000000005bf1	movq	%r12,%rdx
0000000000005bf4	call	*%r13
0000000000005bf7	leaq	0x000af29a(%rip),%rdx
0000000000005bfe	movq	0x000a1703(%rip),%rsi
0000000000005c05	movq	%rbx,%rdi
0000000000005c08	call	*%r13
0000000000005c0b	movq	0x000a1726(%rip),%rsi
0000000000005c12	movq	%r15,%rdi
0000000000005c15	movq	%rbx,%rdx
0000000000005c18	call	*%r13
0000000000005c1b	movq	0x000a2f1e(%rip),%rdi
0000000000005c22	movq	%r14,%rsi
0000000000005c25	call	*0x000a26b5(%rip)
0000000000005c2b	movq	0x0009ee3e(%rip),%rsi
0000000000005c32	movq	%rax,%rdi
0000000000005c35	call	*%r13
0000000000005c38	movq	%rax,%rbx
0000000000005c3b	movq	0x000a16be(%rip),%rsi
0000000000005c42	movq	%rbx,%rdi
0000000000005c45	movq	%r12,%rdx
0000000000005c48	call	*%r13
0000000000005c4b	leaq	0x000af266(%rip),%rdx
0000000000005c52	movq	0x000a16af(%rip),%rsi
0000000000005c59	movq	%rbx,%rdi
0000000000005c5c	call	*%r13
0000000000005c5f	movq	0x000a16d2(%rip),%rsi
0000000000005c66	movq	%r15,%rdi
0000000000005c69	movq	%rbx,%rdx
0000000000005c6c	call	*%r13
0000000000005c6f	movq	0x000a2eca(%rip),%rdi
0000000000005c76	movq	%r14,%rsi
0000000000005c79	call	*0x000a2661(%rip)
0000000000005c7f	movq	0x0009edea(%rip),%rsi
0000000000005c86	movq	%rax,%rdi
0000000000005c89	call	*%r13
0000000000005c8c	movq	%rax,%rbx
0000000000005c8f	movq	0x000a166a(%rip),%rsi
0000000000005c96	movq	%rbx,%rdi
0000000000005c99	movq	%r12,%rdx
0000000000005c9c	call	*%r13
0000000000005c9f	leaq	0x000af232(%rip),%rdx
0000000000005ca6	movq	0x000a165b(%rip),%rsi
0000000000005cad	movq	%rbx,%rdi
0000000000005cb0	call	*%r13
0000000000005cb3	movq	0x000a167e(%rip),%rsi
0000000000005cba	movq	%r15,%rdi
0000000000005cbd	movq	%rbx,%rdx
0000000000005cc0	call	*%r13
0000000000005cc3	movq	%r15,%rax
0000000000005cc6	addq	$0x18,%rsp
0000000000005cca	popq	%rbx
0000000000005ccb	popq	%r12
0000000000005ccd	popq	%r13
0000000000005ccf	popq	%r14
0000000000005cd1	popq	%r15
0000000000005cd3	popq	%rbp
0000000000005cd4	ret
+[PBXLSTypeController typeControllerForSession:]:
0000000000005cd5	pushq	%rbp
0000000000005cd6	movq	%rsp,%rbp
0000000000005cd9	pushq	%r15
0000000000005cdb	pushq	%r14
0000000000005cdd	pushq	%rbx
0000000000005cde	pushq	%rax
0000000000005cdf	movq	%rdx,%r14
0000000000005ce2	leaq	0x000a2647(%rip),%rsi
0000000000005ce9	call	*0x000a2641(%rip)
0000000000005cef	leaq	0x000a25ea(%rip),%rsi
0000000000005cf6	movq	%rax,%rdi
0000000000005cf9	call	*0x000a25e1(%rip)
0000000000005cff	movq	0x0009ed6a(%rip),%rsi
0000000000005d06	movq	0x0007e3cb(%rip),%r15
0000000000005d0d	movq	%rax,%rdi
0000000000005d10	call	*%r15
0000000000005d13	movq	%rax,%rbx
0000000000005d16	movq	0x000a1a0b(%rip),%rsi
0000000000005d1d	movq	%rbx,%rdi
0000000000005d20	movq	%r14,%rdx
0000000000005d23	call	*%r15
0000000000005d26	movq	%rbx,%rax
0000000000005d29	addq	$0x08,%rsp
0000000000005d2d	popq	%rbx
0000000000005d2e	popq	%r14
0000000000005d30	popq	%r15
0000000000005d32	popq	%rbp
0000000000005d33	ret
-[PBXGDB_CTypeController init]:
0000000000005d34	pushq	%rbp
0000000000005d35	movq	%rsp,%rbp
0000000000005d38	pushq	%rbx
0000000000005d39	subq	$0x18,%rsp
0000000000005d3d	movq	%rdi,0xe8(%rbp)
0000000000005d41	movq	0x000a3270(%rip),%rax
0000000000005d48	movq	%rax,0xf0(%rbp)
0000000000005d4c	movq	0x0009ed1d(%rip),%rsi
0000000000005d53	leaq	0xe8(%rbp),%rdi
0000000000005d57	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000005d5c	movq	%rax,%rbx
0000000000005d5f	testq	%rbx,%rbx
0000000000005d62	je	0x00005d9a
0000000000005d64	movq	0x000a2745(%rip),%rdi
0000000000005d6b	leaq	0x000a256e(%rip),%rsi
0000000000005d72	call	*0x000a2568(%rip)
0000000000005d78	movq	0x0009ecf1(%rip),%rsi
0000000000005d7f	movq	%rax,%rdi
0000000000005d82	call	*0x0007e350(%rip)
0000000000005d88	movq	0x000a93c9(%rip),%rdx
0000000000005d8f	movq	%rax,%rdi
0000000000005d92	movq	%rbx,%rsi
0000000000005d95	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000005d9a	movq	%rbx,%rax
0000000000005d9d	addq	$0x18,%rsp
0000000000005da1	popq	%rbx
0000000000005da2	popq	%rbp
0000000000005da3	ret
-[PBXLSTypeController setDebuggingSession:]:
0000000000005da4	pushq	%rbp
0000000000005da5	movq	%rsp,%rbp
0000000000005da8	movq	%rdx,%rax
0000000000005dab	movq	%rdi,%rcx
0000000000005dae	movq	0x000a9693(%rip),%rdx
0000000000005db5	movq	%rax,%rdi
0000000000005db8	movq	%rcx,%rsi
0000000000005dbb	popq	%rbp
0000000000005dbc	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_CTypeController typeByExpressionString:addIfNotFound:]:
0000000000005dc1	pushq	%rbp
0000000000005dc2	movq	%rsp,%rbp
0000000000005dc5	pushq	%r15
0000000000005dc7	pushq	%r14
0000000000005dc9	pushq	%r12
0000000000005dcb	pushq	%rbx
0000000000005dcc	movl	%ecx,%r12d
0000000000005dcf	movq	%rdx,%r14
0000000000005dd2	movq	%rdi,%r15
0000000000005dd5	movq	0x000a937c(%rip),%rax
0000000000005ddc	movq	(%r15,%rax),%rdi
0000000000005de0	leaq	0x000a2569(%rip),%rsi
0000000000005de7	call	*0x000a2563(%rip)
0000000000005ded	movq	%rax,%rbx
0000000000005df0	testq	%rbx,%rbx
0000000000005df3	jne	0x00005e24
0000000000005df5	testb	%r12b,%r12b
0000000000005df8	je	0x00005e24
0000000000005dfa	movq	0x0009f96f(%rip),%rsi
0000000000005e01	movq	0x0007e2d0(%rip),%r12
0000000000005e08	movq	%r15,%rdi
0000000000005e0b	movq	%r14,%rdx
0000000000005e0e	call	*%r12
0000000000005e11	movq	%rax,%rbx
0000000000005e14	movq	0x000a151d(%rip),%rsi
0000000000005e1b	movq	%r15,%rdi
0000000000005e1e	movq	%rbx,%rdx
0000000000005e21	call	*%r12
0000000000005e24	movq	%rbx,%rax
0000000000005e27	popq	%rbx
0000000000005e28	popq	%r12
0000000000005e2a	popq	%r14
0000000000005e2c	popq	%r15
0000000000005e2e	popq	%rbp
0000000000005e2f	ret
-[PBXGDB_CTypeController newTypeWithExpressionString:]:
0000000000005e30	pushq	%rbp
0000000000005e31	movq	%rsp,%rbp
0000000000005e34	pushq	%r15
0000000000005e36	pushq	%r14
0000000000005e38	pushq	%rbx
0000000000005e39	pushq	%rax
0000000000005e3a	movq	%rdx,%r14
0000000000005e3d	movq	0x000a2cfc(%rip),%rdi
0000000000005e44	leaq	0x000a2495(%rip),%rsi
0000000000005e4b	call	*0x000a248f(%rip)
0000000000005e51	movq	0x0009ec18(%rip),%rsi
0000000000005e58	movq	0x0007e279(%rip),%r15
0000000000005e5f	movq	%rax,%rdi
0000000000005e62	call	*%r15
0000000000005e65	movq	%rax,%rbx
0000000000005e68	movq	0x000a1499(%rip),%rsi
0000000000005e6f	movq	%rbx,%rdi
0000000000005e72	movq	%r14,%rdx
0000000000005e75	call	*%r15
0000000000005e78	movq	%rbx,%rax
0000000000005e7b	addq	$0x08,%rsp
0000000000005e7f	popq	%rbx
0000000000005e80	popq	%r14
0000000000005e82	popq	%r15
0000000000005e84	popq	%rbp
0000000000005e85	ret
-[PBXGDB_CType init]:
0000000000005e86	pushq	%rbp
0000000000005e87	movq	%rsp,%rbp
0000000000005e8a	pushq	%rbx
0000000000005e8b	subq	$0x18,%rsp
0000000000005e8f	movq	%rdi,0xe8(%rbp)
0000000000005e93	movq	0x000a310e(%rip),%rax
0000000000005e9a	movq	%rax,0xf0(%rbp)
0000000000005e9e	movq	0x0009ebcb(%rip),%rsi
0000000000005ea5	leaq	0xe8(%rbp),%rdi
0000000000005ea9	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000005eae	movq	%rax,%rbx
0000000000005eb1	testq	%rbx,%rbx
0000000000005eb4	je	0x00005eec
0000000000005eb6	movq	0x000a27ab(%rip),%rdi
0000000000005ebd	leaq	0x000a241c(%rip),%rsi
0000000000005ec4	call	*0x000a2416(%rip)
0000000000005eca	movq	0x0009eb9f(%rip),%rsi
0000000000005ed1	movq	%rax,%rdi
0000000000005ed4	call	*0x0007e1fe(%rip)
0000000000005eda	movq	0x000a9267(%rip),%rdx
0000000000005ee1	movq	%rax,%rdi
0000000000005ee4	movq	%rbx,%rsi
0000000000005ee7	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000005eec	movq	%rbx,%rax
0000000000005eef	addq	$0x18,%rsp
0000000000005ef3	popq	%rbx
0000000000005ef4	popq	%rbp
0000000000005ef5	ret
-[PBXLSType init]:
0000000000005ef6	pushq	%rbp
0000000000005ef7	movq	%rsp,%rbp
0000000000005efa	pushq	%rbx
0000000000005efb	subq	$0x18,%rsp
0000000000005eff	movq	%rdi,0xe8(%rbp)
0000000000005f03	movq	0x000a3126(%rip),%rax
0000000000005f0a	movq	%rax,0xf0(%rbp)
0000000000005f0e	movq	0x0009eb5b(%rip),%rsi
0000000000005f15	leaq	0xe8(%rbp),%rdi
0000000000005f19	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000005f1e	movq	%rax,%rbx
0000000000005f21	testq	%rbx,%rbx
0000000000005f24	je	0x00005f6b
0000000000005f26	movq	0x000a94fb(%rip),%rdx
0000000000005f2d	xorl	%edi,%edi
0000000000005f2f	movq	%rbx,%rsi
0000000000005f32	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000005f37	movq	0x000a94f2(%rip),%rdx
0000000000005f3e	xorl	%edi,%edi
0000000000005f40	movq	%rbx,%rsi
0000000000005f43	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000005f48	movq	0x000a94e9(%rip),%rdx
0000000000005f4f	xorl	%edi,%edi
0000000000005f51	movq	%rbx,%rsi
0000000000005f54	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000005f59	movq	0x000a13e0(%rip),%rsi
0000000000005f60	movq	%rbx,%rdi
0000000000005f63	xorl	%edx,%edx
0000000000005f65	call	*0x0007e16d(%rip)
0000000000005f6b	movq	%rbx,%rax
0000000000005f6e	addq	$0x18,%rsp
0000000000005f72	popq	%rbx
0000000000005f73	popq	%rbp
0000000000005f74	ret
-[PBXLSType setCanBeDynamic:]:
0000000000005f75	pushq	%rbp
0000000000005f76	movq	%rsp,%rbp
0000000000005f79	movq	0x000a94c0(%rip),%rax
0000000000005f80	movb	%dl,(%rdi,%rax)
0000000000005f83	popq	%rbp
0000000000005f84	ret
-[PBXLSType setExpressionString:]:
0000000000005f85	pushq	%rbp
0000000000005f86	movq	%rsp,%rbp
0000000000005f89	movq	%rdx,%rax
0000000000005f8c	movq	%rdi,%rcx
0000000000005f8f	movq	0x000a949a(%rip),%rdx
0000000000005f96	movq	%rax,%rdi
0000000000005f99	movq	%rcx,%rsi
0000000000005f9c	popq	%rbp
0000000000005f9d	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_CTypeController addType:]:
0000000000005fa2	pushq	%rbp
0000000000005fa3	movq	%rsp,%rbp
0000000000005fa6	pushq	%r14
0000000000005fa8	pushq	%rbx
0000000000005fa9	movq	%rdx,%rbx
0000000000005fac	movq	%rdi,%r14
0000000000005faf	movq	0x0009f4d2(%rip),%rsi
0000000000005fb6	movq	%rbx,%rdi
0000000000005fb9	call	*0x0007e119(%rip)
0000000000005fbf	movq	0x0009f7b2(%rip),%rsi
0000000000005fc6	movq	%r14,%rdi
0000000000005fc9	movq	%rbx,%rdx
0000000000005fcc	movq	%rax,%rcx
0000000000005fcf	movq	0x0007e102(%rip),%rax
0000000000005fd6	popq	%rbx
0000000000005fd7	popq	%r14
0000000000005fd9	popq	%rbp
0000000000005fda	jmp	*%rax
-[PBXLSType expressionString]:
0000000000005fdc	pushq	%rbp
0000000000005fdd	movq	%rsp,%rbp
0000000000005fe0	movq	0x000a9449(%rip),%rax
0000000000005fe7	movq	(%rdi,%rax),%rax
0000000000005feb	popq	%rbp
0000000000005fec	ret
-[PBXGDB_CTypeController addType:withExpressionString:]:
0000000000005fed	pushq	%rbp
0000000000005fee	movq	%rsp,%rbp
0000000000005ff1	pushq	%r14
0000000000005ff3	pushq	%rbx
0000000000005ff4	movq	%rdx,%rbx
0000000000005ff7	movq	%rdi,%r14
0000000000005ffa	movq	0x000a9157(%rip),%rax
0000000000006001	movq	(%r14,%rax),%rdi
0000000000006005	movq	0x0009ed24(%rip),%rsi
000000000000600c	call	*0x0007e0c6(%rip)
0000000000006012	movq	0x0009ee7f(%rip),%rsi
0000000000006019	movq	%rbx,%rdi
000000000000601c	movq	%r14,%rdx
000000000000601f	movq	0x0007e0b2(%rip),%rax
0000000000006026	popq	%rbx
0000000000006027	popq	%r14
0000000000006029	popq	%rbp
000000000000602a	jmp	*%rax
-[PBXLSType setTypeController:]:
000000000000602c	pushq	%rbp
000000000000602d	movq	%rsp,%rbp
0000000000006030	movq	%rdx,%rax
0000000000006033	movq	%rdi,%rcx
0000000000006036	movq	0x000a93eb(%rip),%rdx
000000000000603d	movq	%rax,%rdi
0000000000006040	movq	%rcx,%rsi
0000000000006043	popq	%rbp
0000000000006044	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_NSArrayType initWithController:]:
0000000000006049	pushq	%rbp
000000000000604a	movq	%rsp,%rbp
000000000000604d	pushq	%r15
000000000000604f	pushq	%r14
0000000000006051	pushq	%r13
0000000000006053	pushq	%r12
0000000000006055	pushq	%rbx
0000000000006056	subq	$0x58,%rsp
000000000000605a	movq	%rdx,0xc0(%rbp)
000000000000605e	movq	%rdi,0xc8(%rbp)
0000000000006062	movq	0x000a2f57(%rip),%rax
0000000000006069	movq	%rax,0xd0(%rbp)
000000000000606d	movq	0x000a12bc(%rip),%rsi
0000000000006074	leaq	0xc8(%rbp),%rdi
0000000000006078	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000000607d	movq	%rax,%r15
0000000000006080	testq	%r15,%r15
0000000000006083	je	0x000061ed
0000000000006089	movq	0x000a2800(%rip),%rdi
0000000000006090	leaq	0x000a2249(%rip),%r14
0000000000006097	movq	%r14,%rsi
000000000000609a	call	*0x000a2240(%rip)
00000000000060a0	movq	0x0009e9c9(%rip),%rsi
00000000000060a7	movq	0x0007e02a(%rip),%r13
00000000000060ae	movq	%rax,%rdi
00000000000060b1	call	*%r13
00000000000060b4	movq	%rax,%rbx
00000000000060b7	movq	0x000a25ba(%rip),%rdi
00000000000060be	movq	%r14,%rsi
00000000000060c1	call	*0x000a2219(%rip)
00000000000060c7	movq	%rax,0xb8(%rbp)
00000000000060cb	movq	0x000a0e86(%rip),%rsi
00000000000060d2	movq	0x000a27b7(%rip),%rdi
00000000000060d9	call	*%r13
00000000000060dc	movq	%rax,0xb0(%rbp)
00000000000060e0	movq	0x0009fea9(%rip),%rsi
00000000000060e7	movq	0x000a27a2(%rip),%rdi
00000000000060ee	call	*%r13
00000000000060f1	movq	%rax,%r14
00000000000060f4	movq	0x0009fe8d(%rip),%rsi
00000000000060fb	movq	0x000a278e(%rip),%rdi
0000000000006102	call	*%r13
0000000000006105	movq	%rax,%r12
0000000000006108	movq	0x000a0ea9(%rip),%rsi
000000000000610f	movq	0x000a277a(%rip),%rdi
0000000000006116	call	*%r13
0000000000006119	leaq	0x000aa898(%rip),%rcx
0000000000006120	movq	0x000a11c9(%rip),%rsi
0000000000006127	leaq	0x000aedca(%rip),%rdx
000000000000612e	movq	%rax,0x18(%rsp)
0000000000006133	leaq	0x000aedde(%rip),%r8
000000000000613a	movq	%rcx,0x10(%rsp)
000000000000613f	movq	%r12,0x08(%rsp)
0000000000006144	leaq	0x000ae96d(%rip),%rax
000000000000614b	movq	%rax,(%rsp)
000000000000614f	movq	$0x00000000,0x20(%rsp)
0000000000006158	movq	0xb8(%rbp),%rdi
000000000000615c	movq	0xb0(%rbp),%rcx
0000000000006160	movq	%r14,%r9
0000000000006163	xorb	%al,%al
0000000000006165	call	*%r13
0000000000006168	movq	0x000a1189(%rip),%rsi
000000000000616f	movq	%rbx,%rdi
0000000000006172	movq	%rax,%rdx
0000000000006175	call	*%r13
0000000000006178	movq	0x000a1181(%rip),%rsi
000000000000617f	movq	%r15,%rdi
0000000000006182	movq	%rbx,%rdx
0000000000006185	call	*%r13
0000000000006188	leaq	0x000aeda9(%rip),%rdx
000000000000618f	movq	0x000a1172(%rip),%rsi
0000000000006196	movq	%r15,%rdi
0000000000006199	call	*%r13
000000000000619c	movq	0x000a119d(%rip),%rsi
00000000000061a3	movq	%r15,%rdi
00000000000061a6	movl	$0x00000001,%edx
00000000000061ab	call	*%r13
00000000000061ae	leaq	0x000aeda3(%rip),%rdx
00000000000061b5	movq	0x0009fddc(%rip),%rsi
00000000000061bc	movq	0xc0(%rbp),%rdi
00000000000061c0	movl	$0x00000001,%ecx
00000000000061c5	call	*%r13
00000000000061c8	movq	%rax,%rbx
00000000000061cb	movq	0x000a116e(%rip),%rsi
00000000000061d2	movq	%rbx,%rdi
00000000000061d5	movl	$0x00000001,%edx
00000000000061da	call	*%r13
00000000000061dd	movq	0x0009f5a4(%rip),%rsi
00000000000061e4	movq	%r15,%rdi
00000000000061e7	movq	%rbx,%rdx
00000000000061ea	call	*%r13
00000000000061ed	movq	%r15,%rax
00000000000061f0	addq	$0x58,%rsp
00000000000061f4	popq	%rbx
00000000000061f5	popq	%r12
00000000000061f7	popq	%r13
00000000000061f9	popq	%r14
00000000000061fb	popq	%r15
00000000000061fd	popq	%rbp
00000000000061fe	ret
-[PBXGDB_CType initWithController:]:
00000000000061ff	pushq	%rbp
0000000000006200	movq	%rsp,%rbp
0000000000006203	subq	$0x10,%rsp
0000000000006207	movq	%rdi,0xf0(%rbp)
000000000000620b	movq	0x000a2d96(%rip),%rax
0000000000006212	movq	%rax,0xf8(%rbp)
0000000000006216	movq	0x0009e853(%rip),%rsi
000000000000621d	leaq	0xf0(%rbp),%rdi
0000000000006221	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000006226	addq	$0x10,%rsp
000000000000622a	popq	%rbp
000000000000622b	ret
+[PBXLSTypeDescription fetchSummaryValueOperationClassNameKey]:
000000000000622c	pushq	%rbp
000000000000622d	movq	%rsp,%rbp
0000000000006230	leaq	0x000af721(%rip),%rax
0000000000006237	popq	%rbp
0000000000006238	ret
+[PBXLSTypeDescription summaryValueExpressionStringKey]:
0000000000006239	pushq	%rbp
000000000000623a	movq	%rsp,%rbp
000000000000623d	leaq	0x000af6d4(%rip),%rax
0000000000006244	popq	%rbp
0000000000006245	ret
+[PBXLSTypeDescription summaryValueExpressionReturnTypeStringKey]:
0000000000006246	pushq	%rbp
0000000000006247	movq	%rsp,%rbp
000000000000624a	leaq	0x000af6e7(%rip),%rax
0000000000006251	popq	%rbp
0000000000006252	ret
+[PBXLSTypeDescription summaryContentFormatStringKey]:
0000000000006253	pushq	%rbp
0000000000006254	movq	%rsp,%rbp
0000000000006257	leaq	0x000af75a(%rip),%rax
000000000000625e	popq	%rbp
000000000000625f	ret
-[PBXLSTypeDescription setSummaryDictionary:]:
0000000000006260	pushq	%rbp
0000000000006261	movq	%rsp,%rbp
0000000000006264	movq	%rdx,%rax
0000000000006267	movq	%rdi,%rcx
000000000000626a	movq	0x000a91df(%rip),%rdx
0000000000006271	cmpq	%rax,(%rcx,%rdx)
0000000000006275	jne	0x00006279
0000000000006277	popq	%rbp
0000000000006278	ret
0000000000006279	addq	%rcx,%rdx
000000000000627c	subq	%rcx,%rdx
000000000000627f	movq	%rax,%rdi
0000000000006282	movq	%rcx,%rsi
0000000000006285	popq	%rbp
0000000000006286	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXLSType setTypeDescription:]:
000000000000628b	pushq	%rbp
000000000000628c	movq	%rsp,%rbp
000000000000628f	movq	%rdx,%rax
0000000000006292	movq	%rdi,%rcx
0000000000006295	movq	0x000a919c(%rip),%rdx
000000000000629c	cmpq	%rax,(%rcx,%rdx)
00000000000062a0	jne	0x000062a4
00000000000062a2	popq	%rbp
00000000000062a3	ret
00000000000062a4	addq	%rcx,%rdx
00000000000062a7	subq	%rcx,%rdx
00000000000062aa	movq	%rax,%rdi
00000000000062ad	movq	%rcx,%rsi
00000000000062b0	popq	%rbp
00000000000062b1	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_CType addSubclassType:]:
00000000000062b6	pushq	%rbp
00000000000062b7	movq	%rsp,%rbp
00000000000062ba	pushq	%r14
00000000000062bc	pushq	%rbx
00000000000062bd	movq	%rdx,%r14
00000000000062c0	movq	%rdi,%rbx
00000000000062c3	cmpq	%r14,%rbx
00000000000062c6	je	0x000062fa
00000000000062c8	movq	0x000a8e79(%rip),%rax
00000000000062cf	movq	(%rbx,%rax),%rdi
00000000000062d3	leaq	0x000a2026(%rip),%rsi
00000000000062da	movq	%r14,%rdx
00000000000062dd	call	*0x000a201d(%rip)
00000000000062e3	movq	0x000a1026(%rip),%rsi
00000000000062ea	movq	%r14,%rdi
00000000000062ed	movq	%rbx,%rdx
00000000000062f0	popq	%rbx
00000000000062f1	popq	%r14
00000000000062f3	popq	%rbp
00000000000062f4	jmp	*0x0007ddde(%rip)
00000000000062fa	movq	0x0009f187(%rip),%rsi
0000000000006301	movq	%rbx,%rdi
0000000000006304	call	*0x0007ddce(%rip)
000000000000630a	leaq	0x000ae787(%rip),%rdi
0000000000006311	movq	%rax,%rsi
0000000000006314	xorb	%al,%al
0000000000006316	popq	%rbx
0000000000006317	popq	%r14
0000000000006319	popq	%rbp
000000000000631a	jmp	0x0004e5c0	; symbol stub for: _NSLog
-[PBXGDB_CType setSuperclassType:]:
000000000000631f	pushq	%rbp
0000000000006320	movq	%rsp,%rbp
0000000000006323	movq	%rdx,%rax
0000000000006326	movq	%rdi,%rcx
0000000000006329	movq	0x000a8e20(%rip),%rdx
0000000000006330	movq	%rax,%rdi
0000000000006333	movq	%rcx,%rsi
0000000000006336	popq	%rbp
0000000000006337	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
+[PBXLSTypeDescription fetchSummaryContentOperationClassNameKey]:
000000000000633c	pushq	%rbp
000000000000633d	movq	%rsp,%rbp
0000000000006340	leaq	0x000af631(%rip),%rax
0000000000006347	popq	%rbp
0000000000006348	ret
-[PBXLSDebuggerAdaptor setTypeController:]:
0000000000006349	pushq	%rbp
000000000000634a	movq	%rsp,%rbp
000000000000634d	movq	%rdx,%rax
0000000000006350	movq	%rdi,%rcx
0000000000006353	movq	0x000a9136(%rip),%rdx
000000000000635a	movq	%rax,%rdi
000000000000635d	movq	%rcx,%rsi
0000000000006360	popq	%rbp
0000000000006361	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000006366	nop
0000000000006367	nop
-[PBXLSDebuggingSession registerRestartExecutableAdaptor:]:
0000000000006368	pushq	%rbp
0000000000006369	movq	%rsp,%rbp
000000000000636c	movq	0x000a9155(%rip),%rsi
0000000000006373	addq	%rdi,%rsi
0000000000006376	movq	%rdx,%rdi
0000000000006379	popq	%rbp
000000000000637a	jmp	0x0004e614	; symbol stub for: _objc_assign_weak
000000000000637f	nop
0000000000006380	nop
0000000000006381	nop
0000000000006382	nop
0000000000006383	nop
0000000000006384	nop
0000000000006385	nop
0000000000006386	nop
0000000000006387	nop
0000000000006388	nop
0000000000006389	nop
000000000000638a	nop
000000000000638b	nop
000000000000638c	nop
000000000000638d	nop
-[DBGGDBLauncher _taskDidStart]:
000000000000638e	pushq	%rbp
000000000000638f	movq	%rsp,%rbp
0000000000006392	pushq	%r14
0000000000006394	pushq	%rbx
0000000000006395	subq	$0x10,%rsp
0000000000006399	movq	%rdi,%rbx
000000000000639c	movq	0x000a164d(%rip),%rsi
00000000000063a3	movq	0x0007dd2e(%rip),%r14
00000000000063aa	call	*%r14
00000000000063ad	movq	0x0009ea94(%rip),%rsi
00000000000063b4	movq	%rax,%rdi
00000000000063b7	call	*%r14
00000000000063ba	testb	%al,%al
00000000000063bc	jne	0x000063e4
00000000000063be	movq	0x0009eafb(%rip),%rsi
00000000000063c5	movq	0x0007dd0c(%rip),%r14
00000000000063cc	movq	%rbx,%rdi
00000000000063cf	call	*%r14
00000000000063d2	movq	0x000a11ff(%rip),%rsi
00000000000063d9	movq	%rax,%rdi
00000000000063dc	movl	$0x00000002,%edx
00000000000063e1	call	*%r14
00000000000063e4	movq	0x000a160d(%rip),%rsi
00000000000063eb	movq	0x0007dce6(%rip),%r14
00000000000063f2	movq	%rbx,%rdi
00000000000063f5	movl	$0x00000001,%edx
00000000000063fa	call	*%r14
00000000000063fd	movq	0x000a15fc(%rip),%rsi
0000000000006404	movq	%rbx,%rdi
0000000000006407	call	*%r14
000000000000640a	movq	0x000a15f7(%rip),%rsi
0000000000006411	movq	%rax,%rdi
0000000000006414	movl	$0x00000001,%edx
0000000000006419	call	*%r14
000000000000641c	movq	0x000a15ed(%rip),%rsi
0000000000006423	movq	%rbx,%rdi
0000000000006426	call	*%r14
0000000000006429	movq	0x0009e978(%rip),%rsi
0000000000006430	movq	%rbx,%rdi
0000000000006433	call	*%r14
0000000000006436	movq	0x000a90c3(%rip),%rcx
000000000000643d	movq	(%rbx,%rcx),%rdx
0000000000006441	movq	0x000a15d0(%rip),%rsi
0000000000006448	movq	%rax,%rdi
000000000000644b	call	*%r14
000000000000644e	leaq	0xe0(%rbp),%rdi
0000000000006452	movq	%rbx,0xe0(%rbp)
0000000000006456	movq	0x000a2bfb(%rip),%rax
000000000000645d	movq	%rax,0xe8(%rbp)
0000000000006461	movq	0x000a15b8(%rip),%rsi
0000000000006468	xorl	%edx,%edx
000000000000646a	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000000646f	addq	$0x10,%rsp
0000000000006473	popq	%rbx
0000000000006474	popq	%r14
0000000000006476	popq	%rbp
0000000000006477	ret
0000000000006478	nop
0000000000006479	nop
000000000000647a	nop
000000000000647b	nop
000000000000647c	nop
000000000000647d	nop
000000000000647e	nop
000000000000647f	nop
0000000000006480	nop
-[DBGGDBLauncher debugSession]:
0000000000006481	pushq	%rbp
0000000000006482	movq	%rsp,%rbp
0000000000006485	movq	0x000a9074(%rip),%rax
000000000000648c	movq	(%rdi,%rax),%rax
0000000000006490	popq	%rbp
0000000000006491	ret
-[DBGGDBLauncher targetProcess]:
0000000000006492	pushq	%rbp
0000000000006493	movq	%rsp,%rbp
0000000000006496	movq	0x000a908b(%rip),%rax
000000000000649d	movq	(%rdi,%rax),%rax
00000000000064a1	popq	%rbp
00000000000064a2	ret
-[DBGGDBProcess setControlState:]:
00000000000064a3	pushq	%rbp
00000000000064a4	movq	%rsp,%rbp
00000000000064a7	pushq	%r14
00000000000064a9	pushq	%rbx
00000000000064aa	subq	$0x10,%rsp
00000000000064ae	movl	%edx,%ebx
00000000000064b0	movq	%rdi,%r14
00000000000064b3	movq	%r14,0xe0(%rbp)
00000000000064b7	movq	0x000a2bf2(%rip),%rax
00000000000064be	movq	%rax,0xe8(%rbp)
00000000000064c2	movq	0x000a110f(%rip),%rsi
00000000000064c9	leaq	0xe0(%rbp),%rdi
00000000000064cd	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000064d2	cmpl	$0x02,%ebx
00000000000064d5	je	0x000064fa
00000000000064d7	movq	0x000a19e2(%rip),%rsi
00000000000064de	movq	0x0007dbf3(%rip),%rbx
00000000000064e5	movq	%r14,%rdi
00000000000064e8	call	*%rbx
00000000000064ea	movq	0x0009ebdf(%rip),%rsi
00000000000064f1	movq	%rax,%rdi
00000000000064f4	call	*%rbx
00000000000064f6	testb	%al,%al
00000000000064f8	je	0x00006534
00000000000064fa	movq	0x000a122f(%rip),%rsi
0000000000006501	movq	0x0007dbd0(%rip),%rbx
0000000000006508	movq	%r14,%rdi
000000000000650b	call	*%rbx
000000000000650d	movq	0x0009ebc4(%rip),%rsi
0000000000006514	movq	%rax,%rdi
0000000000006517	call	*%rbx
0000000000006519	leaq	0x000a9418(%rip),%rdx
0000000000006520	movq	0x0009ebb9(%rip),%rsi
0000000000006527	movq	%rax,%rdi
000000000000652a	movl	$0x00000001,%ecx
000000000000652f	xorl	%r8d,%r8d
0000000000006532	call	*%rbx
0000000000006534	addq	$0x10,%rsp
0000000000006538	popq	%rbx
0000000000006539	popq	%r14
000000000000653b	popq	%rbp
000000000000653c	ret
-[DBGGDBProcess launcher]:
000000000000653d	pushq	%rbp
000000000000653e	movq	%rsp,%rbp
0000000000006541	movq	0x000a1010(%rip),%rsi
0000000000006548	call	*0x0007db8a(%rip)
000000000000654e	movq	0x000a1283(%rip),%rsi
0000000000006555	movq	%rax,%rdi
0000000000006558	movq	0x0007db79(%rip),%rax
000000000000655f	popq	%rbp
0000000000006560	jmp	*%rax
0000000000006562	nop
-[DBGGDBLauncher gdbConsoleAdaptor]:
0000000000006563	pushq	%rbp
0000000000006564	movq	%rsp,%rbp
0000000000006567	movq	0x000a8fb2(%rip),%rax
000000000000656e	movq	(%rdi,%rax),%rax
0000000000006572	popq	%rbp
0000000000006573	ret
0000000000006574	nop
0000000000006575	nop
0000000000006576	nop
0000000000006577	nop
0000000000006578	nop
0000000000006579	nop
000000000000657a	nop
000000000000657b	nop
-[DBGGDBLauncher adaptorsSetTaskIsRunning:]:
000000000000657c	pushq	%rbp
000000000000657d	movq	%rsp,%rbp
0000000000006580	movq	0x000a8f81(%rip),%rax
0000000000006587	movq	(%rdi,%rax),%rdi
000000000000658b	movq	0x0009e96e(%rip),%rsi
0000000000006592	popq	%rbp
0000000000006593	jmp	*0x0007db3f(%rip)
-[PBXGDB_Adaptor setTaskIsRunning:]:
0000000000006599	pushq	%rbp
000000000000659a	movq	%rsp,%rbp
000000000000659d	pushq	%r14
000000000000659f	pushq	%rbx
00000000000065a0	subq	$0x10,%rsp
00000000000065a4	movl	%edx,%r14d
00000000000065a7	movq	%rdi,%rbx
00000000000065aa	movq	%rbx,0xe0(%rbp)
00000000000065ae	movq	0x000a275b(%rip),%rax
00000000000065b5	movq	%rax,0xe8(%rbp)
00000000000065b9	movq	0x0009e940(%rip),%rsi
00000000000065c0	leaq	0xe0(%rbp),%rdi
00000000000065c4	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000065c9	testb	%r14b,%r14b
00000000000065cc	jne	0x00006608
00000000000065ce	movq	0x0009e81b(%rip),%rsi
00000000000065d5	movq	0x0007dafc(%rip),%r14
00000000000065dc	movq	%rbx,%rdi
00000000000065df	call	*%r14
00000000000065e2	movq	0x0009e91f(%rip),%rsi
00000000000065e9	movq	%rax,%rdi
00000000000065ec	movq	%rbx,%rdx
00000000000065ef	xorl	%ecx,%ecx
00000000000065f1	call	*%r14
00000000000065f4	movq	0x0009e8bd(%rip),%rsi
00000000000065fb	movq	0x000a1ee6(%rip),%rdi
0000000000006602	movq	%rbx,%rdx
0000000000006605	call	*%r14
0000000000006608	addq	$0x10,%rsp
000000000000660c	popq	%rbx
000000000000660d	popq	%r14
000000000000660f	popq	%rbp
0000000000006610	ret
-[PBXLSAdaptor setTaskIsRunning:]:
0000000000006611	pushq	%rbp
0000000000006612	movq	%rsp,%rbp
0000000000006615	movq	0x000a8e44(%rip),%rax
000000000000661c	movb	%dl,(%rdi,%rax)
000000000000661f	popq	%rbp
0000000000006620	ret
-[DBGGDBLauncher PBXLSDebuggingSession]:
0000000000006621	pushq	%rbp
0000000000006622	movq	%rsp,%rbp
0000000000006625	movq	0x000a8ecc(%rip),%rax
000000000000662c	movq	(%rdi,%rax),%rax
0000000000006630	popq	%rbp
0000000000006631	ret
-[PBXLSLaunchSession setLaunchSessionState:]:
0000000000006632	pushq	%rbp
0000000000006633	movq	%rsp,%rbp
0000000000006636	movq	0x000a8eab(%rip),%rax
000000000000663d	movl	%edx,(%rdi,%rax)
0000000000006640	popq	%rbp
0000000000006641	ret
0000000000006642	nop
0000000000006643	nop
0000000000006644	nop
0000000000006645	nop
0000000000006646	nop
0000000000006647	nop
0000000000006648	nop
-[DBGGDBLauncher adaptorsExecutableDidStart]:
0000000000006649	pushq	%rbp
000000000000664a	movq	%rsp,%rbp
000000000000664d	movq	0x000a8eb4(%rip),%rax
0000000000006654	movq	(%rdi,%rax),%rdi
0000000000006658	movq	0x000a1371(%rip),%rsi
000000000000665f	popq	%rbp
0000000000006660	jmp	*0x0007da72(%rip)
-[PBXLSAdaptor executableDidStart]:
0000000000006666	pushq	%rbp
0000000000006667	movq	%rsp,%rbp
000000000000666a	popq	%rbp
000000000000666b	ret
000000000000666c	nop
000000000000666d	nop
000000000000666e	nop
-[DBGGDBLauncher parseConsoleOutputFromOriginalOutput:]:
000000000000666f	pushq	%rbp
0000000000006670	movq	%rsp,%rbp
0000000000006673	pushq	%r15
0000000000006675	pushq	%r14
0000000000006677	pushq	%rbx
0000000000006678	pushq	%rax
0000000000006679	movq	%rdx,%r14
000000000000667c	movq	%rdi,%rbx
000000000000667f	movq	0x000a8e82(%rip),%rax
0000000000006686	movq	(%rbx,%rax),%rdi
000000000000668a	testq	%rdi,%rdi
000000000000668d	je	0x000066c4
000000000000668f	movq	0x000a13da(%rip),%rsi
0000000000006696	call	*0x0007da3c(%rip)
000000000000669c	testb	%al,%al
000000000000669e	je	0x000066fe
00000000000066a0	movq	0x000a1349(%rip),%rsi
00000000000066a7	movq	0x0007da2a(%rip),%r15
00000000000066ae	movq	%rbx,%rdi
00000000000066b1	call	*%r15
00000000000066b4	movq	0x000a13bd(%rip),%rsi
00000000000066bb	leaq	0x000afab6(%rip),%rdx
00000000000066c2	jmp	0x000066e6
00000000000066c4	movq	0x000a1325(%rip),%rsi
00000000000066cb	movq	0x0007da06(%rip),%r15
00000000000066d2	movq	%rbx,%rdi
00000000000066d5	call	*%r15
00000000000066d8	movq	0x000a1399(%rip),%rsi
00000000000066df	leaq	0x000afab2(%rip),%rdx
00000000000066e6	movq	%rax,%rdi
00000000000066e9	movq	%r14,%rcx
00000000000066ec	xorb	%al,%al
00000000000066ee	call	*%r15
00000000000066f1	xorl	%eax,%eax
00000000000066f3	addq	$0x08,%rsp
00000000000066f7	popq	%rbx
00000000000066f8	popq	%r14
00000000000066fa	popq	%r15
00000000000066fc	popq	%rbp
00000000000066fd	ret
00000000000066fe	movq	0x000a8e03(%rip),%rax
0000000000006705	movq	(%rbx,%rax),%rdi
0000000000006709	movq	0x0009e7e8(%rip),%rsi
0000000000006710	movq	%r14,%rdx
0000000000006713	addq	$0x08,%rsp
0000000000006717	popq	%rbx
0000000000006718	popq	%r14
000000000000671a	popq	%r15
000000000000671c	popq	%rbp
000000000000671d	jmp	*0x0007d9b5(%rip)
-[PBXGDB_Adaptor gdbForcedToQuit]:
0000000000006723	pushq	%rbp
0000000000006724	movq	%rsp,%rbp
0000000000006727	movq	0x000a808a(%rip),%rax
000000000000672e	movb	(%rdi,%rax),%al
0000000000006731	movsbl	%al,%eax
0000000000006734	popq	%rbp
0000000000006735	ret
-[PBXGDB_Adaptor parseAndApproveOutputFromDebugger:]:
0000000000006736	pushq	%rbp
0000000000006737	movq	%rsp,%rbp
000000000000673a	pushq	%rbx
000000000000673b	pushq	%rax
000000000000673c	movq	%rdx,%rbx
000000000000673f	movq	0x000a7f32(%rip),%rax
0000000000006746	movq	(%rdi,%rax),%rdi
000000000000674a	movq	0x0009e79f(%rip),%rsi
0000000000006751	call	*0x0007d981(%rip)
0000000000006757	movq	0x0009e79a(%rip),%rsi
000000000000675e	movq	%rax,%rdi
0000000000006761	movq	%rbx,%rdx
0000000000006764	movq	0x0007d96d(%rip),%rax
000000000000676b	addq	$0x08,%rsp
000000000000676f	popq	%rbx
0000000000006770	popq	%rbp
0000000000006771	jmp	*%rax
0000000000006773	nop
0000000000006774	nop
0000000000006775	nop
0000000000006776	nop
0000000000006777	nop
0000000000006778	nop
0000000000006779	nop
000000000000677a	nop
000000000000677b	nop
-[PBXGDB_MIController parser]:
000000000000677c	pushq	%rbp
000000000000677d	movq	%rsp,%rbp
0000000000006780	movq	0x000a8459(%rip),%rax
0000000000006787	movq	(%rdi,%rax),%rax
000000000000678b	popq	%rbp
000000000000678c	ret
000000000000678d	nop
-[PBXGDB_MIParser parseAndApproveOutputFromDebugger:]:
000000000000678e	pushq	%rbp
000000000000678f	movq	%rsp,%rbp
0000000000006792	pushq	%r15
0000000000006794	pushq	%r14
0000000000006796	pushq	%r12
0000000000006798	pushq	%rbx
0000000000006799	movq	%rdx,%r15
000000000000679c	movq	%rdi,%r12
000000000000679f	movq	0x000a855a(%rip),%rax
00000000000067a6	movq	(%r12,%rax),%rdi
00000000000067aa	movq	0x0009e307(%rip),%rsi
00000000000067b1	movq	0x0007d920(%rip),%rbx
00000000000067b8	call	*%rbx
00000000000067ba	movq	%rax,%r14
00000000000067bd	movq	0x0009e65c(%rip),%rsi
00000000000067c4	leaq	0x000a8f4d(%rip),%rdx
00000000000067cb	movq	%r15,%rdi
00000000000067ce	call	*%rbx
00000000000067d0	testb	%al,%al
00000000000067d2	jne	0x00006829
00000000000067d4	movq	0x000a854d(%rip),%rax
00000000000067db	movq	(%r12,%rax),%rdi
00000000000067df	testq	%rdi,%rdi
00000000000067e2	je	0x000067f6
00000000000067e4	movq	0x0009e315(%rip),%rsi
00000000000067eb	movq	%r15,%rdx
00000000000067ee	call	*0x0007d8e4(%rip)
00000000000067f4	jmp	0x00006818
00000000000067f6	movq	0x0009f83b(%rip),%rsi
00000000000067fd	movq	%r15,%rdi
0000000000006800	call	*0x0007d8d2(%rip)
0000000000006806	movq	0x000a851b(%rip),%rdx
000000000000680d	movq	%rax,%rdi
0000000000006810	movq	%r12,%rsi
0000000000006813	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000006818	movq	0x000a8531(%rip),%rax
000000000000681f	movb	$0x01,(%r12,%rax)
0000000000006824	jmp	0x00006934
0000000000006829	movq	0x0009fe90(%rip),%rsi
0000000000006830	movq	%r12,%rdi
0000000000006833	movq	%r15,%rdx
0000000000006836	call	*0x0007d89c(%rip)
000000000000683c	testb	%al,%al
000000000000683e	je	0x000068fb
0000000000006844	movq	0x000a8505(%rip),%rax
000000000000684b	cmpb	$0x00,(%r12,%rax)
0000000000006850	jne	0x000068d7
0000000000006856	movq	0x0009fe6b(%rip),%rsi
000000000000685d	movq	%r12,%rdi
0000000000006860	call	*0x0007d872(%rip)
0000000000006866	movq	%rax,%r15
0000000000006869	leaq	0x000a1a80(%rip),%rsi
0000000000006870	movq	%r15,%rdi
0000000000006873	call	*0x000a1a77(%rip)
0000000000006879	testq	%rax,%rax
000000000000687c	movl	$0x00000000,%ebx
0000000000006881	cmovneq	%r15,%rbx
0000000000006885	movq	0x000a84d4(%rip),%rax
000000000000688c	cmpb	$0x00,(%r12,%rax)
0000000000006891	jne	0x000068a8
0000000000006893	movb	$0x01,(%r12,%rax)
0000000000006898	movq	0x0009fe31(%rip),%rsi
000000000000689f	movq	%r14,%rdi
00000000000068a2	call	*0x0007d830(%rip)
00000000000068a8	movq	0x0009fe29(%rip),%rsi
00000000000068af	movq	0x000a1b82(%rip),%rdi
00000000000068b6	leaq	0x000a907b(%rip),%rdx
00000000000068bd	call	*0x0007d815(%rip)
00000000000068c3	movq	0x000a845e(%rip),%rdx
00000000000068ca	movq	%rax,%rdi
00000000000068cd	movq	%r12,%rsi
00000000000068d0	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000068d5	jmp	0x00006936
00000000000068d7	movq	0x0009f75a(%rip),%rsi
00000000000068de	movq	%r15,%rdi
00000000000068e1	call	*0x0007d7f1(%rip)
00000000000068e7	movq	0x000a843a(%rip),%rdx
00000000000068ee	movq	%rax,%rdi
00000000000068f1	movq	%r12,%rsi
00000000000068f4	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000068f9	jmp	0x00006934
00000000000068fb	movq	0x000a841e(%rip),%rax
0000000000006902	movq	(%r12,%rax),%rdx
0000000000006906	movq	0x0009e523(%rip),%rsi
000000000000690d	movq	0x0007d7c4(%rip),%rbx
0000000000006914	movq	%r14,%rdi
0000000000006917	call	*%rbx
0000000000006919	movq	0x000a8400(%rip),%rax
0000000000006920	movq	(%r12,%rax),%rdi
0000000000006924	movq	0x0009fc6d(%rip),%rsi
000000000000692b	leaq	0x000a9006(%rip),%rdx
0000000000006932	call	*%rbx
0000000000006934	xorl	%ebx,%ebx
0000000000006936	movq	%rbx,%rax
0000000000006939	popq	%rbx
000000000000693a	popq	%r12
000000000000693c	popq	%r14
000000000000693e	popq	%r15
0000000000006940	popq	%rbp
0000000000006941	ret
-[PBXGDB_Controller gdbAdaptor]:
0000000000006942	pushq	%rbp
0000000000006943	movq	%rsp,%rbp
0000000000006946	movq	0x000a7f2b(%rip),%rax
000000000000694d	movq	(%rdi,%rax),%rax
0000000000006951	popq	%rbp
0000000000006952	ret
0000000000006953	nop
-[PBXGDB_MIParser parseMILine:]:
0000000000006954	pushq	%rbp
0000000000006955	movq	%rsp,%rbp
0000000000006958	pushq	%r15
000000000000695a	pushq	%r14
000000000000695c	pushq	%r12
000000000000695e	pushq	%rbx
000000000000695f	movq	%rdi,%r12
0000000000006962	movb	$0x01,%bl
0000000000006964	movq	0x0009fd45(%rip),%rsi
000000000000696b	call	*0x0007d767(%rip)
0000000000006971	movzbl	%bl,%eax
0000000000006974	popq	%rbx
0000000000006975	popq	%r12
0000000000006977	popq	%r14
0000000000006979	popq	%r15
000000000000697b	popq	%rbp
000000000000697c	ret
000000000000697d	movq	%rax,%rbx
0000000000006980	cmpl	$0x01,%edx
0000000000006983	jne	0x00006a56
0000000000006989	movq	%rbx,%rdi
000000000000698c	callq	0x0004e61a	; symbol stub for: _objc_begin_catch
0000000000006991	movq	%rax,%rbx
0000000000006994	movq	0x000a8385(%rip),%rax
000000000000699b	movq	(%r12,%rax),%r14
000000000000699f	movq	0x0009e2fa(%rip),%rsi
00000000000069a6	movq	%rbx,%rdi
00000000000069a9	call	*0x0007d729(%rip)
00000000000069af	movq	%rax,%r15
00000000000069b2	movq	0x0009fcff(%rip),%rsi
00000000000069b9	movq	%rbx,%rdi
00000000000069bc	call	*0x0007d716(%rip)
00000000000069c2	movq	0x0009e2cf(%rip),%rsi
00000000000069c9	leaq	_OBJC_CLASS_$_PBXGDB_MIRawCommand(%rip),%rdx
00000000000069d0	movq	%r14,%rdi
00000000000069d3	movq	%r15,%rcx
00000000000069d6	movq	%rax,%r8
00000000000069d9	xorb	%al,%al
00000000000069db	call	*0x0007d6f7(%rip)
00000000000069e1	movq	0x000a8338(%rip),%rax
00000000000069e8	movq	(%r12,%rax),%rbx
00000000000069ec	movq	0x0009f3dd(%rip),%rsi
00000000000069f3	movq	%r12,%rdi
00000000000069f6	call	*0x0007d6dc(%rip)
00000000000069fc	movq	0x0009e0fd(%rip),%rsi
0000000000006a03	movq	%rbx,%rdi
0000000000006a06	movq	%rax,%rdx
0000000000006a09	call	*0x0007d6c9(%rip)
0000000000006a0f	movq	0x000a82ea(%rip),%rax
0000000000006a16	movq	(%r12,%rax),%rdi
0000000000006a1a	movq	0x0009e097(%rip),%rsi
0000000000006a21	call	*0x0007d6b1(%rip)
0000000000006a27	movq	0x000a82f2(%rip),%rcx
0000000000006a2e	movq	(%r12,%rcx),%rdx
0000000000006a32	movq	0x0009e3f7(%rip),%rsi
0000000000006a39	movq	%rax,%rdi
0000000000006a3c	call	*0x0007d696(%rip)
0000000000006a42	callq	0x0004e620	; symbol stub for: _objc_end_catch
0000000000006a47	xorb	%bl,%bl
0000000000006a49	jmp	0x00006971
0000000000006a4e	movq	%rax,%rbx
0000000000006a51	callq	0x0004e620	; symbol stub for: _objc_end_catch
0000000000006a56	movq	%rbx,%rdi
0000000000006a59	callq	0x0004e66e	; symbol stub for: __Unwind_Resume
0000000000006a5e	nop
0000000000006a5f	nop
-[PBXGDB_MIParser _parseMILine:]:
0000000000006a60	pushq	%rbp
0000000000006a61	movq	%rsp,%rbp
0000000000006a64	pushq	%r15
0000000000006a66	pushq	%r14
0000000000006a68	pushq	%r13
0000000000006a6a	pushq	%r12
0000000000006a6c	pushq	%rbx
0000000000006a6d	subq	$0x78,%rsp
0000000000006a71	movq	%rdx,%rbx
0000000000006a74	movq	%rdi,%r15
0000000000006a77	movq	0x000a8282(%rip),%rax
0000000000006a7e	movq	(%r15,%rax),%rdi
0000000000006a82	movq	0x0009e02f(%rip),%rsi
0000000000006a89	movq	0x0007d648(%rip),%r13
0000000000006a90	call	*%r13
0000000000006a93	movq	%rax,%r14
0000000000006a96	movq	%r14,0xa8(%rbp)
0000000000006a9a	movq	0x0009fbbf(%rip),%rsi
0000000000006aa1	movq	%r15,%rdi
0000000000006aa4	movq	%rbx,%rdx
0000000000006aa7	call	*%r13
0000000000006aaa	movq	%r15,%rdi
0000000000006aad	movq	0x0009fb04(%rip),%rsi
0000000000006ab4	call	*%r13
0000000000006ab7	movw	%ax,%bx
0000000000006aba	movq	%r14,%rdi
0000000000006abd	movq	0x0009fba4(%rip),%rsi
0000000000006ac4	call	*%r13
0000000000006ac7	testb	%al,%al
0000000000006ac9	movq	%r14,%r12
0000000000006acc	je	0x00006b55
0000000000006ad2	movq	0x000a824f(%rip),%rax
0000000000006ad9	movq	(%r15,%rax),%r14
0000000000006add	movq	%r15,%rdi
0000000000006ae0	movq	0x0009fb09(%rip),%rsi
0000000000006ae7	call	*%r13
0000000000006aea	movq	%rax,0xb0(%rbp)
0000000000006aee	movq	$0x00000001,0xb8(%rbp)
0000000000006af6	movq	0xb0(%rbp),%rax
0000000000006afa	movq	0xb8(%rbp),%rcx
0000000000006afe	movq	%rcx,0x08(%rsp)
0000000000006b03	movq	%rax,(%rsp)
0000000000006b07	movq	%r14,%rdi
0000000000006b0a	movq	0x0009e03f(%rip),%rsi
0000000000006b11	leaq	0xd0(%rbp),%rdx
0000000000006b15	leaq	0xc8(%rbp),%rcx
0000000000006b19	leaq	0xc0(%rbp),%r8
0000000000006b1d	call	*%r13
0000000000006b20	movq	0xd0(%rbp),%rdx
0000000000006b24	movq	0xc8(%rbp),%rcx
0000000000006b28	subq	%rdx,%rcx
0000000000006b2b	movq	%r15,%rdi
0000000000006b2e	movq	0x0009facb(%rip),%rsi
0000000000006b35	call	*%r13
0000000000006b38	movq	%r15,%rdi
0000000000006b3b	movq	0x0009fac6(%rip),%rsi
0000000000006b42	call	*%r13
0000000000006b45	movq	%r12,%rdi
0000000000006b48	movq	0x0009fb21(%rip),%rsi
0000000000006b4f	movq	%rax,%rdx
0000000000006b52	call	*%r13
0000000000006b55	movq	0x000a81bc(%rip),%rax
0000000000006b5c	movq	(%r15,%rax),%rdi
0000000000006b60	movzwl	%bx,%edx
0000000000006b63	movq	0x0009fa56(%rip),%rsi
0000000000006b6a	call	*0x0007d568(%rip)
0000000000006b70	testb	%al,%al
0000000000006b72	movq	0x000a81cf(%rip),%r12
0000000000006b79	movq	%r12,%r14
0000000000006b7c	je	0x00006caf
0000000000006b82	movq	%r15,%rdi
0000000000006b85	movq	0x0009fa64(%rip),%rsi
0000000000006b8c	call	*0x0007d546(%rip)
0000000000006b92	movq	%rax,0xa0(%rbp)
0000000000006b96	movq	$0x00000000,(%r15,%r14)
0000000000006b9e	movq	0x0009fa1b(%rip),%r12
0000000000006ba5	movq	%r15,%r13
0000000000006ba8	movq	0x000a8169(%rip),%r15
0000000000006baf	movq	0x0007d522(%rip),%r14
0000000000006bb6	movq	0x00(%r13,%r15),%rbx
0000000000006bbb	movq	%r13,%rdi
0000000000006bbe	movq	0x0009fa1b(%rip),%rsi
0000000000006bc5	call	*%r14
0000000000006bc8	movzwl	%ax,%edx
0000000000006bcb	movq	%rbx,%rdi
0000000000006bce	movq	%r12,%rsi
0000000000006bd1	call	*%r14
0000000000006bd4	testb	%al,%al
0000000000006bd6	jne	0x00006bb6
0000000000006bd8	movq	%r13,%rdi
0000000000006bdb	movq	0x0009fa0e(%rip),%rsi
0000000000006be2	call	*%r14
0000000000006be5	movq	0xa0(%rbp),%rcx
0000000000006be9	subq	%rcx,%rax
0000000000006bec	movq	%r13,%rdi
0000000000006bef	movq	0x0009fa0a(%rip),%rsi
0000000000006bf6	movq	%rcx,%rdx
0000000000006bf9	movq	%rcx,%r12
0000000000006bfc	movq	%rax,%rcx
0000000000006bff	call	*%r14
0000000000006c02	movq	%r13,%rdi
0000000000006c05	movq	0x0009f9fc(%rip),%rsi
0000000000006c0c	call	*%r14
0000000000006c0f	movq	%rax,%rdi
0000000000006c12	movq	0x0009e6c7(%rip),%rsi
0000000000006c19	call	*%r14
0000000000006c1c	movq	0x000a8125(%rip),%rbx
0000000000006c23	movq	%rax,0x00(%r13,%rbx)
0000000000006c28	movq	%r13,%rdi
0000000000006c2b	movq	0x0009fa46(%rip),%rsi
0000000000006c32	call	*%r14
0000000000006c35	testq	%rax,%rax
0000000000006c38	movq	%r13,%r15
0000000000006c3b	je	0x00006c9c
0000000000006c3d	movq	%r15,%rdi
0000000000006c40	movq	0x0009fa31(%rip),%rsi
0000000000006c47	call	*0x0007d48b(%rip)
0000000000006c4d	cmpq	(%r15,%rbx),%rax
0000000000006c51	jne	0x00006c73
0000000000006c53	movq	%r15,%rdi
0000000000006c56	movq	0x0009f6db(%rip),%rsi
0000000000006c5d	xorl	%edx,%edx
0000000000006c5f	call	*0x0007d473(%rip)
0000000000006c65	movq	0x000a80ec(%rip),%rax
0000000000006c6c	movb	$0x00,(%r15,%rax)
0000000000006c71	jmp	0x00006c9c
0000000000006c73	movq	0x000a80de(%rip),%rax
0000000000006c7a	cmpb	$0x00,(%r15,%rax)
0000000000006c7f	je	0x00006c9c
0000000000006c81	movq	%r15,%rdi
0000000000006c84	movq	0x0009f91d(%rip),%rsi
0000000000006c8b	movq	%r12,%rdx
0000000000006c8e	call	*0x0007d444(%rip)
0000000000006c94	movq	$0x00000000,(%r15,%rbx)
0000000000006c9c	movq	%r15,%rdi
0000000000006c9f	movq	0x0009f912(%rip),%rsi
0000000000006ca6	call	*0x0007d42c(%rip)
0000000000006cac	movw	%ax,%bx
0000000000006caf	movq	0x000a80a2(%rip),%rax
0000000000006cb6	cmpb	$0x00,(%r15,%rax)
0000000000006cbb	movq	0x0009f91e(%rip),%r12
0000000000006cc2	jne	0x00006cda
0000000000006cc4	cmpw	$0x25,%bx
0000000000006cc8	movq	0x000a8041(%rip),%r13
0000000000006ccf	jg	0x00006cef
0000000000006cd1	testw	%bx,%bx
0000000000006cd4	je	0x00007a1b
0000000000006cda	movq	%r15,%rdi
0000000000006cdd	movq	0x0009f99c(%rip),%rsi
0000000000006ce4	call	*0x0007d3ee(%rip)
0000000000006cea	jmp	0x00007a1b
0000000000006cef	cmpw	$0x7d,%bx
0000000000006cf3	jg	0x0000794c
0000000000006cf9	cmpw	$0x5d,%bx
0000000000006cfd	jg	0x00006d70
0000000000006cff	cmpw	$0x3c,%bx
0000000000006d03	jg	0x00006d21
0000000000006d05	addl	$0xda,%ebx
0000000000006d08	cmpw	$0x05,%bx
0000000000006d0c	ja	0x00006cda
0000000000006d0e	movzwl	%bx,%eax
0000000000006d11	leaq	0x00000d74(%rip),%rcx
0000000000006d18	movslq	(%rcx,%rax,4),%rax
0000000000006d1c	addq	%rcx,%rax
0000000000006d1f	jmp	*%rax
0000000000006d21	cmpw	$0x3d,%bx
0000000000006d25	je	0x000072a4
0000000000006d2b	cmpw	$0x40,%bx
0000000000006d2f	jne	0x00006cda
0000000000006d31	movq	%r15,%rdi
0000000000006d34	movq	%r12,%rsi
0000000000006d37	call	*0x0007d39b(%rip)
0000000000006d3d	cmpw	$0x22,%ax
0000000000006d41	jne	0x00007a1b
0000000000006d47	movq	%r15,%rdi
0000000000006d4a	movq	0x0009f8cf(%rip),%rsi
0000000000006d51	call	*0x0007d381(%rip)
0000000000006d57	testq	%rax,%rax
0000000000006d5a	je	0x00007a1b
0000000000006d60	movq	0xa8(%rbp),%rdi
0000000000006d64	movq	0x0009f93d(%rip),%rsi
0000000000006d6b	jmp	0x00007997
0000000000006d70	cmpw	$0x5e,%bx
0000000000006d74	jne	0x00006cda
0000000000006d7a	movq	(%r15,%r13),%rdi
0000000000006d7e	movq	%r13,%r14
0000000000006d81	movq	0x000aff80(%rip),%r13
0000000000006d88	movq	0x0009f811(%rip),%rsi
0000000000006d8f	movq	0x0007d342(%rip),%rbx
0000000000006d96	call	*%rbx
0000000000006d98	movq	(%r15,%r14),%rdi
0000000000006d9c	movq	0x0009e0b5(%rip),%rsi
0000000000006da3	movq	%r13,%rdx
0000000000006da6	call	*%rbx
0000000000006da8	movq	%r15,%rdi
0000000000006dab	movq	%r12,%rsi
0000000000006dae	call	*%rbx
0000000000006db0	movw	%eax,%r14d
0000000000006db4	cmpw	$0x71,%r14d
0000000000006db9	jg	0x00006e1a
0000000000006dbb	cmpw	$0x63,%r14d
0000000000006dc0	je	0x00006f66
0000000000006dc6	cmpw	$0x64,%r14d
0000000000006dcb	jne	0x00007019
0000000000006dd1	movq	%r15,%rdi
0000000000006dd4	movq	%r12,%rsi
0000000000006dd7	call	*0x0007d2fb(%rip)
0000000000006ddd	cmpw	$0x6f,%ax
0000000000006de1	jne	0x0000706e
0000000000006de7	movq	%r15,%rdi
0000000000006dea	movq	%r12,%rsi
0000000000006ded	call	*0x0007d2e5(%rip)
0000000000006df3	cmpw	$0x6e,%ax
0000000000006df7	jne	0x0000706e
0000000000006dfd	movq	%r15,%rdi
0000000000006e00	movq	%r12,%rsi
0000000000006e03	call	*0x0007d2cf(%rip)
0000000000006e09	cmpw	$0x65,%ax
0000000000006e0d	cmoveq	0x000afefb(%rip),%r13
0000000000006e15	jmp	0x0000706e
0000000000006e1a	cmpw	$0x72,%r14d
0000000000006e1f	jne	0x00006eb7
0000000000006e25	movq	%r15,%rdi
0000000000006e28	movq	%r12,%rsi
0000000000006e2b	call	*0x0007d2a7(%rip)
0000000000006e31	cmpw	$0x75,%ax
0000000000006e35	jne	0x0000706e
0000000000006e3b	movq	%r15,%rdi
0000000000006e3e	movq	%r12,%rsi
0000000000006e41	call	*0x0007d291(%rip)
0000000000006e47	cmpw	$0x6e,%ax
0000000000006e4b	jne	0x00006ea1
0000000000006e4d	movq	%r15,%rdi
0000000000006e50	movq	%r12,%rsi
0000000000006e53	call	*0x0007d27f(%rip)
0000000000006e59	cmpw	$0x6e,%ax
0000000000006e5d	jne	0x00006ea1
0000000000006e5f	movq	%r15,%rdi
0000000000006e62	movq	%r12,%rsi
0000000000006e65	call	*0x0007d26d(%rip)
0000000000006e6b	cmpw	$0x69,%ax
0000000000006e6f	jne	0x00006ea1
0000000000006e71	movq	%r15,%rdi
0000000000006e74	movq	%r12,%rsi
0000000000006e77	call	*0x0007d25b(%rip)
0000000000006e7d	cmpw	$0x6e,%ax
0000000000006e81	jne	0x00006ea1
0000000000006e83	movq	%r15,%rdi
0000000000006e86	movq	%r12,%rsi
0000000000006e89	call	*0x0007d249(%rip)
0000000000006e8f	cmpw	$0x67,%ax
0000000000006e93	jne	0x00006ea1
0000000000006e95	movq	0x000afe7c(%rip),%r13
0000000000006e9c	jmp	0x0000706e
0000000000006ea1	cmpw	$0x63,%r14d
0000000000006ea6	je	0x00006f66
0000000000006eac	cmpw	$0x65,%r14d
0000000000006eb1	je	0x00007020
0000000000006eb7	cmpw	$0x73,%r14d
0000000000006ebc	jne	0x0000706e
0000000000006ec2	movq	%r15,%rdi
0000000000006ec5	movq	%r12,%rsi
0000000000006ec8	call	*0x0007d20a(%rip)
0000000000006ece	cmpw	$0x74,%ax
0000000000006ed2	jne	0x0000706e
0000000000006ed8	movq	%r15,%rdi
0000000000006edb	movq	%r12,%rsi
0000000000006ede	call	*0x0007d1f4(%rip)
0000000000006ee4	cmpw	$0x65,%ax
0000000000006ee8	jne	0x00006f50
0000000000006eea	movq	%r15,%rdi
0000000000006eed	movq	%r12,%rsi
0000000000006ef0	call	*0x0007d1e2(%rip)
0000000000006ef6	cmpw	$0x70,%ax
0000000000006efa	jne	0x00006f50
0000000000006efc	movq	%r15,%rdi
0000000000006eff	movq	%r12,%rsi
0000000000006f02	call	*0x0007d1d0(%rip)
0000000000006f08	cmpw	$0x70,%ax
0000000000006f0c	jne	0x00006f50
0000000000006f0e	movq	%r15,%rdi
0000000000006f11	movq	%r12,%rsi
0000000000006f14	call	*0x0007d1be(%rip)
0000000000006f1a	cmpw	$0x69,%ax
0000000000006f1e	jne	0x00006f50
0000000000006f20	movq	%r15,%rdi
0000000000006f23	movq	%r12,%rsi
0000000000006f26	call	*0x0007d1ac(%rip)
0000000000006f2c	cmpw	$0x6e,%ax
0000000000006f30	jne	0x00006f50
0000000000006f32	movq	%r15,%rdi
0000000000006f35	movq	%r12,%rsi
0000000000006f38	call	*0x0007d19a(%rip)
0000000000006f3e	cmpw	$0x67,%ax
0000000000006f42	jne	0x00006f50
0000000000006f44	movq	0x000afdd5(%rip),%r13
0000000000006f4b	jmp	0x0000706e
0000000000006f50	cmpw	$0x65,%r14d
0000000000006f55	je	0x00007020
0000000000006f5b	cmpw	$0x63,%r14d
0000000000006f60	jne	0x0000706e
0000000000006f66	movq	%r15,%rdi
0000000000006f69	movq	%r12,%rsi
0000000000006f6c	call	*0x0007d166(%rip)
0000000000006f72	cmpw	$0x6f,%ax
0000000000006f76	jne	0x0000706e
0000000000006f7c	movq	%r15,%rdi
0000000000006f7f	movq	%r12,%rsi
0000000000006f82	call	*0x0007d150(%rip)
0000000000006f88	cmpw	$0x6e,%ax
0000000000006f8c	jne	0x00007019
0000000000006f92	movq	%r15,%rdi
0000000000006f95	movq	%r12,%rsi
0000000000006f98	call	*0x0007d13a(%rip)
0000000000006f9e	cmpw	$0x74,%ax
0000000000006fa2	jne	0x00007019
0000000000006fa4	movq	%r15,%rdi
0000000000006fa7	movq	%r12,%rsi
0000000000006faa	call	*0x0007d128(%rip)
0000000000006fb0	cmpw	$0x69,%ax
0000000000006fb4	jne	0x00007019
0000000000006fb6	movq	%r15,%rdi
0000000000006fb9	movq	%r12,%rsi
0000000000006fbc	call	*0x0007d116(%rip)
0000000000006fc2	cmpw	$0x6e,%ax
0000000000006fc6	jne	0x00007019
0000000000006fc8	movq	%r15,%rdi
0000000000006fcb	movq	%r12,%rsi
0000000000006fce	call	*0x0007d104(%rip)
0000000000006fd4	cmpw	$0x75,%ax
0000000000006fd8	jne	0x00007019
0000000000006fda	movq	%r15,%rdi
0000000000006fdd	movq	%r12,%rsi
0000000000006fe0	call	*0x0007d0f2(%rip)
0000000000006fe6	cmpw	$0x69,%ax
0000000000006fea	jne	0x00007019
0000000000006fec	movq	%r15,%rdi
0000000000006fef	movq	%r12,%rsi
0000000000006ff2	call	*0x0007d0e0(%rip)
0000000000006ff8	cmpw	$0x6e,%ax
0000000000006ffc	jne	0x00007019
0000000000006ffe	movq	%r15,%rdi
0000000000007001	movq	%r12,%rsi
0000000000007004	call	*0x0007d0ce(%rip)
000000000000700a	cmpw	$0x67,%ax
000000000000700e	jne	0x00007019
0000000000007010	movq	0x000afd11(%rip),%r13
0000000000007017	jmp	0x0000706e
0000000000007019	cmpw	$0x65,%r14d
000000000000701e	jne	0x0000706e
0000000000007020	movq	%r15,%rdi
0000000000007023	movq	%r12,%rsi
0000000000007026	call	*0x0007d0ac(%rip)
000000000000702c	cmpw	$0x72,%ax
0000000000007030	jne	0x0000706e
0000000000007032	movq	%r15,%rdi
0000000000007035	movq	%r12,%rsi
0000000000007038	call	*0x0007d09a(%rip)
000000000000703e	cmpw	$0x72,%ax
0000000000007042	jne	0x0000706e
0000000000007044	movq	%r15,%rdi
0000000000007047	movq	%r12,%rsi
000000000000704a	call	*0x0007d088(%rip)
0000000000007050	cmpw	$0x6f,%ax
0000000000007054	jne	0x0000706e
0000000000007056	movq	%r15,%rdi
0000000000007059	movq	%r12,%rsi
000000000000705c	call	*0x0007d076(%rip)
0000000000007062	cmpw	$0x72,%ax
0000000000007066	cmoveq	0x000afcc2(%rip),%r13
000000000000706e	movq	0x000afc93(%rip),%rdx
0000000000007075	movq	%r13,%rdi
0000000000007078	leaq	0x000a12e1(%rip),%rsi
000000000000707f	call	*0x000a12db(%rip)
0000000000007085	testb	%al,%al
0000000000007087	jne	0x000070ff
0000000000007089	movq	0x000a7c80(%rip),%rax
0000000000007090	movq	(%r15,%rax),%rdi
0000000000007094	movq	0x0009ddbd(%rip),%rsi
000000000000709b	movq	%r13,%rdx
000000000000709e	movq	%rax,%r14
00000000000070a1	movq	0x0007d030(%rip),%rbx
00000000000070a8	call	*%rbx
00000000000070aa	movq	%r15,%rdi
00000000000070ad	movq	%r12,%rsi
00000000000070b0	call	*%rbx
00000000000070b2	cmpw	$0x2c,%ax
00000000000070b6	jne	0x000070cc
00000000000070b8	movq	(%r15,%r14),%rdx
00000000000070bc	movq	%r15,%rdi
00000000000070bf	movq	0x0009f572(%rip),%rsi
00000000000070c6	call	*0x0007d00c(%rip)
00000000000070cc	movq	0x000a7c7d(%rip),%rax
00000000000070d3	cmpb	$0x00,(%r15,%rax)
00000000000070d8	jne	0x00007a1b
00000000000070de	movq	(%r15,%r14),%rdx
00000000000070e2	movq	0x000a7c17(%rip),%rax
00000000000070e9	movq	(%r15,%rax),%rdi
00000000000070ed	movq	0x0009f594(%rip),%rsi
00000000000070f4	call	*0x0007cfde(%rip)
00000000000070fa	jmp	0x00007a1b
00000000000070ff	movq	%r15,%rdi
0000000000007102	movq	0x0009f4df(%rip),%rsi
0000000000007109	leaq	0x000ab768(%rip),%rdx
0000000000007110	call	*0x0007cfc2(%rip)
0000000000007116	jmp	0x00007a1b
000000000000711b	movq	0x000afc16(%rip),%r14
0000000000007122	movq	%r15,%rdi
0000000000007125	movq	%r12,%rsi
0000000000007128	call	*0x0007cfaa(%rip)
000000000000712e	cmpw	$0x73,%ax
0000000000007132	jne	0x0000720c
0000000000007138	movq	%r15,%rdi
000000000000713b	movq	%r12,%rsi
000000000000713e	call	*0x0007cf94(%rip)
0000000000007144	cmpw	$0x74,%ax
0000000000007148	jne	0x0000720c
000000000000714e	movq	%r15,%rdi
0000000000007151	movq	%r12,%rsi
0000000000007154	call	*0x0007cf7e(%rip)
000000000000715a	cmpw	$0x61,%ax
000000000000715e	je	0x000071be
0000000000007160	cmpw	$0x6f,%ax
0000000000007164	jne	0x0000720c
000000000000716a	movq	%r15,%rdi
000000000000716d	movq	%r12,%rsi
0000000000007170	call	*0x0007cf62(%rip)
0000000000007176	cmpw	$0x70,%ax
000000000000717a	jne	0x0000720c
0000000000007180	movq	%r15,%rdi
0000000000007183	movq	%r12,%rsi
0000000000007186	call	*0x0007cf4c(%rip)
000000000000718c	cmpw	$0x70,%ax
0000000000007190	jne	0x0000720c
0000000000007192	movq	%r15,%rdi
0000000000007195	movq	%r12,%rsi
0000000000007198	call	*0x0007cf3a(%rip)
000000000000719e	cmpw	$0x65,%ax
00000000000071a2	jne	0x0000720c
00000000000071a4	movq	%r15,%rdi
00000000000071a7	movq	%r12,%rsi
00000000000071aa	call	*0x0007cf28(%rip)
00000000000071b0	cmpw	$0x64,%ax
00000000000071b4	cmoveq	0x000afb84(%rip),%r14
00000000000071bc	jmp	0x0000720c
00000000000071be	movq	%r15,%rdi
00000000000071c1	movq	%r12,%rsi
00000000000071c4	call	*0x0007cf0e(%rip)
00000000000071ca	cmpw	$0x72,%ax
00000000000071ce	jne	0x0000720c
00000000000071d0	movq	%r15,%rdi
00000000000071d3	movq	%r12,%rsi
00000000000071d6	call	*0x0007cefc(%rip)
00000000000071dc	cmpw	$0x74,%ax
00000000000071e0	jne	0x0000720c
00000000000071e2	movq	%r15,%rdi
00000000000071e5	movq	%r12,%rsi
00000000000071e8	call	*0x0007ceea(%rip)
00000000000071ee	cmpw	$0x65,%ax
00000000000071f2	jne	0x0000720c
00000000000071f4	movq	%r15,%rdi
00000000000071f7	movq	%r12,%rsi
00000000000071fa	call	*0x0007ced8(%rip)
0000000000007200	cmpw	$0x64,%ax
0000000000007204	cmoveq	0x000afb3c(%rip),%r14
000000000000720c	movq	0x000afb25(%rip),%rdx
0000000000007213	movq	%r14,%rdi
0000000000007216	leaq	0x000a1143(%rip),%rsi
000000000000721d	call	*0x000a113d(%rip)
0000000000007223	testb	%al,%al
0000000000007225	jne	0x00006cda
000000000000722b	movq	(%r15,%r13),%rdi
000000000000722f	movq	0x0009f36a(%rip),%rsi
0000000000007236	movq	0x0007ce9b(%rip),%rbx
000000000000723d	call	*%rbx
000000000000723f	movq	(%r15,%r13),%rdi
0000000000007243	movq	0x0009dc0e(%rip),%rsi
000000000000724a	movq	%r14,%rdx
000000000000724d	call	*%rbx
000000000000724f	movq	%r15,%rdi
0000000000007252	movq	%r12,%rsi
0000000000007255	call	*%rbx
0000000000007257	cmpw	$0x2c,%ax
000000000000725b	jne	0x00007271
000000000000725d	movq	(%r15,%r13),%rdx
0000000000007261	movq	%r15,%rdi
0000000000007264	movq	0x0009f3cd(%rip),%rsi
000000000000726b	call	*0x0007ce67(%rip)
0000000000007271	movq	0x000a7ad8(%rip),%rax
0000000000007278	cmpb	$0x00,(%r15,%rax)
000000000000727d	jne	0x00007a1b
0000000000007283	movq	(%r15,%r13),%rdx
0000000000007287	movq	0x000a7a72(%rip),%rax
000000000000728e	movq	(%r15,%rax),%rdi
0000000000007292	movq	0x0009f3f7(%rip),%rsi
0000000000007299	call	*0x0007ce39(%rip)
000000000000729f	jmp	0x00007a1b
00000000000072a4	movq	%r15,%rdi
00000000000072a7	movq	%r12,%rsi
00000000000072aa	call	*0x0007ce28(%rip)
00000000000072b0	movw	%eax,%r14d
00000000000072b4	movq	0x000a7a6d(%rip),%rax
00000000000072bb	movq	(%r15,%rax),%rbx
00000000000072bf	movq	0x000a7a7a(%rip),%rax
00000000000072c6	movq	(%r15,%rax),%rdx
00000000000072ca	cmpq	$0x02,%rdx
00000000000072ce	jb	0x000072e6
00000000000072d0	decq	%rdx
00000000000072d3	movq	%rbx,%rdi
00000000000072d6	movq	0x0009d84b(%rip),%rsi
00000000000072dd	call	*0x0007cdf5(%rip)
00000000000072e3	movq	%rax,%rbx
00000000000072e6	movq	%rbx,%rdi
00000000000072e9	movq	0x0009dff8(%rip),%rsi
00000000000072f0	leaq	0x000ab5a1(%rip),%rdx
00000000000072f7	call	*0x0007cddb(%rip)
00000000000072fd	cmpb	$0x01,%al
00000000000072ff	jne	0x00007338
0000000000007301	movq	%rbx,%rdi
0000000000007304	movq	0x0009dfcd(%rip),%rsi
000000000000730b	leaq	0x000ab5a6(%rip),%rdx
0000000000007312	call	*0x0007cdc0(%rip)
0000000000007318	movq	0x000a7a21(%rip),%rdx
000000000000731f	movq	(%r15,%rdx),%rcx
0000000000007323	leaq	0xfe(%rcx,%rax),%rax
0000000000007328	movq	%rax,(%r15,%rdx)
000000000000732c	leaq	0x000aae45(%rip),%rbx
0000000000007333	jmp	0x000078d0
0000000000007338	cmpw	$0x72,%r14d
000000000000733d	jne	0x00007499
0000000000007343	movq	%r15,%rdi
0000000000007346	movq	%r12,%rsi
0000000000007349	call	*0x0007cd89(%rip)
000000000000734f	cmpw	$0x65,%ax
0000000000007353	jne	0x00007499
0000000000007359	movq	%r15,%rdi
000000000000735c	movq	%r12,%rsi
000000000000735f	call	*0x0007cd73(%rip)
0000000000007365	cmpw	$0x72,%ax
0000000000007369	je	0x00007461
000000000000736f	cmpw	$0x61,%ax
0000000000007373	jne	0x00007680
0000000000007379	movq	%r15,%rdi
000000000000737c	movq	%r12,%rsi
000000000000737f	call	*0x0007cd53(%rip)
0000000000007385	cmpw	$0x64,%ax
0000000000007389	jne	0x00007680
000000000000738f	movq	%r15,%rdi
0000000000007392	movq	%r12,%rsi
0000000000007395	call	*0x0007cd3d(%rip)
000000000000739b	cmpw	$0x2d,%ax
000000000000739f	jne	0x00007680
00000000000073a5	movq	%r15,%rdi
00000000000073a8	movq	%r12,%rsi
00000000000073ab	call	*0x0007cd27(%rip)
00000000000073b1	cmpw	$0x6f,%ax
00000000000073b5	jne	0x00007680
00000000000073bb	movq	%r15,%rdi
00000000000073be	movq	%r12,%rsi
00000000000073c1	call	*0x0007cd11(%rip)
00000000000073c7	cmpw	$0x6e,%ax
00000000000073cb	jne	0x00007680
00000000000073d1	movq	%r15,%rdi
00000000000073d4	movq	%r12,%rsi
00000000000073d7	call	*0x0007ccfb(%rip)
00000000000073dd	cmpw	$0x65,%ax
00000000000073e1	jne	0x00007680
00000000000073e7	movq	%r15,%rdi
00000000000073ea	movq	%r12,%rsi
00000000000073ed	call	*0x0007cce5(%rip)
00000000000073f3	cmpw	$0x2d,%ax
00000000000073f7	jne	0x00007680
00000000000073fd	movq	%r15,%rdi
0000000000007400	movq	%r12,%rsi
0000000000007403	call	*0x0007cccf(%rip)
0000000000007409	cmpw	$0x6c,%ax
000000000000740d	jne	0x00007680
0000000000007413	movq	%r15,%rdi
0000000000007416	movq	%r12,%rsi
0000000000007419	call	*0x0007ccb9(%rip)
000000000000741f	cmpw	$0x69,%ax
0000000000007423	jne	0x00007680
0000000000007429	movq	%r15,%rdi
000000000000742c	movq	%r12,%rsi
000000000000742f	call	*0x0007cca3(%rip)
0000000000007435	cmpw	$0x6e,%ax
0000000000007439	jne	0x00007680
000000000000743f	movq	%r15,%rdi
0000000000007442	movq	%r12,%rsi
0000000000007445	call	*0x0007cc8d(%rip)
000000000000744b	cmpw	$0x65,%ax
000000000000744f	leaq	0x000aaca2(%rip),%rbx
0000000000007456	jne	0x00007680
000000000000745c	jmp	0x000078d0
0000000000007461	movq	%r15,%rdi
0000000000007464	movq	%r12,%rsi
0000000000007467	call	*0x0007cc6b(%rip)
000000000000746d	cmpw	$0x75,%ax
0000000000007471	jne	0x00007680
0000000000007477	movq	%r15,%rdi
000000000000747a	movq	%r12,%rsi
000000000000747d	call	*0x0007cc55(%rip)
0000000000007483	cmpw	$0x6e,%ax
0000000000007487	leaq	0x000aacaa(%rip),%rbx
000000000000748e	jne	0x00007680
0000000000007494	jmp	0x000078d0
0000000000007499	movq	%rbx,%rdi
000000000000749c	movq	0x0009de45(%rip),%rsi
00000000000074a3	leaq	0x000ab42e(%rip),%rdx
00000000000074aa	call	*0x0007cc28(%rip)
00000000000074b0	cmpb	$0x01,%al
00000000000074b2	jne	0x000074eb
00000000000074b4	movq	%rbx,%rdi
00000000000074b7	movq	0x0009de1a(%rip),%rsi
00000000000074be	leaq	0x000ab3f3(%rip),%rdx
00000000000074c5	call	*0x0007cc0d(%rip)
00000000000074cb	movq	0x000a786e(%rip),%rdx
00000000000074d2	movq	(%r15,%rdx),%rcx
00000000000074d6	leaq	0xfe(%rcx,%rax),%rax
00000000000074db	movq	%rax,(%r15,%rdx)
00000000000074df	leaq	0x000a9d72(%rip),%rbx
00000000000074e6	jmp	0x000078d0
00000000000074eb	cmpw	$0x62,%r14d
00000000000074f0	je	0x0000768f
00000000000074f6	cmpw	$0x73,%r14d
00000000000074fb	jne	0x00007680
0000000000007501	movq	%r15,%rdi
0000000000007504	movq	%r12,%rsi
0000000000007507	call	*0x0007cbcb(%rip)
000000000000750d	cmpw	$0x68,%ax
0000000000007511	jne	0x00007680
0000000000007517	movq	%r15,%rdi
000000000000751a	movq	%r12,%rsi
000000000000751d	call	*0x0007cbb5(%rip)
0000000000007523	cmpw	$0x6c,%ax
0000000000007527	jne	0x00007680
000000000000752d	movq	%r15,%rdi
0000000000007530	movq	%r12,%rsi
0000000000007533	call	*0x0007cb9f(%rip)
0000000000007539	cmpw	$0x69,%ax
000000000000753d	jne	0x00007680
0000000000007543	movq	%r15,%rdi
0000000000007546	movq	%r12,%rsi
0000000000007549	call	*0x0007cb89(%rip)
000000000000754f	cmpw	$0x62,%ax
0000000000007553	jne	0x00007680
0000000000007559	movq	%r15,%rdi
000000000000755c	movq	%r12,%rsi
000000000000755f	call	*0x0007cb73(%rip)
0000000000007565	cmpw	$0x73,%ax
0000000000007569	jne	0x00007680
000000000000756f	movq	%r15,%rdi
0000000000007572	movq	%r12,%rsi
0000000000007575	call	*0x0007cb5d(%rip)
000000000000757b	cmpw	$0x2d,%ax
000000000000757f	jne	0x00007680
0000000000007585	movq	%r15,%rdi
0000000000007588	movq	%r12,%rsi
000000000000758b	call	*0x0007cb47(%rip)
0000000000007591	cmpw	$0x61,%ax
0000000000007595	je	0x0000762d
000000000000759b	cmpw	$0x75,%ax
000000000000759f	jne	0x00007680
00000000000075a5	movq	%r15,%rdi
00000000000075a8	movq	%r12,%rsi
00000000000075ab	call	*0x0007cb27(%rip)
00000000000075b1	cmpw	$0x70,%ax
00000000000075b5	jne	0x00007680
00000000000075bb	movq	%r15,%rdi
00000000000075be	movq	%r12,%rsi
00000000000075c1	call	*0x0007cb11(%rip)
00000000000075c7	cmpw	$0x64,%ax
00000000000075cb	jne	0x00007680
00000000000075d1	movq	%r15,%rdi
00000000000075d4	movq	%r12,%rsi
00000000000075d7	call	*0x0007cafb(%rip)
00000000000075dd	cmpw	$0x61,%ax
00000000000075e1	jne	0x00007680
00000000000075e7	movq	%r15,%rdi
00000000000075ea	movq	%r12,%rsi
00000000000075ed	call	*0x0007cae5(%rip)
00000000000075f3	cmpw	$0x74,%ax
00000000000075f7	jne	0x00007680
00000000000075fd	movq	%r15,%rdi
0000000000007600	movq	%r12,%rsi
0000000000007603	call	*0x0007cacf(%rip)
0000000000007609	cmpw	$0x65,%ax
000000000000760d	jne	0x00007680
000000000000760f	movq	%r15,%rdi
0000000000007612	movq	%r12,%rsi
0000000000007615	call	*0x0007cabd(%rip)
000000000000761b	cmpw	$0x64,%ax
000000000000761f	leaq	0x000ab2d2(%rip),%rbx
0000000000007626	jne	0x00007680
0000000000007628	jmp	0x000078d0
000000000000762d	movq	%r15,%rdi
0000000000007630	movq	%r12,%rsi
0000000000007633	call	*0x0007ca9f(%rip)
0000000000007639	cmpw	$0x64,%ax
000000000000763d	jne	0x00007680
000000000000763f	movq	%r15,%rdi
0000000000007642	movq	%r12,%rsi
0000000000007645	call	*0x0007ca8d(%rip)
000000000000764b	cmpw	$0x64,%ax
000000000000764f	jne	0x00007680
0000000000007651	movq	%r15,%rdi
0000000000007654	movq	%r12,%rsi
0000000000007657	call	*0x0007ca7b(%rip)
000000000000765d	cmpw	$0x65,%ax
0000000000007661	jne	0x00007680
0000000000007663	movq	%r15,%rdi
0000000000007666	movq	%r12,%rsi
0000000000007669	call	*0x0007ca69(%rip)
000000000000766f	cmpw	$0x64,%ax
0000000000007673	leaq	0x000a9bbe(%rip),%rbx
000000000000767a	je	0x000078d0
0000000000007680	movq	%r15,%rdi
0000000000007683	movq	0x0009f016(%rip),%rsi
000000000000768a	jmp	0x00006ce4
000000000000768f	movq	%r15,%rdi
0000000000007692	movq	%r12,%rsi
0000000000007695	call	*0x0007ca3d(%rip)
000000000000769b	cmpw	$0x72,%ax
000000000000769f	jne	0x00007680
00000000000076a1	movq	%r15,%rdi
00000000000076a4	movq	%r12,%rsi
00000000000076a7	call	*0x0007ca2b(%rip)
00000000000076ad	cmpw	$0x65,%ax
00000000000076b1	jne	0x00007680
00000000000076b3	movq	%r15,%rdi
00000000000076b6	movq	%r12,%rsi
00000000000076b9	call	*0x0007ca19(%rip)
00000000000076bf	cmpw	$0x61,%ax
00000000000076c3	jne	0x00007680
00000000000076c5	movq	%r15,%rdi
00000000000076c8	movq	%r12,%rsi
00000000000076cb	call	*0x0007ca07(%rip)
00000000000076d1	cmpw	$0x6b,%ax
00000000000076d5	jne	0x00007680
00000000000076d7	movq	%r15,%rdi
00000000000076da	movq	%r12,%rsi
00000000000076dd	call	*0x0007c9f5(%rip)
00000000000076e3	cmpw	$0x70,%ax
00000000000076e7	jne	0x00007680
00000000000076e9	movq	%r15,%rdi
00000000000076ec	movq	%r12,%rsi
00000000000076ef	call	*0x0007c9e3(%rip)
00000000000076f5	cmpw	$0x6f,%ax
00000000000076f9	jne	0x00007680
00000000000076fb	movq	%r15,%rdi
00000000000076fe	movq	%r12,%rsi
0000000000007701	call	*0x0007c9d1(%rip)
0000000000007707	cmpw	$0x69,%ax
000000000000770b	jne	0x00007680
0000000000007711	movq	%r15,%rdi
0000000000007714	movq	%r12,%rsi
0000000000007717	call	*0x0007c9bb(%rip)
000000000000771d	cmpw	$0x6e,%ax
0000000000007721	jne	0x00007680
0000000000007727	movq	%r15,%rdi
000000000000772a	movq	%r12,%rsi
000000000000772d	call	*0x0007c9a5(%rip)
0000000000007733	cmpw	$0x74,%ax
0000000000007737	jne	0x00007680
000000000000773d	movq	%r15,%rdi
0000000000007740	movq	%r12,%rsi
0000000000007743	call	*0x0007c98f(%rip)
0000000000007749	cmpw	$0x2d,%ax
000000000000774d	jne	0x00007680
0000000000007753	movq	%r15,%rdi
0000000000007756	movq	%r12,%rsi
0000000000007759	call	*0x0007c979(%rip)
000000000000775f	cmpw	$0x63,%ax
0000000000007763	jne	0x00007680
0000000000007769	movq	%r15,%rdi
000000000000776c	movq	%r12,%rsi
000000000000776f	call	*0x0007c963(%rip)
0000000000007775	cmpw	$0x6f,%ax
0000000000007779	jne	0x00007680
000000000000777f	movq	%r15,%rdi
0000000000007782	movq	%r12,%rsi
0000000000007785	call	*0x0007c94d(%rip)
000000000000778b	cmpw	$0x6d,%ax
000000000000778f	jne	0x00007680
0000000000007795	movq	%r15,%rdi
0000000000007798	movq	%r12,%rsi
000000000000779b	call	*0x0007c937(%rip)
00000000000077a1	cmpw	$0x6d,%ax
00000000000077a5	jne	0x00007680
00000000000077ab	movq	%r15,%rdi
00000000000077ae	movq	%r12,%rsi
00000000000077b1	call	*0x0007c921(%rip)
00000000000077b7	cmpw	$0x61,%ax
00000000000077bb	jne	0x00007680
00000000000077c1	movq	%r15,%rdi
00000000000077c4	movq	%r12,%rsi
00000000000077c7	call	*0x0007c90b(%rip)
00000000000077cd	cmpw	$0x6e,%ax
00000000000077d1	jne	0x00007680
00000000000077d7	movq	%r15,%rdi
00000000000077da	movq	%r12,%rsi
00000000000077dd	call	*0x0007c8f5(%rip)
00000000000077e3	cmpw	$0x64,%ax
00000000000077e7	jne	0x00007680
00000000000077ed	movq	%r15,%rdi
00000000000077f0	movq	%r12,%rsi
00000000000077f3	call	*0x0007c8df(%rip)
00000000000077f9	cmpw	$0x2d,%ax
00000000000077fd	jne	0x00007680
0000000000007803	movq	%r15,%rdi
0000000000007806	movq	%r12,%rsi
0000000000007809	call	*0x0007c8c9(%rip)
000000000000780f	cmpw	$0x63,%ax
0000000000007813	jne	0x00007680
0000000000007819	movq	%r15,%rdi
000000000000781c	movq	%r12,%rsi
000000000000781f	call	*0x0007c8b3(%rip)
0000000000007825	cmpw	$0x6f,%ax
0000000000007829	jne	0x00007680
000000000000782f	movq	%r15,%rdi
0000000000007832	movq	%r12,%rsi
0000000000007835	call	*0x0007c89d(%rip)
000000000000783b	cmpw	$0x6d,%ax
000000000000783f	jne	0x00007680
0000000000007845	movq	%r15,%rdi
0000000000007848	movq	%r12,%rsi
000000000000784b	call	*0x0007c887(%rip)
0000000000007851	cmpw	$0x70,%ax
0000000000007855	jne	0x00007680
000000000000785b	movq	%r15,%rdi
000000000000785e	movq	%r12,%rsi
0000000000007861	call	*0x0007c871(%rip)
0000000000007867	cmpw	$0x6c,%ax
000000000000786b	jne	0x00007680
0000000000007871	movq	%r15,%rdi
0000000000007874	movq	%r12,%rsi
0000000000007877	call	*0x0007c85b(%rip)
000000000000787d	cmpw	$0x65,%ax
0000000000007881	jne	0x00007680
0000000000007887	movq	%r15,%rdi
000000000000788a	movq	%r12,%rsi
000000000000788d	call	*0x0007c845(%rip)
0000000000007893	cmpw	$0x74,%ax
0000000000007897	jne	0x00007680
000000000000789d	movq	%r15,%rdi
00000000000078a0	movq	%r12,%rsi
00000000000078a3	call	*0x0007c82f(%rip)
00000000000078a9	cmpw	$0x65,%ax
00000000000078ad	jne	0x00007680
00000000000078b3	movq	%r15,%rdi
00000000000078b6	movq	%r12,%rsi
00000000000078b9	call	*0x0007c819(%rip)
00000000000078bf	cmpw	$0x64,%ax
00000000000078c3	leaq	0x000aa88e(%rip),%rbx
00000000000078ca	jne	0x00007680
00000000000078d0	movq	(%r15,%r13),%rdi
00000000000078d4	movq	0x0009ecc5(%rip),%rsi
00000000000078db	movq	0x0007c7f6(%rip),%r14
00000000000078e2	call	*%r14
00000000000078e5	movq	(%r15,%r13),%rdi
00000000000078e9	movq	0x0009d568(%rip),%rsi
00000000000078f0	movq	%rbx,%rdx
00000000000078f3	call	*%r14
00000000000078f6	movq	%r15,%rdi
00000000000078f9	movq	%r12,%rsi
00000000000078fc	call	*%r14
00000000000078ff	cmpw	$0x2c,%ax
0000000000007903	jne	0x00007919
0000000000007905	movq	(%r15,%r13),%rdx
0000000000007909	movq	%r15,%rdi
000000000000790c	movq	0x0009ed25(%rip),%rsi
0000000000007913	call	*0x0007c7bf(%rip)
0000000000007919	movq	0x000a7430(%rip),%rax
0000000000007920	cmpb	$0x00,(%r15,%rax)
0000000000007925	jne	0x00007a1b
000000000000792b	movq	(%r15,%r13),%rdx
000000000000792f	movq	0x000a73ca(%rip),%rax
0000000000007936	movq	(%r15,%rax),%rdi
000000000000793a	movq	0x0009ed57(%rip),%rsi
0000000000007941	call	*0x0007c791(%rip)
0000000000007947	jmp	0x00007a1b
000000000000794c	cmpw	$0x7e,%bx
0000000000007950	jne	0x00006cda
0000000000007956	movq	%r15,%rdi
0000000000007959	movq	%r12,%rsi
000000000000795c	call	*0x0007c776(%rip)
0000000000007962	cmpw	$0x22,%ax
0000000000007966	jne	0x00007a1b
000000000000796c	movq	%r15,%rdi
000000000000796f	movq	0x0009ecaa(%rip),%rsi
0000000000007976	call	*0x0007c75c(%rip)
000000000000797c	testq	%rax,%rax
000000000000797f	je	0x00007a1b
0000000000007985	movq	0x000a737c(%rip),%rcx
000000000000798c	movq	(%r15,%rcx),%rdi
0000000000007990	movq	0x0009d169(%rip),%rsi
0000000000007997	movq	%rax,%rdx
000000000000799a	call	*0x0007c738(%rip)
00000000000079a0	jmp	0x00007a1b
00000000000079a2	movq	%r15,%rdi
00000000000079a5	movq	%r12,%rsi
00000000000079a8	call	*0x0007c72a(%rip)
00000000000079ae	cmpw	$0x67,%ax
00000000000079b2	jne	0x00006cda
00000000000079b8	movq	%r15,%rdi
00000000000079bb	movq	%r12,%rsi
00000000000079be	call	*0x0007c714(%rip)
00000000000079c4	cmpw	$0x64,%ax
00000000000079c8	jne	0x00006cda
00000000000079ce	movq	%r15,%rdi
00000000000079d1	movq	%r12,%rsi
00000000000079d4	call	*0x0007c6fe(%rip)
00000000000079da	cmpw	$0x62,%ax
00000000000079de	jne	0x00006cda
00000000000079e4	movq	%r15,%rdi
00000000000079e7	movq	%r12,%rsi
00000000000079ea	call	*0x0007c6e8(%rip)
00000000000079f0	cmpw	$0x29,%ax
00000000000079f4	jne	0x00006cda
00000000000079fa	movq	%r15,%rdi
00000000000079fd	movq	0x0009ec74(%rip),%rsi
0000000000007a04	call	*0x0007c6ce(%rip)
0000000000007a0a	testq	%rax,%rax
0000000000007a0d	je	0x00007a1b
0000000000007a0f	movq	0x000a7342(%rip),%rax
0000000000007a16	movb	$0x01,(%r15,%rax)
0000000000007a1b	movq	%r15,%rdi
0000000000007a1e	movq	0x0009eb93(%rip),%rsi
0000000000007a25	call	*0x0007c6ad(%rip)
0000000000007a2b	movw	%ax,%bx
0000000000007a2e	xorb	%al,%al
0000000000007a30	movb	$0x01,%r14b
0000000000007a33	testw	%bx,%bx
0000000000007a36	je	0x00007a3b
0000000000007a38	movb	%al,%r14b
0000000000007a3b	cmpw	$0x0a,%bx
0000000000007a3f	je	0x00007a58
0000000000007a41	movq	%r15,%rdi
0000000000007a44	movq	%r12,%rsi
0000000000007a47	call	*0x0007c68b(%rip)
0000000000007a4d	testw	%bx,%bx
0000000000007a50	movw	%ax,%bx
0000000000007a53	movb	%r14b,%al
0000000000007a56	jne	0x00007a30
0000000000007a58	testb	%r14b,%r14b
0000000000007a5b	movq	0x0007c676(%rip),%r13
0000000000007a62	movq	0xa8(%rbp),%r14
0000000000007a66	jne	0x00007a7d
0000000000007a68	movq	%r15,%rdi
0000000000007a6b	movq	%r12,%rsi
0000000000007a6e	call	*0x0007c664(%rip)
0000000000007a74	testw	%ax,%ax
0000000000007a77	jne	0x00006aaa
0000000000007a7d	addq	$0x78,%rsp
0000000000007a81	popq	%rbx
0000000000007a82	popq	%r12
0000000000007a84	popq	%r13
0000000000007a86	popq	%r14
0000000000007a88	popq	%r15
0000000000007a8a	popq	%rbp
0000000000007a8b	ret
0000000000007a8c	lretl	$0xfffe
0000000000007a8f	decl	0xf2(%rsi)
0000000000007a92	.byte 0xff, 0xff #bad opcode
0000000000007a94	.byte 0x16 #bad opcode
0000000000007a95	.byte 0xff, 0xff #bad opcode
0000000000007a97	decl	0xf2(%rsi)
0000000000007a9a	.byte 0xff, 0xff #bad opcode
0000000000007a9c	popq	%rsi
0000000000007a9e	.byte 0xff, 0xff #bad opcode
0000000000007aa0	popq	%rdi
0000000000007aa2	.byte 0xff, 0xff #bad opcode
0000000000007aa4	nop
-[PBXGDB_MIParser setParseBuffer:]:
0000000000007aa5	pushq	%rbp
0000000000007aa6	movq	%rsp,%rbp
0000000000007aa9	pushq	%rbx
0000000000007aaa	pushq	%rax
0000000000007aab	movq	%rdi,%rbx
0000000000007aae	movq	0x000a7273(%rip),%rax
0000000000007ab5	movq	(%rbx,%rax),%rdi
0000000000007ab9	movq	0x000a7290(%rip),%rax
0000000000007ac0	cmpb	$0x00,(%rbx,%rax)
0000000000007ac4	je	0x00007ad5
0000000000007ac6	movq	0x0009d033(%rip),%rsi
0000000000007acd	call	*0x0007c605(%rip)
0000000000007ad3	jmp	0x00007afc
0000000000007ad5	cmpq	%rdx,%rdi
0000000000007ad8	je	0x00007afc
0000000000007ada	movq	0x0009cf97(%rip),%rsi
0000000000007ae1	movq	%rdx,%rdi
0000000000007ae4	call	*0x0007c5ee(%rip)
0000000000007aea	movq	0x000a7237(%rip),%rdx
0000000000007af1	movq	%rax,%rdi
0000000000007af4	movq	%rbx,%rsi
0000000000007af7	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000007afc	movq	0x000a724d(%rip),%rax
0000000000007b03	movb	$0x00,(%rbx,%rax)
0000000000007b07	movq	0x000a721a(%rip),%rax
0000000000007b0e	movq	(%rbx,%rax),%rdi
0000000000007b12	leaq	0x000a07d7(%rip),%rsi
0000000000007b19	call	*0x000a07d1(%rip)
0000000000007b1f	movq	0x000a7212(%rip),%rcx
0000000000007b26	movq	%rax,(%rbx,%rcx)
0000000000007b2a	movq	0x0009ea77(%rip),%rsi
0000000000007b31	movq	%rbx,%rdi
0000000000007b34	xorl	%edx,%edx
0000000000007b36	call	*0x0007c59c(%rip)
0000000000007b3c	movq	0x0009ea6d(%rip),%rsi
0000000000007b43	movq	%rbx,%rdi
0000000000007b46	movq	0x0007c58b(%rip),%rax
0000000000007b4d	addq	$0x08,%rsp
0000000000007b51	popq	%rbx
0000000000007b52	popq	%rbp
0000000000007b53	jmp	*%rax
0000000000007b55	nop
0000000000007b56	nop
0000000000007b57	nop
-[PBXGDB_MIParser setCurrentCharacterIndex:]:
0000000000007b58	pushq	%rbp
0000000000007b59	movq	%rsp,%rbp
0000000000007b5c	movq	0x000a71dd(%rip),%rax
0000000000007b63	movq	%rdx,(%rdi,%rax)
0000000000007b67	popq	%rbp
0000000000007b68	ret
0000000000007b69	nop
0000000000007b6a	nop
-[PBXGDB_MIParser resetForParsingASingleLine]:
0000000000007b6b	pushq	%rbp
0000000000007b6c	movq	%rsp,%rbp
0000000000007b6f	pushq	%r15
0000000000007b71	pushq	%r14
0000000000007b73	pushq	%rbx
0000000000007b74	pushq	%rax
0000000000007b75	movq	%rdi,%rbx
0000000000007b78	movq	0x000a7189(%rip),%rax
0000000000007b7f	movq	(%rbx,%rax),%rdi
0000000000007b83	movq	0x0009ea0e(%rip),%rsi
0000000000007b8a	leaq	0x000a7da7(%rip),%r14
0000000000007b91	movq	0x0007c540(%rip),%r15
0000000000007b98	movq	%r14,%rdx
0000000000007b9b	call	*%r15
0000000000007b9e	movq	0x000a716b(%rip),%rax
0000000000007ba5	movq	(%rbx,%rax),%rdi
0000000000007ba9	movq	0x0009e9f0(%rip),%rsi
0000000000007bb0	call	*%r15
0000000000007bb3	movq	0x000a7156(%rip),%rax
0000000000007bba	movq	(%rbx,%rax),%rdi
0000000000007bbe	movq	0x0009d293(%rip),%rsi
0000000000007bc5	movq	0x000af13c(%rip),%rdx
0000000000007bcc	call	*%r15
0000000000007bcf	movq	0x000a714a(%rip),%rax
0000000000007bd6	movq	(%rbx,%rax),%rdi
0000000000007bda	movq	0x0009e9b7(%rip),%rsi
0000000000007be1	movq	%r14,%rdx
0000000000007be4	call	*%r15
0000000000007be7	movq	0x000a715a(%rip),%rax
0000000000007bee	movq	$0x00000000,(%rbx,%rax)
0000000000007bf6	addq	$0x08,%rsp
0000000000007bfa	popq	%rbx
0000000000007bfb	popq	%r14
0000000000007bfd	popq	%r15
0000000000007bff	popq	%rbp
0000000000007c00	ret
-[PBXGDB_MIResultList removeAllItems]:
0000000000007c01	pushq	%rbp
0000000000007c02	movq	%rsp,%rbp
0000000000007c05	pushq	%rbx
0000000000007c06	pushq	%rax
0000000000007c07	movq	%rdi,%rbx
0000000000007c0a	movq	0x000a716f(%rip),%rdx
0000000000007c11	cmpq	$0x00,(%rbx,%rdx)
0000000000007c16	je	0x00007c28
0000000000007c18	addq	%rbx,%rdx
0000000000007c1b	subq	%rbx,%rdx
0000000000007c1e	xorl	%edi,%edi
0000000000007c20	movq	%rbx,%rsi
0000000000007c23	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000007c28	movq	0x000a7141(%rip),%rax
0000000000007c2f	movq	(%rbx,%rax),%rdi
0000000000007c33	movq	0x0009d416(%rip),%rsi
0000000000007c3a	addq	$0x08,%rsp
0000000000007c3e	popq	%rbx
0000000000007c3f	popq	%rbp
0000000000007c40	jmp	*0x0007c492(%rip)
-[PBXGDB_MIResultList setName:]:
0000000000007c46	pushq	%rbp
0000000000007c47	movq	%rsp,%rbp
0000000000007c4a	movq	%rdx,%rax
0000000000007c4d	movq	%rdi,%rcx
0000000000007c50	movq	0x000a7121(%rip),%rdx
0000000000007c57	movq	%rax,%rdi
0000000000007c5a	movq	%rcx,%rsi
0000000000007c5d	popq	%rbp
0000000000007c5e	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000007c63	nop
0000000000007c64	nop
-[PBXGDB_MIParser currentCharacter]:
0000000000007c65	pushq	%rbp
0000000000007c66	movq	%rsp,%rbp
0000000000007c69	movq	0x000a70d0(%rip),%rax
0000000000007c70	movq	(%rdi,%rax),%rdx
0000000000007c74	movq	0x000a70bd(%rip),%rax
0000000000007c7b	cmpq	(%rdi,%rax),%rdx
0000000000007c7f	jb	0x00007c85
0000000000007c81	xorl	%eax,%eax
0000000000007c83	jmp	0x00007c9d
0000000000007c85	movq	0x000a709c(%rip),%rax
0000000000007c8c	movq	(%rdi,%rax),%rdi
0000000000007c90	movq	0x0009d5c1(%rip),%rsi
0000000000007c97	call	*0x0007c43b(%rip)
0000000000007c9d	movzwl	%ax,%eax
0000000000007ca0	popq	%rbp
0000000000007ca1	ret
-[PBXGDB_Adaptor(TraceLogging) loggingEnabled]:
0000000000007ca2	pushq	%rbp
0000000000007ca3	movq	%rsp,%rbp
0000000000007ca6	pushq	%rbx
0000000000007ca7	pushq	%rax
0000000000007ca8	movq	0x0009d039(%rip),%rsi
0000000000007caf	movq	0x0007c422(%rip),%rbx
0000000000007cb6	call	*%rbx
0000000000007cb8	movq	0x0009d031(%rip),%rsi
0000000000007cbf	movq	%rax,%rdi
0000000000007cc2	call	*%rbx
0000000000007cc4	movq	0x0009d02d(%rip),%rsi
0000000000007ccb	movq	%rax,%rdi
0000000000007cce	call	*%rbx
0000000000007cd0	movsbl	%al,%eax
0000000000007cd3	addq	$0x08,%rsp
0000000000007cd7	popq	%rbx
0000000000007cd8	popq	%rbp
0000000000007cd9	ret
0000000000007cda	nop
-[PBXGDB_MIParser currentCharacterIndex]:
0000000000007cdb	pushq	%rbp
0000000000007cdc	movq	%rsp,%rbp
0000000000007cdf	movq	0x000a705a(%rip),%rax
0000000000007ce6	movq	(%rdi,%rax),%rax
0000000000007cea	popq	%rbp
0000000000007ceb	ret
0000000000007cec	nop
-[PBXGDB_MIParser setTmpSubstringToRange:]:
0000000000007ced	pushq	%rbp
0000000000007cee	movq	%rsp,%rbp
0000000000007cf1	pushq	%r14
0000000000007cf3	pushq	%rbx
0000000000007cf4	movq	%rdi,%rbx
0000000000007cf7	movq	0x000a702a(%rip),%rax
0000000000007cfe	movq	(%rbx,%rax),%rdi
0000000000007d02	movq	0x0009ce4f(%rip),%rsi
0000000000007d09	movq	0x0007c3c8(%rip),%r14
0000000000007d10	call	*%r14
0000000000007d13	movq	0x0009cd5e(%rip),%rsi
0000000000007d1a	movq	%rax,%rdi
0000000000007d1d	call	*%r14
0000000000007d20	movq	0x000a7009(%rip),%rdx
0000000000007d27	movq	%rax,%rdi
0000000000007d2a	movq	%rbx,%rsi
0000000000007d2d	popq	%rbx
0000000000007d2e	popq	%r14
0000000000007d30	popq	%rbp
0000000000007d31	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MIParser tmpSubstring]:
0000000000007d36	pushq	%rbp
0000000000007d37	movq	%rsp,%rbp
0000000000007d3a	movq	0x000a6fef(%rip),%rax
0000000000007d41	movq	(%rdi,%rax),%rax
0000000000007d45	popq	%rbp
0000000000007d46	ret
-[PBXGDB_Adaptor(TraceLogging) logStringFromGDB:]:
0000000000007d47	pushq	%rbp
0000000000007d48	movq	%rsp,%rbp
0000000000007d4b	pushq	%rbx
0000000000007d4c	pushq	%rax
0000000000007d4d	movq	%rdx,%rbx
0000000000007d50	movq	0x0009cf91(%rip),%rsi
0000000000007d57	call	*0x0007c37b(%rip)
0000000000007d5d	movq	0x0009cf8c(%rip),%rsi
0000000000007d64	movq	%rax,%rdi
0000000000007d67	call	*0x0007c36b(%rip)
0000000000007d6d	leaq	0x000a7c84(%rip),%rdx
0000000000007d74	movq	0x0009cf85(%rip),%rsi
0000000000007d7b	movq	%rax,%rdi
0000000000007d7e	movq	%rbx,%rcx
0000000000007d81	xorb	%al,%al
0000000000007d83	movq	0x0007c34e(%rip),%r8
0000000000007d8a	addq	$0x08,%rsp
0000000000007d8e	popq	%rbx
0000000000007d8f	popq	%rbp
0000000000007d90	jmp	*%r8
0000000000007d93	nop
0000000000007d94	nop
-[PBXGDB_MIParser _saveCurrentLineAsOutputText]:
0000000000007d95	pushq	%rbp
0000000000007d96	movq	%rsp,%rbp
0000000000007d99	movq	0x0009e8b8(%rip),%rsi
0000000000007da0	movl	$0x00000001,%edx
0000000000007da5	popq	%rbp
0000000000007da6	jmp	*0x0007c32c(%rip)
-[PBXGDB_MIParser _processCurrentLineAndOutputText:]:
0000000000007dac	pushq	%rbp
0000000000007dad	movq	%rsp,%rbp
0000000000007db0	pushq	%r15
0000000000007db2	pushq	%r14
0000000000007db4	pushq	%r12
0000000000007db6	pushq	%rbx
0000000000007db7	subq	$0x40,%rsp
0000000000007dbb	movl	%edx,%r14d
0000000000007dbe	movq	%rdi,%rbx
0000000000007dc1	movq	0x000a6f60(%rip),%rax
0000000000007dc8	movq	(%rbx,%rax),%r15
0000000000007dcc	movq	0x0009e81d(%rip),%rsi
0000000000007dd3	movq	0x0007c2fe(%rip),%r12
0000000000007dda	call	*%r12
0000000000007ddd	movq	%rax,0xb8(%rbp)
0000000000007de1	movq	$0x00000001,0xc0(%rbp)
0000000000007de9	leaq	0xd8(%rbp),%rdx
0000000000007ded	leaq	0xd0(%rbp),%rcx
0000000000007df1	leaq	0xc8(%rbp),%r8
0000000000007df5	movq	0x0009cd54(%rip),%rsi
0000000000007dfc	movq	0xb8(%rbp),%rax
0000000000007e00	movq	0xc0(%rbp),%rdi
0000000000007e04	movq	%rdi,0x08(%rsp)
0000000000007e09	movq	%rax,(%rsp)
0000000000007e0d	movq	%r15,%rdi
0000000000007e10	call	*%r12
0000000000007e13	cmpb	$0x01,%r14b
0000000000007e17	jne	0x00007e60
0000000000007e19	movq	0xd8(%rbp),%rdx
0000000000007e1d	movq	0xd0(%rbp),%rcx
0000000000007e21	subq	%rdx,%rcx
0000000000007e24	movq	0x0009e7d5(%rip),%rsi
0000000000007e2b	movq	0x0007c2a6(%rip),%r15
0000000000007e32	movq	%rbx,%rdi
0000000000007e35	call	*%r15
0000000000007e38	movq	0x000a6ec9(%rip),%rax
0000000000007e3f	movq	(%rbx,%rax),%r14
0000000000007e43	movq	0x0009e7be(%rip),%rsi
0000000000007e4a	movq	%rbx,%rdi
0000000000007e4d	call	*%r15
0000000000007e50	movq	0x0009cca9(%rip),%rsi
0000000000007e57	movq	%r14,%rdi
0000000000007e5a	movq	%rax,%rdx
0000000000007e5d	call	*%r15
0000000000007e60	movq	0x0009e741(%rip),%rsi
0000000000007e67	movq	0xc8(%rbp),%rdx
0000000000007e6b	movq	%rbx,%rdi
0000000000007e6e	call	*0x0007c264(%rip)
0000000000007e74	addq	$0x40,%rsp
0000000000007e78	popq	%rbx
0000000000007e79	popq	%r12
0000000000007e7b	popq	%r14
0000000000007e7d	popq	%r15
0000000000007e7f	popq	%rbp
0000000000007e80	ret
0000000000007e81	nop
-[PBXGDB_MIParser nextCharacter]:
0000000000007e82	pushq	%rbp
0000000000007e83	movq	%rsp,%rbp
0000000000007e86	movq	0x000a6eb3(%rip),%rax
0000000000007e8d	movq	(%rdi,%rax),%rcx
0000000000007e91	movq	0x000a6ea0(%rip),%rdx
0000000000007e98	cmpq	(%rdi,%rdx),%rcx
0000000000007e9c	jae	0x00007ea5
0000000000007e9e	incq	%rcx
0000000000007ea1	movq	%rcx,(%rdi,%rax)
0000000000007ea5	movq	0x0009e70c(%rip),%rsi
0000000000007eac	call	*0x0007c226(%rip)
0000000000007eb2	movzwl	%ax,%eax
0000000000007eb5	popq	%rbp
0000000000007eb6	ret
0000000000007eb7	nop
0000000000007eb8	nop
0000000000007eb9	nop
-[PBXGDB_MIParser parsedOutputText]:
0000000000007eba	pushq	%rbp
0000000000007ebb	movq	%rsp,%rbp
0000000000007ebe	movq	0x000a6e43(%rip),%rax
0000000000007ec5	movq	(%rdi,%rax),%rax
0000000000007ec9	popq	%rbp
0000000000007eca	ret
-[PBXGDB_Adaptor gdbDidStart]:
0000000000007ecb	pushq	%rbp
0000000000007ecc	movq	%rsp,%rbp
0000000000007ecf	pushq	%r15
0000000000007ed1	pushq	%r14
0000000000007ed3	pushq	%r13
0000000000007ed5	pushq	%r12
0000000000007ed7	pushq	%rbx
0000000000007ed8	subq	$0x28,%rsp
0000000000007edc	movq	%rdi,%r14
0000000000007edf	movq	0x000a6802(%rip),%rax
0000000000007ee6	movb	$0x00,(%r14,%rax)
0000000000007eeb	movq	0x0009cf0e(%rip),%rsi
0000000000007ef2	movq	0x0007c1df(%rip),%rbx
0000000000007ef9	call	*%rbx
0000000000007efb	movq	%rax,%r15
0000000000007efe	movq	0x0009cea3(%rip),%rsi
0000000000007f05	movq	%r15,%rdi
0000000000007f08	call	*%rbx
0000000000007f0a	movq	0x0009ce4f(%rip),%rsi
0000000000007f11	movq	%rax,%rdi
0000000000007f14	call	*%rbx
0000000000007f16	movq	0x0009d00b(%rip),%rsi
0000000000007f1d	movq	%rax,%rdi
0000000000007f20	call	*%rbx
0000000000007f22	xorl	%r12d,%r12d
0000000000007f25	testq	%rax,%rax
0000000000007f28	je	0x00007f3d
0000000000007f2a	movq	0x0009cfff(%rip),%rsi
0000000000007f31	movq	%r15,%rdi
0000000000007f34	call	*0x0007c19e(%rip)
0000000000007f3a	movq	%rax,%r12
0000000000007f3d	movq	0x0009cff4(%rip),%rsi
0000000000007f44	movq	0x0007c18d(%rip),%rbx
0000000000007f4b	movq	%r15,%rdi
0000000000007f4e	call	*%rbx
0000000000007f50	movq	%rax,%r13
0000000000007f53	movq	0x0009cd8e(%rip),%rsi
0000000000007f5a	movq	%r14,%rdi
0000000000007f5d	call	*%rbx
0000000000007f5f	movq	0x0009cd8a(%rip),%rsi
0000000000007f66	movq	%rax,%rdi
0000000000007f69	call	*%rbx
0000000000007f6b	movq	0x0009ced6(%rip),%rsi
0000000000007f72	movq	%rax,%rdi
0000000000007f75	call	*%rbx
0000000000007f77	movb	%al,0xce(%rbp)
0000000000007f7a	testq	%r12,%r12
0000000000007f7d	sete	%cl
0000000000007f80	testb	%al,%al
0000000000007f82	jne	0x00007f8c
0000000000007f84	testb	%cl,%cl
0000000000007f86	jne	0x0000867c
0000000000007f8c	movb	%cl,0xcf(%rbp)
0000000000007f8f	movq	0x0009ce3a(%rip),%rsi
0000000000007f96	movq	%r14,%rdi
0000000000007f99	call	*0x0007c139(%rip)
0000000000007f9f	movq	%rax,0xc0(%rbp)
0000000000007fa3	movq	0x000a6746(%rip),%rax
0000000000007faa	cmpb	$0x00,(%r14,%rax)
0000000000007faf	jne	0x00008086
0000000000007fb5	movq	%r12,0xd0(%rbp)
0000000000007fb9	leaq	0x000a0390(%rip),%rsi
0000000000007fc0	leaq	0x000a84b1(%rip),%rdx
0000000000007fc7	movq	%r13,%rdi
0000000000007fca	call	*0x000a0380(%rip)
0000000000007fd0	movq	0x0009ce49(%rip),%rsi
0000000000007fd7	leaq	0x000a84ba(%rip),%rdx
0000000000007fde	movq	%rax,%rdi
0000000000007fe1	call	*0x0007c0f1(%rip)
0000000000007fe7	cmpb	$0x01,%al
0000000000007fe9	je	0x00008002
0000000000007feb	leaq	0x000a035e(%rip),%rsi
0000000000007ff2	leaq	0x000a84bf(%rip),%rdx
0000000000007ff9	movq	%r13,%rdi
0000000000007ffc	call	*0x000a034e(%rip)
0000000000008002	leaq	0x000a0347(%rip),%rsi
0000000000008009	leaq	0x000a84c8(%rip),%rdx
0000000000008010	movq	%r13,%rdi
0000000000008013	call	*0x000a0337(%rip)
0000000000008019	movq	%rax,%rbx
000000000000801c	movq	0x0009ca5d(%rip),%rsi
0000000000008023	movq	0x000a04ee(%rip),%rdi
000000000000802a	movq	0x0007c0a7(%rip),%r12
0000000000008031	call	*%r12
0000000000008034	movq	%rax,%r15
0000000000008037	testq	%rbx,%rbx
000000000000803a	setne	%al
000000000000803d	movzbl	%al,%ecx
0000000000008040	movq	0x0009cb31(%rip),%rsi
0000000000008047	movq	0x000a0402(%rip),%rdi
000000000000804e	leaq	0x000a84a3(%rip),%rdx
0000000000008055	xorb	%al,%al
0000000000008057	call	*%r12
000000000000805a	movq	0x0009cedf(%rip),%rsi
0000000000008061	movq	%r15,%rdi
0000000000008064	movq	%rax,%rdx
0000000000008067	call	*%r12
000000000000806a	movq	0x000a6607(%rip),%rax
0000000000008071	movq	(%r14,%rax),%rdi
0000000000008075	movq	0x0009ca4c(%rip),%rsi
000000000000807c	movq	%r15,%rdx
000000000000807f	call	*%r12
0000000000008082	movq	0xd0(%rbp),%r12
0000000000008086	movq	0x0009c9f3(%rip),%rsi
000000000000808d	movq	0x000a048c(%rip),%rdi
0000000000008094	movq	0x0007c03d(%rip),%r15
000000000000809b	call	*%r15
000000000000809e	movq	%rax,%rbx
00000000000080a1	movq	0x0009c9e0(%rip),%rsi
00000000000080a8	movq	%rbx,%rdi
00000000000080ab	movq	%r14,%rdx
00000000000080ae	call	*%r15
00000000000080b1	movq	0x0009c9e0(%rip),%rsi
00000000000080b8	movq	0x0009ce89(%rip),%rdx
00000000000080bf	movq	%rbx,%rdi
00000000000080c2	call	*%r15
00000000000080c5	movq	0x000a65ac(%rip),%rax
00000000000080cc	movq	(%r14,%rax),%rdi
00000000000080d0	movq	0x0009c9f1(%rip),%rsi
00000000000080d7	movq	%rbx,%rdx
00000000000080da	call	*%r15
00000000000080dd	movq	0x0009c99c(%rip),%rsi
00000000000080e4	movq	0x000a042d(%rip),%rdi
00000000000080eb	call	*%r15
00000000000080ee	movq	%rax,%rbx
00000000000080f1	leaq	0x000a8420(%rip),%rdx
00000000000080f8	movq	0x0009ce41(%rip),%rsi
00000000000080ff	movq	%rbx,%rdi
0000000000008102	call	*%r15
0000000000008105	movq	0x0009ccac(%rip),%rsi
000000000000810c	movq	%r14,%rdi
000000000000810f	movq	%rbx,%rdx
0000000000008112	call	*%r15
0000000000008115	movq	0x0009c964(%rip),%rsi
000000000000811c	movq	0x000a0405(%rip),%rdi
0000000000008123	call	*%r15
0000000000008126	movq	0x000a654b(%rip),%rcx
000000000000812d	movq	(%r14,%rcx),%rdi
0000000000008131	movq	0x0009c990(%rip),%rsi
0000000000008138	movq	%rax,%rdx
000000000000813b	call	*%r15
000000000000813e	movq	0x000a65ab(%rip),%rax
0000000000008145	cmpb	$0x01,(%r14,%rax)
000000000000814a	jne	0x00008406
0000000000008150	movq	%r13,0xb8(%rbp)
0000000000008154	movq	%r12,0xd0(%rbp)
0000000000008158	movq	0x0009cc01(%rip),%rsi
000000000000815f	movq	0x0007bf72(%rip),%rbx
0000000000008166	movq	%r14,%rdi
0000000000008169	call	*%rbx
000000000000816b	movq	0x0009cdde(%rip),%rsi
0000000000008172	movq	%rax,%rdi
0000000000008175	call	*%rbx
0000000000008177	movq	%rax,%r15
000000000000817a	movq	0x0009cbdf(%rip),%rsi
0000000000008181	movq	%r14,%rdi
0000000000008184	call	*%rbx
0000000000008186	movq	0x0009cdcb(%rip),%rsi
000000000000818d	movq	%rax,%rdi
0000000000008190	call	*%rbx
0000000000008192	movq	%rax,%r12
0000000000008195	movq	0x0009cdc4(%rip),%rsi
000000000000819c	movq	%r12,%rdi
000000000000819f	call	*%rbx
00000000000081a1	movq	%rax,%rbx
00000000000081a4	leaq	0x000a01b5(%rip),%rsi
00000000000081ab	leaq	0x000a8386(%rip),%rdx
00000000000081b2	movq	%rbx,%rdi
00000000000081b5	call	*0x000a01a5(%rip)
00000000000081bb	testb	%al,%al
00000000000081bd	jne	0x000081da
00000000000081bf	leaq	0x000a019a(%rip),%rsi
00000000000081c6	leaq	0x000a838b(%rip),%rdx
00000000000081cd	movq	%rbx,%rdi
00000000000081d0	call	*0x000a018a(%rip)
00000000000081d6	testb	%al,%al
00000000000081d8	je	0x000081ea
00000000000081da	movq	0x0009cd87(%rip),%rsi
00000000000081e1	movq	%r12,%rdi
00000000000081e4	call	*0x0007beee(%rip)
00000000000081ea	movq	0x0009c88f(%rip),%rsi
00000000000081f1	movq	0x000a0320(%rip),%rdi
00000000000081f8	movq	0x0007bed9(%rip),%r13
00000000000081ff	call	*%r13
0000000000008202	movq	%rax,%rbx
0000000000008205	movq	0x0009c96c(%rip),%rsi
000000000000820c	movq	0x000a0225(%rip),%rdi
0000000000008213	leaq	0x000a835e(%rip),%rdx
000000000000821a	xorb	%al,%al
000000000000821c	call	*%r13
000000000000821f	movq	%rax,%r12
0000000000008222	movq	0x0009cabf(%rip),%rsi
0000000000008229	movq	%r14,%rdi
000000000000822c	call	*%r13
000000000000822f	movq	0x0009caba(%rip),%rsi
0000000000008236	movq	%rax,%rdi
0000000000008239	call	*%r13
000000000000823c	movq	0x0009cd2d(%rip),%rsi
0000000000008243	movq	%rax,%rdi
0000000000008246	call	*%r13
0000000000008249	leaq	0x000a8348(%rip),%rdx
0000000000008250	movq	0x0009ca41(%rip),%rsi
0000000000008257	movq	%r12,%rdi
000000000000825a	movq	%rax,%rcx
000000000000825d	xorb	%al,%al
000000000000825f	call	*%r13
0000000000008262	movq	0x0009ccd7(%rip),%rsi
0000000000008269	movq	%rbx,%rdi
000000000000826c	movq	%r12,%rdx
000000000000826f	call	*%r13
0000000000008272	movq	0x000a63ff(%rip),%rax
0000000000008279	movq	(%r14,%rax),%rdi
000000000000827d	movq	0x0009c844(%rip),%rsi
0000000000008284	movq	%rbx,%rdx
0000000000008287	call	*%r13
000000000000828a	movq	0x0009c7ef(%rip),%rsi
0000000000008291	movq	0x000a0280(%rip),%rdi
0000000000008298	call	*%r13
000000000000829b	movq	%rax,%rbx
000000000000829e	leaq	0x000a8313(%rip),%rdx
00000000000082a5	movq	0x0009c8cc(%rip),%rsi
00000000000082ac	movq	0x000a019d(%rip),%rdi
00000000000082b3	xorb	%al,%al
00000000000082b5	call	*%r13
00000000000082b8	movq	0x0009cc81(%rip),%rsi
00000000000082bf	movq	%rbx,%rdi
00000000000082c2	movq	%rax,%rdx
00000000000082c5	call	*%r13
00000000000082c8	movq	0x000a63a9(%rip),%rax
00000000000082cf	movq	(%r14,%rax),%rdi
00000000000082d3	movq	0x0009c7ee(%rip),%rsi
00000000000082da	movq	%rbx,%rdx
00000000000082dd	call	*%r13
00000000000082e0	movq	0x0009c799(%rip),%rsi
00000000000082e7	movq	0x000a022a(%rip),%rdi
00000000000082ee	call	*%r13
00000000000082f1	movq	%rax,%rbx
00000000000082f4	leaq	0x000a82dd(%rip),%rdx
00000000000082fb	movq	0x0009c876(%rip),%rsi
0000000000008302	movq	0x000a0147(%rip),%rdi
0000000000008309	xorb	%al,%al
000000000000830b	call	*%r13
000000000000830e	movq	0x0009cc2b(%rip),%rsi
0000000000008315	movq	%rbx,%rdi
0000000000008318	movq	%rax,%rdx
000000000000831b	call	*%r13
000000000000831e	movq	0x000a6353(%rip),%rax
0000000000008325	movq	(%r14,%rax),%rdi
0000000000008329	movq	0x0009c798(%rip),%rsi
0000000000008330	movq	%rbx,%rdx
0000000000008333	call	*%r13
0000000000008336	leaq	0x000a82bb(%rip),%rdx
000000000000833d	movq	0x0009cc34(%rip),%rsi
0000000000008344	movq	%r15,%rdi
0000000000008347	call	*%r13
000000000000834a	movq	0x0009cc2f(%rip),%rsi
0000000000008351	movq	%rax,%rdi
0000000000008354	movl	$0x00000001,%edx
0000000000008359	xorl	%ecx,%ecx
000000000000835b	xorl	%r8d,%r8d
000000000000835e	call	*%r13
0000000000008361	movq	%rax,%r15
0000000000008364	movq	0x0009cc1d(%rip),%rsi
000000000000836b	movq	0x000a01be(%rip),%rdi
0000000000008372	call	*%r13
0000000000008375	movq	0x0009cc14(%rip),%rsi
000000000000837c	movq	%rax,%rdi
000000000000837f	movq	%r15,%rdx
0000000000008382	call	*%r13
0000000000008385	testb	%al,%al
0000000000008387	je	0x000083e9
0000000000008389	movq	0x0009c6f0(%rip),%rsi
0000000000008390	movq	0x000a01a1(%rip),%rdi
0000000000008397	movq	0x0007bd3a(%rip),%r12
000000000000839e	call	*%r12
00000000000083a1	movq	%rax,%rbx
00000000000083a4	movq	0x0009c7cd(%rip),%rsi
00000000000083ab	movq	0x000a009e(%rip),%rdi
00000000000083b2	leaq	0x000a825f(%rip),%rdx
00000000000083b9	movq	%r15,%rcx
00000000000083bc	xorb	%al,%al
00000000000083be	call	*%r12
00000000000083c1	movq	0x0009cbd0(%rip),%rsi
00000000000083c8	movq	%rbx,%rdi
00000000000083cb	movq	%rax,%rdx
00000000000083ce	call	*%r12
00000000000083d1	movq	0x000a62a0(%rip),%rax
00000000000083d8	movq	(%r14,%rax),%rdi
00000000000083dc	movq	0x0009c6e5(%rip),%rsi
00000000000083e3	movq	%rbx,%rdx
00000000000083e6	call	*%r12
00000000000083e9	movq	0x0009cbb0(%rip),%rsi
00000000000083f0	movq	%r14,%rdi
00000000000083f3	movl	$0x00000001,%edx
00000000000083f8	call	*0x0007bcda(%rip)
00000000000083fe	movq	0xd0(%rbp),%r12
0000000000008402	movq	0xb8(%rbp),%r13
0000000000008406	movq	0x0009cb9b(%rip),%rsi
000000000000840d	movq	0x0007bcc4(%rip),%rbx
0000000000008414	movq	%r14,%rdi
0000000000008417	xorl	%edx,%edx
0000000000008419	movq	%r13,%rcx
000000000000841c	call	*%rbx
000000000000841e	movq	0x0009cb8b(%rip),%rsi
0000000000008425	movq	%r14,%rdi
0000000000008428	call	*%rbx
000000000000842a	testb	%al,%al
000000000000842c	je	0x0000854b
0000000000008432	movq	0x0009c8af(%rip),%rsi
0000000000008439	movq	0x0007bc98(%rip),%rbx
0000000000008440	movq	%r14,%rdi
0000000000008443	call	*%rbx
0000000000008445	movq	0x0009c8a4(%rip),%rsi
000000000000844c	movq	%rax,%rdi
000000000000844f	call	*%rbx
0000000000008451	movq	0x0009cb60(%rip),%rsi
0000000000008458	movq	%rax,%rdi
000000000000845b	call	*%rbx
000000000000845d	testb	%al,%al
000000000000845f	jne	0x00008531
0000000000008465	movq	0x0009c614(%rip),%rsi
000000000000846c	movq	0x000a00cd(%rip),%rdi
0000000000008473	movq	%r12,0xd0(%rbp)
0000000000008477	movq	0x0007bc5a(%rip),%r12
000000000000847e	call	*%r12
0000000000008481	movq	0x0009c930(%rip),%rsi
0000000000008488	movq	%r14,%rdi
000000000000848b	movq	%rax,%rdx
000000000000848e	call	*%r12
0000000000008491	leaq	0x0009fe48(%rip),%r15
0000000000008498	movq	0x000a00a9(%rip),%rdi
000000000000849f	movq	%r15,%rsi
00000000000084a2	call	*0x0009fe38(%rip)
00000000000084a8	movq	0x0009c5c1(%rip),%rsi
00000000000084af	movq	%rax,%rdi
00000000000084b2	call	*%r12
00000000000084b5	movq	%rax,%rbx
00000000000084b8	movq	0x0009c919(%rip),%rsi
00000000000084bf	movq	%rbx,%rdi
00000000000084c2	movq	0xc0(%rbp),%r13
00000000000084c6	movq	%r13,%rdx
00000000000084c9	call	*%r12
00000000000084cc	movq	0x0009c90d(%rip),%rsi
00000000000084d3	movq	%r13,%rdi
00000000000084d6	movq	%rbx,%rdx
00000000000084d9	call	*%r12
00000000000084dc	movq	0x0009fff5(%rip),%rdi
00000000000084e3	movq	%r15,%rsi
00000000000084e6	call	*0x0009fdf4(%rip)
00000000000084ec	movq	0x0009c57d(%rip),%rsi
00000000000084f3	movq	%rax,%rdi
00000000000084f6	call	*%r12
00000000000084f9	movq	%rax,%rbx
00000000000084fc	movq	0x0009c8c5(%rip),%rsi
0000000000008503	movq	%rbx,%rdi
0000000000008506	xorl	%edx,%edx
0000000000008508	call	*%r12
000000000000850b	movq	0x0009c8c6(%rip),%rsi
0000000000008512	movq	%rbx,%rdi
0000000000008515	movq	%r13,%rdx
0000000000008518	call	*%r12
000000000000851b	movq	0x0009c8be(%rip),%rsi
0000000000008522	movq	%r13,%rdi
0000000000008525	movq	%rbx,%rdx
0000000000008528	call	*%r12
000000000000852b	movq	0xd0(%rbp),%r12
000000000000852f	jmp	0x00008579
0000000000008531	movq	0x000a6148(%rip),%rax
0000000000008538	movq	(%r14,%rax),%rdi
000000000000853c	movq	0x0009c87d(%rip),%rsi
0000000000008543	call	*0x0007bb8f(%rip)
0000000000008549	jmp	0x00008579
000000000000854b	movq	0x0009c52e(%rip),%rsi
0000000000008552	movq	0x0009fff7(%rip),%rdi
0000000000008559	movq	0x0007bb78(%rip),%rbx
0000000000008560	call	*%rbx
0000000000008562	movq	0x000a610f(%rip),%rcx
0000000000008569	movq	(%r14,%rcx),%rdi
000000000000856d	movq	0x0009c554(%rip),%rsi
0000000000008574	movq	%rax,%rdx
0000000000008577	call	*%rbx
0000000000008579	movq	0x0009c500(%rip),%rsi
0000000000008580	movq	0x0009ffd1(%rip),%rdi
0000000000008587	call	*0x0007bb4b(%rip)
000000000000858d	movq	%rax,%rbx
0000000000008590	movq	0x000a6161(%rip),%rax
0000000000008597	movq	(%r14,%rax),%rdx
000000000000859b	testq	%rdx,%rdx
000000000000859e	je	0x000085cc
00000000000085a0	movq	0x0009ca19(%rip),%rsi
00000000000085a7	movq	0x0007bb2a(%rip),%r15
00000000000085ae	movq	%rbx,%rdi
00000000000085b1	call	*%r15
00000000000085b4	movq	0x000a60bd(%rip),%rax
00000000000085bb	movq	(%r14,%rax),%rdi
00000000000085bf	movq	0x0009c502(%rip),%rsi
00000000000085c6	movq	%rbx,%rdx
00000000000085c9	call	*%r15
00000000000085cc	cmpb	$0x00,0xce(%rbp)
00000000000085d0	je	0x000085e8
00000000000085d2	movq	0x000a6117(%rip),%rax
00000000000085d9	cmpb	$0x00,(%r14,%rax)
00000000000085de	sete	%al
00000000000085e1	orb	0xcf(%rbp),%al
00000000000085e4	je	0x000085ed
00000000000085e6	jmp	0x00008628
00000000000085e8	testq	%r12,%r12
00000000000085eb	je	0x00008628
00000000000085ed	movq	0x0009c48c(%rip),%rsi
00000000000085f4	movq	0x0009ff65(%rip),%rdi
00000000000085fb	movq	0x0007bad6(%rip),%r15
0000000000008602	call	*%r15
0000000000008605	movq	%rax,%rbx
0000000000008608	movq	0x0009c9b9(%rip),%rsi
000000000000860f	movq	%rbx,%rdi
0000000000008612	movq	%r12,%rdx
0000000000008615	call	*%r15
0000000000008618	movq	0x0009c799(%rip),%rsi
000000000000861f	movq	%r14,%rdi
0000000000008622	movq	%rbx,%rdx
0000000000008625	call	*%r15
0000000000008628	movq	0x0009c9a9(%rip),%rsi
000000000000862f	movq	%r14,%rdi
0000000000008632	call	*0x0007baa0(%rip)
0000000000008638	movq	0x0009c9a1(%rip),%rsi
000000000000863f	movq	%rax,%rdi
0000000000008642	call	*0x0007ba90(%rip)
0000000000008648	movq	0x0009c699(%rip),%rsi
000000000000864f	movq	%r14,%rdi
0000000000008652	call	*0x0007ba80(%rip)
0000000000008658	movq	0x0009c989(%rip),%rsi
000000000000865f	movq	%rax,%rdi
0000000000008662	movq	%r14,%rdx
0000000000008665	movq	0x0007ba6c(%rip),%rax
000000000000866c	addq	$0x28,%rsp
0000000000008670	popq	%rbx
0000000000008671	popq	%r12
0000000000008673	popq	%r13
0000000000008675	popq	%r14
0000000000008677	popq	%r15
0000000000008679	popq	%rbp
000000000000867a	jmp	*%rax
000000000000867c	movq	0x0009c94d(%rip),%rsi
0000000000008683	movq	%r15,%rdi
0000000000008686	addq	$0x28,%rsp
000000000000868a	popq	%rbx
000000000000868b	popq	%r12
000000000000868d	popq	%r13
000000000000868f	popq	%r14
0000000000008691	popq	%r15
0000000000008693	popq	%rbp
0000000000008694	jmp	*0x0007ba3e(%rip)
000000000000869a	nop
000000000000869b	nop
000000000000869c	nop
000000000000869d	nop
000000000000869e	nop
-[DBGGDBLauncher pathString]:
000000000000869f	pushq	%rbp
00000000000086a0	movq	%rsp,%rbp
00000000000086a3	movq	0x0009f2b6(%rip),%rsi
00000000000086aa	call	*0x0007ba28(%rip)
00000000000086b0	movq	0x0009c879(%rip),%rsi
00000000000086b7	movq	%rax,%rdi
00000000000086ba	movq	0x0007ba17(%rip),%rax
00000000000086c1	popq	%rbp
00000000000086c2	jmp	*%rax
-[PBXLSAdaptor updateEnvironmentForLaunch:]:
00000000000086c4	pushq	%rbp
00000000000086c5	movq	%rsp,%rbp
00000000000086c8	popq	%rbp
00000000000086c9	ret
-[PBXGDB_Adaptor sequenceController]:
00000000000086ca	pushq	%rbp
00000000000086cb	movq	%rsp,%rbp
00000000000086ce	movq	0x000a5fc3(%rip),%rax
00000000000086d5	movq	(%rdi,%rax),%rax
00000000000086d9	popq	%rbp
00000000000086da	ret
+[PBXGDB_MICommand miCommand]:
00000000000086db	pushq	%rbp
00000000000086dc	movq	%rsp,%rbp
00000000000086df	pushq	%r14
00000000000086e1	pushq	%rbx
00000000000086e2	movq	%rdi,%rbx
00000000000086e5	leaq	0x0009fc44(%rip),%rsi
00000000000086ec	call	*0x0009fc3e(%rip)
00000000000086f2	leaq	0x0009fbe7(%rip),%rsi
00000000000086f9	movq	%rax,%rdi
00000000000086fc	call	*0x0009fbde(%rip)
0000000000008702	movq	%rax,%r14
0000000000008705	movq	0x0009db1c(%rip),%rsi
000000000000870c	movq	%rbx,%rdi
000000000000870f	call	*0x0007b9c3(%rip)
0000000000008715	movq	0x0009db14(%rip),%rsi
000000000000871c	movq	%r14,%rdi
000000000000871f	movq	%rax,%rdx
0000000000008722	movq	0x0007b9af(%rip),%rax
0000000000008729	popq	%rbx
000000000000872a	popq	%r14
000000000000872c	popq	%rbp
000000000000872d	jmp	*%rax
+[PBXGDB_MICommand nextSequenceNumber]:
000000000000872f	pushq	%rbp
0000000000008730	movq	%rsp,%rbp
0000000000008733	movq	0x000ae576(%rip),%rax
000000000000873a	leaq	0x01(%rax),%rcx
000000000000873e	movq	%rcx,0x000ae56b(%rip)
0000000000008745	popq	%rbp
0000000000008746	ret
-[PBXGDB_MICommand initWithSequenceNumber:]:
0000000000008747	pushq	%rbp
0000000000008748	movq	%rsp,%rbp
000000000000874b	pushq	%rbx
000000000000874c	subq	$0x18,%rsp
0000000000008750	movq	%rdx,%rbx
0000000000008753	movq	%rdi,0xe8(%rbp)
0000000000008757	movq	0x000a06da(%rip),%rax
000000000000875e	movq	%rax,0xf0(%rbp)
0000000000008762	movq	0x0009c307(%rip),%rsi
0000000000008769	leaq	0xe8(%rbp),%rdi
000000000000876d	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000008772	movq	0x000a6377(%rip),%rcx
0000000000008779	movq	%rbx,(%rax,%rcx)
000000000000877d	movq	0x000a6374(%rip),%rcx
0000000000008784	movq	$0xffffffff,(%rax,%rcx)
000000000000878c	movq	0x000a636d(%rip),%rcx
0000000000008793	movq	$0xffffffff,(%rax,%rcx)
000000000000879b	addq	$0x18,%rsp
000000000000879f	popq	%rbx
00000000000087a0	popq	%rbp
00000000000087a1	ret
-[PBXGDB_MICommand setTarget:]:
00000000000087a2	pushq	%rbp
00000000000087a3	movq	%rsp,%rbp
00000000000087a6	movq	%rdx,%rax
00000000000087a9	movq	%rdi,%rcx
00000000000087ac	movq	0x000a635d(%rip),%rdx
00000000000087b3	movq	%rax,%rdi
00000000000087b6	movq	%rcx,%rsi
00000000000087b9	popq	%rbp
00000000000087ba	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MICommand setFinishAction:]:
00000000000087bf	pushq	%rbp
00000000000087c0	movq	%rsp,%rbp
00000000000087c3	movq	0x000a634e(%rip),%rax
00000000000087ca	movq	%rdx,(%rdi,%rax)
00000000000087ce	popq	%rbp
00000000000087cf	ret
00000000000087d0	nop
00000000000087d1	nop
00000000000087d2	nop
00000000000087d3	nop
00000000000087d4	nop
00000000000087d5	nop
-[PBXGDB_MIController postCommand:]:
00000000000087d6	pushq	%rbp
00000000000087d7	movq	%rsp,%rbp
00000000000087da	movq	0x0009d97f(%rip),%rsi
00000000000087e1	xorl	%ecx,%ecx
00000000000087e3	popq	%rbp
00000000000087e4	jmp	*0x0007b8ee(%rip)
00000000000087ea	nop
00000000000087eb	nop
00000000000087ec	nop
00000000000087ed	nop
00000000000087ee	nop
00000000000087ef	nop
00000000000087f0	nop
00000000000087f1	nop
00000000000087f2	nop
00000000000087f3	nop
00000000000087f4	nop
00000000000087f5	nop
00000000000087f6	nop
-[PBXGDB_MIController postCommand:interruptIfNeeded:]:
00000000000087f7	pushq	%rbp
00000000000087f8	movq	%rsp,%rbp
00000000000087fb	pushq	%r15
00000000000087fd	pushq	%r14
00000000000087ff	pushq	%r12
0000000000008801	pushq	%rbx
0000000000008802	movq	%rdx,%r14
0000000000008805	movq	%rdi,%rbx
0000000000008808	testb	%cl,%cl
000000000000880a	jne	0x00008811
000000000000880c	movq	%rbx,%r15
000000000000880f	jmp	0x00008825
0000000000008811	movq	0x000a63f0(%rip),%rax
0000000000008818	cmpl	$0x00,(%rbx,%rax)
000000000000881c	movq	%rbx,%r15
000000000000881f	je	0x000088ef
0000000000008825	movq	0x0009db84(%rip),%rsi
000000000000882c	movq	%r14,%rdi
000000000000882f	movq	%rbx,%rdx
0000000000008832	call	*0x0007b8a0(%rip)
0000000000008838	movq	0x000a63f9(%rip),%rax
000000000000883f	cmpb	$0x00,(%r15,%rax)
0000000000008844	jne	0x0000886d
0000000000008846	movq	0x0009db6b(%rip),%rsi
000000000000884d	movq	%r14,%rdi
0000000000008850	call	*0x0007b882(%rip)
0000000000008856	testb	%al,%al
0000000000008858	je	0x0000886d
000000000000885a	movq	0x0009daff(%rip),%rsi
0000000000008861	movq	%r15,%rdi
0000000000008864	movq	%r14,%rdx
0000000000008867	call	*0x0007b86b(%rip)
000000000000886d	movq	0x000a63c4(%rip),%rax
0000000000008874	cmpb	$0x00,(%r15,%rax)
0000000000008879	jne	0x00008922
000000000000887f	movq	0x000a63c2(%rip),%rax
0000000000008886	movq	$0x00000000,(%r15,%rax)
000000000000888e	movq	0x000a63ab(%rip),%rax
0000000000008895	movq	$0x00000000,(%r15,%rax)
000000000000889d	movq	0x0009cea4(%rip),%rsi
00000000000088a4	movq	%r14,%rdi
00000000000088a7	call	*0x0007b82b(%rip)
00000000000088ad	cmpq	$0xff,%rax
00000000000088b1	je	0x000088e6
00000000000088b3	movq	0x000a636e(%rip),%rcx
00000000000088ba	cmpq	(%r15,%rcx),%rax
00000000000088be	je	0x000088e6
00000000000088c0	movq	%rax,(%r15,%rcx)
00000000000088c4	cmpq	$0x00,(%r15,%rcx)
00000000000088c9	jle	0x000088e6
00000000000088cb	movq	0x0009daf6(%rip),%rsi
00000000000088d2	movq	%r15,%rdi
00000000000088d5	movq	%r14,%rdx
00000000000088d8	popq	%rbx
00000000000088d9	popq	%r12
00000000000088db	popq	%r14
00000000000088dd	popq	%r15
00000000000088df	popq	%rbp
00000000000088e0	jmp	*0x0007b7f2(%rip)
00000000000088e6	movq	0x0009da9b(%rip),%rsi
00000000000088ed	jmp	0x000088d2
00000000000088ef	movq	0x0009daaa(%rip),%rsi
00000000000088f6	movq	%rbx,%rdi
00000000000088f9	movq	%r14,%rdx
00000000000088fc	call	*0x0007b7d6(%rip)
0000000000008902	movq	0x0009da9f(%rip),%rsi
0000000000008909	movq	%rbx,%rdi
000000000000890c	movl	$0x00000002,%edx
0000000000008911	movq	0x0007b7c0(%rip),%rax
0000000000008918	popq	%rbx
0000000000008919	popq	%r12
000000000000891b	popq	%r14
000000000000891d	popq	%r15
000000000000891f	popq	%rbp
0000000000008920	jmp	*%rax
0000000000008922	movq	0x0009d9ff(%rip),%rsi
0000000000008929	movq	0x0007b7a8(%rip),%r12
0000000000008930	movq	%r14,%rdi
0000000000008933	call	*%r12
0000000000008936	movq	0x0009fb13(%rip),%rbx
000000000000893d	movq	0x0009da7c(%rip),%rsi
0000000000008944	movq	%r14,%rdi
0000000000008947	call	*%r12
000000000000894a	leaq	0x000a7ac7(%rip),%rdx
0000000000008951	movq	0x0009c220(%rip),%rsi
0000000000008958	movq	%rbx,%rdi
000000000000895b	movq	%rax,%rcx
000000000000895e	xorb	%al,%al
0000000000008960	call	*%r12
0000000000008963	movq	%rax,%rbx
0000000000008966	leaq	0x0009f9c3(%rip),%rsi
000000000000896d	movq	%r14,%rdi
0000000000008970	call	*0x0009f9ba(%rip)
0000000000008976	movq	%rax,%rdi
0000000000008979	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000000897e	movq	0x0009d98b(%rip),%rsi
0000000000008985	movq	%r15,%rdi
0000000000008988	movq	%rbx,%rdx
000000000000898b	movq	%rax,%rcx
000000000000898e	call	*%r12
0000000000008991	movq	0x000a62a0(%rip),%rax
0000000000008998	movb	$0x00,(%r15,%rax)
000000000000899d	popq	%rbx
000000000000899e	popq	%r12
00000000000089a0	popq	%r14
00000000000089a2	popq	%r15
00000000000089a4	popq	%rbp
00000000000089a5	ret
-[PBXGDB_MICommand setMIController:]:
00000000000089a6	pushq	%rbp
00000000000089a7	movq	%rsp,%rbp
00000000000089aa	movq	%rdx,%rax
00000000000089ad	movq	%rdi,%rcx
00000000000089b0	movq	0x000a6151(%rip),%rdx
00000000000089b7	movq	%rax,%rdi
00000000000089ba	movq	%rcx,%rsi
00000000000089bd	popq	%rbp
00000000000089be	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MICommand waitsForOutput]:
00000000000089c3	pushq	%rbp
00000000000089c4	movq	%rsp,%rbp
00000000000089c7	movl	$0x00000001,%eax
00000000000089cc	popq	%rbp
00000000000089cd	ret
00000000000089ce	nop
00000000000089cf	nop
00000000000089d0	nop
00000000000089d1	nop
00000000000089d2	nop
00000000000089d3	nop
00000000000089d4	nop
00000000000089d5	nop
00000000000089d6	nop
00000000000089d7	nop
00000000000089d8	nop
00000000000089d9	nop
00000000000089da	nop
00000000000089db	nop
-[PBXGDB_MIController saveOutstandingCommand:]:
00000000000089dc	pushq	%rbp
00000000000089dd	movq	%rsp,%rbp
00000000000089e0	movq	0x000a6201(%rip),%rax
00000000000089e7	movq	(%rdi,%rax),%rdi
00000000000089eb	movq	0x0009f90e(%rip),%rax
00000000000089f2	leaq	0x0009f907(%rip),%rsi
00000000000089f9	popq	%rbp
00000000000089fa	jmp	*%rax
-[PBXGDB_MICommand willExecute]:
00000000000089fc	pushq	%rbp
00000000000089fd	movq	%rsp,%rbp
0000000000008a00	popq	%rbp
0000000000008a01	ret
-[PBXGDB_MICommand threadIdContext]:
0000000000008a02	pushq	%rbp
0000000000008a03	movq	%rsp,%rbp
0000000000008a06	movq	0x000a60eb(%rip),%rax
0000000000008a0d	movq	(%rdi,%rax),%rax
0000000000008a11	popq	%rbp
0000000000008a12	ret
-[PBXGDB_MICommand frameIndexContext]:
0000000000008a13	pushq	%rbp
0000000000008a14	movq	%rsp,%rbp
0000000000008a17	movq	0x000a60e2(%rip),%rax
0000000000008a1e	movq	(%rdi,%rax),%rax
0000000000008a22	popq	%rbp
0000000000008a23	ret
-[PBXGDB_MICommand needsUnwindOnSignal]:
0000000000008a24	pushq	%rbp
0000000000008a25	movq	%rsp,%rbp
0000000000008a28	xorl	%eax,%eax
0000000000008a2a	popq	%rbp
0000000000008a2b	ret
-[PBXGDB_MICommand GDBCommandStringForExecution]:
0000000000008a2c	pushq	%rbp
0000000000008a2d	movq	%rsp,%rbp
0000000000008a30	pushq	%rbx
0000000000008a31	pushq	%rax
0000000000008a32	movq	%rdi,%rbx
0000000000008a35	movq	0x0009d804(%rip),%rsi
0000000000008a3c	call	*0x0007b696(%rip)
0000000000008a42	movq	0x0009d7ff(%rip),%rsi
0000000000008a49	movq	%rbx,%rdi
0000000000008a4c	movq	%rax,%rdx
0000000000008a4f	movq	0x0007b682(%rip),%rax
0000000000008a56	addq	$0x08,%rsp
0000000000008a5a	popq	%rbx
0000000000008a5b	popq	%rbp
0000000000008a5c	jmp	*%rax
-[PBXGDB_MIGDBVersionCommand GDBCommandString]:
0000000000008a5e	pushq	%rbp
0000000000008a5f	movq	%rsp,%rbp
0000000000008a62	leaq	0x000aa6ef(%rip),%rax
0000000000008a69	popq	%rbp
0000000000008a6a	ret
-[PBXGDB_MICommand sequenceNumber]:
0000000000008a6b	pushq	%rbp
0000000000008a6c	movq	%rsp,%rbp
0000000000008a6f	movq	0x000a607a(%rip),%rax
0000000000008a76	movq	(%rdi,%rax),%rax
0000000000008a7a	popq	%rbp
0000000000008a7b	ret
0000000000008a7c	nop
0000000000008a7d	nop
0000000000008a7e	nop
0000000000008a7f	nop
0000000000008a80	nop
0000000000008a81	nop
0000000000008a82	nop
0000000000008a83	nop
0000000000008a84	nop
0000000000008a85	nop
0000000000008a86	nop
0000000000008a87	nop
0000000000008a88	nop
0000000000008a89	nop
0000000000008a8a	nop
-[PBXGDB_MIController _sendAndLogCommandString:withLogComment:]:
0000000000008a8b	pushq	%rbp
0000000000008a8c	movq	%rsp,%rbp
0000000000008a8f	pushq	%r15
0000000000008a91	pushq	%r14
0000000000008a93	pushq	%r12
0000000000008a95	pushq	%rbx
0000000000008a96	movq	%rcx,%r15
0000000000008a99	movq	%rdx,%r14
0000000000008a9c	movq	%rdi,%rbx
0000000000008a9f	movq	0x0009c012(%rip),%rsi
0000000000008aa6	movq	0x0007b62b(%rip),%r12
0000000000008aad	call	*%r12
0000000000008ab0	movq	0x0009d841(%rip),%rsi
0000000000008ab7	movq	%rax,%rdi
0000000000008aba	movq	%r14,%rdx
0000000000008abd	call	*%r12
0000000000008ac0	testq	%r15,%r15
0000000000008ac3	je	0x00008aee
0000000000008ac5	movq	0x0009bfec(%rip),%rsi
0000000000008acc	movq	0x0007b605(%rip),%r12
0000000000008ad3	movq	%rbx,%rdi
0000000000008ad6	call	*%r12
0000000000008ad9	movq	0x0009c238(%rip),%rsi
0000000000008ae0	movq	%rax,%rdi
0000000000008ae3	movq	%r15,%rdx
0000000000008ae6	movl	$0x00000001,%ecx
0000000000008aeb	call	*%r12
0000000000008aee	movq	0x0009bfc3(%rip),%rsi
0000000000008af5	movq	0x0007b5dc(%rip),%r15
0000000000008afc	movq	%rbx,%rdi
0000000000008aff	call	*%r15
0000000000008b02	movq	0x0009d1df(%rip),%rsi
0000000000008b09	movq	%rax,%rdi
0000000000008b0c	call	*%r15
0000000000008b0f	testb	%al,%al
0000000000008b11	jne	0x00008b1c
0000000000008b13	popq	%rbx
0000000000008b14	popq	%r12
0000000000008b16	popq	%r14
0000000000008b18	popq	%r15
0000000000008b1a	popq	%rbp
0000000000008b1b	ret
0000000000008b1c	movq	0x0009bf95(%rip),%rsi
0000000000008b23	movq	%rbx,%rdi
0000000000008b26	call	*0x0007b5ac(%rip)
0000000000008b2c	movq	0x0009c2cd(%rip),%rsi
0000000000008b33	movq	%rax,%rdi
0000000000008b36	call	*0x0007b59c(%rip)
0000000000008b3c	movq	0x0009c595(%rip),%rsi
0000000000008b43	movq	%rax,%rdi
0000000000008b46	call	*0x0007b58c(%rip)
0000000000008b4c	movq	0x0009d7ad(%rip),%rsi
0000000000008b53	movq	%rax,%rdi
0000000000008b56	movq	%r14,%rdx
0000000000008b59	movq	0x0007b578(%rip),%rax
0000000000008b60	popq	%rbx
0000000000008b61	popq	%r12
0000000000008b63	popq	%r14
0000000000008b65	popq	%r15
0000000000008b67	popq	%rbp
0000000000008b68	jmp	*%rax
-[PBXGDB_Adaptor(TraceLogging) logStringToGDB:]:
0000000000008b6a	pushq	%rbp
0000000000008b6b	movq	%rsp,%rbp
0000000000008b6e	pushq	%rbx
0000000000008b6f	pushq	%rax
0000000000008b70	movq	%rdx,%rbx
0000000000008b73	movq	0x0009c16e(%rip),%rsi
0000000000008b7a	call	*0x0007b558(%rip)
0000000000008b80	movq	0x0009c169(%rip),%rsi
0000000000008b87	movq	%rax,%rdi
0000000000008b8a	call	*0x0007b548(%rip)
0000000000008b90	leaq	0x000a6e81(%rip),%rdx
0000000000008b97	movq	0x0009c162(%rip),%rsi
0000000000008b9e	movq	%rax,%rdi
0000000000008ba1	movq	%rbx,%rcx
0000000000008ba4	xorb	%al,%al
0000000000008ba6	movq	0x0007b52b(%rip),%r8
0000000000008bad	addq	$0x08,%rsp
0000000000008bb1	popq	%rbx
0000000000008bb2	popq	%rbp
0000000000008bb3	jmp	*%r8
-[PBXLSAdaptor taskIsRunning]:
0000000000008bb6	pushq	%rbp
0000000000008bb7	movq	%rsp,%rbp
0000000000008bba	movq	0x000a689f(%rip),%rax
0000000000008bc1	movsbl	(%rdi,%rax),%eax
0000000000008bc5	popq	%rbp
0000000000008bc6	ret
-[PBXGDB_MISetAutoRaiseSymbols GDBCommandString]:
0000000000008bc7	pushq	%rbp
0000000000008bc8	movq	%rsp,%rbp
0000000000008bcb	leaq	0x000aa5e6(%rip),%rax
0000000000008bd2	popq	%rbp
0000000000008bd3	ret
-[PBXGDB_Adaptor _unsetOldEnvironment:setNewEnvironment:]:
0000000000008bd4	pushq	%rbp
0000000000008bd5	movq	%rsp,%rbp
0000000000008bd8	pushq	%r15
0000000000008bda	pushq	%r14
0000000000008bdc	pushq	%r13
0000000000008bde	pushq	%r12
0000000000008be0	pushq	%rbx
0000000000008be1	pushq	%rax
0000000000008be2	movq	%rcx,%r15
0000000000008be5	movq	%rdi,0xd0(%rbp)
0000000000008be9	testq	%rdx,%rdx
0000000000008bec	je	0x00008c7a
0000000000008bf2	movq	0x0009c317(%rip),%rsi
0000000000008bf9	movq	0x0007b4d8(%rip),%r14
0000000000008c00	movq	%rdx,%rdi
0000000000008c03	call	*%r14
0000000000008c06	movq	%rax,%rbx
0000000000008c09	movq	0x0009bee8(%rip),%rsi
0000000000008c10	movq	%rbx,%rdi
0000000000008c13	call	*%r14
0000000000008c16	movq	%rax,%r12
0000000000008c19	testq	%r12,%r12
0000000000008c1c	je	0x00008c7a
0000000000008c1e	movq	0x0007b4b3(%rip),%r14
0000000000008c25	movq	0x0009f8dc(%rip),%rdi
0000000000008c2c	movq	0x0009be4d(%rip),%rsi
0000000000008c33	call	*%r14
0000000000008c36	movq	%rax,%r13
0000000000008c39	movq	%r13,%rdi
0000000000008c3c	movq	0x0009c2d5(%rip),%rsi
0000000000008c43	movq	%r12,%rdx
0000000000008c46	call	*%r14
0000000000008c49	movq	0xd0(%rbp),%rax
0000000000008c4d	movq	0x000a5a24(%rip),%rcx
0000000000008c54	movq	(%rax,%rcx),%rdi
0000000000008c58	movq	0x0009be69(%rip),%rsi
0000000000008c5f	movq	%r13,%rdx
0000000000008c62	call	*%r14
0000000000008c65	movq	%rbx,%rdi
0000000000008c68	movq	0x0009be89(%rip),%rsi
0000000000008c6f	call	*%r14
0000000000008c72	movq	%rax,%r12
0000000000008c75	testq	%r12,%r12
0000000000008c78	jne	0x00008c25
0000000000008c7a	testq	%r15,%r15
0000000000008c7d	je	0x00008d21
0000000000008c83	movq	0x0009c286(%rip),%rsi
0000000000008c8a	movq	0x0007b447(%rip),%r14
0000000000008c91	movq	%r15,%rdi
0000000000008c94	call	*%r14
0000000000008c97	movq	%rax,%rbx
0000000000008c9a	movq	0x0009be57(%rip),%rsi
0000000000008ca1	movq	%rbx,%rdi
0000000000008ca4	call	*%r14
0000000000008ca7	movq	%rax,%r12
0000000000008caa	testq	%r12,%r12
0000000000008cad	je	0x00008d21
0000000000008caf	movq	0x0007b422(%rip),%r14
0000000000008cb6	movq	0x0009f853(%rip),%rdi
0000000000008cbd	movq	0x0009bdbc(%rip),%rsi
0000000000008cc4	call	*%r14
0000000000008cc7	movq	%rax,%r13
0000000000008cca	movq	%r15,%rdi
0000000000008ccd	leaq	0x0009f67c(%rip),%rsi
0000000000008cd4	movq	%r12,%rdx
0000000000008cd7	call	*0x0009f673(%rip)
0000000000008cdd	movq	%r13,%rdi
0000000000008ce0	movq	0x0009c239(%rip),%rsi
0000000000008ce7	movq	%r12,%rdx
0000000000008cea	movq	%rax,%rcx
0000000000008ced	call	*%r14
0000000000008cf0	movq	0xd0(%rbp),%rax
0000000000008cf4	movq	0x000a597d(%rip),%rcx
0000000000008cfb	movq	(%rax,%rcx),%rdi
0000000000008cff	movq	0x0009bdc2(%rip),%rsi
0000000000008d06	movq	%r13,%rdx
0000000000008d09	call	*%r14
0000000000008d0c	movq	%rbx,%rdi
0000000000008d0f	movq	0x0009bde2(%rip),%rsi
0000000000008d16	call	*%r14
0000000000008d19	movq	%rax,%r12
0000000000008d1c	testq	%r12,%r12
0000000000008d1f	jne	0x00008cb6
0000000000008d21	addq	$0x08,%rsp
0000000000008d25	popq	%rbx
0000000000008d26	popq	%r12
0000000000008d28	popq	%r13
0000000000008d2a	popq	%r14
0000000000008d2c	popq	%r15
0000000000008d2e	popq	%rbp
0000000000008d2f	ret
-[PBXGDB_MISetEnvCommand setEnvVariable:toValue:]:
0000000000008d30	pushq	%rbp
0000000000008d31	movq	%rsp,%rbp
0000000000008d34	pushq	%r15
0000000000008d36	pushq	%r14
0000000000008d38	pushq	%rbx
0000000000008d39	pushq	%rax
0000000000008d3a	movq	%rcx,%r15
0000000000008d3d	movq	%rdx,%rbx
0000000000008d40	movq	%rdi,%r14
0000000000008d43	movq	0x0009f706(%rip),%rdi
0000000000008d4a	leaq	0x0009f58f(%rip),%rsi
0000000000008d51	call	*0x0009f589(%rip)
0000000000008d57	movq	0x0009bf5a(%rip),%rsi
0000000000008d5e	leaq	0x000aa313(%rip),%rdx
0000000000008d65	movq	%rax,%rdi
0000000000008d68	movq	%rbx,%rcx
0000000000008d6b	movq	%r15,%r8
0000000000008d6e	xorb	%al,%al
0000000000008d70	call	*0x0007b362(%rip)
0000000000008d76	leaq	0x000a5db3(%rip),%rcx
0000000000008d7d	movq	(%rcx),%rdx
0000000000008d80	movq	%rax,%rdi
0000000000008d83	movq	%r14,%rsi
0000000000008d86	addq	$0x08,%rsp
0000000000008d8a	popq	%rbx
0000000000008d8b	popq	%r14
0000000000008d8d	popq	%r15
0000000000008d8f	popq	%rbp
0000000000008d90	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MICommand GDBCommandString]:
0000000000008d95	pushq	%rbp
0000000000008d96	movq	%rsp,%rbp
0000000000008d99	movq	0x000a5d90(%rip),%rax
0000000000008da0	movq	(%rdi,%rax),%rcx
0000000000008da4	leaq	0x000a8a8d(%rip),%rax
0000000000008dab	testq	%rcx,%rcx
0000000000008dae	cmovneq	%rcx,%rax
0000000000008db2	popq	%rbp
0000000000008db3	ret
-[PBXGDB_Adaptor _doShlibControl]:
0000000000008db4	pushq	%rbp
0000000000008db5	movq	%rsp,%rbp
0000000000008db8	movl	$0x00000001,%eax
0000000000008dbd	popq	%rbp
0000000000008dbe	ret
-[PBXGDB_Adaptor sequenceMICommand:]:
0000000000008dbf	pushq	%rbp
0000000000008dc0	movq	%rsp,%rbp
0000000000008dc3	pushq	%r15
0000000000008dc5	pushq	%r14
0000000000008dc7	pushq	%rbx
0000000000008dc8	pushq	%rax
0000000000008dc9	movq	%rdx,%r15
0000000000008dcc	movq	%rdi,%r14
0000000000008dcf	movq	0x0009f79a(%rip),%rdi
0000000000008dd6	leaq	0x0009f503(%rip),%rsi
0000000000008ddd	call	*0x0009f4fd(%rip)
0000000000008de3	movq	0x0009bc86(%rip),%rsi
0000000000008dea	movq	%rax,%rdi
0000000000008ded	call	*0x0007b2e5(%rip)
0000000000008df3	movq	%rax,%rbx
0000000000008df6	movq	0x0009c22b(%rip),%rsi
0000000000008dfd	movq	%rbx,%rdi
0000000000008e00	movq	%r15,%rdx
0000000000008e03	call	*0x0007b2cf(%rip)
0000000000008e09	movq	0x0009bfc0(%rip),%rsi
0000000000008e10	movq	%r14,%rdi
0000000000008e13	call	*0x0007b2bf(%rip)
0000000000008e19	movq	0x0009bfc0(%rip),%rsi
0000000000008e20	movq	%rax,%rdi
0000000000008e23	movq	%rbx,%rdx
0000000000008e26	movq	0x0007b2ab(%rip),%rax
0000000000008e2d	addq	$0x08,%rsp
0000000000008e31	popq	%rbx
0000000000008e32	popq	%r14
0000000000008e34	popq	%r15
0000000000008e36	popq	%rbp
0000000000008e37	jmp	*%rax
-[PBXGDB_GenericMICommandSequence setMiCommand:]:
0000000000008e39	pushq	%rbp
0000000000008e3a	movq	%rsp,%rbp
0000000000008e3d	movq	%rdx,%rax
0000000000008e40	movq	%rdi,%rcx
0000000000008e43	movq	0x000a59f6(%rip),%rdx
0000000000008e4a	movq	%rax,%rdi
0000000000008e4d	movq	%rcx,%rsi
0000000000008e50	popq	%rbp
0000000000008e51	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_SequenceController enqueueCommandSequence:]:
0000000000008e56	pushq	%rbp
0000000000008e57	movq	%rsp,%rbp
0000000000008e5a	movq	0x0009dbf7(%rip),%rsi
0000000000008e61	movq	$0x7fffffffffffffff,%rcx
0000000000008e6b	popq	%rbp
0000000000008e6c	jmp	*0x0007b266(%rip)
-[PBXGDB_Adaptor miController]:
0000000000008e72	pushq	%rbp
0000000000008e73	movq	%rsp,%rbp
0000000000008e76	movq	0x000a57fb(%rip),%rax
0000000000008e7d	movq	(%rdi,%rax),%rax
0000000000008e81	popq	%rbp
0000000000008e82	ret
0000000000008e83	nop
0000000000008e84	nop
0000000000008e85	nop
0000000000008e86	nop
0000000000008e87	nop
0000000000008e88	nop
0000000000008e89	nop
0000000000008e8a	nop
-[PBXGDB_MIController miState]:
0000000000008e8b	pushq	%rbp
0000000000008e8c	movq	%rsp,%rbp
0000000000008e8f	movq	0x000a5d72(%rip),%rax
0000000000008e96	movl	(%rdi,%rax),%eax
0000000000008e99	popq	%rbp
0000000000008e9a	ret
0000000000008e9b	nop
0000000000008e9c	nop
-[PBXGDB_SequenceController _handlingInterrupt]:
0000000000008e9d	pushq	%rbp
0000000000008e9e	movq	%rsp,%rbp
0000000000008ea1	movq	0x000a60e0(%rip),%rax
0000000000008ea8	movsbl	(%rdi,%rax),%eax
0000000000008eac	popq	%rbp
0000000000008ead	ret
-[PBXGDB_SequenceController _enqueueSequence:inQueue:]:
0000000000008eae	pushq	%rbp
0000000000008eaf	movq	%rsp,%rbp
0000000000008eb2	movq	0x0009db77(%rip),%rsi
0000000000008eb9	movq	$0x7fffffffffffffff,%r8
0000000000008ec3	popq	%rbp
0000000000008ec4	jmp	*0x0007b20e(%rip)
-[PBXGDB_CommandSequence canPurgeTransientSequences]:
0000000000008eca	pushq	%rbp
0000000000008ecb	movq	%rsp,%rbp
0000000000008ece	movq	0x000a5963(%rip),%rax
0000000000008ed5	movb	(%rdi,%rax),%al
0000000000008ed8	movsbl	%al,%eax
0000000000008edb	popq	%rbp
0000000000008edc	ret
0000000000008edd	nop
0000000000008ede	nop
0000000000008edf	nop
0000000000008ee0	nop
0000000000008ee1	nop
0000000000008ee2	nop
0000000000008ee3	nop
0000000000008ee4	nop
0000000000008ee5	nop
0000000000008ee6	nop
0000000000008ee7	nop
0000000000008ee8	nop
0000000000008ee9	nop
0000000000008eea	nop
0000000000008eeb	nop
-[PBXGDB_SequenceController _logMessage:forSequence:]:
0000000000008eec	pushq	%rbp
0000000000008eed	movq	%rsp,%rbp
0000000000008ef0	pushq	%r15
0000000000008ef2	pushq	%r14
0000000000008ef4	pushq	%r12
0000000000008ef6	pushq	%rbx
0000000000008ef7	movq	%rcx,%r12
0000000000008efa	movq	%rdx,%r14
0000000000008efd	movq	%rdi,%r15
0000000000008f00	movq	0x0009bbb1(%rip),%rsi
0000000000008f07	movq	0x0007b1ca(%rip),%rbx
0000000000008f0e	call	*%rbx
0000000000008f10	movq	0x0009d751(%rip),%rsi
0000000000008f17	movq	%rax,%rdi
0000000000008f1a	call	*%rbx
0000000000008f1c	testb	%al,%al
0000000000008f1e	je	0x00008fc4
0000000000008f24	testq	%r12,%r12
0000000000008f27	je	0x00008f91
0000000000008f29	movq	0x0009f520(%rip),%rdi
0000000000008f30	leaq	0x0009f3a9(%rip),%rsi
0000000000008f37	call	*0x0009f3a3(%rip)
0000000000008f3d	movq	%rax,%rbx
0000000000008f40	movq	0x0009ce89(%rip),%rsi
0000000000008f47	movq	%r12,%rdi
0000000000008f4a	call	*0x0007b188(%rip)
0000000000008f50	leaq	0x000aae21(%rip),%rdx
0000000000008f57	movq	0x0009bd5a(%rip),%rsi
0000000000008f5e	movq	%rbx,%rdi
0000000000008f61	movq	%r14,%rcx
0000000000008f64	movq	%rax,%r8
0000000000008f67	xorb	%al,%al
0000000000008f69	call	*0x0007b169(%rip)
0000000000008f6f	movq	%rax,%rbx
0000000000008f72	movq	0x0009bb3f(%rip),%rsi
0000000000008f79	movq	%r15,%rdi
0000000000008f7c	call	*0x0007b156(%rip)
0000000000008f82	movq	0x0009bd8f(%rip),%rsi
0000000000008f89	movq	%rax,%rdi
0000000000008f8c	movq	%rbx,%rdx
0000000000008f8f	jmp	0x00008fae
0000000000008f91	movq	0x0009bb20(%rip),%rsi
0000000000008f98	movq	%r15,%rdi
0000000000008f9b	call	*0x0007b137(%rip)
0000000000008fa1	movq	0x0009bd70(%rip),%rsi
0000000000008fa8	movq	%rax,%rdi
0000000000008fab	movq	%r14,%rdx
0000000000008fae	movl	$0x00000001,%ecx
0000000000008fb3	movq	0x0007b11e(%rip),%rax
0000000000008fba	popq	%rbx
0000000000008fbb	popq	%r12
0000000000008fbd	popq	%r14
0000000000008fbf	popq	%r15
0000000000008fc1	popq	%rbp
0000000000008fc2	jmp	*%rax
0000000000008fc4	popq	%rbx
0000000000008fc5	popq	%r12
0000000000008fc7	popq	%r14
0000000000008fc9	popq	%r15
0000000000008fcb	popq	%rbp
0000000000008fcc	ret
0000000000008fcd	nop
0000000000008fce	nop
-[PBXGDB_SequenceController _executeNextSequence]:
0000000000008fcf	pushq	%rbp
0000000000008fd0	movq	%rsp,%rbp
0000000000008fd3	pushq	%r15
0000000000008fd5	pushq	%r14
0000000000008fd7	pushq	%rbx
0000000000008fd8	pushq	%rax
0000000000008fd9	movq	%rdi,%rbx
0000000000008fdc	movq	0x0009d4bd(%rip),%rsi
0000000000008fe3	call	*0x0007b0ef(%rip)
0000000000008fe9	testq	%rax,%rax
0000000000008fec	jne	0x000091ba
0000000000008ff2	movq	0x0009d9ff(%rip),%rsi
0000000000008ff9	movq	%rbx,%rdi
0000000000008ffc	call	*0x0007b0d6(%rip)
0000000000009002	movq	0x000a5f4f(%rip),%rax
0000000000009009	movq	(%rbx,%rax),%rdi
000000000000900d	leaq	0x0009f2fc(%rip),%rsi
0000000000009014	call	*0x0009f2f6(%rip)
000000000000901a	testq	%rax,%rax
000000000000901d	je	0x00009039
000000000000901f	movq	0x000a5f32(%rip),%rax
0000000000009026	movq	(%rbx,%rax),%rdx
000000000000902a	movq	0x0009d9cf(%rip),%rsi
0000000000009031	movq	%rbx,%rdi
0000000000009034	jmp	0x00009181
0000000000009039	movq	0x0009ba78(%rip),%rsi
0000000000009040	movq	0x0007b091(%rip),%r14
0000000000009047	movq	%rbx,%rdi
000000000000904a	call	*%r14
000000000000904d	movq	0x0009ba6c(%rip),%rsi
0000000000009054	movq	%rax,%rdi
0000000000009057	call	*%r14
000000000000905a	movq	0x0009d9a7(%rip),%rsi
0000000000009061	movq	%rax,%rdi
0000000000009064	call	*%r14
0000000000009067	testl	%eax,%eax
0000000000009069	je	0x000091ba
000000000000906f	movq	0x0009d08a(%rip),%rsi
0000000000009076	movq	%rbx,%rdi
0000000000009079	call	*0x0007b059(%rip)
000000000000907f	testb	%al,%al
0000000000009081	je	0x00009118
0000000000009087	movq	0x000a5ee2(%rip),%rax
000000000000908e	movq	(%rbx,%rax),%rdi
0000000000009092	leaq	0x0009f277(%rip),%rsi
0000000000009099	call	*0x0009f271(%rip)
000000000000909f	testq	%rax,%rax
00000000000090a2	je	0x000090b0
00000000000090a4	movq	0x000a5ec5(%rip),%rax
00000000000090ab	jmp	0x00009026
00000000000090b0	movq	0x0009d919(%rip),%rsi
00000000000090b7	leaq	0x000aad3a(%rip),%rdx
00000000000090be	movq	%rbx,%rdi
00000000000090c1	xorl	%ecx,%ecx
00000000000090c3	call	*0x0007b00f(%rip)
00000000000090c9	movq	0x0009d940(%rip),%rsi
00000000000090d0	movq	%rbx,%rdi
00000000000090d3	xorl	%edx,%edx
00000000000090d5	call	*0x0007affd(%rip)
00000000000090db	movq	0x0009b9d6(%rip),%rsi
00000000000090e2	movq	%rbx,%rdi
00000000000090e5	call	*0x0007afed(%rip)
00000000000090eb	movq	0x0009b9ce(%rip),%rsi
00000000000090f2	movq	%rax,%rdi
00000000000090f5	call	*0x0007afdd(%rip)
00000000000090fb	movq	0x0009d916(%rip),%rsi
0000000000009102	movq	%rax,%rdi
0000000000009105	movq	0x0007afcc(%rip),%rax
000000000000910c	addq	$0x08,%rsp
0000000000009110	popq	%rbx
0000000000009111	popq	%r14
0000000000009113	popq	%r15
0000000000009115	popq	%rbp
0000000000009116	jmp	*%rax
0000000000009118	movq	0x000a5e41(%rip),%rax
000000000000911f	movq	(%rbx,%rax),%rdi
0000000000009123	leaq	0x0009f1e6(%rip),%rsi
000000000000912a	call	*0x0009f1e0(%rip)
0000000000009130	testq	%rax,%rax
0000000000009133	je	0x00009191
0000000000009135	movq	0x000a5e24(%rip),%rax
000000000000913c	movq	(%rbx,%rax),%rdi
0000000000009140	movq	0x0009d759(%rip),%rsi
0000000000009147	movq	0x0007af8a(%rip),%r15
000000000000914e	call	*%r15
0000000000009151	movq	%rax,%r14
0000000000009154	movq	0x0009d8c5(%rip),%rsi
000000000000915b	movq	%rbx,%rdi
000000000000915e	movq	%r14,%rdx
0000000000009161	call	*%r15
0000000000009164	testb	%al,%al
0000000000009166	jne	0x00009174
0000000000009168	movq	0x000a5df1(%rip),%rax
000000000000916f	jmp	0x00009026
0000000000009174	movq	0x0009c855(%rip),%rsi
000000000000917b	movq	%rbx,%rdi
000000000000917e	movq	%r14,%rdx
0000000000009181	addq	$0x08,%rsp
0000000000009185	popq	%rbx
0000000000009186	popq	%r14
0000000000009188	popq	%r15
000000000000918a	popq	%rbp
000000000000918b	jmp	*0x0007af47(%rip)
0000000000009191	movq	0x000a5dd0(%rip),%rax
0000000000009198	movq	(%rbx,%rax),%rdi
000000000000919c	leaq	0x0009f16d(%rip),%rsi
00000000000091a3	call	*0x0009f167(%rip)
00000000000091a9	testq	%rax,%rax
00000000000091ac	je	0x000091ba
00000000000091ae	movq	0x000a5db3(%rip),%rax
00000000000091b5	jmp	0x00009026
00000000000091ba	addq	$0x08,%rsp
00000000000091be	popq	%rbx
00000000000091bf	popq	%r14
00000000000091c1	popq	%r15
00000000000091c3	popq	%rbp
00000000000091c4	ret
00000000000091c5	nop
00000000000091c6	nop
00000000000091c7	nop
00000000000091c8	nop
00000000000091c9	nop
00000000000091ca	nop
00000000000091cb	nop
00000000000091cc	nop
00000000000091cd	nop
00000000000091ce	nop
-[PBXGDB_SequenceController executingSequence]:
00000000000091cf	pushq	%rbp
00000000000091d0	movq	%rsp,%rbp
00000000000091d3	movq	0x000a5da6(%rip),%rax
00000000000091da	movq	(%rdi,%rax),%rax
00000000000091de	popq	%rbp
00000000000091df	ret
00000000000091e0	nop
00000000000091e1	nop
-[PBXGDB_SequenceController _purgeTransientSequencesIfPossible]:
00000000000091e2	pushq	%rbp
00000000000091e3	movq	%rsp,%rbp
00000000000091e6	pushq	%rbx
00000000000091e7	subq	$0x48,%rsp
00000000000091eb	movq	%rdi,%rbx
00000000000091ee	movq	%rbx,0xf0(%rbp)
00000000000091f2	movq	%rsi,0xe8(%rbp)
00000000000091f6	movq	0x000a5d7b(%rip),%rax
00000000000091fd	movq	(%rbx,%rax),%rdi
0000000000009201	leaq	0x0009f108(%rip),%rsi
0000000000009208	call	*0x0009f102(%rip)
000000000000920e	testq	%rax,%rax
0000000000009211	je	0x00009308
0000000000009217	movq	0x000a5d5a(%rip),%rax
000000000000921e	movq	(%rbx,%rax),%rdi
0000000000009222	leaq	0x0009f0f7(%rip),%rsi
0000000000009229	xorl	%edx,%edx
000000000000922b	call	*0x0009f0ef(%rip)
0000000000009231	movq	%rax,%rbx
0000000000009234	movq	0x0009d785(%rip),%rsi
000000000000923b	movq	%rbx,%rdi
000000000000923e	call	*0x0007ae94(%rip)
0000000000009244	testb	%al,%al
0000000000009246	jne	0x0000927d
0000000000009248	leaq	0x00057d7e(%rip),%rax
000000000000924f	movq	%rax,(%rsp)
0000000000009253	leaq	0xf0(%rbp),%rdi
0000000000009257	leaq	0xe8(%rbp),%rsi
000000000000925b	leaq	0x00057ca2(%rip),%rdx
0000000000009262	leaq	0x00057cdb(%rip),%rcx
0000000000009269	leaq	0x000a65c8(%rip),%r9
0000000000009270	movl	$0x000000a0,%r8d
0000000000009276	xorb	%al,%al
0000000000009278	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000000927d	movq	0x0007ae0c(%rip),%rax
0000000000009284	movq	%rax,0xb8(%rbp)
0000000000009288	movl	$0x42000000,0xc0(%rbp)
000000000000928f	movl	$0x00000000,0xc4(%rbp)
0000000000009296	leaq	0x00003942(%rip),%rax
000000000000929d	movq	%rax,0xc8(%rbp)
00000000000092a1	leaq	_OBJC_METACLASS_$_PBXGDB_NewBreakpointSequence(%rip),%rax
00000000000092a8	movq	%rax,0xd0(%rbp)
00000000000092ac	leaq	0xd8(%rbp),%rsi
00000000000092b0	movq	%rbx,%rdi
00000000000092b3	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
00000000000092b8	leaq	0xe0(%rbp),%rsi
00000000000092bc	movq	0xf0(%rbp),%rdi
00000000000092c0	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
00000000000092c5	leaq	0xb8(%rbp),%rbx
00000000000092c9	movq	0x000a5c88(%rip),%rax
00000000000092d0	movq	0xf0(%rbp),%rcx
00000000000092d4	movq	(%rcx,%rax),%rsi
00000000000092d8	movq	%rbx,%rdi
00000000000092db	call	*0xc8(%rbp)
00000000000092de	movq	0x000a5c7b(%rip),%rax
00000000000092e5	movq	0xf0(%rbp),%rcx
00000000000092e9	movq	(%rcx,%rax),%rsi
00000000000092ed	movq	%rbx,%rdi
00000000000092f0	call	*0xc8(%rbp)
00000000000092f3	movq	0x000a5c76(%rip),%rax
00000000000092fa	movq	0xf0(%rbp),%rcx
00000000000092fe	movq	(%rcx,%rax),%rsi
0000000000009302	movq	%rbx,%rdi
0000000000009305	call	*0xc8(%rbp)
0000000000009308	addq	$0x48,%rsp
000000000000930c	popq	%rbx
000000000000930d	popq	%rbp
000000000000930e	ret
000000000000930f	nop
0000000000009310	nop
0000000000009311	nop
0000000000009312	nop
0000000000009313	nop
0000000000009314	nop
0000000000009315	nop
0000000000009316	nop
0000000000009317	nop
0000000000009318	nop
0000000000009319	nop
000000000000931a	nop
000000000000931b	nop
000000000000931c	nop
000000000000931d	nop
-[PBXGDB_SequenceController _executeNextSequenceFromQueue:]:
000000000000931e	pushq	%rbp
000000000000931f	movq	%rsp,%rbp
0000000000009322	pushq	%r15
0000000000009324	pushq	%r14
0000000000009326	pushq	%r13
0000000000009328	pushq	%r12
000000000000932a	pushq	%rbx
000000000000932b	pushq	%rax
000000000000932c	movq	%rdx,%rbx
000000000000932f	movq	%rdi,%r14
0000000000009332	leaq	0x0009efd7(%rip),%rsi
0000000000009339	movq	%rbx,%rdi
000000000000933c	call	*0x0009efce(%rip)
0000000000009342	testq	%rax,%rax
0000000000009345	je	0x00009450
000000000000934b	leaq	0x0009efce(%rip),%rsi
0000000000009352	movq	%rbx,%rdi
0000000000009355	xorl	%edx,%edx
0000000000009357	call	*0x0009efc3(%rip)
000000000000935d	movq	%rax,%r15
0000000000009360	movq	0x0009d641(%rip),%rsi
0000000000009367	movq	0x0007ad6a(%rip),%r13
000000000000936e	movq	%r14,%rdi
0000000000009371	movq	%r15,%rdx
0000000000009374	call	*%r13
0000000000009377	movq	0x0009b86a(%rip),%rsi
000000000000937e	movq	%rbx,%rdi
0000000000009381	xorl	%edx,%edx
0000000000009383	call	*%r13
0000000000009386	movq	0x0009ba4b(%rip),%rsi
000000000000938d	movq	%r15,%rdi
0000000000009390	movq	%r14,%rdx
0000000000009393	call	*%r13
0000000000009396	leaq	0x000aaa3b(%rip),%rdx
000000000000939d	movq	0x0009d62c(%rip),%rsi
00000000000093a4	movq	%r14,%rdi
00000000000093a7	movq	%r15,%rcx
00000000000093aa	call	*%r13
00000000000093ad	movq	0x0009b704(%rip),%rsi
00000000000093b4	movq	%r14,%rdi
00000000000093b7	call	*%r13
00000000000093ba	movq	%rax,%rbx
00000000000093bd	movq	0x0009ba2c(%rip),%rsi
00000000000093c4	movq	%rbx,%rdi
00000000000093c7	call	*%r13
00000000000093ca	movq	0x0009d60f(%rip),%rsi
00000000000093d1	movq	%rax,%rdi
00000000000093d4	call	*%r13
00000000000093d7	movl	%eax,%r12d
00000000000093da	movq	0x0009cf27(%rip),%rsi
00000000000093e1	movq	%rbx,%rdi
00000000000093e4	call	*%r13
00000000000093e7	testb	%al,%al
00000000000093e9	jne	0x00009422
00000000000093eb	cmpl	$0x01,%r12d
00000000000093ef	je	0x00009422
00000000000093f1	movq	0x0009d5f0(%rip),%rsi
00000000000093f8	movq	%r15,%rdi
00000000000093fb	call	*0x0007acd7(%rip)
0000000000009401	cmpb	$0x01,%al
0000000000009403	jne	0x00009422
0000000000009405	cmpl	$0x02,%r12d
0000000000009409	je	0x00009419
000000000000940b	testl	%r12d,%r12d
000000000000940e	jne	0x00009432
0000000000009410	movq	0x0009c641(%rip),%rsi
0000000000009417	jmp	0x00009429
0000000000009419	movq	0x0009c648(%rip),%rsi
0000000000009420	jmp	0x00009429
0000000000009422	movq	0x0009c5ef(%rip),%rsi
0000000000009429	movq	%r15,%rdi
000000000000942c	call	*0x0007aca6(%rip)
0000000000009432	movq	0x0009d5b7(%rip),%rsi
0000000000009439	movq	%r14,%rdi
000000000000943c	addq	$0x08,%rsp
0000000000009440	popq	%rbx
0000000000009441	popq	%r12
0000000000009443	popq	%r13
0000000000009445	popq	%r14
0000000000009447	popq	%r15
0000000000009449	popq	%rbp
000000000000944a	jmp	*0x0007ac88(%rip)
0000000000009450	addq	$0x08,%rsp
0000000000009454	popq	%rbx
0000000000009455	popq	%r12
0000000000009457	popq	%r13
0000000000009459	popq	%r14
000000000000945b	popq	%r15
000000000000945d	popq	%rbp
000000000000945e	ret
000000000000945f	nop
0000000000009460	nop
0000000000009461	nop
0000000000009462	nop
0000000000009463	nop
0000000000009464	nop
0000000000009465	nop
0000000000009466	nop
0000000000009467	nop
0000000000009468	nop
0000000000009469	nop
000000000000946a	nop
000000000000946b	nop
000000000000946c	nop
000000000000946d	nop
-[PBXGDB_SequenceController _setExecutingSequence:]:
000000000000946e	pushq	%rbp
000000000000946f	movq	%rsp,%rbp
0000000000009472	movq	%rdx,%rax
0000000000009475	movq	%rdi,%rcx
0000000000009478	movq	0x000a5b01(%rip),%rdx
000000000000947f	cmpq	%rax,(%rcx,%rdx)
0000000000009483	jne	0x00009487
0000000000009485	popq	%rbp
0000000000009486	ret
0000000000009487	addq	%rcx,%rdx
000000000000948a	subq	%rcx,%rdx
000000000000948d	movq	%rax,%rdi
0000000000009490	movq	%rcx,%rsi
0000000000009493	popq	%rbp
0000000000009494	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_CommandSequence setSequenceController:]:
0000000000009499	pushq	%rbp
000000000000949a	movq	%rsp,%rbp
000000000000949d	movq	%rdx,%rax
00000000000094a0	movq	%rdi,%rcx
00000000000094a3	movq	0x000a536e(%rip),%rdx
00000000000094aa	movq	%rax,%rdi
00000000000094ad	movq	%rcx,%rsi
00000000000094b0	popq	%rbp
00000000000094b1	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000094b6	nop
00000000000094b7	nop
00000000000094b8	nop
00000000000094b9	nop
-[PBXLSProcess evaluationSafetyStatus]:
00000000000094ba	pushq	%rbp
00000000000094bb	movq	%rsp,%rbp
00000000000094be	movq	0x000a5e83(%rip),%rax
00000000000094c5	movl	(%rdi,%rax),%eax
00000000000094c8	popq	%rbp
00000000000094c9	ret
-[PBXGDB_Adaptor isGDBRemote]:
00000000000094ca	pushq	%rbp
00000000000094cb	movq	%rsp,%rbp
00000000000094ce	movq	0x000a521b(%rip),%rax
00000000000094d5	movsbl	(%rdi,%rax),%eax
00000000000094d9	popq	%rbp
00000000000094da	ret
-[PBXGDB_CommandSequence needsEvaluationSafetyCheck]:
00000000000094db	pushq	%rbp
00000000000094dc	movq	%rsp,%rbp
00000000000094df	xorl	%eax,%eax
00000000000094e1	popq	%rbp
00000000000094e2	ret
-[PBXGDB_GenericMICommandSequence execute]:
00000000000094e3	pushq	%rbp
00000000000094e4	movq	%rsp,%rbp
00000000000094e7	pushq	%rbx
00000000000094e8	pushq	%rax
00000000000094e9	movq	%rdi,%rbx
00000000000094ec	movq	0x000a534d(%rip),%rax
00000000000094f3	movq	(%rbx,%rax),%rdi
00000000000094f7	movq	0x0009b58a(%rip),%rsi
00000000000094fe	movq	%rbx,%rdx
0000000000009501	call	*0x0007abd1(%rip)
0000000000009507	movq	0x000a5332(%rip),%rax
000000000000950e	movq	(%rbx,%rax),%rdi
0000000000009512	movq	0x0009b57f(%rip),%rsi
0000000000009519	movq	0x0009b618(%rip),%rdx
0000000000009520	call	*0x0007abb2(%rip)
0000000000009526	movq	0x0009b58b(%rip),%rsi
000000000000952d	movq	%rbx,%rdi
0000000000009530	call	*0x0007aba2(%rip)
0000000000009536	movq	0x0009b583(%rip),%rsi
000000000000953d	movq	%rax,%rdi
0000000000009540	call	*0x0007ab92(%rip)
0000000000009546	movq	0x000a52f3(%rip),%rcx
000000000000954d	movq	(%rbx,%rcx),%rdx
0000000000009551	movq	0x0009b570(%rip),%rsi
0000000000009558	movq	%rax,%rdi
000000000000955b	movq	0x0007ab76(%rip),%rax
0000000000009562	addq	$0x08,%rsp
0000000000009566	popq	%rbx
0000000000009567	popq	%rbp
0000000000009568	jmp	*%rax
-[PBXGDB_CommandSequence gdbAdaptor]:
000000000000956a	pushq	%rbp
000000000000956b	movq	%rsp,%rbp
000000000000956e	movq	0x0009b85b(%rip),%rsi
0000000000009575	call	*0x0007ab5d(%rip)
000000000000957b	movq	0x0009b536(%rip),%rsi
0000000000009582	movq	%rax,%rdi
0000000000009585	movq	0x0007ab4c(%rip),%rax
000000000000958c	popq	%rbp
000000000000958d	jmp	*%rax
-[PBXGDB_CommandSequence sequenceController]:
000000000000958f	pushq	%rbp
0000000000009590	movq	%rsp,%rbp
0000000000009593	movq	0x000a527e(%rip),%rax
000000000000959a	movq	(%rdi,%rax),%rax
000000000000959e	popq	%rbp
000000000000959f	ret
-[PBXGDB_MISetSignalHandlingMode_Run GDBCommandString]:
00000000000095a0	pushq	%rbp
00000000000095a1	movq	%rsp,%rbp
00000000000095a4	leaq	0x000a9cad(%rip),%rax
00000000000095ab	popq	%rbp
00000000000095ac	ret
00000000000095ad	nop
00000000000095ae	nop
00000000000095af	nop
00000000000095b0	nop
00000000000095b1	nop
00000000000095b2	nop
-[PBXGDB_SequenceController startTimer]:
00000000000095b3	pushq	%rbp
00000000000095b4	movq	%rsp,%rbp
00000000000095b7	pushq	%r14
00000000000095b9	pushq	%rbx
00000000000095ba	movq	%rdi,%rbx
00000000000095bd	movq	0x0009cedc(%rip),%rsi
00000000000095c4	call	*0x0007ab0e(%rip)
00000000000095ca	testq	%rax,%rax
00000000000095cd	je	0x000095fa
00000000000095cf	movq	0x0009ceca(%rip),%rsi
00000000000095d6	movq	0x0007aafb(%rip),%r14
00000000000095dd	movq	%rbx,%rdi
00000000000095e0	call	*%r14
00000000000095e3	movq	0x0009d3c6(%rip),%rsi
00000000000095ea	movq	%rax,%rdi
00000000000095ed	call	*%r14
00000000000095f0	xorpd	%xmm1,%xmm1
00000000000095f4	ucomisd	%xmm1,%xmm0
00000000000095f8	ja	0x000095ff
00000000000095fa	popq	%rbx
00000000000095fb	popq	%r14
00000000000095fd	popq	%rbp
00000000000095fe	ret
00000000000095ff	movq	0x0009bc1a(%rip),%rsi
0000000000009606	movq	0x0009d3ab(%rip),%rcx
000000000000960d	movq	0x0009efac(%rip),%rdi
0000000000009614	movq	%rbx,%rdx
0000000000009617	xorl	%r8d,%r8d
000000000000961a	xorl	%r9d,%r9d
000000000000961d	call	*0x0007aab5(%rip)
0000000000009623	movq	0x000a5966(%rip),%rdx
000000000000962a	movq	%rax,%rdi
000000000000962d	movq	%rbx,%rsi
0000000000009630	popq	%rbx
0000000000009631	popq	%r14
0000000000009633	popq	%rbp
0000000000009634	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_CommandSequence timeOutPeriod]:
0000000000009639	pushq	%rbp
000000000000963a	movq	%rsp,%rbp
000000000000963d	xorps	%xmm0,%xmm0
0000000000009640	popq	%rbp
0000000000009641	ret
-[PBXGDB_InferiorAutoStartDyldSequence setEnabled:]:
0000000000009642	pushq	%rbp
0000000000009643	movq	%rsp,%rbp
0000000000009646	movq	0x000a595b(%rip),%rax
000000000000964d	movb	%dl,(%rdi,%rax)
0000000000009650	popq	%rbp
0000000000009651	ret
-[PBXGDB_MISetTTYCommand setTTY:]:
0000000000009652	pushq	%rbp
0000000000009653	movq	%rsp,%rbp
0000000000009656	pushq	%r14
0000000000009658	pushq	%rbx
0000000000009659	movq	%rdx,%rbx
000000000000965c	movq	%rdi,%r14
000000000000965f	movq	0x0009edea(%rip),%rdi
0000000000009666	leaq	0x0009ec73(%rip),%rsi
000000000000966d	call	*0x0009ec6d(%rip)
0000000000009673	movq	0x0009b63e(%rip),%rsi
000000000000967a	leaq	0x000a9a57(%rip),%rdx
0000000000009681	movq	%rax,%rdi
0000000000009684	movq	%rbx,%rcx
0000000000009687	xorb	%al,%al
0000000000009689	call	*0x0007aa49(%rip)
000000000000968f	leaq	0x000a549a(%rip),%rcx
0000000000009696	movq	(%rcx),%rdx
0000000000009699	movq	%rax,%rdi
000000000000969c	movq	%r14,%rsi
000000000000969f	popq	%rbx
00000000000096a0	popq	%r14
00000000000096a2	popq	%rbp
00000000000096a3	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MILoadExecutableCommand setExecutablePath:]:
00000000000096a8	pushq	%rbp
00000000000096a9	movq	%rsp,%rbp
00000000000096ac	pushq	%r14
00000000000096ae	pushq	%rbx
00000000000096af	movq	%rdx,%rbx
00000000000096b2	movq	%rdi,%r14
00000000000096b5	movq	0x0009ed94(%rip),%rdi
00000000000096bc	leaq	0x0009ec1d(%rip),%rsi
00000000000096c3	call	*0x0009ec17(%rip)
00000000000096c9	movq	0x0009b5e8(%rip),%rsi
00000000000096d0	leaq	0x000a81c1(%rip),%rdx
00000000000096d7	movq	%rax,%rdi
00000000000096da	movq	%rbx,%rcx
00000000000096dd	xorb	%al,%al
00000000000096df	call	*0x0007a9f3(%rip)
00000000000096e5	leaq	0x000a5444(%rip),%rcx
00000000000096ec	movq	(%rcx),%rdx
00000000000096ef	movq	%rax,%rdi
00000000000096f2	movq	%r14,%rsi
00000000000096f5	popq	%rbx
00000000000096f6	popq	%r14
00000000000096f8	popq	%rbp
00000000000096f9	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MIGDBSetCommand setSetting:]:
00000000000096fe	pushq	%rbp
00000000000096ff	movq	%rsp,%rbp
0000000000009702	pushq	%r14
0000000000009704	pushq	%rbx
0000000000009705	movq	%rdx,%rbx
0000000000009708	movq	%rdi,%r14
000000000000970b	movq	0x0009ed3e(%rip),%rdi
0000000000009712	leaq	0x0009ebc7(%rip),%rsi
0000000000009719	call	*0x0009ebc1(%rip)
000000000000971f	movq	0x0009b592(%rip),%rsi
0000000000009726	leaq	0x000a992b(%rip),%rdx
000000000000972d	movq	%rax,%rdi
0000000000009730	movq	%rbx,%rcx
0000000000009733	xorb	%al,%al
0000000000009735	call	*0x0007a99d(%rip)
000000000000973b	leaq	0x000a53ee(%rip),%rcx
0000000000009742	movq	(%rcx),%rdx
0000000000009745	movq	%rax,%rdi
0000000000009748	movq	%r14,%rsi
000000000000974b	popq	%rbx
000000000000974c	popq	%r14
000000000000974e	popq	%rbp
000000000000974f	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000009754	nop
0000000000009755	nop
0000000000009756	nop
0000000000009757	nop
0000000000009758	nop
-[PBXLSDebuggingSession debuggerDidInitialize:]:
0000000000009759	pushq	%rbp
000000000000975a	movq	%rsp,%rbp
000000000000975d	pushq	%r15
000000000000975f	pushq	%r14
0000000000009761	pushq	%r13
0000000000009763	pushq	%r12
0000000000009765	pushq	%rbx
0000000000009766	subq	$0x000000d8,%rsp
000000000000976d	movq	%rdx,%r15
0000000000009770	movq	%rdi,%r12
0000000000009773	movq	0x0007a926(%rip),%rax
000000000000977a	movq	(%rax),%rax
000000000000977d	movq	%rax,0xd0(%rbp)
0000000000009781	movq	0x0009b668(%rip),%rsi
0000000000009788	movq	0x0007a949(%rip),%rbx
000000000000978f	call	*%rbx
0000000000009791	movq	0x0009b6d0(%rip),%rsi
0000000000009798	movq	%rax,%rdi
000000000000979b	movq	%r15,%rdx
000000000000979e	call	*%rbx
00000000000097a0	movq	0x0009b549(%rip),%rsi
00000000000097a7	movq	%r12,%rdi
00000000000097aa	call	*%rbx
00000000000097ac	movq	0x0009b5f5(%rip),%rsi
00000000000097b3	movq	%rax,%rdi
00000000000097b6	call	*%rbx
00000000000097b8	movq	0x0009b5a1(%rip),%rsi
00000000000097bf	movq	%rax,%rdi
00000000000097c2	call	*%rbx
00000000000097c4	movq	0x0009b59d(%rip),%rsi
00000000000097cb	movq	%rax,%rdi
00000000000097ce	call	*%rbx
00000000000097d0	movb	%al,%r14b
00000000000097d3	movq	0x0009b516(%rip),%rsi
00000000000097da	movq	%r12,%rdi
00000000000097dd	call	*%rbx
00000000000097df	movq	0x0009b5c2(%rip),%rsi
00000000000097e6	movq	%rax,%rdi
00000000000097e9	call	*%rbx
00000000000097eb	movq	0x0009b56e(%rip),%rsi
00000000000097f2	movq	%rax,%rdi
00000000000097f5	call	*%rbx
00000000000097f7	movq	0x0009dffa(%rip),%rsi
00000000000097fe	movq	%rax,%rdi
0000000000009801	call	*%rbx
0000000000009803	testb	%r14b,%r14b
0000000000009806	sete	%cl
0000000000009809	testq	%rax,%rax
000000000000980c	setne	%al
000000000000980f	orb	%cl,%al
0000000000009811	movq	0x000a5cb8(%rip),%rcx
0000000000009818	movb	%al,(%r12,%rcx)
000000000000981c	cmpb	$0x00,(%r12,%rcx)
0000000000009821	je	0x00009955
0000000000009827	movq	%r15,0xffffff08(%rbp)
000000000000982e	movq	0x0009b4bb(%rip),%rsi
0000000000009835	movq	0x0007a89c(%rip),%rbx
000000000000983c	movq	%r12,%rax
000000000000983f	movq	%rax,%rdi
0000000000009842	call	*%rbx
0000000000009844	movq	0x0009cb9d(%rip),%rsi
000000000000984b	movq	%rax,%rdi
000000000000984e	call	*%rbx
0000000000009850	xorps	%xmm0,%xmm0
0000000000009853	movaps	%xmm0,0xc0(%rbp)
0000000000009857	movaps	%xmm0,0xb0(%rbp)
000000000000985b	movaps	%xmm0,0xa0(%rbp)
000000000000985f	movaps	%xmm0,0x90(%rbp)
0000000000009863	movq	0x0009df56(%rip),%rsi
000000000000986a	movq	%rax,%rdi
000000000000986d	call	*%rbx
000000000000986f	movq	%rax,%r13
0000000000009872	leaq	0x0009eb07(%rip),%rsi
0000000000009879	leaq	0x90(%rbp),%rdx
000000000000987d	leaq	0xffffff10(%rbp),%rcx
0000000000009884	movq	%r13,%rdi
0000000000009887	movl	$0x00000010,%r8d
000000000000988d	call	*0x0009eaed(%rip)
0000000000009893	movq	%rax,%rbx
0000000000009896	testq	%rbx,%rbx
0000000000009899	je	0x000098ff
000000000000989b	movq	0xa0(%rbp),%rax
000000000000989f	movq	(%rax),%r14
00000000000098a2	xorl	%r15d,%r15d
00000000000098a5	movq	0xa0(%rbp),%rax
00000000000098a9	cmpq	%r14,(%rax)
00000000000098ac	je	0x000098b6
00000000000098ae	movq	%r13,%rdi
00000000000098b1	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
00000000000098b6	movq	0x98(%rbp),%rax
00000000000098ba	movq	(%rax,%r15,8),%rdx
00000000000098be	movq	%r12,%rdi
00000000000098c1	movq	0x0009df38(%rip),%rsi
00000000000098c8	call	*0x0007a80a(%rip)
00000000000098ce	incq	%r15
00000000000098d1	cmpq	%rbx,%r15
00000000000098d4	jb	0x000098a5
00000000000098d6	movq	%r13,%rdi
00000000000098d9	leaq	0x0009eaa0(%rip),%rsi
00000000000098e0	leaq	0x90(%rbp),%rdx
00000000000098e4	leaq	0xffffff10(%rbp),%rcx
00000000000098eb	movl	$0x00000010,%r8d
00000000000098f1	call	*0x0009ea89(%rip)
00000000000098f7	movq	%rax,%rbx
00000000000098fa	testq	%rbx,%rbx
00000000000098fd	jne	0x000098a2
00000000000098ff	movq	0x0009b3ea(%rip),%rsi
0000000000009906	movq	0x0007a7cb(%rip),%r14
000000000000990d	movq	%r12,%rbx
0000000000009910	movq	%rbx,%rdi
0000000000009913	call	*%r14
0000000000009916	movq	0x0009b69b(%rip),%rsi
000000000000991d	movq	%rax,%rdi
0000000000009920	call	*%r14
0000000000009923	movq	%rbx,%rdi
0000000000009926	testb	%al,%al
0000000000009928	movq	0xffffff08(%rbp),%r15
000000000000992f	je	0x00009955
0000000000009931	movq	0x0009b850(%rip),%rsi
0000000000009938	movq	0x0007a799(%rip),%rbx
000000000000993f	movq	%r15,%rdx
0000000000009942	call	*%rbx
0000000000009944	movq	0x0009b845(%rip),%rsi
000000000000994b	movq	%r15,%rdi
000000000000994e	movl	$0x00000001,%edx
0000000000009953	call	*%rbx
0000000000009955	movq	0x0009deac(%rip),%rsi
000000000000995c	movq	%r15,%rdi
000000000000995f	call	*0x0007a773(%rip)
0000000000009965	movq	0x0007a734(%rip),%rax
000000000000996c	movq	(%rax),%rax
000000000000996f	cmpq	0xd0(%rbp),%rax
0000000000009973	jne	0x00009987
0000000000009975	addq	$0x000000d8,%rsp
000000000000997c	popq	%rbx
000000000000997d	popq	%r12
000000000000997f	popq	%r13
0000000000009981	popq	%r14
0000000000009983	popq	%r15
0000000000009985	popq	%rbp
0000000000009986	ret
0000000000009987	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
000000000000998c	nop
-[PBXLSModel setDebugger:]:
000000000000998d	pushq	%rbp
000000000000998e	movq	%rsp,%rbp
0000000000009991	movq	%rdx,%rax
0000000000009994	movq	%rdi,%rcx
0000000000009997	movq	0x000a595a(%rip),%rdx
000000000000999e	movq	%rax,%rdi
00000000000099a1	movq	%rcx,%rsi
00000000000099a4	popq	%rbp
00000000000099a5	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_Adaptor continueAfterInitialization]:
00000000000099aa	pushq	%rbp
00000000000099ab	movq	%rsp,%rbp
00000000000099ae	pushq	%r15
00000000000099b0	pushq	%r14
00000000000099b2	pushq	%r12
00000000000099b4	pushq	%rbx
00000000000099b5	movq	%rdi,%rbx
00000000000099b8	movq	0x000a4d81(%rip),%rax
00000000000099bf	cmpb	$0x00,(%rbx,%rax)
00000000000099c3	jne	0x00009b71
00000000000099c9	movb	$0x01,(%rbx,%rax)
00000000000099cd	movq	0x0009b42c(%rip),%rsi
00000000000099d4	movq	0x0007a6fd(%rip),%r15
00000000000099db	movq	%rbx,%rdi
00000000000099de	call	*%r15
00000000000099e1	movq	%rax,%r14
00000000000099e4	movq	0x0009b2fd(%rip),%rsi
00000000000099eb	movq	%rbx,%rdi
00000000000099ee	call	*%r15
00000000000099f1	movq	0x0009b2f8(%rip),%rsi
00000000000099f8	movq	%rax,%rdi
00000000000099fb	call	*%r15
00000000000099fe	movq	0x0009b443(%rip),%rsi
0000000000009a05	movq	%rax,%rdi
0000000000009a08	call	*%r15
0000000000009a0b	testb	%al,%al
0000000000009a0d	je	0x00009b59
0000000000009a13	movq	0x0009b38e(%rip),%rsi
0000000000009a1a	movq	0x0007a6b7(%rip),%r15
0000000000009a21	movq	%r14,%rdi
0000000000009a24	call	*%r15
0000000000009a27	movq	0x0009b65a(%rip),%rsi
0000000000009a2e	movq	%rax,%rdi
0000000000009a31	call	*%r15
0000000000009a34	movq	0x000a4d0d(%rip),%rcx
0000000000009a3b	movl	%eax,(%rbx,%rcx)
0000000000009a3e	movq	0x000a4cc3(%rip),%rax
0000000000009a45	movb	$0x00,(%rbx,%rax)
0000000000009a49	movq	0x0009b550(%rip),%rsi
0000000000009a50	movq	%rbx,%rdi
0000000000009a53	xorl	%edx,%edx
0000000000009a55	call	*%r15
0000000000009a58	movq	0x000a4cc1(%rip),%rax
0000000000009a5f	movb	$0x00,(%rbx,%rax)
0000000000009a63	movq	0x000a4c86(%rip),%rax
0000000000009a6a	cmpb	$0x01,(%rbx,%rax)
0000000000009a6e	jne	0x00009a80
0000000000009a70	movq	0x0009b5e1(%rip),%rsi
0000000000009a77	movq	%rbx,%rdi
0000000000009a7a	call	*0x0007a658(%rip)
0000000000009a80	movq	0x0009b321(%rip),%rsi
0000000000009a87	movq	0x0007a64a(%rip),%r15
0000000000009a8e	movq	%r14,%rdi
0000000000009a91	call	*%r15
0000000000009a94	movq	0x0009b2c5(%rip),%rsi
0000000000009a9b	movq	%rax,%rdi
0000000000009a9e	call	*%r15
0000000000009aa1	movq	0x0009b5e8(%rip),%rsi
0000000000009aa8	movq	%rax,%rdi
0000000000009aab	call	*%r15
0000000000009aae	movq	0x000a4bcb(%rip),%rcx
0000000000009ab5	movq	(%rbx,%rcx),%r15
0000000000009ab9	cmpl	$0x01,%eax
0000000000009abc	jne	0x00009ae4
0000000000009abe	movq	0x0009b5d3(%rip),%rsi
0000000000009ac5	movq	0x0007a60c(%rip),%r12
0000000000009acc	movq	%r14,%rdi
0000000000009acf	call	*%r12
0000000000009ad2	movq	0x0009b5c7(%rip),%rsi
0000000000009ad9	movq	%r15,%rdi
0000000000009adc	movq	%rax,%rdx
0000000000009adf	call	*%r12
0000000000009ae2	jmp	0x00009afe
0000000000009ae4	movq	0x000a4c5d(%rip),%rax
0000000000009aeb	movl	(%rbx,%rax),%edx
0000000000009aee	movq	0x0009b5b3(%rip),%rsi
0000000000009af5	movq	%r15,%rdi
0000000000009af8	call	*0x0007a5da(%rip)
0000000000009afe	movq	0x0009ea7b(%rip),%r14
0000000000009b05	movq	0x0009b2c4(%rip),%rsi
0000000000009b0c	movq	%rbx,%rdi
0000000000009b0f	call	*0x0007a5c3(%rip)
0000000000009b15	movq	0x0009b54c(%rip),%rsi
0000000000009b1c	movq	%r14,%rdi
0000000000009b1f	movq	%rax,%rdx
0000000000009b22	call	*0x0007a5b0(%rip)
0000000000009b28	movq	%rax,%r14
0000000000009b2b	movq	0x0009b29e(%rip),%rsi
0000000000009b32	movq	%rbx,%rdi
0000000000009b35	call	*0x0007a59d(%rip)
0000000000009b3b	movq	0x0009b29e(%rip),%rsi
0000000000009b42	movq	%rax,%rdi
0000000000009b45	movq	%r14,%rdx
0000000000009b48	movq	0x0007a589(%rip),%rax
0000000000009b4f	popq	%rbx
0000000000009b50	popq	%r12
0000000000009b52	popq	%r14
0000000000009b54	popq	%r15
0000000000009b56	popq	%rbp
0000000000009b57	jmp	*%rax
0000000000009b59	movq	0x0009b550(%rip),%rsi
0000000000009b60	movq	%rbx,%rdi
0000000000009b63	popq	%rbx
0000000000009b64	popq	%r12
0000000000009b66	popq	%r14
0000000000009b68	popq	%r15
0000000000009b6a	popq	%rbp
0000000000009b6b	jmp	*0x0007a567(%rip)
0000000000009b71	popq	%rbx
0000000000009b72	popq	%r12
0000000000009b74	popq	%r14
0000000000009b76	popq	%r15
0000000000009b78	popq	%rbp
0000000000009b79	ret
-[PBXGDB_Adaptor _setupAndRunProcess]:
0000000000009b7a	pushq	%rbp
0000000000009b7b	movq	%rsp,%rbp
0000000000009b7e	pushq	%r15
0000000000009b80	pushq	%r14
0000000000009b82	pushq	%r12
0000000000009b84	pushq	%rbx
0000000000009b85	movq	%rdi,%rbx
0000000000009b88	movq	0x000a4b79(%rip),%rax
0000000000009b8f	movb	$0x00,(%rbx,%rax)
0000000000009b93	movq	0x0009b266(%rip),%rsi
0000000000009b9a	movq	0x0007a537(%rip),%r12
0000000000009ba1	call	*%r12
0000000000009ba4	movq	%rax,%r15
0000000000009ba7	movq	0x0009b48a(%rip),%rsi
0000000000009bae	movq	%r15,%rdi
0000000000009bb1	call	*%r12
0000000000009bb4	movq	%rax,%r14
0000000000009bb7	movq	0x0009b482(%rip),%rsi
0000000000009bbe	movq	%rbx,%rdi
0000000000009bc1	call	*%r12
0000000000009bc4	movq	0x0009b47d(%rip),%rsi
0000000000009bcb	movq	%rbx,%rdi
0000000000009bce	xorl	%edx,%edx
0000000000009bd0	call	*%r12
0000000000009bd3	movq	0x0009b3c6(%rip),%rsi
0000000000009bda	movq	%rbx,%rdi
0000000000009bdd	xorl	%edx,%edx
0000000000009bdf	call	*%r12
0000000000009be2	movq	0x000a4b2f(%rip),%rax
0000000000009be9	movb	$0x00,(%rbx,%rax)
0000000000009bed	movq	0x000a4b2c(%rip),%rax
0000000000009bf4	movb	$0x00,(%rbx,%rax)
0000000000009bf8	movq	0x000a4b29(%rip),%rax
0000000000009bff	movq	(%rbx,%rax),%rdi
0000000000009c03	testq	%rdi,%rdi
0000000000009c06	je	0x00009c24
0000000000009c08	movq	0x0009b441(%rip),%rsi
0000000000009c0f	call	*0x0007a4c3(%rip)
0000000000009c15	movq	0x000a4b14(%rip),%rax
0000000000009c1c	movq	$0x00000000,(%rbx,%rax)
0000000000009c24	movq	0x000a4ac5(%rip),%rax
0000000000009c2b	cmpb	$0x01,(%rbx,%rax)
0000000000009c2f	jne	0x00009c43
0000000000009c31	movq	0x0009b420(%rip),%rsi
0000000000009c38	movq	%rbx,%rdi
0000000000009c3b	call	*0x0007a497(%rip)
0000000000009c41	jmp	0x00009c8e
0000000000009c43	movq	0x0009b2ee(%rip),%rsi
0000000000009c4a	movq	%r15,%rdi
0000000000009c4d	call	*0x0007a485(%rip)
0000000000009c53	movq	%rax,%r15
0000000000009c56	movq	0x000a4adb(%rip),%rdx
0000000000009c5d	movq	(%rbx,%rdx),%rax
0000000000009c61	testq	%rax,%rax
0000000000009c64	je	0x00009c83
0000000000009c66	movq	0x0009b33b(%rip),%rsi
0000000000009c6d	movq	%rbx,%rdi
0000000000009c70	movq	%rax,%rdx
0000000000009c73	movq	%r15,%rcx
0000000000009c76	call	*0x0007a45c(%rip)
0000000000009c7c	movq	0x000a4ab5(%rip),%rdx
0000000000009c83	movq	%r15,%rdi
0000000000009c86	movq	%rbx,%rsi
0000000000009c89	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000009c8e	movq	0x0009adeb(%rip),%rsi
0000000000009c95	movq	0x0009e8dc(%rip),%rdi
0000000000009c9c	movq	0x0007a435(%rip),%r12
0000000000009ca3	call	*%r12
0000000000009ca6	movq	%rax,%r15
0000000000009ca9	movq	0x0009b3b0(%rip),%rsi
0000000000009cb0	movq	%r15,%rdi
0000000000009cb3	movq	%r14,%rdx
0000000000009cb6	call	*%r12
0000000000009cb9	movq	0x000a49b8(%rip),%rax
0000000000009cc0	movq	(%rbx,%rax),%rdi
0000000000009cc4	movq	0x0009adfd(%rip),%rsi
0000000000009ccb	movq	%r15,%rdx
0000000000009cce	call	*%r12
0000000000009cd1	movq	0x0009e8a8(%rip),%r14
0000000000009cd8	movq	0x0009b0f1(%rip),%rsi
0000000000009cdf	movq	%rbx,%rdi
0000000000009ce2	call	*%r12
0000000000009ce5	movq	0x0009b37c(%rip),%rsi
0000000000009cec	movq	%r14,%rdi
0000000000009cef	movq	%rax,%rdx
0000000000009cf2	call	*%r12
0000000000009cf5	movq	%rax,%r14
0000000000009cf8	movq	0x0009b0d1(%rip),%rsi
0000000000009cff	movq	%rbx,%rdi
0000000000009d02	call	*%r12
0000000000009d05	movq	0x0009b0d4(%rip),%rsi
0000000000009d0c	movq	%rax,%rdi
0000000000009d0f	movq	%r14,%rdx
0000000000009d12	call	*%r12
0000000000009d15	movq	0x000a49d4(%rip),%rax
0000000000009d1c	cmpb	$0x01,(%rbx,%rax)
0000000000009d20	jne	0x00009d89
0000000000009d22	movq	0x000a4997(%rip),%rax
0000000000009d29	cmpb	$0x01,(%rbx,%rax)
0000000000009d2d	jne	0x00009d47
0000000000009d2f	movq	0x000a494a(%rip),%rax
0000000000009d36	movq	(%rbx,%rax),%rdi
0000000000009d3a	movq	0x0009b32f(%rip),%rsi
0000000000009d41	call	*0x0007a391(%rip)
0000000000009d47	movq	0x000a4932(%rip),%rax
0000000000009d4e	movq	(%rbx,%rax),%rdi
0000000000009d52	movq	0x0009b31f(%rip),%rsi
0000000000009d59	movl	$0x00000001,%edx
0000000000009d5e	call	*0x0007a374(%rip)
0000000000009d64	movq	0x000a4915(%rip),%rax
0000000000009d6b	movq	(%rbx,%rax),%rdi
0000000000009d6f	movq	0x0009b30a(%rip),%rsi
0000000000009d76	xorl	%edx,%edx
0000000000009d78	movq	0x0007a359(%rip),%rax
0000000000009d7f	popq	%rbx
0000000000009d80	popq	%r12
0000000000009d82	popq	%r14
0000000000009d84	popq	%r15
0000000000009d86	popq	%rbp
0000000000009d87	jmp	*%rax
0000000000009d89	movq	0x000a48f0(%rip),%rax
0000000000009d90	movq	(%rbx,%rax),%rdi
0000000000009d94	movq	0x0009b2d5(%rip),%rsi
0000000000009d9b	popq	%rbx
0000000000009d9c	popq	%r12
0000000000009d9e	popq	%r14
0000000000009da0	popq	%r15
0000000000009da2	popq	%rbp
0000000000009da3	jmp	*0x0007a32f(%rip)
0000000000009da9	nop
0000000000009daa	nop
0000000000009dab	nop
0000000000009dac	nop
0000000000009dad	nop
0000000000009dae	nop
0000000000009daf	nop
0000000000009db0	nop
0000000000009db1	nop
0000000000009db2	nop
0000000000009db3	nop
-[DBGGDBLauncher executableArguments]:
0000000000009db4	pushq	%rbp
0000000000009db5	movq	%rsp,%rbp
0000000000009db8	pushq	%r15
0000000000009dba	pushq	%r14
0000000000009dbc	pushq	%r13
0000000000009dbe	pushq	%r12
0000000000009dc0	pushq	%rbx
0000000000009dc1	subq	$0x18,%rsp
0000000000009dc5	movq	0x0009afdc(%rip),%rsi
0000000000009dcc	movq	0x0007a305(%rip),%r14
0000000000009dd3	call	*%r14
0000000000009dd6	movq	0x0009af83(%rip),%rsi
0000000000009ddd	movq	%rax,%rdi
0000000000009de0	call	*%r14
0000000000009de3	movq	0x0009db7e(%rip),%rsi
0000000000009dea	movq	%rax,%rdi
0000000000009ded	call	*%r14
0000000000009df0	movq	%rax,%rbx
0000000000009df3	movq	%rbx,0xd0(%rbp)
0000000000009df7	movq	0x0009ae92(%rip),%rsi
0000000000009dfe	movq	0x0009e633(%rip),%rdi
0000000000009e05	call	*%r14
0000000000009e08	movq	%rax,%r12
0000000000009e0b	leaq	0x0009e4fe(%rip),%rsi
0000000000009e12	movq	%rbx,%rdi
0000000000009e15	call	*0x0009e4f5(%rip)
0000000000009e1b	movq	%rax,%r15
0000000000009e1e	testq	%r15,%r15
0000000000009e21	je	0x00009e89
0000000000009e23	leaq	0xff(%r15),%rax
0000000000009e27	movq	%rax,0xc8(%rbp)
0000000000009e2b	xorl	%ebx,%ebx
0000000000009e2d	movq	0x0009accc(%rip),%r14
0000000000009e34	movq	0x0007a29d(%rip),%r13
0000000000009e3b	movq	0xd0(%rbp),%rdi
0000000000009e3f	leaq	0x0009e4da(%rip),%rsi
0000000000009e46	movq	%rbx,%rdx
0000000000009e49	call	*0x0009e4d1(%rip)
0000000000009e4f	movq	%rax,%rdi
0000000000009e52	movq	0x0009db17(%rip),%rsi
0000000000009e59	call	*%r13
0000000000009e5c	movq	%r12,%rdi
0000000000009e5f	movq	%r14,%rsi
0000000000009e62	movq	%rax,%rdx
0000000000009e65	call	*%r13
0000000000009e68	cmpq	%rbx,0xc8(%rbp)
0000000000009e6c	je	0x00009e81
0000000000009e6e	movq	%r12,%rdi
0000000000009e71	movq	%r14,%rsi
0000000000009e74	leaq	0x000a58dd(%rip),%rdx
0000000000009e7b	call	*0x0007a257(%rip)
0000000000009e81	incq	%rbx
0000000000009e84	cmpq	%rbx,%r15
0000000000009e87	jne	0x00009e3b
0000000000009e89	movq	%r12,%rax
0000000000009e8c	addq	$0x18,%rsp
0000000000009e90	popq	%rbx
0000000000009e91	popq	%r12
0000000000009e93	popq	%r13
0000000000009e95	popq	%r14
0000000000009e97	popq	%r15
0000000000009e99	popq	%rbp
0000000000009e9a	ret
-[PBXGDB_Adaptor flushObjcClassNameCache]:
0000000000009e9b	pushq	%rbp
0000000000009e9c	movq	%rsp,%rbp
0000000000009e9f	movq	0x000a48d2(%rip),%rax
0000000000009ea6	movq	(%rdi,%rax),%rdi
0000000000009eaa	testq	%rdi,%rdi
0000000000009ead	jne	0x00009eb1
0000000000009eaf	popq	%rbp
0000000000009eb0	ret
0000000000009eb1	movq	0x0009b198(%rip),%rsi
0000000000009eb8	popq	%rbp
0000000000009eb9	jmp	*0x0007a219(%rip)
-[PBXGDB_Adaptor setInferiorPID:]:
0000000000009ebf	pushq	%rbp
0000000000009ec0	movq	%rsp,%rbp
0000000000009ec3	pushq	%r15
0000000000009ec5	pushq	%r14
0000000000009ec7	pushq	%rbx
0000000000009ec8	pushq	%rax
0000000000009ec9	movq	%rdi,%rbx
0000000000009ecc	movq	0x000a487d(%rip),%rax
0000000000009ed3	movl	%edx,(%rbx,%rax)
0000000000009ed6	movq	0x0009ae0b(%rip),%rsi
0000000000009edd	movq	0x0007a1f4(%rip),%r15
0000000000009ee4	call	*%r15
0000000000009ee7	movq	0x0009ae02(%rip),%rsi
0000000000009eee	movq	%rax,%rdi
0000000000009ef1	call	*%r15
0000000000009ef4	movq	%rax,%r14
0000000000009ef7	movq	0x0009af4a(%rip),%rsi
0000000000009efe	movq	%r14,%rdi
0000000000009f01	call	*%r15
0000000000009f04	testb	%al,%al
0000000000009f06	jne	0x00009f15
0000000000009f08	movq	0x000a4841(%rip),%rax
0000000000009f0f	cmpl	$0x00,(%rbx,%rax)
0000000000009f13	jg	0x00009f20
0000000000009f15	addq	$0x08,%rsp
0000000000009f19	popq	%rbx
0000000000009f1a	popq	%r14
0000000000009f1c	popq	%r15
0000000000009f1e	popq	%rbp
0000000000009f1f	ret
0000000000009f20	movq	0x0009ae81(%rip),%rsi
0000000000009f27	movq	%r14,%rdi
0000000000009f2a	call	*0x0007a1a8(%rip)
0000000000009f30	movq	0x000a4819(%rip),%rcx
0000000000009f37	movl	(%rbx,%rcx),%edx
0000000000009f3a	movq	0x0009b4bf(%rip),%rsi
0000000000009f41	movq	%rax,%rdi
0000000000009f44	call	*0x0007a18e(%rip)
0000000000009f4a	movq	0x0009af6f(%rip),%rsi
0000000000009f51	movq	%r14,%rdi
0000000000009f54	call	*0x0007a17e(%rip)
0000000000009f5a	movq	0x000a47ef(%rip),%rcx
0000000000009f61	movl	(%rbx,%rcx),%edx
0000000000009f64	movq	0x0009b49d(%rip),%rsi
0000000000009f6b	movq	%rax,%rdi
0000000000009f6e	movq	0x0007a163(%rip),%rax
0000000000009f75	addq	$0x08,%rsp
0000000000009f79	popq	%rbx
0000000000009f7a	popq	%r14
0000000000009f7c	popq	%r15
0000000000009f7e	popq	%rbp
0000000000009f7f	jmp	*%rax
-[PBXGDB_Adaptor setAttemptedIntrospectionLibraryLoad:]:
0000000000009f81	pushq	%rbp
0000000000009f82	movq	%rsp,%rbp
0000000000009f85	movq	0x000a47e4(%rip),%rax
0000000000009f8c	movb	%dl,(%rdi,%rax)
0000000000009f8f	popq	%rbp
0000000000009f90	ret
-[PBXGDB_MISetArgumentsCommand setArgumentString:]:
0000000000009f91	pushq	%rbp
0000000000009f92	movq	%rsp,%rbp
0000000000009f95	pushq	%r14
0000000000009f97	pushq	%rbx
0000000000009f98	movq	%rdx,%rbx
0000000000009f9b	movq	%rdi,%r14
0000000000009f9e	movq	0x0009e4ab(%rip),%rdi
0000000000009fa5	leaq	0x0009e334(%rip),%rsi
0000000000009fac	call	*0x0009e32e(%rip)
0000000000009fb2	movq	0x0009acff(%rip),%rsi
0000000000009fb9	leaq	0x000a90f8(%rip),%rdx
0000000000009fc0	movq	%rax,%rdi
0000000000009fc3	movq	%rbx,%rcx
0000000000009fc6	xorb	%al,%al
0000000000009fc8	call	*0x0007a10a(%rip)
0000000000009fce	leaq	0x000a4b5b(%rip),%rcx
0000000000009fd5	movq	(%rcx),%rdx
0000000000009fd8	movq	%rax,%rdi
0000000000009fdb	movq	%r14,%rsi
0000000000009fde	popq	%rbx
0000000000009fdf	popq	%r14
0000000000009fe1	popq	%rbp
0000000000009fe2	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
+[PBXGDB_BaseDataValueSequence initialize]:
0000000000009fe7	pushq	%rbp
0000000000009fe8	movq	%rsp,%rbp
0000000000009feb	pushq	%rbx
0000000000009fec	pushq	%rax
0000000000009fed	movq	%rdi,%rbx
0000000000009ff0	movq	0x0009e6b1(%rip),%rdi
0000000000009ff7	leaq	0x0009e332(%rip),%rsi
0000000000009ffe	call	*0x0009e32c(%rip)
000000000000a004	cmpq	%rbx,%rax
000000000000a007	jne	0x0000a078
000000000000a009	movq	0x0009ad60(%rip),%rsi
000000000000a010	movq	0x0009e4a9(%rip),%rdi
000000000000a017	movq	0x0007a0ba(%rip),%rbx
000000000000a01e	call	*%rbx
000000000000a020	movq	0x0009b711(%rip),%rsi
000000000000a027	leaq	0x000a6aca(%rip),%rdx
000000000000a02e	movq	%rax,%rdi
000000000000a031	call	*%rbx
000000000000a033	testq	%rax,%rax
000000000000a036	je	0x0000a067
000000000000a038	movq	0x0009b701(%rip),%rsi
000000000000a03f	movq	%rax,%rdi
000000000000a042	call	*0x0007a090(%rip)
000000000000a048	movsd	%xmm0,0x000ad638(%rip)
000000000000a050	xorpd	%xmm1,%xmm1
000000000000a054	ucomisd	%xmm0,%xmm1
000000000000a058	jbe	0x0000a078
000000000000a05a	movq	$0x00000000,0x000ad623(%rip)
000000000000a065	jmp	0x0000a078
000000000000a067	movq	$0x4024000000000000,%rax
000000000000a071	movq	%rax,0x000ad610(%rip)
000000000000a078	addq	$0x08,%rsp
000000000000a07c	popq	%rbx
000000000000a07d	popq	%rbp
000000000000a07e	ret
+[PBXGDB_RegisterDataValueSetupSequence sequenceToSetupCPUTypeWithSequenceController:]:
000000000000a07f	pushq	%rbp
000000000000a080	movq	%rsp,%rbp
000000000000a083	movq	%rdx,%rax
000000000000a086	movq	0x0009bca3(%rip),%rsi
000000000000a08d	xorl	%edx,%edx
000000000000a08f	movq	%rax,%rcx
000000000000a092	popq	%rbp
000000000000a093	jmp	*0x0007a03f(%rip)
+[PBXGDB_RegisterDataValueSetupSequence sequenceWithParentDV:sequenceController:]:
000000000000a099	pushq	%rbp
000000000000a09a	movq	%rsp,%rbp
000000000000a09d	pushq	%r15
000000000000a09f	pushq	%r14
000000000000a0a1	pushq	%r12
000000000000a0a3	pushq	%rbx
000000000000a0a4	movq	%rcx,%r15
000000000000a0a7	movq	%rdx,%r14
000000000000a0aa	movq	0x0009e4cf(%rip),%rdi
000000000000a0b1	leaq	0x0009e228(%rip),%rsi
000000000000a0b8	call	*0x0009e222(%rip)
000000000000a0be	movq	0x0009a9ab(%rip),%rsi
000000000000a0c5	movq	0x0007a00c(%rip),%r12
000000000000a0cc	movq	%rax,%rdi
000000000000a0cf	call	*%r12
000000000000a0d2	movq	%rax,%rbx
000000000000a0d5	movq	0x0009acfc(%rip),%rsi
000000000000a0dc	movq	%rbx,%rdi
000000000000a0df	movq	%r15,%rdx
000000000000a0e2	call	*%r12
000000000000a0e5	movq	0x0009c85c(%rip),%rsi
000000000000a0ec	movq	%rbx,%rdi
000000000000a0ef	movq	%r14,%rdx
000000000000a0f2	call	*%r12
000000000000a0f5	movq	%rbx,%rax
000000000000a0f8	popq	%rbx
000000000000a0f9	popq	%r12
000000000000a0fb	popq	%r14
000000000000a0fd	popq	%r15
000000000000a0ff	popq	%rbp
000000000000a100	ret
-[PBXGDB_BaseDataValueSequence init]:
000000000000a101	pushq	%rbp
000000000000a102	movq	%rsp,%rbp
000000000000a105	subq	$0x10,%rsp
000000000000a109	movq	%rdi,0xf0(%rbp)
000000000000a10d	movq	0x0009ec24(%rip),%rax
000000000000a114	movq	%rax,0xf8(%rbp)
000000000000a118	movq	0x0009a951(%rip),%rsi
000000000000a11f	leaq	0xf0(%rbp),%rdi
000000000000a123	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000000a128	testq	%rax,%rax
000000000000a12b	je	0x0000a13b
000000000000a12d	leaq	0x000a46fc(%rip),%rcx
000000000000a134	movq	(%rcx),%rcx
000000000000a137	movb	$0x01,(%rax,%rcx)
000000000000a13b	addq	$0x10,%rsp
000000000000a13f	popq	%rbp
000000000000a140	ret
-[PBXGDB_RegisterDataValueSetupSequence setParentDV:]:
000000000000a141	pushq	%rbp
000000000000a142	movq	%rsp,%rbp
000000000000a145	movq	%rdx,%rax
000000000000a148	movq	%rdi,%rcx
000000000000a14b	movq	0x000a4df6(%rip),%rdx
000000000000a152	movq	%rax,%rdi
000000000000a155	movq	%rcx,%rsi
000000000000a158	popq	%rbp
000000000000a159	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_ThreadController enqueueRunSequence]:
000000000000a15e	pushq	%rbp
000000000000a15f	movq	%rsp,%rbp
000000000000a162	pushq	%r14
000000000000a164	pushq	%rbx
000000000000a165	movq	%rdi,%r14
000000000000a168	movq	0x0009e971(%rip),%rdi
000000000000a16f	leaq	0x0009e16a(%rip),%rsi
000000000000a176	call	*0x0009e164(%rip)
000000000000a17c	movq	0x0009a8ed(%rip),%rsi
000000000000a183	movq	%rax,%rdi
000000000000a186	call	*0x00079f4c(%rip)
000000000000a18c	movq	%rax,%rbx
000000000000a18f	movq	0x0009cfea(%rip),%rsi
000000000000a196	movq	%r14,%rdi
000000000000a199	movq	%rbx,%rdx
000000000000a19c	xorl	%ecx,%ecx
000000000000a19e	call	*0x00079f34(%rip)
000000000000a1a4	movq	0x0009a90d(%rip),%rsi
000000000000a1ab	movq	%r14,%rdi
000000000000a1ae	call	*0x00079f24(%rip)
000000000000a1b4	movq	0x0009ac15(%rip),%rsi
000000000000a1bb	movq	%rax,%rdi
000000000000a1be	call	*0x00079f14(%rip)
000000000000a1c4	movq	0x0009b00d(%rip),%rsi
000000000000a1cb	movq	%rax,%rdi
000000000000a1ce	movq	%rbx,%rdx
000000000000a1d1	movq	0x00079f00(%rip),%rax
000000000000a1d8	popq	%rbx
000000000000a1d9	popq	%r14
000000000000a1db	popq	%rbp
000000000000a1dc	jmp	*%rax
000000000000a1de	nop
000000000000a1df	nop
-[PBXGDB_ControlSequence init]:
000000000000a1e0	pushq	%rbp
000000000000a1e1	movq	%rsp,%rbp
000000000000a1e4	subq	$0x10,%rsp
000000000000a1e8	movq	%rdi,0xf0(%rbp)
000000000000a1ec	movq	0x0009eb5d(%rip),%rax
000000000000a1f3	movq	%rax,0xf8(%rbp)
000000000000a1f7	movq	0x0009a872(%rip),%rsi
000000000000a1fe	leaq	0xf0(%rbp),%rdi
000000000000a202	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000000a207	testq	%rax,%rax
000000000000a20a	je	0x0000a21a
000000000000a20c	leaq	0x000a4625(%rip),%rcx
000000000000a213	movq	(%rcx),%rcx
000000000000a216	movb	$0x01,(%rax,%rcx)
000000000000a21a	addq	$0x10,%rsp
000000000000a21e	popq	%rbp
000000000000a21f	ret
000000000000a220	nop
-[PBXGDB_ThreadController _initSequence:threadHandle:]:
000000000000a221	pushq	%rbp
000000000000a222	movq	%rsp,%rbp
000000000000a225	pushq	%r15
000000000000a227	pushq	%r14
000000000000a229	pushq	%rbx
000000000000a22a	pushq	%rax
000000000000a22b	movq	%rcx,%r14
000000000000a22e	movq	%rdx,%rbx
000000000000a231	movq	%rdi,%r15
000000000000a234	movq	0x0009a87d(%rip),%rsi
000000000000a23b	call	*0x00079e97(%rip)
000000000000a241	movq	0x0009ab88(%rip),%rsi
000000000000a248	movq	%rax,%rdi
000000000000a24b	call	*0x00079e87(%rip)
000000000000a251	movq	0x0009ab80(%rip),%rsi
000000000000a258	movq	%rbx,%rdi
000000000000a25b	movq	%rax,%rdx
000000000000a25e	call	*0x00079e74(%rip)
000000000000a264	movq	0x0009af55(%rip),%rsi
000000000000a26b	movq	%rbx,%rdi
000000000000a26e	movq	%r15,%rdx
000000000000a271	call	*0x00079e61(%rip)
000000000000a277	movq	0x0009b9b2(%rip),%rsi
000000000000a27e	movq	%rbx,%rdi
000000000000a281	movq	%r14,%rdx
000000000000a284	movq	0x00079e4d(%rip),%rax
000000000000a28b	addq	$0x08,%rsp
000000000000a28f	popq	%rbx
000000000000a290	popq	%r14
000000000000a292	popq	%r15
000000000000a294	popq	%rbp
000000000000a295	jmp	*%rax
-[PBXGDB_BaseThreadSequence setThreadController:]:
000000000000a297	pushq	%rbp
000000000000a298	movq	%rsp,%rbp
000000000000a29b	movq	%rdx,%rax
000000000000a29e	movq	%rdi,%rcx
000000000000a2a1	movq	0x000a4d20(%rip),%rdx
000000000000a2a8	movq	%rax,%rdi
000000000000a2ab	movq	%rcx,%rsi
000000000000a2ae	popq	%rbp
000000000000a2af	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_BaseThreadSequence setThreadHandle:]:
000000000000a2b4	pushq	%rbp
000000000000a2b5	movq	%rsp,%rbp
000000000000a2b8	movq	0x000a4d11(%rip),%rax
000000000000a2bf	movq	%rdx,(%rdi,%rax)
000000000000a2c3	popq	%rbp
000000000000a2c4	ret
000000000000a2c5	nop
000000000000a2c6	nop
000000000000a2c7	nop
000000000000a2c8	nop
000000000000a2c9	nop
000000000000a2ca	nop
000000000000a2cb	nop
-[PBXGDB_SequenceController enqueueStateChangingCommandSequence:]:
000000000000a2cc	pushq	%rbp
000000000000a2cd	movq	%rsp,%rbp
000000000000a2d0	pushq	%rbx
000000000000a2d1	pushq	%rax
000000000000a2d2	movq	%rdi,%rbx
000000000000a2d5	movq	0x000a4c8c(%rip),%rax
000000000000a2dc	movq	(%rbx,%rax),%rcx
000000000000a2e0	movq	0x0009c759(%rip),%rsi
000000000000a2e7	call	*0x00079deb(%rip)
000000000000a2ed	movq	0x0009c75c(%rip),%rsi
000000000000a2f4	movq	%rbx,%rdi
000000000000a2f7	movq	0x00079dda(%rip),%rax
000000000000a2fe	addq	$0x08,%rsp
000000000000a302	popq	%rbx
000000000000a303	popq	%rbp
000000000000a304	jmp	*%rax
000000000000a306	nop
000000000000a307	nop
-[PBXGDB_MIParser parseEscapedQuotedString]:
000000000000a308	pushq	%rbp
000000000000a309	movq	%rsp,%rbp
000000000000a30c	pushq	%r15
000000000000a30e	pushq	%r14
000000000000a310	pushq	%r13
000000000000a312	pushq	%r12
000000000000a314	pushq	%rbx
000000000000a315	pushq	%rax
000000000000a316	movq	%rdi,%r12
000000000000a319	movq	0x0009c298(%rip),%rsi
000000000000a320	call	*0x00079db2(%rip)
000000000000a326	cmpw	$0x22,%ax
000000000000a32a	jne	0x0000a33c
000000000000a32c	movq	0x0009c2ad(%rip),%rsi
000000000000a333	movq	%r12,%rdi
000000000000a336	call	*0x00079d9c(%rip)
000000000000a33c	movq	0x0009c275(%rip),%rsi
000000000000a343	movq	%r12,%rdi
000000000000a346	call	*0x00079d8c(%rip)
000000000000a34c	cmpw	$0x5c,%ax
000000000000a350	jne	0x0000a37a
000000000000a352	leaq	0x000a55df(%rip),%r15
000000000000a359	movq	0x0009c298(%rip),%rsi
000000000000a360	movq	%r12,%rdi
000000000000a363	movq	%r15,%rdx
000000000000a366	addq	$0x08,%rsp
000000000000a36a	popq	%rbx
000000000000a36b	popq	%r12
000000000000a36d	popq	%r13
000000000000a36f	popq	%r14
000000000000a371	popq	%r15
000000000000a373	popq	%rbp
000000000000a374	jmp	*0x00079d5e(%rip)
000000000000a37a	cmpw	$0x22,%ax
000000000000a37e	jne	0x0000a39c
000000000000a380	movq	0x0009c259(%rip),%rsi
000000000000a387	movq	%r12,%rdi
000000000000a38a	call	*0x00079d48(%rip)
000000000000a390	leaq	0x000a55a1(%rip),%r15
000000000000a397	jmp	0x0000a45c
000000000000a39c	movq	0x0009c24d(%rip),%rsi
000000000000a3a3	movq	%r12,%rdi
000000000000a3a6	call	*0x00079d2c(%rip)
000000000000a3ac	movq	%rax,%r14
000000000000a3af	movq	0x0009c22a(%rip),%r15
000000000000a3b6	movw	$0x0022,%bx
000000000000a3ba	movq	%r12,%rdi
000000000000a3bd	movq	%r15,%rsi
000000000000a3c0	call	*0x00079d12(%rip)
000000000000a3c6	cmpw	$0x5b,%ax
000000000000a3ca	jg	0x0000a3ea
000000000000a3cc	testw	%ax,%ax
000000000000a3cf	je	0x0000a496
000000000000a3d5	cmpw	$0x0a,%ax
000000000000a3d9	je	0x0000a473
000000000000a3df	cmpw	$0x22,%ax
000000000000a3e3	jne	0x0000a3ba
000000000000a3e5	jmp	0x0000a46e
000000000000a3ea	cmpw	$0x5c,%ax
000000000000a3ee	jne	0x0000a3ba
000000000000a3f0	movb	$0x01,%r13b
000000000000a3f3	movw	$0x005c,%bx
000000000000a3f7	xorl	%r15d,%r15d
000000000000a3fa	movq	0x000a494f(%rip),%rax
000000000000a401	cmpb	$0x00,(%r12,%rax)
000000000000a406	jne	0x0000a43d
000000000000a408	movq	0x0009c1e1(%rip),%rsi
000000000000a40f	movq	0x00079cc2(%rip),%r15
000000000000a416	movq	%r12,%rdi
000000000000a419	call	*%r15
000000000000a41c	subq	%r14,%rax
000000000000a41f	movq	0x000a4902(%rip),%rcx
000000000000a426	movq	(%r12,%rcx),%rdi
000000000000a42a	movq	0x0009a727(%rip),%rsi
000000000000a431	movq	%r14,%rdx
000000000000a434	movq	%rax,%rcx
000000000000a437	call	*%r15
000000000000a43a	movq	%rax,%r15
000000000000a43d	testb	%r13b,%r13b
000000000000a440	jne	0x0000a359
000000000000a446	cmpw	$0x22,%bx
000000000000a44a	jne	0x0000a45c
000000000000a44c	movq	0x0009c18d(%rip),%rsi
000000000000a453	movq	%r12,%rdi
000000000000a456	call	*0x00079c7c(%rip)
000000000000a45c	movq	%r15,%rax
000000000000a45f	addq	$0x08,%rsp
000000000000a463	popq	%rbx
000000000000a464	popq	%r12
000000000000a466	popq	%r13
000000000000a468	popq	%r14
000000000000a46a	popq	%r15
000000000000a46c	popq	%rbp
000000000000a46d	ret
000000000000a46e	xorb	%r13b,%r13b
000000000000a471	jmp	0x0000a3f7
000000000000a473	movq	0x0009c16e(%rip),%rsi
000000000000a47a	leaq	0x000a8397(%rip),%rdx
000000000000a481	movq	%r12,%rdi
000000000000a484	call	*0x00079c4e(%rip)
000000000000a48a	xorb	%r13b,%r13b
000000000000a48d	movw	$0x000a,%bx
000000000000a491	jmp	0x0000a3f7
000000000000a496	movq	0x000a48b3(%rip),%rax
000000000000a49d	movb	$0x01,(%r12,%rax)
000000000000a4a2	xorb	%r13b,%r13b
000000000000a4a5	xorl	%ebx,%ebx
000000000000a4a7	jmp	0x0000a3f7
000000000000a4ac	nop
-[PBXGDB_MIParser _reallyParseEscapedQuotedStringWithInitialString:]:
000000000000a4ad	pushq	%rbp
000000000000a4ae	movq	%rsp,%rbp
000000000000a4b1	pushq	%r15
000000000000a4b3	pushq	%r14
000000000000a4b5	pushq	%r13
000000000000a4b7	pushq	%r12
000000000000a4b9	pushq	%rbx
000000000000a4ba	subq	$0x38,%rsp
000000000000a4be	movq	%rdx,0xc8(%rbp)
000000000000a4c2	movq	%rdi,%r15
000000000000a4c5	movq	%r15,0xb0(%rbp)
000000000000a4c9	movq	0x0009df80(%rip),%rdi
000000000000a4d0	leaq	0x0009de09(%rip),%r14
000000000000a4d7	movq	%r14,%rsi
000000000000a4da	call	*0x0009de00(%rip)
000000000000a4e0	movq	0x0009b811(%rip),%rsi
000000000000a4e7	leaq	0xd6(%rbp),%rdx
000000000000a4eb	xorl	%r12d,%r12d
000000000000a4ee	movq	0x00079be3(%rip),%r13
000000000000a4f5	movq	%rax,%rdi
000000000000a4f8	movl	$0x00000001,%ecx
000000000000a4fd	xorl	%r8d,%r8d
000000000000a500	call	*%r13
000000000000a503	movq	%rax,0xa8(%rbp)
000000000000a507	movq	0x0009a782(%rip),%rsi
000000000000a50e	movq	0x0009df23(%rip),%rdi
000000000000a515	call	*%r13
000000000000a518	movq	%rax,%rbx
000000000000a51b	movq	%rbx,0xc0(%rbp)
000000000000a51f	movq	0x0009df1a(%rip),%rdi
000000000000a526	movq	%r14,%rsi
000000000000a529	call	*0x0009ddb1(%rip)
000000000000a52f	movq	0x0009a53a(%rip),%rsi
000000000000a536	movq	%rax,%rdi
000000000000a539	call	*%r13
000000000000a53c	movq	%rax,%r14
000000000000a53f	movq	0x0009a5ba(%rip),%rsi
000000000000a546	movq	%rbx,%rdi
000000000000a549	movq	0xc8(%rbp),%rdx
000000000000a54d	call	*%r13
000000000000a550	movq	0x0009c061(%rip),%rsi
000000000000a557	movq	%r15,%rdi
000000000000a55a	call	*%r13
000000000000a55d	xorl	%ecx,%ecx
000000000000a55f	movw	%ax,0xd6(%rbp)
000000000000a563	movq	%rcx,0xc8(%rbp)
000000000000a567	cmpl	$0x02,%r12d
000000000000a56b	je	0x0000a611
000000000000a571	cmpl	$0x01,%r12d
000000000000a575	je	0x0000a5d0
000000000000a577	testl	%r12d,%r12d
000000000000a57a	jne	0x0000a6bb
000000000000a580	movw	0xd6(%rbp),%ax
000000000000a584	movl	$0x00000009,%r13d
000000000000a58a	xorl	%r12d,%r12d
000000000000a58d	cmpw	$0x0a,%ax
000000000000a591	jne	0x0000a59b
000000000000a593	movq	%r14,%rbx
000000000000a596	jmp	0x0000a72e
000000000000a59b	cmpw	$0x22,%ax
000000000000a59f	movq	%r14,%rbx
000000000000a5a2	je	0x0000a72e
000000000000a5a8	cmpw	$0x5c,%ax
000000000000a5ac	jne	0x0000a5c2
000000000000a5ae	movq	%rbx,%r14
000000000000a5b1	movl	$0x00000001,%r12d
000000000000a5b7	movl	$0x00000004,%r13d
000000000000a5bd	jmp	0x0000a811
000000000000a5c2	movl	$0x0000000e,%r13d
000000000000a5c8	xorl	%r12d,%r12d
000000000000a5cb	jmp	0x0000a72e
000000000000a5d0	movw	0xd6(%rbp),%ax
000000000000a5d4	cmpw	$0x74,%ax
000000000000a5d8	je	0x0000a609
000000000000a5da	cmpw	$0x72,%ax
000000000000a5de	jne	0x0000a5ee
000000000000a5e0	xorl	%r12d,%r12d
000000000000a5e3	movl	$0x00000004,%r13d
000000000000a5e9	jmp	0x0000a811
000000000000a5ee	cmpw	$0x6e,%ax
000000000000a5f2	jne	0x0000a6da
000000000000a5f8	movw	$0x000a,0xd6(%rbp)
000000000000a5fe	movl	$0x0000000e,%r13d
000000000000a604	xorl	%r12d,%r12d
000000000000a607	jmp	0x0000a593
000000000000a609	movw	$0x0009,0xd6(%rbp)
000000000000a60f	jmp	0x0000a5fe
000000000000a611	cmpq	$0x02,0xc8(%rbp)
000000000000a616	movq	%r14,%rbx
000000000000a619	jg	0x0000a670
000000000000a61b	movq	0x000a46f6(%rip),%rax
000000000000a622	movq	(%r15,%rax),%rdi
000000000000a626	movzwl	0xd6(%rbp),%edx
000000000000a62a	movq	0x0009bf8f(%rip),%rsi
000000000000a631	call	*0x00079aa1(%rip)
000000000000a637	testb	%al,%al
000000000000a639	je	0x0000a65b
000000000000a63b	movq	%rbx,%r14
000000000000a63e	movb	0xd6(%rbp),%al
000000000000a641	movq	0xc8(%rbp),%rcx
000000000000a645	movb	%al,0xd2(%rbp,%rcx)
000000000000a649	incq	%rcx
000000000000a64c	movq	%rcx,0xc8(%rbp)
000000000000a650	movl	$0x00000004,%r13d
000000000000a656	jmp	0x0000a811
000000000000a65b	xorl	%r12d,%r12d
000000000000a65e	cmpq	$0x00,0xc8(%rbp)
000000000000a663	jg	0x0000a670
000000000000a665	movq	%rbx,%r14
000000000000a668	movl	%r12d,%r13d
000000000000a66b	jmp	0x0000a825
000000000000a670	movq	0xc8(%rbp),%rax
000000000000a674	movb	$0x00,0xd2(%rbp,%rax)
000000000000a679	movq	$0x00000000,0xc8(%rbp)
000000000000a681	leaq	0xd2(%rbp),%rdi
000000000000a685	xorl	%esi,%esi
000000000000a687	movl	$0x00000008,%edx
000000000000a68c	callq	0x0004e716	; symbol stub for: _strtol
000000000000a691	movb	%al,0xd1(%rbp)
000000000000a694	movq	%rbx,%rdi
000000000000a697	movq	%rbx,%r14
000000000000a69a	movq	0x0009a47f(%rip),%rsi
000000000000a6a1	leaq	0xd1(%rbp),%rdx
000000000000a6a5	movl	$0x00000001,%ecx
000000000000a6aa	call	*0x00079a28(%rip)
000000000000a6b0	xorl	%r12d,%r12d
000000000000a6b3	movl	%r12d,%r13d
000000000000a6b6	jmp	0x0000a825
000000000000a6bb	movl	%r12d,%esi
000000000000a6be	leaq	0x000a8113(%rip),%rdi
000000000000a6c5	xorb	%al,%al
000000000000a6c7	callq	0x0004e5c0	; symbol stub for: _NSLog
000000000000a6cc	movl	$0x00000004,%r13d
000000000000a6d2	xorl	%r12d,%r12d
000000000000a6d5	jmp	0x0000a811
000000000000a6da	movq	0x000a4637(%rip),%rcx
000000000000a6e1	movq	(%r15,%rcx),%rdi
000000000000a6e5	movzwl	%ax,%edx
000000000000a6e8	movq	0x0009bed1(%rip),%rsi
000000000000a6ef	call	*0x000799e3(%rip)
000000000000a6f5	testb	%al,%al
000000000000a6f7	movl	$0x00000000,%eax
000000000000a6fc	movq	0xc8(%rbp),%rcx
000000000000a700	cmovneq	%rax,%rcx
000000000000a704	movq	%rcx,0xc8(%rbp)
000000000000a708	movl	$0x00000000,%r13d
000000000000a70e	movl	$0x0000000e,%eax
000000000000a713	cmovel	%eax,%r13d
000000000000a717	setne	%al
000000000000a71a	movzbl	%al,%r12d
000000000000a71e	addl	%r12d,%r12d
000000000000a721	testb	$0x08,%r13b
000000000000a725	movq	%r14,%rbx
000000000000a728	je	0x0000a7ed
000000000000a72e	movq	%rbx,%rdi
000000000000a731	leaq	0x0009dbb8(%rip),%rsi
000000000000a738	call	*0x0009dbb2(%rip)
000000000000a73e	testq	%rax,%rax
000000000000a741	je	0x0000a7ed
000000000000a747	movq	0x0009dd02(%rip),%rdi
000000000000a74e	leaq	0x0009db8b(%rip),%rsi
000000000000a755	call	*0x0009db85(%rip)
000000000000a75b	movq	%rax,%rdi
000000000000a75e	movq	0x0009be63(%rip),%rsi
000000000000a765	movq	%rbx,%rdx
000000000000a768	movl	$0x00000004,%ecx
000000000000a76d	call	*0x00079965(%rip)
000000000000a773	testq	%rax,%rax
000000000000a776	jne	0x0000a7be
000000000000a778	movq	0x0009dcd1(%rip),%rax
000000000000a77f	movq	%rax,0xb8(%rbp)
000000000000a783	movq	%rbx,%rdi
000000000000a786	movq	0x0009a483(%rip),%rsi
000000000000a78d	movq	0x00079944(%rip),%r14
000000000000a794	call	*%r14
000000000000a797	movq	%rax,%r15
000000000000a79a	movq	%rbx,%rdi
000000000000a79d	leaq	0x0009db4c(%rip),%rsi
000000000000a7a4	call	*0x0009db46(%rip)
000000000000a7aa	movq	0xb8(%rbp),%rdi
000000000000a7ae	movq	0x0009be1b(%rip),%rsi
000000000000a7b5	movq	%r15,%rdx
000000000000a7b8	movq	%rax,%rcx
000000000000a7bb	call	*%r14
000000000000a7be	testq	%rax,%rax
000000000000a7c1	movq	0xb0(%rbp),%r15
000000000000a7c5	je	0x0000a7db
000000000000a7c7	movq	0xc0(%rbp),%rdi
000000000000a7cb	movq	0x0009a32e(%rip),%rsi
000000000000a7d2	movq	%rax,%rdx
000000000000a7d5	call	*0x000798fd(%rip)
000000000000a7db	movq	%rbx,%rdi
000000000000a7de	movq	0x0009bdf3(%rip),%rsi
000000000000a7e5	xorl	%edx,%edx
000000000000a7e7	call	*0x000798eb(%rip)
000000000000a7ed	movq	%rbx,%r14
000000000000a7f0	testb	$0x02,%r13b
000000000000a7f4	je	0x0000a80b
000000000000a7f6	movq	0xc0(%rbp),%rdi
000000000000a7fa	movq	0x0009a2ff(%rip),%rsi
000000000000a801	movq	0xa8(%rbp),%rdx
000000000000a805	call	*0x000798cd(%rip)
000000000000a80b	testb	$0x04,%r13b
000000000000a80f	je	0x0000a825
000000000000a811	movq	%r15,%rdi
000000000000a814	movq	0x0009bdc5(%rip),%rsi
000000000000a81b	call	*0x000798b7(%rip)
000000000000a821	movw	%ax,0xd6(%rbp)
000000000000a825	testb	$0x01,%r13b
000000000000a829	je	0x0000a567
000000000000a82f	cmpw	$0x0a,0xd6(%rbp)
000000000000a834	jne	0x0000a84f
000000000000a836	movq	0x0009bdab(%rip),%rsi
000000000000a83d	leaq	0x000a7fb4(%rip),%rdx
000000000000a844	movq	%r15,%rdi
000000000000a847	call	*0x0007988b(%rip)
000000000000a84d	jmp	0x0000a875
000000000000a84f	movq	0x0009bd62(%rip),%rsi
000000000000a856	movq	%r15,%rdi
000000000000a859	call	*0x00079879(%rip)
000000000000a85f	cmpw	$0x22,%ax
000000000000a863	jne	0x0000a875
000000000000a865	movq	0x0009bd74(%rip),%rsi
000000000000a86c	movq	%r15,%rdi
000000000000a86f	call	*0x00079863(%rip)
000000000000a875	movq	0xc0(%rbp),%rax
000000000000a879	addq	$0x38,%rsp
000000000000a87d	popq	%rbx
000000000000a87e	popq	%r12
000000000000a880	popq	%r13
000000000000a882	popq	%r14
000000000000a884	popq	%r15
000000000000a886	popq	%rbp
000000000000a887	ret
000000000000a888	nop
000000000000a889	nop
-[PBXGDB_MIParser parseMIList:]:
000000000000a88a	pushq	%rbp
000000000000a88b	movq	%rsp,%rbp
000000000000a88e	pushq	%r15
000000000000a890	pushq	%r14
000000000000a892	pushq	%r13
000000000000a894	pushq	%r12
000000000000a896	pushq	%rbx
000000000000a897	pushq	%rax
000000000000a898	movq	%rdx,%r14
000000000000a89b	movq	%rdi,%rbx
000000000000a89e	movq	0x0009bd13(%rip),%rsi
000000000000a8a5	call	*0x0007982d(%rip)
000000000000a8ab	cmpw	$0x5b,%ax
000000000000a8af	jne	0x0000a8c1
000000000000a8b1	movq	0x0009bd28(%rip),%rsi
000000000000a8b8	movq	%rbx,%rdi
000000000000a8bb	call	*0x00079817(%rip)
000000000000a8c1	movq	0x0009bcf0(%rip),%rsi
000000000000a8c8	movq	%rbx,%rdi
000000000000a8cb	call	*0x00079807(%rip)
000000000000a8d1	cmpw	$0x5d,%ax
000000000000a8d5	je	0x0000a938
000000000000a8d7	movq	0x0009bd02(%rip),%r15
000000000000a8de	movq	0x0009bcd3(%rip),%r12
000000000000a8e5	movq	0x000797ec(%rip),%r13
000000000000a8ec	movq	%rbx,%rdi
000000000000a8ef	movq	%r12,%rsi
000000000000a8f2	call	*0x000797e0(%rip)
000000000000a8f8	cmpw	$0x2c,%ax
000000000000a8fc	jne	0x0000a90a
000000000000a8fe	movq	%rbx,%rdi
000000000000a901	movq	%r15,%rsi
000000000000a904	call	*0x000797ce(%rip)
000000000000a90a	movq	%rbx,%rdi
000000000000a90d	movq	0x0009bd2c(%rip),%rsi
000000000000a914	call	*%r13
000000000000a917	movq	%r14,%rdi
000000000000a91a	movq	0x0009bd27(%rip),%rsi
000000000000a921	movq	%rax,%rdx
000000000000a924	call	*%r13
000000000000a927	movq	%rbx,%rdi
000000000000a92a	movq	0x0009bd1f(%rip),%rsi
000000000000a931	call	*%r13
000000000000a934	testb	%al,%al
000000000000a936	jne	0x0000a8ec
000000000000a938	movq	0x0009bc79(%rip),%rsi
000000000000a93f	movq	%rbx,%rdi
000000000000a942	call	*0x00079790(%rip)
000000000000a948	cmpw	$0x5d,%ax
000000000000a94c	jne	0x0000a95e
000000000000a94e	movq	0x0009bc8b(%rip),%rsi
000000000000a955	movq	%rbx,%rdi
000000000000a958	call	*0x0007977a(%rip)
000000000000a95e	addq	$0x08,%rsp
000000000000a962	popq	%rbx
000000000000a963	popq	%r12
000000000000a965	popq	%r13
000000000000a967	popq	%r14
000000000000a969	popq	%r15
000000000000a96b	popq	%rbp
000000000000a96c	ret
000000000000a96d	nop
000000000000a96e	nop
000000000000a96f	nop
-[PBXGDB_MIParser parseMIListItem]:
000000000000a970	pushq	%rbp
000000000000a971	movq	%rsp,%rbp
000000000000a974	pushq	%r15
000000000000a976	pushq	%r14
000000000000a978	pushq	%r13
000000000000a97a	pushq	%r12
000000000000a97c	pushq	%rbx
000000000000a97d	pushq	%rax
000000000000a97e	movq	%rdi,%rbx
000000000000a981	movq	0x0009dfe0(%rip),%rdi
000000000000a988	leaq	0x0009d951(%rip),%rsi
000000000000a98f	call	*0x0009d94b(%rip)
000000000000a995	movq	0x0009a0d4(%rip),%rsi
000000000000a99c	movq	0x00079735(%rip),%r14
000000000000a9a3	movq	%rax,%rdi
000000000000a9a6	call	*%r14
000000000000a9a9	movq	%rax,%r13
000000000000a9ac	movq	0x0009bc05(%rip),%rsi
000000000000a9b3	movq	%rbx,%rdi
000000000000a9b6	call	*%r14
000000000000a9b9	cmpw	$0x22,%ax
000000000000a9bd	je	0x0000aac5
000000000000a9c3	cmpw	$0x5b,%ax
000000000000a9c7	je	0x0000aac5
000000000000a9cd	cmpw	$0x7b,%ax
000000000000a9d1	je	0x0000aac5
000000000000a9d7	movq	%r13,0xd0(%rbp)
000000000000a9db	movq	0x0009bc0e(%rip),%rsi
000000000000a9e2	movq	%rbx,%rdi
000000000000a9e5	call	*0x000796ed(%rip)
000000000000a9eb	movq	%rax,%r15
000000000000a9ee	movq	0x0009bbf3(%rip),%r12
000000000000a9f5	movq	0x0009bbe4(%rip),%r13
000000000000a9fc	leaq	0x000a7e35(%rip),%r14
000000000000aa03	jmp	0x0000aa20
000000000000aa05	cmpw	$0x3d,%ax
000000000000aa09	je	0x0000aa45
000000000000aa0b	cmpw	$0x0a,%ax
000000000000aa0f	jne	0x0000aa20
000000000000aa11	movq	%rbx,%rdi
000000000000aa14	movq	%r12,%rsi
000000000000aa17	movq	%r14,%rdx
000000000000aa1a	call	*0x000796b8(%rip)
000000000000aa20	movq	%rbx,%rdi
000000000000aa23	movq	%r13,%rsi
000000000000aa26	call	*0x000796ac(%rip)
000000000000aa2c	testw	%ax,%ax
000000000000aa2f	jne	0x0000aa05
000000000000aa31	movq	0x000a4318(%rip),%rax
000000000000aa38	movb	$0x01,(%rbx,%rax)
000000000000aa3c	movq	0xd0(%rbp),%r13
000000000000aa40	jmp	0x0000aba2
000000000000aa45	movq	0x0009bba4(%rip),%rsi
000000000000aa4c	movq	0x00079685(%rip),%r12
000000000000aa53	movq	%rbx,%rdi
000000000000aa56	call	*%r12
000000000000aa59	subq	%r15,%rax
000000000000aa5c	movq	0x0009bb9d(%rip),%rsi
000000000000aa63	movq	%rbx,%rdi
000000000000aa66	movq	%r15,%rdx
000000000000aa69	movq	%rax,%rcx
000000000000aa6c	call	*%r12
000000000000aa6f	movq	0x000a428a(%rip),%rax
000000000000aa76	movq	(%rbx,%rax),%rdi
000000000000aa7a	movq	0x0009a037(%rip),%rsi
000000000000aa81	call	*%r12
000000000000aa84	movq	%rax,%r14
000000000000aa87	movq	0x0009bb7a(%rip),%rsi
000000000000aa8e	movq	%rbx,%rdi
000000000000aa91	call	*%r12
000000000000aa94	movq	0x0009bb75(%rip),%rsi
000000000000aa9b	movq	%r14,%rdi
000000000000aa9e	movq	%rax,%rdx
000000000000aaa1	call	*%r12
000000000000aaa4	movq	0x0009bb6d(%rip),%rsi
000000000000aaab	movq	0xd0(%rbp),%r13
000000000000aaaf	movq	%r13,%rdi
000000000000aab2	movq	%rax,%rdx
000000000000aab5	call	*%r12
000000000000aab8	movq	0x0009bb21(%rip),%rsi
000000000000aabf	movq	%rbx,%rdi
000000000000aac2	call	*%r12
000000000000aac5	cmpw	$0x7b,%ax
000000000000aac9	je	0x0000ab0a
000000000000aacb	cmpw	$0x5b,%ax
000000000000aacf	je	0x0000ab57
000000000000aad5	cmpw	$0x22,%ax
000000000000aad9	jne	0x0000ab8b
000000000000aadf	movq	0x0009bb3a(%rip),%rsi
000000000000aae6	movq	%rbx,%rdi
000000000000aae9	call	*0x000795e9(%rip)
000000000000aaef	testq	%rax,%rax
000000000000aaf2	je	0x0000aba2
000000000000aaf8	movq	0x0009bb29(%rip),%rsi
000000000000aaff	movq	%r13,%rdi
000000000000ab02	movq	%rax,%rdx
000000000000ab05	jmp	0x0000ab9c
000000000000ab0a	movq	0x0009de47(%rip),%rdi
000000000000ab11	leaq	0x0009d7c8(%rip),%rsi
000000000000ab18	call	*0x0009d7c2(%rip)
000000000000ab1e	movq	0x00099f4b(%rip),%rsi
000000000000ab25	movq	0x000795ac(%rip),%r15
000000000000ab2c	movq	%rax,%rdi
000000000000ab2f	call	*%r15
000000000000ab32	movq	%rax,%r14
000000000000ab35	movq	0x0009baf4(%rip),%rsi
000000000000ab3c	movq	%rbx,%rdi
000000000000ab3f	movq	%r14,%rdx
000000000000ab42	call	*%r15
000000000000ab45	movq	0x0009badc(%rip),%rsi
000000000000ab4c	movq	%r13,%rdi
000000000000ab4f	movq	%r14,%rdx
000000000000ab52	call	*%r15
000000000000ab55	jmp	0x0000aba2
000000000000ab57	movq	0x0009ddfa(%rip),%rdi
000000000000ab5e	leaq	0x0009d77b(%rip),%rsi
000000000000ab65	call	*0x0009d775(%rip)
000000000000ab6b	movq	0x00099efe(%rip),%rsi
000000000000ab72	movq	0x0007955f(%rip),%r15
000000000000ab79	movq	%rax,%rdi
000000000000ab7c	call	*%r15
000000000000ab7f	movq	%rax,%r14
000000000000ab82	movq	0x0009baaf(%rip),%rsi
000000000000ab89	jmp	0x0000ab3c
000000000000ab8b	movq	0x0009ba56(%rip),%rsi
000000000000ab92	leaq	0x000a7cbf(%rip),%rdx
000000000000ab99	movq	%rbx,%rdi
000000000000ab9c	call	*0x00079536(%rip)
000000000000aba2	movq	%r13,%rax
000000000000aba5	addq	$0x08,%rsp
000000000000aba9	popq	%rbx
000000000000abaa	popq	%r12
000000000000abac	popq	%r13
000000000000abae	popq	%r14
000000000000abb0	popq	%r15
000000000000abb2	popq	%rbp
000000000000abb3	ret
-[PBXGDB_Adaptor uniqueStringForString:]:
000000000000abb4	pushq	%rbp
000000000000abb5	movq	%rsp,%rbp
000000000000abb8	pushq	%r15
000000000000abba	pushq	%r14
000000000000abbc	pushq	%r12
000000000000abbe	pushq	%rbx
000000000000abbf	movq	%rdx,%r15
000000000000abc2	movq	%rdi,%r14
000000000000abc5	xorl	%ebx,%ebx
000000000000abc7	testq	%r15,%r15
000000000000abca	je	0x0000ac48
000000000000abcc	movq	0x000a3acd(%rip),%rax
000000000000abd3	movq	(%r14,%rax),%rdi
000000000000abd7	leaq	0x0009d772(%rip),%rsi
000000000000abde	movq	%r15,%rdx
000000000000abe1	call	*0x0009d769(%rip)
000000000000abe7	movq	%rax,%rbx
000000000000abea	incq	0x000aca77(%rip)
000000000000abf1	testq	%rbx,%rbx
000000000000abf4	jne	0x0000ac41
000000000000abf6	movq	0x0009d853(%rip),%rdi
000000000000abfd	leaq	0x0009d6dc(%rip),%rsi
000000000000ac04	call	*0x0009d6d6(%rip)
000000000000ac0a	movq	0x0009a1ff(%rip),%rsi
000000000000ac11	movq	0x000794c0(%rip),%r12
000000000000ac18	movq	%rax,%rdi
000000000000ac1b	movq	%r15,%rdx
000000000000ac1e	call	*%r12
000000000000ac21	movq	%rax,%rbx
000000000000ac24	movq	0x000a3a75(%rip),%rax
000000000000ac2b	movq	(%r14,%rax),%rdi
000000000000ac2f	movq	0x0009a0fa(%rip),%rsi
000000000000ac36	movq	%rbx,%rdx
000000000000ac39	movq	%rbx,%rcx
000000000000ac3c	call	*%r12
000000000000ac3f	jmp	0x0000ac48
000000000000ac41	incq	0x000aca28(%rip)
000000000000ac48	movq	%rbx,%rax
000000000000ac4b	popq	%rbx
000000000000ac4c	popq	%r12
000000000000ac4e	popq	%r14
000000000000ac50	popq	%r15
000000000000ac52	popq	%rbp
000000000000ac53	ret
-[PBXGDB_MIResultListItem setKey:]:
000000000000ac54	pushq	%rbp
000000000000ac55	movq	%rsp,%rbp
000000000000ac58	movq	%rdx,%rax
000000000000ac5b	movq	%rdi,%rcx
000000000000ac5e	movq	0x000a412b(%rip),%rdx
000000000000ac65	movq	%rax,%rdi
000000000000ac68	movq	%rcx,%rsi
000000000000ac6b	popq	%rbp
000000000000ac6c	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MIResultListItem setValue:]:
000000000000ac71	pushq	%rbp
000000000000ac72	movq	%rsp,%rbp
000000000000ac75	movq	%rdx,%rax
000000000000ac78	movq	%rdi,%rcx
000000000000ac7b	movq	0x000a4106(%rip),%rdx
000000000000ac82	movq	%rax,%rdi
000000000000ac85	movq	%rcx,%rsi
000000000000ac88	popq	%rbp
000000000000ac89	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000000ac8e	nop
-[PBXGDB_MIResultList addItem:]:
000000000000ac8f	pushq	%rbp
000000000000ac90	movq	%rsp,%rbp
000000000000ac93	pushq	%r15
000000000000ac95	pushq	%r14
000000000000ac97	pushq	%r13
000000000000ac99	pushq	%r12
000000000000ac9b	pushq	%rbx
000000000000ac9c	pushq	%rax
000000000000ac9d	movq	%rdx,%r14
000000000000aca0	movq	%rdi,%r15
000000000000aca3	movq	0x0009b536(%rip),%rsi
000000000000acaa	movq	%r14,%rdi
000000000000acad	call	*0x00079425(%rip)
000000000000acb3	movq	%rax,%r12
000000000000acb6	testq	%r12,%r12
000000000000acb9	jne	0x0000ad2d
000000000000acbb	movq	%r15,%rbx
000000000000acbe	movq	0x000a40bb(%rip),%rax
000000000000acc5	cmpq	$0x00,(%rbx,%rax)
000000000000acca	jne	0x0000ad72
000000000000acd0	movq	0x0009d789(%rip),%rdi
000000000000acd7	leaq	0x0009d602(%rip),%rsi
000000000000acde	call	*0x0009d5fc(%rip)
000000000000ace4	movq	%rax,%r12
000000000000ace7	movq	0x000a4082(%rip),%rax
000000000000acee	movq	(%rbx,%rax),%rdi
000000000000acf2	movq	0x0009b9ff(%rip),%rsi
000000000000acf9	movq	0x000793d8(%rip),%r13
000000000000ad00	call	*%r13
000000000000ad03	movq	0x0009b9f6(%rip),%rsi
000000000000ad0a	movq	%r12,%rdi
000000000000ad0d	movq	%rax,%rdx
000000000000ad10	call	*%r13
000000000000ad13	movq	0x000a4066(%rip),%rdx
000000000000ad1a	addq	%rbx,%rdx
000000000000ad1d	subq	%r15,%rdx
000000000000ad20	movq	%rax,%rdi
000000000000ad23	movq	%r15,%rsi
000000000000ad26	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000000ad2b	jmp	0x0000ad72
000000000000ad2d	movq	0x000a403c(%rip),%rax
000000000000ad34	movq	(%r15,%rax),%rdi
000000000000ad38	leaq	0x0009d611(%rip),%rsi
000000000000ad3f	movq	%r12,%rdx
000000000000ad42	call	*0x0009d608(%rip)
000000000000ad48	testq	%rax,%rax
000000000000ad4b	movq	%r15,%rbx
000000000000ad4e	jne	0x0000acbe
000000000000ad54	movq	0x000a4015(%rip),%rax
000000000000ad5b	movq	(%r15,%rax),%rdi
000000000000ad5f	movq	0x00099fca(%rip),%rsi
000000000000ad66	movq	%r14,%rdx
000000000000ad69	movq	%r12,%rcx
000000000000ad6c	call	*0x00079366(%rip)
000000000000ad72	movq	0x000a4007(%rip),%rax
000000000000ad79	movq	(%r15,%rax),%rdi
000000000000ad7d	testq	%rdi,%rdi
000000000000ad80	jne	0x0000ad91
000000000000ad82	addq	$0x08,%rsp
000000000000ad86	popq	%rbx
000000000000ad87	popq	%r12
000000000000ad89	popq	%r13
000000000000ad8b	popq	%r14
000000000000ad8d	popq	%r15
000000000000ad8f	popq	%rbp
000000000000ad90	ret
000000000000ad91	movq	0x0009d568(%rip),%rax
000000000000ad98	leaq	0x0009d561(%rip),%rsi
000000000000ad9f	movq	%r14,%rdx
000000000000ada2	addq	$0x08,%rsp
000000000000ada6	popq	%rbx
000000000000ada7	popq	%r12
000000000000ada9	popq	%r13
000000000000adab	popq	%r14
000000000000adad	popq	%r15
000000000000adaf	popq	%rbp
000000000000adb0	jmp	*%rax
-[PBXGDB_MIResultListItem key]:
000000000000adb2	pushq	%rbp
000000000000adb3	movq	%rsp,%rbp
000000000000adb6	movq	0x000a3fd3(%rip),%rax
000000000000adbd	movq	(%rdi,%rax),%rax
000000000000adc1	popq	%rbp
000000000000adc2	ret
000000000000adc3	nop
-[PBXGDB_MIParser _continueParsingMIListOrTuple]:
000000000000adc4	pushq	%rbp
000000000000adc5	movq	%rsp,%rbp
000000000000adc8	pushq	%rbx
000000000000adc9	pushq	%rax
000000000000adca	movq	%rdi,%rbx
000000000000adcd	movq	0x0009b7e4(%rip),%rsi
000000000000add4	call	*0x000792fe(%rip)
000000000000adda	xorb	%cl,%cl
000000000000addc	cmpw	$0x2c,%ax
000000000000ade0	jne	0x0000ae10
000000000000ade2	movq	0x0009b7cf(%rip),%rsi
000000000000ade9	movq	%rbx,%rdi
000000000000adec	call	*0x000792e6(%rip)
000000000000adf2	xorb	%cl,%cl
000000000000adf4	cmpw	$0x0a,%ax
000000000000adf8	je	0x0000ae10
000000000000adfa	movq	0x0009b7b7(%rip),%rsi
000000000000ae01	movq	%rbx,%rdi
000000000000ae04	call	*0x000792ce(%rip)
000000000000ae0a	testw	%ax,%ax
000000000000ae0d	setne	%cl
000000000000ae10	movzbl	%cl,%eax
000000000000ae13	addq	$0x08,%rsp
000000000000ae17	popq	%rbx
000000000000ae18	popq	%rbp
000000000000ae19	ret
000000000000ae1a	nop
000000000000ae1b	nop
000000000000ae1c	nop
-[PBXGDB_MIParser parseMITuple:]:
000000000000ae1d	pushq	%rbp
000000000000ae1e	movq	%rsp,%rbp
000000000000ae21	pushq	%r15
000000000000ae23	pushq	%r14
000000000000ae25	pushq	%r13
000000000000ae27	pushq	%r12
000000000000ae29	pushq	%rbx
000000000000ae2a	pushq	%rax
000000000000ae2b	movq	%rdx,%r14
000000000000ae2e	movq	%rdi,%rbx
000000000000ae31	movq	0x0009b780(%rip),%rsi
000000000000ae38	call	*0x0007929a(%rip)
000000000000ae3e	cmpw	$0x7b,%ax
000000000000ae42	jne	0x0000ae54
000000000000ae44	movq	0x0009b795(%rip),%rsi
000000000000ae4b	movq	%rbx,%rdi
000000000000ae4e	call	*0x00079284(%rip)
000000000000ae54	movq	0x0009b75d(%rip),%rsi
000000000000ae5b	movq	%rbx,%rdi
000000000000ae5e	call	*0x00079274(%rip)
000000000000ae64	cmpw	$0x7d,%ax
000000000000ae68	je	0x0000aecb
000000000000ae6a	movq	0x0009b76f(%rip),%r15
000000000000ae71	movq	0x0009b740(%rip),%r12
000000000000ae78	movq	0x00079259(%rip),%r13
000000000000ae7f	movq	%rbx,%rdi
000000000000ae82	movq	%r12,%rsi
000000000000ae85	call	*0x0007924d(%rip)
000000000000ae8b	cmpw	$0x2c,%ax
000000000000ae8f	jne	0x0000ae9d
000000000000ae91	movq	%rbx,%rdi
000000000000ae94	movq	%r15,%rsi
000000000000ae97	call	*0x0007923b(%rip)
000000000000ae9d	movq	%rbx,%rdi
000000000000aea0	movq	0x0009b799(%rip),%rsi
000000000000aea7	call	*%r13
000000000000aeaa	movq	%r14,%rdi
000000000000aead	movq	0x0009b794(%rip),%rsi
000000000000aeb4	movq	%rax,%rdx
000000000000aeb7	call	*%r13
000000000000aeba	movq	%rbx,%rdi
000000000000aebd	movq	0x0009b78c(%rip),%rsi
000000000000aec4	call	*%r13
000000000000aec7	testb	%al,%al
000000000000aec9	jne	0x0000ae7f
000000000000aecb	movq	0x0009b6e6(%rip),%rsi
000000000000aed2	movq	%rbx,%rdi
000000000000aed5	call	*0x000791fd(%rip)
000000000000aedb	cmpw	$0x7d,%ax
000000000000aedf	jne	0x0000aef1
000000000000aee1	movq	0x0009b6f8(%rip),%rsi
000000000000aee8	movq	%rbx,%rdi
000000000000aeeb	call	*0x000791e7(%rip)
000000000000aef1	addq	$0x08,%rsp
000000000000aef5	popq	%rbx
000000000000aef6	popq	%r12
000000000000aef8	popq	%r13
000000000000aefa	popq	%r14
000000000000aefc	popq	%r15
000000000000aefe	popq	%rbp
000000000000aeff	ret
000000000000af00	nop
000000000000af01	nop
000000000000af02	nop
000000000000af03	nop
000000000000af04	nop
000000000000af05	nop
000000000000af06	nop
000000000000af07	nop
000000000000af08	nop
000000000000af09	nop
000000000000af0a	nop
000000000000af0b	nop
000000000000af0c	nop
000000000000af0d	nop
-[PBXGDB_MIController processSynchronousResult:]:
000000000000af0e	pushq	%rbp
000000000000af0f	movq	%rsp,%rbp
000000000000af12	movq	0x0009b5a7(%rip),%rsi
000000000000af19	movl	$0x00000001,%ecx
000000000000af1e	popq	%rbp
000000000000af1f	jmp	*0x000791b3(%rip)
000000000000af25	nop
000000000000af26	nop
000000000000af27	nop
000000000000af28	nop
000000000000af29	nop
000000000000af2a	nop
000000000000af2b	nop
000000000000af2c	nop
000000000000af2d	nop
000000000000af2e	nop
000000000000af2f	nop
000000000000af30	nop
000000000000af31	nop
000000000000af32	nop
000000000000af33	nop
-[PBXGDB_MIController _processResultList:syncResult:]:
000000000000af34	pushq	%rbp
000000000000af35	movq	%rsp,%rbp
000000000000af38	pushq	%r15
000000000000af3a	pushq	%r14
000000000000af3c	pushq	%r13
000000000000af3e	pushq	%r12
000000000000af40	pushq	%rbx
000000000000af41	subq	$0x18,%rsp
000000000000af45	movl	%ecx,0xcc(%rbp)
000000000000af48	movq	%rdx,%rbx
000000000000af4b	movq	%rbx,0xd0(%rbp)
000000000000af4f	movq	%rdi,%r14
000000000000af52	movq	0x000a3c87(%rip),%rax
000000000000af59	movq	(%r14,%rax),%rdi
000000000000af5d	movq	0x0009b4ec(%rip),%rsi
000000000000af64	movq	0x0007916d(%rip),%r15
000000000000af6b	call	*%r15
000000000000af6e	movq	%rax,%r13
000000000000af71	movq	0x00099d28(%rip),%rsi
000000000000af78	movq	%rbx,%rdi
000000000000af7b	call	*%r15
000000000000af7e	movq	%rax,%r12
000000000000af81	movq	0x00099b30(%rip),%rsi
000000000000af88	movq	%r14,%rdi
000000000000af8b	call	*%r15
000000000000af8e	leaq	0x000a7043(%rip),%rdx
000000000000af95	movq	0x00099d7c(%rip),%rsi
000000000000af9c	movq	%rax,%rdi
000000000000af9f	movl	$0x00000001,%ecx
000000000000afa4	call	*%r15
000000000000afa7	xorl	%r15d,%r15d
000000000000afaa	testq	%r13,%r13
000000000000afad	je	0x0000afc5
000000000000afaf	movq	0x0009b4a2(%rip),%rsi
000000000000afb6	movq	%r14,%rdi
000000000000afb9	movq	%r13,%rdx
000000000000afbc	call	*0x00079116(%rip)
000000000000afc2	movq	%rax,%r15
000000000000afc5	leaq	0x000abd7c(%rip),%rax
000000000000afcc	movq	(%rax),%rdx
000000000000afcf	leaq	0x0009d38a(%rip),%rsi
000000000000afd6	movq	%r12,%rdi
000000000000afd9	call	*0x0009d381(%rip)
000000000000afdf	testb	%al,%al
000000000000afe1	je	0x0000b055
000000000000afe3	movq	0x00099aee(%rip),%rsi
000000000000afea	leaq	0x000a4d47(%rip),%rdx
000000000000aff1	movq	0x000790e0(%rip),%rbx
000000000000aff8	movq	0xd0(%rbp),%rdi
000000000000affc	call	*%rbx
000000000000affe	movq	0x00099b03(%rip),%rsi
000000000000b005	movq	%rax,%rdi
000000000000b008	call	*%rbx
000000000000b00a	leaq	0x0009d34f(%rip),%rsi
000000000000b011	leaq	0x000a6fe0(%rip),%rdx
000000000000b018	movq	%rax,%rdi
000000000000b01b	call	*0x0009d33f(%rip)
000000000000b021	testb	%al,%al
000000000000b023	je	0x0000b035
000000000000b025	movq	0x0009b3f4(%rip),%rsi
000000000000b02c	movq	%r14,%rdi
000000000000b02f	call	*0x000790a3(%rip)
000000000000b035	movq	0x0009b244(%rip),%rsi
000000000000b03c	movq	%r14,%rdi
000000000000b03f	xorl	%edx,%edx
000000000000b041	addq	$0x18,%rsp
000000000000b045	popq	%rbx
000000000000b046	popq	%r12
000000000000b048	popq	%r13
000000000000b04a	popq	%r14
000000000000b04c	popq	%r15
000000000000b04e	popq	%rbp
000000000000b04f	jmp	*0x00079083(%rip)
000000000000b055	movq	0x0009b404(%rip),%rsi
000000000000b05c	movq	0x00079075(%rip),%r13
000000000000b063	movq	%r14,%rdi
000000000000b066	movq	0xd0(%rbp),%rbx
000000000000b06a	movq	%rbx,%rdx
000000000000b06d	call	*%r13
000000000000b070	movq	0x0009b3f1(%rip),%rsi
000000000000b077	movq	%r14,%rdi
000000000000b07a	movq	%rbx,%rdx
000000000000b07d	call	*%r13
000000000000b080	movq	0x000a3b99(%rip),%rax
000000000000b087	movq	(%r14,%rax),%rax
000000000000b08b	movq	0x000a3b2e(%rip),%rcx
000000000000b092	movl	(%rax,%rcx),%ecx
000000000000b095	cmpl	$0x02,%ecx
000000000000b098	je	0x0000b0c0
000000000000b09a	cmpl	$0x04,%ecx
000000000000b09d	movq	%r15,%r13
000000000000b0a0	jne	0x0000b0ff
000000000000b0a2	movq	0x000a3b0f(%rip),%rcx
000000000000b0a9	movq	(%rax,%rcx),%rax
000000000000b0ad	movq	0x000a3ad4(%rip),%rcx
000000000000b0b4	cmpq	$0x01,(%rax,%rcx)
000000000000b0b9	jne	0x0000b0ff
000000000000b0bb	jmp	0x0000b995
000000000000b0c0	leaq	0x000a6f51(%rip),%rdi
000000000000b0c7	callq	0x0004e5ba	; symbol stub for: _NSClassFromString
000000000000b0cc	leaq	0x0009d26d(%rip),%rsi
000000000000b0d3	movq	%r15,%r13
000000000000b0d6	movq	%r13,%rdi
000000000000b0d9	movq	%rax,%rdx
000000000000b0dc	call	*0x0009d25e(%rip)
000000000000b0e2	testb	%al,%al
000000000000b0e4	je	0x0000b0ff
000000000000b0e6	movq	0x000a3b33(%rip),%rax
000000000000b0ed	movq	(%r14,%rax),%rax
000000000000b0f1	movq	0x000a3ac8(%rip),%rcx
000000000000b0f8	movl	$0x00000000,(%rax,%rcx)
000000000000b0ff	movq	0x000a3b1a(%rip),%rax
000000000000b106	movq	(%r14,%rax),%rax
000000000000b10a	movq	0x000a3aaf(%rip),%rcx
000000000000b111	cmpl	$0x00,(%rax,%rcx)
000000000000b115	je	0x0000b47a
000000000000b11b	movq	0x0009b15e(%rip),%rsi
000000000000b122	movq	%r14,%rdi
000000000000b125	movl	$0x00000001,%edx
000000000000b12a	call	*0x00078fa8(%rip)
000000000000b130	movq	0x000a3ae9(%rip),%rax
000000000000b137	movq	(%r14,%rax),%rax
000000000000b13b	movq	0x000a3a7e(%rip),%rcx
000000000000b142	movl	(%rax,%rcx),%eax
000000000000b145	cmpl	$0x01,%eax
000000000000b148	movq	%rbx,%r15
000000000000b14b	jne	0x0000b19f
000000000000b14d	movq	0x0009b31c(%rip),%rsi
000000000000b154	movq	0x00078f7d(%rip),%r12
000000000000b15b	movq	%r14,%rdi
000000000000b15e	call	*%r12
000000000000b161	movl	%eax,%ebx
000000000000b163	movq	0x0009b1b6(%rip),%rsi
000000000000b16a	movq	%r14,%rdi
000000000000b16d	xorl	%edx,%edx
000000000000b16f	call	*%r12
000000000000b172	movq	0x0009ab5f(%rip),%rsi
000000000000b179	movq	%r14,%rdi
000000000000b17c	xorl	%edx,%edx
000000000000b17e	call	*%r12
000000000000b181	cmpl	$0x02,%ebx
000000000000b184	je	0x0000b319
000000000000b18a	movq	0x000a3a8f(%rip),%rax
000000000000b191	movq	(%r14,%rax),%rax
000000000000b195	movq	0x000a3a24(%rip),%rcx
000000000000b19c	movl	(%rax,%rcx),%eax
000000000000b19f	cmpl	$0x04,%eax
000000000000b1a2	jne	0x0000b2b5
000000000000b1a8	movq	0x00099929(%rip),%rsi
000000000000b1af	leaq	0x000a6e82(%rip),%rdx
000000000000b1b6	movq	0x00078f1b(%rip),%rbx
000000000000b1bd	movq	%r15,%rdi
000000000000b1c0	call	*%rbx
000000000000b1c2	movq	0x0009993f(%rip),%rsi
000000000000b1c9	movq	%rax,%rdi
000000000000b1cc	call	*%rbx
000000000000b1ce	testq	%rax,%rax
000000000000b1d1	je	0x0000b259
000000000000b1d7	movq	0x000a3a42(%rip),%rcx
000000000000b1de	movq	(%r14,%rcx),%rcx
000000000000b1e2	movq	0x000a39cf(%rip),%rdx
000000000000b1e9	movq	(%rcx,%rdx),%rsi
000000000000b1ed	movq	0x000a39a4(%rip),%rdx
000000000000b1f4	movq	%rax,%rdi
000000000000b1f7	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000000b1fc	movq	0x000998d5(%rip),%rsi
000000000000b203	leaq	0x000a4b2e(%rip),%rdx
000000000000b20a	movq	0x00078ec7(%rip),%rbx
000000000000b211	movq	%r15,%rdi
000000000000b214	call	*%rbx
000000000000b216	movq	0x000998eb(%rip),%rsi
000000000000b21d	movq	%rax,%rdi
000000000000b220	call	*%rbx
000000000000b222	leaq	0x0009d167(%rip),%rsi
000000000000b229	leaq	0x000a6be8(%rip),%rdx
000000000000b230	movq	%rax,%rdi
000000000000b233	call	*0x0009d157(%rip)
000000000000b239	movq	0x000a39e0(%rip),%rcx
000000000000b240	movq	(%r14,%rcx),%rcx
000000000000b244	movq	0x000a396d(%rip),%rdx
000000000000b24b	movq	(%rcx,%rdx),%rcx
000000000000b24f	movq	0x000a394a(%rip),%rdx
000000000000b256	movb	%al,(%rcx,%rdx)
000000000000b259	movq	0x00099878(%rip),%rsi
000000000000b260	leaq	0x000a4a71(%rip),%rdx
000000000000b267	movq	0x00078e6a(%rip),%rbx
000000000000b26e	movq	%r15,%rdi
000000000000b271	call	*%rbx
000000000000b273	movq	0x0009988e(%rip),%rsi
000000000000b27a	movq	%rax,%rdi
000000000000b27d	call	*%rbx
000000000000b27f	testq	%rax,%rax
000000000000b282	je	0x0000b2b5
000000000000b284	movq	0x0009a055(%rip),%rsi
000000000000b28b	movq	%rax,%rdi
000000000000b28e	call	*0x00078e44(%rip)
000000000000b294	movq	0x000a3985(%rip),%rcx
000000000000b29b	movq	(%r14,%rcx),%rcx
000000000000b29f	movq	0x000a3912(%rip),%rdx
000000000000b2a6	movq	(%rcx,%rdx),%rcx
000000000000b2aa	movq	0x000a38f7(%rip),%rdx
000000000000b2b1	movq	%rax,(%rcx,%rdx)
000000000000b2b5	movq	0x000a3964(%rip),%rax
000000000000b2bc	movq	(%r14,%rax),%rax
000000000000b2c0	movq	0x000a38f9(%rip),%rcx
000000000000b2c7	cmpl	$0x04,(%rax,%rcx)
000000000000b2cb	jne	0x0000b36e
000000000000b2d1	movq	0x000a38e0(%rip),%rcx
000000000000b2d8	movq	(%rax,%rcx),%rax
000000000000b2dc	movq	0x000a38a5(%rip),%rcx
000000000000b2e3	cmpq	$0x01,(%rax,%rcx)
000000000000b2e8	jne	0x0000b36e
000000000000b2ee	movq	0x000997c3(%rip),%rsi
000000000000b2f5	movq	0x00078ddc(%rip),%rbx
000000000000b2fc	movq	%r14,%rdi
000000000000b2ff	call	*%rbx
000000000000b301	movq	0x00099eb0(%rip),%rsi
000000000000b308	movq	%rax,%rdi
000000000000b30b	call	*%rbx
000000000000b30d	movq	0x0009a8ac(%rip),%rsi
000000000000b314	jmp	0x0000b8d5
000000000000b319	movq	0x00099798(%rip),%rsi
000000000000b320	movq	0x00078db1(%rip),%rbx
000000000000b327	movq	%r14,%rdi
000000000000b32a	call	*%rbx
000000000000b32c	movq	0x00099a9d(%rip),%rsi
000000000000b333	movq	%rax,%rdi
000000000000b336	call	*%rbx
000000000000b338	movq	0x0009b139(%rip),%rsi
000000000000b33f	movq	%rax,%rdi
000000000000b342	call	*%rbx
000000000000b344	testq	%r13,%r13
000000000000b347	je	0x0000b995
000000000000b34d	movq	0x0009b01c(%rip),%rsi
000000000000b354	movq	%r14,%rdi
000000000000b357	movq	%r13,%rdx
000000000000b35a	addq	$0x18,%rsp
000000000000b35e	popq	%rbx
000000000000b35f	popq	%r12
000000000000b361	popq	%r13
000000000000b363	popq	%r14
000000000000b365	popq	%r15
000000000000b367	popq	%rbp
000000000000b368	jmp	*0x00078d6a(%rip)
000000000000b36e	movq	0x00099743(%rip),%rsi
000000000000b375	movq	0x00078d5c(%rip),%rbx
000000000000b37c	movq	%r14,%rdi
000000000000b37f	call	*%rbx
000000000000b381	movq	0x00099e30(%rip),%rsi
000000000000b388	movq	%rax,%rdi
000000000000b38b	call	*%rbx
000000000000b38d	movq	0x0009a82c(%rip),%rsi
000000000000b394	movq	%rax,%rdi
000000000000b397	call	*%rbx
000000000000b399	leaq	0x000a4998(%rip),%rdx
000000000000b3a0	movq	0x00099731(%rip),%rsi
000000000000b3a7	movq	%r15,%rdi
000000000000b3aa	call	*%rbx
000000000000b3ac	movq	0x00099755(%rip),%rsi
000000000000b3b3	movq	%rax,%rdi
000000000000b3b6	call	*%rbx
000000000000b3b8	leaq	0x0009cfa1(%rip),%rsi
000000000000b3bf	leaq	0x000a6a72(%rip),%rdx
000000000000b3c6	movq	%rax,%rdi
000000000000b3c9	call	*0x0009cf91(%rip)
000000000000b3cf	testb	%al,%al
000000000000b3d1	jne	0x0000b459
000000000000b3d7	movq	0x000996fa(%rip),%rsi
000000000000b3de	leaq	0x000a4953(%rip),%rdx
000000000000b3e5	movq	0x00078cec(%rip),%rbx
000000000000b3ec	movq	%r15,%rdi
000000000000b3ef	call	*%rbx
000000000000b3f1	movq	0x00099710(%rip),%rsi
000000000000b3f8	movq	%rax,%rdi
000000000000b3fb	call	*%rbx
000000000000b3fd	leaq	0x0009cf5c(%rip),%rsi
000000000000b404	leaq	0x000a6a8d(%rip),%rdx
000000000000b40b	movq	%rax,%rdi
000000000000b40e	call	*0x0009cf4c(%rip)
000000000000b414	testb	%al,%al
000000000000b416	jne	0x0000b459
000000000000b418	movq	0x000996b9(%rip),%rsi
000000000000b41f	leaq	0x000a4912(%rip),%rdx
000000000000b426	movq	0x00078cab(%rip),%rbx
000000000000b42d	movq	%r15,%rdi
000000000000b430	call	*%rbx
000000000000b432	movq	0x000996cf(%rip),%rsi
000000000000b439	movq	%rax,%rdi
000000000000b43c	call	*%rbx
000000000000b43e	leaq	0x0009cf1b(%rip),%rsi
000000000000b445	leaq	0x000a6a2c(%rip),%rdx
000000000000b44c	movq	%rax,%rdi
000000000000b44f	call	*0x0009cf0b(%rip)
000000000000b455	testb	%al,%al
000000000000b457	je	0x0000b471
000000000000b459	movq	0x0009ada0(%rip),%rsi
000000000000b460	movq	%r13,%rdi
000000000000b463	movq	%r15,%rdx
000000000000b466	call	*0x00078c6c(%rip)
000000000000b46c	jmp	0x0000b955
000000000000b471	movq	0x0009b008(%rip),%rsi
000000000000b478	jmp	0x0000b460
000000000000b47a	movl	0xcc(%rbp),%eax
000000000000b47d	testb	%al,%al
000000000000b47f	movq	%rbx,%r15
000000000000b482	je	0x0000b933
000000000000b488	leaq	0x000ab889(%rip),%rax
000000000000b48f	movq	(%rax),%rdx
000000000000b492	leaq	0x0009cec7(%rip),%rsi
000000000000b499	movq	%r12,%rdi
000000000000b49c	call	*0x0009cebe(%rip)
000000000000b4a2	testb	%al,%al
000000000000b4a4	je	0x0000b502
000000000000b4a6	movq	0x0009add3(%rip),%rsi
000000000000b4ad	movq	%r14,%rdi
000000000000b4b0	xorl	%edx,%edx
000000000000b4b2	call	*0x00078c20(%rip)
000000000000b4b8	testq	%r13,%r13
000000000000b4bb	je	0x0000b4d2
000000000000b4bd	movq	0x0009afc4(%rip),%rsi
000000000000b4c4	movq	%r13,%rdi
000000000000b4c7	call	*0x00078c0b(%rip)
000000000000b4cd	jmp	0x0000b96d
000000000000b4d2	movq	0x000995df(%rip),%rsi
000000000000b4d9	movq	0x00078bf8(%rip),%rbx
000000000000b4e0	movq	%r14,%rdi
000000000000b4e3	call	*%rbx
000000000000b4e5	movq	0x00099ccc(%rip),%rsi
000000000000b4ec	movq	%rax,%rdi
000000000000b4ef	call	*%rbx
000000000000b4f1	movq	0x0009a688(%rip),%rsi
000000000000b4f8	movq	%rax,%rdi
000000000000b4fb	call	*%rbx
000000000000b4fd	jmp	0x0000b96d
000000000000b502	leaq	0x000ab817(%rip),%rax
000000000000b509	movq	(%rax),%rdx
000000000000b50c	leaq	0x0009ce4d(%rip),%rsi
000000000000b513	movq	%r12,%rdi
000000000000b516	call	*0x0009ce44(%rip)
000000000000b51c	testb	%al,%al
000000000000b51e	je	0x0000b54b
000000000000b520	movq	0x00099591(%rip),%rsi
000000000000b527	movq	0x00078baa(%rip),%rbx
000000000000b52e	movq	%r14,%rdi
000000000000b531	call	*%rbx
000000000000b533	movq	0x00099c7e(%rip),%rsi
000000000000b53a	movq	%rax,%rdi
000000000000b53d	call	*%rbx
000000000000b53f	movq	0x0009a60a(%rip),%rsi
000000000000b546	jmp	0x0000b8d5
000000000000b54b	leaq	0x000ab7d6(%rip),%rax
000000000000b552	movq	(%rax),%rdx
000000000000b555	leaq	0x0009ce04(%rip),%rsi
000000000000b55c	movq	%r12,%rdi
000000000000b55f	call	*0x0009cdfb(%rip)
000000000000b565	testb	%al,%al
000000000000b567	je	0x0000b594
000000000000b569	movq	0x00099548(%rip),%rsi
000000000000b570	movq	0x00078b61(%rip),%rbx
000000000000b577	movq	%r14,%rdi
000000000000b57a	call	*%rbx
000000000000b57c	movq	0x00099c35(%rip),%rsi
000000000000b583	movq	%rax,%rdi
000000000000b586	call	*%rbx
000000000000b588	movq	0x0009a5f1(%rip),%rsi
000000000000b58f	jmp	0x0000b8d5
000000000000b594	leaq	0x000ab775(%rip),%rax
000000000000b59b	movq	(%rax),%rdx
000000000000b59e	leaq	0x0009cdbb(%rip),%rsi
000000000000b5a5	movq	%r12,%rdi
000000000000b5a8	call	*0x0009cdb2(%rip)
000000000000b5ae	cmpb	$0x01,%al
000000000000b5b0	jne	0x0000b79d
000000000000b5b6	movq	0x0009951b(%rip),%rsi
000000000000b5bd	leaq	0x000a6a94(%rip),%rdx
000000000000b5c4	movq	0x00078b0d(%rip),%rbx
000000000000b5cb	movq	%r15,%rdi
000000000000b5ce	call	*%rbx
000000000000b5d0	movq	0x0009a901(%rip),%rsi
000000000000b5d7	movq	%rax,%rdi
000000000000b5da	call	*%rbx
000000000000b5dc	movq	%rax,%rbx
000000000000b5df	testq	%rbx,%rbx
000000000000b5e2	je	0x0000b652
000000000000b5e4	leaq	0x0009cd75(%rip),%rsi
000000000000b5eb	leaq	0x000a6a86(%rip),%rdx
000000000000b5f2	movq	%rbx,%rdi
000000000000b5f5	call	*0x0009cd65(%rip)
000000000000b5fb	cmpb	$0x01,%al
000000000000b5fd	jne	0x0000b652
000000000000b5ff	movq	0x0009ae1a(%rip),%rsi
000000000000b606	movq	0x00078acb(%rip),%rbx
000000000000b60d	movq	%r14,%rdi
000000000000b610	call	*%rbx
000000000000b612	movq	0x0009ac67(%rip),%rsi
000000000000b619	movq	%r14,%rdi
000000000000b61c	xorl	%edx,%edx
000000000000b61e	call	*%rbx
000000000000b620	movq	0x00099491(%rip),%rsi
000000000000b627	movq	%r14,%rdi
000000000000b62a	call	*%rbx
000000000000b62c	leaq	0x000a6a45(%rip),%rdx
000000000000b633	movq	0x0009a2ee(%rip),%rsi
000000000000b63a	movq	%rax,%rdi
000000000000b63d	xorl	%ecx,%ecx
000000000000b63f	call	*%rbx
000000000000b641	movq	0x0009ae40(%rip),%rsi
000000000000b648	movq	%r13,%rdi
000000000000b64b	call	*%rbx
000000000000b64d	jmp	0x0000b77c
000000000000b652	leaq	0x0009cd07(%rip),%rsi
000000000000b659	leaq	0x000a6a38(%rip),%rdx
000000000000b660	movq	%rbx,%rdi
000000000000b663	call	*0x0009ccf7(%rip)
000000000000b669	cmpb	$0x01,%al
000000000000b66b	jne	0x0000b6d8
000000000000b66d	movq	0x0009ac0c(%rip),%rsi
000000000000b674	movq	0x00078a5d(%rip),%rbx
000000000000b67b	movq	%r14,%rdi
000000000000b67e	movl	$0x00000001,%edx
000000000000b683	call	*%rbx
000000000000b685	movq	0x0009a64c(%rip),%rsi
000000000000b68c	movq	%r14,%rdi
000000000000b68f	movl	$0x00000001,%edx
000000000000b694	call	*%rbx
000000000000b696	movq	0x000a3583(%rip),%rax
000000000000b69d	movq	(%r14,%rax),%rax
000000000000b6a1	movq	0x000a3518(%rip),%rcx
000000000000b6a8	movl	$0x00000009,(%rax,%rcx)
000000000000b6af	movq	0x00099402(%rip),%rsi
000000000000b6b6	movq	%r14,%rdi
000000000000b6b9	call	*%rbx
000000000000b6bb	movq	0x00099af6(%rip),%rsi
000000000000b6c2	movq	%rax,%rdi
000000000000b6c5	call	*%rbx
000000000000b6c7	movq	0x0009a4f2(%rip),%rsi
000000000000b6ce	movq	%rax,%rdi
000000000000b6d1	call	*%rbx
000000000000b6d3	jmp	0x0000b77c
000000000000b6d8	leaq	0x0009cc81(%rip),%rsi
000000000000b6df	leaq	0x000a69d2(%rip),%rdx
000000000000b6e6	movq	%rbx,%rdi
000000000000b6e9	call	*0x0009cc71(%rip)
000000000000b6ef	cmpb	$0x01,%al
000000000000b6f1	jne	0x0000b77c
000000000000b6f7	movq	0x000a3522(%rip),%rax
000000000000b6fe	movq	(%r14,%rax),%rcx
000000000000b702	movq	0x000a34b7(%rip),%rdx
000000000000b709	movl	$0x00000000,(%rcx,%rdx)
000000000000b710	movq	(%r14,%rax),%rax
000000000000b714	movq	0x000a349d(%rip),%rcx
000000000000b71b	movq	(%rax,%rcx),%rax
000000000000b71f	movq	0x000a345a(%rip),%rcx
000000000000b726	movl	$0x00000000,(%rax,%rcx)
000000000000b72d	movq	0x000789a4(%rip),%rbx
000000000000b734	movq	0x0009937d(%rip),%rsi
000000000000b73b	movq	%r14,%rdi
000000000000b73e	call	*%rbx
000000000000b740	movq	0x00099a71(%rip),%rsi
000000000000b747	movq	%rax,%rdi
000000000000b74a	call	*%rbx
000000000000b74c	movq	0x0009a46d(%rip),%rsi
000000000000b753	movq	%rax,%rdi
000000000000b756	call	*%rbx
000000000000b758	movq	0x00099359(%rip),%rsi
000000000000b75f	movq	%r14,%rdi
000000000000b762	call	*%rbx
000000000000b764	leaq	0x000a694d(%rip),%rdx
000000000000b76b	movq	0x0009a1b6(%rip),%rsi
000000000000b772	movq	%rax,%rdi
000000000000b775	movl	$0x00000001,%ecx
000000000000b77a	call	*%rbx
000000000000b77c	testq	%r13,%r13
000000000000b77f	je	0x0000b96d
000000000000b785	movq	0x0009aa74(%rip),%rsi
000000000000b78c	movq	%r13,%rdi
000000000000b78f	movq	%r15,%rdx
000000000000b792	call	*0x00078940(%rip)
000000000000b798	jmp	0x0000b95a
000000000000b79d	leaq	0x000ab58c(%rip),%rax
000000000000b7a4	movq	(%rax),%rdx
000000000000b7a7	leaq	0x0009cbb2(%rip),%rsi
000000000000b7ae	movq	%r12,%rdi
000000000000b7b1	call	*0x0009cba9(%rip)
000000000000b7b7	cmpb	$0x01,%al
000000000000b7b9	jne	0x0000b955
000000000000b7bf	movq	0x00099312(%rip),%rsi
000000000000b7c6	leaq	0x000a552b(%rip),%rdx
000000000000b7cd	movq	%r15,%rdi
000000000000b7d0	call	*0x00078902(%rip)
000000000000b7d6	xorl	%r12d,%r12d
000000000000b7d9	testq	%rax,%rax
000000000000b7dc	je	0x0000b80f
000000000000b7de	movq	0x00099323(%rip),%rsi
000000000000b7e5	movq	%rax,%rdi
000000000000b7e8	call	*0x000788ea(%rip)
000000000000b7ee	movq	%rax,%rbx
000000000000b7f1	xorl	%r12d,%r12d
000000000000b7f4	testq	%rbx,%rbx
000000000000b7f7	je	0x0000b80f
000000000000b7f9	movq	0x0009a8d0(%rip),%rsi
000000000000b800	movq	%r13,%rdi
000000000000b803	movq	%rbx,%rdx
000000000000b806	call	*0x000788cc(%rip)
000000000000b80c	movq	%rbx,%r12
000000000000b80f	movq	0x0009ac7a(%rip),%rsi
000000000000b816	movq	0x000788bb(%rip),%rbx
000000000000b81d	movq	%r13,%rdi
000000000000b820	movq	%r15,%rdx
000000000000b823	call	*%rbx
000000000000b825	movq	0x0009ac6c(%rip),%rsi
000000000000b82c	movq	%r13,%rdi
000000000000b82f	call	*%rbx
000000000000b831	testb	%al,%al
000000000000b833	jne	0x0000b955
000000000000b839	movq	0x00099278(%rip),%rsi
000000000000b840	movq	0x00078891(%rip),%rbx
000000000000b847	movq	%r14,%rdi
000000000000b84a	call	*%rbx
000000000000b84c	movq	0x0009957d(%rip),%rsi
000000000000b853	movq	%rax,%rdi
000000000000b856	call	*%rbx
000000000000b858	movq	0x0009ac41(%rip),%rsi
000000000000b85f	movq	%rax,%rdi
000000000000b862	call	*%rbx
000000000000b864	testq	%rax,%rax
000000000000b867	je	0x0000b8dc
000000000000b869	movq	0x0009ac38(%rip),%rsi
000000000000b870	movq	%rax,%rdi
000000000000b873	movq	%r13,%rdx
000000000000b876	call	*0x0007885c(%rip)
000000000000b87c	testb	%al,%al
000000000000b87e	jne	0x0000b955
000000000000b884	movq	0x0009922d(%rip),%rsi
000000000000b88b	movq	0x00078846(%rip),%rbx
000000000000b892	movq	%r14,%rdi
000000000000b895	call	*%rbx
000000000000b897	movq	0x0009ac12(%rip),%rsi
000000000000b89e	movq	%rax,%rdi
000000000000b8a1	movq	%r13,%rdx
000000000000b8a4	movq	%r12,%rcx
000000000000b8a7	call	*%rbx
000000000000b8a9	movq	0x000a3358(%rip),%rax
000000000000b8b0	cmpl	$0x01,(%r14,%rax)
000000000000b8b5	jne	0x0000b955
000000000000b8bb	movq	0x000991f6(%rip),%rsi
000000000000b8c2	movq	0x0007880f(%rip),%rbx
000000000000b8c9	movq	%r14,%rdi
000000000000b8cc	call	*%rbx
000000000000b8ce	movq	0x00099553(%rip),%rsi
000000000000b8d5	movq	%rax,%rdi
000000000000b8d8	call	*%rbx
000000000000b8da	jmp	0x0000b955
000000000000b8dc	movq	0x00099a05(%rip),%rsi
000000000000b8e3	leaq	0x000a67ee(%rip),%rdx
000000000000b8ea	movq	%r12,%rdi
000000000000b8ed	call	*0x000787e5(%rip)
000000000000b8f3	cmpb	$0x01,%al
000000000000b8f5	jne	0x0000b884
000000000000b8f7	movq	0x000991ba(%rip),%rsi
000000000000b8fe	movq	0x000787d3(%rip),%rbx
000000000000b905	movq	%r14,%rdi
000000000000b908	call	*%rbx
000000000000b90a	movq	0x000991af(%rip),%rsi
000000000000b911	movq	%rax,%rdi
000000000000b914	call	*%rbx
000000000000b916	movq	0x0009a963(%rip),%rsi
000000000000b91d	movq	%rax,%rdi
000000000000b920	movl	$0x00000001,%edx
000000000000b925	call	*%rbx
000000000000b927	movq	0x0009a8d2(%rip),%rsi
000000000000b92e	movq	%r13,%rdi
000000000000b931	jmp	0x0000b950
000000000000b933	movq	0x0009917e(%rip),%rsi
000000000000b93a	movq	0x00078797(%rip),%rbx
000000000000b941	movq	%r14,%rdi
000000000000b944	call	*%rbx
000000000000b946	movq	0x0009ab6b(%rip),%rsi
000000000000b94d	movq	%rax,%rdi
000000000000b950	movq	%r15,%rdx
000000000000b953	call	*%rbx
000000000000b955	testq	%r13,%r13
000000000000b958	je	0x0000b96d
000000000000b95a	movq	0x0009aa0f(%rip),%rsi
000000000000b961	movq	%r14,%rdi
000000000000b964	movq	%r13,%rdx
000000000000b967	call	*0x0007876b(%rip)
000000000000b96d	movq	0x0009aa5c(%rip),%rsi
000000000000b974	movq	%r14,%rdi
000000000000b977	call	*0x0007875b(%rip)
000000000000b97d	testb	%al,%al
000000000000b97f	jne	0x0000b995
000000000000b981	movq	0x0009a948(%rip),%rsi
000000000000b988	movq	%r14,%rdi
000000000000b98b	call	*0x00078747(%rip)
000000000000b991	cmpb	$0x01,%al
000000000000b993	je	0x0000b9a4
000000000000b995	addq	$0x18,%rsp
000000000000b999	popq	%rbx
000000000000b99a	popq	%r12
000000000000b99c	popq	%r13
000000000000b99e	popq	%r14
000000000000b9a0	popq	%r15
000000000000b9a2	popq	%rbp
000000000000b9a3	ret
000000000000b9a4	movq	0x00099245(%rip),%rsi
000000000000b9ab	movq	0x0009a92e(%rip),%rdx
000000000000b9b2	movq	%r14,%rdi
000000000000b9b5	xorl	%ecx,%ecx
000000000000b9b7	xorps	%xmm0,%xmm0
000000000000b9ba	addq	$0x18,%rsp
000000000000b9be	popq	%rbx
000000000000b9bf	popq	%r12
000000000000b9c1	popq	%r13
000000000000b9c3	popq	%r14
000000000000b9c5	popq	%r15
000000000000b9c7	popq	%rbp
000000000000b9c8	jmp	*0x0007870a(%rip)
000000000000b9ce	nop
-[PBXGDB_MIParser parsedSequenceNumber]:
000000000000b9cf	pushq	%rbp
000000000000b9d0	movq	%rsp,%rbp
000000000000b9d3	movq	0x000a336e(%rip),%rax
000000000000b9da	movq	(%rdi,%rax),%rax
000000000000b9de	popq	%rbp
000000000000b9df	ret
000000000000b9e0	nop
-[PBXGDB_MIController outstandingCommandForSequenceNumber:]:
000000000000b9e1	pushq	%rbp
000000000000b9e2	movq	%rsp,%rbp
000000000000b9e5	pushq	%r15
000000000000b9e7	pushq	%r14
000000000000b9e9	pushq	%r13
000000000000b9eb	pushq	%r12
000000000000b9ed	pushq	%rbx
000000000000b9ee	pushq	%rax
000000000000b9ef	movq	%rdx,%r14
000000000000b9f2	movq	%rdi,%r15
000000000000b9f5	movq	0x000a31ec(%rip),%rax
000000000000b9fc	movq	(%r15,%rax),%rdi
000000000000ba00	leaq	0x0009c909(%rip),%rsi
000000000000ba07	call	*0x0009c903(%rip)
000000000000ba0d	movq	%rax,%r12
000000000000ba10	xorl	%ebx,%ebx
000000000000ba12	jmp	0x0000ba4a
000000000000ba14	movq	0x000a31cd(%rip),%rax
000000000000ba1b	movq	(%r15,%rax),%rdi
000000000000ba1f	leaq	0x0009c8fa(%rip),%rsi
000000000000ba26	movq	%rbx,%rdx
000000000000ba29	call	*0x0009c8f1(%rip)
000000000000ba2f	movq	%rax,%r13
000000000000ba32	movq	%r13,%rdi
000000000000ba35	movq	0x0009a7fc(%rip),%rsi
000000000000ba3c	call	*0x00078696(%rip)
000000000000ba42	cmpq	%r14,%rax
000000000000ba45	je	0x0000ba52
000000000000ba47	incq	%rbx
000000000000ba4a	cmpq	%r12,%rbx
000000000000ba4d	jb	0x0000ba14
000000000000ba4f	xorl	%r13d,%r13d
000000000000ba52	movq	%r13,%rax
000000000000ba55	addq	$0x08,%rsp
000000000000ba59	popq	%rbx
000000000000ba5a	popq	%r12
000000000000ba5c	popq	%r13
000000000000ba5e	popq	%r14
000000000000ba60	popq	%r15
000000000000ba62	popq	%rbp
000000000000ba63	ret
000000000000ba64	nop
000000000000ba65	nop
000000000000ba66	nop
-[PBXGDB_MIResultList name]:
000000000000ba67	pushq	%rbp
000000000000ba68	movq	%rsp,%rbp
000000000000ba6b	movq	0x000a3306(%rip),%rax
000000000000ba72	movq	(%rdi,%rax),%rax
000000000000ba76	popq	%rbp
000000000000ba77	ret
-[PBXGDB_MIController _evaluateStoppedStateInResultList:]:
000000000000ba78	pushq	%rbp
000000000000ba79	movq	%rsp,%rbp
000000000000ba7c	pushq	%r15
000000000000ba7e	pushq	%r14
000000000000ba80	pushq	%r13
000000000000ba82	pushq	%r12
000000000000ba84	pushq	%rbx
000000000000ba85	subq	$0x58,%rsp
000000000000ba89	movq	%rdx,%r15
000000000000ba8c	movq	%rdi,0xd0(%rbp)
000000000000ba90	movq	%rsi,0xc8(%rbp)
000000000000ba94	movq	0x00099205(%rip),%rsi
000000000000ba9b	movq	0x00078636(%rip),%rbx
000000000000baa2	movq	%r15,%rdi
000000000000baa5	call	*%rbx
000000000000baa7	movq	%rax,%r14
000000000000baaa	movq	0x0009a96f(%rip),%rsi
000000000000bab1	movq	0xd0(%rbp),%rdi
000000000000bab5	call	*%rbx
000000000000bab7	leaq	0x0009c8a2(%rip),%rsi
000000000000babe	leaq	0x000ab24b(%rip),%rax
000000000000bac5	movq	(%rax),%rdx
000000000000bac8	movq	%r14,%rdi
000000000000bacb	call	*0x0009c88f(%rip)
000000000000bad1	testb	%al,%al
000000000000bad3	jne	0x0000baf7
000000000000bad5	leaq	0x000ab264(%rip),%rax
000000000000badc	movq	(%rax),%rdx
000000000000badf	leaq	0x0009c87a(%rip),%rsi
000000000000bae6	movq	%r14,%rdi
000000000000bae9	call	*0x0009c871(%rip)
000000000000baef	testb	%al,%al
000000000000baf1	je	0x0000c7cf
000000000000baf7	leaq	0x000ab242(%rip),%rax
000000000000bafe	movq	(%rax),%rdx
000000000000bb01	leaq	0x0009c858(%rip),%rsi
000000000000bb08	movq	%r14,%rdi
000000000000bb0b	call	*0x0009c84f(%rip)
000000000000bb11	testb	%al,%al
000000000000bb13	je	0x0000bb41
000000000000bb15	movq	0x00098f9c(%rip),%rsi
000000000000bb1c	movq	0xd0(%rbp),%rdi
000000000000bb20	movq	0x000785b1(%rip),%rbx
000000000000bb27	call	*%rbx
000000000000bb29	movq	0x000992c0(%rip),%rsi
000000000000bb30	movq	%rax,%rdi
000000000000bb33	call	*%rbx
000000000000bb35	movq	0x0009a8ec(%rip),%rsi
000000000000bb3c	movq	%rax,%rdi
000000000000bb3f	call	*%rbx
000000000000bb41	movq	0x000a30f0(%rip),%rax
000000000000bb48	movq	0xd0(%rbp),%rcx
000000000000bb4c	movb	$0x00,(%rcx,%rax)
000000000000bb50	movq	0x00098f81(%rip),%rsi
000000000000bb57	leaq	0x000a47ba(%rip),%rdx
000000000000bb5e	movq	%r15,%rdi
000000000000bb61	call	*0x00078571(%rip)
000000000000bb67	testq	%rax,%rax
000000000000bb6a	je	0x0000bba5
000000000000bb6c	movq	0x0009a365(%rip),%rsi
000000000000bb73	movq	0x0007855e(%rip),%rbx
000000000000bb7a	movq	%rax,%rdi
000000000000bb7d	call	*%rbx
000000000000bb7f	movq	0x0009975a(%rip),%rsi
000000000000bb86	movq	%rax,%rdi
000000000000bb89	call	*%rbx
000000000000bb8b	movq	0x000a308e(%rip),%rcx
000000000000bb92	movq	0xd0(%rbp),%rdx
000000000000bb96	movq	(%rdx,%rcx),%rcx
000000000000bb9a	movq	0x000a3027(%rip),%rdx
000000000000bba1	movq	%rax,(%rcx,%rdx)
000000000000bba5	movq	0x00098f2c(%rip),%rsi
000000000000bbac	leaq	0x000a6145(%rip),%rdx
000000000000bbb3	movq	%r15,%rdi
000000000000bbb6	call	*0x0007851c(%rip)
000000000000bbbc	testq	%rax,%rax
000000000000bbbf	je	0x0000bbf9
000000000000bbc1	movq	0x0009a310(%rip),%rsi
000000000000bbc8	movq	0x00078509(%rip),%rbx
000000000000bbcf	movq	%rax,%rdi
000000000000bbd2	call	*%rbx
000000000000bbd4	movq	0x00099705(%rip),%rsi
000000000000bbdb	movq	%rax,%rdi
000000000000bbde	call	*%rbx
000000000000bbe0	movq	0x000a3039(%rip),%rcx
000000000000bbe7	movq	0xd0(%rbp),%rdx
000000000000bbeb	movq	(%rdx,%rcx),%rcx
000000000000bbef	movq	0x000a2fda(%rip),%rdx
000000000000bbf6	movl	%eax,(%rcx,%rdx)
000000000000bbf9	movq	0x00098ed8(%rip),%rsi
000000000000bc00	leaq	0x000a4471(%rip),%rdx
000000000000bc07	movq	%r15,%rdi
000000000000bc0a	call	*0x000784c8(%rip)
000000000000bc10	testq	%rax,%rax
000000000000bc13	je	0x0000bcf5
000000000000bc19	movq	0x0009a2b8(%rip),%rsi
000000000000bc20	movq	%rax,%rdi
000000000000bc23	call	*0x000784af(%rip)
000000000000bc29	movq	%rax,%rbx
000000000000bc2c	leaq	0x0009c72d(%rip),%rsi
000000000000bc33	leaq	0x000a60de(%rip),%rdx
000000000000bc3a	movq	%rbx,%rdi
000000000000bc3d	call	*0x0009c71d(%rip)
000000000000bc43	testb	%al,%al
000000000000bc45	jne	0x0000bc7d
000000000000bc47	leaq	0x0009c712(%rip),%rsi
000000000000bc4e	leaq	0x000a60e3(%rip),%rdx
000000000000bc55	movq	%rbx,%rdi
000000000000bc58	call	*0x0009c702(%rip)
000000000000bc5e	testb	%al,%al
000000000000bc60	jne	0x0000bc7d
000000000000bc62	leaq	0x0009c6f7(%rip),%rsi
000000000000bc69	leaq	0x000a60e8(%rip),%rdx
000000000000bc70	movq	%rbx,%rdi
000000000000bc73	call	*0x0009c6e7(%rip)
000000000000bc79	testb	%al,%al
000000000000bc7b	je	0x0000bc9c
000000000000bc7d	movq	0x000a2f9c(%rip),%rax
000000000000bc84	movq	0xd0(%rbp),%rcx
000000000000bc88	movq	(%rcx,%rax),%rax
000000000000bc8c	movq	0x000a2f2d(%rip),%rcx
000000000000bc93	movl	$0x00000001,(%rax,%rcx)
000000000000bc9a	jmp	0x0000bcf5
000000000000bc9c	movq	0x000a2f7d(%rip),%rax
000000000000bca3	movq	0xd0(%rbp),%rcx
000000000000bca7	movq	(%rcx,%rax),%rcx
000000000000bcab	movq	0x000a2f0e(%rip),%rdx
000000000000bcb2	movl	$0x00000002,(%rcx,%rdx)
000000000000bcb9	movq	0xd0(%rbp),%rcx
000000000000bcbd	movq	(%rcx,%rax),%rax
000000000000bcc1	movq	0x000a2ef0(%rip),%rcx
000000000000bcc8	movq	(%rax,%rcx),%rsi
000000000000bccc	movq	0x000a2ea5(%rip),%rdx
000000000000bcd3	movq	%rbx,%rdi
000000000000bcd6	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000000bcdb	movq	0x000a2f3e(%rip),%rax
000000000000bce2	movq	0xd0(%rbp),%rcx
000000000000bce6	movq	(%rcx,%rax),%rax
000000000000bcea	movq	0x000a2ee7(%rip),%rcx
000000000000bcf1	movb	$0x00,(%rax,%rcx)
000000000000bcf5	movq	0x00098ddc(%rip),%rsi
000000000000bcfc	leaq	0x000a4035(%rip),%rdx
000000000000bd03	movq	%r15,%rdi
000000000000bd06	call	*0x000783cc(%rip)
000000000000bd0c	testq	%rax,%rax
000000000000bd0f	je	0x0000c794
000000000000bd15	movq	0x0009a1bc(%rip),%rsi
000000000000bd1c	movq	%rax,%rdi
000000000000bd1f	call	*0x000783b3(%rip)
000000000000bd25	movq	%rax,%rbx
000000000000bd28	leaq	0x0009c631(%rip),%rsi
000000000000bd2f	leaq	0x000a6042(%rip),%rdx
000000000000bd36	movq	%rbx,%rdi
000000000000bd39	call	*0x0009c621(%rip)
000000000000bd3f	testb	%al,%al
000000000000bd41	je	0x0000bd86
000000000000bd43	movq	0x000a2ed6(%rip),%rax
000000000000bd4a	movq	0xd0(%rbp),%rcx
000000000000bd4e	movq	(%rcx,%rax),%rcx
000000000000bd52	movq	0x000a2e67(%rip),%rdx
000000000000bd59	movl	$0x00000008,(%rcx,%rdx)
000000000000bd60	movq	0xd0(%rbp),%rcx
000000000000bd64	movq	(%rcx,%rax),%rax
000000000000bd68	movq	0x000a2e49(%rip),%rcx
000000000000bd6f	movq	(%rax,%rcx),%rax
000000000000bd73	movq	0x000a2e06(%rip),%rcx
000000000000bd7a	movl	$0x00000000,(%rax,%rcx)
000000000000bd81	jmp	0x0000c7cf
000000000000bd86	leaq	0x0009c5d3(%rip),%rsi
000000000000bd8d	leaq	0x000a6004(%rip),%rdx
000000000000bd94	movq	%rbx,%rdi
000000000000bd97	call	*0x0009c5c3(%rip)
000000000000bd9d	testb	%al,%al
000000000000bd9f	je	0x0000be80
000000000000bda5	movq	0x000a2e74(%rip),%rax
000000000000bdac	movq	0xd0(%rbp),%rcx
000000000000bdb0	movq	(%rcx,%rax),%rcx
000000000000bdb4	movq	0x000a2e05(%rip),%rdx
000000000000bdbb	movl	$0x00000008,(%rcx,%rdx)
000000000000bdc2	movq	0xd0(%rbp),%rcx
000000000000bdc6	movq	(%rcx,%rax),%rax
000000000000bdca	movq	0x000a2de7(%rip),%rcx
000000000000bdd1	movq	(%rax,%rcx),%rax
000000000000bdd5	movq	0x000a2da4(%rip),%rcx
000000000000bddc	movl	$0x00000000,(%rax,%rcx)
000000000000bde3	leaq	0x000a5fce(%rip),%rdx
000000000000bdea	movq	0x00098ce7(%rip),%rsi
000000000000bdf1	movq	%r15,%rdi
000000000000bdf4	call	*0x000782de(%rip)
000000000000bdfa	testq	%rax,%rax
000000000000bdfd	je	0x0000c7cf
000000000000be03	movq	0x0009a0ce(%rip),%rsi
000000000000be0a	movq	%rax,%rdi
000000000000be0d	call	*0x000782c5(%rip)
000000000000be13	movq	%rax,%rbx
000000000000be16	testq	%rbx,%rbx
000000000000be19	je	0x0000c7cf
000000000000be1f	leaq	0x0009c4ca(%rip),%rsi
000000000000be26	movq	%rbx,%rdi
000000000000be29	call	*0x0009c4c1(%rip)
000000000000be2f	testq	%rax,%rax
000000000000be32	je	0x0000c7cf
000000000000be38	movq	0x00098cf1(%rip),%rsi
000000000000be3f	movq	%rbx,%rdi
000000000000be42	call	*0x00078290(%rip)
000000000000be48	movq	%rax,%rdi
000000000000be4b	xorl	%esi,%esi
000000000000be4d	movl	$0x00000008,%edx
000000000000be52	callq	0x0004e716	; symbol stub for: _strtol
000000000000be57	movq	0x000a2dc2(%rip),%rcx
000000000000be5e	movq	0xd0(%rbp),%rdx
000000000000be62	movq	(%rdx,%rcx),%rcx
000000000000be66	movq	0x000a2d4b(%rip),%rdx
000000000000be6d	movq	(%rcx,%rdx),%rcx
000000000000be71	movq	0x000a2d08(%rip),%rdx
000000000000be78	movl	%eax,(%rcx,%rdx)
000000000000be7b	jmp	0x0000c7cf
000000000000be80	leaq	0x0009c4d9(%rip),%rsi
000000000000be87	leaq	0x000a5f4a(%rip),%rdx
000000000000be8e	movq	%rbx,%rdi
000000000000be91	call	*0x0009c4c9(%rip)
000000000000be97	testb	%al,%al
000000000000be99	jne	0x0000bef0
000000000000be9b	leaq	0x0009c4be(%rip),%rsi
000000000000bea2	leaq	0x000a5f4f(%rip),%rdx
000000000000bea9	movq	%rbx,%rdi
000000000000beac	call	*0x0009c4ae(%rip)
000000000000beb2	testb	%al,%al
000000000000beb4	jne	0x0000bef0
000000000000beb6	leaq	0x0009c4a3(%rip),%rsi
000000000000bebd	leaq	0x000a5f54(%rip),%rdx
000000000000bec4	movq	%rbx,%rdi
000000000000bec7	call	*0x0009c493(%rip)
000000000000becd	testb	%al,%al
000000000000becf	jne	0x0000bef0
000000000000bed1	leaq	0x0009c488(%rip),%rsi
000000000000bed8	leaq	0x000a5f59(%rip),%rdx
000000000000bedf	movq	%rbx,%rdi
000000000000bee2	call	*0x0009c478(%rip)
000000000000bee8	testb	%al,%al
000000000000beea	je	0x0000c04c
000000000000bef0	movq	0x00098be1(%rip),%rsi
000000000000bef7	leaq	0x000a41ba(%rip),%rdx
000000000000befe	movq	%r15,%rdi
000000000000bf01	call	*0x000781d1(%rip)
000000000000bf07	testq	%rax,%rax
000000000000bf0a	je	0x0000bf83
000000000000bf0c	movq	0x00098bf5(%rip),%rsi
000000000000bf13	movq	%rax,%rdi
000000000000bf16	call	*0x000781bc(%rip)
000000000000bf1c	movq	%rax,%rbx
000000000000bf1f	testq	%rbx,%rbx
000000000000bf22	je	0x0000bf83
000000000000bf24	leaq	0x0009c435(%rip),%rsi
000000000000bf2b	leaq	0x000a5f26(%rip),%rdx
000000000000bf32	movq	%rbx,%rdi
000000000000bf35	call	*0x0009c425(%rip)
000000000000bf3b	testb	%al,%al
000000000000bf3d	jne	0x0000bf5a
000000000000bf3f	leaq	0x0009c41a(%rip),%rsi
000000000000bf46	leaq	0x000a5c4b(%rip),%rdx
000000000000bf4d	movq	%rbx,%rdi
000000000000bf50	call	*0x0009c40a(%rip)
000000000000bf56	testb	%al,%al
000000000000bf58	je	0x0000bf83
000000000000bf5a	movq	0x000a2cbf(%rip),%rax
000000000000bf61	movq	0xd0(%rbp),%rcx
000000000000bf65	movq	(%rcx,%rax),%rax
000000000000bf69	movq	0x000a2c48(%rip),%rcx
000000000000bf70	movq	(%rax,%rcx),%rax
000000000000bf74	movq	0x000a2c0d(%rip),%rcx
000000000000bf7b	movq	$0x00000001,(%rax,%rcx)
000000000000bf83	movq	0x00098b4e(%rip),%rsi
000000000000bf8a	leaq	0x000a4187(%rip),%rdx
000000000000bf91	movq	0x00078140(%rip),%rbx
000000000000bf98	movq	%r15,%rdi
000000000000bf9b	call	*%rbx
000000000000bf9d	movq	0x00098b64(%rip),%rsi
000000000000bfa4	movq	%rax,%rdi
000000000000bfa7	call	*%rbx
000000000000bfa9	movq	0x00099330(%rip),%rsi
000000000000bfb0	movq	%rax,%rdi
000000000000bfb3	call	*%rbx
000000000000bfb5	leaq	0x000a3d1c(%rip),%rdx
000000000000bfbc	movq	0x000a2c5d(%rip),%rcx
000000000000bfc3	movq	0xd0(%rbp),%rsi
000000000000bfc7	movq	(%rsi,%rcx),%rcx
000000000000bfcb	movq	0x000a2be6(%rip),%rsi
000000000000bfd2	movq	(%rcx,%rsi),%rcx
000000000000bfd6	movq	0x000a2bb3(%rip),%rsi
000000000000bfdd	movq	%rax,(%rcx,%rsi)
000000000000bfe1	movq	0x00098af0(%rip),%rsi
000000000000bfe8	movq	%r15,%rdi
000000000000bfeb	call	*%rbx
000000000000bfed	movq	0x00098b14(%rip),%rsi
000000000000bff4	movq	%rax,%rdi
000000000000bff7	call	*%rbx
000000000000bff9	movq	0x000992e0(%rip),%rsi
000000000000c000	movq	%rax,%rdi
000000000000c003	call	*%rbx
000000000000c005	movq	0x000a2c14(%rip),%rcx
000000000000c00c	movq	0xd0(%rbp),%rdx
000000000000c010	movq	(%rdx,%rcx),%rcx
000000000000c014	movq	0x000a2b9d(%rip),%rdx
000000000000c01b	movq	(%rcx,%rdx),%rcx
000000000000c01f	movq	0x000a2b82(%rip),%rdx
000000000000c026	movq	%rax,(%rcx,%rdx)
000000000000c02a	movq	0x000a2bef(%rip),%rax
000000000000c031	movq	0xd0(%rbp),%rcx
000000000000c035	movq	(%rcx,%rax),%rax
000000000000c039	movq	0x000a2b80(%rip),%rcx
000000000000c040	movl	$0x00000004,(%rax,%rcx)
000000000000c047	jmp	0x0000c7cf
000000000000c04c	leaq	0x0009c30d(%rip),%rsi
000000000000c053	leaq	0x000a5e1e(%rip),%rdx
000000000000c05a	movq	%rbx,%rdi
000000000000c05d	call	*0x0009c2fd(%rip)
000000000000c063	testb	%al,%al
000000000000c065	je	0x0000c089
000000000000c067	movq	0x000a2bb2(%rip),%rax
000000000000c06e	movq	0xd0(%rbp),%rcx
000000000000c072	movq	(%rcx,%rax),%rax
000000000000c076	movq	0x000a2b43(%rip),%rcx
000000000000c07d	movl	$0x00000003,(%rax,%rcx)
000000000000c084	jmp	0x0000c7cf
000000000000c089	leaq	0x0009c2d0(%rip),%rsi
000000000000c090	leaq	0x000a5e01(%rip),%rdx
000000000000c097	movq	%rbx,%rdi
000000000000c09a	call	*0x0009c2c0(%rip)
000000000000c0a0	testb	%al,%al
000000000000c0a2	jne	0x0000c067
000000000000c0a4	leaq	0x0009c2b5(%rip),%rsi
000000000000c0ab	leaq	0x000a5e06(%rip),%rdx
000000000000c0b2	movq	%rbx,%rdi
000000000000c0b5	call	*0x0009c2a5(%rip)
000000000000c0bb	testb	%al,%al
000000000000c0bd	je	0x0000c0e1
000000000000c0bf	movq	0x000a2b5a(%rip),%rax
000000000000c0c6	movq	0xd0(%rbp),%rcx
000000000000c0ca	movq	(%rcx,%rax),%rax
000000000000c0ce	movq	0x000a2aeb(%rip),%rcx
000000000000c0d5	movl	$0x00000005,(%rax,%rcx)
000000000000c0dc	jmp	0x0000c7cf
000000000000c0e1	leaq	0x0009c278(%rip),%rsi
000000000000c0e8	leaq	0x000a5de9(%rip),%rdx
000000000000c0ef	movq	%rbx,%rdi
000000000000c0f2	call	*0x0009c268(%rip)
000000000000c0f8	testb	%al,%al
000000000000c0fa	je	0x0000c420
000000000000c100	movq	0x000a2b19(%rip),%rax
000000000000c107	movq	0xd0(%rbp),%rcx
000000000000c10b	movq	(%rcx,%rax),%rax
000000000000c10f	movq	0x000a2aaa(%rip),%rcx
000000000000c116	movl	$0x00000006,(%rax,%rcx)
000000000000c11d	movq	0x000989b4(%rip),%rsi
000000000000c124	leaq	0x000a5dcd(%rip),%rdx
000000000000c12b	movq	0x00077fa6(%rip),%r12
000000000000c132	movq	%r15,%rdi
000000000000c135	call	*%r12
000000000000c138	movq	0x000989a1(%rip),%rsi
000000000000c13f	movq	%rax,%rdi
000000000000c142	call	*%r12
000000000000c145	movq	%rax,%rbx
000000000000c148	leaq	0x000a3e69(%rip),%rdx
000000000000c14f	movq	0x00098982(%rip),%rsi
000000000000c156	movq	%rbx,%rdi
000000000000c159	call	*%r12
000000000000c15c	movq	0x000989a5(%rip),%rsi
000000000000c163	movq	%rax,%rdi
000000000000c166	call	*%r12
000000000000c169	movq	%rax,%r14
000000000000c16c	leaq	0x000a3e65(%rip),%rdx
000000000000c173	movq	0x0009895e(%rip),%rsi
000000000000c17a	movq	%rbx,%rdi
000000000000c17d	call	*%r12
000000000000c180	movq	0x00098981(%rip),%rsi
000000000000c187	movq	%rax,%rdi
000000000000c18a	call	*%r12
000000000000c18d	movq	%rax,0xc0(%rbp)
000000000000c191	leaq	0x000a3fa0(%rip),%rdx
000000000000c198	movq	0x00098939(%rip),%rsi
000000000000c19f	movq	%r15,%rdi
000000000000c1a2	call	*%r12
000000000000c1a5	movq	0x00098934(%rip),%rsi
000000000000c1ac	movq	%rax,%rdi
000000000000c1af	call	*%r12
000000000000c1b2	movq	%rax,%rbx
000000000000c1b5	leaq	0x000a5d5c(%rip),%rdx
000000000000c1bc	movq	0x00098915(%rip),%rsi
000000000000c1c3	movq	%rbx,%rdi
000000000000c1c6	call	*%r12
000000000000c1c9	movq	0x00098938(%rip),%rsi
000000000000c1d0	movq	%rax,%rdi
000000000000c1d3	call	*%r12
000000000000c1d6	movq	%rax,0xb8(%rbp)
000000000000c1da	leaq	0x000a5d57(%rip),%rdx
000000000000c1e1	movq	0x000988f0(%rip),%rsi
000000000000c1e8	movq	%rbx,%rdi
000000000000c1eb	call	*%r12
000000000000c1ee	movq	0x00098913(%rip),%rsi
000000000000c1f5	movq	%rax,%rdi
000000000000c1f8	call	*%r12
000000000000c1fb	movq	%rax,0xb0(%rbp)
000000000000c1ff	leaq	0x000a4112(%rip),%rdx
000000000000c206	movq	0x000988cb(%rip),%rsi
000000000000c20d	movq	%r15,%rdi
000000000000c210	call	*%r12
000000000000c213	movq	0x000988ee(%rip),%rsi
000000000000c21a	movq	%rax,%rdi
000000000000c21d	call	*%r12
000000000000c220	movq	%rax,%r15
000000000000c223	movq	0x0009888e(%rip),%rsi
000000000000c22a	movq	0xd0(%rbp),%rdi
000000000000c22e	call	*%r12
000000000000c231	movq	0x00098da0(%rip),%rsi
000000000000c238	movq	%rax,%rdi
000000000000c23b	call	*%r12
000000000000c23e	movq	%rax,%rbx
000000000000c241	movq	0x00099098(%rip),%rsi
000000000000c248	movq	%r14,%rdi
000000000000c24b	call	*%r12
000000000000c24e	movq	0x0009a1db(%rip),%rsi
000000000000c255	movq	%rbx,%rdi
000000000000c258	movq	%rax,%rdx
000000000000c25b	call	*%r12
000000000000c25e	movq	%rax,%r13
000000000000c261	testq	%r13,%r13
000000000000c264	jne	0x0000c2cc
000000000000c266	movq	0x0009c6bb(%rip),%rdi
000000000000c26d	leaq	0x0009c0bc(%rip),%rsi
000000000000c274	call	*0x0009c0b6(%rip)
000000000000c27a	movq	%rax,%rdi
000000000000c27d	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000000c282	leaq	0xd0(%rbp),%rdi
000000000000c286	leaq	0xc8(%rbp),%rsi
000000000000c28a	leaq	0x000531dd(%rip),%rdx
000000000000c291	leaq	0x00053210(%rip),%rcx
000000000000c298	leaq	0x000a3719(%rip),%r9
000000000000c29f	leaq	0x00053285(%rip),%r8
000000000000c2a6	leaq	0x00053289(%rip),%rbx
000000000000c2ad	movq	%rbx,0x18(%rsp)
000000000000c2b2	leaq	0x000a357f(%rip),%rbx
000000000000c2b9	movq	%rbx,0x10(%rsp)
000000000000c2be	movq	%rax,0x08(%rsp)
000000000000c2c3	movq	%r8,(%rsp)
000000000000c2c7	jmp	0x0000c374
000000000000c2cc	movq	0x0009c655(%rip),%rdi
000000000000c2d3	leaq	0x0009c056(%rip),%rsi
000000000000c2da	call	*0x0009c050(%rip)
000000000000c2e0	leaq	0x0009c059(%rip),%rsi
000000000000c2e7	movq	%r13,%rdi
000000000000c2ea	movq	%rax,%rdx
000000000000c2ed	call	*0x0009c04d(%rip)
000000000000c2f3	testb	%al,%al
000000000000c2f5	jne	0x0000c381
000000000000c2fb	movq	0x0009c626(%rip),%rdi
000000000000c302	leaq	0x0009c027(%rip),%rsi
000000000000c309	call	*0x0009c021(%rip)
000000000000c30f	movq	%rax,%rdi
000000000000c312	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000000c317	movq	%rax,%r12
000000000000c31a	movq	0x0009893f(%rip),%rsi
000000000000c321	movq	%r13,%rdi
000000000000c324	call	*0x00077dae(%rip)
000000000000c32a	leaq	0x00053219(%rip),%r8
000000000000c331	leaq	0xd0(%rbp),%rdi
000000000000c335	leaq	0xc8(%rbp),%rsi
000000000000c339	leaq	0x0005312e(%rip),%rdx
000000000000c340	leaq	0x00053161(%rip),%rcx
000000000000c347	leaq	0x000a368a(%rip),%r9
000000000000c34e	movq	%r8,0x20(%rsp)
000000000000c353	leaq	0x000a34de(%rip),%rbx
000000000000c35a	movq	%rbx,0x18(%rsp)
000000000000c35f	leaq	0x000531c5(%rip),%rbx
000000000000c366	movq	%rax,0x10(%rsp)
000000000000c36b	movq	%r12,0x08(%rsp)
000000000000c370	movq	%rbx,(%rsp)
000000000000c374	movl	$0x0000029d,%r8d
000000000000c37a	xorb	%al,%al
000000000000c37c	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000000c381	movq	0x0009c5a8(%rip),%rdi
000000000000c388	leaq	0x0009bf51(%rip),%rsi
000000000000c38f	call	*0x0009bf4b(%rip)
000000000000c395	movq	0x0009a09c(%rip),%rsi
000000000000c39c	movq	%r15,0x08(%rsp)
000000000000c3a1	movq	0xb0(%rbp),%rcx
000000000000c3a5	movq	%rcx,(%rsp)
000000000000c3a9	movq	0x00077d28(%rip),%r15
000000000000c3b0	movq	%rax,%rdi
000000000000c3b3	movq	%r13,%rdx
000000000000c3b6	movq	%r14,%rcx
000000000000c3b9	movq	0xc0(%rbp),%r8
000000000000c3bd	movq	0xb8(%rbp),%r9
000000000000c3c1	call	*%r15
000000000000c3c4	movq	%rax,%rbx
000000000000c3c7	movq	0x000989ba(%rip),%rsi
000000000000c3ce	movq	0x0009c0f3(%rip),%rdi
000000000000c3d5	call	*%r15
000000000000c3d8	movq	0x00077c39(%rip),%rcx
000000000000c3df	movq	(%rcx),%rdx
000000000000c3e2	movq	0x00098ff7(%rip),%rsi
000000000000c3e9	movq	%rax,%rdi
000000000000c3ec	movq	%rbx,%rcx
000000000000c3ef	call	*%r15
000000000000c3f2	movq	0x000a2827(%rip),%rax
000000000000c3f9	movq	0xd0(%rbp),%rcx
000000000000c3fd	movq	(%rcx,%rax),%rax
000000000000c401	movq	0x000a27b0(%rip),%rcx
000000000000c408	movq	(%rax,%rcx),%rsi
000000000000c40c	movq	0x000a279d(%rip),%rdx
000000000000c413	movq	%rbx,%rdi
000000000000c416	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000000c41b	jmp	0x0000c7cf
000000000000c420	leaq	0x0009bf39(%rip),%rsi
000000000000c427	leaq	0x000a5b2a(%rip),%rdx
000000000000c42e	movq	%rbx,%rdi
000000000000c431	call	*0x0009bf29(%rip)
000000000000c437	testb	%al,%al
000000000000c439	je	0x0000c6e7
000000000000c43f	movq	0x000a27da(%rip),%rax
000000000000c446	movq	0xd0(%rbp),%rcx
000000000000c44a	movq	(%rcx,%rax),%rax
000000000000c44e	movq	0x000a276b(%rip),%rcx
000000000000c455	movl	$0x00000006,(%rax,%rcx)
000000000000c45c	movq	0x00098675(%rip),%rsi
000000000000c463	leaq	0x000a5b0e(%rip),%rdx
000000000000c46a	movq	0x00077c67(%rip),%r12
000000000000c471	movq	%r15,%rdi
000000000000c474	call	*%r12
000000000000c477	movq	0x0009868a(%rip),%rsi
000000000000c47e	movq	%rax,%rdi
000000000000c481	call	*%r12
000000000000c484	movq	%rax,%r14
000000000000c487	leaq	0x000a3e8a(%rip),%rdx
000000000000c48e	movq	0x00098643(%rip),%rsi
000000000000c495	movq	%r15,%rdi
000000000000c498	call	*%r12
000000000000c49b	movq	0x00098666(%rip),%rsi
000000000000c4a2	movq	%rax,%rdi
000000000000c4a5	call	*%r12
000000000000c4a8	movq	%rax,0xc0(%rbp)
000000000000c4ac	movq	0x00098605(%rip),%rsi
000000000000c4b3	movq	0xd0(%rbp),%rdi
000000000000c4b7	call	*%r12
000000000000c4ba	movq	0x00098b17(%rip),%rsi
000000000000c4c1	movq	%rax,%rdi
000000000000c4c4	call	*%r12
000000000000c4c7	movq	%rax,%rbx
000000000000c4ca	movq	0x00098e0f(%rip),%rsi
000000000000c4d1	movq	%r14,%rdi
000000000000c4d4	call	*%r12
000000000000c4d7	movq	0x00099f52(%rip),%rsi
000000000000c4de	movq	%rbx,%rdi
000000000000c4e1	movq	%rax,%rdx
000000000000c4e4	call	*%r12
000000000000c4e7	movq	%rax,%r12
000000000000c4ea	testq	%r12,%r12
000000000000c4ed	jne	0x0000c564
000000000000c4ef	movq	0x0009c432(%rip),%rdi
000000000000c4f6	leaq	0x0009be33(%rip),%rsi
000000000000c4fd	call	*0x0009be2d(%rip)
000000000000c503	movq	%rax,%rdi
000000000000c506	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000000c50b	leaq	0xd0(%rbp),%rdi
000000000000c50f	leaq	0xc8(%rbp),%rsi
000000000000c513	leaq	0x00052f54(%rip),%rdx
000000000000c51a	leaq	0x00052f87(%rip),%rcx
000000000000c521	leaq	0x000a3490(%rip),%r9
000000000000c528	leaq	0x00052ffc(%rip),%r8
000000000000c52f	leaq	0x00053000(%rip),%rbx
000000000000c536	movq	%rbx,0x18(%rsp)
000000000000c53b	leaq	0x000a32f6(%rip),%rbx
000000000000c542	movq	%rbx,0x10(%rsp)
000000000000c547	movq	%rax,0x08(%rsp)
000000000000c54c	movq	%r8,(%rsp)
000000000000c550	movl	$0x000002ac,%r8d
000000000000c556	xorb	%al,%al
000000000000c558	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000000c55d	xorl	%ebx,%ebx
000000000000c55f	jmp	0x0000c61f
000000000000c564	movq	0x0009c3bd(%rip),%rdi
000000000000c56b	leaq	0x0009bdbe(%rip),%rsi
000000000000c572	call	*0x0009bdb8(%rip)
000000000000c578	leaq	0x0009bdc1(%rip),%rsi
000000000000c57f	movq	%r12,%rdi
000000000000c582	movq	%rax,%rdx
000000000000c585	call	*0x0009bdb5(%rip)
000000000000c58b	testb	%al,%al
000000000000c58d	movq	%r12,%rbx
000000000000c590	jne	0x0000c61f
000000000000c596	movq	0x0009c38b(%rip),%rdi
000000000000c59d	leaq	0x0009bd8c(%rip),%rsi
000000000000c5a4	call	*0x0009bd86(%rip)
000000000000c5aa	movq	%rax,%rdi
000000000000c5ad	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000000c5b2	movq	%rax,%rbx
000000000000c5b5	movq	0x000986a4(%rip),%rsi
000000000000c5bc	movq	%r12,%rdi
000000000000c5bf	call	*0x00077b13(%rip)
000000000000c5c5	leaq	0x000a326c(%rip),%r8
000000000000c5cc	leaq	0x00052f77(%rip),%r9
000000000000c5d3	leaq	0xd0(%rbp),%rdi
000000000000c5d7	leaq	0xc8(%rbp),%rsi
000000000000c5db	leaq	0x00052e8c(%rip),%rdx
000000000000c5e2	leaq	0x00052ebf(%rip),%rcx
000000000000c5e9	movq	%r9,0x20(%rsp)
000000000000c5ee	leaq	0x000a33e3(%rip),%r9
000000000000c5f5	movq	%r8,0x18(%rsp)
000000000000c5fa	movq	%rax,0x10(%rsp)
000000000000c5ff	leaq	0x00052f25(%rip),%rax
000000000000c606	movq	%rbx,0x08(%rsp)
000000000000c60b	movq	%rax,(%rsp)
000000000000c60f	movl	$0x000002ac,%r8d
000000000000c615	xorb	%al,%al
000000000000c617	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000000c61c	movq	%r12,%rbx
000000000000c61f	movq	0x0009c30a(%rip),%rdi
000000000000c626	leaq	0x0009bcb3(%rip),%rsi
000000000000c62d	call	*0x0009bcad(%rip)
000000000000c633	movq	%rax,%r13
000000000000c636	movq	0x00099e03(%rip),%rsi
000000000000c63d	movq	0x00077a94(%rip),%r15
000000000000c644	movq	%rbx,%rdi
000000000000c647	call	*%r15
000000000000c64a	movq	0x00099de7(%rip),%rsi
000000000000c651	movq	0xc0(%rbp),%rcx
000000000000c655	movq	%rcx,0x08(%rsp)
000000000000c65a	movq	$0x00000000,(%rsp)
000000000000c662	movq	%r13,%rdi
000000000000c665	movq	%r12,%rdx
000000000000c668	movq	%r14,%rcx
000000000000c66b	movq	%rax,%r8
000000000000c66e	xorl	%r9d,%r9d
000000000000c671	call	*%r15
000000000000c674	movq	0x000a25a5(%rip),%rcx
000000000000c67b	movq	0xd0(%rbp),%rdx
000000000000c67f	movq	(%rdx,%rcx),%rcx
000000000000c683	movq	0x000a252e(%rip),%rdx
000000000000c68a	movq	(%rcx,%rdx),%rsi
000000000000c68e	movq	0x000a251b(%rip),%rdx
000000000000c695	movq	%rax,%rdi
000000000000c698	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000000c69d	movq	0x00098414(%rip),%rsi
000000000000c6a4	movq	0xd0(%rbp),%rdi
000000000000c6a8	call	*%r15
000000000000c6ab	movq	0x00098636(%rip),%rsi
000000000000c6b2	movq	%rax,%rdi
000000000000c6b5	call	*%r15
000000000000c6b8	movq	0x00098631(%rip),%rsi
000000000000c6bf	movq	%rax,%rdi
000000000000c6c2	call	*%r15
000000000000c6c5	movq	0x00099d1c(%rip),%rsi
000000000000c6cc	movq	%rax,%rdi
000000000000c6cf	call	*%r15
000000000000c6d2	movq	0x00099d6f(%rip),%rsi
000000000000c6d9	movq	%rax,%rdi
000000000000c6dc	movq	%r12,%rdx
000000000000c6df	call	*%r15
000000000000c6e2	jmp	0x0000c7cf
000000000000c6e7	leaq	0x0009bc72(%rip),%rsi
000000000000c6ee	leaq	0x000a58a3(%rip),%rdx
000000000000c6f5	movq	%rbx,%rdi
000000000000c6f8	call	*0x0009bc62(%rip)
000000000000c6fe	testb	%al,%al
000000000000c700	je	0x0000c7cf
000000000000c706	movq	0x000a2513(%rip),%rax
000000000000c70d	movq	0xd0(%rbp),%rcx
000000000000c711	movq	(%rcx,%rax),%rcx
000000000000c715	movq	0x000a24a4(%rip),%rdx
000000000000c71c	movl	$0x0000000a,(%rcx,%rdx)
000000000000c723	movq	0xd0(%rbp),%rcx
000000000000c727	movq	(%rcx,%rax),%rax
000000000000c72b	movq	0x000a2486(%rip),%rcx
000000000000c732	movq	(%rax,%rcx),%rax
000000000000c736	movq	0x000a2443(%rip),%rcx
000000000000c73d	movl	$0x00000000,(%rax,%rcx)
000000000000c744	leaq	0x000a586d(%rip),%rdx
000000000000c74b	movq	0x00077986(%rip),%r14
000000000000c752	movq	0x0009837f(%rip),%rsi
000000000000c759	movq	%r15,%rdi
000000000000c75c	call	*%r14
000000000000c75f	movq	0x000983a2(%rip),%rsi
000000000000c766	movq	%rax,%rdi
000000000000c769	call	*%r14
000000000000c76c	movq	%rax,%rbx
000000000000c76f	movq	0x00098342(%rip),%rsi
000000000000c776	movq	0xd0(%rbp),%rdi
000000000000c77a	call	*%r14
000000000000c77d	movq	0x000991a4(%rip),%rsi
000000000000c784	movq	%rax,%rdi
000000000000c787	movq	%rbx,%rdx
000000000000c78a	movl	$0x00000001,%ecx
000000000000c78f	call	*%r14
000000000000c792	jmp	0x0000c7cf
000000000000c794	leaq	0x000aa5a5(%rip),%rax
000000000000c79b	movq	(%rax),%rdx
000000000000c79e	leaq	0x0009bbbb(%rip),%rsi
000000000000c7a5	movq	%r14,%rdi
000000000000c7a8	call	*0x0009bbb2(%rip)
000000000000c7ae	cmpb	$0x01,%al
000000000000c7b0	jne	0x0000c7cf
000000000000c7b2	movq	0x000a2467(%rip),%rax
000000000000c7b9	movq	0xd0(%rbp),%rcx
000000000000c7bd	movq	(%rcx,%rax),%rax
000000000000c7c1	movq	0x000a23f8(%rip),%rcx
000000000000c7c8	movl	$0x00000009,(%rax,%rcx)
000000000000c7cf	addq	$0x58,%rsp
000000000000c7d3	popq	%rbx
000000000000c7d4	popq	%r12
000000000000c7d6	popq	%r13
000000000000c7d8	popq	%r14
000000000000c7da	popq	%r15
000000000000c7dc	popq	%rbp
000000000000c7dd	ret
000000000000c7de	nop
000000000000c7df	nop
000000000000c7e0	nop
000000000000c7e1	nop
000000000000c7e2	nop
-[PBXGDB_MIController _resetStoppedState]:
000000000000c7e3	pushq	%rbp
000000000000c7e4	movq	%rsp,%rbp
000000000000c7e7	pushq	%rbx
000000000000c7e8	pushq	%rax
000000000000c7e9	movq	%rdi,%rbx
000000000000c7ec	movq	0x0009c10d(%rip),%rdi
000000000000c7f3	leaq	0x0009bae6(%rip),%rsi
000000000000c7fa	call	*0x0009bae0(%rip)
000000000000c800	movq	0x00098269(%rip),%rsi
000000000000c807	movq	%rax,%rdi
000000000000c80a	call	*0x000778c8(%rip)
000000000000c810	movq	0x000a2409(%rip),%rdx
000000000000c817	movq	%rax,%rdi
000000000000c81a	movq	%rbx,%rsi
000000000000c81d	addq	$0x08,%rsp
000000000000c821	popq	%rbx
000000000000c822	popq	%rbp
000000000000c823	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000000c828	nop
000000000000c829	nop
-[PBXGDB_MIResultList itemWithKey:]:
000000000000c82a	pushq	%rbp
000000000000c82b	movq	%rsp,%rbp
000000000000c82e	movq	0x000a253b(%rip),%rax
000000000000c835	movq	(%rdi,%rax),%rdi
000000000000c839	movq	0x0009bb10(%rip),%rax
000000000000c840	leaq	0x0009bb09(%rip),%rsi
000000000000c847	popq	%rbp
000000000000c848	jmp	*%rax
-[PBXGDB_MIGDBVersionCommand didFinishWithResultList:]:
000000000000c84a	pushq	%rbp
000000000000c84b	movq	%rsp,%rbp
000000000000c84e	pushq	%r14
000000000000c850	pushq	%rbx
000000000000c851	subq	$0x10,%rsp
000000000000c855	movq	%rdx,%r14
000000000000c858	movq	%rdi,%rbx
000000000000c85b	movq	0x00098276(%rip),%rsi
000000000000c862	leaq	0x000a68cf(%rip),%rdx
000000000000c869	movq	%r14,%rdi
000000000000c86c	call	*0x00077866(%rip)
000000000000c872	testq	%rax,%rax
000000000000c875	je	0x0000c899
000000000000c877	movq	0x0009828a(%rip),%rsi
000000000000c87e	movq	%rax,%rdi
000000000000c881	call	*0x00077851(%rip)
000000000000c887	movq	0x000a25ea(%rip),%rdx
000000000000c88e	movq	%rax,%rdi
000000000000c891	movq	%rbx,%rsi
000000000000c894	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000000c899	movq	%rbx,0xe0(%rbp)
000000000000c89d	movq	0x0009c64c(%rip),%rax
000000000000c8a4	movq	%rax,0xe8(%rbp)
000000000000c8a8	movq	0x00099951(%rip),%rsi
000000000000c8af	leaq	0xe0(%rbp),%rdi
000000000000c8b3	movq	%r14,%rdx
000000000000c8b6	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000000c8bb	addq	$0x10,%rsp
000000000000c8bf	popq	%rbx
000000000000c8c0	popq	%r14
000000000000c8c2	popq	%rbp
000000000000c8c3	ret
-[PBXGDB_MIResultListItem stringValue]:
000000000000c8c4	pushq	%rbp
000000000000c8c5	movq	%rsp,%rbp
000000000000c8c8	pushq	%rbx
000000000000c8c9	pushq	%rax
000000000000c8ca	movq	0x000a24b7(%rip),%rax
000000000000c8d1	movq	(%rdi,%rax),%rbx
000000000000c8d5	movq	0x0009bb74(%rip),%rdi
000000000000c8dc	leaq	0x0009ba4d(%rip),%rsi
000000000000c8e3	call	*0x0009ba47(%rip)
000000000000c8e9	leaq	0x0009ba50(%rip),%rsi
000000000000c8f0	movq	%rbx,%rdi
000000000000c8f3	movq	%rax,%rdx
000000000000c8f6	call	*0x0009ba44(%rip)
000000000000c8fc	cmpb	$0x01,%al
000000000000c8fe	je	0x0000c902
000000000000c900	xorl	%ebx,%ebx
000000000000c902	movq	%rbx,%rax
000000000000c905	addq	$0x08,%rsp
000000000000c909	popq	%rbx
000000000000c90a	popq	%rbp
000000000000c90b	ret
-[PBXGDB_MICommand didFinishWithResultList:]:
000000000000c90c	pushq	%rbp
000000000000c90d	movq	%rsp,%rbp
000000000000c910	pushq	%r14
000000000000c912	pushq	%rbx
000000000000c913	movq	%rdx,%rax
000000000000c916	movq	%rdi,%rbx
000000000000c919	movq	0x000a2208(%rip),%rdx
000000000000c920	movq	%rax,%rdi
000000000000c923	movq	%rbx,%rsi
000000000000c926	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000000c92b	movq	0x000a21de(%rip),%rax
000000000000c932	movq	(%rbx,%rax),%rdi
000000000000c936	testq	%rdi,%rdi
000000000000c939	je	0x0000c9c4
000000000000c93f	movq	0x000a21d2(%rip),%rax
000000000000c946	movq	(%rbx,%rax),%rdx
000000000000c94a	testq	%rdx,%rdx
000000000000c94d	je	0x0000c9c4
000000000000c94f	leaq	0x0009ba1a(%rip),%rsi
000000000000c956	call	*0x0009ba14(%rip)
000000000000c95c	movq	0x000a21ad(%rip),%rcx
000000000000c963	movq	(%rbx,%rcx),%rdi
000000000000c967	testb	%al,%al
000000000000c969	je	0x0000c988
000000000000c96b	movq	0x000a21a6(%rip),%rax
000000000000c972	movq	(%rbx,%rax),%rdx
000000000000c976	movq	0x00098f13(%rip),%rsi
000000000000c97d	movq	%rbx,%rcx
000000000000c980	call	*0x00077752(%rip)
000000000000c986	jmp	0x0000c9c4
000000000000c988	leaq	0x0009b9a1(%rip),%rsi
000000000000c98f	call	*0x0009b99b(%rip)
000000000000c995	movq	%rax,%rdi
000000000000c998	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000000c99d	movq	%rax,%r14
000000000000c9a0	movq	0x000a2171(%rip),%rax
000000000000c9a7	movq	(%rbx,%rax),%rdi
000000000000c9ab	callq	0x0004e5cc	; symbol stub for: _NSStringFromSelector
000000000000c9b0	leaq	0x000a4e61(%rip),%rdi
000000000000c9b7	movq	%r14,%rsi
000000000000c9ba	movq	%rax,%rdx
000000000000c9bd	xorb	%al,%al
000000000000c9bf	callq	0x0004e5c0	; symbol stub for: _NSLog
000000000000c9c4	movq	0x000a215d(%rip),%rdx
000000000000c9cb	xorl	%edi,%edi
000000000000c9cd	movq	%rbx,%rsi
000000000000c9d0	popq	%rbx
000000000000c9d1	popq	%r14
000000000000c9d3	popq	%rbp
000000000000c9d4	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_Adaptor _gdbVersionFetched:]:
000000000000c9d9	pushq	%rbp
000000000000c9da	movq	%rsp,%rbp
000000000000c9dd	pushq	%rbx
000000000000c9de	pushq	%rax
000000000000c9df	movq	%rdi,%rbx
000000000000c9e2	movq	0x00098a77(%rip),%rsi
000000000000c9e9	movq	%rdx,%rdi
000000000000c9ec	call	*0x000776e6(%rip)
000000000000c9f2	movq	0x000a1da7(%rip),%rdx
000000000000c9f9	movq	%rax,%rdi
000000000000c9fc	movq	%rbx,%rsi
000000000000c9ff	addq	$0x08,%rsp
000000000000ca03	popq	%rbx
000000000000ca04	popq	%rbp
000000000000ca05	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MIGDBVersionCommand version]:
000000000000ca0a	pushq	%rbp
000000000000ca0b	movq	%rsp,%rbp
000000000000ca0e	movq	0x000a2463(%rip),%rax
000000000000ca15	movq	(%rdi,%rax),%rax
000000000000ca19	popq	%rbp
000000000000ca1a	ret
000000000000ca1b	nop
-[PBXGDB_MIController removeOutstandingCommand:]:
000000000000ca1c	pushq	%rbp
000000000000ca1d	movq	%rsp,%rbp
000000000000ca20	pushq	%rbx
000000000000ca21	pushq	%rax
000000000000ca22	movq	%rdi,%rbx
000000000000ca25	movq	0x000a21bc(%rip),%rax
000000000000ca2c	movq	(%rbx,%rax),%rdi
000000000000ca30	movq	0x000998b9(%rip),%rsi
000000000000ca37	call	*0x0007769b(%rip)
000000000000ca3d	movq	$0x7fffffffffffffff,%rcx
000000000000ca47	cmpq	%rcx,%rax
000000000000ca4a	jne	0x0000ca53
000000000000ca4c	addq	$0x08,%rsp
000000000000ca50	popq	%rbx
000000000000ca51	popq	%rbp
000000000000ca52	ret
000000000000ca53	movq	0x000a218e(%rip),%rcx
000000000000ca5a	movq	(%rbx,%rcx),%rdi
000000000000ca5e	movq	0x00098183(%rip),%rsi
000000000000ca65	movq	%rax,%rdx
000000000000ca68	addq	$0x08,%rsp
000000000000ca6c	popq	%rbx
000000000000ca6d	popq	%rbp
000000000000ca6e	jmp	*0x00077664(%rip)
-[PBXGDB_MIController areCommandsOutstanding]:
000000000000ca74	pushq	%rbp
000000000000ca75	movq	%rsp,%rbp
000000000000ca78	movq	0x000a2169(%rip),%rax
000000000000ca7f	movq	(%rdi,%rax),%rdi
000000000000ca83	leaq	0x0009b886(%rip),%rsi
000000000000ca8a	call	*0x0009b880(%rip)
000000000000ca90	testq	%rax,%rax
000000000000ca93	setne	%al
000000000000ca96	movzbl	%al,%eax
000000000000ca99	popq	%rbp
000000000000ca9a	ret
-[PBXGDB_CommandSequence didFinish]:
000000000000ca9b	pushq	%rbp
000000000000ca9c	movq	%rsp,%rbp
000000000000ca9f	pushq	%rbx
000000000000caa0	pushq	%rax
000000000000caa1	movq	%rdi,%rbx
000000000000caa4	movq	0x00098325(%rip),%rsi
000000000000caab	call	*0x00077627(%rip)
000000000000cab1	movq	0x00098f18(%rip),%rsi
000000000000cab8	movq	%rax,%rdi
000000000000cabb	movq	%rbx,%rdx
000000000000cabe	movq	0x00077613(%rip),%rax
000000000000cac5	addq	$0x08,%rsp
000000000000cac9	popq	%rbx
000000000000caca	popq	%rbp
000000000000cacb	jmp	*%rax
000000000000cacd	nop
000000000000cace	nop
000000000000cacf	nop
-[PBXGDB_SequenceController commandSequenceDidFinish:]:
000000000000cad0	pushq	%rbp
000000000000cad1	movq	%rsp,%rbp
000000000000cad4	pushq	%r15
000000000000cad6	pushq	%r14
000000000000cad8	pushq	%rbx
000000000000cad9	pushq	%rax
000000000000cada	movq	%rdx,%r14
000000000000cadd	movq	%rdi,%rbx
000000000000cae0	testq	%r14,%r14
000000000000cae3	je	0x0000cb39
000000000000cae5	movq	0x000a248c(%rip),%rax
000000000000caec	movq	(%rbx,%rax),%rdi
000000000000caf0	movq	0x00099ee1(%rip),%rsi
000000000000caf7	movq	0x000775da(%rip),%r15
000000000000cafe	movq	%r14,%rdx
000000000000cb01	call	*%r15
000000000000cb04	movq	0x00099ec5(%rip),%rsi
000000000000cb0b	leaq	0x000a73e6(%rip),%rdx
000000000000cb12	movq	%rbx,%rdi
000000000000cb15	movq	%r14,%rcx
000000000000cb18	call	*%r15
000000000000cb1b	movq	0x000982b6(%rip),%rsi
000000000000cb22	movq	%r14,%rdi
000000000000cb25	xorl	%edx,%edx
000000000000cb27	call	*%r15
000000000000cb2a	movq	0x00099e77(%rip),%rsi
000000000000cb31	movq	%rbx,%rdi
000000000000cb34	xorl	%edx,%edx
000000000000cb36	call	*%r15
000000000000cb39	movq	0x00099e60(%rip),%rsi
000000000000cb40	movq	%rbx,%rdi
000000000000cb43	call	*0x0007758f(%rip)
000000000000cb49	movq	0x000a2450(%rip),%rcx
000000000000cb50	movq	(%rbx,%rcx),%rax
000000000000cb54	leaq	0x01(%rax),%rdx
000000000000cb58	movq	%rdx,(%rbx,%rcx)
000000000000cb5c	testq	%rax,%rax
000000000000cb5f	jne	0x0000cb81
000000000000cb61	movq	0x000a2438(%rip),%r15
000000000000cb68	movq	0x00099ee1(%rip),%r14
000000000000cb6f	movq	%rbx,%rdi
000000000000cb72	movq	%r14,%rsi
000000000000cb75	call	*0x0007755d(%rip)
000000000000cb7b	decq	(%rbx,%r15)
000000000000cb7f	jne	0x0000cb6f
000000000000cb81	addq	$0x08,%rsp
000000000000cb85	popq	%rbx
000000000000cb86	popq	%r14
000000000000cb88	popq	%r15
000000000000cb8a	popq	%rbp
000000000000cb8b	ret
000000000000cb8c	nop
000000000000cb8d	nop
000000000000cb8e	nop
000000000000cb8f	nop
000000000000cb90	nop
000000000000cb91	nop
000000000000cb92	nop
000000000000cb93	nop
000000000000cb94	nop
000000000000cb95	nop
000000000000cb96	nop
000000000000cb97	nop
000000000000cb98	nop
-[PBXGDB_SequenceController clearTimer]:
000000000000cb99	pushq	%rbp
000000000000cb9a	movq	%rsp,%rbp
000000000000cb9d	pushq	%rbx
000000000000cb9e	pushq	%rax
000000000000cb9f	movq	%rdi,%rbx
000000000000cba2	movq	0x000a23e7(%rip),%rax
000000000000cba9	movq	(%rbx,%rax),%rdi
000000000000cbad	testq	%rdi,%rdi
000000000000cbb0	jne	0x0000cbb9
000000000000cbb2	addq	$0x08,%rsp
000000000000cbb6	popq	%rbx
000000000000cbb7	popq	%rbp
000000000000cbb8	ret
000000000000cbb9	movq	0x00098628(%rip),%rsi
000000000000cbc0	call	*0x00077512(%rip)
000000000000cbc6	movq	0x000a23c3(%rip),%rdx
000000000000cbcd	xorl	%edi,%edi
000000000000cbcf	movq	%rbx,%rsi
000000000000cbd2	addq	$0x08,%rsp
000000000000cbd6	popq	%rbx
000000000000cbd7	popq	%rbp
000000000000cbd8	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000000cbdd	nop
000000000000cbde	nop
___63-[PBXGDB_SequenceController _purgeTransientSequencesIfPossible]_block_invoke_0:
000000000000cbdf	pushq	%rbp
000000000000cbe0	movq	%rsp,%rbp
000000000000cbe3	pushq	%r15
000000000000cbe5	pushq	%r14
000000000000cbe7	pushq	%r13
000000000000cbe9	pushq	%r12
000000000000cbeb	pushq	%rbx
000000000000cbec	pushq	%rax
000000000000cbed	movq	%rsi,%r15
000000000000cbf0	movq	%rdi,0xd0(%rbp)
000000000000cbf4	leaq	0x0009b715(%rip),%rsi
000000000000cbfb	movq	%r15,%rdi
000000000000cbfe	call	*0x0009b70c(%rip)
000000000000cc04	movq	%rax,%r12
000000000000cc07	decl	%eax
000000000000cc09	js	0x0000cc80
000000000000cc0b	movslq	%eax,%rbx
000000000000cc0e	movq	0x000774c3(%rip),%r14
000000000000cc15	movq	%r15,%rdi
000000000000cc18	leaq	0x0009b701(%rip),%rsi
000000000000cc1f	movq	%rbx,%rdx
000000000000cc22	call	*0x0009b6f8(%rip)
000000000000cc28	movq	%rax,%r13
000000000000cc2b	movq	0xd0(%rbp),%rax
000000000000cc2f	cmpq	0x20(%rax),%r13
000000000000cc33	je	0x0000cc75
000000000000cc35	movq	%r13,%rdi
000000000000cc38	movq	0x00099d89(%rip),%rsi
000000000000cc3f	call	*0x00077493(%rip)
000000000000cc45	testb	%al,%al
000000000000cc47	je	0x0000cc75
000000000000cc49	movq	0xd0(%rbp),%rax
000000000000cc4d	movq	0x28(%rax),%rdi
000000000000cc51	movq	0x00099d78(%rip),%rsi
000000000000cc58	leaq	0x000a7139(%rip),%rdx
000000000000cc5f	movq	%r13,%rcx
000000000000cc62	call	*%r14
000000000000cc65	movq	%r15,%rdi
000000000000cc68	movq	0x00097f79(%rip),%rsi
000000000000cc6f	movq	%rbx,%rdx
000000000000cc72	call	*%r14
000000000000cc75	decq	%rbx
000000000000cc78	decl	%r12d
000000000000cc7b	testl	%r12d,%r12d
000000000000cc7e	jg	0x0000cc15
000000000000cc80	addq	$0x08,%rsp
000000000000cc84	popq	%rbx
000000000000cc85	popq	%r12
000000000000cc87	popq	%r13
000000000000cc89	popq	%r14
000000000000cc8b	popq	%r15
000000000000cc8d	popq	%rbp
000000000000cc8e	ret
000000000000cc8f	nop
-[PBXGDB_CommandSequence isTransient]:
000000000000cc90	pushq	%rbp
000000000000cc91	movq	%rsp,%rbp
000000000000cc94	movq	0x000a1b95(%rip),%rax
000000000000cc9b	movb	(%rdi,%rax),%al
000000000000cc9e	movsbl	%al,%eax
000000000000cca1	popq	%rbp
000000000000cca2	ret
-[PBXGDB_MISetSharedLibraryImageSymboslLevelToContainerSequence execute]:
000000000000cca3	pushq	%rbp
000000000000cca4	movq	%rsp,%rbp
000000000000cca7	pushq	%r14
000000000000cca9	pushq	%rbx
000000000000ccaa	movq	%rdi,%r14
000000000000ccad	movq	0x00097dcc(%rip),%rsi
000000000000ccb4	movq	0x0009bd45(%rip),%rdi
000000000000ccbb	call	*0x00077417(%rip)
000000000000ccc1	movq	%rax,%rbx
000000000000ccc4	movq	0x00097dbd(%rip),%rsi
000000000000cccb	movq	%rbx,%rdi
000000000000ccce	movq	%r14,%rdx
000000000000ccd1	call	*0x00077401(%rip)
000000000000ccd7	movq	0x00097dba(%rip),%rsi
000000000000ccde	movq	0x00097e53(%rip),%rdx
000000000000cce5	movq	%rbx,%rdi
000000000000cce8	call	*0x000773ea(%rip)
000000000000ccee	movq	0x00097dc3(%rip),%rsi
000000000000ccf5	movq	%r14,%rdi
000000000000ccf8	call	*0x000773da(%rip)
000000000000ccfe	movq	0x00097dbb(%rip),%rsi
000000000000cd05	movq	%rax,%rdi
000000000000cd08	call	*0x000773ca(%rip)
000000000000cd0e	movq	0x00097db3(%rip),%rsi
000000000000cd15	movq	%rax,%rdi
000000000000cd18	movq	%rbx,%rdx
000000000000cd1b	movq	0x000773b6(%rip),%rax
000000000000cd22	popq	%rbx
000000000000cd23	popq	%r14
000000000000cd25	popq	%rbp
000000000000cd26	jmp	*%rax
-[PBXGDB_MISetSharedLibraryLoadContainerLevelCommand GDBCommandString]:
000000000000cd28	pushq	%rbp
000000000000cd29	movq	%rsp,%rbp
000000000000cd2c	movq	0x0009b705(%rip),%rdi
000000000000cd33	leaq	0x0009b5a6(%rip),%rsi
000000000000cd3a	call	*0x0009b5a0(%rip)
000000000000cd40	leaq	0x000a5f71(%rip),%rdx
000000000000cd47	movq	0x000980c2(%rip),%rsi
000000000000cd4e	movq	%rax,%rdi
000000000000cd51	popq	%rbp
000000000000cd52	jmp	*0x00077380(%rip)
-[PBXGDB_InferiorAutoStartDyldSequence execute]:
000000000000cd58	pushq	%rbp
000000000000cd59	movq	%rsp,%rbp
000000000000cd5c	pushq	%r14
000000000000cd5e	pushq	%rbx
000000000000cd5f	movq	%rdi,%r14
000000000000cd62	movq	0x00097d17(%rip),%rsi
000000000000cd69	movq	0x0009b7a8(%rip),%rdi
000000000000cd70	call	*0x00077362(%rip)
000000000000cd76	movq	%rax,%rbx
000000000000cd79	movq	0x000a2228(%rip),%rax
000000000000cd80	movsbl	(%rsi,%rax),%ecx
000000000000cd85	movq	0x00097dec(%rip),%rsi
000000000000cd8c	movq	0x0009b6bd(%rip),%rdi
000000000000cd93	leaq	0x000a719e(%rip),%rdx
000000000000cd9a	xorb	%al,%al
000000000000cd9c	call	*0x00077336(%rip)
000000000000cda2	movq	0x00098197(%rip),%rsi
000000000000cda9	movq	%rbx,%rdi
000000000000cdac	movq	%rax,%rdx
000000000000cdaf	call	*0x00077323(%rip)
000000000000cdb5	movq	0x00097ccc(%rip),%rsi
000000000000cdbc	movq	%rbx,%rdi
000000000000cdbf	movq	%r14,%rdx
000000000000cdc2	call	*0x00077310(%rip)
000000000000cdc8	movq	0x00097cc9(%rip),%rsi
000000000000cdcf	movq	0x00099c8a(%rip),%rdx
000000000000cdd6	movq	%rbx,%rdi
000000000000cdd9	call	*0x000772f9(%rip)
000000000000cddf	movq	0x00097cd2(%rip),%rsi
000000000000cde6	movq	%r14,%rdi
000000000000cde9	call	*0x000772e9(%rip)
000000000000cdef	movq	0x00097cca(%rip),%rsi
000000000000cdf6	movq	%rax,%rdi
000000000000cdf9	call	*0x000772d9(%rip)
000000000000cdff	movq	0x00097cc2(%rip),%rsi
000000000000ce06	movq	%rax,%rdi
000000000000ce09	movq	%rbx,%rdx
000000000000ce0c	movq	0x000772c5(%rip),%rax
000000000000ce13	popq	%rbx
000000000000ce14	popq	%r14
000000000000ce16	popq	%rbp
000000000000ce17	jmp	*%rax
-[PBXGDB_InferiorAutoStartDyldSequence _done:]:
000000000000ce19	pushq	%rbp
000000000000ce1a	movq	%rsp,%rbp
000000000000ce1d	movq	0x00097d14(%rip),%rsi
000000000000ce24	popq	%rbp
000000000000ce25	jmp	*0x000772ad(%rip)
-[PBXGDB_MILoadExecutableCommand willExecute]:
000000000000ce2b	pushq	%rbp
000000000000ce2c	movq	%rsp,%rbp
000000000000ce2f	pushq	%rbx
000000000000ce30	pushq	%rax
000000000000ce31	leaq	0x000a1cd0(%rip),%rax
000000000000ce38	movq	(%rax),%rax
000000000000ce3b	movq	(%rdi,%rax),%rdi
000000000000ce3f	movq	0x00097c72(%rip),%rsi
000000000000ce46	call	*0x0007728c(%rip)
000000000000ce4c	movq	%rax,%rbx
000000000000ce4f	movq	0x0009941a(%rip),%rsi
000000000000ce56	movq	0x0009b87b(%rip),%rdi
000000000000ce5d	call	*0x00077275(%rip)
000000000000ce63	movq	0x00098abe(%rip),%rsi
000000000000ce6a	movq	%rbx,%rdi
000000000000ce6d	movq	%rax,%rdx
000000000000ce70	movl	$0x00000001,%ecx
000000000000ce75	movq	0x0007725c(%rip),%rax
000000000000ce7c	addq	$0x08,%rsp
000000000000ce80	popq	%rbx
000000000000ce81	popq	%rbp
000000000000ce82	jmp	*%rax
000000000000ce84	nop
000000000000ce85	nop
+[PBXLSDebuggingSystem localizedStringForLoadingExecutable]:
000000000000ce86	pushq	%rbp
000000000000ce87	movq	%rsp,%rbp
000000000000ce8a	movq	0x0009a577(%rip),%rsi
000000000000ce91	call	*0x00077241(%rip)
000000000000ce97	leaq	0x000a8f3a(%rip),%rdx
000000000000ce9e	leaq	0x000a2a93(%rip),%rcx
000000000000cea5	leaq	0x000a82ac(%rip),%r8
000000000000ceac	movq	0x0009a55d(%rip),%rsi
000000000000ceb3	movq	%rax,%rdi
000000000000ceb6	movq	0x0007721b(%rip),%rax
000000000000cebd	popq	%rbp
000000000000cebe	jmp	*%rax
+[PBXLSDebuggingSystem _myBundle]:
000000000000cec0	pushq	%rbp
000000000000cec1	movq	%rsp,%rbp
000000000000cec4	movq	%rdi,%rcx
000000000000cec7	movq	0x000aa82a(%rip),%rax
000000000000cece	testq	%rax,%rax
000000000000ced1	jne	0x0000cf00
000000000000ced3	movq	0x000985e6(%rip),%rsi
000000000000ceda	movq	0x0009b777(%rip),%rdi
000000000000cee1	movq	%rcx,%rdx
000000000000cee4	call	*0x000771ee(%rip)
000000000000ceea	leaq	0x000aa807(%rip),%rsi
000000000000cef1	movq	%rax,%rdi
000000000000cef4	callq	0x0004e602	; symbol stub for: _objc_assign_global
000000000000cef9	movq	0x000aa7f8(%rip),%rax
000000000000cf00	popq	%rbp
000000000000cf01	ret
-[PBXGDB_Adaptor statusMessageFromMI:forConsole:]:
000000000000cf02	pushq	%rbp
000000000000cf03	movq	%rsp,%rbp
000000000000cf06	pushq	%r14
000000000000cf08	pushq	%rbx
000000000000cf09	movl	%ecx,%r14d
000000000000cf0c	movq	%rdx,%rbx
000000000000cf0f	testq	%rbx,%rbx
000000000000cf12	je	0x0000cf45
000000000000cf14	movq	0x00097efd(%rip),%rsi
000000000000cf1b	movq	%rbx,%rdx
000000000000cf1e	call	*0x000771b4(%rip)
000000000000cf24	cmpb	$0x01,%r14b
000000000000cf28	jne	0x0000cf45
000000000000cf2a	movq	0x00097eef(%rip),%rsi
000000000000cf31	leaq	0x000a27e0(%rip),%rdx
000000000000cf38	movq	%rbx,%rdi
000000000000cf3b	call	*0x00077197(%rip)
000000000000cf41	testb	%al,%al
000000000000cf43	je	0x0000cf4a
000000000000cf45	popq	%rbx
000000000000cf46	popq	%r14
000000000000cf48	popq	%rbp
000000000000cf49	ret
000000000000cf4a	movq	0x00097c27(%rip),%rsi
000000000000cf51	movq	0x0009b4f8(%rip),%rdi
000000000000cf58	leaq	0x000a34b9(%rip),%rdx
000000000000cf5f	movq	%rbx,%rcx
000000000000cf62	xorb	%al,%al
000000000000cf64	popq	%rbx
000000000000cf65	popq	%r14
000000000000cf67	popq	%rbp
000000000000cf68	jmp	*0x0007716a(%rip)
-[PBXLSDebuggerAdaptor statusMessage:]:
000000000000cf6e	pushq	%rbp
000000000000cf6f	movq	%rsp,%rbp
000000000000cf72	popq	%rbp
000000000000cf73	ret
000000000000cf74	nop
000000000000cf75	nop
000000000000cf76	nop
000000000000cf77	nop
000000000000cf78	nop
-[PBXGDB_MIController processAsynchronousNotification:]:
000000000000cf79	pushq	%rbp
000000000000cf7a	movq	%rsp,%rbp
000000000000cf7d	pushq	%r15
000000000000cf7f	pushq	%r14
000000000000cf81	pushq	%r13
000000000000cf83	pushq	%r12
000000000000cf85	pushq	%rbx
000000000000cf86	subq	$0x28,%rsp
000000000000cf8a	movq	%rdx,%r13
000000000000cf8d	movq	%rdi,%rbx
000000000000cf90	movq	0x00097d09(%rip),%rsi
000000000000cf97	movq	0x0007713a(%rip),%r14
000000000000cf9e	movq	%r13,%rdi
000000000000cfa1	call	*%r14
000000000000cfa4	movq	%rax,%r12
000000000000cfa7	movq	0x00097b0a(%rip),%rsi
000000000000cfae	movq	%rbx,%rdi
000000000000cfb1	call	*%r14
000000000000cfb4	movq	%rax,%r15
000000000000cfb7	leaq	0x0009b3a2(%rip),%rsi
000000000000cfbe	leaq	0x000a5133(%rip),%rdx
000000000000cfc5	movq	%r12,%rdi
000000000000cfc8	call	*0x0009b392(%rip)
000000000000cfce	testb	%al,%al
000000000000cfd0	je	0x0000d041
000000000000cfd2	movq	0x000992a7(%rip),%rsi
000000000000cfd9	movq	0x000770f8(%rip),%r14
000000000000cfe0	movq	%rbx,%rdi
000000000000cfe3	movl	$0x00000001,%edx
000000000000cfe8	call	*%r14
000000000000cfeb	movq	0x000a1c46(%rip),%rax
000000000000cff2	movb	$0x01,(%rbx,%rax)
000000000000cff6	movq	0x00097adb(%rip),%rsi
000000000000cffd	leaq	0x000a5114(%rip),%rdx
000000000000d004	movq	%r13,%rdi
000000000000d007	call	*%r14
000000000000d00a	movq	0x00097af7(%rip),%rsi
000000000000d011	movq	%rax,%rdi
000000000000d014	call	*%r14
000000000000d017	testq	%rax,%rax
000000000000d01a	je	0x0000d3f7
000000000000d020	movq	0x000980c1(%rip),%rsi
000000000000d027	movq	%r15,%rdi
000000000000d02a	movq	%rax,%rdx
000000000000d02d	addq	$0x28,%rsp
000000000000d031	popq	%rbx
000000000000d032	popq	%r12
000000000000d034	popq	%r13
000000000000d036	popq	%r14
000000000000d038	popq	%r15
000000000000d03a	popq	%rbp
000000000000d03b	jmp	*0x00077097(%rip)
000000000000d041	leaq	0x0009b318(%rip),%rsi
000000000000d048	leaq	0x000a50e9(%rip),%rdx
000000000000d04f	movq	%r12,%rdi
000000000000d052	call	*0x0009b308(%rip)
000000000000d058	testb	%al,%al
000000000000d05a	jne	0x0000d406
000000000000d060	leaq	0x0009b2f9(%rip),%rsi
000000000000d067	leaq	0x000a50ea(%rip),%rdx
000000000000d06e	movq	%r12,%rdi
000000000000d071	call	*0x0009b2e9(%rip)
000000000000d077	testb	%al,%al
000000000000d079	je	0x0000d184
000000000000d07f	movq	0x000a1b9a(%rip),%rax
000000000000d086	movq	(%rbx,%rax),%rax
000000000000d08a	movq	0x000a1b27(%rip),%rcx
000000000000d091	movq	(%rax,%rcx),%rax
000000000000d095	movq	0x000a1aec(%rip),%rcx
000000000000d09c	movq	$0x00000000,(%rax,%rcx)
000000000000d0a4	movq	0x000a1b75(%rip),%rax
000000000000d0ab	movq	(%rbx,%rax),%rax
000000000000d0af	movq	0x000a1b0a(%rip),%rcx
000000000000d0b6	movl	$0x00000004,(%rax,%rcx)
000000000000d0bd	movq	0x00077014(%rip),%r14
000000000000d0c4	movq	0x0009813d(%rip),%rsi
000000000000d0cb	movq	%rbx,%rdi
000000000000d0ce	call	*%r14
000000000000d0d1	movq	0x00097cf8(%rip),%rsi
000000000000d0d8	movq	%r15,%rdi
000000000000d0db	call	*%r14
000000000000d0de	movq	0x0009812b(%rip),%rsi
000000000000d0e5	movq	%rax,%rdi
000000000000d0e8	call	*%r14
000000000000d0eb	movq	0x0009918e(%rip),%rsi
000000000000d0f2	movq	%rbx,%rdi
000000000000d0f5	movl	$0x00000001,%edx
000000000000d0fa	call	*%r14
000000000000d0fd	movq	0x000980b4(%rip),%rsi
000000000000d104	movq	%r15,%rdi
000000000000d107	call	*%r14
000000000000d10a	movq	0x00098aaf(%rip),%rsi
000000000000d111	movq	%rax,%rdi
000000000000d114	call	*%r14
000000000000d117	movq	0x000a1ac2(%rip),%rax
000000000000d11e	movq	(%rbx,%rax),%rdi
000000000000d122	movq	0x00098b57(%rip),%rsi
000000000000d129	call	*%r14
000000000000d12c	testb	%al,%al
000000000000d12e	je	0x0000d3f7
000000000000d134	movq	0x00097cc5(%rip),%rsi
000000000000d13b	movq	%r15,%rdi
000000000000d13e	call	*0x00076f94(%rip)
000000000000d144	movq	0x00097f8d(%rip),%rsi
000000000000d14b	movq	%rax,%rdi
000000000000d14e	call	*0x00076f84(%rip)
000000000000d154	leaq	0x000a27dd(%rip),%rdx
000000000000d15b	movq	0x00097f7e(%rip),%rsi
000000000000d162	movq	%rax,%rdi
000000000000d165	xorl	%ecx,%ecx
000000000000d167	movl	$0x00000001,%r8d
000000000000d16d	movq	0x00076f64(%rip),%rax
000000000000d174	addq	$0x28,%rsp
000000000000d178	popq	%rbx
000000000000d179	popq	%r12
000000000000d17b	popq	%r13
000000000000d17d	popq	%r14
000000000000d17f	popq	%r15
000000000000d181	popq	%rbp
000000000000d182	jmp	*%rax
000000000000d184	movq	%rbx,0xb8(%rbp)
000000000000d188	leaq	0x0009b1d1(%rip),%rsi
000000000000d18f	leaq	0x000a40a2(%rip),%rdx
000000000000d196	movq	%r12,%rdi
000000000000d199	call	*0x0009b1c1(%rip)
000000000000d19f	testb	%al,%al
000000000000d1a1	jne	0x0000d424
000000000000d1a7	leaq	0x0009b1b2(%rip),%rsi
000000000000d1ae	leaq	0x000a40a3(%rip),%rdx
000000000000d1b5	movq	%r12,%rdi
000000000000d1b8	call	*0x0009b1a2(%rip)
000000000000d1be	testb	%al,%al
000000000000d1c0	jne	0x0000d424
000000000000d1c6	leaq	0x0009b193(%rip),%rsi
000000000000d1cd	leaq	0x000a4fa4(%rip),%rdx
000000000000d1d4	movq	%r12,%rdi
000000000000d1d7	call	*0x0009b183(%rip)
000000000000d1dd	testb	%al,%al
000000000000d1df	je	0x0000d3f7
000000000000d1e5	movq	0x000978ec(%rip),%rsi
000000000000d1ec	leaq	0x000a4fa5(%rip),%rdx
000000000000d1f3	movq	0x00076ede(%rip),%r14
000000000000d1fa	movq	%r13,%rdi
000000000000d1fd	call	*%r14
000000000000d200	movq	0x00097901(%rip),%rsi
000000000000d207	movq	%rax,%rdi
000000000000d20a	call	*%r14
000000000000d20d	movq	0x000980cc(%rip),%rsi
000000000000d214	movq	%rax,%rdi
000000000000d217	call	*%r14
000000000000d21a	movq	%rax,0xc0(%rbp)
000000000000d21e	leaq	0x000a4f93(%rip),%rdx
000000000000d225	movq	0x000978ac(%rip),%rsi
000000000000d22c	movq	%r13,%rdi
000000000000d22f	call	*%r14
000000000000d232	movq	0x000978cf(%rip),%rsi
000000000000d239	movq	%rax,%rdi
000000000000d23c	call	*%r14
000000000000d23f	movq	0x0009809a(%rip),%rsi
000000000000d246	movq	%rax,%rdi
000000000000d249	call	*%r14
000000000000d24c	movq	%rax,%r12
000000000000d24f	leaq	0x000a2a62(%rip),%rdx
000000000000d256	movq	0x0009787b(%rip),%rsi
000000000000d25d	movq	%r13,%rdi
000000000000d260	call	*%r14
000000000000d263	movq	0x00097876(%rip),%rsi
000000000000d26a	movq	%rax,%rdi
000000000000d26d	call	*%r14
000000000000d270	movq	%rax,%rbx
000000000000d273	leaq	0x000a251e(%rip),%rdx
000000000000d27a	movq	0x00097857(%rip),%rsi
000000000000d281	movq	%rbx,%rdi
000000000000d284	call	*%r14
000000000000d287	movq	0x0009787a(%rip),%rsi
000000000000d28e	movq	%rax,%rdi
000000000000d291	call	*%r14
000000000000d294	movq	%rax,0xd0(%rbp)
000000000000d298	movq	0x00097d39(%rip),%rsi
000000000000d29f	movq	%r15,%rdi
000000000000d2a2	movq	%r15,0xc8(%rbp)
000000000000d2a6	call	*%r14
000000000000d2a9	movq	0x00099180(%rip),%rsi
000000000000d2b0	movq	%rax,%rdi
000000000000d2b3	movq	%r12,%rdx
000000000000d2b6	call	*%r14
000000000000d2b9	movq	%rax,%r15
000000000000d2bc	leaq	0x000a4175(%rip),%rdx
000000000000d2c3	movq	0x0009780e(%rip),%rsi
000000000000d2ca	movq	%rbx,%rdi
000000000000d2cd	call	*%r14
000000000000d2d0	movq	0x00097831(%rip),%rsi
000000000000d2d7	movq	%rax,%rdi
000000000000d2da	call	*%r14
000000000000d2dd	movq	%rax,%r13
000000000000d2e0	movq	0x00098c19(%rip),%rsi
000000000000d2e7	movq	%r13,%rdi
000000000000d2ea	call	*%r14
000000000000d2ed	movq	%rax,%rbx
000000000000d2f0	leaq	0x0009aff9(%rip),%rsi
000000000000d2f7	movq	%rbx,%rdi
000000000000d2fa	call	*0x0009aff0(%rip)
000000000000d300	testq	%rax,%rax
000000000000d303	je	0x0000d328
000000000000d305	movq	0x000991cc(%rip),%rsi
000000000000d30c	movq	%r15,%rdi
000000000000d30f	call	*0x00076dc3(%rip)
000000000000d315	leaq	0x0009afe4(%rip),%rsi
000000000000d31c	movq	%rax,%rdi
000000000000d31f	movq	%rbx,%rdx
000000000000d322	call	*0x0009afd8(%rip)
000000000000d328	movq	0x00097ca9(%rip),%rsi
000000000000d32f	movq	0x00076da2(%rip),%rbx
000000000000d336	movq	0xc8(%rbp),%rdi
000000000000d33a	call	*%rbx
000000000000d33c	movq	0x0009919d(%rip),%rsi
000000000000d343	movq	%rax,%rdi
000000000000d346	movq	%r15,%rdx
000000000000d349	call	*%rbx
000000000000d34b	movq	%rax,%rdi
000000000000d34e	movq	0xc0(%rbp),%rbx
000000000000d352	cmpq	%r12,%rbx
000000000000d355	jne	0x0000d37e
000000000000d357	movq	0x0009918a(%rip),%rsi
000000000000d35e	movq	0x00076d73(%rip),%r14
000000000000d365	movq	%rbx,%rdx
000000000000d368	call	*%r14
000000000000d36b	movq	0x0009917e(%rip),%rsi
000000000000d372	movq	%rax,%rdi
000000000000d375	movq	0xd0(%rbp),%rdx
000000000000d379	call	*%r14
000000000000d37c	jmp	0x0000d3d4
000000000000d37e	movq	0x00099173(%rip),%rsi
000000000000d385	movq	0x00076d4c(%rip),%r14
000000000000d38c	movq	%rbx,%rdx
000000000000d38f	movq	0xd0(%rbp),%rcx
000000000000d393	movq	%r13,%r8
000000000000d396	call	*%r14
000000000000d399	movq	0x00097718(%rip),%rsi
000000000000d3a0	movq	0xb8(%rbp),%rdi
000000000000d3a4	call	*%r14
000000000000d3a7	movq	0x0009793a(%rip),%rsi
000000000000d3ae	movq	%rax,%rdi
000000000000d3b1	call	*%r14
000000000000d3b4	movq	0x00097935(%rip),%rsi
000000000000d3bb	movq	%rax,%rdi
000000000000d3be	call	*%r14
000000000000d3c1	movq	0x00099138(%rip),%rsi
000000000000d3c8	movq	%rax,%rdi
000000000000d3cb	movq	%rbx,%rdx
000000000000d3ce	movq	%r15,%rcx
000000000000d3d1	call	*%r14
000000000000d3d4	movq	0x0009901d(%rip),%rsi
000000000000d3db	movq	%r15,%rdi
000000000000d3de	movl	$0x00000002,%edx
000000000000d3e3	addq	$0x28,%rsp
000000000000d3e7	popq	%rbx
000000000000d3e8	popq	%r12
000000000000d3ea	popq	%r13
000000000000d3ec	popq	%r14
000000000000d3ee	popq	%r15
000000000000d3f0	popq	%rbp
000000000000d3f1	jmp	*0x00076ce1(%rip)
000000000000d3f7	addq	$0x28,%rsp
000000000000d3fb	popq	%rbx
000000000000d3fc	popq	%r12
000000000000d3fe	popq	%r13
000000000000d400	popq	%r14
000000000000d402	popq	%r15
000000000000d404	popq	%rbp
000000000000d405	ret
000000000000d406	movq	0x000990bb(%rip),%rsi
000000000000d40d	movq	%r15,%rdi
000000000000d410	addq	$0x28,%rsp
000000000000d414	popq	%rbx
000000000000d415	popq	%r12
000000000000d417	popq	%r13
000000000000d419	popq	%r14
000000000000d41b	popq	%r15
000000000000d41d	popq	%rbp
000000000000d41e	jmp	*0x00076cb4(%rip)
000000000000d424	movq	0x000990a5(%rip),%rsi
000000000000d42b	movq	0x0009b44e(%rip),%rdi
000000000000d432	movq	%r13,%rdx
000000000000d435	movq	%r15,%rcx
000000000000d438	addq	$0x28,%rsp
000000000000d43c	popq	%rbx
000000000000d43d	popq	%r12
000000000000d43f	popq	%r13
000000000000d441	popq	%r14
000000000000d443	popq	%r15
000000000000d445	popq	%rbp
000000000000d446	jmp	*0x00076c8c(%rip)
+[PBXGDB_DynamicLinkerImage appendSharedLibraryImagesFrom:adaptor:]:
000000000000d44c	pushq	%rbp
000000000000d44d	movq	%rsp,%rbp
000000000000d450	pushq	%r15
000000000000d452	pushq	%r14
000000000000d454	pushq	%r12
000000000000d456	pushq	%rbx
000000000000d457	movq	%rcx,%r14
000000000000d45a	movq	%rdx,%r12
000000000000d45d	movq	%rdi,%r15
000000000000d460	movq	0x00097839(%rip),%rsi
000000000000d467	movq	%r12,%rdi
000000000000d46a	call	*0x00076c68(%rip)
000000000000d470	movq	%rax,%rbx
000000000000d473	leaq	0x0009aee6(%rip),%rsi
000000000000d47a	leaq	0x000a3db7(%rip),%rdx
000000000000d481	movq	%rbx,%rdi
000000000000d484	call	*0x0009aed6(%rip)
000000000000d48a	testb	%al,%al
000000000000d48c	jne	0x0000d4a9
000000000000d48e	leaq	0x0009aecb(%rip),%rsi
000000000000d495	leaq	0x000a3dbc(%rip),%rdx
000000000000d49c	movq	%rbx,%rdi
000000000000d49f	call	*0x0009aebb(%rip)
000000000000d4a5	testb	%al,%al
000000000000d4a7	je	0x0000d4c5
000000000000d4a9	movq	0x00097628(%rip),%rsi
000000000000d4b0	leaq	0x000a2de1(%rip),%rdx
000000000000d4b7	movq	%r12,%rdi
000000000000d4ba	call	*0x00076c18(%rip)
000000000000d4c0	testq	%rax,%rax
000000000000d4c3	jne	0x0000d4ce
000000000000d4c5	popq	%rbx
000000000000d4c6	popq	%r12
000000000000d4c8	popq	%r14
000000000000d4ca	popq	%r15
000000000000d4cc	popq	%rbp
000000000000d4cd	ret
000000000000d4ce	movq	0x00098a43(%rip),%rsi
000000000000d4d5	movq	%r15,%rdi
000000000000d4d8	movq	%rax,%rdx
000000000000d4db	movq	%r14,%rcx
000000000000d4de	popq	%rbx
000000000000d4df	popq	%r12
000000000000d4e1	popq	%r14
000000000000d4e3	popq	%r15
000000000000d4e5	popq	%rbp
000000000000d4e6	jmp	*0x00076bec(%rip)
+[PBXGDB_DynamicLinkerImage _appendSharedLibraryEntryFrom:adaptor:]:
000000000000d4ec	pushq	%rbp
000000000000d4ed	movq	%rsp,%rbp
000000000000d4f0	pushq	%r15
000000000000d4f2	pushq	%r14
000000000000d4f4	pushq	%r13
000000000000d4f6	pushq	%r12
000000000000d4f8	pushq	%rbx
000000000000d4f9	subq	$0x18,%rsp
000000000000d4fd	movq	%rcx,0xd0(%rbp)
000000000000d501	movq	0x000975d8(%rip),%rsi
000000000000d508	movq	0x00076bc9(%rip),%r15
000000000000d50f	movq	%rdx,%rdi
000000000000d512	call	*%r15
000000000000d515	movq	%rax,%rbx
000000000000d518	movq	0x000989d9(%rip),%rsi
000000000000d51f	movq	0x0009b35a(%rip),%rdi
000000000000d526	movq	%rbx,%rdx
000000000000d529	call	*%r15
000000000000d52c	movl	%eax,0xcc(%rbp)
000000000000d52f	leaq	0x000a2ca2(%rip),%rdx
000000000000d536	movq	0x0009759b(%rip),%rsi
000000000000d53d	movq	%rbx,%rdi
000000000000d540	call	*%r15
000000000000d543	movq	0x000975be(%rip),%rsi
000000000000d54a	movq	%rax,%rdi
000000000000d54d	call	*%r15
000000000000d550	movq	0x00097d89(%rip),%rsi
000000000000d557	movq	%rax,%rdi
000000000000d55a	call	*%r15
000000000000d55d	movq	%rax,%r12
000000000000d560	leaq	0x000a29b1(%rip),%rdx
000000000000d567	movq	0x0009756a(%rip),%rsi
000000000000d56e	movq	%rbx,%rdi
000000000000d571	call	*%r15
000000000000d574	movq	0x0009758d(%rip),%rsi
000000000000d57b	movq	%rax,%rdi
000000000000d57e	call	*%r15
000000000000d581	movq	%rax,%r13
000000000000d584	movq	0x00098975(%rip),%rsi
000000000000d58b	movq	%r13,%rdi
000000000000d58e	call	*%r15
000000000000d591	movq	%rax,%r14
000000000000d594	leaq	0x000a2d9d(%rip),%rdx
000000000000d59b	movq	0x00097536(%rip),%rsi
000000000000d5a2	movq	%rbx,%rdi
000000000000d5a5	call	*%r15
000000000000d5a8	movq	0x00097559(%rip),%rsi
000000000000d5af	movq	%rax,%rdi
000000000000d5b2	call	*%r15
000000000000d5b5	movq	0x00097574(%rip),%rsi
000000000000d5bc	movq	%rax,%rdi
000000000000d5bf	call	*%r15
000000000000d5c2	movq	%rax,%rdi
000000000000d5c5	xorl	%esi,%esi
000000000000d5c7	xorl	%edx,%edx
000000000000d5c9	callq	0x0004e71c	; symbol stub for: _strtoull
000000000000d5ce	movq	%rax,%rbx
000000000000d5d1	leaq	0x0009ad08(%rip),%rsi
000000000000d5d8	movq	0x0009b2a9(%rip),%rdi
000000000000d5df	call	*0x0009acfb(%rip)
000000000000d5e5	movq	0x0009891c(%rip),%rsi
000000000000d5ec	movl	0xcc(%rbp),%ecx
000000000000d5ef	movl	%ecx,(%rsp)
000000000000d5f2	movq	%rax,%rdi
000000000000d5f5	movq	%r12,%rdx
000000000000d5f8	movq	%r14,%rcx
000000000000d5fb	movq	%rbx,%r8
000000000000d5fe	movq	%r13,%r9
000000000000d601	call	*%r15
000000000000d604	movq	%rax,%rbx
000000000000d607	movq	0x000976da(%rip),%rsi
000000000000d60e	movq	0xd0(%rbp),%rdi
000000000000d612	call	*%r15
000000000000d615	movq	0x000976d4(%rip),%rsi
000000000000d61c	movq	%rax,%rdi
000000000000d61f	call	*%r15
000000000000d622	movq	0x000988e7(%rip),%rsi
000000000000d629	movq	%rax,%rdi
000000000000d62c	call	*%r15
000000000000d62f	leaq	0x0009acca(%rip),%rsi
000000000000d636	movq	0x0009acc3(%rip),%rcx
000000000000d63d	movq	%rax,%rdi
000000000000d640	movq	%rbx,%rdx
000000000000d643	addq	$0x18,%rsp
000000000000d647	popq	%rbx
000000000000d648	popq	%r12
000000000000d64a	popq	%r13
000000000000d64c	popq	%r14
000000000000d64e	popq	%r15
000000000000d650	popq	%rbp
000000000000d651	jmp	*%rcx
-[PBXGDB_MIResultListItem listValue]:
000000000000d653	pushq	%rbp
000000000000d654	movq	%rsp,%rbp
000000000000d657	pushq	%rbx
000000000000d658	pushq	%rax
000000000000d659	movq	0x000a1728(%rip),%rax
000000000000d660	movq	(%rdi,%rax),%rbx
000000000000d664	movq	0x0009b2ed(%rip),%rdi
000000000000d66b	leaq	0x0009acbe(%rip),%rsi
000000000000d672	call	*0x0009acb8(%rip)
000000000000d678	leaq	0x0009acc1(%rip),%rsi
000000000000d67f	movq	%rbx,%rdi
000000000000d682	movq	%rax,%rdx
000000000000d685	call	*0x0009acb5(%rip)
000000000000d68b	cmpb	$0x01,%al
000000000000d68d	je	0x0000d691
000000000000d68f	xorl	%ebx,%ebx
000000000000d691	movq	%rbx,%rax
000000000000d694	addq	$0x08,%rsp
000000000000d698	popq	%rbx
000000000000d699	popq	%rbp
000000000000d69a	ret
+[PBXGDB_DynamicLinkerImage _debugSymbolsLoadState:]:
000000000000d69b	pushq	%rbp
000000000000d69c	movq	%rsp,%rbp
000000000000d69f	pushq	%rbx
000000000000d6a0	pushq	%rax
000000000000d6a1	movq	0x00097430(%rip),%rsi
000000000000d6a8	leaq	0x000a2ae9(%rip),%rax
000000000000d6af	movq	0x00076a22(%rip),%rbx
000000000000d6b6	movq	%rdx,%rdi
000000000000d6b9	movq	%rax,%rdx
000000000000d6bc	call	*%rbx
000000000000d6be	movq	0x00097443(%rip),%rsi
000000000000d6c5	movq	%rax,%rdi
000000000000d6c8	call	*%rbx
000000000000d6ca	leaq	0x0009ac8f(%rip),%rsi
000000000000d6d1	leaq	0x000a3b40(%rip),%rdx
000000000000d6d8	movq	%rax,%rdi
000000000000d6db	call	*0x0009ac7f(%rip)
000000000000d6e1	testb	%al,%al
000000000000d6e3	setne	%al
000000000000d6e6	movzbl	%al,%eax
000000000000d6e9	addl	%eax,%eax
000000000000d6eb	addq	$0x08,%rsp
000000000000d6ef	popq	%rbx
000000000000d6f0	popq	%rbp
000000000000d6f1	ret
-[PBXGDB_MILoadExecutableCommand didFinishWithResultList:]:
000000000000d6f2	pushq	%rbp
000000000000d6f3	movq	%rsp,%rbp
000000000000d6f6	pushq	%r15
000000000000d6f8	pushq	%r14
000000000000d6fa	pushq	%r12
000000000000d6fc	pushq	%rbx
000000000000d6fd	subq	$0x10,%rsp
000000000000d701	movq	%rdx,%r14
000000000000d704	movq	%rdi,%rbx
000000000000d707	leaq	0x000a13fa(%rip),%rax
000000000000d70e	movq	(%rax),%rax
000000000000d711	movq	(%rbx,%rax),%rdi
000000000000d715	movq	0x0009739c(%rip),%rsi
000000000000d71c	movq	0x000769b5(%rip),%r12
000000000000d723	call	*%r12
000000000000d726	movq	%rax,%r15
000000000000d729	movq	0x00098b48(%rip),%rsi
000000000000d730	movq	0x0009afa1(%rip),%rdi
000000000000d737	call	*%r12
000000000000d73a	movq	0x000981e7(%rip),%rsi
000000000000d741	movq	%r15,%rdi
000000000000d744	movq	%rax,%rdx
000000000000d747	movl	$0x00000001,%ecx
000000000000d74c	call	*%r12
000000000000d74f	leaq	0xd0(%rbp),%rdi
000000000000d753	movq	%rbx,0xd0(%rbp)
000000000000d757	movq	0x0009b6e2(%rip),%rax
000000000000d75e	movq	%rax,0xd8(%rbp)
000000000000d762	movq	0x00098a97(%rip),%rsi
000000000000d769	movq	%r14,%rdx
000000000000d76c	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000000d771	addq	$0x10,%rsp
000000000000d775	popq	%rbx
000000000000d776	popq	%r12
000000000000d778	popq	%r14
000000000000d77a	popq	%r15
000000000000d77c	popq	%rbp
000000000000d77d	ret
000000000000d77e	nop
000000000000d77f	nop
+[PBXLSDebuggingSystem localizedStringForDoneLoadingExecutable]:
000000000000d780	pushq	%rbp
000000000000d781	movq	%rsp,%rbp
000000000000d784	movq	0x00099c7d(%rip),%rsi
000000000000d78b	call	*0x00076947(%rip)
000000000000d791	leaq	0x000a8660(%rip),%rdx
000000000000d798	leaq	0x000a2199(%rip),%rcx
000000000000d79f	leaq	0x000a79b2(%rip),%r8
000000000000d7a6	movq	0x00099c63(%rip),%rsi
000000000000d7ad	movq	%rax,%rdi
000000000000d7b0	movq	0x00076921(%rip),%rax
000000000000d7b7	popq	%rbp
000000000000d7b8	jmp	*%rax
000000000000d7ba	nop
000000000000d7bb	nop
-[PBXGDB_RunControlSequence execute]:
000000000000d7bc	pushq	%rbp
000000000000d7bd	movq	%rsp,%rbp
000000000000d7c0	pushq	%r14
000000000000d7c2	pushq	%rbx
000000000000d7c3	movq	%rdi,%r14
000000000000d7c6	movq	0x000972eb(%rip),%rsi
000000000000d7cd	call	*0x00076905(%rip)
000000000000d7d3	movq	0x00098336(%rip),%rsi
000000000000d7da	leaq	0x000a34f7(%rip),%rdx
000000000000d7e1	movq	%rax,%rdi
000000000000d7e4	call	*0x000768ee(%rip)
000000000000d7ea	movq	0x0009728f(%rip),%rsi
000000000000d7f1	movq	0x0009af28(%rip),%rdi
000000000000d7f8	call	*0x000768da(%rip)
000000000000d7fe	movq	%rax,%rbx
000000000000d801	movq	0x00097280(%rip),%rsi
000000000000d808	movq	%rbx,%rdi
000000000000d80b	movq	%r14,%rdx
000000000000d80e	call	*0x000768c4(%rip)
000000000000d814	movq	0x00098305(%rip),%rsi
000000000000d81b	movq	0x000982f6(%rip),%rdx
000000000000d822	movq	%rbx,%rdi
000000000000d825	call	*0x000768ad(%rip)
000000000000d82b	movq	0x00097286(%rip),%rsi
000000000000d832	movq	%r14,%rdi
000000000000d835	call	*0x0007689d(%rip)
000000000000d83b	movq	0x0009727e(%rip),%rsi
000000000000d842	movq	%rax,%rdi
000000000000d845	call	*0x0007688d(%rip)
000000000000d84b	movq	0x00097f06(%rip),%rsi
000000000000d852	movq	%rax,%rdi
000000000000d855	movq	%rbx,%rdx
000000000000d858	movq	0x00076879(%rip),%rax
000000000000d85f	popq	%rbx
000000000000d860	popq	%r14
000000000000d862	popq	%rbp
000000000000d863	jmp	*%rax
-[PBXGDB_Adaptor commandInterpreterStringAsIfTypedByUser:]:
000000000000d865	pushq	%rbp
000000000000d866	movq	%rsp,%rbp
000000000000d869	popq	%rbp
000000000000d86a	ret
-[PBXGDB_MICommand setStartExecutableRunningAction:]:
000000000000d86b	pushq	%rbp
000000000000d86c	movq	%rsp,%rbp
000000000000d86f	movq	0x000a12aa(%rip),%rax
000000000000d876	movq	%rdx,(%rdi,%rax)
000000000000d87a	popq	%rbp
000000000000d87b	ret
000000000000d87c	nop
000000000000d87d	nop
000000000000d87e	nop
000000000000d87f	nop
000000000000d880	nop
000000000000d881	nop
000000000000d882	nop
000000000000d883	nop
000000000000d884	nop
000000000000d885	nop
000000000000d886	nop
000000000000d887	nop
000000000000d888	nop
000000000000d889	nop
-[PBXGDB_MIController postPendableCommand:]:
000000000000d88a	pushq	%rbp
000000000000d88b	movq	%rsp,%rbp
000000000000d88e	pushq	%r14
000000000000d890	pushq	%rbx
000000000000d891	movq	%rdx,%r14
000000000000d894	movq	%rdi,%rbx
000000000000d897	movq	0x00098b32(%rip),%rsi
000000000000d89e	call	*0x00076834(%rip)
000000000000d8a4	testb	%al,%al
000000000000d8a6	je	0x0000d8bf
000000000000d8a8	movq	0x00098b29(%rip),%rsi
000000000000d8af	movq	%rbx,%rdi
000000000000d8b2	movq	%r14,%rdx
000000000000d8b5	popq	%rbx
000000000000d8b6	popq	%r14
000000000000d8b8	popq	%rbp
000000000000d8b9	jmp	*0x00076819(%rip)
000000000000d8bf	movq	0x00097202(%rip),%rsi
000000000000d8c6	jmp	0x0000d8af
000000000000d8c8	nop
000000000000d8c9	nop
000000000000d8ca	nop
000000000000d8cb	nop
000000000000d8cc	nop
-[PBXGDB_MIController enqueuePendingCommand:]:
000000000000d8cd	pushq	%rbp
000000000000d8ce	movq	%rsp,%rbp
000000000000d8d1	movq	0x000a1318(%rip),%rax
000000000000d8d8	movq	(%rdi,%rax),%rdi
000000000000d8dc	movq	0x0009aa1d(%rip),%rax
000000000000d8e3	leaq	0x0009aa16(%rip),%rsi
000000000000d8ea	popq	%rbp
000000000000d8eb	jmp	*%rax
000000000000d8ed	nop
000000000000d8ee	nop
000000000000d8ef	nop
000000000000d8f0	nop
000000000000d8f1	nop
000000000000d8f2	nop
000000000000d8f3	nop
000000000000d8f4	nop
000000000000d8f5	nop
000000000000d8f6	nop
000000000000d8f7	nop
-[PBXGDB_MIController havePendingCommands]:
000000000000d8f8	pushq	%rbp
000000000000d8f9	movq	%rsp,%rbp
000000000000d8fc	movq	0x000a12ed(%rip),%rax
000000000000d903	movq	(%rdi,%rax),%rdi
000000000000d907	leaq	0x0009aa02(%rip),%rsi
000000000000d90e	call	*0x0009a9fc(%rip)
000000000000d914	testq	%rax,%rax
000000000000d917	setne	%al
000000000000d91a	movzbl	%al,%eax
000000000000d91d	popq	%rbp
000000000000d91e	ret
-[PBXGDB_MIController sendPendedCommand]:
000000000000d91f	pushq	%rbp
000000000000d920	movq	%rsp,%rbp
000000000000d923	pushq	%rbx
000000000000d924	pushq	%rax
000000000000d925	movq	%rdi,%rbx
000000000000d928	movq	0x000989a1(%rip),%rsi
000000000000d92f	call	*0x000767a3(%rip)
000000000000d935	testb	%al,%al
000000000000d937	jne	0x0000d940
000000000000d939	addq	$0x08,%rsp
000000000000d93d	popq	%rbx
000000000000d93e	popq	%rbp
000000000000d93f	ret
000000000000d940	movq	0x00098991(%rip),%rsi
000000000000d947	movq	%rbx,%rdi
000000000000d94a	call	*0x00076788(%rip)
000000000000d950	movq	0x00097171(%rip),%rsi
000000000000d957	movq	%rbx,%rdi
000000000000d95a	movq	%rax,%rdx
000000000000d95d	movq	0x00076774(%rip),%rax
000000000000d964	addq	$0x08,%rsp
000000000000d968	popq	%rbx
000000000000d969	popq	%rbp
000000000000d96a	jmp	*%rax
000000000000d96c	nop
-[PBXGDB_MIController dequeueAndRetainPendingingCommand]:
000000000000d96d	pushq	%rbp
000000000000d96e	movq	%rsp,%rbp
000000000000d971	pushq	%r14
000000000000d973	pushq	%rbx
000000000000d974	movq	%rdi,%rbx
000000000000d977	movq	0x000a1272(%rip),%rax
000000000000d97e	movq	(%rbx,%rax),%rdi
000000000000d982	leaq	0x0009a987(%rip),%rsi
000000000000d989	call	*0x0009a981(%rip)
000000000000d98f	testq	%rax,%rax
000000000000d992	jne	0x0000d999
000000000000d994	xorl	%r14d,%r14d
000000000000d997	jmp	0x0000d9d0
000000000000d999	movq	0x000a1250(%rip),%rax
000000000000d9a0	movq	(%rbx,%rax),%rdi
000000000000d9a4	leaq	0x0009a975(%rip),%rsi
000000000000d9ab	xorl	%edx,%edx
000000000000d9ad	call	*0x0009a96d(%rip)
000000000000d9b3	movq	%rax,%r14
000000000000d9b6	movq	0x000a1233(%rip),%rax
000000000000d9bd	movq	(%rbx,%rax),%rdi
000000000000d9c1	movq	0x00097220(%rip),%rsi
000000000000d9c8	xorl	%edx,%edx
000000000000d9ca	call	*0x00076708(%rip)
000000000000d9d0	movq	%r14,%rax
000000000000d9d3	popq	%rbx
000000000000d9d4	popq	%r14
000000000000d9d6	popq	%rbp
000000000000d9d7	ret
-[PBXGDB_MIRunExecutableCommand willExecute]:
000000000000d9d8	pushq	%rbp
000000000000d9d9	movq	%rsp,%rbp
000000000000d9dc	leaq	0x000a1125(%rip),%rax
000000000000d9e3	movq	(%rax),%rax
000000000000d9e6	movq	(%rdi,%rax),%rdi
000000000000d9ea	movq	0x0009888f(%rip),%rsi
000000000000d9f1	xorl	%edx,%edx
000000000000d9f3	popq	%rbp
000000000000d9f4	jmp	*0x000766de(%rip)
000000000000d9fa	nop
-[PBXGDB_MIController setMIState:]:
000000000000d9fb	pushq	%rbp
000000000000d9fc	movq	%rsp,%rbp
000000000000d9ff	movq	0x000a1202(%rip),%rax
000000000000da06	movl	%edx,(%rdi,%rax)
000000000000da09	popq	%rbp
000000000000da0a	ret
-[PBXGDB_MIRunExecutableCommand GDBCommandString]:
000000000000da0b	pushq	%rbp
000000000000da0c	movq	%rsp,%rbp
000000000000da0f	leaq	0x000a3ea2(%rip),%rax
000000000000da16	popq	%rbp
000000000000da17	ret
-[PBXGDB_MICommand didStartExecutableRunning]:
000000000000da18	pushq	%rbp
000000000000da19	movq	%rsp,%rbp
000000000000da1c	pushq	%rbx
000000000000da1d	pushq	%rax
000000000000da1e	movq	%rdi,%rbx
000000000000da21	movq	0x000a10e8(%rip),%rax
000000000000da28	movq	(%rbx,%rax),%rdi
000000000000da2c	testq	%rdi,%rdi
000000000000da2f	je	0x0000da52
000000000000da31	movq	0x000a10e8(%rip),%rax
000000000000da38	movq	(%rbx,%rax),%rdx
000000000000da3c	testq	%rdx,%rdx
000000000000da3f	je	0x0000da52
000000000000da41	leaq	0x0009a928(%rip),%rsi
000000000000da48	call	*0x0009a922(%rip)
000000000000da4e	testb	%al,%al
000000000000da50	jne	0x0000da59
000000000000da52	addq	$0x08,%rsp
000000000000da56	popq	%rbx
000000000000da57	popq	%rbp
000000000000da58	ret
000000000000da59	movq	0x000a10c0(%rip),%rax
000000000000da60	movq	(%rbx,%rax),%rdx
000000000000da64	movq	0x000a10a5(%rip),%rax
000000000000da6b	movq	(%rbx,%rax),%rdi
000000000000da6f	movq	0x00097e1a(%rip),%rsi
000000000000da76	movq	%rbx,%rcx
000000000000da79	addq	$0x08,%rsp
000000000000da7d	popq	%rbx
000000000000da7e	popq	%rbp
000000000000da7f	jmp	*0x00076653(%rip)
-[PBXGDB_RunControlSequence _resultProcessStarted:]:
000000000000da85	pushq	%rbp
000000000000da86	movq	%rsp,%rbp
000000000000da89	pushq	%r14
000000000000da8b	pushq	%rbx
000000000000da8c	movq	%rdi,%rbx
000000000000da8f	movq	0x00097722(%rip),%rsi
000000000000da96	call	*0x0007663c(%rip)
000000000000da9c	movq	0x00098085(%rip),%rsi
000000000000daa3	movq	%rax,%rdi
000000000000daa6	call	*0x0007662c(%rip)
000000000000daac	movq	0x000a0dcd(%rip),%rax
000000000000dab3	movb	$0x01,(%rbx,%rax)
000000000000dab7	movq	0x00096fc2(%rip),%rsi
000000000000dabe	movq	0x0009ac63(%rip),%rdi
000000000000dac5	call	*0x0007660d(%rip)
000000000000dacb	movq	%rax,%r14
000000000000dace	movq	0x00096fb3(%rip),%rsi
000000000000dad5	movq	%r14,%rdi
000000000000dad8	movq	%rbx,%rdx
000000000000dadb	call	*0x000765f7(%rip)
000000000000dae1	movq	0x00096fb0(%rip),%rsi
000000000000dae8	movq	0x00098041(%rip),%rdx
000000000000daef	movq	%r14,%rdi
000000000000daf2	call	*0x000765e0(%rip)
000000000000daf8	movq	0x00096fb9(%rip),%rsi
000000000000daff	movq	%rbx,%rdi
000000000000db02	call	*0x000765d0(%rip)
000000000000db08	movq	0x00096fb1(%rip),%rsi
000000000000db0f	movq	%rax,%rdi
000000000000db12	call	*0x000765c0(%rip)
000000000000db18	movq	0x00096fa9(%rip),%rsi
000000000000db1f	movq	%rax,%rdi
000000000000db22	movq	%r14,%rdx
000000000000db25	movq	0x000765ac(%rip),%rax
000000000000db2c	popq	%rbx
000000000000db2d	popq	%r14
000000000000db2f	popq	%rbp
000000000000db30	jmp	*%rax
-[PBXGDB_BaseThreadSequence threadController]:
000000000000db32	pushq	%rbp
000000000000db33	movq	%rsp,%rbp
000000000000db36	movq	0x000a148b(%rip),%rax
000000000000db3d	movq	(%rdi,%rax),%rax
000000000000db41	popq	%rbp
000000000000db42	ret
000000000000db43	nop
000000000000db44	nop
000000000000db45	nop
-[PBXGDB_ThreadController processStarted]:
000000000000db46	pushq	%rbp
000000000000db47	movq	%rsp,%rbp
000000000000db4a	pushq	%r14
000000000000db4c	pushq	%rbx
000000000000db4d	movq	%rdi,%rbx
000000000000db50	movq	0x00096f61(%rip),%rsi
000000000000db57	call	*0x0007657b(%rip)
000000000000db5d	movq	%rax,%r14
000000000000db60	movq	0x00098011(%rip),%rsi
000000000000db67	movq	0x0009ab6a(%rip),%rdi
000000000000db6e	call	*0x00076564(%rip)
000000000000db74	movq	0x00097dad(%rip),%rsi
000000000000db7b	movq	%r14,%rdi
000000000000db7e	movq	%rax,%rdx
000000000000db81	movl	$0x00000001,%ecx
000000000000db86	call	*0x0007654c(%rip)
000000000000db8c	movq	0x000995e5(%rip),%rsi
000000000000db93	movq	%rbx,%rdi
000000000000db96	movq	0x0007653b(%rip),%rax
000000000000db9d	popq	%rbx
000000000000db9e	popq	%r14
000000000000dba0	popq	%rbp
000000000000dba1	jmp	*%rax
000000000000dba3	nop
+[PBXLSDebuggingSystem localizedStringForStateRunning]:
000000000000dba4	pushq	%rbp
000000000000dba5	movq	%rsp,%rbp
000000000000dba8	movq	0x00099859(%rip),%rsi
000000000000dbaf	call	*0x00076523(%rip)
000000000000dbb5	leaq	0x000a807c(%rip),%rdx
000000000000dbbc	leaq	0x000a1d75(%rip),%rcx
000000000000dbc3	leaq	0x000a758e(%rip),%r8
000000000000dbca	movq	0x0009983f(%rip),%rsi
000000000000dbd1	movq	%rax,%rdi
000000000000dbd4	movq	0x000764fd(%rip),%rax
000000000000dbdb	popq	%rbp
000000000000dbdc	jmp	*%rax
-[PBXGDB_ThreadController _setProcessIsRunning]:
000000000000dbde	pushq	%rbp
000000000000dbdf	movq	%rsp,%rbp
000000000000dbe2	pushq	%r15
000000000000dbe4	pushq	%r14
000000000000dbe6	pushq	%r13
000000000000dbe8	pushq	%r12
000000000000dbea	pushq	%rbx
000000000000dbeb	pushq	%rax
000000000000dbec	movq	0x00096ec5(%rip),%rsi
000000000000dbf3	movq	0x000764de(%rip),%rbx
000000000000dbfa	call	*%rbx
000000000000dbfc	movq	%rax,%r14
000000000000dbff	movq	0x000971ea(%rip),%rsi
000000000000dc06	movq	%r14,%rdi
000000000000dc09	call	*%rbx
000000000000dc0b	movq	0x000984f6(%rip),%rsi
000000000000dc12	movq	%rax,%rdi
000000000000dc15	call	*%rbx
000000000000dc17	movq	%rax,%r15
000000000000dc1a	movq	0x00099457(%rip),%rsi
000000000000dc21	movq	%r14,%rdi
000000000000dc24	call	*%rbx
000000000000dc26	testq	%r15,%r15
000000000000dc29	je	0x0000dc99
000000000000dc2b	leaq	0x0009a6de(%rip),%rsi
000000000000dc32	movq	%r15,%rdi
000000000000dc35	call	*0x0009a6d5(%rip)
000000000000dc3b	testq	%rax,%rax
000000000000dc3e	je	0x0000dc99
000000000000dc40	leaq	0x0009a6c9(%rip),%rsi
000000000000dc47	movq	%r15,%rdi
000000000000dc4a	call	*0x0009a6c0(%rip)
000000000000dc50	movq	%rax,%r12
000000000000dc53	testq	%r12,%r12
000000000000dc56	je	0x0000dc99
000000000000dc58	xorl	%ebx,%ebx
000000000000dc5a	movq	0x00076477(%rip),%r13
000000000000dc61	movq	%r15,%rdi
000000000000dc64	leaq	0x0009a6b5(%rip),%rsi
000000000000dc6b	movq	%rbx,%rdx
000000000000dc6e	call	*0x0009a6ac(%rip)
000000000000dc74	movq	%rax,%rdi
000000000000dc77	movq	0x00097472(%rip),%rsi
000000000000dc7e	call	*%r13
000000000000dc81	movq	%r14,%rdi
000000000000dc84	movq	0x0009940d(%rip),%rsi
000000000000dc8b	movq	%rax,%rdx
000000000000dc8e	call	*%r13
000000000000dc91	incq	%rbx
000000000000dc94	cmpq	%rbx,%r12
000000000000dc97	jne	0x0000dc61
000000000000dc99	movq	0x00099418(%rip),%rsi
000000000000dca0	movq	%r14,%rdi
000000000000dca3	call	*0x0007642f(%rip)
000000000000dca9	movq	0x000994c0(%rip),%rsi
000000000000dcb0	movq	%r14,%rdi
000000000000dcb3	movq	0x0007641e(%rip),%rax
000000000000dcba	addq	$0x08,%rsp
000000000000dcbe	popq	%rbx
000000000000dcbf	popq	%r12
000000000000dcc1	popq	%r13
000000000000dcc3	popq	%r14
000000000000dcc5	popq	%r15
000000000000dcc7	popq	%rbp
000000000000dcc8	jmp	*%rax
000000000000dcca	nop
000000000000dccb	nop
-[PBXLSProcess threads]:
000000000000dccc	pushq	%rbp
000000000000dccd	movq	%rsp,%rbp
000000000000dcd0	movq	0x00099909(%rip),%rsi
000000000000dcd7	xorl	%edx,%edx
000000000000dcd9	popq	%rbp
000000000000dcda	jmp	*0x000763f8(%rip)
000000000000dce0	nop
000000000000dce1	nop
000000000000dce2	nop
000000000000dce3	nop
000000000000dce4	nop
000000000000dce5	nop
000000000000dce6	nop
000000000000dce7	nop
000000000000dce8	nop
000000000000dce9	nop
-[PBXLSProcess _threadsOfType:]:
000000000000dcea	pushq	%rbp
000000000000dceb	movq	%rsp,%rbp
000000000000dcee	pushq	%r15
000000000000dcf0	pushq	%r14
000000000000dcf2	pushq	%r13
000000000000dcf4	pushq	%r12
000000000000dcf6	pushq	%rbx
000000000000dcf7	subq	$0x28,%rsp
000000000000dcfb	movl	%edx,%r12d
000000000000dcfe	movq	0x000998a3(%rip),%rsi
000000000000dd05	movq	0x000763cc(%rip),%r14
000000000000dd0c	call	*%r14
000000000000dd0f	movq	%rax,%rbx
000000000000dd12	movq	%rbx,0xc0(%rbp)
000000000000dd16	movq	0x00097713(%rip),%rsi
000000000000dd1d	movq	0x0009a73c(%rip),%rdi
000000000000dd24	call	*%r14
000000000000dd27	movq	%rax,%r15
000000000000dd2a	leaq	0x0009a5df(%rip),%rsi
000000000000dd31	movq	%rbx,%rdi
000000000000dd34	call	*0x0009a5d6(%rip)
000000000000dd3a	movq	%rax,0xb8(%rbp)
000000000000dd3e	testq	%rax,%rax
000000000000dd41	je	0x0000ddf3
000000000000dd47	xorl	%eax,%eax
000000000000dd49	movq	%rax,0xc8(%rbp)
000000000000dd4d	movq	0xc0(%rbp),%rdi
000000000000dd51	leaq	0x0009a5c8(%rip),%rsi
000000000000dd58	movq	%rax,%rdx
000000000000dd5b	call	*0x0009a5bf(%rip)
000000000000dd61	movq	%rax,%rdi
000000000000dd64	movq	0x0009839d(%rip),%rsi
000000000000dd6b	call	*0x00076367(%rip)
000000000000dd71	movq	%rax,0xd0(%rbp)
000000000000dd75	movq	%rax,%rdi
000000000000dd78	leaq	0x0009a591(%rip),%rsi
000000000000dd7f	call	*0x0009a58b(%rip)
000000000000dd85	movq	%rax,%r13
000000000000dd88	testq	%r13,%r13
000000000000dd8b	je	0x0000dde2
000000000000dd8d	xorl	%r14d,%r14d
000000000000dd90	movq	0xd0(%rbp),%rdi
000000000000dd94	leaq	0x0009a585(%rip),%rsi
000000000000dd9b	movq	%r14,%rdx
000000000000dd9e	call	*0x0009a57c(%rip)
000000000000dda4	movq	%rax,%rbx
000000000000dda7	testl	%r12d,%r12d
000000000000ddaa	je	0x0000ddc7
000000000000ddac	cmpl	$0x01,%r12d
000000000000ddb0	jne	0x0000ddda
000000000000ddb2	movq	%rbx,%rdi
000000000000ddb5	movq	0x000981bc(%rip),%rsi
000000000000ddbc	call	*0x00076316(%rip)
000000000000ddc2	cmpl	$0x01,%eax
000000000000ddc5	je	0x0000ddda
000000000000ddc7	movq	%r15,%rdi
000000000000ddca	leaq	0x0009a52f(%rip),%rsi
000000000000ddd1	movq	%rbx,%rdx
000000000000ddd4	call	*0x0009a526(%rip)
000000000000ddda	incq	%r14
000000000000dddd	cmpq	%r14,%r13
000000000000dde0	jne	0x0000dd90
000000000000dde2	movq	0xc8(%rbp),%rax
000000000000dde6	incq	%rax
000000000000dde9	cmpq	0xb8(%rbp),%rax
000000000000dded	jne	0x0000dd49
000000000000ddf3	movq	%r15,%rax
000000000000ddf6	addq	$0x28,%rsp
000000000000ddfa	popq	%rbx
000000000000ddfb	popq	%r12
000000000000ddfd	popq	%r13
000000000000ddff	popq	%r14
000000000000de01	popq	%r15
000000000000de03	popq	%rbp
000000000000de04	ret
000000000000de05	nop
000000000000de06	nop
000000000000de07	nop
000000000000de08	nop
000000000000de09	nop
000000000000de0a	nop
000000000000de0b	nop
000000000000de0c	nop
000000000000de0d	nop
000000000000de0e	nop
000000000000de0f	nop
000000000000de10	nop
000000000000de11	nop
000000000000de12	nop
000000000000de13	nop
-[PBXLSProcess threadGroups]:
000000000000de14	pushq	%rbp
000000000000de15	movq	%rsp,%rbp
000000000000de18	movq	0x00097869(%rip),%rsi
000000000000de1f	popq	%rbp
000000000000de20	jmp	*0x000762b2(%rip)
-[PBXLSDebuggerAdaptor willUpdateThreads]:
000000000000de26	pushq	%rbp
000000000000de27	movq	%rsp,%rbp
000000000000de2a	pushq	%rbx
000000000000de2b	pushq	%rax
000000000000de2c	movq	%rdi,%rbx
000000000000de2f	movq	0x00096fba(%rip),%rsi
000000000000de36	call	*0x0007629c(%rip)
000000000000de3c	movq	0x0009994d(%rip),%rsi
000000000000de43	movq	%rax,%rdi
000000000000de46	movq	%rbx,%rdx
000000000000de49	movq	0x00076288(%rip),%rax
000000000000de50	addq	$0x08,%rsp
000000000000de54	popq	%rbx
000000000000de55	popq	%rbp
000000000000de56	jmp	*%rax
000000000000de58	nop
000000000000de59	nop
000000000000de5a	nop
000000000000de5b	nop
000000000000de5c	nop
000000000000de5d	nop
000000000000de5e	nop
000000000000de5f	nop
000000000000de60	nop
000000000000de61	nop
000000000000de62	nop
000000000000de63	nop
000000000000de64	nop
000000000000de65	nop
-[PBXLSProcess debuggerWillUpdateThreads:]:
000000000000de66	pushq	%rbp
000000000000de67	movq	%rsp,%rbp
000000000000de6a	pushq	%r15
000000000000de6c	pushq	%r14
000000000000de6e	pushq	%r13
000000000000de70	pushq	%r12
000000000000de72	pushq	%rbx
000000000000de73	pushq	%rax
000000000000de74	movq	%rdi,%rbx
000000000000de77	movq	0x0009828a(%rip),%rsi
000000000000de7e	movq	0x00076253(%rip),%r12
000000000000de85	call	*%r12
000000000000de88	movq	%rax,%r14
000000000000de8b	leaq	0x0009a47e(%rip),%rsi
000000000000de92	movq	%r14,%rdi
000000000000de95	call	*0x0009a475(%rip)
000000000000de9b	movq	%rax,%r15
000000000000de9e	movq	0x00097d13(%rip),%rsi
000000000000dea5	movq	%rbx,%rdi
000000000000dea8	xorl	%edx,%edx
000000000000deaa	call	*%r12
000000000000dead	testq	%r15,%r15
000000000000deb0	je	0x0000dee5
000000000000deb2	xorl	%ebx,%ebx
000000000000deb4	movq	0x0009967d(%rip),%r12
000000000000debb	leaq	0x0009a45e(%rip),%r13
000000000000dec2	movq	%r14,%rdi
000000000000dec5	movq	%r13,%rsi
000000000000dec8	movq	%rbx,%rdx
000000000000decb	call	*0x0009a44f(%rip)
000000000000ded1	movq	%rax,%rdi
000000000000ded4	movq	%r12,%rsi
000000000000ded7	call	*0x000761fb(%rip)
000000000000dedd	incq	%rbx
000000000000dee0	cmpq	%rbx,%r15
000000000000dee3	jne	0x0000dec2
000000000000dee5	addq	$0x08,%rsp
000000000000dee9	popq	%rbx
000000000000deea	popq	%r12
000000000000deec	popq	%r13
000000000000deee	popq	%r14
000000000000def0	popq	%r15
000000000000def2	popq	%rbp
000000000000def3	ret
000000000000def4	nop
000000000000def5	nop
000000000000def6	nop
000000000000def7	nop
000000000000def8	nop
000000000000def9	nop
000000000000defa	nop
000000000000defb	nop
000000000000defc	nop
000000000000defd	nop
000000000000defe	nop
-[PBXLSProcess setIsRunning:]:
000000000000deff	pushq	%rbp
000000000000df00	movq	%rsp,%rbp
000000000000df03	pushq	%r15
000000000000df05	pushq	%r14
000000000000df07	pushq	%rbx
000000000000df08	pushq	%rax
000000000000df09	movl	%edx,%r15d
000000000000df0c	movq	%rdi,%rbx
000000000000df0f	movq	0x000976da(%rip),%rsi
000000000000df16	leaq	0x000a775b(%rip),%r14
000000000000df1d	movq	%r14,%rdx
000000000000df20	call	*0x000761b2(%rip)
000000000000df26	movq	0x000a1413(%rip),%rax
000000000000df2d	movb	%r15b,(%rbx,%rax)
000000000000df31	movq	0x000976c0(%rip),%rsi
000000000000df38	movq	%rbx,%rdi
000000000000df3b	movq	%r14,%rdx
000000000000df3e	call	*0x00076194(%rip)
000000000000df44	movq	0x00097c1d(%rip),%rsi
000000000000df4b	movq	%rbx,%rdi
000000000000df4e	call	*0x00076184(%rip)
000000000000df54	movq	0x000a13e5(%rip),%rcx
000000000000df5b	cmpb	$0x01,(%rbx,%rcx)
000000000000df5f	movl	$0x00000001,%edx
000000000000df64	sbbl	$0xff,%edx
000000000000df67	movq	0x0009966a(%rip),%rsi
000000000000df6e	movq	%rax,%rdi
000000000000df71	movq	0x00076160(%rip),%rax
000000000000df78	addq	$0x08,%rsp
000000000000df7c	popq	%rbx
000000000000df7d	popq	%r14
000000000000df7f	popq	%r15
000000000000df81	popq	%rbp
000000000000df82	jmp	*%rax
000000000000df84	nop
000000000000df85	nop
-[PBXLSProcess foundationProcess]:
000000000000df86	pushq	%rbp
000000000000df87	movq	%rsp,%rbp
000000000000df8a	movq	0x000a139f(%rip),%rax
000000000000df91	movq	(%rdi,%rax),%rax
000000000000df95	popq	%rbp
000000000000df96	ret
-[DBGGDBProcess PBXProcess]:
000000000000df97	pushq	%rbp
000000000000df98	movq	%rsp,%rbp
000000000000df9b	movq	0x000a168e(%rip),%rax
000000000000dfa2	movq	(%rdi,%rax),%rax
000000000000dfa6	popq	%rbp
000000000000dfa7	ret
000000000000dfa8	nop
000000000000dfa9	nop
000000000000dfaa	nop
000000000000dfab	nop
000000000000dfac	nop
000000000000dfad	nop
000000000000dfae	nop
000000000000dfaf	nop
000000000000dfb0	nop
000000000000dfb1	nop
000000000000dfb2	nop
000000000000dfb3	nop
000000000000dfb4	nop
000000000000dfb5	nop
000000000000dfb6	nop
-[PBXLSProcess hasExited]:
000000000000dfb7	pushq	%rbp
000000000000dfb8	movq	%rsp,%rbp
000000000000dfbb	movq	0x000a1396(%rip),%rax
000000000000dfc2	movb	(%rdi,%rax),%al
000000000000dfc5	movsbl	%al,%eax
000000000000dfc8	popq	%rbp
000000000000dfc9	ret
-[PBXLSDebuggerAdaptor didUpdateThreads]:
000000000000dfca	pushq	%rbp
000000000000dfcb	movq	%rsp,%rbp
000000000000dfce	pushq	%rbx
000000000000dfcf	pushq	%rax
000000000000dfd0	movq	%rdi,%rbx
000000000000dfd3	movq	0x00096e16(%rip),%rsi
000000000000dfda	call	*0x000760f8(%rip)
000000000000dfe0	movq	0x000997b1(%rip),%rsi
000000000000dfe7	movq	%rax,%rdi
000000000000dfea	movq	%rbx,%rdx
000000000000dfed	movq	0x000760e4(%rip),%rax
000000000000dff4	addq	$0x08,%rsp
000000000000dff8	popq	%rbx
000000000000dff9	popq	%rbp
000000000000dffa	jmp	*%rax
000000000000dffc	nop
000000000000dffd	nop
000000000000dffe	nop
000000000000dfff	nop
000000000000e000	nop
000000000000e001	nop
000000000000e002	nop
-[PBXLSProcess debuggerDidUpdateThreads:]:
000000000000e003	pushq	%rbp
000000000000e004	movq	%rsp,%rbp
000000000000e007	pushq	%r15
000000000000e009	pushq	%r14
000000000000e00b	pushq	%r13
000000000000e00d	pushq	%r12
000000000000e00f	pushq	%rbx
000000000000e010	pushq	%rax
000000000000e011	movq	%rdx,0xd0(%rbp)
000000000000e015	movq	%rdi,%rbx
000000000000e018	movq	0x000980e9(%rip),%rsi
000000000000e01f	movq	0x000760b2(%rip),%r14
000000000000e026	call	*%r14
000000000000e029	movq	%rax,%r15
000000000000e02c	leaq	0x0009a2dd(%rip),%r12
000000000000e033	movq	%r15,%rdi
000000000000e036	movq	%r12,%rsi
000000000000e039	call	*0x0009a2d1(%rip)
000000000000e03f	movq	%rax,%r13
000000000000e042	movq	0x0009955f(%rip),%rsi
000000000000e049	movq	%rbx,%rdi
000000000000e04c	call	*%r14
000000000000e04f	movq	%rax,%rdi
000000000000e052	movq	%r12,%rsi
000000000000e055	call	*0x0009a2b5(%rip)
000000000000e05b	testq	%rax,%rax
000000000000e05e	jne	0x0000e076
000000000000e060	movq	0x00097be1(%rip),%rsi
000000000000e067	movq	%rbx,%rdi
000000000000e06a	movq	0xd0(%rbp),%rdx
000000000000e06e	xorl	%ecx,%ecx
000000000000e070	call	*0x00076062(%rip)
000000000000e076	movq	%rbx,0xd0(%rbp)
000000000000e07a	xorl	%ebx,%ebx
000000000000e07c	leaq	0x0009a29d(%rip),%r12
000000000000e083	jmp	0x0000e088
000000000000e085	incq	%rbx
000000000000e088	xorb	%r14b,%r14b
000000000000e08b	cmpq	%r13,%rbx
000000000000e08e	jae	0x0000e0b6
000000000000e090	movq	%r15,%rdi
000000000000e093	movq	%r12,%rsi
000000000000e096	movq	%rbx,%rdx
000000000000e099	call	*0x0009a281(%rip)
000000000000e09f	movq	%rax,%rdi
000000000000e0a2	movq	0x00099507(%rip),%rsi
000000000000e0a9	call	*0x00076029(%rip)
000000000000e0af	movb	$0x01,%r14b
000000000000e0b2	testb	%al,%al
000000000000e0b4	je	0x0000e085
000000000000e0b6	movq	0x00097aab(%rip),%rsi
000000000000e0bd	movq	0x00076014(%rip),%rbx
000000000000e0c4	movq	0xd0(%rbp),%rdi
000000000000e0c8	call	*%rbx
000000000000e0ca	movq	0x000994e7(%rip),%rsi
000000000000e0d1	movq	%rax,%rdi
000000000000e0d4	call	*%rbx
000000000000e0d6	testq	%r13,%r13
000000000000e0d9	je	0x0000e112
000000000000e0db	xorl	%ebx,%ebx
000000000000e0dd	leaq	0x0009a23c(%rip),%r12
000000000000e0e4	movzbl	%dh,%r14d
000000000000e0e8	movq	%r15,%rdi
000000000000e0eb	movq	%r12,%rsi
000000000000e0ee	movq	%rbx,%rdx
000000000000e0f1	call	*0x0009a229(%rip)
000000000000e0f7	movq	%rax,%rdi
000000000000e0fa	movq	0x000994bf(%rip),%rsi
000000000000e101	movl	%r14d,%edx
000000000000e104	call	*0x00075fce(%rip)
000000000000e10a	incq	%rbx
000000000000e10d	cmpq	%rbx,%r13
000000000000e110	jne	0x0000e0e8
000000000000e112	movq	0x000994af(%rip),%rsi
000000000000e119	movq	0xd0(%rbp),%rbx
000000000000e11d	movq	%rbx,%rdi
000000000000e120	call	*0x00075fb2(%rip)
000000000000e126	movq	0x000994a3(%rip),%rsi
000000000000e12d	movq	%rbx,%rdi
000000000000e130	movq	0x00075fa1(%rip),%rax
000000000000e137	addq	$0x08,%rsp
000000000000e13b	popq	%rbx
000000000000e13c	popq	%r12
000000000000e13e	popq	%r13
000000000000e140	popq	%r14
000000000000e142	popq	%r15
000000000000e144	popq	%rbp
000000000000e145	jmp	*%rax
000000000000e147	nop
000000000000e148	nop
000000000000e149	nop
000000000000e14a	nop
000000000000e14b	nop
000000000000e14c	nop
000000000000e14d	nop
-[PBXLSProcess debugger:setCurrentThread:]:
000000000000e14e	pushq	%rbp
000000000000e14f	movq	%rsp,%rbp
000000000000e152	pushq	%r15
000000000000e154	pushq	%r14
000000000000e156	pushq	%rbx
000000000000e157	pushq	%rax
000000000000e158	movq	%rdi,%rbx
000000000000e15b	movq	0x000a11be(%rip),%rdx
000000000000e162	cmpq	%rcx,(%rbx,%rdx)
000000000000e166	je	0x0000e1b7
000000000000e168	addq	%rbx,%rdx
000000000000e16b	subq	%rbx,%rdx
000000000000e16e	movq	%rcx,%rdi
000000000000e171	movq	%rbx,%rsi
000000000000e174	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000000e179	movq	0x000a11a0(%rip),%rax
000000000000e180	movq	(%rbx,%rax),%rdi
000000000000e184	movq	0x00097add(%rip),%rsi
000000000000e18b	movq	0x00075f46(%rip),%r15
000000000000e192	call	*%r15
000000000000e195	movq	%rax,%r14
000000000000e198	movq	0x000979c9(%rip),%rsi
000000000000e19f	movq	%rbx,%rdi
000000000000e1a2	call	*%r15
000000000000e1a5	movq	0x00096d1c(%rip),%rsi
000000000000e1ac	movq	%rax,%rdi
000000000000e1af	call	*%r15
000000000000e1b2	cmpq	%r14,%rax
000000000000e1b5	jne	0x0000e1c2
000000000000e1b7	addq	$0x08,%rsp
000000000000e1bb	popq	%rbx
000000000000e1bc	popq	%r14
000000000000e1be	popq	%r15
000000000000e1c0	popq	%rbp
000000000000e1c1	ret
000000000000e1c2	movq	0x0009799f(%rip),%rsi
000000000000e1c9	movq	%rbx,%rdi
000000000000e1cc	call	*0x00075f06(%rip)
000000000000e1d2	movq	0x00099367(%rip),%rsi
000000000000e1d9	movq	%rax,%rdi
000000000000e1dc	movq	%r14,%rdx
000000000000e1df	movq	0x00075ef2(%rip),%rax
000000000000e1e6	addq	$0x08,%rsp
000000000000e1ea	popq	%rbx
000000000000e1eb	popq	%r14
000000000000e1ed	popq	%r15
000000000000e1ef	popq	%rbp
000000000000e1f0	jmp	*%rax
-[DBGGDBProcess updateThreads]:
000000000000e1f2	pushq	%rbp
000000000000e1f3	movq	%rsp,%rbp
000000000000e1f6	pushq	%r15
000000000000e1f8	pushq	%r14
000000000000e1fa	pushq	%r13
000000000000e1fc	pushq	%r12
000000000000e1fe	pushq	%rbx
000000000000e1ff	subq	$0x48,%rsp
000000000000e203	movq	%rdi,%rbx
000000000000e206	movq	0x000a1423(%rip),%rax
000000000000e20d	movq	(%rbx,%rax),%rdi
000000000000e211	movq	0x00096eb8(%rip),%rsi
000000000000e218	call	*0x00075eba(%rip)
000000000000e21e	testb	%al,%al
000000000000e220	jne	0x0000e4f0
000000000000e226	movq	0x00099c93(%rip),%rsi
000000000000e22d	movq	0x00075ea4(%rip),%r14
000000000000e234	movq	%rbx,%rdi
000000000000e237	call	*%r14
000000000000e23a	movq	0x00097ec7(%rip),%rsi
000000000000e241	movq	%rax,%rdi
000000000000e244	call	*%r14
000000000000e247	movq	%rax,%r15
000000000000e24a	movq	%r15,0xa8(%rbp)
000000000000e24e	movq	0x00099c6b(%rip),%rsi
000000000000e255	movq	%rbx,%rdi
000000000000e258	call	*%r14
000000000000e25b	movq	0x00096c66(%rip),%rsi
000000000000e262	movq	%rax,%rdi
000000000000e265	call	*%r14
000000000000e268	movq	%rax,0xa0(%rbp)
000000000000e26c	movq	0x000971bd(%rip),%rsi
000000000000e273	movq	0x0009a1e6(%rip),%rdi
000000000000e27a	call	*%r14
000000000000e27d	movq	%rax,0xb0(%rbp)
000000000000e281	leaq	0x0009a088(%rip),%r14
000000000000e288	movq	0x000a13a9(%rip),%rax
000000000000e28f	movq	(%rbx,%rax),%rdi
000000000000e293	movq	%rbx,0xd0(%rbp)
000000000000e297	movq	%r14,%rsi
000000000000e29a	call	*0x0009a070(%rip)
000000000000e2a0	movq	%rax,0xc8(%rbp)
000000000000e2a4	movq	%r15,%rdi
000000000000e2a7	movq	%r14,%rsi
000000000000e2aa	call	*0x0009a060(%rip)
000000000000e2b0	movq	%rax,0x98(%rbp)
000000000000e2b4	xorl	%r15d,%r15d
000000000000e2b7	testq	%rax,%rax
000000000000e2ba	je	0x0000e436
000000000000e2c0	xorl	%eax,%eax
000000000000e2c2	movq	0x00075e0f(%rip),%r14
000000000000e2c9	xorl	%r12d,%r12d
000000000000e2cc	xorl	%r15d,%r15d
000000000000e2cf	movq	%rax,0xb8(%rbp)
000000000000e2d3	movq	%r15,0xc0(%rbp)
000000000000e2d7	movq	0xa8(%rbp),%rdi
000000000000e2db	leaq	0x0009a03e(%rip),%rsi
000000000000e2e2	movq	%rax,%rdx
000000000000e2e5	call	*0x0009a035(%rip)
000000000000e2eb	movq	%rax,%r15
000000000000e2ee	movq	%r15,%rdi
000000000000e2f1	movq	0x00096df8(%rip),%rsi
000000000000e2f8	call	*0x00075dda(%rip)
000000000000e2fe	movq	%rax,%r13
000000000000e301	jmp	0x0000e30b
000000000000e303	cmpq	%rax,%r13
000000000000e306	ja	0x0000e35a
000000000000e308	incq	%r12
000000000000e30b	cmpq	0xc8(%rbp),%r12
000000000000e30f	jae	0x0000e35a
000000000000e311	movq	0xd0(%rbp),%rax
000000000000e315	movq	0x000a131c(%rip),%rcx
000000000000e31c	movq	(%rax,%rcx),%rdi
000000000000e320	leaq	0x00099ff9(%rip),%rsi
000000000000e327	movq	%r12,%rdx
000000000000e32a	call	*0x00099ff0(%rip)
000000000000e330	movq	%rax,%rbx
000000000000e333	movq	%rbx,%rdi
000000000000e336	movq	0x00096ffb(%rip),%rsi
000000000000e33d	call	*%r14
000000000000e340	movq	%rax,%rdi
000000000000e343	movq	0x0009922e(%rip),%rsi
000000000000e34a	call	*%r14
000000000000e34d	cmpq	%r13,%rax
000000000000e350	jne	0x0000e303
000000000000e352	incq	%r12
000000000000e355	testq	%rbx,%rbx
000000000000e358	jne	0x0000e3a1
000000000000e35a	movq	0x0009a937(%rip),%rdi
000000000000e361	leaq	0x00099f78(%rip),%rsi
000000000000e368	call	*0x00099f72(%rip)
000000000000e36e	movq	%rax,%rbx
000000000000e371	movq	0x0009a378(%rip),%rdi
000000000000e378	movq	0x00098989(%rip),%rsi
000000000000e37f	movq	%r13,%rdx
000000000000e382	call	*%r14
000000000000e385	movq	%rbx,%rdi
000000000000e388	movq	0x00099b39(%rip),%rsi
000000000000e38f	movq	0xd0(%rbp),%rdx
000000000000e393	movq	%rax,%rcx
000000000000e396	movq	%r15,%r8
000000000000e399	call	*%r14
000000000000e39c	movq	%rax,%rbx
000000000000e39f	jmp	0x0000e3c0
000000000000e3a1	movq	%rbx,%rdi
000000000000e3a4	movq	0x00099b25(%rip),%rsi
000000000000e3ab	movq	%r15,%rdx
000000000000e3ae	call	*%r14
000000000000e3b1	movq	%rbx,%rdi
000000000000e3b4	movq	0x00099b1d(%rip),%rsi
000000000000e3bb	xorl	%edx,%edx
000000000000e3bd	call	*%r14
000000000000e3c0	movq	%r15,%rdi
000000000000e3c3	movq	0x000968d6(%rip),%rsi
000000000000e3ca	call	*%r14
000000000000e3cd	movq	%rbx,%rdi
000000000000e3d0	movq	0x00099b09(%rip),%rsi
000000000000e3d7	movq	%rax,%rdx
000000000000e3da	call	*%r14
000000000000e3dd	movq	%r15,%rdi
000000000000e3e0	movq	0x00098ca1(%rip),%rsi
000000000000e3e7	call	*%r14
000000000000e3ea	movq	%rbx,%rdi
000000000000e3ed	movq	0x00098384(%rip),%rsi
000000000000e3f4	movq	%rax,%rdx
000000000000e3f7	call	*%r14
000000000000e3fa	movq	0xb0(%rbp),%rdi
000000000000e3fe	leaq	0x00099efb(%rip),%rsi
000000000000e405	movq	%rbx,%rdx
000000000000e408	call	*0x00099ef2(%rip)
000000000000e40e	cmpq	%r15,0xa0(%rbp)
000000000000e412	sete	%al
000000000000e415	movq	0xc0(%rbp),%r15
000000000000e419	testq	%r15,%r15
000000000000e41c	sete	%cl
000000000000e41f	testb	%al,%cl
000000000000e421	cmovneq	%rbx,%r15
000000000000e425	movq	0xb8(%rbp),%rax
000000000000e429	incq	%rax
000000000000e42c	cmpq	0x98(%rbp),%rax
000000000000e430	jne	0x0000e2cf
000000000000e436	leaq	0x00099ed3(%rip),%rsi
000000000000e43d	movq	0xb0(%rbp),%r14
000000000000e441	movq	%r14,%rdi
000000000000e444	call	*0x00099ec6(%rip)
000000000000e44a	testq	%rax,%rax
000000000000e44d	movq	0xd0(%rbp),%rbx
000000000000e451	je	0x0000e465
000000000000e453	movq	0x000a11de(%rip),%rdx
000000000000e45a	movq	%r14,%rdi
000000000000e45d	movq	%rbx,%rsi
000000000000e460	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000000e465	movq	0x00097c9c(%rip),%rsi
000000000000e46c	movq	%rbx,%rdi
000000000000e46f	call	*0x00075c63(%rip)
000000000000e475	leaq	0x00099f14(%rip),%rsi
000000000000e47c	movq	%r14,%rdi
000000000000e47f	movq	%rax,%rdx
000000000000e482	call	*0x00099f08(%rip)
000000000000e488	testb	%al,%al
000000000000e48a	jne	0x0000e49f
000000000000e48c	movq	0x000995bd(%rip),%rsi
000000000000e493	movq	%rbx,%rdi
000000000000e496	movq	%r14,%rdx
000000000000e499	call	*0x00075c39(%rip)
000000000000e49f	movq	0x00096a22(%rip),%rsi
000000000000e4a6	movq	%rbx,%rdi
000000000000e4a9	call	*0x00075c29(%rip)
000000000000e4af	cmpq	%r15,%rax
000000000000e4b2	je	0x0000e4c7
000000000000e4b4	movq	0x00099085(%rip),%rsi
000000000000e4bb	movq	%rbx,%rdi
000000000000e4be	movq	%r15,%rdx
000000000000e4c1	call	*0x00075c11(%rip)
000000000000e4c7	testq	%r15,%r15
000000000000e4ca	jne	0x0000e531
000000000000e4cc	movq	0x000969fd(%rip),%rsi
000000000000e4d3	movq	%rbx,%rdi
000000000000e4d6	call	*0x00075bfc(%rip)
000000000000e4dc	testq	%rax,%rax
000000000000e4df	jne	0x0000e54f
000000000000e4e1	addq	$0x48,%rsp
000000000000e4e5	popq	%rbx
000000000000e4e6	popq	%r12
000000000000e4e8	popq	%r13
000000000000e4ea	popq	%r14
000000000000e4ec	popq	%r15
000000000000e4ee	popq	%rbp
000000000000e4ef	ret
000000000000e4f0	movq	0x00099239(%rip),%rsi
000000000000e4f7	movq	%rbx,%rdi
000000000000e4fa	call	*0x00075bd8(%rip)
000000000000e500	movq	0x00096901(%rip),%rsi
000000000000e507	movq	%rax,%rdi
000000000000e50a	call	*0x00075bc8(%rip)
000000000000e510	movq	0x00096ab9(%rip),%rsi
000000000000e517	movq	%rax,%rdi
000000000000e51a	movq	0x00075bb7(%rip),%rax
000000000000e521	addq	$0x48,%rsp
000000000000e525	popq	%rbx
000000000000e526	popq	%r12
000000000000e528	popq	%r13
000000000000e52a	popq	%r14
000000000000e52c	popq	%r15
000000000000e52e	popq	%rbp
000000000000e52f	jmp	*%rax
000000000000e531	movq	0x00097738(%rip),%rsi
000000000000e538	movq	%r15,%rdi
000000000000e53b	addq	$0x48,%rsp
000000000000e53f	popq	%rbx
000000000000e540	popq	%r12
000000000000e542	popq	%r13
000000000000e544	popq	%r14
000000000000e546	popq	%r15
000000000000e548	popq	%rbp
000000000000e549	jmp	*0x00075b89(%rip)
000000000000e54f	movq	0x0009770a(%rip),%rsi
000000000000e556	movq	%rbx,%rdi
000000000000e559	xorl	%edx,%edx
000000000000e55b	addq	$0x48,%rsp
000000000000e55f	popq	%rbx
000000000000e560	popq	%r12
000000000000e562	popq	%r13
000000000000e564	popq	%r14
000000000000e566	popq	%r15
000000000000e568	popq	%rbp
000000000000e569	jmp	*0x00075b69(%rip)
000000000000e56f	nop
000000000000e570	nop
000000000000e571	nop
-[PBXLSProcess currentThread]:
000000000000e572	pushq	%rbp
000000000000e573	movq	%rsp,%rbp
000000000000e576	movq	0x000a0da3(%rip),%rax
000000000000e57d	movq	(%rdi,%rax),%rax
000000000000e581	popq	%rbp
000000000000e582	ret
000000000000e583	nop
000000000000e584	nop
000000000000e585	nop
-[PBXLSProcess threadsWillChange]:
000000000000e586	pushq	%rbp
000000000000e587	movq	%rsp,%rbp
000000000000e58a	movq	0x0009705f(%rip),%rsi
000000000000e591	leaq	0x000a4d20(%rip),%rdx
000000000000e598	popq	%rbp
000000000000e599	jmp	*0x00075b39(%rip)
-[PBXLSProcess threadsDidChange]:
000000000000e59f	pushq	%rbp
000000000000e5a0	movq	%rsp,%rbp
000000000000e5a3	movq	0x0009704e(%rip),%rsi
000000000000e5aa	leaq	0x000a4d07(%rip),%rdx
000000000000e5b1	popq	%rbp
000000000000e5b2	jmp	*0x00075b20(%rip)
-[PBXLSDebuggerAdaptor setProcessIsRunning]:
000000000000e5b8	pushq	%rbp
000000000000e5b9	movq	%rsp,%rbp
000000000000e5bc	pushq	%rbx
000000000000e5bd	pushq	%rax
000000000000e5be	movq	%rdi,%rbx
000000000000e5c1	movq	0x00096828(%rip),%rsi
000000000000e5c8	call	*0x00075b0a(%rip)
000000000000e5ce	movq	0x000991b3(%rip),%rsi
000000000000e5d5	movq	%rax,%rdi
000000000000e5d8	movq	%rbx,%rdx
000000000000e5db	movq	0x00075af6(%rip),%rax
000000000000e5e2	addq	$0x08,%rsp
000000000000e5e6	popq	%rbx
000000000000e5e7	popq	%rbp
000000000000e5e8	jmp	*%rax
000000000000e5ea	nop
000000000000e5eb	nop
000000000000e5ec	nop
000000000000e5ed	nop
000000000000e5ee	nop
000000000000e5ef	nop
000000000000e5f0	nop
000000000000e5f1	nop
000000000000e5f2	nop
-[PBXLSProcess debuggerSetIsRunning:]:
000000000000e5f3	pushq	%rbp
000000000000e5f4	movq	%rsp,%rbp
000000000000e5f7	movq	0x000975ba(%rip),%rsi
000000000000e5fe	movl	$0x00000001,%edx
000000000000e603	popq	%rbp
000000000000e604	jmp	*0x00075ace(%rip)
-[PBXGDB_MIGetPIDCommand GDBCommandString]:
000000000000e60a	pushq	%rbp
000000000000e60b	movq	%rsp,%rbp
000000000000e60e	leaq	0x000a4b83(%rip),%rax
000000000000e615	popq	%rbp
000000000000e616	ret
-[PBXGDB_MIGetPIDCommand didFinishWithResultList:]:
000000000000e617	pushq	%rbp
000000000000e618	movq	%rsp,%rbp
000000000000e61b	pushq	%r15
000000000000e61d	pushq	%r14
000000000000e61f	pushq	%rbx
000000000000e620	subq	$0x18,%rsp
000000000000e624	movq	%rdx,%r14
000000000000e627	movq	%rdi,%rbx
000000000000e62a	movq	0x000964a7(%rip),%rsi
000000000000e631	leaq	0x000a4b40(%rip),%rdx
000000000000e638	movq	%r14,%rdi
000000000000e63b	call	*0x00075a97(%rip)
000000000000e641	testq	%rax,%rax
000000000000e644	je	0x0000e671
000000000000e646	movq	0x000964bb(%rip),%rsi
000000000000e64d	movq	0x00075a84(%rip),%r15
000000000000e654	movq	%rax,%rdi
000000000000e657	call	*%r15
000000000000e65a	movq	0x00096c7f(%rip),%rsi
000000000000e661	movq	%rax,%rdi
000000000000e664	call	*%r15
000000000000e667	movq	0x000a0812(%rip),%rcx
000000000000e66e	movl	%eax,(%rbx,%rcx)
000000000000e671	movq	%rbx,0xd8(%rbp)
000000000000e675	movq	0x0009a87c(%rip),%rax
000000000000e67c	movq	%rax,0xe0(%rbp)
000000000000e680	movq	0x00097b79(%rip),%rsi
000000000000e687	leaq	0xd8(%rbp),%rdi
000000000000e68b	movq	%r14,%rdx
000000000000e68e	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000000e693	addq	$0x18,%rsp
000000000000e697	popq	%rbx
000000000000e698	popq	%r14
000000000000e69a	popq	%r15
000000000000e69c	popq	%rbp
000000000000e69d	ret
-[PBXGDB_RunControlSequence didFinish:]:
000000000000e69e	pushq	%rbp
000000000000e69f	movq	%rsp,%rbp
000000000000e6a2	pushq	%r15
000000000000e6a4	pushq	%r14
000000000000e6a6	pushq	%r12
000000000000e6a8	pushq	%rbx
000000000000e6a9	subq	$0x10,%rsp
000000000000e6ad	movq	%rdx,%r14
000000000000e6b0	movq	%rdi,%rbx
000000000000e6b3	movq	0x000963fe(%rip),%rsi
000000000000e6ba	movq	0x00075a17(%rip),%r12
000000000000e6c1	call	*%r12
000000000000e6c4	movq	%rax,%r15
000000000000e6c7	movq	0x0009746a(%rip),%rsi
000000000000e6ce	movq	%r14,%rdi
000000000000e6d1	call	*%r12
000000000000e6d4	movq	0x0009696d(%rip),%rsi
000000000000e6db	movq	%r15,%rdi
000000000000e6de	movl	%eax,%edx
000000000000e6e0	call	*%r12
000000000000e6e3	leaq	0xd0(%rbp),%rdi
000000000000e6e7	movq	%rbx,0xd0(%rbp)
000000000000e6eb	movq	0x0009a666(%rip),%rax
000000000000e6f2	movq	%rax,0xd8(%rbp)
000000000000e6f6	movq	0x0009643b(%rip),%rsi
000000000000e6fd	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000000e702	addq	$0x10,%rsp
000000000000e706	popq	%rbx
000000000000e707	popq	%r12
000000000000e709	popq	%r14
000000000000e70b	popq	%r15
000000000000e70d	popq	%rbp
000000000000e70e	ret
-[PBXGDB_MIGetPIDCommand pid]:
000000000000e70f	pushq	%rbp
000000000000e710	movq	%rsp,%rbp
000000000000e713	movq	0x000a0766(%rip),%rax
000000000000e71a	movl	(%rdi,%rax),%eax
000000000000e71d	popq	%rbp
000000000000e71e	ret
000000000000e71f	nop
000000000000e720	nop
-[PBXLSDebuggingSession observeValueForKeyPath:ofObject:change:context:]:
000000000000e721	pushq	%rbp
000000000000e722	movq	%rsp,%rbp
000000000000e725	pushq	%r15
000000000000e727	pushq	%r14
000000000000e729	pushq	%r13
000000000000e72b	pushq	%r12
000000000000e72d	pushq	%rbx
000000000000e72e	subq	$0x000001e8,%rsp
000000000000e735	movq	%r9,%rbx
000000000000e738	movq	%r8,0xfffffe18(%rbp)
000000000000e73f	movq	%rcx,%r14
000000000000e742	movq	%rdx,%r13
000000000000e745	movq	0x00075954(%rip),%rax
000000000000e74c	movq	(%rax),%rax
000000000000e74f	movq	%rax,0xd0(%rbp)
000000000000e753	movq	%rdi,0xc8(%rbp)
000000000000e757	movq	%rsi,0xc0(%rbp)
000000000000e75b	movq	0x00098fce(%rip),%rsi
000000000000e762	movq	0x0007596f(%rip),%r15
000000000000e769	call	*%r15
000000000000e76c	movq	0x0009906d(%rip),%rsi
000000000000e773	movq	%rax,%rdi
000000000000e776	call	*%r15
000000000000e779	movq	%rax,%r15
000000000000e77c	leaq	0x00099b8d(%rip),%rsi
000000000000e783	movq	%r15,%rdi
000000000000e786	call	*0x00099b84(%rip)
000000000000e78c	testq	%rax,%rax
000000000000e78f	je	0x0000f6b7
000000000000e795	leaq	0x00099b74(%rip),%rsi
000000000000e79c	movq	%r15,%rdi
000000000000e79f	call	*0x00099b6b(%rip)
000000000000e7a5	cmpq	$0x01,%rax
000000000000e7a9	je	0x0000e7ec
000000000000e7ab	leaq	0x000a1086(%rip),%rax
000000000000e7b2	leaq	0x0005532c(%rip),%rcx
000000000000e7b9	movq	%rcx,0x08(%rsp)
000000000000e7be	movq	%rax,(%rsp)
000000000000e7c2	leaq	0xc8(%rbp),%rdi
000000000000e7c6	leaq	0xc0(%rbp),%rsi
000000000000e7ca	leaq	0x00055237(%rip),%rdx
000000000000e7d1	leaq	0x00055279(%rip),%rcx
000000000000e7d8	leaq	0x000a7379(%rip),%r9
000000000000e7df	movl	$0x0000010b,%r8d
000000000000e7e5	xorb	%al,%al
000000000000e7e7	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000000e7ec	movq	0x000980ad(%rip),%rsi
000000000000e7f3	movq	%r15,%rdi
000000000000e7f6	call	*0x000758dc(%rip)
000000000000e7fc	leaq	0x000a855d(%rip),%rcx
000000000000e803	cmpq	%rcx,%rbx
000000000000e806	jne	0x0000eaf2
000000000000e80c	movq	%rax,0xfffffe28(%rbp)
000000000000e813	movq	0x000a0cb6(%rip),%rax
000000000000e81a	movq	0xc8(%rbp),%rcx
000000000000e81e	cmpb	$0x00,(%rcx,%rax)
000000000000e822	je	0x0000f6b7
000000000000e828	movq	0x00075809(%rip),%rax
000000000000e82f	movq	(%rax),%rdx
000000000000e832	leaq	0x00099b17(%rip),%rsi
000000000000e839	movq	0xfffffe18(%rbp),%rdi
000000000000e840	call	*0x00099b0a(%rip)
000000000000e846	movq	%rax,%rbx
000000000000e849	movq	%rbx,0xfffffe20(%rbp)
000000000000e850	movq	0x00099e09(%rip),%rdi
000000000000e857	leaq	0x00099ad2(%rip),%rsi
000000000000e85e	call	*0x00099acc(%rip)
000000000000e864	leaq	0x00099ad5(%rip),%rsi
000000000000e86b	movq	%rbx,%rdi
000000000000e86e	movq	%rax,%rdx
000000000000e871	call	*0x00099ac9(%rip)
000000000000e877	testb	%al,%al
000000000000e879	je	0x0000e94f
000000000000e87f	xorps	%xmm0,%xmm0
000000000000e882	movaps	%xmm0,0xb0(%rbp)
000000000000e886	movaps	%xmm0,0xa0(%rbp)
000000000000e88a	movaps	%xmm0,0x90(%rbp)
000000000000e88e	movaps	%xmm0,0x80(%rbp)
000000000000e892	leaq	0x00099ae7(%rip),%rsi
000000000000e899	leaq	0x80(%rbp),%rdx
000000000000e89d	leaq	0xffffff00(%rbp),%rcx
000000000000e8a4	movq	0xfffffe20(%rbp),%rdi
000000000000e8ab	movl	$0x00000010,%r8d
000000000000e8b1	call	*0x00099ac9(%rip)
000000000000e8b7	movq	%rax,%rbx
000000000000e8ba	testq	%rbx,%rbx
000000000000e8bd	je	0x0000e94f
000000000000e8c3	movq	0x90(%rbp),%rax
000000000000e8c7	movq	(%rax),%r14
000000000000e8ca	movq	0x00075807(%rip),%r12
000000000000e8d1	xorl	%r13d,%r13d
000000000000e8d4	movq	0x90(%rbp),%rax
000000000000e8d8	cmpq	%r14,(%rax)
000000000000e8db	je	0x0000e8e9
000000000000e8dd	movq	0xfffffe20(%rbp),%rdi
000000000000e8e4	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
000000000000e8e9	movq	0x88(%rbp),%rax
000000000000e8ed	movq	(%rax,%r13,8),%r15
000000000000e8f1	movq	0xc8(%rbp),%rdi
000000000000e8f5	movq	0x00098f54(%rip),%rsi
000000000000e8fc	movq	%r15,%rdx
000000000000e8ff	movq	0xfffffe28(%rbp),%rcx
000000000000e906	call	*%r12
000000000000e909	movq	0xc8(%rbp),%rdi
000000000000e90d	movq	0x00098eb4(%rip),%rsi
000000000000e914	movq	%r15,%rdx
000000000000e917	call	*%r12
000000000000e91a	incq	%r13
000000000000e91d	cmpq	%rbx,%r13
000000000000e920	jb	0x0000e8d4
000000000000e922	movq	0xfffffe20(%rbp),%rdi
000000000000e929	leaq	0x00099a50(%rip),%rsi
000000000000e930	leaq	0x80(%rbp),%rdx
000000000000e934	leaq	0xffffff00(%rbp),%rcx
000000000000e93b	movl	$0x00000010,%r8d
000000000000e941	call	*0x00099a39(%rip)
000000000000e947	movq	%rax,%rbx
000000000000e94a	testq	%rbx,%rbx
000000000000e94d	jne	0x0000e8d1
000000000000e94f	movq	0x000756d2(%rip),%rax
000000000000e956	movq	(%rax),%rdx
000000000000e959	leaq	0x000999f0(%rip),%rsi
000000000000e960	movq	0xfffffe18(%rbp),%rdi
000000000000e967	call	*0x000999e3(%rip)
000000000000e96d	movq	%rax,%rbx
000000000000e970	movq	%rbx,0xfffffe20(%rbp)
000000000000e977	movq	0x00099ce2(%rip),%rdi
000000000000e97e	leaq	0x000999ab(%rip),%rsi
000000000000e985	call	*0x000999a5(%rip)
000000000000e98b	leaq	0x000999ae(%rip),%rsi
000000000000e992	movq	%rbx,%rdi
000000000000e995	movq	%rax,%rdx
000000000000e998	call	*0x000999a2(%rip)
000000000000e99e	testb	%al,%al
000000000000e9a0	je	0x0000f6b7
000000000000e9a6	xorps	%xmm0,%xmm0
000000000000e9a9	movaps	%xmm0,0xfffffef0(%rbp)
000000000000e9b0	movaps	%xmm0,0xfffffee0(%rbp)
000000000000e9b7	movaps	%xmm0,0xfffffed0(%rbp)
000000000000e9be	movaps	%xmm0,0xfffffec0(%rbp)
000000000000e9c5	leaq	0x000999b4(%rip),%rsi
000000000000e9cc	leaq	0xfffffec0(%rbp),%rdx
000000000000e9d3	leaq	0xfffffe40(%rbp),%rcx
000000000000e9da	movq	0xfffffe20(%rbp),%rdi
000000000000e9e1	movl	$0x00000010,%r8d
000000000000e9e7	call	*0x00099993(%rip)
000000000000e9ed	movq	%rax,%rbx
000000000000e9f0	testq	%rbx,%rbx
000000000000e9f3	je	0x0000f6b7
000000000000e9f9	movq	0xfffffed0(%rbp),%rax
000000000000ea00	movq	(%rax),%rax
000000000000ea03	movq	%rax,0xfffffe18(%rbp)
000000000000ea0a	movq	0x000962df(%rip),%r15
000000000000ea11	movq	0x000756c0(%rip),%r13
000000000000ea18	xorl	%r14d,%r14d
000000000000ea1b	movq	0xfffffed0(%rbp),%rax
000000000000ea22	movq	0xfffffe18(%rbp),%rcx
000000000000ea29	cmpq	%rcx,(%rax)
000000000000ea2c	je	0x0000ea3a
000000000000ea2e	movq	0xfffffe20(%rbp),%rdi
000000000000ea35	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
000000000000ea3a	movq	0xfffffec8(%rbp),%rax
000000000000ea41	movq	(%rax,%r14,8),%r12
000000000000ea45	movq	0xc8(%rbp),%rdi
000000000000ea49	movq	%r15,%rsi
000000000000ea4c	call	*%r13
000000000000ea4f	movq	%rax,%rdi
000000000000ea52	movq	0x00098dff(%rip),%rsi
000000000000ea59	movq	%r12,%rdx
000000000000ea5c	call	*%r13
000000000000ea5f	testb	%al,%al
000000000000ea61	jne	0x0000ea99
000000000000ea63	movq	0xc8(%rbp),%rdi
000000000000ea67	movq	%r15,%rsi
000000000000ea6a	call	*%r13
000000000000ea6d	movq	%rax,%rdi
000000000000ea70	movq	0x00096541(%rip),%rsi
000000000000ea77	call	*%r13
000000000000ea7a	testb	%al,%al
000000000000ea7c	je	0x0000ea99
000000000000ea7e	movq	0xc8(%rbp),%rdi
000000000000ea82	movq	0x00098d5f(%rip),%rsi
000000000000ea89	movq	%r12,%rdx
000000000000ea8c	movq	0xfffffe28(%rbp),%rcx
000000000000ea93	call	*0x0007563f(%rip)
000000000000ea99	movq	0xc8(%rbp),%rdi
000000000000ea9d	movq	0x00098d5c(%rip),%rsi
000000000000eaa4	movq	%r12,%rdx
000000000000eaa7	call	*0x0007562b(%rip)
000000000000eaad	incq	%r14
000000000000eab0	cmpq	%rbx,%r14
000000000000eab3	jb	0x0000ea1b
000000000000eab9	movq	0xfffffe20(%rbp),%rdi
000000000000eac0	leaq	0x000998b9(%rip),%rsi
000000000000eac7	leaq	0xfffffec0(%rbp),%rdx
000000000000eace	leaq	0xfffffe40(%rbp),%rcx
000000000000ead5	movl	$0x00000010,%r8d
000000000000eadb	call	*0x0009989f(%rip)
000000000000eae1	movq	%rax,%rbx
000000000000eae4	testq	%rbx,%rbx
000000000000eae7	jne	0x0000ea18
000000000000eaed	jmp	0x0000f6b7
000000000000eaf2	leaq	0x000a825f(%rip),%rcx
000000000000eaf9	cmpq	%rcx,%rbx
000000000000eafc	jne	0x0000ebde
000000000000eb02	movq	0x000a09c7(%rip),%rax
000000000000eb09	movq	0xc8(%rbp),%rcx
000000000000eb0d	cmpb	$0x00,(%rcx,%rax)
000000000000eb11	je	0x0000f6b7
000000000000eb17	movq	0x0007550a(%rip),%rax
000000000000eb1e	movq	(%rax),%rdx
000000000000eb21	leaq	0x00099828(%rip),%rsi
000000000000eb28	movq	0xfffffe18(%rbp),%rdi
000000000000eb2f	call	*0x0009981b(%rip)
000000000000eb35	movq	%rax,%rbx
000000000000eb38	movq	0x00099bb1(%rip),%rdi
000000000000eb3f	leaq	0x000997ea(%rip),%rsi
000000000000eb46	call	*0x000997e4(%rip)
000000000000eb4c	leaq	0x000997ed(%rip),%rsi
000000000000eb53	movq	%rbx,%rdi
000000000000eb56	movq	%rax,%rdx
000000000000eb59	call	*0x000997e1(%rip)
000000000000eb5f	testb	%al,%al
000000000000eb61	je	0x0000f6b7
000000000000eb67	movq	0x00096862(%rip),%rsi
000000000000eb6e	movq	%rbx,%rdi
000000000000eb71	call	*0x00075561(%rip)
000000000000eb77	movq	0xc8(%rbp),%rdi
000000000000eb7b	testb	%al,%al
000000000000eb7d	je	0x0000ebb1
000000000000eb7f	movq	0x00098cda(%rip),%rsi
000000000000eb86	movq	0x0007554b(%rip),%rbx
000000000000eb8d	call	*%rbx
000000000000eb8f	movq	0x00098b9a(%rip),%rsi
000000000000eb96	movq	0xc8(%rbp),%rdi
000000000000eb9a	call	*%rbx
000000000000eb9c	movq	0x00095f15(%rip),%rsi
000000000000eba3	movq	%rax,%rdi
000000000000eba6	call	*%rbx
000000000000eba8	movq	0x00098cb9(%rip),%rsi
000000000000ebaf	jmp	0x0000ebd4
000000000000ebb1	movq	0x00098b78(%rip),%rsi
000000000000ebb8	movq	0x00075519(%rip),%rbx
000000000000ebbf	call	*%rbx
000000000000ebc1	movq	0x00095ef0(%rip),%rsi
000000000000ebc8	movq	%rax,%rdi
000000000000ebcb	call	*%rbx
000000000000ebcd	movq	0x00098c9c(%rip),%rsi
000000000000ebd4	movq	%rax,%rdi
000000000000ebd7	call	*%rbx
000000000000ebd9	jmp	0x0000f6b7
000000000000ebde	movq	%rax,%r12
000000000000ebe1	leaq	0x000a8180(%rip),%rax
000000000000ebe8	cmpq	%rax,%rbx
000000000000ebeb	jne	0x0000ed6c
000000000000ebf1	movq	0x000a08d8(%rip),%rax
000000000000ebf8	movq	0xc8(%rbp),%rcx
000000000000ebfc	cmpb	$0x00,(%rcx,%rax)
000000000000ec00	je	0x0000f6b7
000000000000ec06	testq	%r14,%r14
000000000000ec09	jne	0x0000ec7c
000000000000ec0b	movq	0x00099d76(%rip),%rdi
000000000000ec12	leaq	0x00099717(%rip),%rbx
000000000000ec19	movq	%rbx,%rsi
000000000000ec1c	call	*0x0009970e(%rip)
000000000000ec22	movq	%rax,%rdi
000000000000ec25	movq	%rbx,%rsi
000000000000ec28	call	*0x00099702(%rip)
000000000000ec2e	movq	%rax,%rdi
000000000000ec31	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000000ec36	leaq	0xc8(%rbp),%rdi
000000000000ec3a	leaq	0xc0(%rbp),%rsi
000000000000ec3e	leaq	0x00054dc3(%rip),%rdx
000000000000ec45	leaq	0x00054e05(%rip),%rcx
000000000000ec4c	leaq	0x000a0d65(%rip),%r9
000000000000ec53	leaq	0x00054ea9(%rip),%r8
000000000000ec5a	leaq	0x00054ea9(%rip),%rbx
000000000000ec61	movq	%rbx,0x18(%rsp)
000000000000ec66	leaq	0x000a0bcb(%rip),%rbx
000000000000ec6d	movq	%rbx,0x10(%rsp)
000000000000ec72	movq	%rax,0x08(%rsp)
000000000000ec77	jmp	0x0000ed3e
000000000000ec7c	movq	0x00099d05(%rip),%rdi
000000000000ec83	leaq	0x000996a6(%rip),%rbx
000000000000ec8a	movq	%rbx,%rsi
000000000000ec8d	call	*0x0009969d(%rip)
000000000000ec93	movq	%rax,%rdi
000000000000ec96	movq	%rbx,%rsi
000000000000ec99	call	*0x00099691(%rip)
000000000000ec9f	leaq	0x0009969a(%rip),%rsi
000000000000eca6	movq	%r14,%rdi
000000000000eca9	movq	%rax,%rdx
000000000000ecac	call	*0x0009968e(%rip)
000000000000ecb2	testb	%al,%al
000000000000ecb4	jne	0x0000ed4f
000000000000ecba	movq	0x00099cc7(%rip),%rdi
000000000000ecc1	leaq	0x00099668(%rip),%rbx
000000000000ecc8	movq	%rbx,%rsi
000000000000eccb	call	*0x0009965f(%rip)
000000000000ecd1	movq	%rax,%rdi
000000000000ecd4	movq	%rbx,%rsi
000000000000ecd7	call	*0x00099653(%rip)
000000000000ecdd	movq	%rax,%rdi
000000000000ece0	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000000ece5	movq	%rax,%r15
000000000000ece8	movq	0x00095f71(%rip),%rsi
000000000000ecef	movq	%r14,%rdi
000000000000ecf2	call	*0x000753e0(%rip)
000000000000ecf8	leaq	0x00054e1b(%rip),%r8
000000000000ecff	leaq	0xc8(%rbp),%rdi
000000000000ed03	leaq	0xc0(%rbp),%rsi
000000000000ed07	leaq	0x00054cfa(%rip),%rdx
000000000000ed0e	leaq	0x00054d3c(%rip),%rcx
000000000000ed15	leaq	0x000a0cbc(%rip),%r9
000000000000ed1c	movq	%r8,0x20(%rsp)
000000000000ed21	leaq	0x000a0b10(%rip),%rbx
000000000000ed28	movq	%rbx,0x18(%rsp)
000000000000ed2d	leaq	0x00054dcf(%rip),%r8
000000000000ed34	movq	%rax,0x10(%rsp)
000000000000ed39	movq	%r15,0x08(%rsp)
000000000000ed3e	movq	%r8,(%rsp)
000000000000ed42	movl	$0x00000138,%r8d
000000000000ed48	xorb	%al,%al
000000000000ed4a	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000000ed4f	movq	0x00098afa(%rip),%rsi
000000000000ed56	movq	0xc8(%rbp),%rdi
000000000000ed5a	movq	0x00075377(%rip),%r15
000000000000ed61	movq	%r14,%rdx
000000000000ed64	movq	%r12,%rbx
000000000000ed67	jmp	0x0000f47d
000000000000ed6c	leaq	0x000a7ffd(%rip),%rax
000000000000ed73	cmpq	%rax,%rbx
000000000000ed76	jne	0x0000ef87
000000000000ed7c	movq	0xc8(%rbp),%rdi
000000000000ed80	movq	0x000a0749(%rip),%rax
000000000000ed87	cmpb	$0x00,(%rdi,%rax)
000000000000ed8b	je	0x0000f6b7
000000000000ed91	movq	0x00095f58(%rip),%rsi
000000000000ed98	movq	0x00075339(%rip),%rbx
000000000000ed9f	call	*%rbx
000000000000eda1	movq	0x00096210(%rip),%rsi
000000000000eda8	movq	%rax,%rdi
000000000000edab	call	*%rbx
000000000000edad	testb	%al,%al
000000000000edaf	je	0x0000f6b7
000000000000edb5	testq	%r14,%r14
000000000000edb8	jne	0x0000ee2b
000000000000edba	movq	0x00099dc7(%rip),%rdi
000000000000edc1	leaq	0x00099568(%rip),%rbx
000000000000edc8	movq	%rbx,%rsi
000000000000edcb	call	*0x0009955f(%rip)
000000000000edd1	movq	%rax,%rdi
000000000000edd4	movq	%rbx,%rsi
000000000000edd7	call	*0x00099553(%rip)
000000000000eddd	movq	%rax,%rdi
000000000000ede0	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000000ede5	leaq	0xc8(%rbp),%rdi
000000000000ede9	leaq	0xc0(%rbp),%rsi
000000000000eded	leaq	0x00054c14(%rip),%rdx
000000000000edf4	leaq	0x00054c56(%rip),%rcx
000000000000edfb	leaq	0x000a0bb6(%rip),%r9
000000000000ee02	leaq	0x00054cfa(%rip),%r8
000000000000ee09	leaq	0x00054cfa(%rip),%rbx
000000000000ee10	movq	%rbx,0x18(%rsp)
000000000000ee15	leaq	0x000a0a1c(%rip),%rbx
000000000000ee1c	movq	%rbx,0x10(%rsp)
000000000000ee21	movq	%rax,0x08(%rsp)
000000000000ee26	jmp	0x0000eeed
000000000000ee2b	movq	0x00099d56(%rip),%rdi
000000000000ee32	leaq	0x000994f7(%rip),%rbx
000000000000ee39	movq	%rbx,%rsi
000000000000ee3c	call	*0x000994ee(%rip)
000000000000ee42	movq	%rax,%rdi
000000000000ee45	movq	%rbx,%rsi
000000000000ee48	call	*0x000994e2(%rip)
000000000000ee4e	leaq	0x000994eb(%rip),%rsi
000000000000ee55	movq	%r14,%rdi
000000000000ee58	movq	%rax,%rdx
000000000000ee5b	call	*0x000994df(%rip)
000000000000ee61	testb	%al,%al
000000000000ee63	jne	0x0000eefe
000000000000ee69	movq	0x00099d18(%rip),%rdi
000000000000ee70	leaq	0x000994b9(%rip),%rbx
000000000000ee77	movq	%rbx,%rsi
000000000000ee7a	call	*0x000994b0(%rip)
000000000000ee80	movq	%rax,%rdi
000000000000ee83	movq	%rbx,%rsi
000000000000ee86	call	*0x000994a4(%rip)
000000000000ee8c	movq	%rax,%rdi
000000000000ee8f	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000000ee94	movq	%rax,%r15
000000000000ee97	movq	0x00095dc2(%rip),%rsi
000000000000ee9e	movq	%r14,%rdi
000000000000eea1	call	*0x00075231(%rip)
000000000000eea7	leaq	0x00054cab(%rip),%r8
000000000000eeae	leaq	0xc8(%rbp),%rdi
000000000000eeb2	leaq	0xc0(%rbp),%rsi
000000000000eeb6	leaq	0x00054b4b(%rip),%rdx
000000000000eebd	leaq	0x00054b8d(%rip),%rcx
000000000000eec4	leaq	0x000a0b0d(%rip),%r9
000000000000eecb	movq	%r8,0x20(%rsp)
000000000000eed0	leaq	0x000a0961(%rip),%rbx
000000000000eed7	movq	%rbx,0x18(%rsp)
000000000000eedc	leaq	0x00054c20(%rip),%r8
000000000000eee3	movq	%rax,0x10(%rsp)
000000000000eee8	movq	%r15,0x08(%rsp)
000000000000eeed	movq	%r8,(%rsp)
000000000000eef1	movl	$0x00000143,%r8d
000000000000eef7	xorb	%al,%al
000000000000eef9	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000000eefe	movq	0x00099a23(%rip),%rdi
000000000000ef05	leaq	0x00099424(%rip),%rsi
000000000000ef0c	call	*0x0009941e(%rip)
000000000000ef12	leaq	0x00099427(%rip),%rsi
000000000000ef19	movq	%r14,%rdi
000000000000ef1c	movq	%rax,%rdx
000000000000ef1f	call	*0x0009941b(%rip)
000000000000ef25	movb	%al,%bl
000000000000ef27	movq	0x00095dc2(%rip),%rsi
000000000000ef2e	movq	0xc8(%rbp),%rdi
000000000000ef32	call	*0x000751a0(%rip)
000000000000ef38	movq	%rax,%rdi
000000000000ef3b	testb	%bl,%bl
000000000000ef3d	je	0x0000ef48
000000000000ef3f	movq	0x00098932(%rip),%rsi
000000000000ef46	jmp	0x0000ef4f
000000000000ef48	movq	0x00098909(%rip),%rsi
000000000000ef4f	movq	%r14,%rdx
000000000000ef52	call	*0x00075180(%rip)
000000000000ef58	testb	%al,%al
000000000000ef5a	movq	%r12,%rcx
000000000000ef5d	je	0x0000ef6e
000000000000ef5f	movq	0x0009891a(%rip),%rsi
000000000000ef66	movq	%rcx,%rdi
000000000000ef69	jmp	0x0000f12a
000000000000ef6e	movq	0x00098873(%rip),%rsi
000000000000ef75	movq	0xc8(%rbp),%rdi
000000000000ef79	movq	%r14,%rdx
000000000000ef7c	call	*0x00075156(%rip)
000000000000ef82	jmp	0x0000f6b7
000000000000ef87	leaq	0x000a7dea(%rip),%rax
000000000000ef8e	cmpq	%rax,%rbx
000000000000ef91	jne	0x0000f138
000000000000ef97	movq	0x000a0532(%rip),%rax
000000000000ef9e	movq	0xc8(%rbp),%rcx
000000000000efa2	cmpb	$0x00,(%rcx,%rax)
000000000000efa6	je	0x0000f6b7
000000000000efac	testq	%r14,%r14
000000000000efaf	jne	0x0000f022
000000000000efb1	movq	0x00099bd0(%rip),%rdi
000000000000efb8	leaq	0x00099371(%rip),%rbx
000000000000efbf	movq	%rbx,%rsi
000000000000efc2	call	*0x00099368(%rip)
000000000000efc8	movq	%rax,%rdi
000000000000efcb	movq	%rbx,%rsi
000000000000efce	call	*0x0009935c(%rip)
000000000000efd4	movq	%rax,%rdi
000000000000efd7	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000000efdc	leaq	0xc8(%rbp),%rdi
000000000000efe0	leaq	0xc0(%rbp),%rsi
000000000000efe4	leaq	0x00054a1d(%rip),%rdx
000000000000efeb	leaq	0x00054a5f(%rip),%rcx
000000000000eff2	leaq	0x000a09bf(%rip),%r9
000000000000eff9	leaq	0x00054b03(%rip),%r8
000000000000f000	leaq	0x00054b03(%rip),%rbx
000000000000f007	movq	%rbx,0x18(%rsp)
000000000000f00c	leaq	0x000a0825(%rip),%rbx
000000000000f013	movq	%rbx,0x10(%rsp)
000000000000f018	movq	%rax,0x08(%rsp)
000000000000f01d	jmp	0x0000f0e4
000000000000f022	movq	0x00099b5f(%rip),%rdi
000000000000f029	leaq	0x00099300(%rip),%rbx
000000000000f030	movq	%rbx,%rsi
000000000000f033	call	*0x000992f7(%rip)
000000000000f039	movq	%rax,%rdi
000000000000f03c	movq	%rbx,%rsi
000000000000f03f	call	*0x000992eb(%rip)
000000000000f045	leaq	0x000992f4(%rip),%rsi
000000000000f04c	movq	%r14,%rdi
000000000000f04f	movq	%rax,%rdx
000000000000f052	call	*0x000992e8(%rip)
000000000000f058	testb	%al,%al
000000000000f05a	jne	0x0000f0f5
000000000000f060	movq	0x00099b21(%rip),%rdi
000000000000f067	leaq	0x000992c2(%rip),%rbx
000000000000f06e	movq	%rbx,%rsi
000000000000f071	call	*0x000992b9(%rip)
000000000000f077	movq	%rax,%rdi
000000000000f07a	movq	%rbx,%rsi
000000000000f07d	call	*0x000992ad(%rip)
000000000000f083	movq	%rax,%rdi
000000000000f086	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000000f08b	movq	%rax,%r15
000000000000f08e	movq	0x00095bcb(%rip),%rsi
000000000000f095	movq	%r14,%rdi
000000000000f098	call	*0x0007503a(%rip)
000000000000f09e	leaq	0x00054ab4(%rip),%r8
000000000000f0a5	leaq	0xc8(%rbp),%rdi
000000000000f0a9	leaq	0xc0(%rbp),%rsi
000000000000f0ad	leaq	0x00054954(%rip),%rdx
000000000000f0b4	leaq	0x00054996(%rip),%rcx
000000000000f0bb	leaq	0x000a0916(%rip),%r9
000000000000f0c2	movq	%r8,0x20(%rsp)
000000000000f0c7	leaq	0x000a076a(%rip),%rbx
000000000000f0ce	movq	%rbx,0x18(%rsp)
000000000000f0d3	leaq	0x00054a29(%rip),%r8
000000000000f0da	movq	%rax,0x10(%rsp)
000000000000f0df	movq	%r15,0x08(%rsp)
000000000000f0e4	movq	%r8,(%rsp)
000000000000f0e8	movl	$0x00000153,%r8d
000000000000f0ee	xorb	%al,%al
000000000000f0f0	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000000f0f5	movq	0x00095bf4(%rip),%rsi
000000000000f0fc	movq	0xc8(%rbp),%rdi
000000000000f100	movq	0x00074fd1(%rip),%rbx
000000000000f107	call	*%rbx
000000000000f109	movq	0x00098748(%rip),%rsi
000000000000f110	movq	%rax,%rdi
000000000000f113	movq	%r14,%rdx
000000000000f116	call	*%rbx
000000000000f118	testb	%al,%al
000000000000f11a	je	0x0000f2d9
000000000000f120	movq	0x00098761(%rip),%rsi
000000000000f127	movq	%r12,%rdi
000000000000f12a	movq	%r14,%rdx
000000000000f12d	call	*0x00074fa5(%rip)
000000000000f133	jmp	0x0000f6b7
000000000000f138	leaq	0x000a7c41(%rip),%rax
000000000000f13f	cmpq	%rax,%rbx
000000000000f142	jne	0x0000f2e9
000000000000f148	movq	0x000a0381(%rip),%rax
000000000000f14f	movq	0xc8(%rbp),%rcx
000000000000f153	cmpb	$0x00,(%rcx,%rax)
000000000000f157	je	0x0000f6b7
000000000000f15d	testq	%r14,%r14
000000000000f160	jne	0x0000f1d3
000000000000f162	movq	0x00099a1f(%rip),%rdi
000000000000f169	leaq	0x000991c0(%rip),%rbx
000000000000f170	movq	%rbx,%rsi
000000000000f173	call	*0x000991b7(%rip)
000000000000f179	movq	%rax,%rdi
000000000000f17c	movq	%rbx,%rsi
000000000000f17f	call	*0x000991ab(%rip)
000000000000f185	movq	%rax,%rdi
000000000000f188	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000000f18d	leaq	0xc8(%rbp),%rdi
000000000000f191	leaq	0xc0(%rbp),%rsi
000000000000f195	leaq	0x0005486c(%rip),%rdx
000000000000f19c	leaq	0x000548ae(%rip),%rcx
000000000000f1a3	leaq	0x000a080e(%rip),%r9
000000000000f1aa	leaq	0x00054952(%rip),%r8
000000000000f1b1	leaq	0x00054952(%rip),%rbx
000000000000f1b8	movq	%rbx,0x18(%rsp)
000000000000f1bd	leaq	0x000a0674(%rip),%rbx
000000000000f1c4	movq	%rbx,0x10(%rsp)
000000000000f1c9	movq	%rax,0x08(%rsp)
000000000000f1ce	jmp	0x0000f295
000000000000f1d3	movq	0x000999ae(%rip),%rdi
000000000000f1da	leaq	0x0009914f(%rip),%rbx
000000000000f1e1	movq	%rbx,%rsi
000000000000f1e4	call	*0x00099146(%rip)
000000000000f1ea	movq	%rax,%rdi
000000000000f1ed	movq	%rbx,%rsi
000000000000f1f0	call	*0x0009913a(%rip)
000000000000f1f6	leaq	0x00099143(%rip),%rsi
000000000000f1fd	movq	%r14,%rdi
000000000000f200	movq	%rax,%rdx
000000000000f203	call	*0x00099137(%rip)
000000000000f209	testb	%al,%al
000000000000f20b	jne	0x0000f2a6
000000000000f211	movq	0x00099970(%rip),%rdi
000000000000f218	leaq	0x00099111(%rip),%rbx
000000000000f21f	movq	%rbx,%rsi
000000000000f222	call	*0x00099108(%rip)
000000000000f228	movq	%rax,%rdi
000000000000f22b	movq	%rbx,%rsi
000000000000f22e	call	*0x000990fc(%rip)
000000000000f234	movq	%rax,%rdi
000000000000f237	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000000f23c	movq	%rax,%r15
000000000000f23f	movq	0x00095a1a(%rip),%rsi
000000000000f246	movq	%r14,%rdi
000000000000f249	call	*0x00074e89(%rip)
000000000000f24f	leaq	0x00054903(%rip),%r8
000000000000f256	leaq	0xc8(%rbp),%rdi
000000000000f25a	leaq	0xc0(%rbp),%rsi
000000000000f25e	leaq	0x000547a3(%rip),%rdx
000000000000f265	leaq	0x000547e5(%rip),%rcx
000000000000f26c	leaq	0x000a0765(%rip),%r9
000000000000f273	movq	%r8,0x20(%rsp)
000000000000f278	leaq	0x000a05b9(%rip),%rbx
000000000000f27f	movq	%rbx,0x18(%rsp)
000000000000f284	leaq	0x00054878(%rip),%r8
000000000000f28b	movq	%rax,0x10(%rsp)
000000000000f290	movq	%r15,0x08(%rsp)
000000000000f295	movq	%r8,(%rsp)
000000000000f299	movl	$0x0000015f,%r8d
000000000000f29f	xorb	%al,%al
000000000000f2a1	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000000f2a6	movq	0x00095a43(%rip),%rsi
000000000000f2ad	movq	0xc8(%rbp),%rdi
000000000000f2b1	movq	0x00074e20(%rip),%rbx
000000000000f2b8	call	*%rbx
000000000000f2ba	movq	0x00098597(%rip),%rsi
000000000000f2c1	movq	%rax,%rdi
000000000000f2c4	movq	%r14,%rdx
000000000000f2c7	call	*%rbx
000000000000f2c9	testb	%al,%al
000000000000f2cb	je	0x0000f2d9
000000000000f2cd	movq	0x000985bc(%rip),%rsi
000000000000f2d4	jmp	0x0000f127
000000000000f2d9	movq	0x00098508(%rip),%rsi
000000000000f2e0	movq	0xc8(%rbp),%rdi
000000000000f2e4	jmp	0x0000f668
000000000000f2e9	leaq	0x000a7a98(%rip),%rax
000000000000f2f0	cmpq	%rax,%rbx
000000000000f2f3	je	0x0000f305
000000000000f2f5	leaq	0x000a7a94(%rip),%rax
000000000000f2fc	cmpq	%rax,%rbx
000000000000f2ff	jne	0x0000f4b4
000000000000f305	testq	%r14,%r14
000000000000f308	jne	0x0000f37b
000000000000f30a	movq	0x00099877(%rip),%rdi
000000000000f311	leaq	0x00099018(%rip),%rbx
000000000000f318	movq	%rbx,%rsi
000000000000f31b	call	*0x0009900f(%rip)
000000000000f321	movq	%rax,%rdi
000000000000f324	movq	%rbx,%rsi
000000000000f327	call	*0x00099003(%rip)
000000000000f32d	movq	%rax,%rdi
000000000000f330	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000000f335	leaq	0xc8(%rbp),%rdi
000000000000f339	leaq	0xc0(%rbp),%rsi
000000000000f33d	leaq	0x000546c4(%rip),%rdx
000000000000f344	leaq	0x00054706(%rip),%rcx
000000000000f34b	leaq	0x000a0666(%rip),%r9
000000000000f352	leaq	0x000547aa(%rip),%r8
000000000000f359	leaq	0x000547aa(%rip),%rbx
000000000000f360	movq	%rbx,0x18(%rsp)
000000000000f365	leaq	0x000a04cc(%rip),%rbx
000000000000f36c	movq	%rbx,0x10(%rsp)
000000000000f371	movq	%rax,0x08(%rsp)
000000000000f376	jmp	0x0000f43d
000000000000f37b	movq	0x00099806(%rip),%rdi
000000000000f382	leaq	0x00098fa7(%rip),%rbx
000000000000f389	movq	%rbx,%rsi
000000000000f38c	call	*0x00098f9e(%rip)
000000000000f392	movq	%rax,%rdi
000000000000f395	movq	%rbx,%rsi
000000000000f398	call	*0x00098f92(%rip)
000000000000f39e	leaq	0x00098f9b(%rip),%rsi
000000000000f3a5	movq	%r14,%rdi
000000000000f3a8	movq	%rax,%rdx
000000000000f3ab	call	*0x00098f8f(%rip)
000000000000f3b1	testb	%al,%al
000000000000f3b3	jne	0x0000f44e
000000000000f3b9	movq	0x000997c8(%rip),%rdi
000000000000f3c0	leaq	0x00098f69(%rip),%rbx
000000000000f3c7	movq	%rbx,%rsi
000000000000f3ca	call	*0x00098f60(%rip)
000000000000f3d0	movq	%rax,%rdi
000000000000f3d3	movq	%rbx,%rsi
000000000000f3d6	call	*0x00098f54(%rip)
000000000000f3dc	movq	%rax,%rdi
000000000000f3df	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000000f3e4	movq	%rax,%r15
000000000000f3e7	movq	0x00095872(%rip),%rsi
000000000000f3ee	movq	%r14,%rdi
000000000000f3f1	call	*0x00074ce1(%rip)
000000000000f3f7	leaq	0x0005475b(%rip),%r8
000000000000f3fe	leaq	0xc8(%rbp),%rdi
000000000000f402	leaq	0xc0(%rbp),%rsi
000000000000f406	leaq	0x000545fb(%rip),%rdx
000000000000f40d	leaq	0x0005463d(%rip),%rcx
000000000000f414	leaq	0x000a05bd(%rip),%r9
000000000000f41b	movq	%r8,0x20(%rsp)
000000000000f420	leaq	0x000a0411(%rip),%rbx
000000000000f427	movq	%rbx,0x18(%rsp)
000000000000f42c	leaq	0x000546d0(%rip),%r8
000000000000f433	movq	%rax,0x10(%rsp)
000000000000f438	movq	%r15,0x08(%rsp)
000000000000f43d	movq	%r8,(%rsp)
000000000000f441	movl	$0x0000016a,%r8d
000000000000f447	xorb	%al,%al
000000000000f449	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000000f44e	movq	0x000983e3(%rip),%rsi
000000000000f455	movq	%r12,%rbx
000000000000f458	movq	%rbx,%rdi
000000000000f45b	movq	%r14,%rdx
000000000000f45e	call	*0x00074c74(%rip)
000000000000f464	movq	0xc8(%rbp),%rdi
000000000000f468	testb	%al,%al
000000000000f46a	je	0x0000f49c
000000000000f46c	movq	0x000983dd(%rip),%rsi
000000000000f473	movq	0x00074c5e(%rip),%r15
000000000000f47a	movq	%r14,%rdx
000000000000f47d	movq	%rbx,%rcx
000000000000f480	call	*%r15
000000000000f483	movq	0x0009835e(%rip),%rsi
000000000000f48a	movq	0xc8(%rbp),%rdi
000000000000f48e	movq	%r14,%rdx
000000000000f491	movq	%rbx,%rcx
000000000000f494	call	*%r15
000000000000f497	jmp	0x0000f6b7
000000000000f49c	movq	0x00098345(%rip),%rsi
000000000000f4a3	movq	%r14,%rdx
000000000000f4a6	movq	%rbx,%rcx
000000000000f4a9	call	*0x00074c29(%rip)
000000000000f4af	jmp	0x0000f6b7
000000000000f4b4	movq	0xc8(%rbp),%rax
000000000000f4b8	leaq	0x000a78d9(%rip),%rcx
000000000000f4bf	cmpq	%rcx,%rbx
000000000000f4c2	je	0x0000f4e0
000000000000f4c4	leaq	0x000a78d5(%rip),%rcx
000000000000f4cb	cmpq	%rcx,%rbx
000000000000f4ce	je	0x0000f4e0
000000000000f4d0	leaq	0x000a78d1(%rip),%rcx
000000000000f4d7	cmpq	%rcx,%rbx
000000000000f4da	jne	0x0000f67f
000000000000f4e0	movq	0x0009ffe9(%rip),%rcx
000000000000f4e7	cmpb	$0x00,(%rax,%rcx)
000000000000f4eb	je	0x0000f6b7
000000000000f4f1	testq	%r14,%r14
000000000000f4f4	jne	0x0000f567
000000000000f4f6	movq	0x000995b3(%rip),%rdi
000000000000f4fd	leaq	0x00098e2c(%rip),%rbx
000000000000f504	movq	%rbx,%rsi
000000000000f507	call	*0x00098e23(%rip)
000000000000f50d	movq	%rax,%rdi
000000000000f510	movq	%rbx,%rsi
000000000000f513	call	*0x00098e17(%rip)
000000000000f519	movq	%rax,%rdi
000000000000f51c	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000000f521	leaq	0xc8(%rbp),%rdi
000000000000f525	leaq	0xc0(%rbp),%rsi
000000000000f529	leaq	0x000544d8(%rip),%rdx
000000000000f530	leaq	0x0005451a(%rip),%rcx
000000000000f537	leaq	0x000a047a(%rip),%r9
000000000000f53e	leaq	0x000545be(%rip),%r8
000000000000f545	leaq	0x000545be(%rip),%rbx
000000000000f54c	movq	%rbx,0x18(%rsp)
000000000000f551	leaq	0x000a02e0(%rip),%rbx
000000000000f558	movq	%rbx,0x10(%rsp)
000000000000f55d	movq	%rax,0x08(%rsp)
000000000000f562	jmp	0x0000f629
000000000000f567	movq	0x00099542(%rip),%rdi
000000000000f56e	leaq	0x00098dbb(%rip),%rbx
000000000000f575	movq	%rbx,%rsi
000000000000f578	call	*0x00098db2(%rip)
000000000000f57e	movq	%rax,%rdi
000000000000f581	movq	%rbx,%rsi
000000000000f584	call	*0x00098da6(%rip)
000000000000f58a	leaq	0x00098daf(%rip),%rsi
000000000000f591	movq	%r14,%rdi
000000000000f594	movq	%rax,%rdx
000000000000f597	call	*0x00098da3(%rip)
000000000000f59d	testb	%al,%al
000000000000f59f	jne	0x0000f63a
000000000000f5a5	movq	0x00099504(%rip),%rdi
000000000000f5ac	leaq	0x00098d7d(%rip),%rbx
000000000000f5b3	movq	%rbx,%rsi
000000000000f5b6	call	*0x00098d74(%rip)
000000000000f5bc	movq	%rax,%rdi
000000000000f5bf	movq	%rbx,%rsi
000000000000f5c2	call	*0x00098d68(%rip)
000000000000f5c8	movq	%rax,%rdi
000000000000f5cb	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000000f5d0	movq	%rax,%r15
000000000000f5d3	movq	0x00095686(%rip),%rsi
000000000000f5da	movq	%r14,%rdi
000000000000f5dd	call	*0x00074af5(%rip)
000000000000f5e3	leaq	0x000545aa(%rip),%r8
000000000000f5ea	leaq	0xc8(%rbp),%rdi
000000000000f5ee	leaq	0xc0(%rbp),%rsi
000000000000f5f2	leaq	0x0005440f(%rip),%rdx
000000000000f5f9	leaq	0x00054451(%rip),%rcx
000000000000f600	leaq	0x000a03d1(%rip),%r9
000000000000f607	movq	%r8,0x20(%rsp)
000000000000f60c	leaq	0x000a0225(%rip),%rbx
000000000000f613	movq	%rbx,0x18(%rsp)
000000000000f618	leaq	0x000544e4(%rip),%r8
000000000000f61f	movq	%rax,0x10(%rsp)
000000000000f624	movq	%r15,0x08(%rsp)
000000000000f629	movq	%r8,(%rsp)
000000000000f62d	movl	$0x00000177,%r8d
000000000000f633	xorb	%al,%al
000000000000f635	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000000f63a	movq	0x000749ef(%rip),%rax
000000000000f641	movq	(%rax),%rdx
000000000000f644	leaq	0x00098d05(%rip),%rsi
000000000000f64b	movq	0xfffffe18(%rbp),%rdi
000000000000f652	call	*0x00098cf8(%rip)
000000000000f658	movq	0xc8(%rbp),%rdi
000000000000f65c	testq	%rax,%rax
000000000000f65f	je	0x0000f676
000000000000f661	movq	0x000981e8(%rip),%rsi
000000000000f668	movq	%r14,%rdx
000000000000f66b	movq	%r12,%rcx
000000000000f66e	call	*0x00074a64(%rip)
000000000000f674	jmp	0x0000f6b7
000000000000f676	movq	0x0009816b(%rip),%rsi
000000000000f67d	jmp	0x0000f668
000000000000f67f	movq	%rax,0xfffffe30(%rbp)
000000000000f686	movq	0x000999bb(%rip),%rax
000000000000f68d	movq	%rax,0xfffffe38(%rbp)
000000000000f694	movq	0x000981fd(%rip),%rsi
000000000000f69b	leaq	0xfffffe30(%rbp),%rdi
000000000000f6a2	movq	%r13,%rdx
000000000000f6a5	movq	%r14,%rcx
000000000000f6a8	movq	0xfffffe18(%rbp),%r8
000000000000f6af	movq	%rbx,%r9
000000000000f6b2	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000000f6b7	movq	0x000749e2(%rip),%rax
000000000000f6be	movq	(%rax),%rax
000000000000f6c1	cmpq	0xd0(%rbp),%rax
000000000000f6c5	jne	0x0000f6d9
000000000000f6c7	addq	$0x000001e8,%rsp
000000000000f6ce	popq	%rbx
000000000000f6cf	popq	%r12
000000000000f6d1	popq	%r13
000000000000f6d3	popq	%r14
000000000000f6d5	popq	%r15
000000000000f6d7	popq	%rbp
000000000000f6d8	ret
000000000000f6d9	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
000000000000f6de	nop
000000000000f6df	nop
000000000000f6e0	nop
000000000000f6e1	nop
000000000000f6e2	nop
-[DBGGDBLauncher adaptors]:
000000000000f6e3	pushq	%rbp
000000000000f6e4	movq	%rsp,%rbp
000000000000f6e7	movq	0x0009fe1a(%rip),%rax
000000000000f6ee	movq	(%rdi,%rax),%rdx
000000000000f6f2	movq	0x00098f67(%rip),%rdi
000000000000f6f9	testq	%rdx,%rdx
000000000000f6fc	je	0x0000f70d
000000000000f6fe	movq	0x00095dfb(%rip),%rsi
000000000000f705	call	*0x000749cd(%rip)
000000000000f70b	jmp	0x0000f71a
000000000000f70d	movq	0x00095d1c(%rip),%rsi
000000000000f714	call	*0x000749be(%rip)
000000000000f71a	popq	%rbp
000000000000f71b	ret
000000000000f71c	nop
000000000000f71d	nop
-[PBXLSDebuggingSession _addBreakpointObservers:]:
000000000000f71e	pushq	%rbp
000000000000f71f	movq	%rsp,%rbp
000000000000f722	pushq	%r15
000000000000f724	pushq	%r14
000000000000f726	pushq	%rbx
000000000000f727	subq	$0x28,%rsp
000000000000f72b	movq	%rdx,%r14
000000000000f72e	movq	%rdi,%rbx
000000000000f731	movq	0x00098098(%rip),%rsi
000000000000f738	movq	0x000a7631(%rip),%rcx
000000000000f73f	leaq	0x000a762a(%rip),%r9
000000000000f746	movq	0x0007498b(%rip),%r15
000000000000f74d	movq	%r14,%rdi
000000000000f750	movq	%rbx,%rdx
000000000000f753	movl	$0x00000001,%r8d
000000000000f759	call	*%r15
000000000000f75c	movq	0x0009806d(%rip),%rsi
000000000000f763	movq	0x000a760e(%rip),%rcx
000000000000f76a	leaq	0x000a7607(%rip),%r9
000000000000f771	movq	%r14,%rdi
000000000000f774	movq	%rbx,%rdx
000000000000f777	movl	$0x00000001,%r8d
000000000000f77d	call	*%r15
000000000000f780	leaq	0x000a75f9(%rip),%r9
000000000000f787	movq	0x00098042(%rip),%rsi
000000000000f78e	movq	0x000a75eb(%rip),%rcx
000000000000f795	movq	%r14,%rdi
000000000000f798	movq	%rbx,%rdx
000000000000f79b	movl	$0x00000001,%r8d
000000000000f7a1	call	*%r15
000000000000f7a4	leaq	0xe0(%rbp),%rsi
000000000000f7a8	leaq	0x000a7af1(%rip),%rax
000000000000f7af	leaq	0x0000009c(%rip),%rcx
000000000000f7b6	movq	0x000748d3(%rip),%rdx
000000000000f7bd	movq	%rdx,0xc0(%rbp)
000000000000f7c1	movl	$0x42000000,0xc8(%rbp)
000000000000f7c8	movl	$0x00000000,0xcc(%rbp)
000000000000f7cf	movq	%rcx,0xd0(%rbp)
000000000000f7d3	movq	%rax,0xd8(%rbp)
000000000000f7d7	movq	%rbx,%rdi
000000000000f7da	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
000000000000f7df	leaq	0x000a6392(%rip),%rdx
000000000000f7e6	leaq	0xc0(%rbp),%r8
000000000000f7ea	movq	0x00097e4f(%rip),%rsi
000000000000f7f1	movq	%r14,%rdi
000000000000f7f4	movl	$0x00000007,%ecx
000000000000f7f9	call	*%r15
000000000000f7fc	movq	0x0009fcad(%rip),%rcx
000000000000f803	movq	(%rbx,%rcx),%rdi
000000000000f807	movq	0x00095522(%rip),%rsi
000000000000f80e	movq	%rax,%rdx
000000000000f811	movq	%r14,%rcx
000000000000f814	call	*%r15
000000000000f817	movq	0x0009808a(%rip),%rsi
000000000000f81e	movq	%rbx,%rdi
000000000000f821	movq	%r14,%rdx
000000000000f824	call	*%r15
000000000000f827	movq	0x00098082(%rip),%rsi
000000000000f82e	movq	%rbx,%rdi
000000000000f831	movq	%r14,%rdx
000000000000f834	call	*%r15
000000000000f837	movq	0x0009807a(%rip),%rsi
000000000000f83e	movq	%rbx,%rdi
000000000000f841	movq	%r14,%rdx
000000000000f844	call	*%r15
000000000000f847	addq	$0x28,%rsp
000000000000f84b	popq	%rbx
000000000000f84c	popq	%r14
000000000000f84e	popq	%r15
000000000000f850	popq	%rbp
000000000000f851	ret
___49-[PBXLSDebuggingSession _addBreakpointObservers:]_block_invoke_0:
000000000000f852	pushq	%rbp
000000000000f853	movq	%rsp,%rbp
000000000000f856	movq	0x20(%rdi),%rdi
000000000000f85a	movq	0x0009803f(%rip),%rsi
000000000000f861	popq	%rbp
000000000000f862	jmp	*0x00074870(%rip)
000000000000f868	nopl	0x00000000(%rax,%rax)
000000000000f870	nop
000000000000f871	nop
000000000000f872	nop
000000000000f873	nop
000000000000f874	nop
000000000000f875	nop
000000000000f876	nop
000000000000f877	nop
000000000000f878	nop
-[PBXLSDebuggingSession _handleBreakpointLocationChanges:]:
000000000000f879	pushq	%rbp
000000000000f87a	movq	%rsp,%rbp
000000000000f87d	pushq	%r15
000000000000f87f	pushq	%r14
000000000000f881	pushq	%r12
000000000000f883	pushq	%rbx
000000000000f884	movq	%rdx,%rbx
000000000000f887	movq	%rdi,%r15
000000000000f88a	movq	0x000747a7(%rip),%rax
000000000000f891	movq	(%rax),%rdx
000000000000f894	leaq	0x00098ab5(%rip),%r12
000000000000f89b	movq	%rbx,%rdi
000000000000f89e	movq	%r12,%rsi
000000000000f8a1	call	*0x00098aa9(%rip)
000000000000f8a7	movq	%rax,%r14
000000000000f8aa	movq	0x00074777(%rip),%rax
000000000000f8b1	movq	(%rax),%rdx
000000000000f8b4	movq	%rbx,%rdi
000000000000f8b7	movq	%r12,%rsi
000000000000f8ba	call	*0x00098a90(%rip)
000000000000f8c0	movq	%rax,%rbx
000000000000f8c3	movq	0x00098026(%rip),%rsi
000000000000f8ca	movq	%r15,%rdi
000000000000f8cd	movq	%r14,%rdx
000000000000f8d0	call	*0x00074802(%rip)
000000000000f8d6	movq	0x0009801b(%rip),%rsi
000000000000f8dd	movq	%r15,%rdi
000000000000f8e0	movq	%rbx,%rdx
000000000000f8e3	movq	0x000747ee(%rip),%rax
000000000000f8ea	popq	%rbx
000000000000f8eb	popq	%r12
000000000000f8ed	popq	%r14
000000000000f8ef	popq	%r15
000000000000f8f1	popq	%rbp
000000000000f8f2	jmp	*%rax
000000000000f8f4	nop
000000000000f8f5	nop
000000000000f8f6	nop
000000000000f8f7	nop
000000000000f8f8	nop
-[PBXLSDebuggingSession _handleBreakpointLocationsRemoved:]:
000000000000f8f9	pushq	%rbp
000000000000f8fa	movq	%rsp,%rbp
000000000000f8fd	pushq	%r15
000000000000f8ff	pushq	%r14
000000000000f901	pushq	%r13
000000000000f903	pushq	%r12
000000000000f905	pushq	%rbx
000000000000f906	subq	$0x000000d8,%rsp
000000000000f90d	movq	%rdx,%rbx
000000000000f910	movq	%rbx,0xffffff08(%rbp)
000000000000f917	movq	%rdi,%r13
000000000000f91a	movq	0x0007477f(%rip),%rax
000000000000f921	movq	(%rax),%rax
000000000000f924	movq	%rax,0xd0(%rbp)
000000000000f928	movq	0x00097fd1(%rip),%rsi
000000000000f92f	movq	0x0009925a(%rip),%rdi
000000000000f936	call	*0x0007479c(%rip)
000000000000f93c	leaq	0x00098a4d(%rip),%rsi
000000000000f943	movq	%rbx,%rdi
000000000000f946	movq	%rax,%rdx
000000000000f949	call	*0x00098a41(%rip)
000000000000f94f	testb	%al,%al
000000000000f951	jne	0x0000fa57
000000000000f957	xorps	%xmm0,%xmm0
000000000000f95a	movaps	%xmm0,0xc0(%rbp)
000000000000f95e	movaps	%xmm0,0xb0(%rbp)
000000000000f962	movaps	%xmm0,0xa0(%rbp)
000000000000f966	movaps	%xmm0,0x90(%rbp)
000000000000f96a	leaq	0x00098a0f(%rip),%rsi
000000000000f971	leaq	0x90(%rbp),%rdx
000000000000f975	leaq	0xffffff10(%rbp),%rcx
000000000000f97c	movq	0xffffff08(%rbp),%rdi
000000000000f983	movl	$0x00000010,%r8d
000000000000f989	call	*0x000989f1(%rip)
000000000000f98f	movq	%rax,%rbx
000000000000f992	testq	%rbx,%rbx
000000000000f995	je	0x0000fa57
000000000000f99b	movq	0xa0(%rbp),%rax
000000000000f99f	movq	(%rax),%rax
000000000000f9a2	movq	%rax,0xffffff00(%rbp)
000000000000f9a9	movq	0x00074728(%rip),%r14
000000000000f9b0	xorl	%r15d,%r15d
000000000000f9b3	movq	0xa0(%rbp),%rax
000000000000f9b7	movq	0xffffff00(%rbp),%rcx
000000000000f9be	cmpq	%rcx,(%rax)
000000000000f9c1	je	0x0000f9cf
000000000000f9c3	movq	0xffffff08(%rbp),%rdi
000000000000f9ca	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
000000000000f9cf	movq	0x98(%rbp),%rax
000000000000f9d3	movq	(%rax,%r15,8),%r12
000000000000f9d7	movq	%r13,%rdi
000000000000f9da	movq	0x00097d4f(%rip),%rsi
000000000000f9e1	call	*%r14
000000000000f9e4	movq	%rax,%rdi
000000000000f9e7	movq	0x00097df2(%rip),%rsi
000000000000f9ee	call	*%r14
000000000000f9f1	movq	%rax,%rdi
000000000000f9f4	movq	0x00096ea5(%rip),%rsi
000000000000f9fb	call	*%r14
000000000000f9fe	movq	%rax,%rdi
000000000000fa01	movq	0x00096dd8(%rip),%rsi
000000000000fa08	movq	%r12,%rdx
000000000000fa0b	call	*%r14
000000000000fa0e	movq	%r13,%rdi
000000000000fa11	movq	0x00097db0(%rip),%rsi
000000000000fa18	movq	%r12,%rdx
000000000000fa1b	call	*%r14
000000000000fa1e	incq	%r15
000000000000fa21	cmpq	%rbx,%r15
000000000000fa24	jb	0x0000f9b3
000000000000fa26	movq	0xffffff08(%rbp),%rdi
000000000000fa2d	leaq	0x0009894c(%rip),%rsi
000000000000fa34	leaq	0x90(%rbp),%rdx
000000000000fa38	leaq	0xffffff10(%rbp),%rcx
000000000000fa3f	movl	$0x00000010,%r8d
000000000000fa45	call	*0x00098935(%rip)
000000000000fa4b	movq	%rax,%rbx
000000000000fa4e	testq	%rbx,%rbx
000000000000fa51	jne	0x0000f9b0
000000000000fa57	movq	0x00074642(%rip),%rax
000000000000fa5e	movq	(%rax),%rax
000000000000fa61	cmpq	0xd0(%rbp),%rax
000000000000fa65	jne	0x0000fa79
000000000000fa67	addq	$0x000000d8,%rsp
000000000000fa6e	popq	%rbx
000000000000fa6f	popq	%r12
000000000000fa71	popq	%r13
000000000000fa73	popq	%r14
000000000000fa75	popq	%r15
000000000000fa77	popq	%rbp
000000000000fa78	ret
000000000000fa79	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
000000000000fa7e	nop
000000000000fa7f	nop
000000000000fa80	nop
000000000000fa81	nop
000000000000fa82	nop
000000000000fa83	nop
-[PBXLSDebuggingSession _handleBreakpointLocationsAdded:]:
000000000000fa84	pushq	%rbp
000000000000fa85	movq	%rsp,%rbp
000000000000fa88	pushq	%r15
000000000000fa8a	pushq	%r14
000000000000fa8c	pushq	%r13
000000000000fa8e	pushq	%r12
000000000000fa90	pushq	%rbx
000000000000fa91	subq	$0x000000d8,%rsp
000000000000fa98	movq	%rdx,%rbx
000000000000fa9b	movq	%rbx,0xffffff08(%rbp)
000000000000faa2	movq	%rdi,%r13
000000000000faa5	movq	0x000745f4(%rip),%rax
000000000000faac	movq	(%rax),%rax
000000000000faaf	movq	%rax,0xd0(%rbp)
000000000000fab3	movq	0x00097e46(%rip),%rsi
000000000000faba	movq	0x000990cf(%rip),%rdi
000000000000fac1	call	*0x00074611(%rip)
000000000000fac7	leaq	0x000988c2(%rip),%rsi
000000000000face	movq	%rbx,%rdi
000000000000fad1	movq	%rax,%rdx
000000000000fad4	call	*0x000988b6(%rip)
000000000000fada	testb	%al,%al
000000000000fadc	jne	0x0000fbe2
000000000000fae2	xorps	%xmm0,%xmm0
000000000000fae5	movaps	%xmm0,0xc0(%rbp)
000000000000fae9	movaps	%xmm0,0xb0(%rbp)
000000000000faed	movaps	%xmm0,0xa0(%rbp)
000000000000faf1	movaps	%xmm0,0x90(%rbp)
000000000000faf5	leaq	0x00098884(%rip),%rsi
000000000000fafc	leaq	0x90(%rbp),%rdx
000000000000fb00	leaq	0xffffff10(%rbp),%rcx
000000000000fb07	movq	0xffffff08(%rbp),%rdi
000000000000fb0e	movl	$0x00000010,%r8d
000000000000fb14	call	*0x00098866(%rip)
000000000000fb1a	movq	%rax,%rbx
000000000000fb1d	testq	%rbx,%rbx
000000000000fb20	je	0x0000fbe2
000000000000fb26	movq	0xa0(%rbp),%rax
000000000000fb2a	movq	(%rax),%rax
000000000000fb2d	movq	%rax,0xffffff00(%rbp)
000000000000fb34	movq	0x0007459d(%rip),%r14
000000000000fb3b	xorl	%r15d,%r15d
000000000000fb3e	movq	0xa0(%rbp),%rax
000000000000fb42	movq	0xffffff00(%rbp),%rcx
000000000000fb49	cmpq	%rcx,(%rax)
000000000000fb4c	je	0x0000fb5a
000000000000fb4e	movq	0xffffff08(%rbp),%rdi
000000000000fb55	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
000000000000fb5a	movq	0x98(%rbp),%rax
000000000000fb5e	movq	(%rax,%r15,8),%r12
000000000000fb62	movq	%r13,%rdi
000000000000fb65	movq	0x00097bc4(%rip),%rsi
000000000000fb6c	call	*%r14
000000000000fb6f	movq	%rax,%rdi
000000000000fb72	movq	0x00097c67(%rip),%rsi
000000000000fb79	call	*%r14
000000000000fb7c	movq	%rax,%rdi
000000000000fb7f	movq	0x00096d1a(%rip),%rsi
000000000000fb86	call	*%r14
000000000000fb89	movq	%rax,%rdi
000000000000fb8c	movq	0x00096875(%rip),%rsi
000000000000fb93	movq	%r12,%rdx
000000000000fb96	call	*%r14
000000000000fb99	movq	%r13,%rdi
000000000000fb9c	movq	0x00097c5d(%rip),%rsi
000000000000fba3	movq	%r12,%rdx
000000000000fba6	call	*%r14
000000000000fba9	incq	%r15
000000000000fbac	cmpq	%rbx,%r15
000000000000fbaf	jb	0x0000fb3e
000000000000fbb1	movq	0xffffff08(%rbp),%rdi
000000000000fbb8	leaq	0x000987c1(%rip),%rsi
000000000000fbbf	leaq	0x90(%rbp),%rdx
000000000000fbc3	leaq	0xffffff10(%rbp),%rcx
000000000000fbca	movl	$0x00000010,%r8d
000000000000fbd0	call	*0x000987aa(%rip)
000000000000fbd6	movq	%rax,%rbx
000000000000fbd9	testq	%rbx,%rbx
000000000000fbdc	jne	0x0000fb3b
000000000000fbe2	movq	0x000744b7(%rip),%rax
000000000000fbe9	movq	(%rax),%rax
000000000000fbec	cmpq	0xd0(%rbp),%rax
000000000000fbf0	jne	0x0000fc04
000000000000fbf2	addq	$0x000000d8,%rsp
000000000000fbf9	popq	%rbx
000000000000fbfa	popq	%r12
000000000000fbfc	popq	%r13
000000000000fbfe	popq	%r14
000000000000fc00	popq	%r15
000000000000fc02	popq	%rbp
000000000000fc03	ret
000000000000fc04	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
000000000000fc09	nop
000000000000fc0a	nop
000000000000fc0b	nop
000000000000fc0c	nop
000000000000fc0d	nop
000000000000fc0e	nop
000000000000fc0f	nop
000000000000fc10	nop
000000000000fc11	nop
000000000000fc12	nop
-[PBXLSDebuggingSession _addSymbolicBreakpointObserversIfNeeded:]:
000000000000fc13	pushq	%rbp
000000000000fc14	movq	%rsp,%rbp
000000000000fc17	pushq	%r14
000000000000fc19	pushq	%rbx
000000000000fc1a	movq	%rdx,%rbx
000000000000fc1d	movq	%rdi,%r14
000000000000fc20	movq	0x00097cb9(%rip),%rsi
000000000000fc27	movq	0x00098f4a(%rip),%rdi
000000000000fc2e	call	*0x000744a4(%rip)
000000000000fc34	testb	%al,%al
000000000000fc36	jne	0x0000fc3d
000000000000fc38	popq	%rbx
000000000000fc39	popq	%r14
000000000000fc3b	popq	%rbp
000000000000fc3c	ret
000000000000fc3d	movq	0x00097b8c(%rip),%rsi
000000000000fc44	movq	0x000a713d(%rip),%rcx
000000000000fc4b	leaq	0x000a7136(%rip),%r9
000000000000fc52	movq	%rbx,%rdi
000000000000fc55	movq	%r14,%rdx
000000000000fc58	xorl	%r8d,%r8d
000000000000fc5b	call	*0x00074477(%rip)
000000000000fc61	leaq	0x000a7128(%rip),%r9
000000000000fc68	movq	0x00097b61(%rip),%rsi
000000000000fc6f	movq	0x000a711a(%rip),%rcx
000000000000fc76	movq	%rbx,%rdi
000000000000fc79	movq	%r14,%rdx
000000000000fc7c	xorl	%r8d,%r8d
000000000000fc7f	movq	0x00074452(%rip),%rax
000000000000fc86	popq	%rbx
000000000000fc87	popq	%r14
000000000000fc89	popq	%rbp
000000000000fc8a	jmp	*%rax
000000000000fc8c	nop
000000000000fc8d	nop
000000000000fc8e	nop
000000000000fc8f	nop
000000000000fc90	nop
000000000000fc91	nop
000000000000fc92	nop
000000000000fc93	nop
000000000000fc94	nop
000000000000fc95	nop
000000000000fc96	nop
000000000000fc97	nop
000000000000fc98	nop
+[PBXLSDebuggingSession _isSymbolicBreakpoint:]:
000000000000fc99	pushq	%rbp
000000000000fc9a	movq	%rsp,%rbp
000000000000fc9d	pushq	%rbx
000000000000fc9e	pushq	%rax
000000000000fc9f	movq	%rdx,%rbx
000000000000fca2	movq	0x00098d07(%rip),%rdi
000000000000fca9	leaq	0x00098680(%rip),%rsi
000000000000fcb0	call	*0x0009867a(%rip)
000000000000fcb6	leaq	0x00098683(%rip),%rsi
000000000000fcbd	movq	%rbx,%rdi
000000000000fcc0	movq	%rax,%rdx
000000000000fcc3	call	*0x00098677(%rip)
000000000000fcc9	movsbl	%al,%eax
000000000000fccc	addq	$0x08,%rsp
000000000000fcd0	popq	%rbx
000000000000fcd1	popq	%rbp
000000000000fcd2	ret
000000000000fcd3	nop
000000000000fcd4	nop
000000000000fcd5	nop
000000000000fcd6	nop
000000000000fcd7	nop
000000000000fcd8	nop
000000000000fcd9	nop
000000000000fcda	nop
000000000000fcdb	nop
000000000000fcdc	nop
000000000000fcdd	nop
000000000000fcde	nop
-[PBXLSDebuggingSession _addExceptionBreakpointObserversIfNeeded:]:
000000000000fcdf	pushq	%rbp
000000000000fce0	movq	%rsp,%rbp
000000000000fce3	pushq	%r14
000000000000fce5	pushq	%rbx
000000000000fce6	movq	%rdx,%rbx
000000000000fce9	movq	%rdi,%r14
000000000000fcec	movq	0x00097bf5(%rip),%rsi
000000000000fcf3	movq	0x00098e7e(%rip),%rdi
000000000000fcfa	call	*0x000743d8(%rip)
000000000000fd00	testb	%al,%al
000000000000fd02	jne	0x0000fd09
000000000000fd04	popq	%rbx
000000000000fd05	popq	%r14
000000000000fd07	popq	%rbp
000000000000fd08	ret
000000000000fd09	movq	0x00097ac0(%rip),%rsi
000000000000fd10	movq	0x000a7081(%rip),%rcx
000000000000fd17	leaq	0x000a707a(%rip),%r9
000000000000fd1e	movq	%rbx,%rdi
000000000000fd21	movq	%r14,%rdx
000000000000fd24	movl	$0x0000000d,%r8d
000000000000fd2a	call	*0x000743a8(%rip)
000000000000fd30	movq	0x00097a99(%rip),%rsi
000000000000fd37	movq	0x000a7062(%rip),%rcx
000000000000fd3e	leaq	0x000a705b(%rip),%r9
000000000000fd45	movq	%rbx,%rdi
000000000000fd48	movq	%r14,%rdx
000000000000fd4b	movl	$0x0000000d,%r8d
000000000000fd51	call	*0x00074381(%rip)
000000000000fd57	leaq	0x000a704a(%rip),%r9
000000000000fd5e	movq	0x00097a6b(%rip),%rsi
000000000000fd65	movq	0x000a703c(%rip),%rcx
000000000000fd6c	movq	%rbx,%rdi
000000000000fd6f	movq	%r14,%rdx
000000000000fd72	movl	$0x0000000d,%r8d
000000000000fd78	movq	0x00074359(%rip),%rax
000000000000fd7f	popq	%rbx
000000000000fd80	popq	%r14
000000000000fd82	popq	%rbp
000000000000fd83	jmp	*%rax
000000000000fd85	nop
000000000000fd86	nop
000000000000fd87	nop
000000000000fd88	nop
000000000000fd89	nop
000000000000fd8a	nop
000000000000fd8b	nop
000000000000fd8c	nop
000000000000fd8d	nop
000000000000fd8e	nop
000000000000fd8f	nop
000000000000fd90	nop
000000000000fd91	nop
000000000000fd92	nop
+[PBXLSDebuggingSession _isExceptionBreakpoint:]:
000000000000fd93	pushq	%rbp
000000000000fd94	movq	%rsp,%rbp
000000000000fd97	pushq	%rbx
000000000000fd98	pushq	%rax
000000000000fd99	movq	%rdx,%rbx
000000000000fd9c	movq	0x00098d0d(%rip),%rdi
000000000000fda3	leaq	0x00098586(%rip),%rsi
000000000000fdaa	call	*0x00098580(%rip)
000000000000fdb0	leaq	0x00098589(%rip),%rsi
000000000000fdb7	movq	%rbx,%rdi
000000000000fdba	movq	%rax,%rdx
000000000000fdbd	call	*0x0009857d(%rip)
000000000000fdc3	movsbl	%al,%eax
000000000000fdc6	addq	$0x08,%rsp
000000000000fdca	popq	%rbx
000000000000fdcb	popq	%rbp
000000000000fdcc	ret
000000000000fdcd	nop
000000000000fdce	nop
000000000000fdcf	nop
000000000000fdd0	nop
000000000000fdd1	nop
000000000000fdd2	nop
-[DBGGDBLauncher gdbAdaptor]:
000000000000fdd3	pushq	%rbp
000000000000fdd4	movq	%rsp,%rbp
000000000000fdd7	movq	0x0009f72a(%rip),%rax
000000000000fdde	movq	(%rdi,%rax),%rax
000000000000fde2	popq	%rbp
000000000000fde3	ret
-[PBXGDB_Adaptor requestDebuggerTurnBreakpointsOn]:
000000000000fde4	pushq	%rbp
000000000000fde5	movq	%rsp,%rbp
000000000000fde8	pushq	%r14
000000000000fdea	pushq	%rbx
000000000000fdeb	movq	%rdi,%rbx
000000000000fdee	movq	0x00094fbb(%rip),%rsi
000000000000fdf5	call	*0x000742dd(%rip)
000000000000fdfb	testb	%al,%al
000000000000fdfd	jne	0x0000fe42
000000000000fdff	movq	0x0009537a(%rip),%rsi
000000000000fe06	movq	0x000742cb(%rip),%r14
000000000000fe0d	movq	%rbx,%rdi
000000000000fe10	call	*%r14
000000000000fe13	movq	0x00094ece(%rip),%rsi
000000000000fe1a	movq	%rbx,%rdi
000000000000fe1d	call	*%r14
000000000000fe20	movq	0x00095361(%rip),%rsi
000000000000fe27	movq	%rax,%rdi
000000000000fe2a	movq	%rbx,%rdx
000000000000fe2d	call	*%r14
000000000000fe30	movq	0x00095359(%rip),%rsi
000000000000fe37	movq	%rbx,%rdi
000000000000fe3a	movl	$0x00000001,%edx
000000000000fe3f	call	*%r14
000000000000fe42	movq	0x0009e83f(%rip),%rax
000000000000fe49	movq	(%rbx,%rax),%rdi
000000000000fe4d	movq	0x00095344(%rip),%rsi
000000000000fe54	movl	$0x00000001,%edx
000000000000fe59	popq	%rbx
000000000000fe5a	popq	%r14
000000000000fe5c	popq	%rbp
000000000000fe5d	jmp	*0x00074275(%rip)
-[PBXLSDebuggerAdaptor didAddInitialBreakpoints]:
000000000000fe63	pushq	%rbp
000000000000fe64	movq	%rsp,%rbp
000000000000fe67	movq	0x0009f632(%rip),%rax
000000000000fe6e	movb	(%rdi,%rax),%al
000000000000fe71	movsbl	%al,%eax
000000000000fe74	popq	%rbp
000000000000fe75	ret
-[PBXGDB_Adaptor loadSymbolsIfNeeded]:
000000000000fe76	pushq	%rbp
000000000000fe77	movq	%rsp,%rbp
000000000000fe7a	pushq	%r14
000000000000fe7c	pushq	%rbx
000000000000fe7d	movq	%rdi,%rbx
000000000000fe80	movq	0x00094f29(%rip),%rsi
000000000000fe87	call	*0x0007424b(%rip)
000000000000fe8d	testb	%al,%al
000000000000fe8f	jne	0x0000fe9e
000000000000fe91	movq	0x0009e850(%rip),%rax
000000000000fe98	cmpb	$0x00,(%rbx,%rax)
000000000000fe9c	je	0x0000fea3
000000000000fe9e	popq	%rbx
000000000000fe9f	popq	%r14
000000000000fea1	popq	%rbp
000000000000fea2	ret
000000000000fea3	movb	$0x01,(%rbx,%rax)
000000000000fea7	movq	0x00094bd2(%rip),%rsi
000000000000feae	movq	0x0009861b(%rip),%rdi
000000000000feb5	call	*0x0007421d(%rip)
000000000000febb	movq	0x00094ef6(%rip),%rsi
000000000000fec2	movq	%rbx,%rdi
000000000000fec5	movq	%rax,%rdx
000000000000fec8	call	*0x0007420a(%rip)
000000000000fece	movq	0x0009e7ab(%rip),%rax
000000000000fed5	movq	(%rbx,%rax),%rdi
000000000000fed9	movq	0x00094ee0(%rip),%rsi
000000000000fee0	call	*0x000741f2(%rip)
000000000000fee6	leaq	0x000983f3(%rip),%rsi
000000000000feed	movq	0x000985e4(%rip),%rdi
000000000000fef4	call	*0x000983e6(%rip)
000000000000fefa	movq	0x00094b6f(%rip),%rsi
000000000000ff01	movq	%rax,%rdi
000000000000ff04	call	*0x000741ce(%rip)
000000000000ff0a	movq	%rax,%r14
000000000000ff0d	movq	0x00094eb4(%rip),%rsi
000000000000ff14	movq	%r14,%rdi
000000000000ff17	movl	$0x00000001,%edx
000000000000ff1c	call	*0x000741b6(%rip)
000000000000ff22	movq	0x00094ea7(%rip),%rsi
000000000000ff29	movq	%rbx,%rdi
000000000000ff2c	call	*0x000741a6(%rip)
000000000000ff32	movq	0x00094e9f(%rip),%rsi
000000000000ff39	movq	%r14,%rdi
000000000000ff3c	movq	%rax,%rdx
000000000000ff3f	call	*0x00074193(%rip)
000000000000ff45	movq	0x00094e84(%rip),%rsi
000000000000ff4c	movq	%rbx,%rdi
000000000000ff4f	call	*0x00074183(%rip)
000000000000ff55	movq	0x00094e84(%rip),%rsi
000000000000ff5c	movq	%rax,%rdi
000000000000ff5f	movq	%r14,%rdx
000000000000ff62	movq	0x0007416f(%rip),%rax
000000000000ff69	popq	%rbx
000000000000ff6a	popq	%r14
000000000000ff6c	popq	%rbp
000000000000ff6d	jmp	*%rax
-[PBXGDB_CommandSequence interruptIfNeeded]:
000000000000ff6f	pushq	%rbp
000000000000ff70	movq	%rsp,%rbp
000000000000ff73	xorl	%eax,%eax
000000000000ff75	popq	%rbp
000000000000ff76	ret
000000000000ff77	nop
000000000000ff78	nop
-[PBXGDB_ThreadController enqueueSetupSharedLibrarySequence]:
000000000000ff79	pushq	%rbp
000000000000ff7a	movq	%rsp,%rbp
000000000000ff7d	pushq	%r14
000000000000ff7f	pushq	%rbx
000000000000ff80	movq	%rdi,%r14
000000000000ff83	movq	0x00098b7e(%rip),%rdi
000000000000ff8a	leaq	0x0009834f(%rip),%rsi
000000000000ff91	call	*0x00098349(%rip)
000000000000ff97	movq	0x00094ad2(%rip),%rsi
000000000000ff9e	movq	%rax,%rdi
000000000000ffa1	call	*0x00074131(%rip)
000000000000ffa7	movq	%rax,%rbx
000000000000ffaa	movq	0x00094b07(%rip),%rsi
000000000000ffb1	movq	%r14,%rdi
000000000000ffb4	call	*0x0007411e(%rip)
000000000000ffba	movq	0x00094e0f(%rip),%rsi
000000000000ffc1	movq	%rax,%rdi
000000000000ffc4	call	*0x0007410e(%rip)
000000000000ffca	movq	0x00094e07(%rip),%rsi
000000000000ffd1	movq	%rbx,%rdi
000000000000ffd4	movq	%rax,%rdx
000000000000ffd7	call	*0x000740fb(%rip)
000000000000ffdd	movq	0x00094ad4(%rip),%rsi
000000000000ffe4	movq	%r14,%rdi
000000000000ffe7	call	*0x000740eb(%rip)
000000000000ffed	movq	0x00094ddc(%rip),%rsi
000000000000fff4	movq	%rax,%rdi
000000000000fff7	call	*0x000740db(%rip)
000000000000fffd	movq	0x00094ddc(%rip),%rsi
0000000000010004	movq	%rax,%rdi
0000000000010007	movq	%rbx,%rdx
000000000001000a	movq	0x000740c7(%rip),%rax
0000000000010011	popq	%rbx
0000000000010012	popq	%r14
0000000000010014	popq	%rbp
0000000000010015	jmp	*%rax
-[PBXGDB_SetupSharedLibrarySequence interruptIfNeeded]:
0000000000010017	pushq	%rbp
0000000000010018	movq	%rsp,%rbp
000000000001001b	movl	$0x00000001,%eax
0000000000010020	popq	%rbp
0000000000010021	ret
0000000000010022	nop
0000000000010023	nop
0000000000010024	nop
0000000000010025	nop
0000000000010026	nop
0000000000010027	nop
0000000000010028	nop
0000000000010029	nop
000000000001002a	nop
-[PBXGDB_MIController interruptState]:
000000000001002b	pushq	%rbp
000000000001002c	movq	%rsp,%rbp
000000000001002f	movq	0x0009ebda(%rip),%rax
0000000000010036	movl	(%rdi,%rax),%eax
0000000000010039	popq	%rbp
000000000001003a	ret
000000000001003b	nop
000000000001003c	nop
000000000001003d	nop
-[PBXGDB_MIController interruptGDBOfType:]:
000000000001003e	pushq	%rbp
000000000001003f	movq	%rsp,%rbp
0000000000010042	pushq	%r14
0000000000010044	pushq	%rbx
0000000000010045	movl	%edx,%r14d
0000000000010048	movq	%rdi,%rbx
000000000001004b	movq	0x0009ebb6(%rip),%rax
0000000000010052	cmpl	$0x00,(%rbx,%rax)
0000000000010056	jne	0x00010065
0000000000010058	movq	0x0009ebb1(%rip),%rax
000000000001005f	cmpl	$0x00,(%rbx,%rax)
0000000000010063	je	0x0001006a
0000000000010065	popq	%rbx
0000000000010066	popq	%r14
0000000000010068	popq	%rbp
0000000000010069	ret
000000000001006a	movq	0x000962af(%rip),%rsi
0000000000010071	movq	%rbx,%rdi
0000000000010074	movl	$0x00000001,%edx
0000000000010079	call	*0x00074059(%rip)
000000000001007f	movq	0x00095c52(%rip),%rsi
0000000000010086	movq	%rbx,%rdi
0000000000010089	movl	%r14d,%edx
000000000001008c	call	*0x00074046(%rip)
0000000000010092	movq	0x0009627f(%rip),%rsi
0000000000010099	movq	%rbx,%rdi
000000000001009c	movq	0x00074035(%rip),%rax
00000000000100a3	popq	%rbx
00000000000100a4	popq	%r14
00000000000100a6	popq	%rbp
00000000000100a7	jmp	*%rax
00000000000100a9	nop
00000000000100aa	nop
-[PBXGDB_MIController setInterruptState:]:
00000000000100ab	pushq	%rbp
00000000000100ac	movq	%rsp,%rbp
00000000000100af	movq	0x0009eb5a(%rip),%rax
00000000000100b6	movl	%edx,(%rdi,%rax)
00000000000100b9	popq	%rbp
00000000000100ba	ret
-[PBXGDB_MIController setInterruptType:]:
00000000000100bb	pushq	%rbp
00000000000100bc	movq	%rsp,%rbp
00000000000100bf	movq	0x0009eb52(%rip),%rax
00000000000100c6	movl	%edx,(%rdi,%rax)
00000000000100c9	popq	%rbp
00000000000100ca	ret
00000000000100cb	nop
00000000000100cc	nop
00000000000100cd	nop
00000000000100ce	nop
00000000000100cf	nop
00000000000100d0	nop
00000000000100d1	nop
00000000000100d2	nop
00000000000100d3	nop
00000000000100d4	nop
00000000000100d5	nop
00000000000100d6	nop
00000000000100d7	nop
00000000000100d8	nop
00000000000100d9	nop
-[PBXGDB_MIController _performInterrupt]:
00000000000100da	pushq	%rbp
00000000000100db	movq	%rsp,%rbp
00000000000100de	pushq	%r14
00000000000100e0	pushq	%rbx
00000000000100e1	movq	%rdi,%rbx
00000000000100e4	movq	0x000949cd(%rip),%rsi
00000000000100eb	movq	0x00073fe6(%rip),%r14
00000000000100f2	call	*%r14
00000000000100f5	movq	0x0009620c(%rip),%rsi
00000000000100fc	movq	%rax,%rdi
00000000000100ff	call	*%r14
0000000000010102	cmpb	$0x01,%al
0000000000010104	jne	0x00010148
0000000000010106	movq	0x000949ab(%rip),%rsi
000000000001010d	movq	0x00073fc4(%rip),%r14
0000000000010114	movq	%rbx,%rdi
0000000000010117	call	*%r14
000000000001011a	movq	0x00094ce7(%rip),%rsi
0000000000010121	movq	%rax,%rdi
0000000000010124	call	*%r14
0000000000010127	movq	0x000950c2(%rip),%rsi
000000000001012e	movq	%rax,%rdi
0000000000010131	call	*%r14
0000000000010134	testl	%eax,%eax
0000000000010136	jle	0x00010165
0000000000010138	movl	%eax,%edi
000000000001013a	movl	$0x00000002,%esi
000000000001013f	popq	%rbx
0000000000010140	popq	%r14
0000000000010142	popq	%rbp
0000000000010143	jmp	0x0004e6b6	; symbol stub for: _kill
0000000000010148	movq	0x000961c1(%rip),%rsi
000000000001014f	leaq	0x000a1a62(%rip),%rdx
0000000000010156	movq	%rbx,%rdi
0000000000010159	xorl	%ecx,%ecx
000000000001015b	popq	%rbx
000000000001015c	popq	%r14
000000000001015e	popq	%rbp
000000000001015f	jmp	*0x00073f73(%rip)
0000000000010165	popq	%rbx
0000000000010166	popq	%r14
0000000000010168	popq	%rbp
0000000000010169	ret
-[PBXGDB_InferiorAutoStartDyldSequence interruptIfNeeded]:
000000000001016a	pushq	%rbp
000000000001016b	movq	%rsp,%rbp
000000000001016e	movl	$0x00000001,%eax
0000000000010173	popq	%rbp
0000000000010174	ret
0000000000010175	nop
0000000000010176	nop
0000000000010177	nop
0000000000010178	nop
0000000000010179	nop
000000000001017a	nop
000000000001017b	nop
000000000001017c	nop
000000000001017d	nop
000000000001017e	nop
000000000001017f	nop
0000000000010180	nop
0000000000010181	nop
-[PBXLSDebuggingSession addInitialBreakpointsToDebugger:]:
0000000000010182	pushq	%rbp
0000000000010183	movq	%rsp,%rbp
0000000000010186	pushq	%r14
0000000000010188	pushq	%rbx
0000000000010189	movq	%rdx,%r14
000000000001018c	movq	%rdi,%rbx
000000000001018f	movq	0x00094b5a(%rip),%rsi
0000000000010196	call	*0x00073f3c(%rip)
000000000001019c	movq	0x00096245(%rip),%rsi
00000000000101a3	movq	%rax,%rdi
00000000000101a6	call	*0x00073f2c(%rip)
00000000000101ac	movq	0x0009760d(%rip),%rsi
00000000000101b3	movq	%rax,%rdi
00000000000101b6	call	*0x00073f1c(%rip)
00000000000101bc	movq	0x0009762d(%rip),%rsi
00000000000101c3	movq	%rbx,%rdi
00000000000101c6	movq	%rax,%rdx
00000000000101c9	movq	%r14,%rcx
00000000000101cc	movq	0x00073f05(%rip),%rax
00000000000101d3	popq	%rbx
00000000000101d4	popq	%r14
00000000000101d6	popq	%rbp
00000000000101d7	jmp	*%rax
00000000000101d9	nop
00000000000101da	nop
00000000000101db	nop
00000000000101dc	nop
00000000000101dd	nop
00000000000101de	nop
00000000000101df	nop
00000000000101e0	nop
00000000000101e1	nop
00000000000101e2	nop
00000000000101e3	nop
00000000000101e4	nop
-[PBXLSDebuggingSession _addBreakpoints:forDebugger:]:
00000000000101e5	pushq	%rbp
00000000000101e6	movq	%rsp,%rbp
00000000000101e9	pushq	%r15
00000000000101eb	pushq	%r14
00000000000101ed	pushq	%r13
00000000000101ef	pushq	%r12
00000000000101f1	pushq	%rbx
00000000000101f2	subq	$0x000000d8,%rsp
00000000000101f9	movq	%rcx,0xffffff08(%rbp)
0000000000010200	movq	%rdx,%rbx
0000000000010203	movq	%rdi,%r15
0000000000010206	movq	0x00073e93(%rip),%rax
000000000001020d	movq	(%rax),%rax
0000000000010210	movq	%rax,0xd0(%rbp)
0000000000010214	xorps	%xmm0,%xmm0
0000000000010217	movaps	%xmm0,0xc0(%rbp)
000000000001021b	movaps	%xmm0,0xb0(%rbp)
000000000001021f	movaps	%xmm0,0xa0(%rbp)
0000000000010223	movaps	%xmm0,0x90(%rbp)
0000000000010227	leaq	0x00098152(%rip),%rsi
000000000001022e	leaq	0x90(%rbp),%rdx
0000000000010232	leaq	0xffffff10(%rbp),%rcx
0000000000010239	movq	%rbx,%rdi
000000000001023c	movl	$0x00000010,%r8d
0000000000010242	call	*0x00098138(%rip)
0000000000010248	movq	%rax,%r13
000000000001024b	testq	%r13,%r13
000000000001024e	je	0x000102bb
0000000000010250	movq	0xa0(%rbp),%rax
0000000000010254	movq	(%rax),%r12
0000000000010257	xorl	%r14d,%r14d
000000000001025a	movq	0xa0(%rbp),%rax
000000000001025e	cmpq	%r12,(%rax)
0000000000010261	je	0x0001026b
0000000000010263	movq	%rbx,%rdi
0000000000010266	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
000000000001026b	movq	0x98(%rbp),%rax
000000000001026f	movq	(%rax,%r14,8),%rdx
0000000000010273	movq	%r15,%rdi
0000000000010276	movq	0x0009756b(%rip),%rsi
000000000001027d	movq	0xffffff08(%rbp),%rcx
0000000000010284	call	*0x00073e4e(%rip)
000000000001028a	incq	%r14
000000000001028d	cmpq	%r13,%r14
0000000000010290	jb	0x0001025a
0000000000010292	movq	%rbx,%rdi
0000000000010295	leaq	0x000980e4(%rip),%rsi
000000000001029c	leaq	0x90(%rbp),%rdx
00000000000102a0	leaq	0xffffff10(%rbp),%rcx
00000000000102a7	movl	$0x00000010,%r8d
00000000000102ad	call	*0x000980cd(%rip)
00000000000102b3	movq	%rax,%r13
00000000000102b6	testq	%r13,%r13
00000000000102b9	jne	0x00010257
00000000000102bb	movq	0x00073dde(%rip),%rax
00000000000102c2	movq	(%rax),%rax
00000000000102c5	cmpq	0xd0(%rbp),%rax
00000000000102c9	jne	0x000102dd
00000000000102cb	addq	$0x000000d8,%rsp
00000000000102d2	popq	%rbx
00000000000102d3	popq	%r12
00000000000102d5	popq	%r13
00000000000102d7	popq	%r14
00000000000102d9	popq	%r15
00000000000102db	popq	%rbp
00000000000102dc	ret
00000000000102dd	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
00000000000102e2	nop
00000000000102e3	nop
00000000000102e4	nop
00000000000102e5	nop
00000000000102e6	nop
00000000000102e7	nop
00000000000102e8	nop
00000000000102e9	nop
00000000000102ea	nop
00000000000102eb	nop
00000000000102ec	nop
00000000000102ed	nop
00000000000102ee	nop
00000000000102ef	nop
-[PBXLSDebuggingSession _attemptCreateOfBreakpoint:forDebugger:]:
00000000000102f0	pushq	%rbp
00000000000102f1	movq	%rsp,%rbp
00000000000102f4	pushq	%r14
00000000000102f6	pushq	%rbx
00000000000102f7	movq	%rcx,%r14
00000000000102fa	movq	%rdx,%rbx
00000000000102fd	movq	0x000986ac(%rip),%rdi
0000000000010304	leaq	0x00098025(%rip),%rsi
000000000001030b	call	*0x0009801f(%rip)
0000000000010311	leaq	0x00098028(%rip),%rsi
0000000000010318	movq	%rbx,%rdi
000000000001031b	movq	%rax,%rdx
000000000001031e	call	*0x0009801c(%rip)
0000000000010324	testb	%al,%al
0000000000010326	je	0x00010360
0000000000010328	movq	0x000974e9(%rip),%rsi
000000000001032f	movq	%rbx,%rdi
0000000000010332	call	*0x00073da0(%rip)
0000000000010338	testq	%rax,%rax
000000000001033b	je	0x000103fb
0000000000010341	leaq	0x00098018(%rip),%rsi
0000000000010348	leaq	0x0009f5e9(%rip),%rdx
000000000001034f	movq	%rax,%rdi
0000000000010352	call	*0x00098008(%rip)
0000000000010358	testb	%al,%al
000000000001035a	jne	0x000103fb
0000000000010360	movq	0x000974b9(%rip),%rsi
0000000000010367	movq	%rbx,%rdi
000000000001036a	call	*0x00073d68(%rip)
0000000000010370	testb	%al,%al
0000000000010372	jne	0x000103cd
0000000000010374	movq	0x00098735(%rip),%rdi
000000000001037b	leaq	0x00097fae(%rip),%rsi
0000000000010382	call	*0x00097fa8(%rip)
0000000000010388	leaq	0x00097fb1(%rip),%rsi
000000000001038f	movq	%rbx,%rdi
0000000000010392	movq	%rax,%rdx
0000000000010395	call	*0x00097fa5(%rip)
000000000001039b	testb	%al,%al
000000000001039d	je	0x000103cd
000000000001039f	movq	0x00097482(%rip),%rsi
00000000000103a6	movq	%r14,%rdi
00000000000103a9	movq	%rbx,%rdx
00000000000103ac	call	*0x00073d26(%rip)
00000000000103b2	testb	%al,%al
00000000000103b4	je	0x000103fb
00000000000103b6	movq	0x00097473(%rip),%rsi
00000000000103bd	movq	%r14,%rdi
00000000000103c0	movq	%rbx,%rdx
00000000000103c3	popq	%rbx
00000000000103c4	popq	%r14
00000000000103c6	popq	%rbp
00000000000103c7	jmp	*0x00073d0b(%rip)
00000000000103cd	movq	0x00097454(%rip),%rsi
00000000000103d4	movq	%r14,%rdi
00000000000103d7	movq	%rbx,%rdx
00000000000103da	call	*0x00073cf8(%rip)
00000000000103e0	testb	%al,%al
00000000000103e2	je	0x000103fb
00000000000103e4	movq	0x0009744d(%rip),%rsi
00000000000103eb	movq	%r14,%rdi
00000000000103ee	movq	%rbx,%rdx
00000000000103f1	call	*0x00073ce1(%rip)
00000000000103f7	testb	%al,%al
00000000000103f9	je	0x00010400
00000000000103fb	popq	%rbx
00000000000103fc	popq	%r14
00000000000103fe	popq	%rbp
00000000000103ff	ret
0000000000010400	movq	0x00096001(%rip),%rsi
0000000000010407	movq	%r14,%rdi
000000000001040a	movq	%rbx,%rdx
000000000001040d	call	*0x00073cc5(%rip)
0000000000010413	movq	0x00097416(%rip),%rsi
000000000001041a	movq	%r14,%rdi
000000000001041d	movq	%rbx,%rdx
0000000000010420	movq	0x00073cb1(%rip),%rax
0000000000010427	popq	%rbx
0000000000010428	popq	%r14
000000000001042a	popq	%rbp
000000000001042b	jmp	*%rax
-[PBXGDB_Adaptor canManageBreakpoint:]:
000000000001042d	pushq	%rbp
000000000001042e	movq	%rsp,%rbp
0000000000010431	movl	$0x00000001,%eax
0000000000010436	popq	%rbp
0000000000010437	ret
-[PBXLSDebuggerAdaptor managesBreakpoint:]:
0000000000010438	pushq	%rbp
0000000000010439	movq	%rsp,%rbp
000000000001043c	pushq	%r14
000000000001043e	pushq	%rbx
000000000001043f	movq	%rdx,%rbx
0000000000010442	movq	0x0009735f(%rip),%rsi
0000000000010449	movq	0x00073c88(%rip),%r14
0000000000010450	call	*%r14
0000000000010453	movq	0x00094f5e(%rip),%rsi
000000000001045a	movq	%rax,%rdi
000000000001045d	movq	%rbx,%rdx
0000000000010460	call	*%r14
0000000000010463	movsbl	%al,%eax
0000000000010466	popq	%rbx
0000000000010467	popq	%r14
0000000000010469	popq	%rbp
000000000001046a	ret
-[PBXLSDebuggerAdaptor managedBreakpointsSet]:
000000000001046b	pushq	%rbp
000000000001046c	movq	%rsp,%rbp
000000000001046f	pushq	%rbx
0000000000010470	pushq	%rax
0000000000010471	movq	%rdi,%rbx
0000000000010474	movq	0x0009f00d(%rip),%rax
000000000001047b	movq	(%rbx,%rax),%rax
000000000001047f	testq	%rax,%rax
0000000000010482	jne	0x000104c5
0000000000010484	movq	0x000981dd(%rip),%rdi
000000000001048b	leaq	0x00097e4e(%rip),%rsi
0000000000010492	call	*0x00097e48(%rip)
0000000000010498	movq	0x000945d1(%rip),%rsi
000000000001049f	movq	%rax,%rdi
00000000000104a2	call	*0x00073c30(%rip)
00000000000104a8	movq	0x0009efd9(%rip),%rdx
00000000000104af	movq	%rax,%rdi
00000000000104b2	movq	%rbx,%rsi
00000000000104b5	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000104ba	movq	0x0009efc7(%rip),%rax
00000000000104c1	movq	(%rbx,%rax),%rax
00000000000104c5	addq	$0x08,%rsp
00000000000104c9	popq	%rbx
00000000000104ca	popq	%rbp
00000000000104cb	ret
-[PBXLSDebuggerAdaptor manageBreakpoint:]:
00000000000104cc	pushq	%rbp
00000000000104cd	movq	%rsp,%rbp
00000000000104d0	pushq	%rbx
00000000000104d1	pushq	%rax
00000000000104d2	movq	%rdx,%rbx
00000000000104d5	movq	0x000972cc(%rip),%rsi
00000000000104dc	call	*0x00073bf6(%rip)
00000000000104e2	leaq	0x00097e17(%rip),%rsi
00000000000104e9	movq	0x00097e10(%rip),%rcx
00000000000104f0	movq	%rax,%rdi
00000000000104f3	movq	%rbx,%rdx
00000000000104f6	addq	$0x08,%rsp
00000000000104fa	popq	%rbx
00000000000104fb	popq	%rbp
00000000000104fc	jmp	*%rcx
-[PBXGDB_Adaptor requestNewBreakpoint:]:
00000000000104fe	pushq	%rbp
00000000000104ff	movq	%rsp,%rbp
0000000000010502	movq	0x0009e17f(%rip),%rax
0000000000010509	movq	(%rdi,%rax),%rdi
000000000001050d	movq	0x00094c44(%rip),%rsi
0000000000010514	popq	%rbp
0000000000010515	jmp	*0x00073bbd(%rip)
-[PBXGDB_BreakpointController enqueueNewBreakpointSequenceForBreakpoint:]:
000000000001051b	pushq	%rbp
000000000001051c	movq	%rsp,%rbp
000000000001051f	pushq	%r15
0000000000010521	pushq	%r14
0000000000010523	pushq	%r13
0000000000010525	pushq	%r12
0000000000010527	pushq	%rbx
0000000000010528	subq	$0x00000108,%rsp
000000000001052f	movq	%rdx,%r12
0000000000010532	movq	%rdi,%r15
0000000000010535	movq	0x00073b64(%rip),%rax
000000000001053c	movq	(%rax),%rax
000000000001053f	movq	%rax,0xd0(%rbp)
0000000000010543	movq	0x000972d6(%rip),%rsi
000000000001054a	movq	%r12,%rdi
000000000001054d	call	*0x00073b85(%rip)
0000000000010553	testb	%al,%al
0000000000010555	je	0x00010841
000000000001055b	movq	0x0009726e(%rip),%rsi
0000000000010562	movq	0x000a6897(%rip),%rcx
0000000000010569	leaq	0x000a6890(%rip),%r9
0000000000010570	movq	0x00073b61(%rip),%r14
0000000000010577	movq	%r12,%rdi
000000000001057a	movq	%r15,%rdx
000000000001057d	movl	$0x00000007,%r8d
0000000000010583	call	*%r14
0000000000010586	movq	0x00098663(%rip),%rdi
000000000001058d	leaq	0x00097d4c(%rip),%rsi
0000000000010594	call	*0x00097d46(%rip)
000000000001059a	movq	0x000944cf(%rip),%rsi
00000000000105a1	movq	%rax,%rdi
00000000000105a4	call	*%r14
00000000000105a7	movq	%rax,%rbx
00000000000105aa	movq	%rbx,0xfffffef8(%rbp)
00000000000105b1	movq	0x000975e8(%rip),%rsi
00000000000105b8	movq	%rbx,%rdi
00000000000105bb	movq	%r12,%rdx
00000000000105be	call	*%r14
00000000000105c1	leaq	0x00097d38(%rip),%rsi
00000000000105c8	movq	0x0009ef61(%rip),%rax
00000000000105cf	movq	(%r15,%rax),%rdi
00000000000105d3	movq	%r15,0xfffffee0(%rbp)
00000000000105da	movq	%rbx,%rdx
00000000000105dd	call	*0x00097d1d(%rip)
00000000000105e3	leaq	0x00097d46(%rip),%rsi
00000000000105ea	movq	0x00098397(%rip),%rdi
00000000000105f1	call	*0x00097d39(%rip)
00000000000105f7	leaq	0x00097d42(%rip),%rsi
00000000000105fe	movq	%r12,%rdi
0000000000010601	movq	%r12,0xfffffed8(%rbp)
0000000000010608	movq	%rax,%rdx
000000000001060b	call	*0x00097d2f(%rip)
0000000000010611	testb	%al,%al
0000000000010613	je	0x0001079b
0000000000010619	movq	0x00097620(%rip),%rsi
0000000000010620	movq	0x00073ab1(%rip),%r14
0000000000010627	movq	0xfffffee0(%rbp),%rbx
000000000001062e	movq	%rbx,0xfffffee0(%rbp)
0000000000010635	movq	%rbx,%rdi
0000000000010638	movq	0xfffffed8(%rbp),%rdx
000000000001063f	call	*%r14
0000000000010642	movq	%rax,%r15
0000000000010645	movq	%r15,0xffffff08(%rbp)
000000000001064c	movq	0x00096415(%rip),%rsi
0000000000010653	movq	%rbx,%rdi
0000000000010656	call	*%r14
0000000000010659	movq	%rax,0xfffffef0(%rbp)
0000000000010660	xorps	%xmm0,%xmm0
0000000000010663	movaps	%xmm0,0xc0(%rbp)
0000000000010667	movaps	%xmm0,0xb0(%rbp)
000000000001066b	movaps	%xmm0,0xa0(%rbp)
000000000001066f	movaps	%xmm0,0x90(%rbp)
0000000000010673	leaq	0x00097d06(%rip),%rsi
000000000001067a	leaq	0x90(%rbp),%rdx
000000000001067e	leaq	0xffffff10(%rbp),%rcx
0000000000010685	movq	%r15,%rdi
0000000000010688	movl	$0x00000010,%r8d
000000000001068e	call	*0x00097cec(%rip)
0000000000010694	movq	%rax,0xffffff00(%rbp)
000000000001069b	testq	%rax,%rax
000000000001069e	je	0x0001079b
00000000000106a4	movq	0xa0(%rbp),%rax
00000000000106a8	movq	(%rax),%rax
00000000000106ab	movq	%rax,0xfffffee8(%rbp)
00000000000106b2	movq	0x00073a1f(%rip),%rbx
00000000000106b9	xorl	%r12d,%r12d
00000000000106bc	movq	0xa0(%rbp),%rax
00000000000106c0	movq	0xfffffee8(%rbp),%rcx
00000000000106c7	cmpq	%rcx,(%rax)
00000000000106ca	je	0x000106d8
00000000000106cc	movq	0xffffff08(%rbp),%rdi
00000000000106d3	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
00000000000106d8	movq	0x98(%rbp),%rax
00000000000106dc	movq	(%rax,%r12,8),%rdi
00000000000106e0	movq	0x00094849(%rip),%rsi
00000000000106e7	call	*%rbx
00000000000106e9	movq	%rax,%r15
00000000000106ec	movq	0xfffffef0(%rbp),%rdi
00000000000106f3	movq	0x00094c6e(%rip),%rsi
00000000000106fa	movq	%r15,%rdx
00000000000106fd	call	*%rbx
00000000000106ff	movq	%rax,%r14
0000000000010702	movq	0x000984df(%rip),%rdi
0000000000010709	leaq	0x00097bd0(%rip),%rsi
0000000000010710	call	*0x00097bca(%rip)
0000000000010716	movq	%rax,%rdi
0000000000010719	movq	0x00094350(%rip),%rsi
0000000000010720	call	*%rbx
0000000000010722	movq	%rax,%r13
0000000000010725	movq	%r13,%rdi
0000000000010728	movq	0x00097519(%rip),%rsi
000000000001072f	movq	%r15,%rdx
0000000000010732	call	*%rbx
0000000000010734	movq	%r13,%rdi
0000000000010737	movq	0x00097512(%rip),%rsi
000000000001073e	movq	%r14,%rdx
0000000000010741	call	*%rbx
0000000000010743	movq	0xfffffef8(%rbp),%rdi
000000000001074a	movq	0x000974b7(%rip),%rsi
0000000000010751	movq	%r13,%rdx
0000000000010754	call	*%rbx
0000000000010756	incq	%r12
0000000000010759	cmpq	0xffffff00(%rbp),%r12
0000000000010760	jb	0x000106bc
0000000000010766	movq	0xffffff08(%rbp),%rdi
000000000001076d	leaq	0x00097c0c(%rip),%rsi
0000000000010774	leaq	0x90(%rbp),%rdx
0000000000010778	leaq	0xffffff10(%rbp),%rcx
000000000001077f	movl	$0x00000010,%r8d
0000000000010785	call	*0x00097bf5(%rip)
000000000001078b	movq	%rax,0xffffff00(%rbp)
0000000000010792	testq	%rax,%rax
0000000000010795	jne	0x000106b9
000000000001079b	movq	0x000974b6(%rip),%rsi
00000000000107a2	movq	0x0007392f(%rip),%r14
00000000000107a9	movq	0xfffffef8(%rbp),%rdi
00000000000107b0	call	*%r14
00000000000107b3	leaq	0x00097b56(%rip),%rsi
00000000000107ba	movq	%rax,%rdi
00000000000107bd	call	*0x00097b4d(%rip)
00000000000107c3	movq	%rax,%rbx
00000000000107c6	movq	0x0009741b(%rip),%rsi
00000000000107cd	movq	0x000982dc(%rip),%rdi
00000000000107d4	movq	0xfffffed8(%rbp),%rdx
00000000000107db	call	*%r14
00000000000107de	testb	%al,%al
00000000000107e0	jne	0x00010821
00000000000107e2	testq	%rbx,%rbx
00000000000107e5	jne	0x00010821
00000000000107e7	movq	0x000983fa(%rip),%rdi
00000000000107ee	leaq	0x00097aeb(%rip),%rsi
00000000000107f5	call	*0x00097ae5(%rip)
00000000000107fb	movq	0x0009426e(%rip),%rsi
0000000000010802	movq	0x000738cf(%rip),%rbx
0000000000010809	movq	%rax,%rdi
000000000001080c	call	*%rbx
000000000001080e	movq	0x000973f3(%rip),%rsi
0000000000010815	movq	0xfffffef8(%rbp),%rdi
000000000001081c	movq	%rax,%rdx
000000000001081f	call	*%rbx
0000000000010821	movq	0x00097438(%rip),%rsi
0000000000010828	movq	0xfffffee0(%rbp),%rdi
000000000001082f	movq	0xfffffef8(%rbp),%rdx
0000000000010836	call	*0x0007389c(%rip)
000000000001083c	jmp	0x000108e8
0000000000010841	movq	0x00097390(%rip),%rsi
0000000000010848	movq	0x00098261(%rip),%rdi
000000000001084f	movq	%r12,%rdx
0000000000010852	call	*0x00073880(%rip)
0000000000010858	testb	%al,%al
000000000001085a	je	0x000108c4
000000000001085c	movq	0x0009737d(%rip),%rsi
0000000000010863	movq	%r12,%rdi
0000000000010866	call	*0x0007386c(%rip)
000000000001086c	testl	%eax,%eax
000000000001086e	jne	0x00010898
0000000000010870	movq	0x0009ecd1(%rip),%rax
0000000000010877	movq	(%r15,%rax),%rdi
000000000001087b	movq	0x0009449e(%rip),%rsi
0000000000010882	movq	0x0007384f(%rip),%r14
0000000000010889	movq	%r12,%rdx
000000000001088c	call	*%r14
000000000001088f	movq	0x0009735a(%rip),%rsi
0000000000010896	jmp	0x000108be
0000000000010898	movq	0x0009ecb1(%rip),%rax
000000000001089f	movq	(%r15,%rax),%rdi
00000000000108a3	movq	0x00094476(%rip),%rsi
00000000000108aa	movq	0x00073827(%rip),%r14
00000000000108b1	movq	%r12,%rdx
00000000000108b4	call	*%r14
00000000000108b7	movq	0x0009733a(%rip),%rsi
00000000000108be	movq	%r15,%rdi
00000000000108c1	call	*%r14
00000000000108c4	movq	0x000941ed(%rip),%rsi
00000000000108cb	movq	0x00073806(%rip),%r14
00000000000108d2	movq	%r15,%rdi
00000000000108d5	call	*%r14
00000000000108d8	movq	0x00095f01(%rip),%rsi
00000000000108df	movq	%rax,%rdi
00000000000108e2	movq	%r12,%rdx
00000000000108e5	call	*%r14
00000000000108e8	movq	0x000737b1(%rip),%rax
00000000000108ef	movq	(%rax),%rax
00000000000108f2	cmpq	0xd0(%rbp),%rax
00000000000108f6	jne	0x0001090a
00000000000108f8	addq	$0x00000108,%rsp
00000000000108ff	popq	%rbx
0000000000010900	popq	%r12
0000000000010902	popq	%r13
0000000000010904	popq	%r14
0000000000010906	popq	%r15
0000000000010908	popq	%rbp
0000000000010909	ret
000000000001090a	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
-[PBXGDB_BreakpointController observeValueForKeyPath:ofObject:change:context:]:
000000000001090f	pushq	%rbp
0000000000010910	movq	%rsp,%rbp
0000000000010913	subq	$0x10,%rsp
0000000000010917	leaq	0x000a64e2(%rip),%rax
000000000001091e	cmpq	%rax,%r9
0000000000010921	jne	0x00010935
0000000000010923	movq	0x000973ee(%rip),%rsi
000000000001092a	movq	%r8,%rdx
000000000001092d	call	*0x000737a5(%rip)
0000000000010933	jmp	0x00010954
0000000000010935	movq	%rdi,0xf0(%rbp)
0000000000010939	movq	0x00098720(%rip),%rax
0000000000010940	movq	%rax,0xf8(%rbp)
0000000000010944	movq	0x00096f4d(%rip),%rsi
000000000001094b	leaq	0xf0(%rbp),%rdi
000000000001094f	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000010954	addq	$0x10,%rsp
0000000000010958	popq	%rbp
0000000000010959	ret
-[PBXGDB_BreakpointController _handleActionsAddedOrRemoved:forBreakpoint:]:
000000000001095a	pushq	%rbp
000000000001095b	movq	%rsp,%rbp
000000000001095e	pushq	%r15
0000000000010960	pushq	%r14
0000000000010962	pushq	%r13
0000000000010964	pushq	%r12
0000000000010966	pushq	%rbx
0000000000010967	subq	$0x000001a8,%rsp
000000000001096e	movq	%rcx,0xfffffe38(%rbp)
0000000000010975	movq	%rdx,%rbx
0000000000010978	movq	%rdi,%r14
000000000001097b	movq	0x0007371e(%rip),%rax
0000000000010982	movq	(%rax),%rax
0000000000010985	movq	%rax,0xd0(%rbp)
0000000000010989	movq	0x00073698(%rip),%rax
0000000000010990	movq	(%rax),%rdx
0000000000010993	leaq	0x000979b6(%rip),%r13
000000000001099a	movq	%rbx,%rdi
000000000001099d	movq	%r13,%rsi
00000000000109a0	call	*0x000979aa(%rip)
00000000000109a6	movq	%rax,%r15
00000000000109a9	movq	%r15,0xfffffe40(%rbp)
00000000000109b0	movq	0x00073681(%rip),%rax
00000000000109b7	movq	(%rax),%rdx
00000000000109ba	movq	%rbx,%rdi
00000000000109bd	movq	%r13,%rsi
00000000000109c0	call	*0x0009798a(%rip)
00000000000109c6	movq	%rax,0xfffffe48(%rbp)
00000000000109cd	leaq	0x000979ac(%rip),%rsi
00000000000109d4	leaq	0x90(%rbp),%rdx
00000000000109d8	leaq	0xffffff10(%rbp),%rcx
00000000000109df	xorps	%xmm0,%xmm0
00000000000109e2	movaps	%xmm0,0xc0(%rbp)
00000000000109e6	movaps	%xmm0,0xb0(%rbp)
00000000000109ea	movaps	%xmm0,0xa0(%rbp)
00000000000109ee	movaps	%xmm0,0x90(%rbp)
00000000000109f2	movq	%r15,%rdi
00000000000109f5	movl	$0x00000010,%r8d
00000000000109fb	call	*0x0009797f(%rip)
0000000000010a01	movq	%rax,%r13
0000000000010a04	testq	%r13,%r13
0000000000010a07	je	0x00010aee
0000000000010a0d	movq	0xa0(%rbp),%rax
0000000000010a11	movq	(%rax),%rax
0000000000010a14	movq	%rax,0xfffffe30(%rbp)
0000000000010a1b	movq	0x000736b6(%rip),%r12
0000000000010a22	xorl	%r15d,%r15d
0000000000010a25	movq	0xa0(%rbp),%rax
0000000000010a29	movq	0xfffffe30(%rbp),%rcx
0000000000010a30	cmpq	%rcx,(%rax)
0000000000010a33	je	0x00010a41
0000000000010a35	movq	0xfffffe40(%rbp),%rdi
0000000000010a3c	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
0000000000010a41	movq	0x98(%rbp),%rax
0000000000010a45	movq	(%rax,%r15,8),%rbx
0000000000010a49	movq	0x00098078(%rip),%rdi
0000000000010a50	leaq	0x000978d9(%rip),%rsi
0000000000010a57	call	*0x000978d3(%rip)
0000000000010a5d	movq	%rbx,%rdi
0000000000010a60	leaq	0x000978d9(%rip),%rsi
0000000000010a67	movq	%rax,%rdx
0000000000010a6a	call	*0x000978d0(%rip)
0000000000010a70	testb	%al,%al
0000000000010a72	je	0x00010ab1
0000000000010a74	movq	%r14,%rdi
0000000000010a77	movq	0x000972aa(%rip),%rsi
0000000000010a7e	movq	0x0009729b(%rip),%rdx
0000000000010a85	leaq	0x000a57cc(%rip),%rcx
0000000000010a8c	movq	%rbx,%r8
0000000000010a8f	call	*%r12
0000000000010a92	movq	0x0009eaa7(%rip),%rax
0000000000010a99	movq	(%r14,%rax),%rdi
0000000000010a9d	movq	0x0009428c(%rip),%rsi
0000000000010aa4	movq	0xfffffe38(%rbp),%rdx
0000000000010aab	movq	%rbx,%rcx
0000000000010aae	call	*%r12
0000000000010ab1	incq	%r15
0000000000010ab4	cmpq	%r13,%r15
0000000000010ab7	jb	0x00010a25
0000000000010abd	movq	0xfffffe40(%rbp),%rdi
0000000000010ac4	leaq	0x000978b5(%rip),%rsi
0000000000010acb	leaq	0x90(%rbp),%rdx
0000000000010acf	leaq	0xffffff10(%rbp),%rcx
0000000000010ad6	movl	$0x00000010,%r8d
0000000000010adc	call	*0x0009789e(%rip)
0000000000010ae2	movq	%rax,%r13
0000000000010ae5	testq	%r13,%r13
0000000000010ae8	jne	0x00010a22
0000000000010aee	xorps	%xmm0,%xmm0
0000000000010af1	movaps	%xmm0,0xffffff00(%rbp)
0000000000010af8	movaps	%xmm0,0xfffffef0(%rbp)
0000000000010aff	movaps	%xmm0,0xfffffee0(%rbp)
0000000000010b06	movaps	%xmm0,0xfffffed0(%rbp)
0000000000010b0d	leaq	0x0009786c(%rip),%rsi
0000000000010b14	leaq	0xfffffed0(%rbp),%rdx
0000000000010b1b	leaq	0xfffffe50(%rbp),%rcx
0000000000010b22	movq	0xfffffe48(%rbp),%rdi
0000000000010b29	movl	$0x00000010,%r8d
0000000000010b2f	call	*0x0009784b(%rip)
0000000000010b35	movq	%rax,%rbx
0000000000010b38	testq	%rbx,%rbx
0000000000010b3b	je	0x00010bc1
0000000000010b41	movq	0xfffffee0(%rbp),%rax
0000000000010b48	movq	(%rax),%r13
0000000000010b4b	movq	0x0009e9ee(%rip),%r12
0000000000010b52	xorl	%r15d,%r15d
0000000000010b55	movq	0xfffffee0(%rbp),%rax
0000000000010b5c	cmpq	%r13,(%rax)
0000000000010b5f	je	0x00010b6d
0000000000010b61	movq	0xfffffe48(%rbp),%rdi
0000000000010b68	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
0000000000010b6d	movq	(%r14,%r12),%rdi
0000000000010b71	movq	0xfffffed8(%rbp),%rax
0000000000010b78	movq	(%rax,%r15,8),%rdx
0000000000010b7c	movq	0x000947dd(%rip),%rsi
0000000000010b83	call	*0x0007354f(%rip)
0000000000010b89	incq	%r15
0000000000010b8c	cmpq	%rbx,%r15
0000000000010b8f	jb	0x00010b55
0000000000010b91	movq	0xfffffe48(%rbp),%rdi
0000000000010b98	leaq	0x000977e1(%rip),%rsi
0000000000010b9f	leaq	0xfffffed0(%rbp),%rdx
0000000000010ba6	leaq	0xfffffe50(%rbp),%rcx
0000000000010bad	movl	$0x00000010,%r8d
0000000000010bb3	call	*0x000977c7(%rip)
0000000000010bb9	movq	%rax,%rbx
0000000000010bbc	testq	%rbx,%rbx
0000000000010bbf	jne	0x00010b52
0000000000010bc1	movq	0x000734d8(%rip),%rax
0000000000010bc8	movq	(%rax),%rax
0000000000010bcb	cmpq	0xd0(%rbp),%rax
0000000000010bcf	jne	0x00010be3
0000000000010bd1	addq	$0x000001a8,%rsp
0000000000010bd8	popq	%rbx
0000000000010bd9	popq	%r12
0000000000010bdb	popq	%r13
0000000000010bdd	popq	%r14
0000000000010bdf	popq	%r15
0000000000010be1	popq	%rbp
0000000000010be2	ret
0000000000010be3	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
-[PBXGDB_BreakpointInfo init]:
0000000000010be8	pushq	%rbp
0000000000010be9	movq	%rsp,%rbp
0000000000010bec	pushq	%rbx
0000000000010bed	subq	$0x18,%rsp
0000000000010bf1	movq	%rdi,0xe8(%rbp)
0000000000010bf5	movq	0x000984a4(%rip),%rax
0000000000010bfc	movq	%rax,0xf0(%rbp)
0000000000010c00	movq	0x00093e69(%rip),%rsi
0000000000010c07	leaq	0xe8(%rbp),%rdi
0000000000010c0b	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000010c10	movq	%rax,%rbx
0000000000010c13	testq	%rbx,%rbx
0000000000010c16	je	0x00010c5d
0000000000010c18	movq	0x00097841(%rip),%rdi
0000000000010c1f	leaq	0x000976ba(%rip),%rsi
0000000000010c26	call	*0x000976b4(%rip)
0000000000010c2c	movq	0x00093e3d(%rip),%rsi
0000000000010c33	movq	%rax,%rdi
0000000000010c36	call	*0x0007349c(%rip)
0000000000010c3c	movq	0x0009e9ad(%rip),%rdx
0000000000010c43	movq	%rax,%rdi
0000000000010c46	movq	%rbx,%rsi
0000000000010c49	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000010c4e	movq	0x0009e9a3(%rip),%rax
0000000000010c55	movq	$0x00000000,(%rbx,%rax)
0000000000010c5d	movq	%rbx,%rax
0000000000010c60	addq	$0x18,%rsp
0000000000010c64	popq	%rbx
0000000000010c65	popq	%rbp
0000000000010c66	ret
-[PBXGDB_BreakpointInfo setBreakpoint:]:
0000000000010c67	pushq	%rbp
0000000000010c68	movq	%rsp,%rbp
0000000000010c6b	movq	%rdx,%rax
0000000000010c6e	movq	%rdi,%rcx
0000000000010c71	movq	0x0009e988(%rip),%rdx
0000000000010c78	movq	%rax,%rdi
0000000000010c7b	movq	%rcx,%rsi
0000000000010c7e	popq	%rbp
0000000000010c7f	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_BreakpointController pathsOfProductsThatIncludeBreakpoint:]:
0000000000010c84	pushq	%rbp
0000000000010c85	movq	%rsp,%rbp
0000000000010c88	pushq	%r15
0000000000010c8a	pushq	%r14
0000000000010c8c	pushq	%rbx
0000000000010c8d	pushq	%rax
0000000000010c8e	movq	%rdx,%r14
0000000000010c91	movq	0x00093e20(%rip),%rsi
0000000000010c98	movq	0x00073439(%rip),%r15
0000000000010c9f	call	*%r15
0000000000010ca2	movq	0x0009403f(%rip),%rsi
0000000000010ca9	movq	%rax,%rdi
0000000000010cac	call	*%r15
0000000000010caf	movq	0x0009403a(%rip),%rsi
0000000000010cb6	movq	%rax,%rdi
0000000000010cb9	call	*%r15
0000000000010cbc	movq	%rax,%rbx
0000000000010cbf	movq	0x00096f5a(%rip),%rsi
0000000000010cc6	movq	%rbx,%rdi
0000000000010cc9	call	*%r15
0000000000010ccc	testb	%al,%al
0000000000010cce	jne	0x00010cdd
0000000000010cd0	xorl	%eax,%eax
0000000000010cd2	addq	$0x08,%rsp
0000000000010cd6	popq	%rbx
0000000000010cd7	popq	%r14
0000000000010cd9	popq	%r15
0000000000010cdb	popq	%rbp
0000000000010cdc	ret
0000000000010cdd	movq	0x00095704(%rip),%rsi
0000000000010ce4	movq	%rbx,%rdi
0000000000010ce7	call	*0x000733eb(%rip)
0000000000010ced	movq	0x00096f34(%rip),%rsi
0000000000010cf4	movq	%rax,%rdi
0000000000010cf7	movq	%r14,%rdx
0000000000010cfa	movq	0x000733d7(%rip),%rax
0000000000010d01	addq	$0x08,%rsp
0000000000010d05	popq	%rbx
0000000000010d06	popq	%r14
0000000000010d08	popq	%r15
0000000000010d0a	popq	%rbp
0000000000010d0b	jmp	*%rax
-[PBXGDB_BreakpointController _imageController]:
0000000000010d0d	pushq	%rbp
0000000000010d0e	movq	%rsp,%rbp
0000000000010d11	movq	0x00093da0(%rip),%rsi
0000000000010d18	call	*0x000733ba(%rip)
0000000000010d1e	movq	0x000940d3(%rip),%rsi
0000000000010d25	movq	%rax,%rdi
0000000000010d28	movq	0x000733a9(%rip),%rax
0000000000010d2f	popq	%rbp
0000000000010d30	jmp	*%rax
-[PBXGDB_BreakpointInfo gdbContexts]:
0000000000010d32	pushq	%rbp
0000000000010d33	movq	%rsp,%rbp
0000000000010d36	movq	0x0009e8b3(%rip),%rax
0000000000010d3d	movq	(%rdi,%rax),%rax
0000000000010d41	popq	%rbp
0000000000010d42	ret
-[PBXGDB_BreakpointGDBContext init]:
0000000000010d43	pushq	%rbp
0000000000010d44	movq	%rsp,%rbp
0000000000010d47	subq	$0x10,%rsp
0000000000010d4b	movq	%rdi,0xf0(%rbp)
0000000000010d4f	movq	0x00098352(%rip),%rax
0000000000010d56	movq	%rax,0xf8(%rbp)
0000000000010d5a	movq	0x00093d0f(%rip),%rsi
0000000000010d61	leaq	0xf0(%rbp),%rdi
0000000000010d65	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000010d6a	testq	%rax,%rax
0000000000010d6d	je	0x00010d8c
0000000000010d6f	movq	0x0009e892(%rip),%rcx
0000000000010d76	movl	$0x00000000,(%rax,%rcx)
0000000000010d7d	movq	0x0009e88c(%rip),%rcx
0000000000010d84	movq	$0xffffffff,(%rax,%rcx)
0000000000010d8c	addq	$0x10,%rsp
0000000000010d90	popq	%rbp
0000000000010d91	ret
-[PBXGDB_BreakpointInfo addGDBContext:]:
0000000000010d92	pushq	%rbp
0000000000010d93	movq	%rsp,%rbp
0000000000010d96	pushq	%r14
0000000000010d98	pushq	%rbx
0000000000010d99	movq	%rdx,%r14
0000000000010d9c	movq	%rdi,%rbx
0000000000010d9f	movq	0x00096eca(%rip),%rsi
0000000000010da6	movq	%r14,%rdi
0000000000010da9	call	*0x00073329(%rip)
0000000000010daf	testl	%eax,%eax
0000000000010db1	jne	0x00010dc3
0000000000010db3	movq	0x000970d6(%rip),%rsi
0000000000010dba	movq	%rbx,%rdi
0000000000010dbd	call	*0x00073315(%rip)
0000000000010dc3	movq	0x0009e826(%rip),%rax
0000000000010dca	movq	(%rbx,%rax),%rdi
0000000000010dce	movq	0x0009752b(%rip),%rax
0000000000010dd5	leaq	0x00097524(%rip),%rsi
0000000000010ddc	movq	%r14,%rdx
0000000000010ddf	popq	%rbx
0000000000010de0	popq	%r14
0000000000010de2	popq	%rbp
0000000000010de3	jmp	*%rax
-[PBXGDB_BreakpointGDBContext breakpointStatus]:
0000000000010de5	pushq	%rbp
0000000000010de6	movq	%rsp,%rbp
0000000000010de9	movq	0x0009e818(%rip),%rax
0000000000010df0	movl	(%rdi,%rax),%eax
0000000000010df3	popq	%rbp
0000000000010df4	ret
-[PBXGDB_BreakpointInfo incrementUnresolvedCount]:
0000000000010df5	pushq	%rbp
0000000000010df6	movq	%rsp,%rbp
0000000000010df9	movq	0x0009e7f8(%rip),%rax
0000000000010e00	incq	(%rdi,%rax)
0000000000010e04	popq	%rbp
0000000000010e05	ret
-[PBXGDB_BreakpointController _enqueueNewBreakpointSequenceForBreakpointInfo:]:
0000000000010e06	pushq	%rbp
0000000000010e07	movq	%rsp,%rbp
0000000000010e0a	pushq	%r15
0000000000010e0c	pushq	%r14
0000000000010e0e	pushq	%r13
0000000000010e10	pushq	%r12
0000000000010e12	pushq	%rbx
0000000000010e13	pushq	%rax
0000000000010e14	movq	%rdx,%r14
0000000000010e17	movq	%rdi,%r12
0000000000010e1a	movq	0x00097c8f(%rip),%rbx
0000000000010e21	movq	0x00096d60(%rip),%rsi
0000000000010e28	movq	0x000732a9(%rip),%r15
0000000000010e2f	movq	%r14,%rdi
0000000000010e32	call	*%r15
0000000000010e35	movq	0x00096d9c(%rip),%rsi
0000000000010e3c	movq	%rbx,%rdi
0000000000010e3f	movq	%rax,%rdx
0000000000010e42	call	*%r15
0000000000010e45	testb	%al,%al
0000000000010e47	je	0x00010f03
0000000000010e4d	movq	0x00096d34(%rip),%rsi
0000000000010e54	movq	0x0007327d(%rip),%rbx
0000000000010e5b	movq	%r14,%rdi
0000000000010e5e	call	*%rbx
0000000000010e60	movq	%rax,%r15
0000000000010e63	movq	0x00096d76(%rip),%rsi
0000000000010e6a	movq	%r15,%rdi
0000000000010e6d	call	*%rbx
0000000000010e6f	testl	%eax,%eax
0000000000010e71	jne	0x00010eb2
0000000000010e73	movq	0x0009e6ce(%rip),%rax
0000000000010e7a	movq	(%r12,%rax),%rdi
0000000000010e7e	testq	%rdi,%rdi
0000000000010e81	jne	0x00010ef3
0000000000010e83	movq	0x000945a6(%rip),%rsi
0000000000010e8a	movq	0x000975cf(%rip),%rdi
0000000000010e91	call	*0x00073241(%rip)
0000000000010e97	movq	0x0009e6aa(%rip),%rdx
0000000000010e9e	movq	%rax,%rdi
0000000000010ea1	movq	%r12,%rsi
0000000000010ea4	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000010ea9	movq	0x0009e698(%rip),%rax
0000000000010eb0	jmp	0x00010eef
0000000000010eb2	movq	0x0009e697(%rip),%rax
0000000000010eb9	movq	(%r12,%rax),%rdi
0000000000010ebd	testq	%rdi,%rdi
0000000000010ec0	jne	0x00010ef3
0000000000010ec2	movq	0x00094567(%rip),%rsi
0000000000010ec9	movq	0x00097590(%rip),%rdi
0000000000010ed0	call	*0x00073202(%rip)
0000000000010ed6	movq	0x0009e673(%rip),%rdx
0000000000010edd	movq	%rax,%rdi
0000000000010ee0	movq	%r12,%rsi
0000000000010ee3	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000010ee8	movq	0x0009e661(%rip),%rax
0000000000010eef	movq	(%r12,%rax),%rdi
0000000000010ef3	leaq	0x00097406(%rip),%rsi
0000000000010efa	movq	%r15,%rdx
0000000000010efd	call	*0x000973fd(%rip)
0000000000010f03	movq	0x00096c7e(%rip),%rsi
0000000000010f0a	movq	0x000731c7(%rip),%r13
0000000000010f11	movq	%r14,%rdi
0000000000010f14	call	*%r13
0000000000010f17	movq	%rax,%rbx
0000000000010f1a	movq	0x00097a07(%rip),%rdi
0000000000010f21	leaq	0x00097408(%rip),%rsi
0000000000010f28	call	*0x00097402(%rip)
0000000000010f2e	leaq	0x0009740b(%rip),%rsi
0000000000010f35	movq	%rbx,%rdi
0000000000010f38	movq	%rax,%rdx
0000000000010f3b	call	*0x000973ff(%rip)
0000000000010f41	movb	%al,%r15b
0000000000010f44	movq	0x00097b65(%rip),%rbx
0000000000010f4b	movq	0x00096c36(%rip),%rsi
0000000000010f52	movq	%r14,%rdi
0000000000010f55	call	*%r13
0000000000010f58	movq	0x00096c89(%rip),%rsi
0000000000010f5f	movq	%rbx,%rdi
0000000000010f62	movq	%rax,%rdx
0000000000010f65	call	*%r13
0000000000010f68	testb	%r15b,%r15b
0000000000010f6b	sete	%cl
0000000000010f6e	testb	%al,%al
0000000000010f70	jne	0x00010fea
0000000000010f72	cmpb	$0x01,%cl
0000000000010f75	jne	0x00010fea
0000000000010f77	movq	0x00097a2a(%rip),%rdi
0000000000010f7e	leaq	0x0009735b(%rip),%rsi
0000000000010f85	call	*0x00097355(%rip)
0000000000010f8b	movq	0x00093ade(%rip),%rsi
0000000000010f92	movq	0x0007313f(%rip),%r13
0000000000010f99	movq	%rax,%rdi
0000000000010f9c	call	*%r13
0000000000010f9f	movq	%rax,%rbx
0000000000010fa2	movq	0x0009e5af(%rip),%rax
0000000000010fa9	incq	(%r12,%rax)
0000000000010fad	movq	0x00096c04(%rip),%rsi
0000000000010fb4	movq	%r12,%rdi
0000000000010fb7	movq	%rbx,%rdx
0000000000010fba	movq	%r14,%rcx
0000000000010fbd	call	*%r13
0000000000010fc0	movq	0x00093af1(%rip),%rsi
0000000000010fc7	movq	%r12,%rdi
0000000000010fca	call	*%r13
0000000000010fcd	movq	0x00093dfc(%rip),%rsi
0000000000010fd4	movq	%rax,%rdi
0000000000010fd7	call	*%r13
0000000000010fda	movq	0x00093dff(%rip),%rsi
0000000000010fe1	movq	%rax,%rdi
0000000000010fe4	movq	%rbx,%rdx
0000000000010fe7	call	*%r13
0000000000010fea	testb	%r15b,%r15b
0000000000010fed	je	0x000110a6
0000000000010ff3	movq	0x00096b8e(%rip),%rsi
0000000000010ffa	movq	0x000730d7(%rip),%rbx
0000000000011001	movq	%r14,%rdi
0000000000011004	call	*%rbx
0000000000011006	movq	0x0009758b(%rip),%r15
000000000001100d	movq	0x0009542c(%rip),%rsi
0000000000011014	movq	%rax,%rdi
0000000000011017	call	*%rbx
0000000000011019	movq	0x00094188(%rip),%rsi
0000000000011020	movq	%r15,%rdi
0000000000011023	movq	%rax,%rdx
0000000000011026	call	*%rbx
0000000000011028	movq	%rax,%r15
000000000001102b	movq	0x00096b86(%rip),%rsi
0000000000011032	movq	%r12,%rdi
0000000000011035	movq	%r15,%rdx
0000000000011038	movq	%r14,%rcx
000000000001103b	call	*%rbx
000000000001103d	movq	0x00096b44(%rip),%rsi
0000000000011044	movq	%r14,%rdi
0000000000011047	call	*%rbx
0000000000011049	movq	0x00096b50(%rip),%rsi
0000000000011050	movq	%r15,%rdi
0000000000011053	movq	%rax,%rdx
0000000000011056	call	*%rbx
0000000000011058	movq	0x00093a59(%rip),%rsi
000000000001105f	movq	%r12,%rdi
0000000000011062	call	*%rbx
0000000000011064	movq	0x00093d65(%rip),%rsi
000000000001106b	movq	%rax,%rdi
000000000001106e	call	*%rbx
0000000000011070	movq	0x00093d61(%rip),%rsi
0000000000011077	movq	%r15,%rdi
000000000001107a	movq	%rax,%rdx
000000000001107d	call	*%rbx
000000000001107f	movq	0x00093a32(%rip),%rsi
0000000000011086	movq	%r12,%rdi
0000000000011089	call	*%rbx
000000000001108b	movq	0x00093d3e(%rip),%rsi
0000000000011092	movq	%rax,%rdi
0000000000011095	call	*%rbx
0000000000011097	movq	0x00093d42(%rip),%rsi
000000000001109e	movq	%rax,%rdi
00000000000110a1	movq	%r15,%rdx
00000000000110a4	call	*%rbx
00000000000110a6	movq	0x00097a03(%rip),%rbx
00000000000110ad	movq	0x00096ad4(%rip),%rsi
00000000000110b4	movq	0x0007301d(%rip),%r15
00000000000110bb	movq	%r14,%rdi
00000000000110be	call	*%r15
00000000000110c1	movq	0x00096b10(%rip),%rsi
00000000000110c8	movq	%rbx,%rdi
00000000000110cb	movq	%rax,%rdx
00000000000110ce	call	*%r15
00000000000110d1	testb	%al,%al
00000000000110d3	je	0x0001111f
00000000000110d5	movq	0x00096aac(%rip),%rsi
00000000000110dc	movq	0x00072ff5(%rip),%rbx
00000000000110e3	movq	%r14,%rdi
00000000000110e6	call	*%rbx
00000000000110e8	movq	0x00096af1(%rip),%rsi
00000000000110ef	movq	%rax,%rdi
00000000000110f2	call	*%rbx
00000000000110f4	testl	%eax,%eax
00000000000110f6	jne	0x00011116
00000000000110f8	movq	0x00096af1(%rip),%rsi
00000000000110ff	movq	%r12,%rdi
0000000000011102	addq	$0x08,%rsp
0000000000011106	popq	%rbx
0000000000011107	popq	%r12
0000000000011109	popq	%r13
000000000001110b	popq	%r14
000000000001110d	popq	%r15
000000000001110f	popq	%rbp
0000000000011110	jmp	*0x00072fc2(%rip)
0000000000011116	movq	0x00096adb(%rip),%rsi
000000000001111d	jmp	0x000110ff
000000000001111f	addq	$0x08,%rsp
0000000000011123	popq	%rbx
0000000000011124	popq	%r12
0000000000011126	popq	%r13
0000000000011128	popq	%r14
000000000001112a	popq	%r15
000000000001112c	popq	%rbp
000000000001112d	ret
-[PBXGDB_BreakpointInfo breakpoint]:
000000000001112e	pushq	%rbp
000000000001112f	movq	%rsp,%rbp
0000000000011132	movq	0x0009e4c7(%rip),%rax
0000000000011139	movq	(%rdi,%rax),%rax
000000000001113d	popq	%rbp
000000000001113e	ret
-[PBXGDB_BreakpointController _initSequence:breakpointInfo:]:
000000000001113f	pushq	%rbp
0000000000011140	movq	%rsp,%rbp
0000000000011143	pushq	%r15
0000000000011145	pushq	%r14
0000000000011147	pushq	%rbx
0000000000011148	pushq	%rax
0000000000011149	movq	%rcx,%r14
000000000001114c	movq	%rdx,%rbx
000000000001114f	movq	%rdi,%r15
0000000000011152	movq	0x0009395f(%rip),%rsi
0000000000011159	call	*0x00072f79(%rip)
000000000001115f	movq	0x00093c6a(%rip),%rsi
0000000000011166	movq	%rax,%rdi
0000000000011169	call	*0x00072f69(%rip)
000000000001116f	movq	0x00093c62(%rip),%rsi
0000000000011176	movq	%rbx,%rdi
0000000000011179	movq	%rax,%rdx
000000000001117c	call	*0x00072f56(%rip)
0000000000011182	movq	0x00096a07(%rip),%rsi
0000000000011189	movq	%rbx,%rdi
000000000001118c	movq	%r15,%rdx
000000000001118f	call	*0x00072f43(%rip)
0000000000011195	movq	0x000969fc(%rip),%rsi
000000000001119c	movq	%rbx,%rdi
000000000001119f	movq	%r14,%rdx
00000000000111a2	movq	0x00072f2f(%rip),%rax
00000000000111a9	addq	$0x08,%rsp
00000000000111ad	popq	%rbx
00000000000111ae	popq	%r14
00000000000111b0	popq	%r15
00000000000111b2	popq	%rbp
00000000000111b3	jmp	*%rax
-[PBXGDB_BaseBreakpointSequence setBreakpointController:]:
00000000000111b5	pushq	%rbp
00000000000111b6	movq	%rsp,%rbp
00000000000111b9	movq	%rdx,%rax
00000000000111bc	movq	%rdi,%rcx
00000000000111bf	movq	0x0009e39a(%rip),%rdx
00000000000111c6	movq	%rax,%rdi
00000000000111c9	movq	%rcx,%rsi
00000000000111cc	popq	%rbp
00000000000111cd	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_BaseBreakpointSequence setBreakpointInfo:]:
00000000000111d2	pushq	%rbp
00000000000111d3	movq	%rsp,%rbp
00000000000111d6	movq	%rdx,%rax
00000000000111d9	movq	%rdi,%rcx
00000000000111dc	movq	0x0009e385(%rip),%rdx
00000000000111e3	movq	%rax,%rdi
00000000000111e6	movq	%rcx,%rsi
00000000000111e9	popq	%rbp
00000000000111ea	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_BaseBreakpointSequence interruptIfNeeded]:
00000000000111ef	pushq	%rbp
00000000000111f0	movq	%rsp,%rbp
00000000000111f3	movl	$0x00000001,%eax
00000000000111f8	popq	%rbp
00000000000111f9	ret
-[PBXLSDebuggerAdaptor setDidAddInitialBreakpoints:]:
00000000000111fa	pushq	%rbp
00000000000111fb	movq	%rsp,%rbp
00000000000111fe	movq	0x0009e29b(%rip),%rax
0000000000011205	movb	%dl,(%rdi,%rax)
0000000000011208	popq	%rbp
0000000000011209	ret
-[PBXGDB_BreakpointController enqueueTurnBreakpointOnOffSequence:]:
000000000001120a	pushq	%rbp
000000000001120b	movq	%rsp,%rbp
000000000001120e	pushq	%r14
0000000000011210	pushq	%rbx
0000000000011211	movq	%rdi,%rbx
0000000000011214	movq	0x00096a85(%rip),%rsi
000000000001121b	movq	0x000979ee(%rip),%rdi
0000000000011222	call	*0x00072eb0(%rip)
0000000000011228	movq	%rax,%r14
000000000001122b	movq	0x00093886(%rip),%rsi
0000000000011232	movq	%rbx,%rdi
0000000000011235	call	*0x00072e9d(%rip)
000000000001123b	movq	0x00093b8e(%rip),%rsi
0000000000011242	movq	%rax,%rdi
0000000000011245	call	*0x00072e8d(%rip)
000000000001124b	movq	0x00093b86(%rip),%rsi
0000000000011252	movq	%r14,%rdi
0000000000011255	movq	%rax,%rdx
0000000000011258	call	*0x00072e7a(%rip)
000000000001125e	movq	0x00093853(%rip),%rsi
0000000000011265	movq	%rbx,%rdi
0000000000011268	call	*0x00072e6a(%rip)
000000000001126e	movq	0x00093b5b(%rip),%rsi
0000000000011275	movq	%rax,%rdi
0000000000011278	call	*0x00072e5a(%rip)
000000000001127e	movq	0x00093b5b(%rip),%rsi
0000000000011285	movq	%rax,%rdi
0000000000011288	movq	%r14,%rdx
000000000001128b	movq	0x00072e46(%rip),%rax
0000000000011292	popq	%rbx
0000000000011293	popq	%r14
0000000000011295	popq	%rbp
0000000000011296	jmp	*%rax
+[PBXGDB_TurnBreakpointsOnOffSequence sequenceShouldTurnOn:]:
0000000000011298	pushq	%rbp
0000000000011299	movq	%rsp,%rbp
000000000001129c	pushq	%rbx
000000000001129d	pushq	%rax
000000000001129e	movl	%edx,%ebx
00000000000112a0	movq	0x00097969(%rip),%rdi
00000000000112a7	leaq	0x00097032(%rip),%rsi
00000000000112ae	call	*0x0009702c(%rip)
00000000000112b4	movq	0x000937b5(%rip),%rsi
00000000000112bb	movq	%rax,%rdi
00000000000112be	call	*0x00072e14(%rip)
00000000000112c4	movq	0x0009e31d(%rip),%rcx
00000000000112cb	movb	%bl,(%rax,%rcx)
00000000000112ce	addq	$0x08,%rsp
00000000000112d2	popq	%rbx
00000000000112d3	popq	%rbp
00000000000112d4	ret
-[PBXGDB_TurnBreakpointsOnOffSequence interruptIfNeeded]:
00000000000112d5	pushq	%rbp
00000000000112d6	movq	%rsp,%rbp
00000000000112d9	movl	$0x00000001,%eax
00000000000112de	popq	%rbp
00000000000112df	ret
00000000000112e0	nop
00000000000112e1	nop
00000000000112e2	nop
00000000000112e3	nop
00000000000112e4	nop
-[PBXGDB_MIController processAsynchronousResult:]:
00000000000112e5	pushq	%rbp
00000000000112e6	movq	%rsp,%rbp
00000000000112e9	movq	0x000951d0(%rip),%rsi
00000000000112f0	xorl	%ecx,%ecx
00000000000112f2	popq	%rbp
00000000000112f3	jmp	*0x00072ddf(%rip)
00000000000112f9	nop
00000000000112fa	nop
-[PBXLSProcess resetEvaluationSafetyStatus]:
00000000000112fb	pushq	%rbp
00000000000112fc	movq	%rsp,%rbp
00000000000112ff	movq	0x0009e042(%rip),%rax
0000000000011306	movl	$0x00000000,(%rdi,%rax)
000000000001130d	popq	%rbp
000000000001130e	ret
-[PBXGDB_MIResultListItem value]:
000000000001130f	pushq	%rbp
0000000000011310	movq	%rsp,%rbp
0000000000011313	movq	0x0009da6e(%rip),%rax
000000000001131a	movq	(%rdi,%rax),%rax
000000000001131e	popq	%rbp
000000000001131f	ret
0000000000011320	nop
0000000000011321	nop
0000000000011322	nop
0000000000011323	nop
0000000000011324	nop
0000000000011325	nop
0000000000011326	nop
0000000000011327	nop
0000000000011328	nop
0000000000011329	nop
000000000001132a	nop
-[PBXGDB_MIController interruptType]:
000000000001132b	pushq	%rbp
000000000001132c	movq	%rsp,%rbp
000000000001132f	movq	0x0009d8e2(%rip),%rax
0000000000011336	movl	(%rdi,%rax),%eax
0000000000011339	popq	%rbp
000000000001133a	ret
000000000001133b	nop
-[PBXGDB_SequenceController didGetImplicitInterrupt]:
000000000001133c	pushq	%rbp
000000000001133d	movq	%rsp,%rbp
0000000000011340	pushq	%rbx
0000000000011341	pushq	%rax
0000000000011342	movq	%rdi,%rbx
0000000000011345	movq	0x00095684(%rip),%rsi
000000000001134c	leaq	0x000a2bc5(%rip),%rdx
0000000000011353	xorl	%ecx,%ecx
0000000000011355	call	*0x00072d7d(%rip)
000000000001135b	movq	0x000956ae(%rip),%rsi
0000000000011362	movq	%rbx,%rdi
0000000000011365	movl	$0x00000001,%edx
000000000001136a	call	*0x00072d68(%rip)
0000000000011370	movq	0x000956d9(%rip),%rsi
0000000000011377	movq	%rbx,%rdi
000000000001137a	movq	0x00072d57(%rip),%rax
0000000000011381	addq	$0x08,%rsp
0000000000011385	popq	%rbx
0000000000011386	popq	%rbp
0000000000011387	jmp	*%rax
0000000000011389	nop
000000000001138a	nop
000000000001138b	nop
000000000001138c	nop
-[PBXGDB_SequenceController _setHandlingInterrupt:]:
000000000001138d	pushq	%rbp
000000000001138e	movq	%rsp,%rbp
0000000000011391	movq	0x0009dbf0(%rip),%rax
0000000000011398	movb	%dl,(%rdi,%rax)
000000000001139b	popq	%rbp
000000000001139c	ret
-[PBXGDB_SetupSharedLibrarySequence execute]:
000000000001139d	pushq	%rbp
000000000001139e	movq	%rsp,%rbp
00000000000113a1	pushq	%r15
00000000000113a3	pushq	%r14
00000000000113a5	pushq	%r13
00000000000113a7	pushq	%r12
00000000000113a9	pushq	%rbx
00000000000113aa	subq	$0x000000f8,%rsp
00000000000113b1	movq	%rdi,%r14
00000000000113b4	movq	%r14,0xfffffef0(%rbp)
00000000000113bb	movq	0x00072cde(%rip),%rax
00000000000113c2	movq	(%rax),%rax
00000000000113c5	movq	%rax,0xd0(%rbp)
00000000000113c9	movq	0x000936b0(%rip),%rsi
00000000000113d0	movq	0x00097609(%rip),%rdi
00000000000113d7	movq	0x00072cfa(%rip),%rbx
00000000000113de	call	*%rbx
00000000000113e0	movq	%rax,%r12
00000000000113e3	movq	0x0009567e(%rip),%rsi
00000000000113ea	movq	%r14,%rdi
00000000000113ed	call	*%rbx
00000000000113ef	movq	0x0009567a(%rip),%rsi
00000000000113f6	movq	%rax,%rdi
00000000000113f9	call	*%rbx
00000000000113fb	movb	%al,0xfffffeec(%rbp)
0000000000011401	movq	0x00093678(%rip),%rsi
0000000000011408	movq	0x000975d9(%rip),%rdi
000000000001140f	call	*%rbx
0000000000011411	movq	%rax,%r15
0000000000011414	movq	0x0009565d(%rip),%rsi
000000000001141b	movq	%r15,%rdi
000000000001141e	xorl	%edx,%edx
0000000000011420	call	*%rbx
0000000000011422	movq	0x0009368f(%rip),%rsi
0000000000011429	movq	%r14,%rdi
000000000001142c	call	*%rbx
000000000001142e	movq	0x0009368b(%rip),%rsi
0000000000011435	movq	%rax,%rdi
0000000000011438	call	*%rbx
000000000001143a	movq	0x00094d1f(%rip),%rsi
0000000000011441	movq	%rax,%rdi
0000000000011444	movq	%r15,%rdx
0000000000011447	movl	$0x00000001,%ecx
000000000001144c	call	*%rbx
000000000001144e	xorps	%xmm0,%xmm0
0000000000011451	movaps	%xmm0,0xc0(%rbp)
0000000000011455	movaps	%xmm0,0xb0(%rbp)
0000000000011459	movaps	%xmm0,0xa0(%rbp)
000000000001145d	movaps	%xmm0,0x90(%rbp)
0000000000011461	movq	0x00093650(%rip),%rsi
0000000000011468	movq	%r14,%rdi
000000000001146b	call	*%rbx
000000000001146d	movq	0x000938ec(%rip),%rsi
0000000000011474	movq	%rax,%rdi
0000000000011477	call	*%rbx
0000000000011479	movq	0x00095600(%rip),%rsi
0000000000011480	movq	%rax,%rdi
0000000000011483	call	*%rbx
0000000000011485	movq	%rax,0xffffff08(%rbp)
000000000001148c	leaq	0x00096eed(%rip),%rsi
0000000000011493	leaq	0x90(%rbp),%rdx
0000000000011497	leaq	0xffffff10(%rbp),%rcx
000000000001149e	movq	%rax,%rdi
00000000000114a1	movl	$0x00000010,%r8d
00000000000114a7	call	*0x00096ed3(%rip)
00000000000114ad	movq	%rax,0xffffff00(%rbp)
00000000000114b4	testq	%rax,%rax
00000000000114b7	je	0x0001157d
00000000000114bd	movq	0xa0(%rbp),%rax
00000000000114c1	movq	(%rax),%rax
00000000000114c4	movq	%rax,0xfffffef8(%rbp)
00000000000114cb	movq	0x00072c06(%rip),%r13
00000000000114d2	xorl	%r14d,%r14d
00000000000114d5	movq	0xa0(%rbp),%rax
00000000000114d9	movq	0xfffffef8(%rbp),%rcx
00000000000114e0	cmpq	%rcx,(%rax)
00000000000114e3	je	0x000114f1
00000000000114e5	movq	0xffffff08(%rbp),%rdi
00000000000114ec	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
00000000000114f1	movq	0x98(%rbp),%rax
00000000000114f5	movq	(%rax,%r14,8),%r15
00000000000114f9	movq	%r12,%rbx
00000000000114fc	movq	%rbx,%rdi
00000000000114ff	leaq	0x00096e2a(%rip),%rsi
0000000000011506	call	*0x00096e24(%rip)
000000000001150c	movq	%rax,%rdi
000000000001150f	movq	0x00095572(%rip),%rsi
0000000000011516	call	*%r13
0000000000011519	movq	%rbx,%rdi
000000000001151c	movq	%rbx,%r12
000000000001151f	movq	0x0009556a(%rip),%rsi
0000000000011526	movq	%rax,%rdx
0000000000011529	movq	%r15,%rcx
000000000001152c	movl	$0x00000003,%r8d
0000000000011532	call	*%r13
0000000000011535	incq	%r14
0000000000011538	cmpq	0xffffff00(%rbp),%r14
000000000001153f	jb	0x000114d5
0000000000011541	movq	0xffffff08(%rbp),%rdi
0000000000011548	leaq	0x00096e31(%rip),%rsi
000000000001154f	leaq	0x90(%rbp),%rdx
0000000000011553	leaq	0xffffff10(%rbp),%rcx
000000000001155a	movl	$0x00000010,%r8d
0000000000011560	call	*0x00096e1a(%rip)
0000000000011566	movq	%rax,0xffffff00(%rbp)
000000000001156d	testq	%rax,%rax
0000000000011570	movq	0xfffffef0(%rbp),%r14
0000000000011577	jne	0x000114d2
000000000001157d	movq	%r14,0xfffffef0(%rbp)
0000000000011584	movq	0x000954dd(%rip),%rsi
000000000001158b	movq	0x00072b46(%rip),%rbx
0000000000011592	movq	%r14,%rdi
0000000000011595	call	*%rbx
0000000000011597	movq	0x000954fa(%rip),%rsi
000000000001159e	movq	%rax,%rdi
00000000000115a1	call	*%rbx
00000000000115a3	movq	%rax,%rbx
00000000000115a6	movq	%rbx,0xffffff00(%rbp)
00000000000115ad	leaq	0x00096d5c(%rip),%rsi
00000000000115b4	movq	%rbx,%rdi
00000000000115b7	call	*0x00096d53(%rip)
00000000000115bd	movq	%rax,0xfffffef8(%rbp)
00000000000115c4	testq	%rax,%rax
00000000000115c7	movq	%r12,%r13
00000000000115ca	movq	%r14,%r12
00000000000115cd	je	0x000116b7
00000000000115d3	xorl	%r15d,%r15d
00000000000115d6	movq	0x00072afb(%rip),%r14
00000000000115dd	movsbl	0xfffffeec(%rbp),%eax
00000000000115e4	movl	%eax,0xfffffeec(%rbp)
00000000000115ea	movq	%rbx,%rdi
00000000000115ed	leaq	0x00096d2c(%rip),%rsi
00000000000115f4	movq	%r15,%rdx
00000000000115f7	call	*0x00096d23(%rip)
00000000000115fd	movq	%rax,%rbx
0000000000011600	movq	%rbx,%rdi
0000000000011603	movq	0x00093696(%rip),%rsi
000000000001160a	call	*%r14
000000000001160d	movq	%rax,0xffffff08(%rbp)
0000000000011614	movq	%rbx,%rdi
0000000000011617	movq	0x00094b62(%rip),%rsi
000000000001161e	call	*%r14
0000000000011621	movq	%r12,%rdi
0000000000011624	movq	0x00095475(%rip),%rsi
000000000001162b	movl	%eax,%edx
000000000001162d	movl	0xfffffeec(%rbp),%ecx
0000000000011633	call	*%r14
0000000000011636	movl	%eax,%r12d
0000000000011639	movq	%r13,%rdi
000000000001163c	leaq	0x00096ced(%rip),%rsi
0000000000011643	call	*0x00096ce7(%rip)
0000000000011649	movq	%rax,%rdi
000000000001164c	movq	0x00095435(%rip),%rsi
0000000000011653	call	*%r14
0000000000011656	movq	%r13,%rbx
0000000000011659	movq	%rax,%r13
000000000001165c	movq	0x00096ded(%rip),%rdi
0000000000011663	movq	0x0009350e(%rip),%rsi
000000000001166a	leaq	0x000a28e7(%rip),%rdx
0000000000011671	movq	0xffffff08(%rbp),%rcx
0000000000011678	xorb	%al,%al
000000000001167a	call	*%r14
000000000001167d	movq	%rbx,%rdi
0000000000011680	movq	0x00095409(%rip),%rsi
0000000000011687	movq	%r13,%rdx
000000000001168a	movq	%rbx,%r13
000000000001168d	movq	%rax,%rcx
0000000000011690	movl	%r12d,%r8d
0000000000011693	movq	0xfffffef0(%rbp),%r12
000000000001169a	movq	0xffffff00(%rbp),%rbx
00000000000116a1	call	*%r14
00000000000116a4	movq	0xfffffef8(%rbp),%rax
00000000000116ab	incq	%r15
00000000000116ae	cmpq	%r15,%rax
00000000000116b1	jne	0x000115ea
00000000000116b7	leaq	0x00096c72(%rip),%r15
00000000000116be	movq	%r13,%rdi
00000000000116c1	movq	%r15,%rsi
00000000000116c4	call	*0x00096c66(%rip)
00000000000116ca	movq	0x000953b7(%rip),%rsi
00000000000116d1	movq	0x00072a00(%rip),%r14
00000000000116d8	movq	%rax,%rdi
00000000000116db	call	*%r14
00000000000116de	movq	%rax,%rbx
00000000000116e1	movq	0x00097308(%rip),%rdi
00000000000116e8	movq	%r15,%rsi
00000000000116eb	call	*0x00096c3f(%rip)
00000000000116f1	movq	0x000953b0(%rip),%rsi
00000000000116f8	movq	%rax,%rdi
00000000000116fb	call	*%r14
00000000000116fe	movq	0x0009538b(%rip),%rsi
0000000000011705	movq	%r13,%rdi
0000000000011708	movq	%rbx,%rdx
000000000001170b	movq	%rax,%rcx
000000000001170e	movl	$0x00000002,%r8d
0000000000011714	call	*%r14
0000000000011717	movq	%r13,%rdi
000000000001171a	movq	%r15,%rsi
000000000001171d	call	*0x00096c0d(%rip)
0000000000011723	movq	0x0009535e(%rip),%rsi
000000000001172a	movq	%rax,%rdi
000000000001172d	call	*%r14
0000000000011730	movq	%rax,%rbx
0000000000011733	movq	0x000972b6(%rip),%rdi
000000000001173a	movq	%r15,%rsi
000000000001173d	call	*0x00096bed(%rip)
0000000000011743	movq	0x00095366(%rip),%rsi
000000000001174a	movq	%rax,%rdi
000000000001174d	call	*%r14
0000000000011750	movq	0x00095339(%rip),%rsi
0000000000011757	movq	%r13,%rdi
000000000001175a	movq	%rbx,%rdx
000000000001175d	movq	%rax,%rcx
0000000000011760	movl	$0x00000002,%r8d
0000000000011766	call	*%r14
0000000000011769	movq	%r13,%rdi
000000000001176c	movq	%r15,%rsi
000000000001176f	call	*0x00096bbb(%rip)
0000000000011775	movq	0x0009530c(%rip),%rsi
000000000001177c	movq	%rax,%rdi
000000000001177f	call	*%r14
0000000000011782	movq	%rax,%rbx
0000000000011785	movq	0x00097264(%rip),%rdi
000000000001178c	movq	%r15,%rsi
000000000001178f	call	*0x00096b9b(%rip)
0000000000011795	movq	0x0009531c(%rip),%rsi
000000000001179c	movq	%rax,%rdi
000000000001179f	call	*%r14
00000000000117a2	movq	0x000952e7(%rip),%rsi
00000000000117a9	movq	%r13,%rdi
00000000000117ac	movq	%rbx,%rdx
00000000000117af	movq	%rax,%rcx
00000000000117b2	movl	$0x00000002,%r8d
00000000000117b8	call	*%r14
00000000000117bb	movq	%r13,%rdi
00000000000117be	movq	%r15,%rsi
00000000000117c1	call	*0x00096b69(%rip)
00000000000117c7	movq	0x000952ba(%rip),%rsi
00000000000117ce	movq	%rax,%rdi
00000000000117d1	call	*%r14
00000000000117d4	movq	%rax,%rbx
00000000000117d7	movq	%r13,%rdi
00000000000117da	movq	%r15,%rsi
00000000000117dd	call	*0x00096b4d(%rip)
00000000000117e3	movq	0x000952de(%rip),%rsi
00000000000117ea	movq	%rax,%rdi
00000000000117ed	call	*%r14
00000000000117f0	movq	0x00095299(%rip),%rsi
00000000000117f7	movq	%r13,%rdi
00000000000117fa	movq	%rbx,%rdx
00000000000117fd	movq	%rax,%rcx
0000000000011800	movl	$0x00000003,%r8d
0000000000011806	call	*%r14
0000000000011809	movq	%r13,%rdi
000000000001180c	movq	%r15,%rsi
000000000001180f	call	*0x00096b1b(%rip)
0000000000011815	movq	0x000952b4(%rip),%rsi
000000000001181c	movq	%rax,%rdi
000000000001181f	call	*%r14
0000000000011822	movq	%rax,%rbx
0000000000011825	movq	%r13,%rdi
0000000000011828	movq	%r15,%rsi
000000000001182b	call	*0x00096aff(%rip)
0000000000011831	movq	0x00095290(%rip),%rsi
0000000000011838	movq	%rax,%rdi
000000000001183b	call	*%r14
000000000001183e	movq	0x0009524b(%rip),%rsi
0000000000011845	movq	%r13,%rdi
0000000000011848	movq	%rbx,%rdx
000000000001184b	movq	%rax,%rcx
000000000001184e	movl	$0x00000003,%r8d
0000000000011854	call	*%r14
0000000000011857	movq	0x0009322a(%rip),%rsi
000000000001185e	movq	%r13,%rdi
0000000000011861	movq	%r12,%rdx
0000000000011864	call	*%r14
0000000000011867	movq	0x0009322a(%rip),%rsi
000000000001186e	movq	0x00095263(%rip),%rdx
0000000000011875	movq	%r13,%rdi
0000000000011878	call	*%r14
000000000001187b	movq	0x00093236(%rip),%rsi
0000000000011882	movq	%r12,%rdi
0000000000011885	call	*%r14
0000000000011888	movq	0x00093231(%rip),%rsi
000000000001188f	movq	%rax,%rdi
0000000000011892	call	*%r14
0000000000011895	movq	0x000948c4(%rip),%rsi
000000000001189c	movq	%rax,%rdi
000000000001189f	movq	%r13,%rdx
00000000000118a2	movl	$0x00000001,%ecx
00000000000118a7	call	*%r14
00000000000118aa	movq	0x000727ef(%rip),%rax
00000000000118b1	movq	(%rax),%rax
00000000000118b4	cmpq	0xd0(%rbp),%rax
00000000000118b8	jne	0x000118cc
00000000000118ba	addq	$0x000000f8,%rsp
00000000000118c1	popq	%rbx
00000000000118c2	popq	%r12
00000000000118c4	popq	%r13
00000000000118c6	popq	%r14
00000000000118c8	popq	%r15
00000000000118ca	popq	%rbp
00000000000118cb	ret
00000000000118cc	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
-[PBXGDB_BaseSharedLibrarySequence _imageController]:
00000000000118d1	pushq	%rbp
00000000000118d2	movq	%rsp,%rbp
00000000000118d5	movq	0x000931dc(%rip),%rsi
00000000000118dc	call	*0x000727f6(%rip)
00000000000118e2	movq	0x0009350f(%rip),%rsi
00000000000118e9	movq	%rax,%rdi
00000000000118ec	movq	0x000727e5(%rip),%rax
00000000000118f3	popq	%rbp
00000000000118f4	jmp	*%rax
-[PBXLSDynamicLinkerImageController usingGDBCachedSymFiles]:
00000000000118f6	pushq	%rbp
00000000000118f7	movq	%rsp,%rbp
00000000000118fa	xorl	%eax,%eax
00000000000118fc	popq	%rbp
00000000000118fd	ret
-[PBXGDB_MISetLoadCFMInfoCommand setLoadCFMInfo:]:
00000000000118fe	pushq	%rbp
00000000000118ff	movq	%rsp,%rbp
0000000000011902	pushq	%r14
0000000000011904	pushq	%rbx
0000000000011905	movl	%edx,%ebx
0000000000011907	movq	%rdi,%r14
000000000001190a	movq	0x00096b3f(%rip),%rdi
0000000000011911	leaq	0x000969c8(%rip),%rsi
0000000000011918	call	*0x000969c2(%rip)
000000000001191e	leaq	0x000a00b3(%rip),%rdx
0000000000011925	leaq	0x000a00cc(%rip),%rcx
000000000001192c	testb	%bl,%bl
000000000001192e	cmovneq	%rdx,%rcx
0000000000011932	movq	0x0009337f(%rip),%rsi
0000000000011939	leaq	0x000a1438(%rip),%rdx
0000000000011940	movq	%rax,%rdi
0000000000011943	xorb	%al,%al
0000000000011945	call	*0x0007278d(%rip)
000000000001194b	leaq	0x0009d1de(%rip),%rcx
0000000000011952	movq	(%rcx),%rdx
0000000000011955	movq	%rax,%rdi
0000000000011958	movq	%r14,%rsi
000000000001195b	popq	%rbx
000000000001195c	popq	%r14
000000000001195e	popq	%rbp
000000000001195f	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXLSDynamicLinkerImageController persistentDynamicLinkerImages]:
0000000000011964	pushq	%rbp
0000000000011965	movq	%rsp,%rbp
0000000000011968	movq	0x0009d979(%rip),%rax
000000000001196f	movq	(%rdi,%rax),%rdi
0000000000011973	movq	0x00094d7e(%rip),%rsi
000000000001197a	popq	%rbp
000000000001197b	jmp	*0x00072757(%rip)
0000000000011981	nop
0000000000011982	nop
0000000000011983	nop
-[PBXLSDynamicLinkerImage symbolsLevel]:
0000000000011984	pushq	%rbp
0000000000011985	movq	%rsp,%rbp
0000000000011988	movq	0x0009d921(%rip),%rax
000000000001198f	movl	(%rdi,%rax),%eax
0000000000011992	popq	%rbp
0000000000011993	ret
-[PBXGDB_SetupSharedLibrarySequence _checkSymbolsLevel:usingCachedSymFiles:]:
0000000000011994	pushq	%rbp
0000000000011995	movq	%rsp,%rbp
0000000000011998	cmpl	$0x01,%edx
000000000001199b	sete	%al
000000000001199e	testb	%cl,%cl
00000000000119a0	sete	%cl
00000000000119a3	orb	%al,%cl
00000000000119a5	movl	$0x00000003,%eax
00000000000119aa	cmovnel	%edx,%eax
00000000000119ad	popq	%rbp
00000000000119ae	ret
+[PBXGDB_MISetSharedLibraryLoadSymbolsCommand dyldDynamicLinkerLoadReason]:
00000000000119af	pushq	%rbp
00000000000119b0	movq	%rsp,%rbp
00000000000119b3	leaq	0x000a123e(%rip),%rax
00000000000119ba	popq	%rbp
00000000000119bb	ret
-[PBXGDB_MISetSharedLibraryLoadSymbolsCommand addLoadRuleForReason:nameRegEx:symbolsLevel:]:
00000000000119bc	pushq	%rbp
00000000000119bd	movq	%rsp,%rbp
00000000000119c0	pushq	%r15
00000000000119c2	pushq	%r14
00000000000119c4	pushq	%r12
00000000000119c6	pushq	%rbx
00000000000119c7	movq	%rcx,%r14
00000000000119ca	movq	%rdx,%r15
00000000000119cd	movq	%rdi,%rbx
00000000000119d0	movq	0x00094d31(%rip),%rsi
00000000000119d7	movl	%r8d,%edx
00000000000119da	call	*0x000726f8(%rip)
00000000000119e0	movq	%rax,%r12
00000000000119e3	movq	0x00094d26(%rip),%rsi
00000000000119ea	movq	%rbx,%rdi
00000000000119ed	call	*0x000726e5(%rip)
00000000000119f3	leaq	0x000a129e(%rip),%rdx
00000000000119fa	movq	0x00093297(%rip),%rsi
0000000000011a01	movq	%rax,%rdi
0000000000011a04	movq	%r15,%rcx
0000000000011a07	movq	%r14,%r8
0000000000011a0a	movq	%r12,%r9
0000000000011a0d	xorb	%al,%al
0000000000011a0f	movq	0x000726c2(%rip),%r11
0000000000011a16	popq	%rbx
0000000000011a17	popq	%r12
0000000000011a19	popq	%r14
0000000000011a1b	popq	%r15
0000000000011a1d	popq	%rbp
0000000000011a1e	jmp	*%r11
-[PBXGDB_MISetSharedLibraryBaseCommand levelToGDBString:]:
0000000000011a21	pushq	%rbp
0000000000011a22	movq	%rsp,%rbp
0000000000011a25	cmpl	$0x01,%edx
0000000000011a28	jne	0x00011a33
0000000000011a2a	leaq	0x000a1147(%rip),%rax
0000000000011a31	jmp	0x00011a66
0000000000011a33	cmpl	$0x02,%edx
0000000000011a36	je	0x00011a46
0000000000011a38	cmpl	$0x03,%edx
0000000000011a3b	jne	0x00011a4f
0000000000011a3d	leaq	0x000a09d4(%rip),%rax
0000000000011a44	jmp	0x00011a66
0000000000011a46	leaq	0x000a114b(%rip),%rax
0000000000011a4d	jmp	0x00011a66
0000000000011a4f	movl	%edx,%esi
0000000000011a51	leaq	0x000a1160(%rip),%rdi
0000000000011a58	xorb	%al,%al
0000000000011a5a	callq	0x0004e5c0	; symbol stub for: _NSLog
0000000000011a5f	leaq	0x000a1172(%rip),%rax
0000000000011a66	popq	%rbp
0000000000011a67	ret
-[PBXGDB_MISetSharedLibraryLoadSymbolsCommand _rulesString]:
0000000000011a68	pushq	%rbp
0000000000011a69	movq	%rsp,%rbp
0000000000011a6c	pushq	%rbx
0000000000011a6d	pushq	%rax
0000000000011a6e	movq	%rdi,%rbx
0000000000011a71	movq	0x0009d320(%rip),%rax
0000000000011a78	movq	(%rbx,%rax),%rax
0000000000011a7c	testq	%rax,%rax
0000000000011a7f	jne	0x00011ac9
0000000000011a81	movq	0x000969b0(%rip),%rdi
0000000000011a88	leaq	0x00096851(%rip),%rsi
0000000000011a8f	call	*0x0009684b(%rip)
0000000000011a95	movq	0x00093374(%rip),%rsi
0000000000011a9c	leaq	0x000a11d5(%rip),%rdx
0000000000011aa3	movq	%rax,%rdi
0000000000011aa6	call	*0x0007262c(%rip)
0000000000011aac	movq	0x0009d2e5(%rip),%rdx
0000000000011ab3	movq	%rax,%rdi
0000000000011ab6	movq	%rbx,%rsi
0000000000011ab9	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000011abe	movq	0x0009d2d3(%rip),%rax
0000000000011ac5	movq	(%rbx,%rax),%rax
0000000000011ac9	addq	$0x08,%rsp
0000000000011acd	popq	%rbx
0000000000011ace	popq	%rbp
0000000000011acf	ret
+[PBXGDB_MISetSharedLibraryLoadSymbolsCommand allNamesRegEx]:
0000000000011ad0	pushq	%rbp
0000000000011ad1	movq	%rsp,%rbp
0000000000011ad4	leaq	0x000a117d(%rip),%rax
0000000000011adb	popq	%rbp
0000000000011adc	ret
+[PBXGDB_MISetSharedLibraryLoadSymbolsCommand executableLoadReason]:
0000000000011add	pushq	%rbp
0000000000011ade	movq	%rsp,%rbp
0000000000011ae1	leaq	0x000a1150(%rip),%rax
0000000000011ae8	popq	%rbp
0000000000011ae9	ret
-[PBXGDB_MISetSharedLibraryLoadSymbolsCommand GDBCommandString]:
0000000000011aea	pushq	%rbp
0000000000011aeb	movq	%rsp,%rbp
0000000000011aee	movq	0x00094c1b(%rip),%rsi
0000000000011af5	popq	%rbp
0000000000011af6	jmp	*0x000725dc(%rip)
-[PBXGDB_SetupSharedLibrarySequence _applyLoadRules:]:
0000000000011afc	pushq	%rbp
0000000000011afd	movq	%rsp,%rbp
0000000000011b00	pushq	%r14
0000000000011b02	pushq	%rbx
0000000000011b03	movq	%rdi,%r14
0000000000011b06	movq	0x00092f73(%rip),%rsi
0000000000011b0d	movq	0x00096ec4(%rip),%rdi
0000000000011b14	call	*0x000725be(%rip)
0000000000011b1a	movq	%rax,%rbx
0000000000011b1d	movq	0x00092f64(%rip),%rsi
0000000000011b24	movq	%rbx,%rdi
0000000000011b27	movq	%r14,%rdx
0000000000011b2a	call	*0x000725a8(%rip)
0000000000011b30	movq	0x00092f61(%rip),%rsi
0000000000011b37	movq	0x00094f22(%rip),%rdx
0000000000011b3e	movq	%rbx,%rdi
0000000000011b41	call	*0x00072591(%rip)
0000000000011b47	movq	0x00092f6a(%rip),%rsi
0000000000011b4e	movq	%r14,%rdi
0000000000011b51	call	*0x00072581(%rip)
0000000000011b57	movq	0x00092f62(%rip),%rsi
0000000000011b5e	movq	%rax,%rdi
0000000000011b61	call	*0x00072571(%rip)
0000000000011b67	movq	0x000945f2(%rip),%rsi
0000000000011b6e	movq	%rax,%rdi
0000000000011b71	movq	%rbx,%rdx
0000000000011b74	movl	$0x00000001,%ecx
0000000000011b79	movq	0x00072558(%rip),%rax
0000000000011b80	popq	%rbx
0000000000011b81	popq	%r14
0000000000011b83	popq	%rbp
0000000000011b84	jmp	*%rax
-[PBXGDB_MISharedLibraryApplyLoadRulesCommand GDBCommandString]:
0000000000011b86	pushq	%rbp
0000000000011b87	movq	%rsp,%rbp
0000000000011b8a	leaq	0x000a1207(%rip),%rax
0000000000011b91	popq	%rbp
0000000000011b92	ret
-[PBXGDB_SetupSharedLibrarySequence _done:]:
0000000000011b93	pushq	%rbp
0000000000011b94	movq	%rsp,%rbp
0000000000011b97	movq	0x00092f9a(%rip),%rsi
0000000000011b9e	popq	%rbp
0000000000011b9f	jmp	*0x00072533(%rip)
-[PBXGDB_NewBreakpointSequence execute]:
0000000000011ba5	pushq	%rbp
0000000000011ba6	movq	%rsp,%rbp
0000000000011ba9	pushq	%r15
0000000000011bab	pushq	%r14
0000000000011bad	pushq	%r13
0000000000011baf	pushq	%r12
0000000000011bb1	pushq	%rbx
0000000000011bb2	subq	$0x00000158,%rsp
0000000000011bb9	movq	0x000724e0(%rip),%rax
0000000000011bc0	movq	(%rax),%rax
0000000000011bc3	movq	%rax,0xd0(%rbp)
0000000000011bc7	movq	%rdi,0xc8(%rbp)
0000000000011bcb	movq	%rsi,0xc0(%rbp)
0000000000011bcf	movq	0x0009617a(%rip),%rsi
0000000000011bd6	movq	0x000724fb(%rip),%rbx
0000000000011bdd	call	*%rbx
0000000000011bdf	movq	%rax,%r14
0000000000011be2	movq	0x00095f9f(%rip),%rsi
0000000000011be9	movq	%r14,%rdi
0000000000011bec	call	*%rbx
0000000000011bee	movq	%rax,%r13
0000000000011bf1	movq	%r13,0xfffffec8(%rbp)
0000000000011bf8	movq	0x00092eb9(%rip),%rsi
0000000000011bff	movq	0xc8(%rbp),%rdi
0000000000011c03	call	*%rbx
0000000000011c05	movq	0x000931ec(%rip),%rsi
0000000000011c0c	movq	%rax,%rdi
0000000000011c0f	call	*%rbx
0000000000011c11	movq	%rax,0xfffffec0(%rbp)
0000000000011c18	movq	0x0009d959(%rip),%rax
0000000000011c1f	movq	0xc8(%rbp),%rcx
0000000000011c23	movq	$0x00000000,(%rcx,%rax)
0000000000011c2b	movq	0x000947c6(%rip),%rsi
0000000000011c32	movq	%r13,%rdi
0000000000011c35	movl	$0x00000001,%edx
0000000000011c3a	call	*%rbx
0000000000011c3c	leaq	0x000966ed(%rip),%rsi
0000000000011c43	movq	0x00096d3e(%rip),%rdi
0000000000011c4a	call	*0x000966e0(%rip)
0000000000011c50	leaq	0x000966e9(%rip),%rsi
0000000000011c57	movq	%r13,%rdi
0000000000011c5a	movq	%rax,%rdx
0000000000011c5d	call	*0x000966dd(%rip)
0000000000011c63	movq	$0x00000000,0xfffffef8(%rbp)
0000000000011c6e	testb	%al,%al
0000000000011c70	je	0x00012289
0000000000011c76	movq	0x00094b73(%rip),%rsi
0000000000011c7d	movq	0x00072454(%rip),%rbx
0000000000011c84	movq	%r13,%rdi
0000000000011c87	call	*%rbx
0000000000011c89	movq	0x00096100(%rip),%rsi
0000000000011c90	movq	%rax,%rdi
0000000000011c93	call	*%rbx
0000000000011c95	movq	0x00094264(%rip),%rsi
0000000000011c9c	movq	%rax,%rdi
0000000000011c9f	call	*%rbx
0000000000011ca1	movq	%rax,0xfffffef0(%rbp)
0000000000011ca8	movq	0x000943a9(%rip),%rsi
0000000000011caf	movq	%r13,%rdi
0000000000011cb2	call	*%rbx
0000000000011cb4	movq	0x00094b2d(%rip),%rsi
0000000000011cbb	movq	%rax,%rdi
0000000000011cbe	call	*%rbx
0000000000011cc0	movq	%rax,0xfffffee8(%rbp)
0000000000011cc7	xorps	%xmm0,%xmm0
0000000000011cca	movaps	%xmm0,0xb0(%rbp)
0000000000011cce	movaps	%xmm0,0xa0(%rbp)
0000000000011cd2	movaps	%xmm0,0x90(%rbp)
0000000000011cd6	movaps	%xmm0,0x80(%rbp)
0000000000011cda	movq	0x00095f77(%rip),%rsi
0000000000011ce1	movq	%r14,%rdi
0000000000011ce4	call	*%rbx
0000000000011ce6	movq	%rax,0xfffffed8(%rbp)
0000000000011ced	leaq	0x0009668c(%rip),%rsi
0000000000011cf4	leaq	0x80(%rbp),%rdx
0000000000011cf8	leaq	0xffffff00(%rbp),%rcx
0000000000011cff	movq	%rax,%rdi
0000000000011d02	movl	$0x00000010,%r8d
0000000000011d08	call	*0x00096672(%rip)
0000000000011d0e	movq	%rax,0xfffffed0(%rbp)
0000000000011d15	movq	$0x00000000,0xfffffef8(%rbp)
0000000000011d20	testq	%rax,%rax
0000000000011d23	je	0x00012289
0000000000011d29	movq	0x90(%rbp),%rax
0000000000011d2d	movq	(%rax),%rax
0000000000011d30	movq	%rax,0xfffffeb8(%rbp)
0000000000011d37	movq	0x0007239a(%rip),%r15
0000000000011d3e	xorl	%eax,%eax
0000000000011d40	movq	%rax,%rbx
0000000000011d43	movq	0x90(%rbp),%rax
0000000000011d47	movq	0xfffffeb8(%rbp),%rcx
0000000000011d4e	cmpq	%rcx,(%rax)
0000000000011d51	je	0x00011d5f
0000000000011d53	movq	0xfffffed8(%rbp),%rdi
0000000000011d5a	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
0000000000011d5f	movq	0x88(%rbp),%rax
0000000000011d63	movq	(%rax,%rbx,8),%r12
0000000000011d67	movq	%rbx,0xfffffee0(%rbp)
0000000000011d6e	movq	%r12,%rdi
0000000000011d71	movq	0x00095f00(%rip),%rsi
0000000000011d78	call	*%r15
0000000000011d7b	movq	%rax,%r14
0000000000011d7e	movq	0xc8(%rbp),%rdi
0000000000011d82	movq	0x00092d2f(%rip),%rsi
0000000000011d89	call	*%r15
0000000000011d8c	movq	%rax,%rdi
0000000000011d8f	movq	0x00094352(%rip),%rsi
0000000000011d96	movq	%r14,%rdx
0000000000011d99	xorl	%ecx,%ecx
0000000000011d9b	movq	%r14,%r8
0000000000011d9e	call	*%r15
0000000000011da1	movq	%rax,0xfffffef8(%rbp)
0000000000011da8	movq	%r12,%rdi
0000000000011dab	movq	0x00095ebe(%rip),%rsi
0000000000011db2	call	*%r15
0000000000011db5	testl	%eax,%eax
0000000000011db7	jne	0x0001223d
0000000000011dbd	movq	0xfffffec0(%rbp),%rdi
0000000000011dc4	movq	0x00095fcd(%rip),%rsi
0000000000011dcb	call	*0x00072307(%rip)
0000000000011dd1	testb	%al,%al
0000000000011dd3	je	0x00011e49
0000000000011dd5	testq	%r14,%r14
0000000000011dd8	je	0x00011e49
0000000000011dda	movq	%r12,%rdi
0000000000011ddd	movq	0x00095e9c(%rip),%rsi
0000000000011de4	call	*0x000722ee(%rip)
0000000000011dea	testq	%rax,%rax
0000000000011ded	je	0x0001223d
0000000000011df3	movq	0x00096e56(%rip),%rdi
0000000000011dfa	movq	0x00092c7f(%rip),%rsi
0000000000011e01	call	*%r15
0000000000011e04	movq	%rax,%r12
0000000000011e07	movq	%r13,%rdi
0000000000011e0a	movq	0x00095d97(%rip),%rsi
0000000000011e11	call	*%r15
0000000000011e14	movq	%rax,%r14
0000000000011e17	movq	%r13,%rdi
0000000000011e1a	movq	0x00095d9f(%rip),%rsi
0000000000011e21	call	*%r15
0000000000011e24	movq	0xfffffef8(%rbp),%rcx
0000000000011e2b	movq	%rcx,0x18(%rsp)
0000000000011e30	movl	$0x00000000,0x10(%rsp)
0000000000011e38	movl	$0x00000001,0x08(%rsp)
0000000000011e40	movl	$0x00000000,(%rsp)
0000000000011e47	jmp	0x00011e9d
0000000000011e49	movq	0x00096e00(%rip),%rdi
0000000000011e50	movq	0x00092c29(%rip),%rsi
0000000000011e57	call	*%r15
0000000000011e5a	movq	%rax,%r12
0000000000011e5d	movq	%r13,%rdi
0000000000011e60	movq	0x00095d41(%rip),%rsi
0000000000011e67	call	*%r15
0000000000011e6a	movq	%rax,%r14
0000000000011e6d	movq	%r13,%rdi
0000000000011e70	movq	0x00095d49(%rip),%rsi
0000000000011e77	call	*%r15
0000000000011e7a	movq	0xfffffef8(%rbp),%rcx
0000000000011e81	movq	%rcx,0x18(%rsp)
0000000000011e86	movl	$0x00000000,0x10(%rsp)
0000000000011e8e	movl	$0x00000001,0x08(%rsp)
0000000000011e96	movl	$0x00000001,(%rsp)
0000000000011e9d	movq	%r12,%rdi
0000000000011ea0	movq	0x00095ef9(%rip),%rsi
0000000000011ea7	movq	0xfffffef0(%rbp),%rdx
0000000000011eae	movq	0xfffffee8(%rbp),%rcx
0000000000011eb5	movq	%r14,%r8
0000000000011eb8	movq	%rax,%r9
0000000000011ebb	call	*%r15
0000000000011ebe	testq	%r12,%r12
0000000000011ec1	je	0x0001223d
0000000000011ec7	movq	0xc8(%rbp),%rdx
0000000000011ecb	movq	%r12,%rdi
0000000000011ece	movq	0x00092bb3(%rip),%rsi
0000000000011ed5	call	*%r15
0000000000011ed8	movq	%r12,%rdi
0000000000011edb	movq	0x00095ec6(%rip),%rsi
0000000000011ee2	xorl	%edx,%edx
0000000000011ee4	call	*%r15
0000000000011ee7	movq	%r12,%rdi
0000000000011eea	movq	0x00092ba7(%rip),%rsi
0000000000011ef1	movq	0x00095eb8(%rip),%rdx
0000000000011ef8	call	*%r15
0000000000011efb	movq	0xc8(%rbp),%rdi
0000000000011eff	movq	0x00092bb2(%rip),%rsi
0000000000011f06	call	*%r15
0000000000011f09	movq	%r15,%rbx
0000000000011f0c	movq	%rax,%r14
0000000000011f0f	movq	%r14,%rdi
0000000000011f12	movq	0x00092ba7(%rip),%rsi
0000000000011f19	call	*%rbx
0000000000011f1b	movq	%rax,%r13
0000000000011f1e	movq	0x000965c3(%rip),%rdi
0000000000011f25	leaq	0x00096404(%rip),%rbx
0000000000011f2c	movq	%rbx,%rsi
0000000000011f2f	call	*0x000963fb(%rip)
0000000000011f35	movq	%rax,%rdi
0000000000011f38	movq	%rbx,%rsi
0000000000011f3b	movq	%rbx,%r15
0000000000011f3e	call	*0x000963ec(%rip)
0000000000011f44	testq	%r14,%r14
0000000000011f47	jne	0x00011fa1
0000000000011f49	movq	%rax,%rdi
0000000000011f4c	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000011f51	leaq	0x00050bcd(%rip),%rcx
0000000000011f58	movq	%rcx,0x18(%rsp)
0000000000011f5d	leaq	0x0009d8d4(%rip),%rcx
0000000000011f64	movq	%rcx,0x10(%rsp)
0000000000011f69	movq	%rax,0x08(%rsp)
0000000000011f6e	leaq	0x00050ba5(%rip),%rax
0000000000011f75	movq	%rax,(%rsp)
0000000000011f79	leaq	0xc8(%rbp),%rdi
0000000000011f7d	leaq	0xc0(%rbp),%rsi
0000000000011f81	leaq	0x00052b68(%rip),%rdx
0000000000011f88	leaq	0x0005297b(%rip),%rcx
0000000000011f8f	movl	$0x0000015b,%r8d
0000000000011f95	leaq	0x0009da1c(%rip),%r9
0000000000011f9c	jmp	0x00012049
0000000000011fa1	movq	%r14,%rdi
0000000000011fa4	leaq	0x00096395(%rip),%rsi
0000000000011fab	movq	%rax,%rdx
0000000000011fae	call	*0x0009638c(%rip)
0000000000011fb4	testb	%al,%al
0000000000011fb6	jne	0x00012050
0000000000011fbc	movq	0x00096525(%rip),%rdi
0000000000011fc3	movq	%r15,%rbx
0000000000011fc6	movq	%rbx,%rsi
0000000000011fc9	call	*0x00096361(%rip)
0000000000011fcf	movq	%rax,%rdi
0000000000011fd2	movq	%rbx,%rsi
0000000000011fd5	movq	%rbx,%r15
0000000000011fd8	call	*0x00096352(%rip)
0000000000011fde	movq	%rax,%rdi
0000000000011fe1	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000011fe6	movq	%rax,%rbx
0000000000011fe9	movq	%r14,%rdi
0000000000011fec	movq	0x00092c6d(%rip),%rsi
0000000000011ff3	call	*0x000720df(%rip)
0000000000011ff9	leaq	0x00052b18(%rip),%rcx
0000000000012000	movq	%rcx,0x20(%rsp)
0000000000012005	leaq	0x0009d82c(%rip),%rcx
000000000001200c	movq	%rcx,0x18(%rsp)
0000000000012011	movq	%rax,0x10(%rsp)
0000000000012016	movq	%rbx,0x08(%rsp)
000000000001201b	leaq	0x00050af8(%rip),%rax
0000000000012022	movq	%rax,(%rsp)
0000000000012026	leaq	0xc8(%rbp),%rdi
000000000001202a	leaq	0xc0(%rbp),%rsi
000000000001202e	leaq	0x00052abb(%rip),%rdx
0000000000012035	leaq	0x000528ce(%rip),%rcx
000000000001203c	movl	$0x0000015b,%r8d
0000000000012042	leaq	0x0009d98f(%rip),%r9
0000000000012049	xorb	%al,%al
000000000001204b	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000012050	testq	%r13,%r13
0000000000012053	jne	0x000120da
0000000000012059	movq	0x00096428(%rip),%rdi
0000000000012060	movq	%r15,%rbx
0000000000012063	movq	%rbx,%rsi
0000000000012066	call	*0x000962c4(%rip)
000000000001206c	movq	%rax,%rdi
000000000001206f	movq	%rbx,%rsi
0000000000012072	call	*0x000962b8(%rip)
0000000000012078	movq	%rax,%rdi
000000000001207b	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000012080	leaq	0x00052ade(%rip),%rcx
0000000000012087	movq	%rcx,0x18(%rsp)
000000000001208c	leaq	0x0009d7a5(%rip),%rcx
0000000000012093	movq	%rcx,0x10(%rsp)
0000000000012098	movq	%rax,0x08(%rsp)
000000000001209d	leaq	0x00052ab4(%rip),%rax
00000000000120a4	movq	%rax,(%rsp)
00000000000120a8	leaq	0xc8(%rbp),%rdi
00000000000120ac	leaq	0xc0(%rbp),%rsi
00000000000120b0	leaq	0x00052a39(%rip),%rdx
00000000000120b7	leaq	0x0005284c(%rip),%rcx
00000000000120be	movl	$0x0000015c,%r8d
00000000000120c4	leaq	0x0009d8ed(%rip),%r9
00000000000120cb	xorb	%al,%al
00000000000120cd	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
00000000000120d2	xorl	%r13d,%r13d
00000000000120d5	jmp	0x000121a2
00000000000120da	movq	0x000963a7(%rip),%rdi
00000000000120e1	movq	%r15,%rbx
00000000000120e4	movq	%rbx,%rsi
00000000000120e7	call	*0x00096243(%rip)
00000000000120ed	movq	%rax,%rdi
00000000000120f0	movq	%rbx,%rsi
00000000000120f3	call	*0x00096237(%rip)
00000000000120f9	movq	%r13,%rdi
00000000000120fc	leaq	0x0009623d(%rip),%rsi
0000000000012103	movq	%rax,%rdx
0000000000012106	call	*0x00096234(%rip)
000000000001210c	testb	%al,%al
000000000001210e	jne	0x000121a2
0000000000012114	movq	0x0009636d(%rip),%rdi
000000000001211b	movq	%rbx,%rsi
000000000001211e	call	*0x0009620c(%rip)
0000000000012124	movq	%rax,%rdi
0000000000012127	movq	%rbx,%rsi
000000000001212a	call	*0x00096200(%rip)
0000000000012130	movq	%rax,%rdi
0000000000012133	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000012138	movq	%rax,%r15
000000000001213b	movq	%r13,%rdi
000000000001213e	movq	0x00092b1b(%rip),%rsi
0000000000012145	call	*0x00071f8d(%rip)
000000000001214b	leaq	0x00052a29(%rip),%rcx
0000000000012152	movq	%rcx,0x20(%rsp)
0000000000012157	leaq	0x0009d6da(%rip),%rcx
000000000001215e	movq	%rcx,0x18(%rsp)
0000000000012163	movq	%rax,0x10(%rsp)
0000000000012168	movq	%r15,0x08(%rsp)
000000000001216d	leaq	0x000529e4(%rip),%rax
0000000000012174	movq	%rax,(%rsp)
0000000000012178	leaq	0xc8(%rbp),%rdi
000000000001217c	leaq	0xc0(%rbp),%rsi
0000000000012180	leaq	0x00052969(%rip),%rdx
0000000000012187	leaq	0x0005277c(%rip),%rcx
000000000001218e	movl	$0x0000015c,%r8d
0000000000012194	leaq	0x0009d83d(%rip),%r9
000000000001219b	xorb	%al,%al
000000000001219d	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
00000000000121a2	movq	%r13,%rdi
00000000000121a5	movq	0x0009290c(%rip),%r15
00000000000121ac	movq	%r15,%rsi
00000000000121af	call	*0x00071f23(%rip)
00000000000121b5	cmpq	%rax,%r14
00000000000121b8	je	0x000121ef
00000000000121ba	leaq	0x00052a01(%rip),%rax
00000000000121c1	movq	%rax,(%rsp)
00000000000121c5	leaq	0xc8(%rbp),%rdi
00000000000121c9	leaq	0xc0(%rbp),%rsi
00000000000121cd	leaq	0x0005291c(%rip),%rdx
00000000000121d4	leaq	0x0005272f(%rip),%rcx
00000000000121db	movl	$0x0000015d,%r8d
00000000000121e1	leaq	0x0009d650(%rip),%r9
00000000000121e8	xorb	%al,%al
00000000000121ea	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
00000000000121ef	movq	%r14,%rdi
00000000000121f2	movq	0x00092b1f(%rip),%rsi
00000000000121f9	leaq	0x000a4158(%rip),%rdx
0000000000012200	movl	$0x00000001,%ecx
0000000000012205	movq	0x00071ecc(%rip),%rbx
000000000001220c	movq	%rbx,%r15
000000000001220f	call	*%r15
0000000000012212	movq	%r13,%rdi
0000000000012215	movq	0x00093f44(%rip),%rsi
000000000001221c	movq	%r12,%rdx
000000000001221f	movl	$0x00000001,%ecx
0000000000012224	call	*%r15
0000000000012227	movq	0xc8(%rbp),%rax
000000000001222b	movq	0x0009d346(%rip),%rcx
0000000000012232	incq	(%rax,%rcx)
0000000000012236	movq	0xfffffec8(%rbp),%r13
000000000001223d	movq	0xfffffee0(%rbp),%rbx
0000000000012244	incq	%rbx
0000000000012247	cmpq	0xfffffed0(%rbp),%rbx
000000000001224e	jb	0x00011d43
0000000000012254	movq	0xfffffed8(%rbp),%rdi
000000000001225b	leaq	0x0009611e(%rip),%rsi
0000000000012262	leaq	0x80(%rbp),%rdx
0000000000012266	leaq	0xffffff00(%rbp),%rcx
000000000001226d	movl	$0x00000010,%r8d
0000000000012273	call	*0x00096107(%rip)
0000000000012279	movq	%rax,0xfffffed0(%rbp)
0000000000012280	testq	%rax,%rax
0000000000012283	jne	0x00011d3e
0000000000012289	movq	0x00096720(%rip),%rdi
0000000000012290	leaq	0x00096099(%rip),%rsi
0000000000012297	call	*0x00096093(%rip)
000000000001229d	leaq	0x0009609c(%rip),%rsi
00000000000122a4	movq	%r13,%rdi
00000000000122a7	movq	%rax,%rdx
00000000000122aa	call	*0x00096090(%rip)
00000000000122b0	testb	%al,%al
00000000000122b2	je	0x000123d9
00000000000122b8	movq	0x000927f9(%rip),%rsi
00000000000122bf	movq	0xc8(%rbp),%rdi
00000000000122c3	movq	0x00071e0e(%rip),%r12
00000000000122ca	call	*%r12
00000000000122cd	movq	%rax,%rbx
00000000000122d0	movq	0x00095ae1(%rip),%rsi
00000000000122d7	movq	%r13,%rdi
00000000000122da	call	*%r12
00000000000122dd	movq	0x00093e04(%rip),%rsi
00000000000122e4	movq	%rbx,%rdi
00000000000122e7	movq	%rax,%rdx
00000000000122ea	xorl	%ecx,%ecx
00000000000122ec	movq	0xfffffef8(%rbp),%r8
00000000000122f3	call	*%r12
00000000000122f6	movq	%rax,%r14
00000000000122f9	movq	0x00092780(%rip),%rsi
0000000000012300	movq	0x00096951(%rip),%rdi
0000000000012307	call	*%r12
000000000001230a	movq	%rax,%rbx
000000000001230d	movq	0x00093d94(%rip),%rsi
0000000000012314	movq	%rbx,%rdi
0000000000012317	movq	%r14,%rdx
000000000001231a	call	*%r12
000000000001231d	movq	0x000954f4(%rip),%rsi
0000000000012324	movq	%r13,%rdi
0000000000012327	call	*%r12
000000000001232a	movq	%rax,%r14
000000000001232d	movq	0x00095874(%rip),%rsi
0000000000012334	movq	%r13,%rdi
0000000000012337	call	*%r12
000000000001233a	movq	%rax,%r15
000000000001233d	movq	0x0009587c(%rip),%rsi
0000000000012344	movq	%r13,%rdi
0000000000012347	call	*%r12
000000000001234a	movq	0x00095a6f(%rip),%rsi
0000000000012351	movq	%rbx,%rdi
0000000000012354	movq	%r14,%rdx
0000000000012357	movq	%r15,%rcx
000000000001235a	movq	%rax,%r8
000000000001235d	movl	$0x00000001,%r9d
0000000000012363	call	*%r12
0000000000012366	movq	0x00095a3b(%rip),%rsi
000000000001236d	movq	%rbx,%rdi
0000000000012370	xorl	%edx,%edx
0000000000012372	call	*%r12
0000000000012375	movq	0x0009270c(%rip),%rsi
000000000001237c	movq	0xc8(%rbp),%rdx
0000000000012380	movq	%rbx,%rdi
0000000000012383	call	*%r12
0000000000012386	movq	0x0009270b(%rip),%rsi
000000000001238d	movq	0x00095a1c(%rip),%rdx
0000000000012394	movq	%rbx,%rdi
0000000000012397	call	*%r12
000000000001239a	movq	0x00092717(%rip),%rsi
00000000000123a1	movq	0xc8(%rbp),%rdi
00000000000123a5	call	*%r12
00000000000123a8	movq	0x00092711(%rip),%rsi
00000000000123af	movq	%rax,%rdi
00000000000123b2	call	*%r12
00000000000123b5	movq	0x00093da4(%rip),%rsi
00000000000123bc	movq	%rax,%rdi
00000000000123bf	movq	%rbx,%rdx
00000000000123c2	movl	$0x00000001,%ecx
00000000000123c7	call	*%r12
00000000000123ca	movq	0x0009d1a7(%rip),%rax
00000000000123d1	movq	0xc8(%rbp),%rcx
00000000000123d5	incq	(%rcx,%rax)
00000000000123d9	movq	0x000966d0(%rip),%rdi
00000000000123e0	leaq	0x00095f49(%rip),%rsi
00000000000123e7	call	*0x00095f43(%rip)
00000000000123ed	leaq	0x00095f4c(%rip),%rsi
00000000000123f4	movq	%r13,%rdi
00000000000123f7	movq	%rax,%rdx
00000000000123fa	call	*0x00095f40(%rip)
0000000000012400	testb	%al,%al
0000000000012402	je	0x0001256d
0000000000012408	movq	0x000957d9(%rip),%rsi
000000000001240f	movq	0x0009669a(%rip),%rdi
0000000000012416	movq	%r13,%rdx
0000000000012419	call	*0x00071cb9(%rip)
000000000001241f	testb	%al,%al
0000000000012421	jne	0x0001256d
0000000000012427	movq	0x000957b2(%rip),%rsi
000000000001242e	movq	%r13,%rdi
0000000000012431	call	*0x00071ca1(%rip)
0000000000012437	testl	%eax,%eax
0000000000012439	jne	0x00012444
000000000001243b	leaq	0x000a3e56(%rip),%r14
0000000000012442	jmp	0x000124a6
0000000000012444	movq	0x00095795(%rip),%rsi
000000000001244b	movq	%r13,%rdi
000000000001244e	call	*0x00071c84(%rip)
0000000000012454	cmpl	$0x01,%eax
0000000000012457	jne	0x00012462
0000000000012459	leaq	0x000a3e18(%rip),%r14
0000000000012460	jmp	0x000124a6
0000000000012462	leaq	0x0009d3cf(%rip),%rax
0000000000012469	leaq	0x0004ae62(%rip),%rcx
0000000000012470	movq	%rcx,0x08(%rsp)
0000000000012475	movq	%rax,(%rsp)
0000000000012479	leaq	0xc8(%rbp),%rdi
000000000001247d	leaq	0xc0(%rbp),%rsi
0000000000012481	leaq	0x00052668(%rip),%rdx
0000000000012488	leaq	0x0005247b(%rip),%rcx
000000000001248f	leaq	0x000a3ee2(%rip),%r9
0000000000012496	movl	$0x00000182,%r8d
000000000001249c	xorb	%al,%al
000000000001249e	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
00000000000124a3	xorl	%r14d,%r14d
00000000000124a6	movq	0x000925d3(%rip),%rsi
00000000000124ad	movq	0x000967a4(%rip),%rdi
00000000000124b4	movq	0x00071c1d(%rip),%r12
00000000000124bb	call	*%r12
00000000000124be	movq	%rax,%rbx
00000000000124c1	movq	0x000956e0(%rip),%rsi
00000000000124c8	movq	%r13,%rdi
00000000000124cb	call	*%r12
00000000000124ce	movq	%rax,%r15
00000000000124d1	movq	0x000956e8(%rip),%rsi
00000000000124d8	movq	%r13,%rdi
00000000000124db	call	*%r12
00000000000124de	movq	0x000958db(%rip),%rsi
00000000000124e5	movq	%rbx,%rdi
00000000000124e8	movq	%r14,%rdx
00000000000124eb	movq	%r15,%rcx
00000000000124ee	movq	%rax,%r8
00000000000124f1	movl	$0x00000001,%r9d
00000000000124f7	call	*%r12
00000000000124fa	movq	0x000958a7(%rip),%rsi
0000000000012501	movq	%rbx,%rdi
0000000000012504	xorl	%edx,%edx
0000000000012506	call	*%r12
0000000000012509	movq	0x00092578(%rip),%rsi
0000000000012510	movq	0xc8(%rbp),%rdx
0000000000012514	movq	%rbx,%rdi
0000000000012517	call	*%r12
000000000001251a	movq	0x00092577(%rip),%rsi
0000000000012521	movq	0x00095888(%rip),%rdx
0000000000012528	movq	%rbx,%rdi
000000000001252b	call	*%r12
000000000001252e	movq	0x00092583(%rip),%rsi
0000000000012535	movq	0xc8(%rbp),%rdi
0000000000012539	call	*%r12
000000000001253c	movq	0x0009257d(%rip),%rsi
0000000000012543	movq	%rax,%rdi
0000000000012546	call	*%r12
0000000000012549	movq	0x00093c10(%rip),%rsi
0000000000012550	movq	%rax,%rdi
0000000000012553	movq	%rbx,%rdx
0000000000012556	movl	$0x00000001,%ecx
000000000001255b	call	*%r12
000000000001255e	movq	0x0009d013(%rip),%rax
0000000000012565	movq	0xc8(%rbp),%rcx
0000000000012569	incq	(%rcx,%rax)
000000000001256d	movq	0xc8(%rbp),%rdi
0000000000012571	movq	0x0009d000(%rip),%rax
0000000000012578	cmpq	$0x00,(%rdi,%rax)
000000000001257d	jne	0x0001258c
000000000001257f	movq	0x000925b2(%rip),%rsi
0000000000012586	call	*0x00071b4c(%rip)
000000000001258c	movq	0x00071b0d(%rip),%rax
0000000000012593	movq	(%rax),%rax
0000000000012596	cmpq	0xd0(%rbp),%rax
000000000001259a	jne	0x000125ae
000000000001259c	addq	$0x00000158,%rsp
00000000000125a3	popq	%rbx
00000000000125a4	popq	%r12
00000000000125a6	popq	%r13
00000000000125a8	popq	%r14
00000000000125aa	popq	%r15
00000000000125ac	popq	%rbp
00000000000125ad	ret
00000000000125ae	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
-[PBXGDB_BaseBreakpointSequence breakpointInfo]:
00000000000125b3	pushq	%rbp
00000000000125b4	movq	%rsp,%rbp
00000000000125b7	movq	0x0009cfaa(%rip),%rax
00000000000125be	movq	(%rdi,%rax),%rax
00000000000125c2	popq	%rbp
00000000000125c3	ret
-[PBXGDB_BreakpointGDBContext targetProductPath]:
00000000000125c4	pushq	%rbp
00000000000125c5	movq	%rsp,%rbp
00000000000125c8	movq	0x0009d051(%rip),%rax
00000000000125cf	movq	(%rdi,%rax),%rax
00000000000125d3	popq	%rbp
00000000000125d4	ret
-[PBXGDB_Adaptor fixAndContinueFileForObjectFile:patchFile:shlibFile:]:
00000000000125d5	pushq	%rbp
00000000000125d6	movq	%rsp,%rbp
00000000000125d9	pushq	%r15
00000000000125db	pushq	%r14
00000000000125dd	pushq	%r13
00000000000125df	pushq	%r12
00000000000125e1	pushq	%rbx
00000000000125e2	pushq	%rax
00000000000125e3	movq	%r8,%rbx
00000000000125e6	movq	%rcx,%r14
00000000000125e9	movq	%rdx,%r15
00000000000125ec	movq	%rdi,%r12
00000000000125ef	movq	0x00092802(%rip),%rsi
00000000000125f6	movq	0x00071adb(%rip),%r13
00000000000125fd	call	*%r13
0000000000012600	movq	0x00092d61(%rip),%rsi
0000000000012607	movq	%rax,%rdi
000000000001260a	movq	%rbx,%rdx
000000000001260d	call	*%r13
0000000000012610	movq	0x00092d69(%rip),%rsi
0000000000012617	movq	%rax,%rdi
000000000001261a	call	*%r13
000000000001261d	movq	%rax,%rbx
0000000000012620	movq	0x00092d79(%rip),%rsi
0000000000012627	movq	%r12,%rdi
000000000001262a	call	*%r13
000000000001262d	movq	%rax,%r12
0000000000012630	leaq	0x00095d19(%rip),%rsi
0000000000012637	movq	%r12,%rdi
000000000001263a	movq	%rbx,%rdx
000000000001263d	call	*0x00095d0d(%rip)
0000000000012643	testq	%rax,%rax
0000000000012646	cmovneq	%rax,%r15
000000000001264a	testq	%r14,%r14
000000000001264d	je	0x0001266a
000000000001264f	testq	%rbx,%rbx
0000000000012652	je	0x0001266a
0000000000012654	movq	0x000926d5(%rip),%rsi
000000000001265b	movq	%r12,%rdi
000000000001265e	movq	%r14,%rdx
0000000000012661	movq	%rbx,%rcx
0000000000012664	call	*0x00071a6e(%rip)
000000000001266a	movq	%r15,%rax
000000000001266d	addq	$0x08,%rsp
0000000000012671	popq	%rbx
0000000000012672	popq	%r12
0000000000012674	popq	%r13
0000000000012676	popq	%r14
0000000000012678	popq	%r15
000000000001267a	popq	%rbp
000000000001267b	ret
-[PBXLSDynamicLinkerImageController dynamicLinkerImageWithPathOrName:]:
000000000001267c	pushq	%rbp
000000000001267d	movq	%rsp,%rbp
0000000000012680	movq	0x0009cc69(%rip),%rax
0000000000012687	movq	(%rdi,%rax),%rcx
000000000001268b	movq	0x00094e46(%rip),%rsi
0000000000012692	popq	%rbp
0000000000012693	jmp	*0x00071a3f(%rip)
-[PBXLSDynamicLinkerImageController _imageByNameOrPath:inDictionary:]:
0000000000012699	pushq	%rbp
000000000001269a	movq	%rsp,%rbp
000000000001269d	pushq	%r14
000000000001269f	pushq	%rbx
00000000000126a0	movq	%rcx,%r14
00000000000126a3	movq	%rdx,%rbx
00000000000126a6	leaq	0x00095ca3(%rip),%rsi
00000000000126ad	movq	%r14,%rdi
00000000000126b0	call	*0x00095c9a(%rip)
00000000000126b6	testq	%rax,%rax
00000000000126b9	jne	0x000126e5
00000000000126bb	movq	0x00094d86(%rip),%rsi
00000000000126c2	movq	0x00096327(%rip),%rdi
00000000000126c9	movq	%rbx,%rdx
00000000000126cc	call	*0x00071a06(%rip)
00000000000126d2	leaq	0x00095c77(%rip),%rsi
00000000000126d9	movq	%r14,%rdi
00000000000126dc	movq	%rax,%rdx
00000000000126df	call	*0x00095c6b(%rip)
00000000000126e5	popq	%rbx
00000000000126e6	popq	%r14
00000000000126e8	popq	%rbp
00000000000126e9	ret
00000000000126ea	nop
00000000000126eb	nop
+[PBXLSDynamicLinkerImage nameFromPath:]:
00000000000126ec	pushq	%rbp
00000000000126ed	movq	%rsp,%rbp
00000000000126f0	pushq	%r14
00000000000126f2	pushq	%rbx
00000000000126f3	movq	0x00093806(%rip),%rsi
00000000000126fa	movq	0x000719d7(%rip),%r14
0000000000012701	movq	%rdx,%rdi
0000000000012704	call	*%r14
0000000000012707	movq	%rax,%rbx
000000000001270a	movq	0x00092bc7(%rip),%rsi
0000000000012711	leaq	0x0009cfc0(%rip),%rdx
0000000000012718	movq	%rbx,%rdi
000000000001271b	call	*%r14
000000000001271e	testq	%rdx,%rdx
0000000000012721	je	0x00012753
0000000000012723	movq	0x00094cf6(%rip),%rsi
000000000001272a	movq	0x000719a7(%rip),%r14
0000000000012731	movq	%rbx,%rdi
0000000000012734	call	*%r14
0000000000012737	movq	%rax,%rbx
000000000001273a	movq	0x00092b97(%rip),%rsi
0000000000012741	leaq	0x0009cf90(%rip),%rdx
0000000000012748	movq	%rbx,%rdi
000000000001274b	call	*%r14
000000000001274e	testq	%rdx,%rdx
0000000000012751	jne	0x0001275b
0000000000012753	movq	%rbx,%rax
0000000000012756	popq	%rbx
0000000000012757	popq	%r14
0000000000012759	popq	%rbp
000000000001275a	ret
000000000001275b	movq	0x00094cbe(%rip),%rsi
0000000000012762	movq	%rbx,%rdi
0000000000012765	popq	%rbx
0000000000012766	popq	%r14
0000000000012768	popq	%rbp
0000000000012769	jmp	*0x00071969(%rip)
-[PBXGDB_Adaptor fixAndContinueFileMap]:
000000000001276f	pushq	%rbp
0000000000012770	movq	%rsp,%rbp
0000000000012773	pushq	%rbx
0000000000012774	pushq	%rax
0000000000012775	movq	%rdi,%rbx
0000000000012778	movq	0x0009bfe9(%rip),%rax
000000000001277f	movq	(%rbx,%rax),%rax
0000000000012783	testq	%rax,%rax
0000000000012786	jne	0x000127c9
0000000000012788	movq	0x00095d21(%rip),%rdi
000000000001278f	leaq	0x00095b4a(%rip),%rsi
0000000000012796	call	*0x00095b44(%rip)
000000000001279c	movq	0x000922cd(%rip),%rsi
00000000000127a3	movq	%rax,%rdi
00000000000127a6	call	*0x0007192c(%rip)
00000000000127ac	movq	0x0009bfb5(%rip),%rdx
00000000000127b3	movq	%rax,%rdi
00000000000127b6	movq	%rbx,%rsi
00000000000127b9	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000127be	movq	0x0009bfa3(%rip),%rax
00000000000127c5	movq	(%rbx,%rax),%rax
00000000000127c9	addq	$0x08,%rsp
00000000000127cd	popq	%rbx
00000000000127ce	popq	%rbp
00000000000127cf	ret
-[PBXLSDynamicLinkerImageController haveGDBStopOnSharedLibraryLoad]:
00000000000127d0	pushq	%rbp
00000000000127d1	movq	%rsp,%rbp
00000000000127d4	xorl	%eax,%eax
00000000000127d6	popq	%rbp
00000000000127d7	ret
-[PBXGDB_MICreateFileBreakpointCommand setFileName:lineNumber:futureBreak:resolveMultipleMatches:temporary:shlib:]:
00000000000127d8	pushq	%rbp
00000000000127d9	movq	%rsp,%rbp
00000000000127dc	pushq	%r15
00000000000127de	pushq	%r14
00000000000127e0	pushq	%r13
00000000000127e2	pushq	%r12
00000000000127e4	pushq	%rbx
00000000000127e5	subq	$0x48,%rsp
00000000000127e9	movl	%r9d,0xb4(%rbp)
00000000000127ed	movl	%r8d,0xb8(%rbp)
00000000000127f1	movq	%rcx,0xc8(%rbp)
00000000000127f5	movq	%rdx,0xc0(%rbp)
00000000000127f9	movq	%rdi,%r12
00000000000127fc	xorl	%r14d,%r14d
00000000000127ff	movq	0x18(%rbp),%r15
0000000000012803	testq	%r15,%r15
0000000000012806	je	0x00012869
0000000000012808	leaq	0x00095b51(%rip),%rsi
000000000001280f	leaq	0x0009d122(%rip),%rdx
0000000000012816	movq	%r15,%rdi
0000000000012819	call	*0x00095b41(%rip)
000000000001281f	xorl	%r14d,%r14d
0000000000012822	testb	%al,%al
0000000000012824	jne	0x00012869
0000000000012826	leaq	0x00095b33(%rip),%rsi
000000000001282d	leaq	0x0009ec44(%rip),%rdx
0000000000012834	movq	%r15,%rdi
0000000000012837	call	*0x00095b23(%rip)
000000000001283d	xorl	%r14d,%r14d
0000000000012840	testb	%al,%al
0000000000012842	jne	0x00012869
0000000000012844	movq	0x000936b5(%rip),%rsi
000000000001284b	movq	0x00071886(%rip),%rbx
0000000000012852	movq	%r15,%rdi
0000000000012855	call	*%rbx
0000000000012857	movq	%rax,%r14
000000000001285a	movq	0x00093847(%rip),%rsi
0000000000012861	movq	%r12,%rdi
0000000000012864	movq	%r14,%rdx
0000000000012867	call	*%rbx
0000000000012869	movq	%r12,0xd0(%rbp)
000000000001286d	movb	0x10(%rbp),%al
0000000000012870	leaq	0x0009ec81(%rip),%r15
0000000000012877	leaq	0x0009d0ba(%rip),%rbx
000000000001287e	testb	%al,%al
0000000000012880	cmoveq	%rbx,%r15
0000000000012884	leaq	0x0009ec2d(%rip),%r13
000000000001288b	leaq	0x0009ec46(%rip),%r12
0000000000012892	movl	0xb4(%rbp),%eax
0000000000012895	testb	%al,%al
0000000000012897	cmoveq	%rbx,%r12
000000000001289b	movl	0xb8(%rbp),%eax
000000000001289e	testb	%al,%al
00000000000128a0	cmoveq	%rbx,%r13
00000000000128a4	movq	0x00095ba5(%rip),%rdi
00000000000128ab	leaq	0x00095a2e(%rip),%rsi
00000000000128b2	call	*0x00095a28(%rip)
00000000000128b8	movq	%rax,0xb8(%rbp)
00000000000128bc	testq	%r14,%r14
00000000000128bf	je	0x000128e4
00000000000128c1	movq	0x000922b0(%rip),%rsi
00000000000128c8	movq	0x00095b81(%rip),%rdi
00000000000128cf	leaq	0x0009ec42(%rip),%rdx
00000000000128d6	movq	%r14,%rcx
00000000000128d9	xorb	%al,%al
00000000000128db	call	*0x000717f7(%rip)
00000000000128e1	movq	%rax,%rbx
00000000000128e4	movq	0x000923cd(%rip),%rsi
00000000000128eb	movq	0xc8(%rbp),%rax
00000000000128ef	movq	%rax,0x10(%rsp)
00000000000128f4	movq	0xc0(%rbp),%rax
00000000000128f8	movq	%rax,0x08(%rsp)
00000000000128fd	movq	%rbx,(%rsp)
0000000000012901	leaq	0x0009eb90(%rip),%rdx
0000000000012908	movq	0xb8(%rbp),%rdi
000000000001290c	movq	%r13,%rcx
000000000001290f	movq	%r12,%r8
0000000000012912	movq	%r15,%r9
0000000000012915	xorb	%al,%al
0000000000012917	call	*0x000717bb(%rip)
000000000001291d	leaq	0x0009c20c(%rip),%rcx
0000000000012924	movq	(%rcx),%rdx
0000000000012927	movq	%rax,%rdi
000000000001292a	movq	0xd0(%rbp),%rsi
000000000001292e	addq	$0x48,%rsp
0000000000012932	popq	%rbx
0000000000012933	popq	%r12
0000000000012935	popq	%r13
0000000000012937	popq	%r14
0000000000012939	popq	%r15
000000000001293b	popq	%rbp
000000000001293c	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MIBaseBreakpointCommand setContextNumber:]:
0000000000012941	pushq	%rbp
0000000000012942	movq	%rsp,%rbp
0000000000012945	movq	0x0009c164(%rip),%rax
000000000001294c	movq	%rdx,(%rdi,%rax)
0000000000012950	popq	%rbp
0000000000012951	ret
-[PBXGDB_MIBaseBreakpointCommand didFinishWithResultList:]:
0000000000012952	pushq	%rbp
0000000000012953	movq	%rsp,%rbp
0000000000012956	pushq	%r15
0000000000012958	pushq	%r14
000000000001295a	pushq	%r12
000000000001295c	pushq	%rbx
000000000001295d	subq	$0x10,%rsp
0000000000012961	movq	%rdx,%r14
0000000000012964	movq	%rdi,%r15
0000000000012967	movq	0x0009216a(%rip),%rsi
000000000001296e	leaq	0x0009d343(%rip),%rdx
0000000000012975	movq	%r14,%rdi
0000000000012978	call	*0x0007175a(%rip)
000000000001297e	movq	%rax,%rbx
0000000000012981	testq	%rbx,%rbx
0000000000012984	je	0x00012a30
000000000001298a	movq	0x00092157(%rip),%rsi
0000000000012991	movq	0x00071740(%rip),%r12
0000000000012998	movq	%r14,%rdi
000000000001299b	call	*%r12
000000000001299e	movq	0x00093853(%rip),%rsi
00000000000129a5	movq	%r15,%rdi
00000000000129a8	movq	%rax,%rdx
00000000000129ab	call	*%r12
00000000000129ae	movq	0x0009c11b(%rip),%rax
00000000000129b5	movq	$0x00000000,(%r15,%rax)
00000000000129bd	movq	0x0009211c(%rip),%rsi
00000000000129c4	movq	%rbx,%rdi
00000000000129c7	call	*%r12
00000000000129ca	leaq	0x0009ea67(%rip),%rdx
00000000000129d1	movq	0x00092100(%rip),%rsi
00000000000129d8	movq	%rax,%rdi
00000000000129db	call	*%r12
00000000000129de	movq	0x00092123(%rip),%rsi
00000000000129e5	movq	%rax,%rdi
00000000000129e8	call	*%r12
00000000000129eb	movq	0x0009350e(%rip),%rsi
00000000000129f2	movq	%rax,%rdi
00000000000129f5	call	*%r12
00000000000129f8	movq	%rax,%rbx
00000000000129fb	testq	%rbx,%rbx
00000000000129fe	je	0x00012a45
0000000000012a00	leaq	0x00095959(%rip),%rsi
0000000000012a07	leaq	0x0009cf2a(%rip),%rdx
0000000000012a0e	movq	%rbx,%rdi
0000000000012a11	call	*0x00095949(%rip)
0000000000012a17	testb	%al,%al
0000000000012a19	jne	0x00012a45
0000000000012a1b	movq	0x00093686(%rip),%rsi
0000000000012a22	movq	%r15,%rdi
0000000000012a25	movq	%rbx,%rdx
0000000000012a28	call	*0x000716aa(%rip)
0000000000012a2e	jmp	0x00012a45
0000000000012a30	movq	0x0009c099(%rip),%rax
0000000000012a37	movq	$0x7fffffffffffffff,%rcx
0000000000012a41	movq	%rcx,(%r15,%rax)
0000000000012a45	movq	0x0009208c(%rip),%rsi
0000000000012a4c	leaq	0x0009ea05(%rip),%rdx
0000000000012a53	movq	%r14,%rdi
0000000000012a56	call	*0x0007167c(%rip)
0000000000012a5c	movq	%r15,0xd0(%rbp)
0000000000012a60	movq	0x000963c9(%rip),%rax
0000000000012a67	movq	%rax,0xd8(%rbp)
0000000000012a6b	leaq	0xd0(%rbp),%rdi
0000000000012a6f	movq	0x0009378a(%rip),%rsi
0000000000012a76	movq	%r14,%rdx
0000000000012a79	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000012a7e	addq	$0x10,%rsp
0000000000012a82	popq	%rbx
0000000000012a83	popq	%r12
0000000000012a85	popq	%r14
0000000000012a87	popq	%r15
0000000000012a89	popq	%rbp
0000000000012a8a	ret
0000000000012a8b	nop
0000000000012a8c	nop
0000000000012a8d	nop
-[PBXGDB_MIResultList items]:
0000000000012a8e	pushq	%rbp
0000000000012a8f	movq	%rsp,%rbp
0000000000012a92	movq	0x0009c2e7(%rip),%rax
0000000000012a99	movq	(%rdi,%rax),%rax
0000000000012a9d	testq	%rax,%rax
0000000000012aa0	je	0x00012aa4
0000000000012aa2	popq	%rbp
0000000000012aa3	ret
0000000000012aa4	movq	0x0009c2c5(%rip),%rax
0000000000012aab	movq	(%rdi,%rax),%rdi
0000000000012aaf	movq	0x00093c42(%rip),%rsi
0000000000012ab6	popq	%rbp
0000000000012ab7	jmp	*0x0007161b(%rip)
-[PBXGDB_MIBaseBreakpointCommand setBreakpointItemArray:]:
0000000000012abd	pushq	%rbp
0000000000012abe	movq	%rsp,%rbp
0000000000012ac1	movq	%rdx,%rax
0000000000012ac4	movq	%rdi,%rcx
0000000000012ac7	movq	0x0009c00a(%rip),%rdx
0000000000012ace	movq	%rax,%rdi
0000000000012ad1	movq	%rcx,%rsi
0000000000012ad4	popq	%rbp
0000000000012ad5	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MIBaseBreakpointCommand setShlib:]:
0000000000012ada	pushq	%rbp
0000000000012adb	movq	%rsp,%rbp
0000000000012ade	movq	%rdx,%rax
0000000000012ae1	movq	%rdi,%rcx
0000000000012ae4	movq	0x0009bfdd(%rip),%rdx
0000000000012aeb	movq	%rax,%rdi
0000000000012aee	movq	%rcx,%rsi
0000000000012af1	popq	%rbp
0000000000012af2	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_NewBreakpointSequence _breakpointWasCreated:]:
0000000000012af7	pushq	%rbp
0000000000012af8	movq	%rsp,%rbp
0000000000012afb	pushq	%r15
0000000000012afd	pushq	%r14
0000000000012aff	pushq	%r13
0000000000012b01	pushq	%r12
0000000000012b03	pushq	%rbx
0000000000012b04	subq	$0x00000088,%rsp
0000000000012b0b	movq	%rdx,%r13
0000000000012b0e	movq	%rdi,0xd0(%rbp)
0000000000012b12	movq	%rsi,0xc8(%rbp)
0000000000012b16	movq	0x00095233(%rip),%rsi
0000000000012b1d	movq	0x000715b4(%rip),%rbx
0000000000012b24	call	*%rbx
0000000000012b26	movq	%rax,0xa8(%rbp)
0000000000012b2a	movq	0x00095057(%rip),%rsi
0000000000012b31	movq	%rax,%rdi
0000000000012b34	call	*%rbx
0000000000012b36	movq	%rax,0xb0(%rbp)
0000000000012b3a	testq	%r13,%r13
0000000000012b3d	jne	0x00012bb4
0000000000012b3f	movq	0x00096102(%rip),%rdi
0000000000012b46	leaq	0x000957e3(%rip),%rbx
0000000000012b4d	movq	%rbx,%rsi
0000000000012b50	call	*0x000957da(%rip)
0000000000012b56	movq	%rax,%rdi
0000000000012b59	movq	%rbx,%rsi
0000000000012b5c	call	*0x000957ce(%rip)
0000000000012b62	movq	%rax,%rdi
0000000000012b65	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000012b6a	leaq	0xd0(%rbp),%rdi
0000000000012b6e	leaq	0xc8(%rbp),%rsi
0000000000012b72	leaq	0x00051eed(%rip),%rdx
0000000000012b79	leaq	0x00051d8a(%rip),%rcx
0000000000012b80	leaq	0x0009ce31(%rip),%r9
0000000000012b87	leaq	0x0004af72(%rip),%r8
0000000000012b8e	leaq	0x0004af6f(%rip),%rbx
0000000000012b95	movq	%rbx,0x18(%rsp)
0000000000012b9a	leaq	0x0009cc97(%rip),%rbx
0000000000012ba1	movq	%rbx,0x10(%rsp)
0000000000012ba6	movq	%rax,0x08(%rsp)
0000000000012bab	movq	%r8,(%rsp)
0000000000012baf	jmp	0x00012c7a
0000000000012bb4	movq	0x0009608d(%rip),%rdi
0000000000012bbb	leaq	0x0009576e(%rip),%rbx
0000000000012bc2	movq	%rbx,%rsi
0000000000012bc5	call	*0x00095765(%rip)
0000000000012bcb	movq	%rax,%rdi
0000000000012bce	movq	%rbx,%rsi
0000000000012bd1	call	*0x00095759(%rip)
0000000000012bd7	leaq	0x00095762(%rip),%rsi
0000000000012bde	movq	%r13,%rdi
0000000000012be1	movq	%rax,%rdx
0000000000012be4	call	*0x00095756(%rip)
0000000000012bea	testb	%al,%al
0000000000012bec	jne	0x00012c87
0000000000012bf2	movq	0x0009604f(%rip),%rdi
0000000000012bf9	leaq	0x00095730(%rip),%rbx
0000000000012c00	movq	%rbx,%rsi
0000000000012c03	call	*0x00095727(%rip)
0000000000012c09	movq	%rax,%rdi
0000000000012c0c	movq	%rbx,%rsi
0000000000012c0f	call	*0x0009571b(%rip)
0000000000012c15	movq	%rax,%rdi
0000000000012c18	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000012c1d	movq	%rax,%rbx
0000000000012c20	movq	0x00092039(%rip),%rsi
0000000000012c27	movq	%r13,%rdi
0000000000012c2a	call	*0x000714a8(%rip)
0000000000012c30	leaq	0x0009cc01(%rip),%r8
0000000000012c37	leaq	0x00051e5f(%rip),%r9
0000000000012c3e	leaq	0xd0(%rbp),%rdi
0000000000012c42	leaq	0xc8(%rbp),%rsi
0000000000012c46	leaq	0x00051e19(%rip),%rdx
0000000000012c4d	leaq	0x00051cb6(%rip),%rcx
0000000000012c54	movq	%r9,0x20(%rsp)
0000000000012c59	leaq	0x0009cd78(%rip),%r9
0000000000012c60	movq	%r8,0x18(%rsp)
0000000000012c65	movq	%rax,0x10(%rsp)
0000000000012c6a	leaq	0x0004ae8f(%rip),%rax
0000000000012c71	movq	%rbx,0x08(%rsp)
0000000000012c76	movq	%rax,(%rsp)
0000000000012c7a	movl	$0x000000cb,%r8d
0000000000012c80	xorb	%al,%al
0000000000012c82	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000012c87	movq	%r13,0x88(%rbp)
0000000000012c8b	movq	0x000950d6(%rip),%rsi
0000000000012c92	movq	0x0007143f(%rip),%rbx
0000000000012c99	movq	%r13,%rdi
0000000000012c9c	call	*%rbx
0000000000012c9e	movq	%rax,0x80(%rbp)
0000000000012ca2	movq	0x00093417(%rip),%rsi
0000000000012ca9	movq	%r13,%rdi
0000000000012cac	call	*%rbx
0000000000012cae	movq	%rax,%r14
0000000000012cb1	leaq	0x00095638(%rip),%rsi
0000000000012cb8	movq	%r14,%rdi
0000000000012cbb	call	*0x0009562f(%rip)
0000000000012cc1	testq	%rax,%rax
0000000000012cc4	jne	0x00012ccc
0000000000012cc6	movq	0xb0(%rbp),%rdi
0000000000012cca	jmp	0x00012cf6
0000000000012ccc	movq	0x00093805(%rip),%rsi
0000000000012cd3	movq	0xb0(%rbp),%rbx
0000000000012cd7	movq	%rbx,%rdi
0000000000012cda	call	*0x000713f8(%rip)
0000000000012ce0	leaq	0x00095619(%rip),%rsi
0000000000012ce7	movq	%rax,%rdi
0000000000012cea	movq	%r14,%rdx
0000000000012ced	call	*0x0009560d(%rip)
0000000000012cf3	movq	%rbx,%rdi
0000000000012cf6	movq	%rdi,0x98(%rbp)
0000000000012cfa	movq	0x0009272f(%rip),%rsi
0000000000012d01	movq	0x00095758(%rip),%rdi
0000000000012d08	call	*0x000713ca(%rip)
0000000000012d0e	movq	%rax,0x90(%rbp)
0000000000012d12	movb	$0x01,0xa7(%rbp)
0000000000012d16	movq	0x000934c3(%rip),%rbx
0000000000012d1d	movq	0x000713b4(%rip),%r14
0000000000012d24	jmp	0x00012df6
0000000000012d29	movq	0xa8(%rbp),%rdi
0000000000012d2d	movq	0x000937c4(%rip),%rsi
0000000000012d34	movq	0xb8(%rbp),%rbx
0000000000012d38	movq	%rbx,%rdx
0000000000012d3b	movq	0xc0(%rbp),%r13
0000000000012d3f	movq	%r13,%rcx
0000000000012d42	movq	%rax,%r8
0000000000012d45	call	*0x0007138d(%rip)
0000000000012d4b	movq	%rbx,%r12
0000000000012d4e	movq	0xd0(%rbp),%rdi
0000000000012d52	movq	0x0009501f(%rip),%rsi
0000000000012d59	movq	%r15,%rdx
0000000000012d5c	call	*0x00071376(%rip)
0000000000012d62	movq	0x90(%rbp),%rdi
0000000000012d66	leaq	0x00095593(%rip),%rsi
0000000000012d6d	movq	%rax,%rdx
0000000000012d70	call	*0x0009558a(%rip)
0000000000012d76	movq	%r13,%rdi
0000000000012d79	leaq	0x000955e0(%rip),%rsi
0000000000012d80	leaq	0x000a35b1(%rip),%rdx
0000000000012d87	call	*0x000955d3(%rip)
0000000000012d8d	testb	%al,%al
0000000000012d8f	movq	0x98(%rbp),%rdi
0000000000012d93	jne	0x00012da7
0000000000012d95	movq	0x0009365c(%rip),%rsi
0000000000012d9c	movl	$0x00000002,%edx
0000000000012da1	call	*0x00071331(%rip)
0000000000012da7	movq	0xd0(%rbp),%rdi
0000000000012dab	movq	0x00091f3e(%rip),%rsi
0000000000012db2	call	*%r14
0000000000012db5	movq	%rax,%rdi
0000000000012db8	movq	0x00093741(%rip),%rsi
0000000000012dbf	movq	%r12,%rdx
0000000000012dc2	movq	0xb0(%rbp),%rbx
0000000000012dc6	movq	%rbx,%rcx
0000000000012dc9	call	*%r14
0000000000012dcc	movq	0xd0(%rbp),%rax
0000000000012dd0	movq	0x0009c789(%rip),%rcx
0000000000012dd7	movq	(%rax,%rcx),%rdi
0000000000012ddb	movq	0x00094f9e(%rip),%rsi
0000000000012de2	movq	%rbx,%rdx
0000000000012de5	movq	%r12,%rcx
0000000000012de8	call	*%r14
0000000000012deb	movq	0x88(%rbp),%r13
0000000000012def	movq	0x000933ea(%rip),%rbx
0000000000012df6	movq	%r13,%rdi
0000000000012df9	movq	0x00094f70(%rip),%rsi
0000000000012e00	call	*0x000712d2(%rip)
0000000000012e06	movq	%rax,%r15
0000000000012e09	testq	%r15,%r15
0000000000012e0c	je	0x00012f29
0000000000012e12	movq	%r15,%rdi
0000000000012e15	movq	%rbx,%rsi
0000000000012e18	call	*0x000712ba(%rip)
0000000000012e1e	movq	%rax,%rdi
0000000000012e21	leaq	0x00095538(%rip),%rsi
0000000000012e28	leaq	0x0009ce89(%rip),%rdx
0000000000012e2f	call	*0x0009552b(%rip)
0000000000012e35	testb	%al,%al
0000000000012e37	je	0x00012df6
0000000000012e39	movq	%r15,%rdi
0000000000012e3c	movq	0x00091c9d(%rip),%rsi
0000000000012e43	call	*%r14
0000000000012e46	movq	%rax,%r13
0000000000012e49	movq	%r13,%rdi
0000000000012e4c	movq	0x00091c85(%rip),%r12
0000000000012e53	movq	%r12,%rsi
0000000000012e56	leaq	0x0009d15b(%rip),%rdx
0000000000012e5d	call	*%r14
0000000000012e60	movq	%rax,%rdi
0000000000012e63	movq	0x00091c9e(%rip),%rbx
0000000000012e6a	movq	%rbx,%rsi
0000000000012e6d	call	*%r14
0000000000012e70	movq	%rax,%rdi
0000000000012e73	movq	0x00092466(%rip),%rsi
0000000000012e7a	call	*%r14
0000000000012e7d	movq	%rax,0xb8(%rbp)
0000000000012e81	movq	%r13,%rdi
0000000000012e84	movq	%r12,%rsi
0000000000012e87	leaq	0x0009c90a(%rip),%rdx
0000000000012e8e	call	*%r14
0000000000012e91	movq	%rax,%rdi
0000000000012e94	movq	%rbx,%rsi
0000000000012e97	call	*%r14
0000000000012e9a	movq	%rax,0xc0(%rbp)
0000000000012e9e	movq	%r13,%rdi
0000000000012ea1	movq	%r12,%rsi
0000000000012ea4	leaq	0x0009e58d(%rip),%rdx
0000000000012eab	call	*%r14
0000000000012eae	movq	%rax,%rdi
0000000000012eb1	movq	%rbx,%rsi
0000000000012eb4	call	*%r14
0000000000012eb7	cmpb	$0x01,0xa7(%rbp)
0000000000012ebb	jne	0x00012d29
0000000000012ec1	movq	0xa8(%rbp),%rdi
0000000000012ec5	movq	0x00094d8c(%rip),%rsi
0000000000012ecc	call	*%r14
0000000000012ecf	movq	%rax,%rdi
0000000000012ed2	leaq	0x00095447(%rip),%rsi
0000000000012ed9	movq	0x80(%rbp),%rdx
0000000000012edd	call	*0x0009543d(%rip)
0000000000012ee3	movq	%rax,%rbx
0000000000012ee6	movq	%rbx,%rdi
0000000000012ee9	movq	0x00094d10(%rip),%rsi
0000000000012ef0	movq	0xb8(%rbp),%r12
0000000000012ef4	movq	%r12,%rdx
0000000000012ef7	call	*%r14
0000000000012efa	movq	%rbx,%rdi
0000000000012efd	movq	0x00094d14(%rip),%rsi
0000000000012f04	movl	$0x00000001,%edx
0000000000012f09	call	*%r14
0000000000012f0c	movq	%rbx,%rdi
0000000000012f0f	movq	0x000935da(%rip),%rsi
0000000000012f16	movq	0xc0(%rbp),%r13
0000000000012f1a	movq	%r13,%rdx
0000000000012f1d	call	*%r14
0000000000012f20	movb	$0x00,0xa7(%rbp)
0000000000012f24	jmp	0x00012d4e
0000000000012f29	movq	0x00093908(%rip),%rsi
0000000000012f30	movq	0x000711a1(%rip),%r14
0000000000012f37	movq	0x98(%rbp),%r15
0000000000012f3b	movq	%r15,%rdi
0000000000012f3e	movq	0x90(%rbp),%rdx
0000000000012f42	call	*%r14
0000000000012f45	movq	0x00094cc4(%rip),%rsi
0000000000012f4c	movq	0xa8(%rbp),%rbx
0000000000012f50	movq	%rbx,%rdi
0000000000012f53	call	*%r14
0000000000012f56	movq	0x00094d0b(%rip),%rsi
0000000000012f5d	movq	%rbx,%rdi
0000000000012f60	call	*%r14
0000000000012f63	movq	0x00091d86(%rip),%rsi
0000000000012f6a	movq	0xd0(%rbp),%rdi
0000000000012f6e	call	*%r14
0000000000012f71	movq	0x00092040(%rip),%rsi
0000000000012f78	movq	%rax,%rdi
0000000000012f7b	call	*%r14
0000000000012f7e	testb	%al,%al
0000000000012f80	jne	0x00012fa2
0000000000012f82	movq	0x0009c5d7(%rip),%rax
0000000000012f89	movq	0xd0(%rbp),%rcx
0000000000012f8d	movq	(%rcx,%rax),%rdi
0000000000012f91	movq	0x00092200(%rip),%rsi
0000000000012f98	xorl	%edx,%edx
0000000000012f9a	call	*0x00071138(%rip)
0000000000012fa0	jmp	0x00012fd7
0000000000012fa2	movq	0x00094ddf(%rip),%rsi
0000000000012fa9	movq	%r15,%rdi
0000000000012fac	call	*0x00071126(%rip)
0000000000012fb2	cmpl	$0x02,%eax
0000000000012fb5	je	0x00012fd7
0000000000012fb7	movq	0x0009c5a2(%rip),%rax
0000000000012fbe	movq	0xd0(%rbp),%rcx
0000000000012fc2	movq	(%rcx,%rax),%rdi
0000000000012fc6	movq	0x0009219b(%rip),%rsi
0000000000012fcd	movq	0xb0(%rbp),%rdx
0000000000012fd1	call	*0x00071101(%rip)
0000000000012fd7	movq	0x0009c59a(%rip),%rax
0000000000012fde	movq	0xd0(%rbp),%rdx
0000000000012fe2	movq	(%rdx,%rax),%rcx
0000000000012fe6	decq	%rcx
0000000000012fe9	movq	%rcx,(%rdx,%rax)
0000000000012fed	testq	%rcx,%rcx
0000000000012ff0	jg	0x00013003
0000000000012ff2	movq	0x00091b3f(%rip),%rsi
0000000000012ff9	movq	0xd0(%rbp),%rdi
0000000000012ffd	call	*0x000710d5(%rip)
0000000000013003	addq	$0x00000088,%rsp
000000000001300a	popq	%rbx
000000000001300b	popq	%r12
000000000001300d	popq	%r13
000000000001300f	popq	%r14
0000000000013011	popq	%r15
0000000000013013	popq	%rbp
0000000000013014	ret
-[PBXGDB_MIBaseBreakpointCommand contextNumber]:
0000000000013015	pushq	%rbp
0000000000013016	movq	%rsp,%rbp
0000000000013019	movq	0x0009ba90(%rip),%rax
0000000000013020	movq	(%rdi,%rax),%rax
0000000000013024	popq	%rbp
0000000000013025	ret
-[PBXGDB_MIBaseBreakpointCommand shlib]:
0000000000013026	pushq	%rbp
0000000000013027	movq	%rsp,%rbp
000000000001302a	movq	0x0009ba97(%rip),%rax
0000000000013031	movq	(%rdi,%rax),%rax
0000000000013035	popq	%rbp
0000000000013036	ret
-[PBXGDB_MIBaseBreakpointCommand nextBreakpointItem]:
0000000000013037	pushq	%rbp
0000000000013038	movq	%rsp,%rbp
000000000001303b	pushq	%r14
000000000001303d	pushq	%rbx
000000000001303e	movq	%rdi,%rbx
0000000000013041	movq	0x0009ba88(%rip),%rax
0000000000013048	movq	(%rbx,%rax),%r14
000000000001304c	xorl	%eax,%eax
000000000001304e	movq	$0x7fffffffffffffff,%rcx
0000000000013058	cmpq	%rcx,%r14
000000000001305b	je	0x000130ad
000000000001305d	movq	0x0009ba74(%rip),%rax
0000000000013064	movq	(%rbx,%rax),%rdi
0000000000013068	leaq	0x000952a1(%rip),%rsi
000000000001306f	call	*0x0009529b(%rip)
0000000000013075	movq	%rax,%rcx
0000000000013078	xorl	%eax,%eax
000000000001307a	cmpq	%rcx,%r14
000000000001307d	jae	0x000130ad
000000000001307f	movq	0x0009ba4a(%rip),%rax
0000000000013086	movq	(%rbx,%rax),%rdx
000000000001308a	movq	0x0009ba47(%rip),%rax
0000000000013091	movq	(%rbx,%rax),%rdi
0000000000013095	leaq	0x00095284(%rip),%rsi
000000000001309c	call	*0x0009527e(%rip)
00000000000130a2	movq	0x0009ba27(%rip),%rcx
00000000000130a9	incq	(%rbx,%rcx)
00000000000130ad	popq	%rbx
00000000000130ae	popq	%r14
00000000000130b0	popq	%rbp
00000000000130b1	ret
-[PBXGDB_BreakpointGDBContext setGDBBreakpointNumber:]:
00000000000130b2	pushq	%rbp
00000000000130b3	movq	%rsp,%rbp
00000000000130b6	movq	0x0009c553(%rip),%rax
00000000000130bd	movq	%rdx,(%rdi,%rax)
00000000000130c1	popq	%rbp
00000000000130c2	ret
-[PBXGDB_BreakpointGDBContext setBreakpointStatus:]:
00000000000130c3	pushq	%rbp
00000000000130c4	movq	%rsp,%rbp
00000000000130c7	movq	0x0009c53a(%rip),%rax
00000000000130ce	movl	%edx,(%rdi,%rax)
00000000000130d1	popq	%rbp
00000000000130d2	ret
-[PBXGDB_BreakpointGDBContext setAddress:]:
00000000000130d3	pushq	%rbp
00000000000130d4	movq	%rsp,%rbp
00000000000130d7	movq	%rdx,%rax
00000000000130da	movq	%rdi,%rcx
00000000000130dd	movq	0x0009c534(%rip),%rdx
00000000000130e4	movq	%rax,%rdi
00000000000130e7	movq	%rcx,%rsi
00000000000130ea	popq	%rbp
00000000000130eb	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_NewBreakpointSequence _handleBreakpointResolvedToLocation:]:
00000000000130f0	pushq	%rbp
00000000000130f1	movq	%rsp,%rbp
00000000000130f4	pushq	%r15
00000000000130f6	pushq	%r14
00000000000130f8	pushq	%r12
00000000000130fa	pushq	%rbx
00000000000130fb	subq	$0x30,%rsp
00000000000130ff	movq	%rdx,%r14
0000000000013102	movq	%rdi,%rbx
0000000000013105	movq	%rbx,0xd8(%rbp)
0000000000013109	movq	%rsi,0xd0(%rbp)
000000000001310d	movq	0x00094c3c(%rip),%rsi
0000000000013114	call	*0x00070fbe(%rip)
000000000001311a	testq	%rax,%rax
000000000001311d	jne	0x00013170
000000000001311f	leaq	0x0005186e(%rip),%rax
0000000000013126	leaq	0x0009c70b(%rip),%rcx
000000000001312d	leaq	0x00051876(%rip),%rdx
0000000000013134	movq	%rdx,0x10(%rsp)
0000000000013139	movq	%rcx,0x08(%rsp)
000000000001313e	movq	%rax,(%rsp)
0000000000013142	leaq	0xd8(%rbp),%rdi
0000000000013146	leaq	0xd0(%rbp),%rsi
000000000001314a	leaq	0x00051774(%rip),%rdx
0000000000013151	leaq	0x000517b2(%rip),%rcx
0000000000013158	leaq	0x000a0f79(%rip),%r9
000000000001315f	movl	$0x00000098,%r8d
0000000000013165	xorb	%al,%al
0000000000013167	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000001316c	movq	0xd8(%rbp),%rbx
0000000000013170	movq	0x00095831(%rip),%r15
0000000000013177	movq	0x00094bd2(%rip),%rsi
000000000001317e	movq	0x00070f53(%rip),%r12
0000000000013185	movq	%rbx,%rdi
0000000000013188	call	*%r12
000000000001318b	movq	0x000949f6(%rip),%rsi
0000000000013192	movq	%rax,%rdi
0000000000013195	call	*%r12
0000000000013198	movq	%rax,%rbx
000000000001319b	movq	0x00091b4e(%rip),%rsi
00000000000131a2	movq	0xd8(%rbp),%rdi
00000000000131a6	call	*%r12
00000000000131a9	movq	0x00093680(%rip),%rsi
00000000000131b0	movq	%r15,%rdi
00000000000131b3	movq	%rbx,%rdx
00000000000131b6	movq	%r14,%rcx
00000000000131b9	movq	%rax,%r8
00000000000131bc	call	*%r12
00000000000131bf	addq	$0x30,%rsp
00000000000131c3	popq	%rbx
00000000000131c4	popq	%r12
00000000000131c6	popq	%r14
00000000000131c8	popq	%r15
00000000000131ca	popq	%rbp
00000000000131cb	ret
-[PBXGDB_BreakpointController setConditionAndCommandForBreakpoint:gdbNumber:]:
00000000000131cc	pushq	%rbp
00000000000131cd	movq	%rsp,%rbp
00000000000131d0	pushq	%r15
00000000000131d2	pushq	%r14
00000000000131d4	pushq	%rbx
00000000000131d5	subq	$0x28,%rsp
00000000000131d9	movq	%rcx,%r14
00000000000131dc	movq	%rdx,%rbx
00000000000131df	movq	%rdi,0xe0(%rbp)
00000000000131e3	movq	%rsi,0xd8(%rbp)
00000000000131e7	movq	0x00091b02(%rip),%rsi
00000000000131ee	movq	0x00070ee3(%rip),%r15
00000000000131f5	call	*%r15
00000000000131f8	movq	0x000935c1(%rip),%rsi
00000000000131ff	movq	%rax,%rdi
0000000000013202	movq	%rbx,%rdx
0000000000013205	call	*%r15
0000000000013208	cmpq	%r14,%rax
000000000001320b	je	0x00013245
000000000001320d	movq	%r14,0x08(%rsp)
0000000000013212	movq	%rax,(%rsp)
0000000000013216	leaq	0xe0(%rbp),%rdi
000000000001321a	leaq	0xd8(%rbp),%rsi
000000000001321e	leaq	0x000514f8(%rip),%rdx
0000000000013225	leaq	0x000513e8(%rip),%rcx
000000000001322c	leaq	0x000a2fc5(%rip),%r9
0000000000013233	movl	$0x00000156,%r8d
0000000000013239	xorb	%al,%al
000000000001323b	callq	0x0004e5b4	; symbol stub for: __DVTAssertionWarningHandler
0000000000013240	jmp	0x000132e9
0000000000013245	testq	%r14,%r14
0000000000013248	jle	0x000132e9
000000000001324e	movq	0x00094953(%rip),%rsi
0000000000013255	movq	%rbx,%rdi
0000000000013258	call	*0x00070e7a(%rip)
000000000001325e	testq	%rax,%rax
0000000000013261	je	0x00013277
0000000000013263	movq	0x00091f06(%rip),%rsi
000000000001326a	movq	0xe0(%rbp),%rdi
000000000001326e	movq	%rbx,%rdx
0000000000013271	call	*0x00070e61(%rip)
0000000000013277	movq	0x00094942(%rip),%rsi
000000000001327e	movq	%rbx,%rdi
0000000000013281	call	*0x00070e51(%rip)
0000000000013287	testq	%rax,%rax
000000000001328a	jle	0x000132a0
000000000001328c	movq	0x00091ee5(%rip),%rsi
0000000000013293	movq	0xe0(%rbp),%rdi
0000000000013297	movq	%rbx,%rdx
000000000001329a	call	*0x00070e38(%rip)
00000000000132a0	movq	0x00094989(%rip),%rsi
00000000000132a7	movq	0xe0(%rbp),%rdi
00000000000132ab	movq	%rbx,%rdx
00000000000132ae	call	*0x00070e24(%rip)
00000000000132b4	movq	%rax,%rbx
00000000000132b7	leaq	0x000950a2(%rip),%rsi
00000000000132be	leaq	0x0009c673(%rip),%rdx
00000000000132c5	movq	%rbx,%rdi
00000000000132c8	call	*0x00095092(%rip)
00000000000132ce	testb	%al,%al
00000000000132d0	jne	0x000132e9
00000000000132d2	movq	0x0009495f(%rip),%rsi
00000000000132d9	movq	0xe0(%rbp),%rdi
00000000000132dd	movq	%rbx,%rdx
00000000000132e0	movq	%r14,%rcx
00000000000132e3	call	*0x00070def(%rip)
00000000000132e9	addq	$0x28,%rsp
00000000000132ed	popq	%rbx
00000000000132ee	popq	%r14
00000000000132f0	popq	%r15
00000000000132f2	popq	%rbp
00000000000132f3	ret
-[PBXGDB_BreakpointController gdbCommandStringForBreakpoint:]:
00000000000132f4	pushq	%rbp
00000000000132f5	movq	%rsp,%rbp
00000000000132f8	pushq	%r15
00000000000132fa	pushq	%r14
00000000000132fc	pushq	%r13
00000000000132fe	pushq	%r12
0000000000013300	pushq	%rbx
0000000000013301	subq	$0x000000e8,%rsp
0000000000013308	movq	%rdx,%rbx
000000000001330b	movq	%rdi,0xfffffef8(%rbp)
0000000000013312	movq	0x00070d87(%rip),%rax
0000000000013319	movq	(%rax),%rax
000000000001331c	movq	%rax,0xd0(%rbp)
0000000000013320	movq	0x00091969(%rip),%rsi
0000000000013327	movq	0x0009510a(%rip),%rdi
000000000001332e	movq	0x00070da3(%rip),%r14
0000000000013335	call	*%r14
0000000000013338	movq	%rax,0xffffff00(%rbp)
000000000001333f	xorps	%xmm0,%xmm0
0000000000013342	movaps	%xmm0,0xc0(%rbp)
0000000000013346	movaps	%xmm0,0xb0(%rbp)
000000000001334a	movaps	%xmm0,0xa0(%rbp)
000000000001334e	movaps	%xmm0,0x90(%rbp)
0000000000013352	movq	0x00093dd7(%rip),%rsi
0000000000013359	movq	%rbx,%rdi
000000000001335c	call	*%r14
000000000001335f	movq	%rax,0xffffff08(%rbp)
0000000000013366	leaq	0x00095013(%rip),%rsi
000000000001336d	leaq	0x90(%rbp),%rdx
0000000000013371	leaq	0xffffff10(%rbp),%rcx
0000000000013378	movq	%rax,%rdi
000000000001337b	movl	$0x00000010,%r8d
0000000000013381	call	*0x00094ff9(%rip)
0000000000013387	movq	%rax,%rbx
000000000001338a	testq	%rbx,%rbx
000000000001338d	je	0x0001347a
0000000000013393	movq	0xa0(%rbp),%rax
0000000000013397	movq	(%rax),%rax
000000000001339a	movq	%rax,0xfffffef0(%rbp)
00000000000133a1	xorb	%r12b,%r12b
00000000000133a4	movq	0x00070d2d(%rip),%r15
00000000000133ab	xorl	%r14d,%r14d
00000000000133ae	movq	0xa0(%rbp),%rax
00000000000133b2	movq	0xfffffef0(%rbp),%rcx
00000000000133b9	cmpq	%rcx,(%rax)
00000000000133bc	je	0x000133ca
00000000000133be	movq	0xffffff08(%rbp),%rdi
00000000000133c5	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
00000000000133ca	testb	%r12b,%r12b
00000000000133cd	jne	0x0001347a
00000000000133d3	movq	0x98(%rbp),%rax
00000000000133d7	movq	(%rax,%r14,8),%r13
00000000000133db	movq	0x000956e6(%rip),%rdi
00000000000133e2	leaq	0x00094f47(%rip),%rsi
00000000000133e9	call	*0x00094f41(%rip)
00000000000133ef	movq	%r13,%rdi
00000000000133f2	leaq	0x00094f47(%rip),%rsi
00000000000133f9	movq	%rax,%rdx
00000000000133fc	call	*0x00094f3e(%rip)
0000000000013402	movb	$0x01,%r12b
0000000000013405	testb	%al,%al
0000000000013407	je	0x0001343d
0000000000013409	movq	0xfffffef8(%rbp),%rdi
0000000000013410	movq	0x000948d9(%rip),%rsi
0000000000013417	movq	%r13,%rdx
000000000001341a	call	*%r15
000000000001341d	xorb	%r12b,%r12b
0000000000013420	movq	0xffffff00(%rbp),%rdi
0000000000013427	movq	0x0009186a(%rip),%rsi
000000000001342e	leaq	0x000a2e03(%rip),%rdx
0000000000013435	movq	%rax,%rcx
0000000000013438	xorb	%al,%al
000000000001343a	call	*%r15
000000000001343d	incq	%r14
0000000000013440	cmpq	%rbx,%r14
0000000000013443	jb	0x000133ae
0000000000013449	movq	0xffffff08(%rbp),%rdi
0000000000013450	leaq	0x00094f29(%rip),%rsi
0000000000013457	leaq	0x90(%rbp),%rdx
000000000001345b	leaq	0xffffff10(%rbp),%rcx
0000000000013462	movl	$0x00000010,%r8d
0000000000013468	call	*0x00094f12(%rip)
000000000001346e	movq	%rax,%rbx
0000000000013471	testq	%rbx,%rbx
0000000000013474	jne	0x000133ab
000000000001347a	movq	0x00091dbf(%rip),%rsi
0000000000013481	movq	0x00095150(%rip),%rdi
0000000000013488	movq	0x00070c49(%rip),%rbx
000000000001348f	call	*%rbx
0000000000013491	movq	0x00094860(%rip),%rsi
0000000000013498	movq	0xffffff00(%rbp),%rdi
000000000001349f	movq	%rax,%rdx
00000000000134a2	call	*%rbx
00000000000134a4	movq	0x00070bf5(%rip),%rcx
00000000000134ab	movq	(%rcx),%rcx
00000000000134ae	cmpq	0xd0(%rbp),%rcx
00000000000134b2	jne	0x000134c6
00000000000134b4	addq	$0x000000e8,%rsp
00000000000134bb	popq	%rbx
00000000000134bc	popq	%r12
00000000000134be	popq	%r13
00000000000134c0	popq	%r14
00000000000134c2	popq	%r15
00000000000134c4	popq	%rbp
00000000000134c5	ret
00000000000134c6	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
-[PBXGDB_BreakpointInfo decrementUnresolvedCount]:
00000000000134cb	pushq	%rbp
00000000000134cc	movq	%rsp,%rbp
00000000000134cf	movq	0x0009c122(%rip),%rax
00000000000134d6	decq	(%rdi,%rax)
00000000000134da	cmpq	$0x00,(%rdi,%rax)
00000000000134df	jns	0x000134e9
00000000000134e1	movq	$0x00000000,(%rdi,%rax)
00000000000134e9	popq	%rbp
00000000000134ea	ret
-[PBXGDB_BreakpointInfo hasUnresolvedContexts]:
00000000000134eb	pushq	%rbp
00000000000134ec	movq	%rsp,%rbp
00000000000134ef	movq	0x0009c102(%rip),%rax
00000000000134f6	cmpq	$0x00,(%rdi,%rax)
00000000000134fb	setg	%al
00000000000134fe	movzbl	%al,%eax
0000000000013501	popq	%rbp
0000000000013502	ret
-[PBXGDB_BaseBreakpointSequence didFinish]:
0000000000013503	pushq	%rbp
0000000000013504	movq	%rsp,%rbp
0000000000013507	subq	$0x10,%rsp
000000000001350b	movq	%rdi,0xf0(%rbp)
000000000001350f	movq	0x00095b52(%rip),%rax
0000000000013516	movq	%rax,0xf8(%rbp)
000000000001351a	movq	0x00091617(%rip),%rsi
0000000000013521	leaq	0xf0(%rbp),%rdi
0000000000013525	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000001352a	addq	$0x10,%rsp
000000000001352e	popq	%rbp
000000000001352f	ret
-[PBXGDB_TurnBreakpointsOnOffSequence execute]:
0000000000013530	pushq	%rbp
0000000000013531	movq	%rsp,%rbp
0000000000013534	pushq	%r15
0000000000013536	pushq	%r14
0000000000013538	pushq	%r13
000000000001353a	pushq	%r12
000000000001353c	pushq	%rbx
000000000001353d	subq	$0x000000e8,%rsp
0000000000013544	movq	0x00070b55(%rip),%rax
000000000001354b	movq	(%rax),%rax
000000000001354e	movq	%rax,0xd0(%rbp)
0000000000013552	movq	0x0009c08f(%rip),%rax
0000000000013559	cmpb	$0x01,(%rdi,%rax)
000000000001355d	je	0x00013572
000000000001355f	movq	%rdi,0xffffff00(%rbp)
0000000000013566	leaq	0x000a2f4b(%rip),%rbx
000000000001356d	jmp	0x0001377d
0000000000013572	movq	0x0009153f(%rip),%rsi
0000000000013579	movq	0x00070b58(%rip),%rbx
0000000000013580	movq	%rdi,0xffffff00(%rbp)
0000000000013587	call	*%rbx
0000000000013589	movq	0x00091758(%rip),%rsi
0000000000013590	movq	%rax,%rdi
0000000000013593	call	*%rbx
0000000000013595	movq	0x00091754(%rip),%rsi
000000000001359c	movq	%rax,%rdi
000000000001359f	call	*%rbx
00000000000135a1	movq	0x00092e40(%rip),%rsi
00000000000135a8	movq	%rax,%rdi
00000000000135ab	call	*%rbx
00000000000135ad	movq	%rax,%r14
00000000000135b0	leaq	0x00094d29(%rip),%rsi
00000000000135b7	movq	0x00094e7a(%rip),%rdi
00000000000135be	call	*0x00094d1c(%rip)
00000000000135c4	movq	0x000914a5(%rip),%rsi
00000000000135cb	movq	%rax,%rdi
00000000000135ce	call	*%rbx
00000000000135d0	movq	%rax,0xfffffef8(%rbp)
00000000000135d7	xorps	%xmm0,%xmm0
00000000000135da	movaps	%xmm0,0xc0(%rbp)
00000000000135de	movaps	%xmm0,0xb0(%rbp)
00000000000135e2	movaps	%xmm0,0xa0(%rbp)
00000000000135e6	movaps	%xmm0,0x90(%rbp)
00000000000135ea	movq	0x000941cf(%rip),%rsi
00000000000135f1	movq	%r14,%rdi
00000000000135f4	call	*%rbx
00000000000135f6	movq	%rax,0xffffff08(%rbp)
00000000000135fd	leaq	0x00094d7c(%rip),%rsi
0000000000013604	leaq	0x90(%rbp),%rdx
0000000000013608	leaq	0xffffff10(%rbp),%rcx
000000000001360f	movq	%rax,%rdi
0000000000013612	movl	$0x00000010,%r8d
0000000000013618	call	*0x00094d62(%rip)
000000000001361e	movq	%rax,%r12
0000000000013621	testq	%r12,%r12
0000000000013624	je	0x00013735
000000000001362a	movq	0xa0(%rbp),%rax
000000000001362e	movq	(%rax),%rax
0000000000013631	movq	%rax,0xfffffef0(%rbp)
0000000000013638	xorl	%r15d,%r15d
000000000001363b	movq	0xa0(%rbp),%rax
000000000001363f	movq	0xfffffef0(%rbp),%rcx
0000000000013646	cmpq	%rcx,(%rax)
0000000000013649	je	0x00013657
000000000001364b	movq	0xffffff08(%rbp),%rdi
0000000000013652	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
0000000000013657	movq	0x98(%rbp),%rax
000000000001365b	movq	(%rax,%r15,8),%r13
000000000001365f	movq	0x000952c2(%rip),%rdi
0000000000013666	leaq	0x00094cc3(%rip),%rsi
000000000001366d	call	*0x00094cbd(%rip)
0000000000013673	movq	%r13,%rdi
0000000000013676	leaq	0x00094cc3(%rip),%rsi
000000000001367d	movq	%rax,%rdx
0000000000013680	call	*0x00094cba(%rip)
0000000000013686	movb	%al,%bl
0000000000013688	movq	0xffffff00(%rbp),%rdi
000000000001368f	movq	0x0009165a(%rip),%rsi
0000000000013696	call	*0x00070a3c(%rip)
000000000001369c	movq	%rax,%rdi
000000000001369f	testb	%bl,%bl
00000000000136a1	je	0x000136ac
00000000000136a3	movq	0x0009472e(%rip),%rsi
00000000000136aa	jmp	0x000136b3
00000000000136ac	movq	0x0009310d(%rip),%rsi
00000000000136b3	movq	%r13,%rdx
00000000000136b6	call	*0x00070a1c(%rip)
00000000000136bc	movq	%rax,%r14
00000000000136bf	movq	%r13,%rdi
00000000000136c2	movq	0x00094157(%rip),%rsi
00000000000136c9	call	*0x00070a09(%rip)
00000000000136cf	testb	%al,%al
00000000000136d1	je	0x000136f8
00000000000136d3	testq	%r14,%r14
00000000000136d6	je	0x000136f8
00000000000136d8	movq	0xfffffef8(%rbp),%rdi
00000000000136df	movq	0x000915b2(%rip),%rsi
00000000000136e6	leaq	0x000a2d8b(%rip),%rdx
00000000000136ed	movq	%r14,%rcx
00000000000136f0	xorb	%al,%al
00000000000136f2	call	*0x000709e0(%rip)
00000000000136f8	incq	%r15
00000000000136fb	cmpq	%r12,%r15
00000000000136fe	jb	0x0001363b
0000000000013704	movq	0xffffff08(%rbp),%rdi
000000000001370b	leaq	0x00094c6e(%rip),%rsi
0000000000013712	leaq	0x90(%rbp),%rdx
0000000000013716	leaq	0xffffff10(%rbp),%rcx
000000000001371d	movl	$0x00000010,%r8d
0000000000013723	call	*0x00094c57(%rip)
0000000000013729	movq	%rax,%r12
000000000001372c	testq	%r12,%r12
000000000001372f	jne	0x00013638
0000000000013735	leaq	0x00094bb4(%rip),%rsi
000000000001373c	movq	0xfffffef8(%rbp),%rbx
0000000000013743	movq	%rbx,%rdi
0000000000013746	call	*0x00094ba4(%rip)
000000000001374c	testq	%rax,%rax
000000000001374f	jne	0x0001375a
0000000000013751	leaq	0x0009c1e0(%rip),%rbx
0000000000013758	jmp	0x0001377d
000000000001375a	movq	0x00091417(%rip),%rsi
0000000000013761	movq	0x00094ce8(%rip),%rdi
0000000000013768	leaq	0x000a2d29(%rip),%rdx
000000000001376f	movq	%rbx,%rcx
0000000000013772	xorb	%al,%al
0000000000013774	call	*0x0007095e(%rip)
000000000001377a	movq	%rax,%rbx
000000000001377d	movq	0x000912fc(%rip),%rsi
0000000000013784	movq	0x000953a5(%rip),%rdi
000000000001378b	movq	0x00070946(%rip),%r15
0000000000013792	call	*%r15
0000000000013795	movq	%rax,%r14
0000000000013798	movq	0x00092a79(%rip),%rsi
000000000001379f	movq	%r14,%rdi
00000000000137a2	movq	%rbx,%rdx
00000000000137a5	call	*%r15
00000000000137a8	movq	0x000912e9(%rip),%rsi
00000000000137af	movq	0x0009253a(%rip),%rdx
00000000000137b6	movq	%r14,%rdi
00000000000137b9	call	*%r15
00000000000137bc	movq	0x000912c5(%rip),%rsi
00000000000137c3	movq	%r14,%rdi
00000000000137c6	movq	0xffffff00(%rbp),%rbx
00000000000137cd	movq	%rbx,%rdx
00000000000137d0	call	*%r15
00000000000137d3	movq	0x000912de(%rip),%rsi
00000000000137da	movq	%rbx,%rdi
00000000000137dd	call	*%r15
00000000000137e0	movq	0x000912d9(%rip),%rsi
00000000000137e7	movq	%rax,%rdi
00000000000137ea	call	*%r15
00000000000137ed	movq	0x000912d4(%rip),%rsi
00000000000137f4	movq	%rax,%rdi
00000000000137f7	movq	%r14,%rdx
00000000000137fa	call	*%r15
00000000000137fd	movq	0x0007089c(%rip),%rax
0000000000013804	movq	(%rax),%rax
0000000000013807	cmpq	0xd0(%rbp),%rax
000000000001380b	jne	0x0001381f
000000000001380d	addq	$0x000000e8,%rsp
0000000000013814	popq	%rbx
0000000000013815	popq	%r12
0000000000013817	popq	%r13
0000000000013819	popq	%r14
000000000001381b	popq	%r15
000000000001381d	popq	%rbp
000000000001381e	ret
000000000001381f	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
-[PBXGDB_MICommand setGDBCommandString:]:
0000000000013824	pushq	%rbp
0000000000013825	movq	%rsp,%rbp
0000000000013828	movq	%rdx,%rax
000000000001382b	movq	%rdi,%rcx
000000000001382e	movq	0x0009b2fb(%rip),%rdx
0000000000013835	movq	%rax,%rdi
0000000000013838	movq	%rcx,%rsi
000000000001383b	popq	%rbp
000000000001383c	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_TurnBreakpointsOnOffSequence _didFinish:]:
0000000000013841	pushq	%rbp
0000000000013842	movq	%rsp,%rbp
0000000000013845	movq	0x000912ec(%rip),%rsi
000000000001384c	popq	%rbp
000000000001384d	jmp	*0x00070885(%rip)
0000000000013853	nop
0000000000013854	nop
0000000000013855	nop
0000000000013856	nop
0000000000013857	nop
-[PBXGDB_MIController continueFromImplicitInterrupt]:
0000000000013858	pushq	%rbp
0000000000013859	movq	%rsp,%rbp
000000000001385c	pushq	%r14
000000000001385e	pushq	%rbx
000000000001385f	movq	%rdi,%rbx
0000000000013862	movq	0x0009124f(%rip),%rsi
0000000000013869	movq	0x00070868(%rip),%r14
0000000000013870	call	*%r14
0000000000013873	movq	0x00092b66(%rip),%rsi
000000000001387a	movq	%rax,%rdi
000000000001387d	call	*%r14
0000000000013880	testb	%al,%al
0000000000013882	je	0x00013889
0000000000013884	popq	%rbx
0000000000013885	popq	%r14
0000000000013887	popq	%rbp
0000000000013888	ret
0000000000013889	movq	0x00092a80(%rip),%rsi
0000000000013890	leaq	0x0009e3a1(%rip),%rdx
0000000000013897	movq	%rbx,%rdi
000000000001389a	xorl	%ecx,%ecx
000000000001389c	popq	%rbx
000000000001389d	popq	%r14
000000000001389f	popq	%rbp
00000000000138a0	jmp	*0x00070832(%rip)
-[PBXGDB_Adaptor isRestarting]:
00000000000138a6	pushq	%rbp
00000000000138a7	movq	%rsp,%rbp
00000000000138aa	movq	0x0009ae57(%rip),%rax
00000000000138b1	movsbl	(%rdi,%rax),%eax
00000000000138b5	popq	%rbp
00000000000138b6	ret
-[PBXGDB_Adaptor threadController]:
00000000000138b7	pushq	%rbp
00000000000138b8	movq	%rsp,%rbp
00000000000138bb	movq	0x0009adbe(%rip),%rax
00000000000138c2	movq	(%rdi,%rax),%rax
00000000000138c6	popq	%rbp
00000000000138c7	ret
00000000000138c8	nop
-[PBXGDB_ThreadController setAllThreadsStateToRunning]:
00000000000138c9	pushq	%rbp
00000000000138ca	movq	%rsp,%rbp
00000000000138cd	pushq	%rbx
00000000000138ce	pushq	%rax
00000000000138cf	movq	%rdi,%rbx
00000000000138d2	movq	0x000932af(%rip),%rsi
00000000000138d9	movq	$0x00000000,(%rsp)
00000000000138e1	movl	$0x00000001,%edx
00000000000138e6	xorl	%ecx,%ecx
00000000000138e8	movq	$0xffffffff,%r8
00000000000138ef	xorl	%r9d,%r9d
00000000000138f2	call	*0x000707e0(%rip)
00000000000138f8	movq	0x00093879(%rip),%rsi
00000000000138ff	movq	%rbx,%rdi
0000000000013902	movq	0x000707cf(%rip),%rax
0000000000013909	addq	$0x08,%rsp
000000000001390d	popq	%rbx
000000000001390e	popq	%rbp
000000000001390f	jmp	*%rax
0000000000013911	nop
-[PBXGDB_ThreadController updateThreadsToState:status:currentThreadId:currentThreadStatus:newThreadList:]:
0000000000013912	pushq	%rbp
0000000000013913	movq	%rsp,%rbp
0000000000013916	pushq	%r15
0000000000013918	pushq	%r14
000000000001391a	pushq	%r13
000000000001391c	pushq	%r12
000000000001391e	pushq	%rbx
000000000001391f	subq	$0x000001e8,%rsp
0000000000013926	movq	%r9,0xfffffe10(%rbp)
000000000001392d	movq	%r8,0xfffffe00(%rbp)
0000000000013934	movl	%ecx,0xfffffe08(%rbp)
000000000001393a	movl	%edx,0xfffffe24(%rbp)
0000000000013940	movq	%rdi,%rbx
0000000000013943	movq	%rbx,0xfffffe18(%rbp)
000000000001394a	movq	0x0007074f(%rip),%rax
0000000000013951	movq	(%rax),%rax
0000000000013954	movq	%rax,0xd0(%rbp)
0000000000013958	movq	0x00092989(%rip),%rsi
000000000001395f	movq	0x0009221a(%rip),%rcx
0000000000013966	movq	0x00095133(%rip),%rdi
000000000001396d	movq	0x00070764(%rip),%r14
0000000000013974	movq	%rbx,%rdx
0000000000013977	xorl	%r8d,%r8d
000000000001397a	call	*%r14
000000000001397d	movq	0x00091134(%rip),%rsi
0000000000013984	movq	%rbx,%rdi
0000000000013987	call	*%r14
000000000001398a	movq	%rax,%rbx
000000000001398d	movq	%rbx,0xfffffe48(%rbp)
0000000000013994	movq	0x00091455(%rip),%rsi
000000000001399b	movq	%rbx,%rdi
000000000001399e	call	*%r14
00000000000139a1	movq	%rax,%r15
00000000000139a4	movq	0x000936cd(%rip),%rsi
00000000000139ab	movq	%rbx,%rdi
00000000000139ae	call	*%r14
00000000000139b1	movq	0x10(%rbp),%r12
00000000000139b5	testq	%r12,%r12
00000000000139b8	jne	0x000139c6
00000000000139ba	movq	%r15,0xfffffe30(%rbp)
00000000000139c1	jmp	0x00013c8d
00000000000139c6	movq	0x00094a93(%rip),%rdi
00000000000139cd	leaq	0x0009490c(%rip),%rsi
00000000000139d4	call	*0x00094906(%rip)
00000000000139da	movq	%rax,%rbx
00000000000139dd	movq	0x00092724(%rip),%rsi
00000000000139e4	movq	0x000706ed(%rip),%r14
00000000000139eb	movq	%r15,%rdi
00000000000139ee	movq	%r15,0xfffffe30(%rbp)
00000000000139f5	call	*%r14
00000000000139f8	movq	0x00092d01(%rip),%rsi
00000000000139ff	movq	%rbx,%rdi
0000000000013a02	movq	%rax,%rdx
0000000000013a05	call	*%r14
0000000000013a08	movq	%rax,0xfffffe40(%rbp)
0000000000013a0f	leaq	0x0009496a(%rip),%rsi
0000000000013a16	leaq	0x90(%rbp),%rdx
0000000000013a1a	leaq	0xffffff10(%rbp),%rcx
0000000000013a21	xorps	%xmm0,%xmm0
0000000000013a24	movaps	%xmm0,0xc0(%rbp)
0000000000013a28	movaps	%xmm0,0xb0(%rbp)
0000000000013a2c	movaps	%xmm0,0xa0(%rbp)
0000000000013a30	movaps	%xmm0,0x90(%rbp)
0000000000013a34	movq	%r12,%rdi
0000000000013a37	movl	$0x00000010,%r8d
0000000000013a3d	call	*0x0009493d(%rip)
0000000000013a43	movq	%rax,0xfffffe38(%rbp)
0000000000013a4a	testq	%rax,%rax
0000000000013a4d	movq	%r12,%rbx
0000000000013a50	je	0x00013b96
0000000000013a56	movq	0xa0(%rbp),%rax
0000000000013a5a	movq	(%rax),%rax
0000000000013a5d	movq	%rax,0xfffffe28(%rbp)
0000000000013a64	movq	0x0007066d(%rip),%r14
0000000000013a6b	xorl	%r12d,%r12d
0000000000013a6e	movq	0xa0(%rbp),%rax
0000000000013a72	movq	0xfffffe28(%rbp),%rcx
0000000000013a79	cmpq	%rcx,(%rax)
0000000000013a7c	je	0x00013a86
0000000000013a7e	movq	%rbx,%rdi
0000000000013a81	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
0000000000013a86	movq	0x98(%rbp),%rax
0000000000013a8a	movq	(%rax,%r12,8),%r15
0000000000013a8e	movq	%r15,%rdi
0000000000013a91	movq	0x000935e8(%rip),%rbx
0000000000013a98	movq	%rbx,%rsi
0000000000013a9b	call	*%r14
0000000000013a9e	movq	0xfffffe30(%rbp),%rdi
0000000000013aa5	movq	0x00092194(%rip),%rsi
0000000000013aac	movq	%rax,%rdx
0000000000013aaf	call	*%r14
0000000000013ab2	movq	%rax,%r13
0000000000013ab5	movq	%r15,%rdi
0000000000013ab8	testq	%r13,%r13
0000000000013abb	jne	0x00013b06
0000000000013abd	movq	%rbx,%rsi
0000000000013ac0	call	*%r14
0000000000013ac3	movq	%rax,%r13
0000000000013ac6	movq	%r15,%rdi
0000000000013ac9	movq	0x000911d0(%rip),%rsi
0000000000013ad0	call	*%r14
0000000000013ad3	movq	%rax,%rbx
0000000000013ad6	movq	%r15,%rdi
0000000000013ad9	movq	0x000935a8(%rip),%rsi
0000000000013ae0	call	*%r14
0000000000013ae3	movq	0xfffffe48(%rbp),%rdi
0000000000013aea	movq	0x0009359f(%rip),%rsi
0000000000013af1	movq	%r13,%rdx
0000000000013af4	movq	%rbx,%rcx
0000000000013af7	movq	%rax,%r8
0000000000013afa	leaq	0x000a0917(%rip),%r9
0000000000013b01	call	*%r14
0000000000013b04	jmp	0x00013b51
0000000000013b06	movq	0x00091193(%rip),%rsi
0000000000013b0d	call	*%r14
0000000000013b10	movq	%r13,%rdi
0000000000013b13	movq	0x0009133e(%rip),%rsi
0000000000013b1a	movq	%rax,%rdx
0000000000013b1d	call	*%r14
0000000000013b20	movq	%r15,%rdi
0000000000013b23	movq	0x0009355e(%rip),%rsi
0000000000013b2a	call	*%r14
0000000000013b2d	movq	%r13,%rdi
0000000000013b30	movq	0x00092c41(%rip),%rsi
0000000000013b37	movq	%rax,%rdx
0000000000013b3a	call	*%r14
0000000000013b3d	movq	0xfffffe40(%rbp),%rdi
0000000000013b44	movq	0x000911d5(%rip),%rsi
0000000000013b4b	movq	%r13,%rdx
0000000000013b4e	call	*%r14
0000000000013b51	incq	%r12
0000000000013b54	cmpq	0xfffffe38(%rbp),%r12
0000000000013b5b	movq	0x10(%rbp),%rbx
0000000000013b5f	jb	0x00013a6e
0000000000013b65	movq	%rbx,%rdi
0000000000013b68	leaq	0x00094811(%rip),%rsi
0000000000013b6f	leaq	0x90(%rbp),%rdx
0000000000013b73	leaq	0xffffff10(%rbp),%rcx
0000000000013b7a	movl	$0x00000010,%r8d
0000000000013b80	call	*0x000947fa(%rip)
0000000000013b86	movq	%rax,0xfffffe38(%rbp)
0000000000013b8d	testq	%rax,%rax
0000000000013b90	jne	0x00013a6b
0000000000013b96	xorps	%xmm0,%xmm0
0000000000013b99	movaps	%xmm0,0xffffff00(%rbp)
0000000000013ba0	movaps	%xmm0,0xfffffef0(%rbp)
0000000000013ba7	movaps	%xmm0,0xfffffee0(%rbp)
0000000000013bae	movaps	%xmm0,0xfffffed0(%rbp)
0000000000013bb5	leaq	0x000947c4(%rip),%rsi
0000000000013bbc	leaq	0xfffffed0(%rbp),%rdx
0000000000013bc3	leaq	0xfffffe50(%rbp),%rcx
0000000000013bca	movq	0xfffffe40(%rbp),%rdi
0000000000013bd1	movl	$0x00000010,%r8d
0000000000013bd7	call	*0x000947a3(%rip)
0000000000013bdd	movq	%rax,%rbx
0000000000013be0	testq	%rbx,%rbx
0000000000013be3	je	0x00013c79
0000000000013be9	movq	0xfffffee0(%rbp),%rax
0000000000013bf0	movq	(%rax),%r14
0000000000013bf3	movq	0x000914f6(%rip),%r12
0000000000013bfa	movq	0x000704d7(%rip),%r13
0000000000013c01	xorl	%r15d,%r15d
0000000000013c04	movq	0xfffffee0(%rbp),%rax
0000000000013c0b	cmpq	%r14,(%rax)
0000000000013c0e	je	0x00013c1c
0000000000013c10	movq	0xfffffe40(%rbp),%rdi
0000000000013c17	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
0000000000013c1c	movq	0xfffffed8(%rbp),%rax
0000000000013c23	movq	(%rax,%r15,8),%rdi
0000000000013c27	movq	%r12,%rsi
0000000000013c2a	call	*%r13
0000000000013c2d	movq	0xfffffe48(%rbp),%rdi
0000000000013c34	movq	0x0009345d(%rip),%rsi
0000000000013c3b	movq	%rax,%rdx
0000000000013c3e	call	*%r13
0000000000013c41	incq	%r15
0000000000013c44	cmpq	%rbx,%r15
0000000000013c47	jb	0x00013c04
0000000000013c49	movq	0xfffffe40(%rbp),%rdi
0000000000013c50	leaq	0x00094729(%rip),%rsi
0000000000013c57	leaq	0xfffffed0(%rbp),%rdx
0000000000013c5e	leaq	0xfffffe50(%rbp),%rcx
0000000000013c65	movl	$0x00000010,%r8d
0000000000013c6b	call	*0x0009470f(%rip)
0000000000013c71	movq	%rax,%rbx
0000000000013c74	testq	%rbx,%rbx
0000000000013c77	jne	0x00013c01
0000000000013c79	movq	0x00093420(%rip),%rsi
0000000000013c80	movq	0xfffffe18(%rbp),%rdi
0000000000013c87	call	*0x0007044b(%rip)
0000000000013c8d	movq	0x00092474(%rip),%rsi
0000000000013c94	movq	0xfffffe30(%rbp),%rbx
0000000000013c9b	movq	%rbx,%rdi
0000000000013c9e	call	*0x00070434(%rip)
0000000000013ca4	movq	%rax,0xfffffe38(%rbp)
0000000000013cab	leaq	0x0009465e(%rip),%rsi
0000000000013cb2	movq	%rax,%rdi
0000000000013cb5	call	*0x00094655(%rip)
0000000000013cbb	movq	%rax,0xfffffe28(%rbp)
0000000000013cc2	xorl	%eax,%eax
0000000000013cc4	movq	0xfffffe00(%rbp),%rdx
0000000000013ccb	testq	%rdx,%rdx
0000000000013cce	je	0x00013ce0
0000000000013cd0	movq	0x00091f69(%rip),%rsi
0000000000013cd7	movq	%rbx,%rdi
0000000000013cda	call	*0x000703f8(%rip)
0000000000013ce0	testq	%rax,%rax
0000000000013ce3	jne	0x00013d23
0000000000013ce5	movq	%rax,0xfffffe40(%rbp)
0000000000013cec	cmpl	$0x02,0xfffffe24(%rbp)
0000000000013cf3	jne	0x00013d2a
0000000000013cf5	leaq	0x00094614(%rip),%rsi
0000000000013cfc	movq	0xfffffe38(%rbp),%rdi
0000000000013d03	call	*0x00094607(%rip)
0000000000013d09	testq	%rax,%rax
0000000000013d0c	je	0x00013d2a
0000000000013d0e	movq	0x00091f2b(%rip),%rsi
0000000000013d15	movq	%rbx,%rdi
0000000000013d18	movl	$0x00000001,%edx
0000000000013d1d	call	*0x000703b5(%rip)
0000000000013d23	movq	%rax,0xfffffe40(%rbp)
0000000000013d2a	cmpq	$0x00,0xfffffe28(%rbp)
0000000000013d32	je	0x00013dfc
0000000000013d38	movl	0xfffffe24(%rbp),%eax
0000000000013d3e	cmpl	$0x06,%eax
0000000000013d41	movl	$0x00000002,%ebx
0000000000013d46	cmovnel	%eax,%ebx
0000000000013d49	movl	0xfffffe08(%rbp),%eax
0000000000013d4f	movq	%rax,0xfffffe08(%rbp)
0000000000013d56	xorl	%r15d,%r15d
0000000000013d59	movq	0x00093348(%rip),%r12
0000000000013d60	movq	0x00070371(%rip),%r13
0000000000013d67	movq	0xfffffe38(%rbp),%rdi
0000000000013d6e	leaq	0x000945ab(%rip),%rsi
0000000000013d75	movq	%r15,%rdx
0000000000013d78	call	*0x000945a2(%rip)
0000000000013d7e	movq	%rax,%r14
0000000000013d81	cmpq	0xfffffe40(%rbp),%r14
0000000000013d88	jne	0x00013dc4
0000000000013d8a	movq	%r14,%rdi
0000000000013d8d	movq	%r12,%rsi
0000000000013d90	movq	0xfffffe48(%rbp),%rdx
0000000000013d97	movl	0xfffffe24(%rbp),%ecx
0000000000013d9d	movq	0xfffffe10(%rbp),%r8
0000000000013da4	call	*%r13
0000000000013da7	movq	0xfffffe18(%rbp),%rax
0000000000013dae	movq	0x0009b313(%rip),%rcx
0000000000013db5	movl	(%rax,%rcx),%edx
0000000000013db8	movq	%r14,%rdi
0000000000013dbb	movq	0x000932ee(%rip),%rsi
0000000000013dc2	jmp	0x00013de9
0000000000013dc4	movq	%r14,%rdi
0000000000013dc7	movq	%r12,%rsi
0000000000013dca	movq	0xfffffe48(%rbp),%rdx
0000000000013dd1	movl	%ebx,%ecx
0000000000013dd3	movq	0xfffffe08(%rbp),%r8
0000000000013dda	call	*%r13
0000000000013ddd	movq	%r14,%rdi
0000000000013de0	movq	0x000932c9(%rip),%rsi
0000000000013de7	xorl	%edx,%edx
0000000000013de9	call	*%r13
0000000000013dec	incq	%r15
0000000000013def	cmpq	%r15,0xfffffe28(%rbp)
0000000000013df6	jne	0x00013d67
0000000000013dfc	movq	0x00091e45(%rip),%rsi
0000000000013e03	movq	0x000702ce(%rip),%r14
0000000000013e0a	movq	0xfffffe30(%rbp),%rdi
0000000000013e11	movq	0xfffffe48(%rbp),%rbx
0000000000013e18	movq	%rbx,%rdx
0000000000013e1b	movq	0xfffffe40(%rbp),%rcx
0000000000013e22	call	*%r14
0000000000013e25	movq	0x0009328c(%rip),%rsi
0000000000013e2c	movq	%rbx,%rdi
0000000000013e2f	call	*%r14
0000000000013e32	movq	0x00070267(%rip),%rax
0000000000013e39	movq	(%rax),%rax
0000000000013e3c	cmpq	0xd0(%rbp),%rax
0000000000013e40	jne	0x00013e54
0000000000013e42	addq	$0x000001e8,%rsp
0000000000013e49	popq	%rbx
0000000000013e4a	popq	%r12
0000000000013e4c	popq	%r13
0000000000013e4e	popq	%r14
0000000000013e50	popq	%r15
0000000000013e52	popq	%rbp
0000000000013e53	ret
0000000000013e54	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
0000000000013e59	nop
0000000000013e5a	nop
0000000000013e5b	nop
0000000000013e5c	nop
0000000000013e5d	nop
0000000000013e5e	nop
0000000000013e5f	nop
-[PBXLSProcess threadWithHandle:]:
0000000000013e60	pushq	%rbp
0000000000013e61	movq	%rsp,%rbp
0000000000013e64	pushq	%r15
0000000000013e66	pushq	%r14
0000000000013e68	pushq	%r13
0000000000013e6a	pushq	%r12
0000000000013e6c	pushq	%rbx
0000000000013e6d	subq	$0x18,%rsp
0000000000013e71	movq	%rdx,%rbx
0000000000013e74	movq	0x0009372d(%rip),%rsi
0000000000013e7b	call	*0x00070257(%rip)
0000000000013e81	movq	%rax,0xc8(%rbp)
0000000000013e85	leaq	0x00094484(%rip),%rsi
0000000000013e8c	movq	%rax,%rdi
0000000000013e8f	call	*0x0009447b(%rip)
0000000000013e95	movq	%rax,0xc0(%rbp)
0000000000013e99	xorl	%eax,%eax
0000000000013e9b	jmp	0x00013f1a
0000000000013e9d	movq	0xc8(%rbp),%rdi
0000000000013ea1	leaq	0x00094478(%rip),%rsi
0000000000013ea8	movq	%rax,%rdx
0000000000013eab	movq	%rdx,0xd0(%rbp)
0000000000013eaf	call	*0x0009446b(%rip)
0000000000013eb5	movq	%rax,%rdi
0000000000013eb8	movq	0x00092249(%rip),%rsi
0000000000013ebf	call	*0x00070213(%rip)
0000000000013ec5	movq	%rax,%r14
0000000000013ec8	movq	%r14,%rdi
0000000000013ecb	leaq	0x0009443e(%rip),%rsi
0000000000013ed2	call	*0x00094438(%rip)
0000000000013ed8	movq	%rax,%r13
0000000000013edb	xorl	%r15d,%r15d
0000000000013ede	jmp	0x00013f0e
0000000000013ee0	movq	%r14,%rdi
0000000000013ee3	leaq	0x00094436(%rip),%rsi
0000000000013eea	movq	%r15,%rdx
0000000000013eed	call	*0x0009442d(%rip)
0000000000013ef3	movq	%rax,%r12
0000000000013ef6	movq	%r12,%rdi
0000000000013ef9	movq	0x000911f0(%rip),%rsi
0000000000013f00	call	*0x000701d2(%rip)
0000000000013f06	cmpq	%rbx,%rax
0000000000013f09	je	0x00013f27
0000000000013f0b	incq	%r15
0000000000013f0e	cmpq	%r13,%r15
0000000000013f11	jb	0x00013ee0
0000000000013f13	movq	0xd0(%rbp),%rax
0000000000013f17	incq	%rax
0000000000013f1a	cmpq	0xc0(%rbp),%rax
0000000000013f1e	jb	0x00013e9d
0000000000013f24	xorl	%r12d,%r12d
0000000000013f27	movq	%r12,%rax
0000000000013f2a	addq	$0x18,%rsp
0000000000013f2e	popq	%rbx
0000000000013f2f	popq	%r12
0000000000013f31	popq	%r13
0000000000013f33	popq	%r14
0000000000013f35	popq	%r15
0000000000013f37	popq	%rbp
0000000000013f38	ret
0000000000013f39	nop
0000000000013f3a	nop
0000000000013f3b	nop
0000000000013f3c	nop
-[PBXLSDebuggingSession _attemptDeleteOfBreakpoint:forDebugger:]:
0000000000013f3d	pushq	%rbp
0000000000013f3e	movq	%rsp,%rbp
0000000000013f41	pushq	%r14
0000000000013f43	pushq	%rbx
0000000000013f44	movq	%rcx,%rbx
0000000000013f47	movq	%rdx,%r14
0000000000013f4a	movq	0x000938e7(%rip),%rsi
0000000000013f51	movq	%rbx,%rdi
0000000000013f54	call	*0x0007017e(%rip)
0000000000013f5a	testb	%al,%al
0000000000013f5c	jne	0x00013f63
0000000000013f5e	popq	%rbx
0000000000013f5f	popq	%r14
0000000000013f61	popq	%rbp
0000000000013f62	ret
0000000000013f63	movq	0x00092876(%rip),%rsi
0000000000013f6a	movq	%rbx,%rdi
0000000000013f6d	movq	%r14,%rdx
0000000000013f70	call	*0x00070162(%rip)
0000000000013f76	movq	0x000938c3(%rip),%rsi
0000000000013f7d	movq	%rbx,%rdi
0000000000013f80	movq	%r14,%rdx
0000000000013f83	movq	0x0007014e(%rip),%rax
0000000000013f8a	popq	%rbx
0000000000013f8b	popq	%r14
0000000000013f8d	popq	%rbp
0000000000013f8e	jmp	*%rax
-[PBXLSDebuggerAdaptor stopManagingBreakpoint:]:
0000000000013f90	pushq	%rbp
0000000000013f91	movq	%rsp,%rbp
0000000000013f94	pushq	%rbx
0000000000013f95	pushq	%rax
0000000000013f96	movq	%rdx,%rbx
0000000000013f99	movq	0x00093808(%rip),%rsi
0000000000013fa0	call	*0x00070132(%rip)
0000000000013fa6	movq	0x00090d73(%rip),%rsi
0000000000013fad	movq	%rax,%rdi
0000000000013fb0	movq	%rbx,%rdx
0000000000013fb3	movq	0x0007011e(%rip),%rax
0000000000013fba	addq	$0x08,%rsp
0000000000013fbe	popq	%rbx
0000000000013fbf	popq	%rbp
0000000000013fc0	jmp	*%rax
-[PBXGDB_Adaptor requestDeleteBreakpoint:]:
0000000000013fc2	pushq	%rbp
0000000000013fc3	movq	%rsp,%rbp
0000000000013fc6	movq	0x0009a6bb(%rip),%rax
0000000000013fcd	movq	(%rdi,%rax),%rdi
0000000000013fd1	movq	0x00091188(%rip),%rsi
0000000000013fd8	popq	%rbp
0000000000013fd9	jmp	*0x000700f9(%rip)
-[PBXGDB_BreakpointController enqueueDeleteBreakpointSequenceForBreakpoint:]:
0000000000013fdf	pushq	%rbp
0000000000013fe0	movq	%rsp,%rbp
0000000000013fe3	pushq	%rbx
0000000000013fe4	pushq	%rax
0000000000013fe5	movq	%rdi,%rbx
0000000000013fe8	movq	0x000924f1(%rip),%rsi
0000000000013fef	call	*0x000700e3(%rip)
0000000000013ff5	testq	%rax,%rax
0000000000013ff8	jne	0x00014001
0000000000013ffa	addq	$0x08,%rsp
0000000000013ffe	popq	%rbx
0000000000013fff	popq	%rbp
0000000000014000	ret
0000000000014001	movq	0x00093c80(%rip),%rsi
0000000000014008	movq	%rbx,%rdi
000000000001400b	movq	%rax,%rdx
000000000001400e	addq	$0x08,%rsp
0000000000014012	popq	%rbx
0000000000014013	popq	%rbp
0000000000014014	jmp	*0x000700be(%rip)
-[PBXGDB_BreakpointController infoForBreakpoint:]:
000000000001401a	pushq	%rbp
000000000001401b	movq	%rsp,%rbp
000000000001401e	pushq	%r15
0000000000014020	pushq	%r14
0000000000014022	pushq	%r13
0000000000014024	pushq	%r12
0000000000014026	pushq	%rbx
0000000000014027	subq	$0x000000d8,%rsp
000000000001402e	movq	%rdx,0xffffff08(%rbp)
0000000000014035	movq	0x00070064(%rip),%rax
000000000001403c	movq	(%rax),%rax
000000000001403f	movq	%rax,0xd0(%rbp)
0000000000014043	xorps	%xmm0,%xmm0
0000000000014046	movaps	%xmm0,0xc0(%rbp)
000000000001404a	movaps	%xmm0,0xb0(%rbp)
000000000001404e	movaps	%xmm0,0xa0(%rbp)
0000000000014052	movaps	%xmm0,0x90(%rbp)
0000000000014056	movq	0x0009b4d3(%rip),%rax
000000000001405d	movq	(%rdi,%rax),%r15
0000000000014061	leaq	0x00094318(%rip),%rsi
0000000000014068	leaq	0x90(%rbp),%rdx
000000000001406c	leaq	0xffffff10(%rbp),%rcx
0000000000014073	movq	%r15,%rdi
0000000000014076	movl	$0x00000010,%r8d
000000000001407c	call	*0x000942fe(%rip)
0000000000014082	movq	%rax,%rbx
0000000000014085	xorl	%r13d,%r13d
0000000000014088	testq	%rbx,%rbx
000000000001408b	je	0x000140fd
000000000001408d	movq	0xa0(%rbp),%rax
0000000000014091	movq	(%rax),%r12
0000000000014094	xorl	%r14d,%r14d
0000000000014097	movq	0xa0(%rbp),%rax
000000000001409b	cmpq	%r12,(%rax)
000000000001409e	je	0x000140a8
00000000000140a0	movq	%r15,%rdi
00000000000140a3	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
00000000000140a8	movq	0x98(%rbp),%rax
00000000000140ac	movq	(%rax,%r14,8),%r13
00000000000140b0	movq	%r13,%rdi
00000000000140b3	movq	0x00093ace(%rip),%rsi
00000000000140ba	call	*0x00070018(%rip)
00000000000140c0	cmpq	0xffffff08(%rbp),%rax
00000000000140c7	je	0x000140fd
00000000000140c9	incq	%r14
00000000000140cc	cmpq	%rbx,%r14
00000000000140cf	jb	0x00014097
00000000000140d1	movq	%r15,%rdi
00000000000140d4	leaq	0x000942a5(%rip),%rsi
00000000000140db	leaq	0x90(%rbp),%rdx
00000000000140df	leaq	0xffffff10(%rbp),%rcx
00000000000140e6	movl	$0x00000010,%r8d
00000000000140ec	call	*0x0009428e(%rip)
00000000000140f2	movq	%rax,%rbx
00000000000140f5	xorl	%r13d,%r13d
00000000000140f8	testq	%rbx,%rbx
00000000000140fb	jne	0x00014094
00000000000140fd	movq	0x0006ff9c(%rip),%rax
0000000000014104	movq	(%rax),%rax
0000000000014107	cmpq	0xd0(%rbp),%rax
000000000001410b	jne	0x00014122
000000000001410d	movq	%r13,%rax
0000000000014110	addq	$0x000000d8,%rsp
0000000000014117	popq	%rbx
0000000000014118	popq	%r12
000000000001411a	popq	%r13
000000000001411c	popq	%r14
000000000001411e	popq	%r15
0000000000014120	popq	%rbp
0000000000014121	ret
0000000000014122	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
-[PBXGDB_BreakpointController _enqueueDeleteBreakpointSequenceForBreakpointInfo:]:
0000000000014127	pushq	%rbp
0000000000014128	movq	%rsp,%rbp
000000000001412b	pushq	%r15
000000000001412d	pushq	%r14
000000000001412f	pushq	%r12
0000000000014131	pushq	%rbx
0000000000014132	movq	%rdx,%r14
0000000000014135	movq	%rdi,%r15
0000000000014138	movq	0x00094971(%rip),%rbx
000000000001413f	movq	0x00093a42(%rip),%rsi
0000000000014146	movq	0x0006ff8b(%rip),%r12
000000000001414d	movq	%r14,%rdi
0000000000014150	call	*%r12
0000000000014153	movq	0x00093a7e(%rip),%rsi
000000000001415a	movq	%rbx,%rdi
000000000001415d	movq	%rax,%rdx
0000000000014160	call	*%r12
0000000000014163	testb	%al,%al
0000000000014165	je	0x000141e3
0000000000014167	movq	0x00093a1a(%rip),%rsi
000000000001416e	movq	0x0006ff63(%rip),%r12
0000000000014175	movq	%r14,%rdi
0000000000014178	call	*%r12
000000000001417b	movq	%rax,%rbx
000000000001417e	movq	0x00093a5b(%rip),%rsi
0000000000014185	movq	%rbx,%rdi
0000000000014188	call	*%r12
000000000001418b	testl	%eax,%eax
000000000001418d	jne	0x000141b7
000000000001418f	movq	0x0009b3b2(%rip),%rax
0000000000014196	movq	(%r15,%rax),%rdi
000000000001419a	movq	0x00090b7f(%rip),%rsi
00000000000141a1	movq	0x0006ff30(%rip),%r12
00000000000141a8	movq	%rbx,%rdx
00000000000141ab	call	*%r12
00000000000141ae	movq	0x00093a3b(%rip),%rsi
00000000000141b5	jmp	0x000141dd
00000000000141b7	movq	0x0009b392(%rip),%rax
00000000000141be	movq	(%r15,%rax),%rdi
00000000000141c2	movq	0x00090b57(%rip),%rsi
00000000000141c9	movq	0x0006ff08(%rip),%r12
00000000000141d0	movq	%rbx,%rdx
00000000000141d3	call	*%r12
00000000000141d6	movq	0x00093a1b(%rip),%rsi
00000000000141dd	movq	%r15,%rdi
00000000000141e0	call	*%r12
00000000000141e3	movq	0x000948c6(%rip),%rbx
00000000000141ea	movq	0x00093997(%rip),%rsi
00000000000141f1	movq	0x0006fee0(%rip),%r12
00000000000141f8	movq	%r14,%rdi
00000000000141fb	call	*%r12
00000000000141fe	movq	0x000939e3(%rip),%rsi
0000000000014205	movq	%rbx,%rdi
0000000000014208	movq	%rax,%rdx
000000000001420b	call	*%r12
000000000001420e	testb	%al,%al
0000000000014210	je	0x0001421b
0000000000014212	popq	%rbx
0000000000014213	popq	%r12
0000000000014215	popq	%r14
0000000000014217	popq	%r15
0000000000014219	popq	%rbp
000000000001421a	ret
000000000001421b	movq	0x000949d6(%rip),%rdi
0000000000014222	leaq	0x000940b7(%rip),%rsi
0000000000014229	call	*0x000940b1(%rip)
000000000001422f	movq	0x0009083a(%rip),%rsi
0000000000014236	movq	%rax,%rdi
0000000000014239	call	*0x0006fe99(%rip)
000000000001423f	movq	%rax,%rbx
0000000000014242	movq	0x0009396f(%rip),%rsi
0000000000014249	movq	%r15,%rdi
000000000001424c	movq	%rbx,%rdx
000000000001424f	movq	%r14,%rcx
0000000000014252	call	*0x0006fe80(%rip)
0000000000014258	movq	0x00090859(%rip),%rsi
000000000001425f	movq	%r15,%rdi
0000000000014262	call	*0x0006fe70(%rip)
0000000000014268	movq	0x00090b61(%rip),%rsi
000000000001426f	movq	%rax,%rdi
0000000000014272	call	*0x0006fe60(%rip)
0000000000014278	movq	0x00090b61(%rip),%rsi
000000000001427f	movq	%rax,%rdi
0000000000014282	movq	%rbx,%rdx
0000000000014285	movq	0x0006fe4c(%rip),%rax
000000000001428c	popq	%rbx
000000000001428d	popq	%r12
000000000001428f	popq	%r14
0000000000014291	popq	%r15
0000000000014293	popq	%rbp
0000000000014294	jmp	*%rax
-[PBXGDB_DeleteBreakpointSequence execute]:
0000000000014296	pushq	%rbp
0000000000014297	movq	%rsp,%rbp
000000000001429a	pushq	%r15
000000000001429c	pushq	%r14
000000000001429e	pushq	%r13
00000000000142a0	pushq	%r12
00000000000142a2	pushq	%rbx
00000000000142a3	subq	$0x18,%rsp
00000000000142a7	movq	%rdi,%r13
00000000000142aa	movq	0x00093a9f(%rip),%rsi
00000000000142b1	call	*0x0006fe21(%rip)
00000000000142b7	movq	%rax,0xc0(%rbp)
00000000000142bb	movq	0x0009b2b6(%rip),%rcx
00000000000142c2	movq	$0x00000000,0x00(%r13,%rcx)
00000000000142cb	testq	%rax,%rax
00000000000142ce	je	0x000143eb
00000000000142d4	movq	0x0009397d(%rip),%rsi
00000000000142db	movq	0xc0(%rbp),%rdi
00000000000142df	call	*0x0006fdf3(%rip)
00000000000142e5	movq	%rax,0xd0(%rbp)
00000000000142e9	leaq	0x00094020(%rip),%rsi
00000000000142f0	movq	%rax,%rdi
00000000000142f3	call	*0x00094017(%rip)
00000000000142f9	movq	%rax,0xc8(%rbp)
00000000000142fd	testq	%rax,%rax
0000000000014300	je	0x000143eb
0000000000014306	xorl	%ebx,%ebx
0000000000014308	movq	0x0006fdc9(%rip),%r12
000000000001430f	movq	0xd0(%rbp),%rdi
0000000000014313	leaq	0x00094006(%rip),%rsi
000000000001431a	movq	%rbx,%rdx
000000000001431d	call	*0x00093ffd(%rip)
0000000000014323	movq	%rax,%r15
0000000000014326	movq	%r15,%rdi
0000000000014329	movq	0x00093940(%rip),%rsi
0000000000014330	call	*0x0006fda2(%rip)
0000000000014336	testl	%eax,%eax
0000000000014338	je	0x000143de
000000000001433e	movq	0x0009491b(%rip),%rdi
0000000000014345	movq	0x00090734(%rip),%rsi
000000000001434c	call	*%r12
000000000001434f	movq	%rax,%r14
0000000000014352	movq	%r15,%rdi
0000000000014355	movq	0x00091eac(%rip),%rsi
000000000001435c	call	*%r12
000000000001435f	movq	%r14,%rdi
0000000000014362	movq	0x00093897(%rip),%rsi
0000000000014369	movq	%rax,%rdx
000000000001436c	call	*%r12
000000000001436f	movq	%r14,%rdi
0000000000014372	movq	0x00093a2f(%rip),%rsi
0000000000014379	movq	%rbx,%rdx
000000000001437c	call	*%r12
000000000001437f	movq	%r14,%rdi
0000000000014382	movq	0x000906ff(%rip),%rsi
0000000000014389	movq	%r13,%rdx
000000000001438c	call	*%r12
000000000001438f	movq	%r14,%rdi
0000000000014392	movq	0x000906ff(%rip),%rsi
0000000000014399	movq	0x00093a30(%rip),%rdx
00000000000143a0	call	*%r12
00000000000143a3	movq	%r13,%rdi
00000000000143a6	movq	0x0009070b(%rip),%rsi
00000000000143ad	call	*%r12
00000000000143b0	movq	%rax,%rdi
00000000000143b3	movq	0x00090706(%rip),%rsi
00000000000143ba	call	*%r12
00000000000143bd	movq	%rax,%rdi
00000000000143c0	movq	0x00091d99(%rip),%rsi
00000000000143c7	movq	%r14,%rdx
00000000000143ca	movl	$0x00000001,%ecx
00000000000143cf	call	*%r12
00000000000143d2	movq	0x0009b19f(%rip),%rax
00000000000143d9	incq	0x00(%r13,%rax)
00000000000143de	incq	%rbx
00000000000143e1	cmpq	%rbx,0xc8(%rbp)
00000000000143e5	jne	0x0001430f
00000000000143eb	movq	0x0009b186(%rip),%rax
00000000000143f2	cmpq	$0x00,0x00(%r13,%rax)
00000000000143f8	jne	0x00014428
00000000000143fa	cmpq	$0x00,0xc0(%rbp)
00000000000143ff	je	0x0001441f
0000000000014401	movq	0x000939c0(%rip),%rsi
0000000000014408	movq	%r13,%rdi
000000000001440b	addq	$0x18,%rsp
000000000001440f	popq	%rbx
0000000000014410	popq	%r12
0000000000014412	popq	%r13
0000000000014414	popq	%r14
0000000000014416	popq	%r15
0000000000014418	popq	%rbp
0000000000014419	jmp	*0x0006fcb9(%rip)
000000000001441f	movq	0x00090712(%rip),%rsi
0000000000014426	jmp	0x00014408
0000000000014428	addq	$0x18,%rsp
000000000001442c	popq	%rbx
000000000001442d	popq	%r12
000000000001442f	popq	%r13
0000000000014431	popq	%r14
0000000000014433	popq	%r15
0000000000014435	popq	%rbp
0000000000014436	ret
-[PBXGDB_BreakpointGDBContext gdbBreakpointNumber]:
0000000000014437	pushq	%rbp
0000000000014438	movq	%rsp,%rbp
000000000001443b	movq	0x0009b1ce(%rip),%rax
0000000000014442	movq	(%rdi,%rax),%rax
0000000000014446	popq	%rbp
0000000000014447	ret
-[PBXGDB_MIBaseBreakpointCommand setGDBBreakpointNumber:]:
0000000000014448	pushq	%rbp
0000000000014449	movq	%rsp,%rbp
000000000001444c	movq	0x0009a665(%rip),%rax
0000000000014453	movq	%rdx,(%rdi,%rax)
0000000000014457	popq	%rbp
0000000000014458	ret
-[PBXGDB_MIDeleteBreakpointCommand GDBCommandString]:
0000000000014459	pushq	%rbp
000000000001445a	movq	%rsp,%rbp
000000000001445d	pushq	%r15
000000000001445f	pushq	%r14
0000000000014461	pushq	%rbx
0000000000014462	pushq	%rax
0000000000014463	movq	%rdi,%r15
0000000000014466	movq	0x00093fe3(%rip),%rdi
000000000001446d	leaq	0x00093e6c(%rip),%rsi
0000000000014474	call	*0x00093e66(%rip)
000000000001447a	movq	%rax,%r14
000000000001447d	movq	0x00091d84(%rip),%rsi
0000000000014484	movq	0x0006fc4d(%rip),%rbx
000000000001448b	movq	%r15,%rdi
000000000001448e	call	*%rbx
0000000000014490	leaq	0x0009d141(%rip),%rdx
0000000000014497	movq	0x0009081a(%rip),%rsi
000000000001449e	movq	%r14,%rdi
00000000000144a1	movq	%rax,%rcx
00000000000144a4	xorb	%al,%al
00000000000144a6	call	*%rbx
00000000000144a8	leaq	0x0009a681(%rip),%rcx
00000000000144af	movq	(%rcx),%rbx
00000000000144b2	movq	%rax,%rdi
00000000000144b5	movq	%r15,%rsi
00000000000144b8	movq	%rbx,%rdx
00000000000144bb	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000144c0	movq	(%r15,%rbx),%rax
00000000000144c4	addq	$0x08,%rsp
00000000000144c8	popq	%rbx
00000000000144c9	popq	%r14
00000000000144cb	popq	%r15
00000000000144cd	popq	%rbp
00000000000144ce	ret
-[PBXGDB_MIBaseBreakpointCommand gdbBreakpointNumber]:
00000000000144cf	pushq	%rbp
00000000000144d0	movq	%rsp,%rbp
00000000000144d3	movq	0x0009a5de(%rip),%rax
00000000000144da	movq	(%rdi,%rax),%rax
00000000000144de	popq	%rbp
00000000000144df	ret
-[PBXGDB_DeleteBreakpointSequence _breakpointWasDeleted:]:
00000000000144e0	pushq	%rbp
00000000000144e1	movq	%rsp,%rbp
00000000000144e4	pushq	%r15
00000000000144e6	pushq	%r14
00000000000144e8	pushq	%rbx
00000000000144e9	subq	$0x38,%rsp
00000000000144ed	movq	%rdx,%rbx
00000000000144f0	movq	%rdi,0xe0(%rbp)
00000000000144f4	movq	%rsi,0xd8(%rbp)
00000000000144f8	testq	%rbx,%rbx
00000000000144fb	jne	0x00014572
00000000000144fd	movq	0x0009475c(%rip),%rdi
0000000000014504	leaq	0x00093e25(%rip),%rbx
000000000001450b	movq	%rbx,%rsi
000000000001450e	call	*0x00093e1c(%rip)
0000000000014514	movq	%rax,%rdi
0000000000014517	movq	%rbx,%rsi
000000000001451a	call	*0x00093e10(%rip)
0000000000014520	movq	%rax,%rdi
0000000000014523	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000014528	leaq	0xe0(%rbp),%rdi
000000000001452c	leaq	0xd8(%rbp),%rsi
0000000000014530	leaq	0x0005071e(%rip),%rdx
0000000000014537	leaq	0x000503cc(%rip),%rcx
000000000001453e	leaq	0x0009b473(%rip),%r9
0000000000014545	leaq	0x000495b4(%rip),%r8
000000000001454c	leaq	0x000495b1(%rip),%rbx
0000000000014553	movq	%rbx,0x18(%rsp)
0000000000014558	leaq	0x0009b2d9(%rip),%rbx
000000000001455f	movq	%rbx,0x10(%rsp)
0000000000014564	movq	%rax,0x08(%rsp)
0000000000014569	movq	%r8,(%rsp)
000000000001456d	jmp	0x00014638
0000000000014572	movq	0x000946e7(%rip),%rdi
0000000000014579	leaq	0x00093db0(%rip),%r14
0000000000014580	movq	%r14,%rsi
0000000000014583	call	*0x00093da7(%rip)
0000000000014589	movq	%rax,%rdi
000000000001458c	movq	%r14,%rsi
000000000001458f	call	*0x00093d9b(%rip)
0000000000014595	leaq	0x00093da4(%rip),%rsi
000000000001459c	movq	%rbx,%rdi
000000000001459f	movq	%rax,%rdx
00000000000145a2	call	*0x00093d98(%rip)
00000000000145a8	testb	%al,%al
00000000000145aa	jne	0x00014645
00000000000145b0	movq	0x000946a9(%rip),%rdi
00000000000145b7	leaq	0x00093d72(%rip),%r14
00000000000145be	movq	%r14,%rsi
00000000000145c1	call	*0x00093d69(%rip)
00000000000145c7	movq	%rax,%rdi
00000000000145ca	movq	%r14,%rsi
00000000000145cd	call	*0x00093d5d(%rip)
00000000000145d3	movq	%rax,%rdi
00000000000145d6	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
00000000000145db	movq	%rax,%r14
00000000000145de	movq	0x0009067b(%rip),%rsi
00000000000145e5	movq	%rbx,%rdi
00000000000145e8	call	*0x0006faea(%rip)
00000000000145ee	leaq	0x0005069a(%rip),%rbx
00000000000145f5	leaq	0xe0(%rbp),%rdi
00000000000145f9	leaq	0xd8(%rbp),%rsi
00000000000145fd	leaq	0x00050651(%rip),%rdx
0000000000014604	leaq	0x000502ff(%rip),%rcx
000000000001460b	leaq	0x0009b3c6(%rip),%r9
0000000000014612	movq	%rbx,0x20(%rsp)
0000000000014617	leaq	0x0009b21a(%rip),%rbx
000000000001461e	movq	%rbx,0x18(%rsp)
0000000000014623	leaq	0x000494d6(%rip),%rbx
000000000001462a	movq	%rax,0x10(%rsp)
000000000001462f	movq	%r14,0x08(%rsp)
0000000000014634	movq	%rbx,(%rsp)
0000000000014638	movl	$0x000001a3,%r8d
000000000001463e	xorb	%al,%al
0000000000014640	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000014645	movq	0x0009af2c(%rip),%rax
000000000001464c	movq	0xe0(%rbp),%rdx
0000000000014650	movq	(%rdx,%rax),%rcx
0000000000014654	decq	%rcx
0000000000014657	movq	%rcx,(%rdx,%rax)
000000000001465b	testq	%rcx,%rcx
000000000001465e	jg	0x000146f5
0000000000014664	movq	0x000936e5(%rip),%rsi
000000000001466b	movq	0xe0(%rbp),%rdi
000000000001466f	movq	0x0006fa62(%rip),%r15
0000000000014676	call	*%r15
0000000000014679	movq	0x00093508(%rip),%rsi
0000000000014680	movq	%rax,%rdi
0000000000014683	call	*%r15
0000000000014686	movq	%rax,%rbx
0000000000014689	leaq	0x00093ca0(%rip),%rsi
0000000000014690	movq	0x00094291(%rip),%rdi
0000000000014697	call	*0x00093c93(%rip)
000000000001469d	leaq	0x00093c9c(%rip),%rsi
00000000000146a4	movq	%rbx,%rdi
00000000000146a7	movq	%rax,%rdx
00000000000146aa	call	*0x00093c90(%rip)
00000000000146b0	movb	%al,%r14b
00000000000146b3	movq	0x00090636(%rip),%rsi
00000000000146ba	movq	0xe0(%rbp),%rdi
00000000000146be	call	*%r15
00000000000146c1	movq	%rax,%rdi
00000000000146c4	testb	%r14b,%r14b
00000000000146c7	je	0x000146d2
00000000000146c9	movq	0x00091d40(%rip),%rsi
00000000000146d0	jmp	0x000146d9
00000000000146d2	movq	0x00091e27(%rip),%rsi
00000000000146d9	xorl	%edx,%edx
00000000000146db	movq	%rbx,%rcx
00000000000146de	call	*0x0006f9f4(%rip)
00000000000146e4	movq	0x000936dd(%rip),%rsi
00000000000146eb	movq	0xe0(%rbp),%rdi
00000000000146ef	call	*0x0006f9e3(%rip)
00000000000146f5	addq	$0x38,%rsp
00000000000146f9	popq	%rbx
00000000000146fa	popq	%r14
00000000000146fc	popq	%r15
00000000000146fe	popq	%rbp
00000000000146ff	ret
-[PBXGDB_DeleteBreakpointSequence _removeInfo]:
0000000000014700	pushq	%rbp
0000000000014701	movq	%rsp,%rbp
0000000000014704	pushq	%r14
0000000000014706	pushq	%rbx
0000000000014707	movq	%rdi,%rbx
000000000001470a	movq	0x0009363f(%rip),%rsi
0000000000014711	call	*0x0006f9c1(%rip)
0000000000014717	movq	%rax,%r14
000000000001471a	movq	0x00093477(%rip),%rsi
0000000000014721	movq	%rbx,%rdi
0000000000014724	xorl	%edx,%edx
0000000000014726	call	*0x0006f9ac(%rip)
000000000001472c	movq	0x0009ae2d(%rip),%rax
0000000000014733	movq	(%rbx,%rax),%rdi
0000000000014737	movq	0x0009209a(%rip),%rsi
000000000001473e	movq	%r14,%rdx
0000000000014741	call	*0x0006f991(%rip)
0000000000014747	movq	0x000903ea(%rip),%rsi
000000000001474e	movq	%rbx,%rdi
0000000000014751	movq	0x0006f980(%rip),%rax
0000000000014758	popq	%rbx
0000000000014759	popq	%r14
000000000001475b	popq	%rbp
000000000001475c	jmp	*%rax
-[PBXGDB_BreakpointController deleteInfo:]:
000000000001475e	pushq	%rbp
000000000001475f	movq	%rsp,%rbp
0000000000014762	pushq	%r15
0000000000014764	pushq	%r14
0000000000014766	pushq	%r13
0000000000014768	pushq	%r12
000000000001476a	pushq	%rbx
000000000001476b	subq	$0x000000d8,%rsp
0000000000014772	movq	%rdx,0xffffff08(%rbp)
0000000000014779	movq	%rdi,%r15
000000000001477c	movq	0x0006f91d(%rip),%rax
0000000000014783	movq	(%rax),%rax
0000000000014786	movq	%rax,0xd0(%rbp)
000000000001478a	movq	0x00091a77(%rip),%rsi
0000000000014791	movq	0x0006f940(%rip),%rbx
0000000000014798	movq	%rdx,%rdi
000000000001479b	call	*%rbx
000000000001479d	movq	0x00091c8c(%rip),%rsi
00000000000147a4	movq	%r15,%rdi
00000000000147a7	movq	%rax,%rdx
00000000000147aa	call	*%rbx
00000000000147ac	xorps	%xmm0,%xmm0
00000000000147af	movaps	%xmm0,0xc0(%rbp)
00000000000147b3	movaps	%xmm0,0xb0(%rbp)
00000000000147b7	movaps	%xmm0,0xa0(%rbp)
00000000000147bb	movaps	%xmm0,0x90(%rbp)
00000000000147bf	movq	0x0009296a(%rip),%rsi
00000000000147c6	movq	%rax,%rdi
00000000000147c9	call	*%rbx
00000000000147cb	movq	%rax,%r13
00000000000147ce	leaq	0x00093bab(%rip),%rsi
00000000000147d5	leaq	0x90(%rbp),%rdx
00000000000147d9	leaq	0xffffff10(%rbp),%rcx
00000000000147e0	movq	%r13,%rdi
00000000000147e3	movl	$0x00000010,%r8d
00000000000147e9	call	*0x00093b91(%rip)
00000000000147ef	movq	%rax,%rbx
00000000000147f2	testq	%rbx,%rbx
00000000000147f5	je	0x00014863
00000000000147f7	movq	0xa0(%rbp),%rax
00000000000147fb	movq	(%rax),%r14
00000000000147fe	xorl	%r12d,%r12d
0000000000014801	movq	0xa0(%rbp),%rax
0000000000014805	cmpq	%r14,(%rax)
0000000000014808	je	0x00014812
000000000001480a	movq	%r13,%rdi
000000000001480d	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
0000000000014812	movq	0x0009ad27(%rip),%rax
0000000000014819	movq	(%r15,%rax),%rdi
000000000001481d	movq	0x98(%rbp),%rax
0000000000014821	movq	(%rax,%r12,8),%rdx
0000000000014825	movq	0x00090b34(%rip),%rsi
000000000001482c	call	*0x0006f8a6(%rip)
0000000000014832	incq	%r12
0000000000014835	cmpq	%rbx,%r12
0000000000014838	jb	0x00014801
000000000001483a	movq	%r13,%rdi
000000000001483d	leaq	0x00093b3c(%rip),%rsi
0000000000014844	leaq	0x90(%rbp),%rdx
0000000000014848	leaq	0xffffff10(%rbp),%rcx
000000000001484f	movl	$0x00000010,%r8d
0000000000014855	call	*0x00093b25(%rip)
000000000001485b	movq	%rax,%rbx
000000000001485e	testq	%rbx,%rbx
0000000000014861	jne	0x000147fe
0000000000014863	movq	0x0009acc6(%rip),%rax
000000000001486a	movq	(%r15,%rax),%rdi
000000000001486e	movq	0x000904ab(%rip),%rsi
0000000000014875	movq	0xffffff08(%rbp),%rdx
000000000001487c	call	*0x0006f856(%rip)
0000000000014882	movq	0x0006f817(%rip),%rax
0000000000014889	movq	(%rax),%rax
000000000001488c	cmpq	0xd0(%rbp),%rax
0000000000014890	jne	0x000148a4
0000000000014892	addq	$0x000000d8,%rsp
0000000000014899	popq	%rbx
000000000001489a	popq	%r12
000000000001489c	popq	%r13
000000000001489e	popq	%r14
00000000000148a0	popq	%r15
00000000000148a2	popq	%rbp
00000000000148a3	ret
00000000000148a4	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
-[PBXGDB_BreakpointInfo gdbBreakpointNumber]:
00000000000148a9	pushq	%rbp
00000000000148aa	movq	%rsp,%rbp
00000000000148ad	pushq	%rbx
00000000000148ae	pushq	%rax
00000000000148af	movq	0x0009ad3a(%rip),%rax
00000000000148b6	movq	(%rdi,%rax),%rdi
00000000000148ba	testq	%rdi,%rdi
00000000000148bd	je	0x000148e0
00000000000148bf	movq	0x0009022a(%rip),%rsi
00000000000148c6	movq	0x0006f80b(%rip),%rbx
00000000000148cd	call	*%rbx
00000000000148cf	movq	0x00090222(%rip),%rsi
00000000000148d6	movq	%rax,%rdi
00000000000148d9	call	*%rbx
00000000000148db	testq	%rax,%rax
00000000000148de	jne	0x000148ee
00000000000148e0	movq	$0xffffffff,%rax
00000000000148e7	addq	$0x08,%rsp
00000000000148eb	popq	%rbx
00000000000148ec	popq	%rbp
00000000000148ed	ret
00000000000148ee	movq	0x00091913(%rip),%rsi
00000000000148f5	movq	%rax,%rdi
00000000000148f8	addq	$0x08,%rsp
00000000000148fc	popq	%rbx
00000000000148fd	popq	%rbp
00000000000148fe	jmp	*0x0006f7d4(%rip)
-[PBXGDB_BreakpointController breakpointForGDBBreakpointNumber:]:
0000000000014904	pushq	%rbp
0000000000014905	movq	%rsp,%rbp
0000000000014908	pushq	%r15
000000000001490a	pushq	%r14
000000000001490c	pushq	%r13
000000000001490e	pushq	%r12
0000000000014910	pushq	%rbx
0000000000014911	pushq	%rax
0000000000014912	movq	%rdx,%r14
0000000000014915	movq	0x0009ac14(%rip),%rax
000000000001491c	movq	(%rdi,%rax),%rdi
0000000000014920	movq	0x000901c9(%rip),%rsi
0000000000014927	call	*0x0006f7ab(%rip)
000000000001492d	movq	%rax,%r13
0000000000014930	movq	0x00091bb1(%rip),%r15
0000000000014937	movq	0x000901ba(%rip),%r12
000000000001493e	movq	%r13,%rdi
0000000000014941	movq	%r12,%rsi
0000000000014944	call	*0x0006f78e(%rip)
000000000001494a	movq	%rax,%rbx
000000000001494d	testq	%rbx,%rbx
0000000000014950	je	0x00014984
0000000000014952	movq	%rbx,%rdi
0000000000014955	movq	%r15,%rsi
0000000000014958	movq	%r14,%rdx
000000000001495b	call	*0x0006f777(%rip)
0000000000014961	testq	%rax,%rax
0000000000014964	je	0x0001493e
0000000000014966	movq	0x0009321b(%rip),%rsi
000000000001496d	movq	%rbx,%rdi
0000000000014970	addq	$0x08,%rsp
0000000000014974	popq	%rbx
0000000000014975	popq	%r12
0000000000014977	popq	%r13
0000000000014979	popq	%r14
000000000001497b	popq	%r15
000000000001497d	popq	%rbp
000000000001497e	jmp	*0x0006f754(%rip)
0000000000014984	xorl	%eax,%eax
0000000000014986	addq	$0x08,%rsp
000000000001498a	popq	%rbx
000000000001498b	popq	%r12
000000000001498d	popq	%r13
000000000001498f	popq	%r14
0000000000014991	popq	%r15
0000000000014993	popq	%rbp
0000000000014994	ret
-[PBXGDB_BreakpointInfo contextWithGDBBreakpointNumber:]:
0000000000014995	pushq	%rbp
0000000000014996	movq	%rsp,%rbp
0000000000014999	pushq	%r15
000000000001499b	pushq	%r14
000000000001499d	pushq	%r13
000000000001499f	pushq	%r12
00000000000149a1	pushq	%rbx
00000000000149a2	pushq	%rax
00000000000149a3	movq	%rdx,%r14
00000000000149a6	movq	0x0009ac43(%rip),%rax
00000000000149ad	movq	(%rdi,%rax),%rdi
00000000000149b1	xorl	%eax,%eax
00000000000149b3	testq	%rdi,%rdi
00000000000149b6	je	0x00014a00
00000000000149b8	movq	0x00090131(%rip),%rsi
00000000000149bf	call	*0x0006f713(%rip)
00000000000149c5	movq	%rax,%r13
00000000000149c8	movq	0x00091839(%rip),%r15
00000000000149cf	movq	0x00090122(%rip),%r12
00000000000149d6	movq	%r13,%rdi
00000000000149d9	movq	%r12,%rsi
00000000000149dc	call	*0x0006f6f6(%rip)
00000000000149e2	movq	%rax,%rbx
00000000000149e5	xorl	%eax,%eax
00000000000149e7	testq	%rbx,%rbx
00000000000149ea	je	0x00014a00
00000000000149ec	movq	%rbx,%rdi
00000000000149ef	movq	%r15,%rsi
00000000000149f2	call	*0x0006f6e0(%rip)
00000000000149f8	cmpq	%r14,%rax
00000000000149fb	movq	%rbx,%rax
00000000000149fe	jne	0x000149d6
0000000000014a00	addq	$0x08,%rsp
0000000000014a04	popq	%rbx
0000000000014a05	popq	%r12
0000000000014a07	popq	%r13
0000000000014a09	popq	%r14
0000000000014a0b	popq	%r15
0000000000014a0d	popq	%rbp
0000000000014a0e	ret
0000000000014a0f	nop
0000000000014a10	nop
0000000000014a11	nop
0000000000014a12	nop
-[PBXLSDebuggingSession _removeBreakpointObservers:]:
0000000000014a13	pushq	%rbp
0000000000014a14	movq	%rsp,%rbp
0000000000014a17	pushq	%r15
0000000000014a19	pushq	%r14
0000000000014a1b	pushq	%r13
0000000000014a1d	pushq	%r12
0000000000014a1f	pushq	%rbx
0000000000014a20	subq	$0x000000d8,%rsp
0000000000014a27	movq	%rdx,%r15
0000000000014a2a	movq	%rdi,%rbx
0000000000014a2d	movq	0x0006f66c(%rip),%rax
0000000000014a34	movq	(%rax),%rax
0000000000014a37	movq	%rax,0xd0(%rbp)
0000000000014a3b	movq	0x0009aa6e(%rip),%rax
0000000000014a42	movq	(%rbx,%rax),%rdi
0000000000014a46	leaq	0x00093903(%rip),%rsi
0000000000014a4d	call	*0x000938fd(%rip)
0000000000014a53	movq	%rax,0xffffff00(%rbp)
0000000000014a5a	testq	%rax,%rax
0000000000014a5d	je	0x00014be8
0000000000014a63	movq	0x00092d4e(%rip),%rsi
0000000000014a6a	movq	0x000a22ff(%rip),%rcx
0000000000014a71	leaq	0x000a22f8(%rip),%r8
0000000000014a78	movq	0x0006f659(%rip),%r14
0000000000014a7f	movq	%r15,%rdi
0000000000014a82	movq	%rbx,%rdx
0000000000014a85	call	*%r14
0000000000014a88	movq	0x00092d29(%rip),%rsi
0000000000014a8f	movq	0x000a22e2(%rip),%rcx
0000000000014a96	leaq	0x000a22db(%rip),%r8
0000000000014a9d	movq	%r15,%rdi
0000000000014aa0	movq	%rbx,%rdx
0000000000014aa3	call	*%r14
0000000000014aa6	leaq	0x000a22d3(%rip),%r8
0000000000014aad	movq	0x00092d04(%rip),%rsi
0000000000014ab4	movq	0x000a22c5(%rip),%rcx
0000000000014abb	movq	%r15,%rdi
0000000000014abe	movq	%rbx,%rdx
0000000000014ac1	movq	%rbx,%r13
0000000000014ac4	call	*%r14
0000000000014ac7	xorps	%xmm0,%xmm0
0000000000014aca	movaps	%xmm0,0xc0(%rbp)
0000000000014ace	movaps	%xmm0,0xb0(%rbp)
0000000000014ad2	movaps	%xmm0,0xa0(%rbp)
0000000000014ad6	movaps	%xmm0,0x90(%rbp)
0000000000014ada	movq	0x00091cd7(%rip),%rsi
0000000000014ae1	movq	%r15,%rdi
0000000000014ae4	movq	%r15,0xffffff08(%rbp)
0000000000014aeb	call	*%r14
0000000000014aee	movq	%rax,%rbx
0000000000014af1	leaq	0x00093888(%rip),%rsi
0000000000014af8	leaq	0x90(%rbp),%rdx
0000000000014afc	leaq	0xffffff10(%rbp),%rcx
0000000000014b03	movq	%rbx,%rdi
0000000000014b06	movl	$0x00000010,%r8d
0000000000014b0c	call	*0x0009386e(%rip)
0000000000014b12	movq	%rax,%r15
0000000000014b15	testq	%r15,%r15
0000000000014b18	je	0x00014b7e
0000000000014b1a	movq	0xa0(%rbp),%rax
0000000000014b1e	movq	(%rax),%r14
0000000000014b21	xorl	%r12d,%r12d
0000000000014b24	movq	0xa0(%rbp),%rax
0000000000014b28	cmpq	%r14,(%rax)
0000000000014b2b	je	0x00014b35
0000000000014b2d	movq	%rbx,%rdi
0000000000014b30	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
0000000000014b35	movq	0x98(%rbp),%rax
0000000000014b39	movq	(%rax,%r12,8),%rdx
0000000000014b3d	movq	%r13,%rdi
0000000000014b40	movq	0x00092c81(%rip),%rsi
0000000000014b47	call	*0x0006f58b(%rip)
0000000000014b4d	incq	%r12
0000000000014b50	cmpq	%r15,%r12
0000000000014b53	jb	0x00014b24
0000000000014b55	movq	%rbx,%rdi
0000000000014b58	leaq	0x00093821(%rip),%rsi
0000000000014b5f	leaq	0x90(%rbp),%rdx
0000000000014b63	leaq	0xffffff10(%rbp),%rcx
0000000000014b6a	movl	$0x00000010,%r8d
0000000000014b70	call	*0x0009380a(%rip)
0000000000014b76	movq	%rax,%r15
0000000000014b79	testq	%r15,%r15
0000000000014b7c	jne	0x00014b21
0000000000014b7e	movq	0x00092aab(%rip),%rsi
0000000000014b85	movq	0x0006f54c(%rip),%r14
0000000000014b8c	movq	0xffffff00(%rbp),%rdi
0000000000014b93	call	*%r14
0000000000014b96	movq	0x0009a913(%rip),%rax
0000000000014b9d	movq	%r13,%r15
0000000000014ba0	movq	(%r15,%rax),%rdi
0000000000014ba4	movq	0x000907b5(%rip),%rsi
0000000000014bab	movq	0xffffff08(%rbp),%rbx
0000000000014bb2	movq	%rbx,%rdx
0000000000014bb5	call	*%r14
0000000000014bb8	movq	0x00092d01(%rip),%rsi
0000000000014bbf	movq	%r15,%rdi
0000000000014bc2	movq	%rbx,%rdx
0000000000014bc5	call	*%r14
0000000000014bc8	movq	0x00092cf9(%rip),%rsi
0000000000014bcf	movq	%r15,%rdi
0000000000014bd2	movq	%rbx,%rdx
0000000000014bd5	call	*%r14
0000000000014bd8	movq	0x00092cf1(%rip),%rsi
0000000000014bdf	movq	%r15,%rdi
0000000000014be2	movq	%rbx,%rdx
0000000000014be5	call	*%r14
0000000000014be8	movq	0x0006f4b1(%rip),%rax
0000000000014bef	movq	(%rax),%rax
0000000000014bf2	cmpq	0xd0(%rbp),%rax
0000000000014bf6	jne	0x00014c0a
0000000000014bf8	addq	$0x000000d8,%rsp
0000000000014bff	popq	%rbx
0000000000014c00	popq	%r12
0000000000014c02	popq	%r13
0000000000014c04	popq	%r14
0000000000014c06	popq	%r15
0000000000014c08	popq	%rbp
0000000000014c09	ret
0000000000014c0a	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
0000000000014c0f	nop
0000000000014c10	nop
0000000000014c11	nop
0000000000014c12	nop
0000000000014c13	nop
0000000000014c14	nop
0000000000014c15	nop
0000000000014c16	nop
0000000000014c17	nop
0000000000014c18	nop
0000000000014c19	nop
0000000000014c1a	nop
0000000000014c1b	nop
-[PBXLSDebuggingSession _removeSymbolicBreakpointObserversIfNeeded:]:
0000000000014c1c	pushq	%rbp
0000000000014c1d	movq	%rsp,%rbp
0000000000014c20	pushq	%r14
0000000000014c22	pushq	%rbx
0000000000014c23	movq	%rdx,%rbx
0000000000014c26	movq	%rdi,%r14
0000000000014c29	movq	0x00092cb0(%rip),%rsi
0000000000014c30	movq	0x00093f41(%rip),%rdi
0000000000014c37	call	*0x0006f49b(%rip)
0000000000014c3d	testb	%al,%al
0000000000014c3f	jne	0x00014c46
0000000000014c41	popq	%rbx
0000000000014c42	popq	%r14
0000000000014c44	popq	%rbp
0000000000014c45	ret
0000000000014c46	movq	0x00092b6b(%rip),%rsi
0000000000014c4d	movq	0x000a2134(%rip),%rcx
0000000000014c54	leaq	0x000a212d(%rip),%r8
0000000000014c5b	movq	%rbx,%rdi
0000000000014c5e	movq	%r14,%rdx
0000000000014c61	call	*0x0006f471(%rip)
0000000000014c67	leaq	0x000a2122(%rip),%r8
0000000000014c6e	movq	0x00092b43(%rip),%rsi
0000000000014c75	movq	0x000a2114(%rip),%rcx
0000000000014c7c	movq	%rbx,%rdi
0000000000014c7f	movq	%r14,%rdx
0000000000014c82	movq	0x0006f44f(%rip),%rax
0000000000014c89	popq	%rbx
0000000000014c8a	popq	%r14
0000000000014c8c	popq	%rbp
0000000000014c8d	jmp	*%rax
0000000000014c8f	nop
0000000000014c90	nop
0000000000014c91	nop
0000000000014c92	nop
0000000000014c93	nop
0000000000014c94	nop
-[PBXLSDebuggingSession _removeExceptionBreakpointObserversIfNeeded:]:
0000000000014c95	pushq	%rbp
0000000000014c96	movq	%rsp,%rbp
0000000000014c99	pushq	%r14
0000000000014c9b	pushq	%rbx
0000000000014c9c	movq	%rdx,%rbx
0000000000014c9f	movq	%rdi,%r14
0000000000014ca2	movq	0x00092c3f(%rip),%rsi
0000000000014ca9	movq	0x00093ec8(%rip),%rdi
0000000000014cb0	call	*0x0006f422(%rip)
0000000000014cb6	testb	%al,%al
0000000000014cb8	jne	0x00014cbf
0000000000014cba	popq	%rbx
0000000000014cbb	popq	%r14
0000000000014cbd	popq	%rbp
0000000000014cbe	ret
0000000000014cbf	movq	0x00092af2(%rip),%rsi
0000000000014cc6	movq	0x000a20cb(%rip),%rcx
0000000000014ccd	leaq	0x000a20c4(%rip),%r8
0000000000014cd4	movq	%rbx,%rdi
0000000000014cd7	movq	%r14,%rdx
0000000000014cda	call	*0x0006f3f8(%rip)
0000000000014ce0	movq	0x00092ad1(%rip),%rsi
0000000000014ce7	movq	0x000a20b2(%rip),%rcx
0000000000014cee	leaq	0x000a20ab(%rip),%r8
0000000000014cf5	movq	%rbx,%rdi
0000000000014cf8	movq	%r14,%rdx
0000000000014cfb	call	*0x0006f3d7(%rip)
0000000000014d01	leaq	0x000a20a0(%rip),%r8
0000000000014d08	movq	0x00092aa9(%rip),%rsi
0000000000014d0f	movq	0x000a2092(%rip),%rcx
0000000000014d16	movq	%rbx,%rdi
0000000000014d19	movq	%r14,%rdx
0000000000014d1c	movq	0x0006f3b5(%rip),%rax
0000000000014d23	popq	%rbx
0000000000014d24	popq	%r14
0000000000014d26	popq	%rbp
0000000000014d27	jmp	*%rax
0000000000014d29	nop
0000000000014d2a	nop
-[PBXGDB_ThreadController gdbTargetStopped]:
0000000000014d2b	pushq	%rbp
0000000000014d2c	movq	%rsp,%rbp
0000000000014d2f	pushq	%r15
0000000000014d31	pushq	%r14
0000000000014d33	pushq	%r13
0000000000014d35	pushq	%r12
0000000000014d37	pushq	%rbx
0000000000014d38	subq	$0x18,%rsp
0000000000014d3c	movq	%rdi,%rbx
0000000000014d3f	movq	0x0009a382(%rip),%rax
0000000000014d46	movl	$0x00000000,(%rbx,%rax)
0000000000014d4d	movq	0x0008fd64(%rip),%rsi
0000000000014d54	movq	0x0006f37d(%rip),%r14
0000000000014d5b	call	*%r14
0000000000014d5e	movq	%rax,%r15
0000000000014d61	movq	0x00092358(%rip),%rsi
0000000000014d68	movq	%rbx,%rdi
0000000000014d6b	call	*%r14
0000000000014d6e	cmpb	$0x01,%al
0000000000014d70	je	0x00015346
0000000000014d76	movq	0x0008fd43(%rip),%rsi
0000000000014d7d	movq	0x0006f354(%rip),%r14
0000000000014d84	movq	%r15,%rdi
0000000000014d87	call	*%r14
0000000000014d8a	movq	0x00092337(%rip),%rsi
0000000000014d91	movq	%rax,%rdi
0000000000014d94	call	*%r14
0000000000014d97	movq	%rax,%r12
0000000000014d9a	movq	%r12,0xc8(%rbp)
0000000000014d9e	movq	0x0008fcd3(%rip),%rsi
0000000000014da5	movq	%r12,%rdi
0000000000014da8	call	*%r14
0000000000014dab	movq	0x0009a31e(%rip),%rdx
0000000000014db2	movq	%rax,%rdi
0000000000014db5	movq	%rbx,%rsi
0000000000014db8	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000014dbd	leaq	0x00099e0c(%rip),%rax
0000000000014dc4	movq	(%rax),%rax
0000000000014dc7	movl	(%r12,%rax),%eax
0000000000014dcb	movq	0x0009a2ee(%rip),%rcx
0000000000014dd2	cmpl	%eax,(%rbx,%rcx)
0000000000014dd5	je	0x00014dda
0000000000014dd7	movl	%eax,(%rbx,%rcx)
0000000000014dda	movq	%rbx,0xd0(%rbp)
0000000000014dde	leaq	0x00099ddb(%rip),%rax
0000000000014de5	movq	(%rax),%rax
0000000000014de8	movq	0xc8(%rbp),%rcx
0000000000014dec	movl	(%rcx,%rax),%eax
0000000000014def	decl	%eax
0000000000014df1	movl	$0x00000002,%r14d
0000000000014df7	movl	$0x00000001,%r12d
0000000000014dfd	xorl	%r13d,%r13d
0000000000014e00	cmpl	$0x08,%eax
0000000000014e03	ja	0x000151a5
0000000000014e09	leaq	0x0000056c(%rip),%rcx
0000000000014e10	movslq	(%rcx,%rax,4),%rax
0000000000014e14	addq	%rcx,%rax
0000000000014e17	jmp	*%rax
0000000000014e19	movq	0x000922b0(%rip),%rsi
0000000000014e20	movq	0x000938b1(%rip),%rdi
0000000000014e27	movq	0x0006f2aa(%rip),%rbx
0000000000014e2e	call	*%rbx
0000000000014e30	movq	0x00090af1(%rip),%rsi
0000000000014e37	movq	%r15,%rdi
0000000000014e3a	movq	%rax,%rdx
0000000000014e3d	xorl	%ecx,%ecx
0000000000014e3f	call	*%rbx
0000000000014e41	movl	$0x00000002,%r14d
0000000000014e47	movl	$0x00000001,%r12d
0000000000014e4d	xorl	%r13d,%r13d
0000000000014e50	jmp	0x000151a5
0000000000014e55	movq	0x0009a274(%rip),%rax
0000000000014e5c	movq	0xd0(%rbp),%rcx
0000000000014e60	movq	(%rcx,%rax),%rax
0000000000014e64	leaq	0x00099d4d(%rip),%rcx
0000000000014e6b	movq	(%rcx),%rcx
0000000000014e6e	movq	(%rax,%rcx),%rax
0000000000014e72	leaq	0x00099cff(%rip),%rcx
0000000000014e79	movq	(%rcx),%rcx
0000000000014e7c	movq	(%rax,%rcx),%r14
0000000000014e80	movq	0x00092251(%rip),%rsi
0000000000014e87	movq	0x0009384a(%rip),%rdi
0000000000014e8e	movq	%r15,%rbx
0000000000014e91	movq	0x0006f240(%rip),%r15
0000000000014e98	movq	%r14,%rdx
0000000000014e9b	call	*%r15
0000000000014e9e	movl	$0x00000001,%r12d
0000000000014ea4	movq	0x00090a7d(%rip),%rsi
0000000000014eab	movq	%rbx,%rdi
0000000000014eae	movq	%rax,%rdx
0000000000014eb1	movl	$0x00000001,%ecx
0000000000014eb6	call	*%r15
0000000000014eb9	leaq	0x0009f578(%rip),%rdx
0000000000014ec0	movq	0x00090421(%rip),%rsi
0000000000014ec7	movq	%r14,%rdi
0000000000014eca	call	*%r15
0000000000014ecd	testb	%al,%al
0000000000014ecf	je	0x00014ee2
0000000000014ed1	xorl	%r13d,%r13d
0000000000014ed4	movl	$0x00000006,%r14d
0000000000014eda	movq	%rbx,%r15
0000000000014edd	jmp	0x000151a5
0000000000014ee2	movq	0x000921f7(%rip),%rsi
0000000000014ee9	movq	0x00093bb8(%rip),%rdi
0000000000014ef0	movq	%r14,%rdx
0000000000014ef3	call	*0x0006f1df(%rip)
0000000000014ef9	testb	%al,%al
0000000000014efb	jne	0x00014f14
0000000000014efd	xorl	%r13d,%r13d
0000000000014f00	movl	$0x00000002,%r14d
0000000000014f06	movl	$0x00000001,%r12d
0000000000014f0c	movq	%rbx,%r15
0000000000014f0f	jmp	0x000151a5
0000000000014f14	movq	0x0009a1ad(%rip),%rax
0000000000014f1b	movq	0xd0(%rbp),%rcx
0000000000014f1f	movl	$0x00000001,(%rcx,%rax)
0000000000014f26	movl	$0x00000004,%r14d
0000000000014f2c	movl	$0x00000001,%r12d
0000000000014f32	xorl	%r13d,%r13d
0000000000014f35	movq	%rbx,%r15
0000000000014f38	jmp	0x000151a5
0000000000014f3d	movq	0x000921a4(%rip),%rsi
0000000000014f44	movq	0x0009378d(%rip),%rdi
0000000000014f4b	movq	0x0006f186(%rip),%rbx
0000000000014f52	call	*%rbx
0000000000014f54	movq	0x000909cd(%rip),%rsi
0000000000014f5b	movq	%r15,%rdi
0000000000014f5e	movq	%rax,%rdx
0000000000014f61	xorl	%ecx,%ecx
0000000000014f63	call	*%rbx
0000000000014f65	movl	$0x00000002,%r14d
0000000000014f6b	movl	$0x00000001,%r12d
0000000000014f71	movl	$0x00000001,%r13d
0000000000014f77	jmp	0x000151a5
0000000000014f7c	movq	0x00090055(%rip),%rsi
0000000000014f83	movq	0x0006f14e(%rip),%r12
0000000000014f8a	movq	%r15,%rdi
0000000000014f8d	call	*%r12
0000000000014f90	movq	0x0009a139(%rip),%rcx
0000000000014f97	movq	0xd0(%rbp),%rbx
0000000000014f9b	movq	(%rbx,%rcx),%rcx
0000000000014f9f	leaq	0x00099c12(%rip),%rdx
0000000000014fa6	movq	(%rdx),%r14
0000000000014fa9	movq	(%rcx,%r14),%rcx
0000000000014fad	leaq	0x00099bdc(%rip),%rdx
0000000000014fb4	movq	(%rdx),%rdx
0000000000014fb7	movq	(%rcx,%rdx),%rdx
0000000000014fbb	movq	0x0009146e(%rip),%rsi
0000000000014fc2	movq	%rax,%rdi
0000000000014fc5	call	*%r12
0000000000014fc8	movq	%rax,%r12
0000000000014fcb	leaq	0x0009335e(%rip),%rsi
0000000000014fd2	leaq	0x00099bbf(%rip),%rax
0000000000014fd9	movq	0x0009a0f0(%rip),%rcx
0000000000014fe0	movq	(%rbx,%rcx),%rcx
0000000000014fe4	movq	(%rcx,%r14),%rcx
0000000000014fe8	movq	(%rax),%rax
0000000000014feb	movq	(%rcx,%rax),%r14
0000000000014fef	movq	0x00093aba(%rip),%rdi
0000000000014ff6	call	*0x00093334(%rip)
0000000000014ffc	leaq	0x0009333d(%rip),%rsi
0000000000015003	movq	%r12,%rdi
0000000000015006	movq	%rax,%rdx
0000000000015009	call	*0x00093331(%rip)
000000000001500f	testb	%al,%al
0000000000015011	jne	0x00015018
0000000000015013	testq	%r14,%r14
0000000000015016	je	0x00015026
0000000000015018	movq	0x0009a0a9(%rip),%rax
000000000001501f	movl	$0x00000002,(%rbx,%rax)
0000000000015026	testq	%r12,%r12
0000000000015029	jne	0x00015125
000000000001502f	movq	%rbx,0xd0(%rbp)
0000000000015033	xorl	%r13d,%r13d
0000000000015036	movl	$0x00000002,%r14d
000000000001503c	movl	$0x00000001,%r12d
0000000000015042	jmp	0x000151a5
0000000000015047	movq	0x0008fda2(%rip),%rsi
000000000001504e	movq	0x0006f083(%rip),%r14
0000000000015055	movq	%r15,%rdi
0000000000015058	call	*%r14
000000000001505b	movq	0x0009a06e(%rip),%rcx
0000000000015062	movq	0xd0(%rbp),%rbx
0000000000015066	movq	(%rbx,%rcx),%rcx
000000000001506a	leaq	0x00099b47(%rip),%rdx
0000000000015071	movq	(%rdx),%rdx
0000000000015074	movq	(%rcx,%rdx),%rcx
0000000000015078	leaq	0x00099b01(%rip),%rdx
000000000001507f	movq	(%rdx),%rdx
0000000000015082	movl	(%rcx,%rdx),%ecx
0000000000015085	movq	0x0008fe7c(%rip),%rsi
000000000001508c	movq	%rax,%rdi
000000000001508f	movq	%r15,%rdx
0000000000015092	call	*%r14
0000000000015095	movq	0x00090394(%rip),%rsi
000000000001509c	movq	0x000935bd(%rip),%rdi
00000000000150a3	call	*%r14
00000000000150a6	xorl	%r12d,%r12d
00000000000150a9	xorl	%r13d,%r13d
00000000000150ac	movq	0x00091ad5(%rip),%rsi
00000000000150b3	movq	%rax,(%rsp)
00000000000150b7	movq	%rbx,%rdi
00000000000150ba	xorl	%edx,%edx
00000000000150bc	xorl	%ecx,%ecx
00000000000150be	xorl	%r8d,%r8d
00000000000150c1	xorl	%r9d,%r9d
00000000000150c4	call	*%r14
00000000000150c7	movl	$0x00000002,%r14d
00000000000150cd	jmp	0x000151a5
00000000000150d2	movq	0x00092037(%rip),%rsi
00000000000150d9	movq	0xd0(%rbp),%rdi
00000000000150dd	movl	$0x00000001,%edx
00000000000150e2	call	*0x0006eff0(%rip)
00000000000150e8	jmp	0x0001529b
00000000000150ed	movq	0x00090aa4(%rip),%rsi
00000000000150f4	movq	%r15,%rdi
00000000000150f7	call	*0x0006efdb(%rip)
00000000000150fd	movl	$0x00000002,%r14d
0000000000015103	movl	$0x00000001,%r12d
0000000000015109	xorl	%r13d,%r13d
000000000001510c	testb	%al,%al
000000000001510e	je	0x000151a5
0000000000015114	jmp	0x000151be
0000000000015119	movq	0x00091ff8(%rip),%rsi
0000000000015120	jmp	0x00014e20
0000000000015125	movq	0x00091fc4(%rip),%rsi
000000000001512c	movq	0x0006efa5(%rip),%r14
0000000000015133	movq	%r12,%rdi
0000000000015136	call	*%r14
0000000000015139	movq	0x00099f90(%rip),%rax
0000000000015140	movq	(%rbx,%rax),%rax
0000000000015144	leaq	0x00099a6d(%rip),%rcx
000000000001514b	movq	(%rcx),%rcx
000000000001514e	movq	(%rax,%rcx),%rax
0000000000015152	leaq	0x00099a4f(%rip),%rcx
0000000000015159	movq	(%rcx),%rcx
000000000001515c	movq	(%rax,%rcx),%rcx
0000000000015160	movq	0x00091f91(%rip),%rsi
0000000000015167	movq	%rbx,%rdi
000000000001516a	movq	%r12,%rdx
000000000001516d	call	*%r14
0000000000015170	movq	0x00091f89(%rip),%rsi
0000000000015177	movq	%rbx,%rdi
000000000001517a	movq	%rbx,0xd0(%rbp)
000000000001517e	movq	%r12,%rdx
0000000000015181	call	*%r14
0000000000015184	movq	0x00091f7d(%rip),%rsi
000000000001518b	movq	%r12,%rdi
000000000001518e	call	*%r14
0000000000015191	movl	$0x00000002,%r14d
0000000000015197	xorl	%r13d,%r13d
000000000001519a	testb	%al,%al
000000000001519c	sete	%al
000000000001519f	movzbl	%al,%r12d
00000000000151a3	jne	0x000151b5
00000000000151a5	movq	0x0008fc7c(%rip),%rsi
00000000000151ac	movq	%r15,%rdi
00000000000151af	call	*0x0006ef23(%rip)
00000000000151b5	testl	%r12d,%r12d
00000000000151b8	je	0x0001529b
00000000000151be	movq	0x0009121b(%rip),%rsi
00000000000151c5	movq	%r15,%rdi
00000000000151c8	call	*0x0006ef0a(%rip)
00000000000151ce	testb	%al,%al
00000000000151d0	jne	0x0001529b
00000000000151d6	leaq	0x000999eb(%rip),%rax
00000000000151dd	movq	(%rax),%rax
00000000000151e0	movq	%r15,%r12
00000000000151e3	movq	0xc8(%rbp),%rcx
00000000000151e7	movq	(%rcx,%rax),%r15
00000000000151eb	testq	%r15,%r15
00000000000151ee	jne	0x0001521e
00000000000151f0	movq	0x0008fbf9(%rip),%rsi
00000000000151f7	movq	0x0006eeda(%rip),%rbx
00000000000151fe	movq	%r12,%rdi
0000000000015201	call	*%rbx
0000000000015203	movq	0x0008fcbe(%rip),%rsi
000000000001520a	movq	%rax,%rdi
000000000001520d	call	*%rbx
000000000001520f	movq	0x0008feda(%rip),%rsi
0000000000015216	movq	%rax,%rdi
0000000000015219	call	*%rbx
000000000001521b	movq	%rax,%r15
000000000001521e	movq	0x0008f89b(%rip),%rsi
0000000000015225	movq	0x0006eeac(%rip),%rbx
000000000001522c	movq	%r12,%rdi
000000000001522f	call	*%rbx
0000000000015231	movq	0x00091578(%rip),%rsi
0000000000015238	movq	%rax,%rdi
000000000001523b	call	*%rbx
000000000001523d	movq	0x0008ff3c(%rip),%rsi
0000000000015244	movq	%r12,%rdi
0000000000015247	call	*%rbx
0000000000015249	movq	0x0008fba8(%rip),%rsi
0000000000015250	movq	%r12,%rdi
0000000000015253	call	*%rbx
0000000000015255	movq	0x00091ec4(%rip),%rsi
000000000001525c	movq	%rax,%rdi
000000000001525f	call	*%rbx
0000000000015261	testb	%al,%al
0000000000015263	movq	0xd0(%rbp),%rbx
0000000000015267	je	0x0001527b
0000000000015269	movq	0x00091ea0(%rip),%rsi
0000000000015270	movq	%rbx,%rdi
0000000000015273	xorl	%edx,%edx
0000000000015275	call	*0x0006ee5d(%rip)
000000000001527b	movq	0x000909a6(%rip),%rsi
0000000000015282	movq	%rbx,%rdi
0000000000015285	movq	%rbx,0xd0(%rbp)
0000000000015289	movq	%r15,%rdx
000000000001528c	movl	%r14d,%ecx
000000000001528f	movq	%r13,%r8
0000000000015292	call	*0x0006ee40(%rip)
0000000000015298	movq	%r12,%r15
000000000001529b	movq	0x0008fd36(%rip),%rsi
00000000000152a2	movq	0x0006ee2f(%rip),%r14
00000000000152a9	movq	%r15,%rdi
00000000000152ac	call	*%r14
00000000000152af	movq	0x00099e1a(%rip),%rcx
00000000000152b6	movq	0xd0(%rbp),%rbx
00000000000152ba	movq	(%rbx,%rcx),%rcx
00000000000152be	leaq	0x000998f3(%rip),%rdx
00000000000152c5	movq	(%rdx),%rdx
00000000000152c8	movq	(%rcx,%rdx),%rcx
00000000000152cc	leaq	0x000998bd(%rip),%rdx
00000000000152d3	movq	(%rdx),%rdx
00000000000152d6	movq	(%rcx,%rdx),%rdx
00000000000152da	movq	0x0009114f(%rip),%rsi
00000000000152e1	movq	%rax,%rdi
00000000000152e4	call	*%r14
00000000000152e7	leaq	0x000998d2(%rip),%rcx
00000000000152ee	movq	(%rcx),%rcx
00000000000152f1	movq	0xc8(%rbp),%rdx
00000000000152f5	cmpl	$0x04,(%rdx,%rcx)
00000000000152f9	jne	0x0001530f
00000000000152fb	movq	0x00091e06(%rip),%rsi
0000000000015302	movq	%rax,%rdi
0000000000015305	call	*0x0006edcd(%rip)
000000000001530b	testb	%al,%al
000000000001530d	jne	0x00015337
000000000001530f	movq	0x00099dc2(%rip),%rax
0000000000015316	cmpb	$0x00,(%rbx,%rax)
000000000001531a	je	0x00015337
000000000001531c	movq	0x00091e05(%rip),%rsi
0000000000015323	movq	%rbx,%rdi
0000000000015326	call	*0x0006edac(%rip)
000000000001532c	movq	0x00099da5(%rip),%rax
0000000000015333	movb	$0x00,(%rbx,%rax)
0000000000015337	addq	$0x18,%rsp
000000000001533b	popq	%rbx
000000000001533c	popq	%r12
000000000001533e	popq	%r13
0000000000015340	popq	%r14
0000000000015342	popq	%r15
0000000000015344	popq	%rbp
0000000000015345	ret
0000000000015346	movq	0x0008fe33(%rip),%rsi
000000000001534d	movq	%r15,%rdi
0000000000015350	call	*0x0006ed82(%rip)
0000000000015356	movq	0x0008fd1b(%rip),%rsi
000000000001535d	movq	%rbx,%rdi
0000000000015360	xorl	%edx,%edx
0000000000015362	movq	0x0006ed6f(%rip),%rax
0000000000015369	addq	$0x18,%rsp
000000000001536d	popq	%rbx
000000000001536e	popq	%r12
0000000000015370	popq	%r13
0000000000015372	popq	%r14
0000000000015374	popq	%r15
0000000000015376	popq	%rbp
0000000000015377	jmp	*%rax
0000000000015379	nopl	(%rax)
000000000001537c	popf
000000000001537d	cli
000000000001537e	.byte 0xff, 0xff #bad opcode
0000000000015380	fsqrt
0000000000015382	.byte 0xff, 0xff #bad opcode
0000000000015384	sarl	$0xff,%ebx
0000000000015387	incl	(%rax)
0000000000015389	cld
000000000001538a	.byte 0xff, 0xff #bad opcode
000000000001538c	pushq	%rsi
000000000001538d	std
000000000001538e	.byte 0xff, 0xff #bad opcode
0000000000015390	subl	%edi,%esi
0000000000015392	.byte 0xff, 0xff #bad opcode
0000000000015394	jno	0x00015393
0000000000015396	.byte 0xff, 0xff #bad opcode
0000000000015398	lret
0000000000015399	cld
000000000001539a	.byte 0xff, 0xff #bad opcode
000000000001539c	popf
000000000001539d	std
000000000001539e	.byte 0xff, 0xff #bad opcode
-[PBXGDB_ThreadController ignoreNextStop]:
00000000000153a0	pushq	%rbp
00000000000153a1	movq	%rsp,%rbp
00000000000153a4	movq	0x00099d35(%rip),%rax
00000000000153ab	movb	(%rdi,%rax),%al
00000000000153ae	movsbl	%al,%eax
00000000000153b1	popq	%rbp
00000000000153b2	ret
-[PBXGDB_MIController stoppedState]:
00000000000153b3	pushq	%rbp
00000000000153b4	movq	%rsp,%rbp
00000000000153b7	movq	0x00099862(%rip),%rax
00000000000153be	movq	(%rdi,%rax),%rax
00000000000153c2	popq	%rbp
00000000000153c3	ret
-[PBXGDB_Adaptor breakpointController]:
00000000000153c4	pushq	%rbp
00000000000153c5	movq	%rsp,%rbp
00000000000153c8	movq	0x000992b9(%rip),%rax
00000000000153cf	movq	(%rdi,%rax),%rax
00000000000153d3	popq	%rbp
00000000000153d4	ret
00000000000153d5	nop
-[PBXGDB_ThreadController _setHitCountForBreakpoint:withHitCount:]:
00000000000153d6	pushq	%rbp
00000000000153d7	movq	%rsp,%rbp
00000000000153da	pushq	%r14
00000000000153dc	pushq	%rbx
00000000000153dd	subq	$0x20,%rsp
00000000000153e1	movq	%rcx,%r14
00000000000153e4	movq	%rdx,%rbx
00000000000153e7	movq	%rdi,0xe8(%rbp)
00000000000153eb	movq	%rsi,0xe0(%rbp)
00000000000153ef	testq	%r14,%r14
00000000000153f2	jns	0x00015435
00000000000153f4	leaq	0x0009a43d(%rip),%rax
00000000000153fb	leaq	0x0004c93a(%rip),%rcx
0000000000015402	movq	%rcx,0x08(%rsp)
0000000000015407	movq	%rax,(%rsp)
000000000001540b	leaq	0xe8(%rbp),%rdi
000000000001540f	leaq	0xe0(%rbp),%rsi
0000000000015413	leaq	0x0004c8b6(%rip),%rdx
000000000001541a	leaq	0x0004c806(%rip),%rcx
0000000000015421	leaq	0x0009f030(%rip),%r9
0000000000015428	movl	$0x000002b9,%r8d
000000000001542e	xorb	%al,%al
0000000000015430	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000015435	testq	%rbx,%rbx
0000000000015438	je	0x0001544d
000000000001543a	movq	0x00091d87(%rip),%rsi
0000000000015441	movq	%rbx,%rdi
0000000000015444	movq	%r14,%rdx
0000000000015447	call	*0x0006ec8b(%rip)
000000000001544d	addq	$0x20,%rsp
0000000000015451	popq	%rbx
0000000000015452	popq	%r14
0000000000015454	popq	%rbp
0000000000015455	ret
0000000000015456	nop
0000000000015457	nop
-[PBXGDB_ThreadController _performActionsForBreakpoint:]:
0000000000015458	pushq	%rbp
0000000000015459	movq	%rsp,%rbp
000000000001545c	pushq	%r14
000000000001545e	pushq	%rbx
000000000001545f	movq	%rdx,%rbx
0000000000015462	movq	%rdi,%r14
0000000000015465	movq	0x00091cc4(%rip),%rsi
000000000001546c	movq	%rbx,%rdi
000000000001546f	call	*0x0006ec63(%rip)
0000000000015475	leaq	0x00092e94(%rip),%rsi
000000000001547c	movq	%rax,%rdi
000000000001547f	call	*0x00092e8b(%rip)
0000000000015485	testq	%rax,%rax
0000000000015488	jne	0x000154a3
000000000001548a	movq	0x00091c77(%rip),%rsi
0000000000015491	movq	%rbx,%rdi
0000000000015494	call	*0x0006ec3e(%rip)
000000000001549a	testb	%al,%al
000000000001549c	jne	0x000154e2
000000000001549e	popq	%rbx
000000000001549f	popq	%r14
00000000000154a1	popq	%rbp
00000000000154a2	ret
00000000000154a3	movq	0x00091c86(%rip),%rsi
00000000000154aa	movq	%rbx,%rdi
00000000000154ad	call	*0x0006ec25(%rip)
00000000000154b3	leaq	0x00092e66(%rip),%rsi
00000000000154ba	movq	%rax,%rdi
00000000000154bd	xorl	%edx,%edx
00000000000154bf	call	*0x00092e5b(%rip)
00000000000154c5	movq	0x00091c6c(%rip),%rsi
00000000000154cc	movq	%r14,%rdi
00000000000154cf	movq	%rbx,%rdx
00000000000154d2	movq	%rax,%rcx
00000000000154d5	movq	0x0006ebfc(%rip),%rax
00000000000154dc	popq	%rbx
00000000000154dd	popq	%r14
00000000000154df	popq	%rbp
00000000000154e0	jmp	*%rax
00000000000154e2	movq	0x0009165f(%rip),%rsi
00000000000154e9	movq	%r14,%rdi
00000000000154ec	popq	%rbx
00000000000154ed	popq	%r14
00000000000154ef	popq	%rbp
00000000000154f0	jmp	*0x0006ebe2(%rip)
-[PBXGDB_Adaptor sendDefaultCommandInterpreterPrompt]:
00000000000154f6	pushq	%rbp
00000000000154f7	movq	%rsp,%rbp
00000000000154fa	movq	0x0008fbe7(%rip),%rsi
0000000000015501	leaq	0x0009b230(%rip),%rdx
0000000000015508	popq	%rbp
0000000000015509	jmp	*0x0006ebc9(%rip)
-[PBXGDB_Adaptor sendCommandInterpreterPrompt:]:
000000000001550f	pushq	%rbp
0000000000015510	movq	%rsp,%rbp
0000000000015513	pushq	%r15
0000000000015515	pushq	%r14
0000000000015517	pushq	%rbx
0000000000015518	pushq	%rax
0000000000015519	movq	%rdx,%r14
000000000001551c	movq	%rdi,%rbx
000000000001551f	movq	0x0008f8ca(%rip),%rsi
0000000000015526	movq	0x0006ebab(%rip),%r15
000000000001552d	call	*%r15
0000000000015530	movq	0x0008fb99(%rip),%rsi
0000000000015537	movq	%rax,%rdi
000000000001553a	call	*%r15
000000000001553d	testb	%al,%al
000000000001553f	je	0x0001554c
0000000000015541	addq	$0x08,%rsp
0000000000015545	popq	%rbx
0000000000015546	popq	%r14
0000000000015548	popq	%r15
000000000001554a	popq	%rbp
000000000001554b	ret
000000000001554c	movq	0x0008f8ad(%rip),%rsi
0000000000015553	movq	%rbx,%rdi
0000000000015556	call	*0x0006eb7c(%rip)
000000000001555c	movq	0x0008fb75(%rip),%rsi
0000000000015563	movq	%rax,%rdi
0000000000015566	call	*0x0006eb6c(%rip)
000000000001556c	movq	0x0008fb6d(%rip),%rsi
0000000000015573	movq	%rax,%rdi
0000000000015576	movq	%r14,%rdx
0000000000015579	movl	$0x00000001,%ecx
000000000001557e	xorl	%r8d,%r8d
0000000000015581	movq	0x0006eb50(%rip),%rax
0000000000015588	addq	$0x08,%rsp
000000000001558c	popq	%rbx
000000000001558d	popq	%r14
000000000001558f	popq	%r15
0000000000015591	popq	%rbp
0000000000015592	jmp	*%rax
0000000000015594	nop
0000000000015595	nop
0000000000015596	nop
0000000000015597	nop
-[PBXGDB_MIController invalidateThreadAndFrameContexts]:
0000000000015598	pushq	%rbp
0000000000015599	movq	%rsp,%rbp
000000000001559c	movq	0x00099685(%rip),%rax
00000000000155a3	movq	$0xfffffffe,(%rdi,%rax)
00000000000155ab	movq	0x0009967e(%rip),%rax
00000000000155b2	movq	$0xfffffffe,(%rdi,%rax)
00000000000155ba	popq	%rbp
00000000000155bb	ret
-[PBXLSDynamicLinkerImageController needsUpdate]:
00000000000155bc	pushq	%rbp
00000000000155bd	movq	%rsp,%rbp
00000000000155c0	xorl	%eax,%eax
00000000000155c2	popq	%rbp
00000000000155c3	ret
00000000000155c4	nop
00000000000155c5	nop
00000000000155c6	nop
-[PBXGDB_ThreadController enqueueThreadListSequenceWithCurrentThreadID:threadState:suspendedStatus:]:
00000000000155c7	pushq	%rbp
00000000000155c8	movq	%rsp,%rbp
00000000000155cb	pushq	%r15
00000000000155cd	pushq	%r14
00000000000155cf	pushq	%r13
00000000000155d1	pushq	%r12
00000000000155d3	pushq	%rbx
00000000000155d4	pushq	%rax
00000000000155d5	movq	%r8,%r15
00000000000155d8	movl	%ecx,%r12d
00000000000155db	movq	%rdx,%r13
00000000000155de	movq	%rdi,%r14
00000000000155e1	movq	0x000934e8(%rip),%rdi
00000000000155e8	leaq	0x00092cf1(%rip),%rsi
00000000000155ef	call	*0x00092ceb(%rip)
00000000000155f5	movq	0x0008f474(%rip),%rsi
00000000000155fc	movq	%rax,%rdi
00000000000155ff	call	*0x0006ead3(%rip)
0000000000015605	movq	%rax,%rbx
0000000000015608	movq	0x00091b71(%rip),%rsi
000000000001560f	movq	%r14,%rdi
0000000000015612	movq	%rbx,%rdx
0000000000015615	xorl	%ecx,%ecx
0000000000015617	call	*0x0006eabb(%rip)
000000000001561d	movq	0x00091b64(%rip),%rsi
0000000000015624	movq	%rbx,%rdi
0000000000015627	movq	%r13,%rdx
000000000001562a	call	*0x0006eaa8(%rip)
0000000000015630	movq	0x00091b59(%rip),%rsi
0000000000015637	movq	%rbx,%rdi
000000000001563a	movl	%r12d,%edx
000000000001563d	call	*0x0006ea95(%rip)
0000000000015643	movq	0x00091b4e(%rip),%rsi
000000000001564a	movq	%rbx,%rdi
000000000001564d	movl	%r15d,%edx
0000000000015650	call	*0x0006ea82(%rip)
0000000000015656	movq	0x0008f45b(%rip),%rsi
000000000001565d	movq	%r14,%rdi
0000000000015660	call	*0x0006ea72(%rip)
0000000000015666	movq	0x0008f763(%rip),%rsi
000000000001566d	movq	%rax,%rdi
0000000000015670	call	*0x0006ea62(%rip)
0000000000015676	movq	0x0008f763(%rip),%rsi
000000000001567d	movq	%rax,%rdi
0000000000015680	movq	%rbx,%rdx
0000000000015683	movq	0x0006ea4e(%rip),%rax
000000000001568a	addq	$0x08,%rsp
000000000001568e	popq	%rbx
000000000001568f	popq	%r12
0000000000015691	popq	%r13
0000000000015693	popq	%r14
0000000000015695	popq	%r15
0000000000015697	popq	%rbp
0000000000015698	jmp	*%rax
-[PBXGDB_ThreadListSequence setCurrentThreadID:]:
000000000001569a	pushq	%rbp
000000000001569b	movq	%rsp,%rbp
000000000001569e	movq	0x0009993b(%rip),%rax
00000000000156a5	movq	%rdx,(%rdi,%rax)
00000000000156a9	popq	%rbp
00000000000156aa	ret
-[PBXGDB_ThreadListSequence setThreadState:]:
00000000000156ab	pushq	%rbp
00000000000156ac	movq	%rsp,%rbp
00000000000156af	movq	0x00099922(%rip),%rax
00000000000156b6	movl	%edx,(%rdi,%rax)
00000000000156b9	popq	%rbp
00000000000156ba	ret
-[PBXGDB_ThreadListSequence setSuspendedStatus:]:
00000000000156bb	pushq	%rbp
00000000000156bc	movq	%rsp,%rbp
00000000000156bf	movq	0x00099922(%rip),%rax
00000000000156c6	movl	%edx,(%rdi,%rax)
00000000000156c9	popq	%rbp
00000000000156ca	ret
-[PBXGDB_MISetSignalHandlingMode_Debug GDBCommandString]:
00000000000156cb	pushq	%rbp
00000000000156cc	movq	%rsp,%rbp
00000000000156cf	leaq	0x0009dba2(%rip),%rax
00000000000156d6	popq	%rbp
00000000000156d7	ret
-[PBXGDB_ThreadListSequence execute]:
00000000000156d8	pushq	%rbp
00000000000156d9	movq	%rsp,%rbp
00000000000156dc	pushq	%r15
00000000000156de	pushq	%r14
00000000000156e0	pushq	%rbx
00000000000156e1	pushq	%rax
00000000000156e2	movq	%rdi,%r14
00000000000156e5	movq	0x0008f3cc(%rip),%rsi
00000000000156ec	movq	0x0006e9e5(%rip),%r15
00000000000156f3	call	*%r15
00000000000156f6	movq	%rax,%rbx
00000000000156f9	movq	0x00090298(%rip),%rsi
0000000000015700	movq	%rbx,%rdi
0000000000015703	call	*%r15
0000000000015706	testb	%al,%al
0000000000015708	jne	0x00015738
000000000001570a	movq	0x00091517(%rip),%rsi
0000000000015711	movq	%rbx,%rdi
0000000000015714	call	*0x0006e9be(%rip)
000000000001571a	testb	%al,%al
000000000001571c	jne	0x00015738
000000000001571e	movq	0x0009150b(%rip),%rsi
0000000000015725	movq	%r14,%rdi
0000000000015728	addq	$0x08,%rsp
000000000001572c	popq	%rbx
000000000001572d	popq	%r14
000000000001572f	popq	%r15
0000000000015731	popq	%rbp
0000000000015732	jmp	*0x0006e9a0(%rip)
0000000000015738	movq	0x000914b1(%rip),%rsi
000000000001573f	jmp	0x00015725
-[PBXGDB_Adaptor isIntrospectionLibraryLoaded]:
0000000000015741	pushq	%rbp
0000000000015742	movq	%rsp,%rbp
0000000000015745	movq	0x00098fd4(%rip),%rax
000000000001574c	movsbl	(%rdi,%rax),%eax
0000000000015750	popq	%rbp
0000000000015751	ret
-[PBXGDB_Adaptor attemptedIntrospectionLibraryLoad]:
0000000000015752	pushq	%rbp
0000000000015753	movq	%rsp,%rbp
0000000000015756	movb	$0x01,%al
0000000000015758	movq	0x00099011(%rip),%rcx
000000000001575f	cmpb	$0x00,(%rdi,%rcx)
0000000000015763	jne	0x00015773
0000000000015765	movq	0x00098fac(%rip),%rax
000000000001576c	cmpb	$0x00,(%rdi,%rax)
0000000000015770	setne	%al
0000000000015773	movzbl	%al,%eax
0000000000015776	popq	%rbp
0000000000015777	ret
-[PBXGDB_ThreadListSequence _loadIntrospectionLibrary]:
0000000000015778	pushq	%rbp
0000000000015779	movq	%rsp,%rbp
000000000001577c	pushq	%r15
000000000001577e	pushq	%r14
0000000000015780	pushq	%rbx
0000000000015781	pushq	%rax
0000000000015782	movq	%rdi,%r15
0000000000015785	movq	0x0008f32c(%rip),%rsi
000000000001578c	movq	0x0006e945(%rip),%rbx
0000000000015793	call	*%rbx
0000000000015795	movq	%rax,%r14
0000000000015798	movq	0x0008f321(%rip),%rsi
000000000001579f	movq	%r14,%rdi
00000000000157a2	call	*%rbx
00000000000157a4	leaq	0x0009e82d(%rip),%rdx
00000000000157ab	movq	0x00090246(%rip),%rsi
00000000000157b2	movq	%rax,%rdi
00000000000157b5	call	*%rbx
00000000000157b7	cmpl	$0x02,%eax
00000000000157ba	je	0x00015859
00000000000157c0	cmpl	$0x01,%eax
00000000000157c3	je	0x00015873
00000000000157c9	testl	%eax,%eax
00000000000157cb	jne	0x0001587c
00000000000157d1	movq	0x0008f2a8(%rip),%rsi
00000000000157d8	movq	0x00092f29(%rip),%rdi
00000000000157df	call	*0x0006e8f3(%rip)
00000000000157e5	movq	%rax,%rbx
00000000000157e8	movq	0x00090211(%rip),%rsi
00000000000157ef	leaq	0x0009e7e2(%rip),%rdx
00000000000157f6	movq	%rbx,%rdi
00000000000157f9	call	*0x0006e8d9(%rip)
00000000000157ff	movq	0x0008f282(%rip),%rsi
0000000000015806	movq	%rbx,%rdi
0000000000015809	movq	%r15,%rdx
000000000001580c	call	*0x0006e8c6(%rip)
0000000000015812	movq	0x0008f27f(%rip),%rsi
0000000000015819	movq	0x00091388(%rip),%rdx
0000000000015820	movq	%rbx,%rdi
0000000000015823	call	*0x0006e8af(%rip)
0000000000015829	movq	0x0008f290(%rip),%rsi
0000000000015830	movq	%r14,%rdi
0000000000015833	call	*0x0006e89f(%rip)
0000000000015839	movq	0x0008f288(%rip),%rsi
0000000000015840	movq	%rax,%rdi
0000000000015843	movq	%rbx,%rdx
0000000000015846	movq	0x0006e88b(%rip),%rax
000000000001584d	addq	$0x08,%rsp
0000000000015851	popq	%rbx
0000000000015852	popq	%r14
0000000000015854	popq	%r15
0000000000015856	popq	%rbp
0000000000015857	jmp	*%rax
0000000000015859	movq	0x00091350(%rip),%rsi
0000000000015860	movq	%r15,%rdi
0000000000015863	addq	$0x08,%rsp
0000000000015867	popq	%rbx
0000000000015868	popq	%r14
000000000001586a	popq	%r15
000000000001586c	popq	%rbp
000000000001586d	jmp	*0x0006e865(%rip)
0000000000015873	movq	0x0009133e(%rip),%rsi
000000000001587a	jmp	0x00015860
000000000001587c	addq	$0x08,%rsp
0000000000015880	popq	%rbx
0000000000015881	popq	%r14
0000000000015883	popq	%r15
0000000000015885	popq	%rbp
0000000000015886	ret
0000000000015887	nop
0000000000015888	nop
0000000000015889	nop
000000000001588a	nop
000000000001588b	nop
000000000001588c	nop
000000000001588d	nop
000000000001588e	nop
000000000001588f	nop
-[PBXGDB_MIController verifyStatusForMICommand:]:
0000000000015890	pushq	%rbp
0000000000015891	movq	%rsp,%rbp
0000000000015894	movq	0x00099365(%rip),%rax
000000000001589b	movq	(%rdi,%rax),%rdi
000000000001589f	leaq	0x00092aaa(%rip),%rsi
00000000000158a6	call	*0x00092aa4(%rip)
00000000000158ac	xorl	%ecx,%ecx
00000000000158ae	testq	%rax,%rax
00000000000158b1	je	0x000158d4
00000000000158b3	leaq	0x00092aa6(%rip),%rsi
00000000000158ba	leaq	0x0009c2d7(%rip),%rdx
00000000000158c1	movq	%rax,%rdi
00000000000158c4	call	*0x00092a96(%rip)
00000000000158ca	cmpb	$0x01,%al
00000000000158cc	movl	$0x00000001,%ecx
00000000000158d1	sbbl	$0xff,%ecx
00000000000158d4	movl	%ecx,%eax
00000000000158d6	popq	%rbp
00000000000158d7	ret
-[PBXGDB_MIVerifyCommandCommand verifyCommand:]:
00000000000158d8	pushq	%rbp
00000000000158d9	movq	%rsp,%rbp
00000000000158dc	pushq	%r14
00000000000158de	pushq	%rbx
00000000000158df	movq	%rdx,%rbx
00000000000158e2	movq	%rdi,%r14
00000000000158e5	movq	0x00092b64(%rip),%rdi
00000000000158ec	leaq	0x000929ed(%rip),%rsi
00000000000158f3	call	*0x000929e7(%rip)
00000000000158f9	movq	0x0008f3b8(%rip),%rsi
0000000000015900	leaq	0x0009d7f1(%rip),%rdx
0000000000015907	movq	%rax,%rdi
000000000001590a	movq	%rbx,%rcx
000000000001590d	xorb	%al,%al
000000000001590f	call	*0x0006e7c3(%rip)
0000000000015915	leaq	0x00099214(%rip),%rcx
000000000001591c	movq	(%rcx),%rdx
000000000001591f	movq	%rax,%rdi
0000000000015922	movq	%r14,%rsi
0000000000015925	popq	%rbx
0000000000015926	popq	%r14
0000000000015928	popq	%rbp
0000000000015929	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MIVerifyCommandCommand didFinishWithResultList:]:
000000000001592e	pushq	%rbp
000000000001592f	movq	%rsp,%rbp
0000000000015932	pushq	%r14
0000000000015934	pushq	%rbx
0000000000015935	subq	$0x10,%rsp
0000000000015939	movq	%rdx,%r14
000000000001593c	movq	%rdi,%rbx
000000000001593f	movq	0x0008f192(%rip),%rsi
0000000000015946	leaq	0x0009a70b(%rip),%rdx
000000000001594d	movq	%r14,%rdi
0000000000015950	call	*0x0006e782(%rip)
0000000000015956	movq	0x0009950b(%rip),%rcx
000000000001595d	movb	$0x00,(%rbx,%rcx)
0000000000015961	movq	0x00099508(%rip),%rcx
0000000000015968	movb	$0x00,(%rbx,%rcx)
000000000001596c	testq	%rax,%rax
000000000001596f	je	0x000159f9
0000000000015975	movq	0x0008f18c(%rip),%rsi
000000000001597c	movq	%rax,%rdi
000000000001597f	call	*0x0006e753(%rip)
0000000000015985	leaq	0x000929d4(%rip),%rsi
000000000001598c	leaq	0x0009d785(%rip),%rdx
0000000000015993	movq	%rax,%rdi
0000000000015996	call	*0x000929c4(%rip)
000000000001599c	movq	0x000994c5(%rip),%rcx
00000000000159a3	movb	%al,(%rbx,%rcx)
00000000000159a6	cmpb	$0x00,(%rbx,%rcx)
00000000000159aa	je	0x000159f9
00000000000159ac	movq	0x0008f125(%rip),%rsi
00000000000159b3	leaq	0x0009a3fe(%rip),%rdx
00000000000159ba	movq	%r14,%rdi
00000000000159bd	call	*0x0006e715(%rip)
00000000000159c3	testq	%rax,%rax
00000000000159c6	je	0x000159f9
00000000000159c8	movq	0x0008f139(%rip),%rsi
00000000000159cf	movq	%rax,%rdi
00000000000159d2	call	*0x0006e700(%rip)
00000000000159d8	leaq	0x00092981(%rip),%rsi
00000000000159df	leaq	0x0009d732(%rip),%rdx
00000000000159e6	movq	%rax,%rdi
00000000000159e9	call	*0x00092971(%rip)
00000000000159ef	movq	0x0009947a(%rip),%rcx
00000000000159f6	movb	%al,(%rbx,%rcx)
00000000000159f9	movq	%rbx,0xe0(%rbp)
00000000000159fd	movq	0x000934e4(%rip),%rax
0000000000015a04	movq	%rax,0xe8(%rbp)
0000000000015a08	movq	0x000907f1(%rip),%rsi
0000000000015a0f	leaq	0xe0(%rbp),%rdi
0000000000015a13	movq	%r14,%rdx
0000000000015a16	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000015a1b	addq	$0x10,%rsp
0000000000015a1f	popq	%rbx
0000000000015a20	popq	%r14
0000000000015a22	popq	%rbp
0000000000015a23	ret
-[PBXGDB_ThreadListSequence _loadIntrospectionSupport_verifyCmd:]:
0000000000015a24	pushq	%rbp
0000000000015a25	movq	%rsp,%rbp
0000000000015a28	pushq	%r15
0000000000015a2a	pushq	%r14
0000000000015a2c	pushq	%r12
0000000000015a2e	pushq	%rbx
0000000000015a2f	movq	%rdx,%r12
0000000000015a32	movq	%rdi,%r15
0000000000015a35	movq	0x0008f07c(%rip),%rsi
0000000000015a3c	movq	0x0006e695(%rip),%rbx
0000000000015a43	call	*%rbx
0000000000015a45	movq	%rax,%r14
0000000000015a48	movq	0x0008fff1(%rip),%rsi
0000000000015a4f	movq	%r12,%rdi
0000000000015a52	call	*%rbx
0000000000015a54	movl	$0x00000001,%ebx
0000000000015a59	testb	%al,%al
0000000000015a5b	je	0x00015a77
0000000000015a5d	movq	0x0008ffe4(%rip),%rsi
0000000000015a64	movq	%r12,%rdi
0000000000015a67	call	*0x0006e66b(%rip)
0000000000015a6d	cmpb	$0x01,%al
0000000000015a6f	movl	$0x00000001,%ebx
0000000000015a74	sbbl	$0xff,%ebx
0000000000015a77	movq	0x0008f042(%rip),%rsi
0000000000015a7e	movq	0x0006e653(%rip),%r12
0000000000015a85	movq	%r14,%rdi
0000000000015a88	call	*%r12
0000000000015a8b	movq	0x0008ffbe(%rip),%rsi
0000000000015a92	leaq	0x0009e53f(%rip),%rcx
0000000000015a99	movq	%rax,%rdi
0000000000015a9c	movl	%ebx,%edx
0000000000015a9e	call	*%r12
0000000000015aa1	cmpl	$0x02,%ebx
0000000000015aa4	jne	0x00015abe
0000000000015aa6	movq	0x00091103(%rip),%rsi
0000000000015aad	movq	%r15,%rdi
0000000000015ab0	popq	%rbx
0000000000015ab1	popq	%r12
0000000000015ab3	popq	%r14
0000000000015ab5	popq	%r15
0000000000015ab7	popq	%rbp
0000000000015ab8	jmp	*0x0006e61a(%rip)
0000000000015abe	movq	0x000910f3(%rip),%rsi
0000000000015ac5	jmp	0x00015aad
-[PBXGDB_MIVerifyCommandCommand commandIsDefined]:
0000000000015ac7	pushq	%rbp
0000000000015ac8	movq	%rsp,%rbp
0000000000015acb	movq	0x00099396(%rip),%rax
0000000000015ad2	movsbl	(%rdi,%rax),%eax
0000000000015ad6	popq	%rbp
0000000000015ad7	ret
-[PBXGDB_MIVerifyCommandCommand commandIsImplemented]:
0000000000015ad8	pushq	%rbp
0000000000015ad9	movq	%rsp,%rbp
0000000000015adc	movq	0x0009938d(%rip),%rax
0000000000015ae3	movsbl	(%rdi,%rax),%eax
0000000000015ae7	popq	%rbp
0000000000015ae8	ret
0000000000015ae9	nop
0000000000015aea	nop
0000000000015aeb	nop
0000000000015aec	nop
0000000000015aed	nop
0000000000015aee	nop
0000000000015aef	nop
0000000000015af0	nop
0000000000015af1	nop
0000000000015af2	nop
0000000000015af3	nop
0000000000015af4	nop
0000000000015af5	nop
0000000000015af6	nop
0000000000015af7	nop
-[PBXGDB_MIController setVerifyStatus:forMICommand:]:
0000000000015af8	pushq	%rbp
0000000000015af9	movq	%rsp,%rbp
0000000000015afc	testl	%edx,%edx
0000000000015afe	je	0x00015b2e
0000000000015b00	cmpl	$0x02,%edx
0000000000015b03	je	0x00015b0e
0000000000015b05	leaq	0x0009c06c(%rip),%rdx
0000000000015b0c	jmp	0x00015b15
0000000000015b0e	leaq	0x0009c083(%rip),%rdx
0000000000015b15	movq	0x000990e4(%rip),%rax
0000000000015b1c	movq	(%rdi,%rax),%rdi
0000000000015b20	movq	0x0008f209(%rip),%rsi
0000000000015b27	popq	%rbp
0000000000015b28	jmp	*0x0006e5aa(%rip)
0000000000015b2e	popq	%rbp
0000000000015b2f	ret
-[PBXGDB_ThreadListSequence _loadIntrospectionSupport_load]:
0000000000015b30	pushq	%rbp
0000000000015b31	movq	%rsp,%rbp
0000000000015b34	pushq	%r14
0000000000015b36	pushq	%rbx
0000000000015b37	movq	%rdi,%r14
0000000000015b3a	movq	0x0008ef77(%rip),%rsi
0000000000015b41	call	*0x0006e591(%rip)
0000000000015b47	movq	0x0008f452(%rip),%rsi
0000000000015b4e	movq	%rax,%rdi
0000000000015b51	movl	$0x00000001,%edx
0000000000015b56	call	*0x0006e57c(%rip)
0000000000015b5c	movq	0x0008ef1d(%rip),%rsi
0000000000015b63	movq	0x00092eae(%rip),%rdi
0000000000015b6a	call	*0x0006e568(%rip)
0000000000015b70	movq	%rax,%rbx
0000000000015b73	movq	0x0008ef0e(%rip),%rsi
0000000000015b7a	movq	%rbx,%rdi
0000000000015b7d	movq	%r14,%rdx
0000000000015b80	call	*0x0006e552(%rip)
0000000000015b86	movq	0x0008ef0b(%rip),%rsi
0000000000015b8d	movq	0x0009102c(%rip),%rdx
0000000000015b94	movq	%rbx,%rdi
0000000000015b97	call	*0x0006e53b(%rip)
0000000000015b9d	movq	0x0008ef14(%rip),%rsi
0000000000015ba4	movq	%r14,%rdi
0000000000015ba7	call	*0x0006e52b(%rip)
0000000000015bad	movq	0x0008ef0c(%rip),%rsi
0000000000015bb4	movq	%rax,%rdi
0000000000015bb7	call	*0x0006e51b(%rip)
0000000000015bbd	movq	0x0008ef04(%rip),%rsi
0000000000015bc4	movq	%rax,%rdi
0000000000015bc7	movq	%rbx,%rdx
0000000000015bca	movq	0x0006e507(%rip),%rax
0000000000015bd1	popq	%rbx
0000000000015bd2	popq	%r14
0000000000015bd4	popq	%rbp
0000000000015bd5	jmp	*%rax
0000000000015bd7	nop
0000000000015bd8	nop
-[PBXGDB_MISafeLoadIntrospectionLibraryCommand GDBCommandString]:
0000000000015bd9	pushq	%rbp
0000000000015bda	movq	%rsp,%rbp
0000000000015bdd	movq	0x0008eedc(%rip),%rsi
0000000000015be4	call	*0x0006e4ee(%rip)
0000000000015bea	movq	0x0008eec7(%rip),%rsi
0000000000015bf1	movq	%rax,%rdi
0000000000015bf4	call	*0x0006e4de(%rip)
0000000000015bfa	movq	0x0008f0e7(%rip),%rsi
0000000000015c01	movq	%rax,%rdi
0000000000015c04	call	*0x0006e4ce(%rip)
0000000000015c0a	movq	0x0008f0df(%rip),%rsi
0000000000015c11	movq	%rax,%rdi
0000000000015c14	call	*0x0006e4be(%rip)
0000000000015c1a	movq	0x00090927(%rip),%rsi
0000000000015c21	movq	%rax,%rdi
0000000000015c24	call	*0x0006e4ae(%rip)
0000000000015c2a	leaq	0x0009c767(%rip),%rdx
0000000000015c31	movq	0x0008ef40(%rip),%rsi
0000000000015c38	movq	0x00092811(%rip),%rdi
0000000000015c3f	movq	%rax,%rcx
0000000000015c42	xorb	%al,%al
0000000000015c44	movq	0x0006e48d(%rip),%r8
0000000000015c4b	popq	%rbp
0000000000015c4c	jmp	*%r8
-[PBXGDB_MICommand miController]:
0000000000015c4f	pushq	%rbp
0000000000015c50	movq	%rsp,%rbp
0000000000015c53	movq	0x00098eae(%rip),%rax
0000000000015c5a	movq	(%rdi,%rax),%rax
0000000000015c5e	popq	%rbp
0000000000015c5f	ret
-[PBXGDB_ThreadListSequence _loadIntrospectionSupport_didFinish:]:
0000000000015c60	pushq	%rbp
0000000000015c61	movq	%rsp,%rbp
0000000000015c64	pushq	%rbx
0000000000015c65	pushq	%rax
0000000000015c66	movq	%rdi,%rbx
0000000000015c69	movq	0x0008ee48(%rip),%rsi
0000000000015c70	call	*0x0006e462(%rip)
0000000000015c76	movq	0x00090f4b(%rip),%rsi
0000000000015c7d	movq	%rax,%rdi
0000000000015c80	movl	$0x00000001,%edx
0000000000015c85	call	*0x0006e44d(%rip)
0000000000015c8b	movq	0x00090f3e(%rip),%rsi
0000000000015c92	movq	%rbx,%rdi
0000000000015c95	movq	0x0006e43c(%rip),%rax
0000000000015c9c	addq	$0x08,%rsp
0000000000015ca0	popq	%rbx
0000000000015ca1	popq	%rbp
0000000000015ca2	jmp	*%rax
-[PBXGDB_Adaptor setIntrospectionLibraryIsLoaded:]:
0000000000015ca4	pushq	%rbp
0000000000015ca5	movq	%rsp,%rbp
0000000000015ca8	movq	0x00098a71(%rip),%rax
0000000000015caf	movb	%dl,(%rdi,%rax)
0000000000015cb2	popq	%rbp
0000000000015cb3	ret
-[PBXGDB_ThreadListSequence _getSupportsUnicharXcode_CFDataFormatters]:
0000000000015cb4	pushq	%rbp
0000000000015cb5	movq	%rsp,%rbp
0000000000015cb8	pushq	%r14
0000000000015cba	pushq	%rbx
0000000000015cbb	movq	%rdi,%r14
0000000000015cbe	movq	0x0009933b(%rip),%rax
0000000000015cc5	movb	$0x01,(%r14,%rax)
0000000000015cca	movq	0x0008edaf(%rip),%rsi
0000000000015cd1	movq	0x00092968(%rip),%rdi
0000000000015cd8	call	*0x0006e3fa(%rip)
0000000000015cde	movq	%rax,%rbx
0000000000015ce1	movq	0x0008f708(%rip),%rsi
0000000000015ce8	leaq	0x0009e309(%rip),%rdx
0000000000015cef	movq	%rbx,%rdi
0000000000015cf2	call	*0x0006e3e0(%rip)
0000000000015cf8	movq	0x0008ed89(%rip),%rsi
0000000000015cff	movq	%rbx,%rdi
0000000000015d02	movq	%r14,%rdx
0000000000015d05	call	*0x0006e3cd(%rip)
0000000000015d0b	movq	0x0008ed86(%rip),%rsi
0000000000015d12	movq	0x00090ebf(%rip),%rdx
0000000000015d19	movq	%rbx,%rdi
0000000000015d1c	call	*0x0006e3b6(%rip)
0000000000015d22	movq	0x0008ed8f(%rip),%rsi
0000000000015d29	movq	%r14,%rdi
0000000000015d2c	call	*0x0006e3a6(%rip)
0000000000015d32	movq	0x0008ed87(%rip),%rsi
0000000000015d39	movq	%rax,%rdi
0000000000015d3c	call	*0x0006e396(%rip)
0000000000015d42	movq	0x0008ed7f(%rip),%rsi
0000000000015d49	movq	%rax,%rdi
0000000000015d4c	movq	%rbx,%rdx
0000000000015d4f	movq	0x0006e382(%rip),%rax
0000000000015d56	popq	%rbx
0000000000015d57	popq	%r14
0000000000015d59	popq	%rbp
0000000000015d5a	jmp	*%rax
-[PBXGDB_MIEvaluateExpressionCommand setExpression:]:
0000000000015d5c	pushq	%rbp
0000000000015d5d	movq	%rsp,%rbp
0000000000015d60	pushq	%r14
0000000000015d62	pushq	%rbx
0000000000015d63	movq	%rdx,%rbx
0000000000015d66	movq	%rdi,%r14
0000000000015d69	movq	0x000926e0(%rip),%rdi
0000000000015d70	leaq	0x00092569(%rip),%rsi
0000000000015d77	call	*0x00092563(%rip)
0000000000015d7d	movq	0x0008ef34(%rip),%rsi
0000000000015d84	leaq	0x0009c5ed(%rip),%rdx
0000000000015d8b	leaq	0x0009c5c6(%rip),%rcx
0000000000015d92	movq	%rax,%rdi
0000000000015d95	movq	%rbx,%r8
0000000000015d98	xorb	%al,%al
0000000000015d9a	call	*0x0006e338(%rip)
0000000000015da0	leaq	0x00098d89(%rip),%rcx
0000000000015da7	movq	(%rcx),%rdx
0000000000015daa	movq	%rax,%rdi
0000000000015dad	movq	%r14,%rsi
0000000000015db0	popq	%rbx
0000000000015db1	popq	%r14
0000000000015db3	popq	%rbp
0000000000015db4	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MIEvaluateExpressionCommand needsUnwindOnSignal]:
0000000000015db9	pushq	%rbp
0000000000015dba	movq	%rsp,%rbp
0000000000015dbd	xorl	%eax,%eax
0000000000015dbf	popq	%rbp
0000000000015dc0	ret
0000000000015dc1	nop
0000000000015dc2	nop
0000000000015dc3	nop
-[PBXGDB_MIEvaluateExpressionCommand didFinishWithResultList:]:
0000000000015dc4	pushq	%rbp
0000000000015dc5	movq	%rsp,%rbp
0000000000015dc8	pushq	%r15
0000000000015dca	pushq	%r14
0000000000015dcc	pushq	%rbx
0000000000015dcd	subq	$0x18,%rsp
0000000000015dd1	movq	%rdx,%r14
0000000000015dd4	movq	%rdi,%rbx
0000000000015dd7	movq	0x0008ecfa(%rip),%rsi
0000000000015dde	leaq	0x0009a353(%rip),%rdx
0000000000015de5	movq	%r14,%rdi
0000000000015de8	call	*0x0006e2ea(%rip)
0000000000015dee	testq	%rax,%rax
0000000000015df1	je	0x00015e17
0000000000015df3	movq	0x0008ed0e(%rip),%rsi
0000000000015dfa	movq	0x0006e2d7(%rip),%r15
0000000000015e01	movq	%rax,%rdi
0000000000015e04	call	*%r15
0000000000015e07	movq	0x0008f7b2(%rip),%rsi
0000000000015e0e	movq	%rbx,%rdi
0000000000015e11	movq	%rax,%rdx
0000000000015e14	call	*%r15
0000000000015e17	movq	%rbx,0xd8(%rbp)
0000000000015e1b	movq	0x00093066(%rip),%rax
0000000000015e22	movq	%rax,0xe0(%rbp)
0000000000015e26	movq	0x000903d3(%rip),%rsi
0000000000015e2d	leaq	0xd8(%rbp),%rdi
0000000000015e31	movq	%r14,%rdx
0000000000015e34	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000015e39	addq	$0x18,%rsp
0000000000015e3d	popq	%rbx
0000000000015e3e	popq	%r14
0000000000015e40	popq	%r15
0000000000015e42	popq	%rbp
0000000000015e43	ret
0000000000015e44	nop
-[PBXGDB_MIEvaluateExpressionCommand setStringValue:]:
0000000000015e45	pushq	%rbp
0000000000015e46	movq	%rsp,%rbp
0000000000015e49	movq	%rdx,%rax
0000000000015e4c	movq	%rdi,%rcx
0000000000015e4f	movq	0x00098e6a(%rip),%rdx
0000000000015e56	cmpq	%rax,(%rcx,%rdx)
0000000000015e5a	jne	0x00015e5e
0000000000015e5c	popq	%rbp
0000000000015e5d	ret
0000000000015e5e	addq	%rcx,%rdx
0000000000015e61	subq	%rcx,%rdx
0000000000015e64	movq	%rax,%rdi
0000000000015e67	movq	%rcx,%rsi
0000000000015e6a	popq	%rbp
0000000000015e6b	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_ThreadListSequence _getSupportsUnicharXcode_CFDataFormatters_didFinish:]:
0000000000015e70	pushq	%rbp
0000000000015e71	movq	%rsp,%rbp
0000000000015e74	pushq	%r14
0000000000015e76	pushq	%rbx
0000000000015e77	movq	%rdi,%r14
0000000000015e7a	movq	0x0008ec4f(%rip),%rsi
0000000000015e81	movq	%rdx,%rdi
0000000000015e84	call	*0x0006e24e(%rip)
0000000000015e8a	movq	0x0008ec47(%rip),%rsi
0000000000015e91	leaq	0x0009a2a0(%rip),%rdx
0000000000015e98	movq	%rax,%rdi
0000000000015e9b	call	*0x0006e237(%rip)
0000000000015ea1	movq	0x0008ec60(%rip),%rsi
0000000000015ea8	movq	%rax,%rdi
0000000000015eab	call	*0x0006e227(%rip)
0000000000015eb1	movq	0x00090d28(%rip),%rsi
0000000000015eb8	movq	%rax,%rdi
0000000000015ebb	call	*0x0006e217(%rip)
0000000000015ec1	movl	%eax,%ebx
0000000000015ec3	movq	0x0008ebee(%rip),%rsi
0000000000015eca	movq	%r14,%rdi
0000000000015ecd	call	*0x0006e205(%rip)
0000000000015ed3	testl	%ebx,%ebx
0000000000015ed5	setg	%cl
0000000000015ed8	movzbl	%cl,%edx
0000000000015edb	movq	0x00090d06(%rip),%rsi
0000000000015ee2	movq	%rax,%rdi
0000000000015ee5	call	*0x0006e1ed(%rip)
0000000000015eeb	movq	0x00090cfe(%rip),%rsi
0000000000015ef2	movq	%r14,%rdi
0000000000015ef5	movq	0x0006e1dc(%rip),%rax
0000000000015efc	popq	%rbx
0000000000015efd	popq	%r14
0000000000015eff	popq	%rbp
0000000000015f00	jmp	*%rax
-[PBXGDB_MICommand parseResults]:
0000000000015f02	pushq	%rbp
0000000000015f03	movq	%rsp,%rbp
0000000000015f06	movq	0x00098c1b(%rip),%rax
0000000000015f0d	movq	(%rdi,%rax),%rax
0000000000015f11	popq	%rbp
0000000000015f12	ret
-[PBXGDB_Adaptor setSupportsUnicharXcode_CFDataFormatters:]:
0000000000015f13	pushq	%rbp
0000000000015f14	movq	%rsp,%rbp
0000000000015f17	pushq	%rbx
0000000000015f18	pushq	%rax
0000000000015f19	movq	%rdi,%rbx
0000000000015f1c	leaq	0x00099555(%rip),%rax
0000000000015f23	movq	(%rax),%rax
0000000000015f26	cmpb	%dl,(%rbx,%rax)
0000000000015f29	jne	0x00015f32
0000000000015f2b	addq	$0x08,%rsp
0000000000015f2f	popq	%rbx
0000000000015f30	popq	%rbp
0000000000015f31	ret
0000000000015f32	movb	%dl,(%rbx,%rax)
0000000000015f35	movq	0x0008ee4c(%rip),%rsi
0000000000015f3c	movq	0x00092585(%rip),%rdi
0000000000015f43	call	*0x0006e18f(%rip)
0000000000015f49	leaq	0x0009a8a8(%rip),%rdx
0000000000015f50	movq	0x0008f489(%rip),%rsi
0000000000015f57	movq	%rax,%rdi
0000000000015f5a	movq	%rbx,%rcx
0000000000015f5d	movq	0x0006e174(%rip),%rax
0000000000015f64	addq	$0x08,%rsp
0000000000015f68	popq	%rbx
0000000000015f69	popq	%rbp
0000000000015f6a	jmp	*%rax
-[PBXGDB_ThreadListSequence _getPID]:
0000000000015f6c	pushq	%rbp
0000000000015f6d	movq	%rsp,%rbp
0000000000015f70	pushq	%r15
0000000000015f72	pushq	%r14
0000000000015f74	pushq	%rbx
0000000000015f75	pushq	%rax
0000000000015f76	movq	%rdi,%rbx
0000000000015f79	movq	0x00099078(%rip),%rax
0000000000015f80	movb	$0x01,(%rbx,%rax)
0000000000015f84	movq	0x0008eb2d(%rip),%rsi
0000000000015f8b	movq	0x0006e146(%rip),%r15
0000000000015f92	call	*%r15
0000000000015f95	movq	%rax,%r14
0000000000015f98	movq	0x0008f979(%rip),%rsi
0000000000015f9f	movq	%r14,%rdi
0000000000015fa2	call	*%r15
0000000000015fa5	testl	%eax,%eax
0000000000015fa7	jne	0x0001601a
0000000000015fa9	movq	0x0008ead0(%rip),%rsi
0000000000015fb0	movq	0x00092771(%rip),%rdi
0000000000015fb7	call	*0x0006e11b(%rip)
0000000000015fbd	movq	%rax,%r15
0000000000015fc0	movq	0x0008eac1(%rip),%rsi
0000000000015fc7	movq	%r15,%rdi
0000000000015fca	movq	%rbx,%rdx
0000000000015fcd	call	*0x0006e105(%rip)
0000000000015fd3	movq	0x0008eabe(%rip),%rsi
0000000000015fda	movq	0x00090bb7(%rip),%rdx
0000000000015fe1	movq	%r15,%rdi
0000000000015fe4	call	*0x0006e0ee(%rip)
0000000000015fea	movq	0x0008eacf(%rip),%rsi
0000000000015ff1	movq	%r14,%rdi
0000000000015ff4	call	*0x0006e0de(%rip)
0000000000015ffa	movq	0x0008eac7(%rip),%rsi
0000000000016001	movq	%rax,%rdi
0000000000016004	movq	%r15,%rdx
0000000000016007	movq	0x0006e0ca(%rip),%rax
000000000001600e	addq	$0x08,%rsp
0000000000016012	popq	%rbx
0000000000016013	popq	%r14
0000000000016015	popq	%r15
0000000000016017	popq	%rbp
0000000000016018	jmp	*%rax
000000000001601a	movq	0x00090b7f(%rip),%rsi
0000000000016021	movq	%rbx,%rdi
0000000000016024	addq	$0x08,%rsp
0000000000016028	popq	%rbx
0000000000016029	popq	%r14
000000000001602b	popq	%r15
000000000001602d	popq	%rbp
000000000001602e	jmp	*0x0006e0a4(%rip)
-[PBXGDB_Adaptor inferiorPID]:
0000000000016034	pushq	%rbp
0000000000016035	movq	%rsp,%rbp
0000000000016038	movq	0x00098711(%rip),%rax
000000000001603f	movl	(%rdi,%rax),%eax
0000000000016042	popq	%rbp
0000000000016043	ret
-[PBXGDB_ThreadListSequence _getThreadList]:
0000000000016044	pushq	%rbp
0000000000016045	movq	%rsp,%rbp
0000000000016048	pushq	%r14
000000000001604a	pushq	%rbx
000000000001604b	movq	%rdi,%rbx
000000000001604e	movq	0x00098f9b(%rip),%rax
0000000000016055	movb	$0x01,(%rbx,%rax)
0000000000016059	movq	0x0008ea20(%rip),%rsi
0000000000016060	movq	0x000929a9(%rip),%rdi
0000000000016067	call	*0x0006e06b(%rip)
000000000001606d	movq	%rax,%r14
0000000000016070	movq	0x0008ea11(%rip),%rsi
0000000000016077	movq	%r14,%rdi
000000000001607a	movq	%rbx,%rdx
000000000001607d	call	*0x0006e055(%rip)
0000000000016083	movq	0x0008ea0e(%rip),%rsi
000000000001608a	movq	0x00090aff(%rip),%rdx
0000000000016091	movq	%r14,%rdi
0000000000016094	call	*0x0006e03e(%rip)
000000000001609a	movq	0x0008ea17(%rip),%rsi
00000000000160a1	movq	%rbx,%rdi
00000000000160a4	call	*0x0006e02e(%rip)
00000000000160aa	movq	0x0008ea0f(%rip),%rsi
00000000000160b1	movq	%rax,%rdi
00000000000160b4	call	*0x0006e01e(%rip)
00000000000160ba	movq	0x0008ea07(%rip),%rsi
00000000000160c1	movq	%rax,%rdi
00000000000160c4	movq	%r14,%rdx
00000000000160c7	movq	0x0006e00a(%rip),%rax
00000000000160ce	popq	%rbx
00000000000160cf	popq	%r14
00000000000160d1	popq	%rbp
00000000000160d2	jmp	*%rax
-[PBXGDB_MIThreadListCommand GDBCommandString]:
00000000000160d4	pushq	%rbp
00000000000160d5	movq	%rsp,%rbp
00000000000160d8	leaq	0x0009d1b9(%rip),%rax
00000000000160df	popq	%rbp
00000000000160e0	ret
-[PBXGDB_MIThreadListCommand didFinishWithResultList:]:
00000000000160e1	pushq	%rbp
00000000000160e2	movq	%rsp,%rbp
00000000000160e5	pushq	%r15
00000000000160e7	pushq	%r14
00000000000160e9	pushq	%r13
00000000000160eb	pushq	%r12
00000000000160ed	pushq	%rbx
00000000000160ee	subq	$0x00000118,%rsp
00000000000160f5	movq	%rdx,%rbx
00000000000160f8	movq	%rdi,%r15
00000000000160fb	movq	0x0006df9e(%rip),%rax
0000000000016102	movq	(%rax),%rax
0000000000016105	movq	%rax,0xd0(%rbp)
0000000000016109	movq	0x0008e9c8(%rip),%rsi
0000000000016110	leaq	0x0009d1a1(%rip),%rdx
0000000000016117	movq	0x0006dfba(%rip),%r14
000000000001611e	movq	%rbx,%rdi
0000000000016121	call	*%r14
0000000000016124	movq	0x0008e9b5(%rip),%rsi
000000000001612b	movq	%rax,%rdi
000000000001612e	call	*%r14
0000000000016131	movq	0x0008e9b0(%rip),%rsi
0000000000016138	movq	%rax,%rdi
000000000001613b	call	*%r14
000000000001613e	movq	%rax,%r14
0000000000016141	testq	%r14,%r14
0000000000016144	je	0x0001634e
000000000001614a	movq	%rbx,0xfffffec0(%rbp)
0000000000016151	movq	0x000903b0(%rip),%rsi
0000000000016158	movq	%r15,%rdi
000000000001615b	movq	%r15,0xfffffee8(%rbp)
0000000000016162	call	*0x0006df70(%rip)
0000000000016168	xorps	%xmm0,%xmm0
000000000001616b	movaps	%xmm0,0xc0(%rbp)
000000000001616f	movaps	%xmm0,0xb0(%rbp)
0000000000016173	movaps	%xmm0,0xa0(%rbp)
0000000000016177	movaps	%xmm0,0x90(%rbp)
000000000001617b	leaq	0x000921fe(%rip),%rsi
0000000000016182	leaq	0x90(%rbp),%rdx
0000000000016186	leaq	0xffffff10(%rbp),%rcx
000000000001618d	movq	%r14,%rdi
0000000000016190	movl	$0x00000010,%r8d
0000000000016196	call	*0x000921e4(%rip)
000000000001619c	movq	%rax,0xfffffee0(%rbp)
00000000000161a3	testq	%rax,%rax
00000000000161a6	movq	%r14,%rbx
00000000000161a9	movq	%rbx,0xfffffed8(%rbp)
00000000000161b0	je	0x000164c5
00000000000161b6	leaq	0x0009897b(%rip),%rax
00000000000161bd	movq	(%rax),%rax
00000000000161c0	movq	%rax,0xfffffed0(%rbp)
00000000000161c7	movq	0xa0(%rbp),%rax
00000000000161cb	movq	(%rax),%rax
00000000000161ce	movq	%rax,0xfffffec8(%rbp)
00000000000161d5	movq	0x0008e8fc(%rip),%r12
00000000000161dc	movq	0x0006def5(%rip),%r14
00000000000161e3	xorl	%r15d,%r15d
00000000000161e6	movq	0xa0(%rbp),%rax
00000000000161ea	movq	0xfffffec8(%rbp),%rcx
00000000000161f1	cmpq	%rcx,(%rax)
00000000000161f4	je	0x000161fe
00000000000161f6	movq	%rbx,%rdi
00000000000161f9	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
00000000000161fe	movq	0x98(%rbp),%rax
0000000000016202	movq	(%rax,%r15,8),%rdi
0000000000016206	movq	0x0008e8d3(%rip),%rsi
000000000001620d	call	*%r14
0000000000016210	movq	%rax,%r13
0000000000016213	movq	%r13,%rdi
0000000000016216	movq	%r12,%rsi
0000000000016219	leaq	0x0009a0f8(%rip),%rdx
0000000000016220	call	*%r14
0000000000016223	movq	%rax,%rdi
0000000000016226	movq	0x0008e8db(%rip),%rbx
000000000001622d	movq	%rbx,%rsi
0000000000016230	call	*%r14
0000000000016233	movq	%rax,%rdi
0000000000016236	movq	0x0008f0a3(%rip),%rsi
000000000001623d	call	*%r14
0000000000016240	movq	%rax,0xfffffef8(%rbp)
0000000000016247	movq	%r13,%rdi
000000000001624a	movq	%r12,%rsi
000000000001624d	leaq	0x00099ea4(%rip),%rdx
0000000000016254	call	*%r14
0000000000016257	movq	%rax,%rdi
000000000001625a	movq	%rbx,%rsi
000000000001625d	call	*%r14
0000000000016260	movq	%rax,0xfffffef0(%rbp)
0000000000016267	movq	%r13,%rdi
000000000001626a	movq	%r12,%rsi
000000000001626d	leaq	0x0009d064(%rip),%rdx
0000000000016274	call	*%r14
0000000000016277	movq	%rax,%rdi
000000000001627a	movq	%rbx,%rsi
000000000001627d	call	*%r14
0000000000016280	movq	%rax,%r13
0000000000016283	movq	0x000926ee(%rip),%rdi
000000000001628a	leaq	0x0009204f(%rip),%rsi
0000000000016291	call	*0x00092049(%rip)
0000000000016297	movq	%rax,%rdi
000000000001629a	movq	0x0008e7cf(%rip),%rsi
00000000000162a1	call	*%r14
00000000000162a4	movq	%rax,%rbx
00000000000162a7	movq	%rbx,%rdi
00000000000162aa	movq	0x0008eba7(%rip),%rsi
00000000000162b1	movq	0xfffffef0(%rbp),%rdx
00000000000162b8	call	*%r14
00000000000162bb	movq	%rbx,%rdi
00000000000162be	movq	0x000904b3(%rip),%rsi
00000000000162c5	movq	%r13,%rdx
00000000000162c8	call	*%r14
00000000000162cb	movq	%rbx,%rdi
00000000000162ce	movq	0x0009023b(%rip),%rsi
00000000000162d5	movq	0xfffffef8(%rbp),%rdx
00000000000162dc	call	*%r14
00000000000162df	movq	0xfffffee8(%rbp),%rax
00000000000162e6	movq	0xfffffed0(%rbp),%rcx
00000000000162ed	movq	(%rax,%rcx),%rdi
00000000000162f1	leaq	0x00092008(%rip),%rsi
00000000000162f8	movq	%rbx,%rdx
00000000000162fb	movq	0xfffffed8(%rbp),%rbx
0000000000016302	call	*0x00091ff8(%rip)
0000000000016308	incq	%r15
000000000001630b	cmpq	0xfffffee0(%rbp),%r15
0000000000016312	jb	0x000161e6
0000000000016318	movq	%rbx,%rdi
000000000001631b	leaq	0x0009205e(%rip),%rsi
0000000000016322	leaq	0x90(%rbp),%rdx
0000000000016326	leaq	0xffffff10(%rbp),%rcx
000000000001632d	movl	$0x00000010,%r8d
0000000000016333	call	*0x00092047(%rip)
0000000000016339	movq	%rax,0xfffffee0(%rbp)
0000000000016340	testq	%rax,%rax
0000000000016343	jne	0x000161e3
0000000000016349	jmp	0x000164c5
000000000001634e	movq	0x0008e783(%rip),%rsi
0000000000016355	leaq	0x00099edc(%rip),%rdx
000000000001635c	movq	%rbx,%rdi
000000000001635f	call	*0x0006dd73(%rip)
0000000000016365	testq	%rax,%rax
0000000000016368	jne	0x0001637d
000000000001636a	movq	%r15,0xfffffee8(%rbp)
0000000000016371	movq	%rbx,0xfffffec0(%rbp)
0000000000016378	jmp	0x000164c5
000000000001637d	movq	%rbx,0xfffffec0(%rbp)
0000000000016384	movq	0x0008e755(%rip),%rsi
000000000001638b	movq	0x0006dd46(%rip),%r14
0000000000016392	movq	%rax,%rdi
0000000000016395	call	*%r14
0000000000016398	movq	0x0008e749(%rip),%rsi
000000000001639f	movq	%rax,%rdi
00000000000163a2	call	*%r14
00000000000163a5	movq	%rax,%r12
00000000000163a8	leaq	0x00091f61(%rip),%rsi
00000000000163af	movq	%r12,%rdi
00000000000163b2	call	*0x00091f58(%rip)
00000000000163b8	movq	%rax,%rbx
00000000000163bb	movq	%rbx,0xfffffef0(%rbp)
00000000000163c2	movq	0x0009013f(%rip),%rsi
00000000000163c9	movq	%r15,%rdi
00000000000163cc	movq	%r15,0xfffffee8(%rbp)
00000000000163d3	call	*%r14
00000000000163d6	testq	%rbx,%rbx
00000000000163d9	je	0x000164c5
00000000000163df	xorl	%ebx,%ebx
00000000000163e1	leaq	0x00098750(%rip),%rax
00000000000163e8	movq	(%rax),%rax
00000000000163eb	movq	%rax,0xfffffef8(%rbp)
00000000000163f2	movq	0x0006dcdf(%rip),%r15
00000000000163f9	movq	%r12,%rdi
00000000000163fc	leaq	0x00091f1d(%rip),%rsi
0000000000016403	movq	%rbx,%rdx
0000000000016406	call	*0x00091f14(%rip)
000000000001640c	movq	%rax,%rdi
000000000001640f	movq	0x0008e6f2(%rip),%rsi
0000000000016416	call	*%r15
0000000000016419	movq	%rax,%rdi
000000000001641c	movq	0x0008eebd(%rip),%rsi
0000000000016423	call	*%r15
0000000000016426	movq	%r12,%r14
0000000000016429	movq	%rax,%r12
000000000001642c	movq	0x00092545(%rip),%rdi
0000000000016433	leaq	0x00091ea6(%rip),%rsi
000000000001643a	call	*0x00091ea0(%rip)
0000000000016440	movq	%rax,%rdi
0000000000016443	movq	0x0008e626(%rip),%rsi
000000000001644a	call	*%r15
000000000001644d	movq	%rax,%r13
0000000000016450	movq	0x00091ff9(%rip),%rdi
0000000000016457	movq	0x0008e71a(%rip),%rsi
000000000001645e	leaq	0x0009ce93(%rip),%rdx
0000000000016465	movq	%r12,%rcx
0000000000016468	xorb	%al,%al
000000000001646a	call	*%r15
000000000001646d	movq	%r13,%rdi
0000000000016470	movq	0x0008e9e1(%rip),%rsi
0000000000016477	movq	%rax,%rdx
000000000001647a	call	*%r15
000000000001647d	movq	%r13,%rdi
0000000000016480	movq	0x00090089(%rip),%rsi
0000000000016487	movq	%r12,%rdx
000000000001648a	movq	%r14,%r12
000000000001648d	movq	0xfffffef0(%rbp),%r14
0000000000016494	call	*%r15
0000000000016497	movq	0xfffffee8(%rbp),%rax
000000000001649e	movq	0xfffffef8(%rbp),%rcx
00000000000164a5	movq	(%rax,%rcx),%rdi
00000000000164a9	leaq	0x00091e50(%rip),%rsi
00000000000164b0	movq	%r13,%rdx
00000000000164b3	call	*0x00091e47(%rip)
00000000000164b9	incq	%rbx
00000000000164bc	cmpq	%rbx,%r14
00000000000164bf	jne	0x000163f9
00000000000164c5	movq	0xfffffee8(%rbp),%rax
00000000000164cc	movq	%rax,0xffffff00(%rbp)
00000000000164d3	movq	0x00092a26(%rip),%rax
00000000000164da	movq	%rax,0xffffff08(%rbp)
00000000000164e1	movq	0x0008fd18(%rip),%rsi
00000000000164e8	leaq	0xffffff00(%rbp),%rdi
00000000000164ef	movq	0xfffffec0(%rbp),%rdx
00000000000164f6	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000164fb	movq	0x0006db9e(%rip),%rax
0000000000016502	movq	(%rax),%rax
0000000000016505	cmpq	0xd0(%rbp),%rax
0000000000016509	jne	0x0001651d
000000000001650b	addq	$0x00000118,%rsp
0000000000016512	popq	%rbx
0000000000016513	popq	%r12
0000000000016515	popq	%r13
0000000000016517	popq	%r14
0000000000016519	popq	%r15
000000000001651b	popq	%rbp
000000000001651c	ret
000000000001651d	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
-[PBXGDB_MICommand allocateResultDescription]:
0000000000016522	pushq	%rbp
0000000000016523	movq	%rsp,%rbp
0000000000016526	pushq	%rbx
0000000000016527	pushq	%rax
0000000000016528	movq	%rdi,%rbx
000000000001652b	movq	0x00098606(%rip),%rax
0000000000016532	cmpq	$0x00,(%rbx,%rax)
0000000000016537	je	0x00016540
0000000000016539	addq	$0x08,%rsp
000000000001653d	popq	%rbx
000000000001653e	popq	%rbp
000000000001653f	ret
0000000000016540	movq	0x00091f19(%rip),%rdi
0000000000016547	leaq	0x00091d92(%rip),%rsi
000000000001654e	call	*0x00091d8c(%rip)
0000000000016554	movq	0x0008e515(%rip),%rsi
000000000001655b	movq	%rax,%rdi
000000000001655e	call	*0x0006db74(%rip)
0000000000016564	movq	0x000985cd(%rip),%rdx
000000000001656b	movq	%rax,%rdi
000000000001656e	movq	%rbx,%rsi
0000000000016571	addq	$0x08,%rsp
0000000000016575	popq	%rbx
0000000000016576	popq	%rbp
0000000000016577	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_BaseDescription setName:]:
000000000001657c	pushq	%rbp
000000000001657d	movq	%rsp,%rbp
0000000000016580	movq	%rdx,%rax
0000000000016583	movq	%rdi,%rcx
0000000000016586	movq	0x0009826b(%rip),%rdx
000000000001658d	movq	%rax,%rdi
0000000000016590	movq	%rcx,%rsi
0000000000016593	popq	%rbp
0000000000016594	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_ThreadDescription setQueueName:]:
0000000000016599	pushq	%rbp
000000000001659a	movq	%rsp,%rbp
000000000001659d	movq	%rdx,%rax
00000000000165a0	movq	0x00098b41(%rip),%rdx
00000000000165a7	movq	%rax,%rcx
00000000000165aa	movl	$0x00000001,%r8d
00000000000165b0	movl	$0x00000001,%r9d
00000000000165b6	popq	%rbp
00000000000165b7	jmp	0x0004e644	; symbol stub for: _objc_setProperty
-[PBXGDB_BaseDescription setIndex:]:
00000000000165bc	pushq	%rbp
00000000000165bd	movq	%rsp,%rbp
00000000000165c0	movq	0x00098239(%rip),%rax
00000000000165c7	movq	%rdx,(%rdi,%rax)
00000000000165cb	popq	%rbp
00000000000165cc	ret
-[PBXGDB_ThreadListSequence _gotResultThreadList:]:
00000000000165cd	pushq	%rbp
00000000000165ce	movq	%rsp,%rbp
00000000000165d1	pushq	%r15
00000000000165d3	pushq	%r14
00000000000165d5	pushq	%r13
00000000000165d7	pushq	%r12
00000000000165d9	pushq	%rbx
00000000000165da	subq	$0x48,%rsp
00000000000165de	movq	%rdx,%r14
00000000000165e1	movq	%rdi,0xd0(%rbp)
00000000000165e5	movq	%rsi,0xc8(%rbp)
00000000000165e9	testq	%r14,%r14
00000000000165ec	jne	0x00016654
00000000000165ee	movq	0x0009241b(%rip),%rdi
00000000000165f5	leaq	0x00091d34(%rip),%rsi
00000000000165fc	call	*0x00091d2e(%rip)
0000000000016602	movq	%rax,%rdi
0000000000016605	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000001660a	leaq	0xd0(%rbp),%rdi
000000000001660e	leaq	0xc8(%rbp),%rsi
0000000000016612	leaq	0x0004aca2(%rip),%rdx
0000000000016619	leaq	0x0004acce(%rip),%rcx
0000000000016620	leaq	0x00099391(%rip),%r9
0000000000016627	leaq	0x000474d2(%rip),%r8
000000000001662e	leaq	0x000474cf(%rip),%rbx
0000000000016635	movq	%rbx,0x18(%rsp)
000000000001663a	leaq	0x000991f7(%rip),%rbx
0000000000016641	movq	%rbx,0x10(%rsp)
0000000000016646	movq	%rax,0x08(%rsp)
000000000001664b	movq	%r8,(%rsp)
000000000001664f	jmp	0x000166fc
0000000000016654	movq	0x000923b5(%rip),%rdi
000000000001665b	leaq	0x00091cce(%rip),%rsi
0000000000016662	call	*0x00091cc8(%rip)
0000000000016668	leaq	0x00091cd1(%rip),%rsi
000000000001666f	movq	%r14,%rdi
0000000000016672	movq	%rax,%rdx
0000000000016675	call	*0x00091cc5(%rip)
000000000001667b	testb	%al,%al
000000000001667d	jne	0x00016709
0000000000016683	movq	0x00092386(%rip),%rdi
000000000001668a	leaq	0x00091c9f(%rip),%rsi
0000000000016691	call	*0x00091c99(%rip)
0000000000016697	movq	%rax,%rdi
000000000001669a	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000001669f	movq	%rax,%rbx
00000000000166a2	movq	0x0008e5b7(%rip),%rsi
00000000000166a9	movq	%r14,%rdi
00000000000166ac	call	*0x0006da26(%rip)
00000000000166b2	leaq	0x0009917f(%rip),%r8
00000000000166b9	leaq	0x0004acb3(%rip),%r9
00000000000166c0	leaq	0xd0(%rbp),%rdi
00000000000166c4	leaq	0xc8(%rbp),%rsi
00000000000166c8	leaq	0x0004abec(%rip),%rdx
00000000000166cf	leaq	0x0004ac18(%rip),%rcx
00000000000166d6	movq	%r9,0x20(%rsp)
00000000000166db	leaq	0x000992f6(%rip),%r9
00000000000166e2	movq	%r8,0x18(%rsp)
00000000000166e7	movq	%rax,0x10(%rsp)
00000000000166ec	leaq	0x0004740d(%rip),%rax
00000000000166f3	movq	%rbx,0x08(%rsp)
00000000000166f8	movq	%rax,(%rsp)
00000000000166fc	movl	$0x00000068,%r8d
0000000000016702	xorb	%al,%al
0000000000016704	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000016709	movq	0x0008eaa8(%rip),%rsi
0000000000016710	movq	0xd0(%rbp),%rdi
0000000000016714	movq	%r14,%r15
0000000000016717	movq	0x0006d9ba(%rip),%r14
000000000001671e	call	*%r14
0000000000016721	movq	%rax,0xc0(%rbp)
0000000000016725	movq	0x0008f84c(%rip),%rsi
000000000001672c	movq	0xd0(%rbp),%rdi
0000000000016730	call	*%r14
0000000000016733	movl	%eax,%r12d
0000000000016736	movq	0x00090433(%rip),%rsi
000000000001673d	movq	0xd0(%rbp),%rdi
0000000000016741	call	*%r14
0000000000016744	movq	%rax,%r13
0000000000016747	movq	0x0009042a(%rip),%rsi
000000000001674e	movq	0xd0(%rbp),%rdi
0000000000016752	call	*%r14
0000000000016755	movl	%eax,%ebx
0000000000016757	movq	0x00090422(%rip),%rsi
000000000001675e	movq	%r15,%rdi
0000000000016761	call	*%r14
0000000000016764	movq	0x0009041d(%rip),%rsi
000000000001676b	movq	%rax,(%rsp)
000000000001676f	movl	%ebx,%r9d
0000000000016772	movq	0xc0(%rbp),%rdi
0000000000016776	movl	%r12d,%edx
0000000000016779	movl	$0x00000001,%ecx
000000000001677e	movq	%r13,%r8
0000000000016781	call	*%r14
0000000000016784	movq	0x0008e3ad(%rip),%rsi
000000000001678b	movq	0xd0(%rbp),%rdi
000000000001678f	call	*%r14
0000000000016792	addq	$0x48,%rsp
0000000000016796	popq	%rbx
0000000000016797	popq	%r12
0000000000016799	popq	%r13
000000000001679b	popq	%r14
000000000001679d	popq	%r15
000000000001679f	popq	%rbp
00000000000167a0	ret
-[PBXGDB_ThreadListSequence threadState]:
00000000000167a1	pushq	%rbp
00000000000167a2	movq	%rsp,%rbp
00000000000167a5	movq	0x0009882c(%rip),%rax
00000000000167ac	movl	(%rdi,%rax),%eax
00000000000167af	popq	%rbp
00000000000167b0	ret
-[PBXGDB_ThreadListSequence suspendedStatus]:
00000000000167b1	pushq	%rbp
00000000000167b2	movq	%rsp,%rbp
00000000000167b5	movq	0x0009882c(%rip),%rax
00000000000167bc	movl	(%rdi,%rax),%eax
00000000000167bf	popq	%rbp
00000000000167c0	ret
-[PBXGDB_ThreadListSequence currentThreadID]:
00000000000167c1	pushq	%rbp
00000000000167c2	movq	%rsp,%rbp
00000000000167c5	movq	0x00098814(%rip),%rax
00000000000167cc	movq	(%rdi,%rax),%rax
00000000000167d0	popq	%rbp
00000000000167d1	ret
-[PBXGDB_MIThreadListCommand threadDescriptions]:
00000000000167d2	pushq	%rbp
00000000000167d3	movq	%rsp,%rbp
00000000000167d6	leaq	0x0009835b(%rip),%rax
00000000000167dd	movq	(%rax),%rax
00000000000167e0	movq	(%rdi,%rax),%rax
00000000000167e4	popq	%rbp
00000000000167e5	ret
-[PBXGDB_BaseDescription index]:
00000000000167e6	pushq	%rbp
00000000000167e7	movq	%rsp,%rbp
00000000000167ea	movq	0x0009800f(%rip),%rax
00000000000167f1	movq	(%rdi,%rax),%rax
00000000000167f5	popq	%rbp
00000000000167f6	ret
-[PBXGDB_BaseDescription name]:
00000000000167f7	pushq	%rbp
00000000000167f8	movq	%rsp,%rbp
00000000000167fb	movq	0x00097ff6(%rip),%rax
0000000000016802	movq	(%rdi,%rax),%rax
0000000000016806	popq	%rbp
0000000000016807	ret
-[PBXGDB_ThreadDescription queueName]:
0000000000016808	pushq	%rbp
0000000000016809	movq	%rsp,%rbp
000000000001680c	movq	0x000988d5(%rip),%rdx
0000000000016813	movl	$0x00000001,%ecx
0000000000016818	popq	%rbp
0000000000016819	jmp	0x0004e632	; symbol stub for: _objc_getProperty
-[PBXLSDebuggerAdaptor createThreadWithThreadHandle:name:queueName:inThreadGroupNamed:]:
000000000001681e	pushq	%rbp
000000000001681f	movq	%rsp,%rbp
0000000000016822	pushq	%r15
0000000000016824	pushq	%r14
0000000000016826	pushq	%r13
0000000000016828	pushq	%r12
000000000001682a	pushq	%rbx
000000000001682b	pushq	%rax
000000000001682c	movq	%r8,%r15
000000000001682f	movq	%rcx,%r13
0000000000016832	movq	%rdx,0xd0(%rbp)
0000000000016836	movq	%rdi,%rbx
0000000000016839	movq	0x00090f00(%rip),%rsi
0000000000016840	movq	%r9,%rdx
0000000000016843	movl	$0x00000001,%ecx
0000000000016848	call	*0x0006d88a(%rip)
000000000001684e	movq	%rax,%r12
0000000000016851	movq	0x00092310(%rip),%rdi
0000000000016858	leaq	0x00091a81(%rip),%rsi
000000000001685f	call	*0x00091a7b(%rip)
0000000000016865	movq	0x0008e4e4(%rip),%rsi
000000000001686c	movq	%rax,%rdi
000000000001686f	movq	%rbx,%rdx
0000000000016872	call	*0x0006d860(%rip)
0000000000016878	movq	%rax,%r14
000000000001687b	movq	0x0008e5d6(%rip),%rsi
0000000000016882	movq	%r14,%rdi
0000000000016885	movq	%r13,%rdx
0000000000016888	call	*0x0006d84a(%rip)
000000000001688e	movq	0x0008fee3(%rip),%rsi
0000000000016895	movq	%r14,%rdi
0000000000016898	movq	%r15,%rdx
000000000001689b	call	*0x0006d837(%rip)
00000000000168a1	movq	0x00090ea0(%rip),%rsi
00000000000168a8	movq	%r14,%rdi
00000000000168ab	movq	0xd0(%rbp),%rdx
00000000000168af	call	*0x0006d823(%rip)
00000000000168b5	movq	0x00090e94(%rip),%rsi
00000000000168bc	movq	%r12,%rdi
00000000000168bf	movq	%rbx,%rdx
00000000000168c2	movq	%r14,%rcx
00000000000168c5	movq	0x0006d80c(%rip),%rax
00000000000168cc	addq	$0x08,%rsp
00000000000168d0	popq	%rbx
00000000000168d1	popq	%r12
00000000000168d3	popq	%r13
00000000000168d5	popq	%r14
00000000000168d7	popq	%r15
00000000000168d9	popq	%rbp
00000000000168da	jmp	*%rax
-[PBXLSDebuggerAdaptor threadGroupWithName:create:]:
00000000000168dc	pushq	%rbp
00000000000168dd	movq	%rsp,%rbp
00000000000168e0	pushq	%r15
00000000000168e2	pushq	%r14
00000000000168e4	pushq	%r13
00000000000168e6	pushq	%r12
00000000000168e8	pushq	%rbx
00000000000168e9	pushq	%rax
00000000000168ea	movl	%ecx,%r13d
00000000000168ed	movq	%rdx,%r14
00000000000168f0	movq	%rdi,%r12
00000000000168f3	movq	0x0008e4f6(%rip),%rsi
00000000000168fa	movq	0x0006d7d7(%rip),%rbx
0000000000016901	call	*%rbx
0000000000016903	movq	%rax,%r15
0000000000016906	movq	0x00090e63(%rip),%rsi
000000000001690d	movq	%r15,%rdi
0000000000016910	movq	%r14,%rdx
0000000000016913	call	*%rbx
0000000000016915	movq	%rax,%rbx
0000000000016918	testq	%rbx,%rbx
000000000001691b	jne	0x00016976
000000000001691d	testb	%r13b,%r13b
0000000000016920	je	0x00016976
0000000000016922	movq	0x00092247(%rip),%rdi
0000000000016929	leaq	0x000919b0(%rip),%rsi
0000000000016930	call	*0x000919aa(%rip)
0000000000016936	movq	0x0008e413(%rip),%rsi
000000000001693d	movq	0x0006d794(%rip),%r13
0000000000016944	movq	%rax,%rdi
0000000000016947	movq	%r12,%rdx
000000000001694a	call	*%r13
000000000001694d	movq	%rax,%rbx
0000000000016950	movq	0x00090e21(%rip),%rsi
0000000000016957	movq	%rbx,%rdi
000000000001695a	movq	%r12,%rdx
000000000001695d	movq	%r14,%rcx
0000000000016960	call	*%r13
0000000000016963	movq	0x00090e16(%rip),%rsi
000000000001696a	movq	%r15,%rdi
000000000001696d	movq	%r12,%rdx
0000000000016970	movq	%rbx,%rcx
0000000000016973	call	*%r13
0000000000016976	movq	%rbx,%rax
0000000000016979	addq	$0x08,%rsp
000000000001697d	popq	%rbx
000000000001697e	popq	%r12
0000000000016980	popq	%r13
0000000000016982	popq	%r14
0000000000016984	popq	%r15
0000000000016986	popq	%rbp
0000000000016987	ret
-[PBXLSProcess threadGroupWithName:]:
0000000000016988	pushq	%rbp
0000000000016989	movq	%rsp,%rbp
000000000001698c	pushq	%r15
000000000001698e	pushq	%r14
0000000000016990	pushq	%r13
0000000000016992	pushq	%r12
0000000000016994	pushq	%rbx
0000000000016995	pushq	%rax
0000000000016996	movq	%rdx,%r14
0000000000016999	movq	0x00090c08(%rip),%rsi
00000000000169a0	call	*0x0006d732(%rip)
00000000000169a6	movq	%rax,%r15
00000000000169a9	leaq	0x00091960(%rip),%rsi
00000000000169b0	movq	%r15,%rdi
00000000000169b3	call	*0x00091957(%rip)
00000000000169b9	movq	%rax,%r12
00000000000169bc	xorl	%ebx,%ebx
00000000000169be	jmp	0x00016a00
00000000000169c0	movq	%r15,%rdi
00000000000169c3	leaq	0x00091956(%rip),%rsi
00000000000169ca	movq	%rbx,%rdx
00000000000169cd	call	*0x0009194d(%rip)
00000000000169d3	movq	%rax,%r13
00000000000169d6	movq	%r13,%rdi
00000000000169d9	movq	0x0008e2c0(%rip),%rsi
00000000000169e0	call	*0x0006d6f2(%rip)
00000000000169e6	movq	%r14,%rdi
00000000000169e9	leaq	0x000919a0(%rip),%rsi
00000000000169f0	movq	%rax,%rdx
00000000000169f3	call	*0x00091997(%rip)
00000000000169f9	testb	%al,%al
00000000000169fb	jne	0x00016a08
00000000000169fd	incq	%rbx
0000000000016a00	cmpq	%r12,%rbx
0000000000016a03	jb	0x000169c0
0000000000016a05	xorl	%r13d,%r13d
0000000000016a08	movq	%r13,%rax
0000000000016a0b	addq	$0x08,%rsp
0000000000016a0f	popq	%rbx
0000000000016a10	popq	%r12
0000000000016a12	popq	%r13
0000000000016a14	popq	%r14
0000000000016a16	popq	%r15
0000000000016a18	popq	%rbp
0000000000016a19	ret
-[PBXLSThreadGroup initWithDebugger:]:
0000000000016a1a	pushq	%rbp
0000000000016a1b	movq	%rsp,%rbp
0000000000016a1e	pushq	%rbx
0000000000016a1f	subq	$0x18,%rsp
0000000000016a23	movq	%rdi,0xe8(%rbp)
0000000000016a27	movq	0x000925fa(%rip),%rax
0000000000016a2e	movq	%rax,0xf0(%rbp)
0000000000016a32	movq	0x0008e317(%rip),%rsi
0000000000016a39	leaq	0xe8(%rbp),%rdi
0000000000016a3d	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000016a42	movq	%rax,%rbx
0000000000016a45	movq	0x000989d4(%rip),%rdx
0000000000016a4c	xorl	%edi,%edi
0000000000016a4e	movq	%rbx,%rsi
0000000000016a51	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000016a56	movq	%rbx,%rax
0000000000016a59	addq	$0x18,%rsp
0000000000016a5d	popq	%rbx
0000000000016a5e	popq	%rbp
0000000000016a5f	ret
-[PBXLSThreadGroup debugger:setName:]:
0000000000016a60	pushq	%rbp
0000000000016a61	movq	%rsp,%rbp
0000000000016a64	movq	%rdi,%rax
0000000000016a67	movq	0x000989b2(%rip),%rdx
0000000000016a6e	movq	%rcx,%rdi
0000000000016a71	movq	%rax,%rsi
0000000000016a74	popq	%rbp
0000000000016a75	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000016a7a	nop
0000000000016a7b	nop
0000000000016a7c	nop
0000000000016a7d	nop
0000000000016a7e	nop
0000000000016a7f	nop
0000000000016a80	nop
0000000000016a81	nop
0000000000016a82	nop
0000000000016a83	nop
-[PBXLSProcess debugger:addThreadGroup:]:
0000000000016a84	pushq	%rbp
0000000000016a85	movq	%rsp,%rbp
0000000000016a88	movq	0x0008fee9(%rip),%rsi
0000000000016a8f	movq	%rcx,%rdx
0000000000016a92	popq	%rbp
0000000000016a93	jmp	*0x0006d63f(%rip)
0000000000016a99	nop
-[PBXLSModel addChild:]:
0000000000016a9a	pushq	%rbp
0000000000016a9b	movq	%rsp,%rbp
0000000000016a9e	pushq	%r15
0000000000016aa0	pushq	%r14
0000000000016aa2	pushq	%rbx
0000000000016aa3	pushq	%rax
0000000000016aa4	movq	%rdx,%rbx
0000000000016aa7	movq	%rdi,%r14
0000000000016aaa	testq	%rbx,%rbx
0000000000016aad	jne	0x00016aba
0000000000016aaf	addq	$0x08,%rsp
0000000000016ab3	popq	%rbx
0000000000016ab4	popq	%r14
0000000000016ab6	popq	%r15
0000000000016ab8	popq	%rbp
0000000000016ab9	ret
0000000000016aba	movq	0x000908bf(%rip),%rsi
0000000000016ac1	movq	0x0006d610(%rip),%r15
0000000000016ac8	movq	%rbx,%rdi
0000000000016acb	movq	%r14,%rdx
0000000000016ace	call	*%r15
0000000000016ad1	movq	0x00090a30(%rip),%rsi
0000000000016ad8	movq	%r14,%rdi
0000000000016adb	call	*%r15
0000000000016ade	leaq	0x0009181b(%rip),%rsi
0000000000016ae5	movq	0x00091814(%rip),%rcx
0000000000016aec	movq	%rax,%rdi
0000000000016aef	movq	%rbx,%rdx
0000000000016af2	addq	$0x08,%rsp
0000000000016af6	popq	%rbx
0000000000016af7	popq	%r14
0000000000016af9	popq	%r15
0000000000016afb	popq	%rbp
0000000000016afc	jmp	*%rcx
0000000000016afe	nop
0000000000016aff	nop
-[PBXLSModel setParentModel:]:
0000000000016b00	pushq	%rbp
0000000000016b01	movq	%rsp,%rbp
0000000000016b04	movq	%rdx,%rax
0000000000016b07	movq	%rdi,%rcx
0000000000016b0a	movq	0x000987ff(%rip),%rdx
0000000000016b11	movq	%rax,%rdi
0000000000016b14	movq	%rcx,%rsi
0000000000016b17	popq	%rbp
0000000000016b18	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000016b1d	nop
0000000000016b1e	nop
0000000000016b1f	nop
-[PBXLSThread initWithDebugger:]:
0000000000016b20	pushq	%rbp
0000000000016b21	movq	%rsp,%rbp
0000000000016b24	pushq	%rbx
0000000000016b25	subq	$0x18,%rsp
0000000000016b29	movq	%rdi,0xe8(%rbp)
0000000000016b2d	movq	0x000924ec(%rip),%rax
0000000000016b34	movq	%rax,0xf0(%rbp)
0000000000016b38	movq	0x0008e211(%rip),%rsi
0000000000016b3f	leaq	0xe8(%rbp),%rdi
0000000000016b43	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000016b48	movq	%rax,%rbx
0000000000016b4b	testq	%rbx,%rbx
0000000000016b4e	je	0x00016b7e
0000000000016b50	movq	0x00098881(%rip),%rax
0000000000016b57	movl	$0x00000000,(%rbx,%rax)
0000000000016b5e	movq	0x0009887b(%rip),%rax
0000000000016b65	movq	$0x00000000,(%rbx,%rax)
0000000000016b6d	movq	0x00098874(%rip),%rdx
0000000000016b74	xorl	%edi,%edi
0000000000016b76	movq	%rbx,%rsi
0000000000016b79	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000016b7e	movq	%rbx,%rax
0000000000016b81	addq	$0x18,%rsp
0000000000016b85	popq	%rbx
0000000000016b86	popq	%rbp
0000000000016b87	ret
0000000000016b88	nop
-[PBXLSThread setName:]:
0000000000016b89	pushq	%rbp
0000000000016b8a	movq	%rsp,%rbp
0000000000016b8d	movq	%rdx,%rax
0000000000016b90	movq	0x00098851(%rip),%rdx
0000000000016b97	movq	%rax,%rcx
0000000000016b9a	movl	$0x00000001,%r8d
0000000000016ba0	movl	$0x00000001,%r9d
0000000000016ba6	popq	%rbp
0000000000016ba7	jmp	0x0004e644	; symbol stub for: _objc_setProperty
0000000000016bac	nop
0000000000016bad	nop
-[PBXLSThread setQueueName:]:
0000000000016bae	pushq	%rbp
0000000000016baf	movq	%rsp,%rbp
0000000000016bb2	movq	%rdx,%rax
0000000000016bb5	movq	0x0009884c(%rip),%rdx
0000000000016bbc	movq	%rax,%rcx
0000000000016bbf	movl	$0x00000001,%r8d
0000000000016bc5	movl	$0x00000001,%r9d
0000000000016bcb	popq	%rbp
0000000000016bcc	jmp	0x0004e644	; symbol stub for: _objc_setProperty
0000000000016bd1	nop
0000000000016bd2	nop
0000000000016bd3	nop
-[PBXLSThread setHandle:]:
0000000000016bd4	pushq	%rbp
0000000000016bd5	movq	%rsp,%rbp
0000000000016bd8	movq	0x00098811(%rip),%rax
0000000000016bdf	movq	%rdx,(%rdi,%rax)
0000000000016be3	popq	%rbp
0000000000016be4	ret
-[PBXLSThreadGroup debugger:addThread:]:
0000000000016be5	pushq	%rbp
0000000000016be6	movq	%rsp,%rbp
0000000000016be9	movq	0x0008fd88(%rip),%rsi
0000000000016bf0	movq	%rcx,%rdx
0000000000016bf3	popq	%rbp
0000000000016bf4	jmp	*0x0006d4de(%rip)
-[PBXLSThreadGroup threads]:
0000000000016bfa	pushq	%rbp
0000000000016bfb	movq	%rsp,%rbp
0000000000016bfe	movq	0x0008ea83(%rip),%rsi
0000000000016c05	popq	%rbp
0000000000016c06	jmp	*0x0006d4cc(%rip)
0000000000016c0c	nop
-[PBXLSThread handle]:
0000000000016c0d	pushq	%rbp
0000000000016c0e	movq	%rsp,%rbp
0000000000016c11	movq	0x000987d8(%rip),%rax
0000000000016c18	movq	(%rdi,%rax),%rax
0000000000016c1c	popq	%rbp
0000000000016c1d	ret
-[PBXLSThreadGroup name]:
0000000000016c1e	pushq	%rbp
0000000000016c1f	movq	%rsp,%rbp
0000000000016c22	movq	0x000987f7(%rip),%rax
0000000000016c29	movq	(%rdi,%rax),%rax
0000000000016c2d	popq	%rbp
0000000000016c2e	ret
-[PBXGDB_ThreadController _updateReasonStoppedMessageForLastStoppedThread]:
0000000000016c2f	pushq	%rbp
0000000000016c30	movq	%rsp,%rbp
0000000000016c33	pushq	%r14
0000000000016c35	pushq	%rbx
0000000000016c36	movq	%rdi,%r14
0000000000016c39	movq	0x0008de78(%rip),%rsi
0000000000016c40	movq	0x0006d491(%rip),%rbx
0000000000016c47	call	*%rbx
0000000000016c49	movq	0x0008e1a0(%rip),%rsi
0000000000016c50	movq	%rax,%rdi
0000000000016c53	call	*%rbx
0000000000016c55	leaq	0x00097f6c(%rip),%rcx
0000000000016c5c	movq	0x0009846d(%rip),%rdx
0000000000016c63	movq	(%r14,%rdx),%rdx
0000000000016c67	movq	(%rcx),%rcx
0000000000016c6a	movq	(%rdx,%rcx),%rdx
0000000000016c6e	movq	0x0008efcb(%rip),%rsi
0000000000016c75	movq	%rax,%rdi
0000000000016c78	call	*%rbx
0000000000016c7a	movq	%rax,%rbx
0000000000016c7d	testq	%rbx,%rbx
0000000000016c80	jne	0x00016c87
0000000000016c82	popq	%rbx
0000000000016c83	popq	%r14
0000000000016c85	popq	%rbp
0000000000016c86	ret
0000000000016c87	movq	0x00098442(%rip),%rax
0000000000016c8e	movq	(%r14,%rax),%rdx
0000000000016c92	movq	0x00090537(%rip),%rsi
0000000000016c99	movq	0x00091a38(%rip),%rdi
0000000000016ca0	call	*0x0006d432(%rip)
0000000000016ca6	movq	0x0009052b(%rip),%rsi
0000000000016cad	movq	%rbx,%rdi
0000000000016cb0	movq	%rax,%rdx
0000000000016cb3	movq	0x0006d41e(%rip),%rax
0000000000016cba	popq	%rbx
0000000000016cbb	popq	%r14
0000000000016cbd	popq	%rbp
0000000000016cbe	jmp	*%rax
+[PBXLSDebuggingSystem localizedStringForStoppedState:]:
0000000000016cc0	pushq	%rbp
0000000000016cc1	movq	%rsp,%rbp
0000000000016cc4	pushq	%r15
0000000000016cc6	pushq	%r14
0000000000016cc8	pushq	%rbx
0000000000016cc9	subq	$0x28,%rsp
0000000000016ccd	movq	%rdx,%rbx
0000000000016cd0	movq	%rdi,0xe0(%rbp)
0000000000016cd4	movq	%rsi,0xd8(%rbp)
0000000000016cd8	leaq	0x00097ee1(%rip),%rax
0000000000016cdf	movq	(%rax),%rax
0000000000016ce2	movl	(%rbx,%rax),%ecx
0000000000016ce5	addl	$0xfe,%ecx
0000000000016ce8	xorl	%eax,%eax
0000000000016cea	cmpl	$0x07,%ecx
0000000000016ced	ja	0x00016e3d
0000000000016cf3	leaq	0x0000014e(%rip),%rdx
0000000000016cfa	movslq	(%rdx,%rcx,4),%rcx
0000000000016cfe	addq	%rdx,%rcx
0000000000016d01	jmp	*%rcx
0000000000016d03	leaq	0x00097eae(%rip),%rax
0000000000016d0a	movq	(%rax),%rax
0000000000016d0d	movq	(%rbx,%rax),%rax
0000000000016d11	leaq	0x00097e60(%rip),%rcx
0000000000016d18	movq	(%rcx),%rcx
0000000000016d1b	movq	(%rax,%rcx),%rdx
0000000000016d1f	movq	0x000903b2(%rip),%rsi
0000000000016d26	jmp	0x00016e1a
0000000000016d2b	movq	0x000903b6(%rip),%rsi
0000000000016d32	jmp	0x00016e30
0000000000016d37	movq	0x00091712(%rip),%r14
0000000000016d3e	movq	0x00090be3(%rip),%rsi
0000000000016d45	movq	0x0009198c(%rip),%rdi
0000000000016d4c	movq	0x0006d385(%rip),%r15
0000000000016d53	call	*%r15
0000000000016d56	leaq	0x00097e5b(%rip),%rcx
0000000000016d5d	movq	(%rcx),%rcx
0000000000016d60	movq	(%rbx,%rcx),%rcx
0000000000016d64	leaq	0x00097e25(%rip),%rdx
0000000000016d6b	movq	(%rdx),%rdx
0000000000016d6e	movq	(%rcx,%rdx),%rcx
0000000000016d72	movq	0x0008ddff(%rip),%rsi
0000000000016d79	movq	%r14,%rdi
0000000000016d7c	movq	%rax,%rdx
0000000000016d7f	xorb	%al,%al
0000000000016d81	call	*%r15
0000000000016d84	jmp	0x00016e3d
0000000000016d89	leaq	0x00097e28(%rip),%rax
0000000000016d90	movq	(%rax),%rax
0000000000016d93	movq	(%rbx,%rax),%rax
0000000000016d97	leaq	0x00097e12(%rip),%rcx
0000000000016d9e	movq	(%rcx),%rcx
0000000000016da1	movq	(%rax,%rcx),%rdx
0000000000016da5	testq	%rdx,%rdx
0000000000016da8	jne	0x00016e13
0000000000016daa	leaq	0x0004d1a2(%rip),%rax
0000000000016db1	leaq	0x00098a80(%rip),%rcx
0000000000016db8	leaq	0x0004d1bb(%rip),%rdx
0000000000016dbf	movq	%rdx,0x10(%rsp)
0000000000016dc4	movq	%rcx,0x08(%rsp)
0000000000016dc9	movq	%rax,(%rsp)
0000000000016dcd	leaq	0xe0(%rbp),%rdi
0000000000016dd1	leaq	0xd8(%rbp),%rsi
0000000000016dd5	leaq	0x0004d0de(%rip),%rdx
0000000000016ddc	leaq	0x0004d10f(%rip),%rcx
0000000000016de3	leaq	0x0009d2ee(%rip),%r9
0000000000016dea	movl	$0x000000a8,%r8d
0000000000016df0	xorb	%al,%al
0000000000016df2	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000016df7	leaq	0x00097dba(%rip),%rax
0000000000016dfe	movq	(%rax),%rax
0000000000016e01	movq	(%rbx,%rax),%rax
0000000000016e05	leaq	0x00097da4(%rip),%rcx
0000000000016e0c	movq	(%rcx),%rcx
0000000000016e0f	movq	(%rax,%rcx),%rdx
0000000000016e13	movq	0x00090b16(%rip),%rsi
0000000000016e1a	movq	0x000918b7(%rip),%rdi
0000000000016e21	call	*0x0006d2b1(%rip)
0000000000016e27	jmp	0x00016e3d
0000000000016e29	movq	0x000902e8(%rip),%rsi
0000000000016e30	movq	0x000918a1(%rip),%rdi
0000000000016e37	call	*0x0006d29b(%rip)
0000000000016e3d	addq	$0x28,%rsp
0000000000016e41	popq	%rbx
0000000000016e42	popq	%r14
0000000000016e44	popq	%r15
0000000000016e46	popq	%rbp
0000000000016e47	ret
0000000000016e48	movl	$0xe3fffffe,%ebx
0000000000016e4d	.byte 0xfe, 0xff #bad opcode
0000000000016e4f	ljmpl	*%edi
0000000000016e51	.byte 0xfe, 0xff #bad opcode
0000000000016e53	pushq	%rbp
0000000000016e55	.byte 0xff, 0xff #bad opcode
0000000000016e57	incl	0xff(%rcx)
0000000000016e5a	.byte 0xff, 0xff #bad opcode
0000000000016e5c	cmc
0000000000016e5d	.byte 0xff, 0xff #bad opcode
0000000000016e5f	pushq	%rbp
0000000000016e61	.byte 0xff, 0xff #bad opcode
0000000000016e63	jmp	*%rcx
0000000000016e65	.byte 0xff, 0xff #bad opcode
0000000000016e67	call	*0x89485590(%rax)
0000000000016e6d	inl	$0x48,%eax
0000000000016e6f	movl	0x00090593(%rip),%esi
0000000000016e75	call	*0x0006d25d(%rip)
0000000000016e7b	leaq	0x0009ee56(%rip),%rdx
0000000000016e82	leaq	0x00098aaf(%rip),%rcx
0000000000016e89	leaq	0x0009e2c8(%rip),%r8
0000000000016e90	movq	0x00090579(%rip),%rsi
0000000000016e97	movq	%rax,%rdi
0000000000016e9a	movq	0x0006d237(%rip),%rax
0000000000016ea1	popq	%rbp
0000000000016ea2	jmp	*%rax
0000000000016ea4	nop
0000000000016ea5	nop
0000000000016ea6	nop
-[PBXLSThread setLastReasonStopped:]:
0000000000016ea7	pushq	%rbp
0000000000016ea8	movq	%rsp,%rbp
0000000000016eab	movq	%rdx,%rax
0000000000016eae	movq	0x0009855b(%rip),%rdx
0000000000016eb5	movq	%rax,%rcx
0000000000016eb8	movl	$0x00000001,%r8d
0000000000016ebe	movl	$0x00000001,%r9d
0000000000016ec4	popq	%rbp
0000000000016ec5	jmp	0x0004e644	; symbol stub for: _objc_setProperty
0000000000016eca	nop
0000000000016ecb	nop
-[PBXLSThread debugger:setThreadState:status:]:
0000000000016ecc	pushq	%rbp
0000000000016ecd	movq	%rsp,%rbp
0000000000016ed0	pushq	%rbx
0000000000016ed1	pushq	%rax
0000000000016ed2	movq	%rdi,%rbx
0000000000016ed5	movq	0x000984fc(%rip),%rax
0000000000016edc	movl	(%rbx,%rax),%eax
0000000000016edf	movq	0x000984fa(%rip),%rdx
0000000000016ee6	cmpl	%ecx,%eax
0000000000016ee8	jne	0x00016ef0
0000000000016eea	cmpq	%r8,(%rbx,%rdx)
0000000000016eee	je	0x00016f37
0000000000016ef0	movq	%r8,(%rbx,%rdx)
0000000000016ef4	movq	0x00090295(%rip),%rsi
0000000000016efb	movq	%rbx,%rdi
0000000000016efe	movl	%ecx,%edx
0000000000016f00	call	*0x0006d1d2(%rip)
0000000000016f06	movq	0x000984cb(%rip),%rax
0000000000016f0d	movl	(%rbx,%rax),%ecx
0000000000016f10	cmpl	$0x06,%ecx
0000000000016f13	ja	0x00016f21
0000000000016f15	movb	$0x01,%al
0000000000016f17	movl	$0x00000054,%edx
0000000000016f1c	btl	%ecx,%edx
0000000000016f1f	jb	0x00016f23
0000000000016f21	xorb	%al,%al
0000000000016f23	movq	0x000984ce(%rip),%rcx
0000000000016f2a	movb	%al,(%rbx,%rcx)
0000000000016f2d	movq	0x000984a4(%rip),%rax
0000000000016f34	movl	(%rbx,%rax),%eax
0000000000016f37	cmpl	$0x01,%eax
0000000000016f3a	je	0x00016f43
0000000000016f3c	addq	$0x08,%rsp
0000000000016f40	popq	%rbx
0000000000016f41	popq	%rbp
0000000000016f42	ret
0000000000016f43	movq	0x00090746(%rip),%rsi
0000000000016f4a	movq	%rbx,%rdi
0000000000016f4d	call	*0x0006d185(%rip)
0000000000016f53	movq	0x00090746(%rip),%rsi
0000000000016f5a	movq	%rbx,%rdi
0000000000016f5d	xorl	%edx,%edx
0000000000016f5f	movq	0x0006d172(%rip),%rax
0000000000016f66	addq	$0x08,%rsp
0000000000016f6a	popq	%rbx
0000000000016f6b	popq	%rbp
0000000000016f6c	jmp	*%rax
0000000000016f6e	nop
-[PBXLSThread setThreadState:]:
0000000000016f6f	pushq	%rbp
0000000000016f70	movq	%rsp,%rbp
0000000000016f73	movq	0x0009845e(%rip),%rax
0000000000016f7a	movl	%edx,(%rdi,%rax)
0000000000016f7d	popq	%rbp
0000000000016f7e	ret
0000000000016f7f	nop
0000000000016f80	nop
0000000000016f81	nop
-[PBXLSThread setStopReason:]:
0000000000016f82	pushq	%rbp
0000000000016f83	movq	%rsp,%rbp
0000000000016f86	movq	0x0009848b(%rip),%rax
0000000000016f8d	movl	%edx,(%rdi,%rax)
0000000000016f90	popq	%rbp
0000000000016f91	ret
-[PBXLSThread didTransitionToSuspended]:
0000000000016f92	pushq	%rbp
0000000000016f93	movq	%rsp,%rbp
0000000000016f96	movq	0x0009845b(%rip),%rax
0000000000016f9d	movsbl	(%rdi,%rax),%eax
0000000000016fa1	popq	%rbp
0000000000016fa2	ret
0000000000016fa3	nop
0000000000016fa4	nop
0000000000016fa5	nop
0000000000016fa6	nop
0000000000016fa7	nop
0000000000016fa8	nop
0000000000016fa9	nop
0000000000016faa	nop
0000000000016fab	nop
0000000000016fac	nop
0000000000016fad	nop
0000000000016fae	nop
0000000000016faf	nop
-[DBGGDBThread initWithParentProcess:uniqueID:PBXThread:]:
0000000000016fb0	pushq	%rbp
0000000000016fb1	movq	%rsp,%rbp
0000000000016fb4	pushq	%r15
0000000000016fb6	pushq	%r14
0000000000016fb8	pushq	%rbx
0000000000016fb9	subq	$0x18,%rsp
0000000000016fbd	movq	%r8,%r14
0000000000016fc0	movq	%rdi,0xd8(%rbp)
0000000000016fc4	movq	0x000920f5(%rip),%rax
0000000000016fcb	movq	%rax,0xe0(%rbp)
0000000000016fcf	movq	0x0009107a(%rip),%rsi
0000000000016fd6	leaq	0xd8(%rbp),%rdi
0000000000016fda	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000016fdf	movq	%rax,%rbx
0000000000016fe2	testq	%rbx,%rbx
0000000000016fe5	je	0x0001701f
0000000000016fe7	movq	0x00090ee2(%rip),%rsi
0000000000016fee	movq	0x0006d0e3(%rip),%r15
0000000000016ff5	movq	%rbx,%rdi
0000000000016ff8	movq	%r14,%rdx
0000000000016ffb	call	*%r15
0000000000016ffe	movq	0x00091053(%rip),%rsi
0000000000017005	leaq	0x0009f70c(%rip),%rdx
000000000001700c	leaq	0x0009f725(%rip),%r8
0000000000017013	movq	%rbx,%rdi
0000000000017016	movq	%rbx,%rcx
0000000000017019	xorl	%r9d,%r9d
000000000001701c	call	*%r15
000000000001701f	movq	%rbx,%rax
0000000000017022	addq	$0x18,%rsp
0000000000017026	popq	%rbx
0000000000017027	popq	%r14
0000000000017029	popq	%r15
000000000001702b	popq	%rbp
000000000001702c	ret
-[DBGGDBThread setPBXThread:]:
000000000001702d	pushq	%rbp
000000000001702e	movq	%rsp,%rbp
0000000000017031	pushq	%r15
0000000000017033	pushq	%r14
0000000000017035	pushq	%r12
0000000000017037	pushq	%rbx
0000000000017038	subq	$0x30,%rsp
000000000001703c	movq	%rdx,%r15
000000000001703f	movq	%rdi,%rbx
0000000000017042	movq	0x00098607(%rip),%rax
0000000000017049	movq	(%rbx,%rax),%rdi
000000000001704d	cmpq	%r15,%rdi
0000000000017050	je	0x00017133
0000000000017056	movq	0x0009075b(%rip),%rsi
000000000001705d	movq	0x0009fda4(%rip),%rcx
0000000000017064	leaq	0x0009fd9d(%rip),%r14
000000000001706b	movq	0x0006d066(%rip),%r12
0000000000017072	movq	%rbx,%rdx
0000000000017075	movq	%r14,%r8
0000000000017078	call	*%r12
000000000001707b	movq	0x000985ce(%rip),%rdx
0000000000017082	movq	%r15,%rdi
0000000000017085	movq	%rbx,%rsi
0000000000017088	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001708d	movq	0x000985bc(%rip),%rax
0000000000017094	movq	(%rbx,%rax),%rdi
0000000000017098	movq	0x00090fc1(%rip),%rsi
000000000001709f	movq	%rbx,%rdx
00000000000170a2	call	*%r12
00000000000170a5	movq	0x000985a4(%rip),%rax
00000000000170ac	movq	(%rbx,%rax),%rdi
00000000000170b0	movq	0x00090719(%rip),%rsi
00000000000170b7	movq	0x0009fd4a(%rip),%rcx
00000000000170be	movq	%rbx,%rdx
00000000000170c1	movl	$0x00000005,%r8d
00000000000170c7	movq	%r14,%r9
00000000000170ca	call	*%r12
00000000000170cd	leaq	0xd8(%rbp),%rsi
00000000000170d1	leaq	0x000a0288(%rip),%rax
00000000000170d8	leaq	0x000002d1(%rip),%rcx
00000000000170df	movq	0x0006cfaa(%rip),%rdx
00000000000170e6	movq	0x00098563(%rip),%rdi
00000000000170ed	movq	(%rbx,%rdi),%r14
00000000000170f1	movq	%rdx,0xb8(%rbp)
00000000000170f5	movl	$0x42000000,0xc0(%rbp)
00000000000170fc	movl	$0x00000000,0xc4(%rbp)
0000000000017103	movq	%rcx,0xc8(%rbp)
0000000000017107	movq	%rax,0xd0(%rbp)
000000000001710b	movq	%rbx,%rdi
000000000001710e	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
0000000000017113	leaq	0x0009f63e(%rip),%rdx
000000000001711a	leaq	0xb8(%rbp),%r9
000000000001711e	movq	0x0009047b(%rip),%rsi
0000000000017125	movq	%r14,%rdi
0000000000017128	movl	$0x00000004,%ecx
000000000001712d	movq	%rbx,%r8
0000000000017130	call	*%r12
0000000000017133	addq	$0x30,%rsp
0000000000017137	popq	%rbx
0000000000017138	popq	%r12
000000000001713a	popq	%r14
000000000001713c	popq	%r15
000000000001713e	popq	%rbp
000000000001713f	ret
0000000000017140	nop
0000000000017141	nop
-[PBXLSThread setFoundationThread:]:
0000000000017142	pushq	%rbp
0000000000017143	movq	%rsp,%rbp
0000000000017146	movq	%rdx,%rax
0000000000017149	movq	%rdi,%rcx
000000000001714c	movq	0x000982ad(%rip),%rdx
0000000000017153	movq	%rax,%rdi
0000000000017156	movq	%rcx,%rsi
0000000000017159	popq	%rbp
000000000001715a	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXLSThread threadState]:
000000000001715f	pushq	%rbp
0000000000017160	movq	%rsp,%rbp
0000000000017163	movq	0x0009826e(%rip),%rax
000000000001716a	movl	(%rdi,%rax),%eax
000000000001716d	popq	%rbp
000000000001716e	ret
000000000001716f	nop
0000000000017170	nop
0000000000017171	nop
0000000000017172	nop
0000000000017173	nop
0000000000017174	nop
0000000000017175	nop
0000000000017176	nop
0000000000017177	nop
0000000000017178	nop
0000000000017179	nop
000000000001717a	nop
000000000001717b	nop
000000000001717c	nop
-[DBGGDBThread observeValueForKeyPath:ofObject:change:context:]:
000000000001717d	pushq	%rbp
000000000001717e	movq	%rsp,%rbp
0000000000017181	pushq	%r15
0000000000017183	pushq	%r14
0000000000017185	pushq	%rbx
0000000000017186	subq	$0x48,%rsp
000000000001718a	movq	%rdi,0xe0(%rbp)
000000000001718e	movq	%rsi,0xd8(%rbp)
0000000000017192	leaq	0x0009fc6f(%rip),%rax
0000000000017199	cmpq	%rax,%r9
000000000001719c	jne	0x00017356
00000000000171a2	movq	0x0006ce7f(%rip),%rax
00000000000171a9	movq	(%rax),%rdx
00000000000171ac	leaq	0x0009119d(%rip),%rsi
00000000000171b3	movq	%r8,%rdi
00000000000171b6	call	*0x00091194(%rip)
00000000000171bc	movq	%rax,%r14
00000000000171bf	testq	%r14,%r14
00000000000171c2	jne	0x00017226
00000000000171c4	movq	0x00091525(%rip),%rdi
00000000000171cb	leaq	0x0009115e(%rip),%rsi
00000000000171d2	call	*0x00091158(%rip)
00000000000171d8	movq	%rax,%rdi
00000000000171db	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
00000000000171e0	leaq	0xe0(%rbp),%rdi
00000000000171e4	leaq	0xd8(%rbp),%rsi
00000000000171e8	leaq	0x0004e270(%rip),%rdx
00000000000171ef	leaq	0x0004e196(%rip),%rcx
00000000000171f6	leaq	0x000987bb(%rip),%r9
00000000000171fd	leaq	0x000461af(%rip),%r8
0000000000017204	leaq	0x0004e294(%rip),%rbx
000000000001720b	movq	%rbx,0x18(%rsp)
0000000000017210	leaq	0x00098621(%rip),%rbx
0000000000017217	movq	%rbx,0x10(%rsp)
000000000001721c	movq	%rax,0x08(%rsp)
0000000000017221	jmp	0x000172ca
0000000000017226	movq	0x000914c3(%rip),%rdi
000000000001722d	leaq	0x000910fc(%rip),%rsi
0000000000017234	call	*0x000910f6(%rip)
000000000001723a	leaq	0x000910ff(%rip),%rsi
0000000000017241	movq	%r14,%rdi
0000000000017244	movq	%rax,%rdx
0000000000017247	call	*0x000910f3(%rip)
000000000001724d	testb	%al,%al
000000000001724f	jne	0x000172db
0000000000017255	movq	0x00091494(%rip),%rdi
000000000001725c	leaq	0x000910cd(%rip),%rsi
0000000000017263	call	*0x000910c7(%rip)
0000000000017269	movq	%rax,%rdi
000000000001726c	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000017271	movq	%rax,%r15
0000000000017274	movq	0x0008d9e5(%rip),%rsi
000000000001727b	movq	%r14,%rdi
000000000001727e	call	*0x0006ce54(%rip)
0000000000017284	leaq	0x0004e224(%rip),%r8
000000000001728b	leaq	0xe0(%rbp),%rdi
000000000001728f	leaq	0xd8(%rbp),%rsi
0000000000017293	leaq	0x0004e1c5(%rip),%rdx
000000000001729a	leaq	0x0004e0eb(%rip),%rcx
00000000000172a1	leaq	0x00098730(%rip),%r9
00000000000172a8	movq	%r8,0x20(%rsp)
00000000000172ad	leaq	0x00098584(%rip),%rbx
00000000000172b4	movq	%rbx,0x18(%rsp)
00000000000172b9	leaq	0x000460f3(%rip),%r8
00000000000172c0	movq	%rax,0x10(%rsp)
00000000000172c5	movq	%r15,0x08(%rsp)
00000000000172ca	movq	%r8,(%rsp)
00000000000172ce	movl	$0x000000eb,%r8d
00000000000172d4	xorb	%al,%al
00000000000172d6	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
00000000000172db	movq	0x00090296(%rip),%rsi
00000000000172e2	movq	%r14,%rdi
00000000000172e5	call	*0x0006cded(%rip)
00000000000172eb	movl	$0x00000003,%edx
00000000000172f0	cmpl	$0x01,%eax
00000000000172f3	je	0x00017343
00000000000172f5	cmpl	$0x06,%eax
00000000000172f8	je	0x0001732c
00000000000172fa	cmpl	$0x02,%eax
00000000000172fd	jne	0x00017333
00000000000172ff	movq	0x0008dbd2(%rip),%rsi
0000000000017306	movq	0xe0(%rbp),%rdi
000000000001730a	movq	0x0006cdc7(%rip),%rbx
0000000000017311	call	*%rbx
0000000000017313	movq	0x00090e26(%rip),%rsi
000000000001731a	movq	%rax,%rdi
000000000001731d	call	*%rbx
000000000001731f	cmpl	$0x01,%eax
0000000000017322	setne	%al
0000000000017325	movzbl	%al,%edx
0000000000017328	incl	%edx
000000000001732a	jmp	0x00017343
000000000001732c	movl	$0x00000004,%edx
0000000000017331	jmp	0x00017343
0000000000017333	movl	$0x00000006,%ecx
0000000000017338	cmpl	$0x04,%eax
000000000001733b	movl	$0x00000000,%edx
0000000000017340	cmovel	%ecx,%edx
0000000000017343	movq	0x00090dfe(%rip),%rsi
000000000001734a	movq	0xe0(%rbp),%rdi
000000000001734e	call	*0x0006cd84(%rip)
0000000000017354	jmp	0x00017375
0000000000017356	movq	%rdi,0xc8(%rbp)
000000000001735a	movq	0x00091d5f(%rip),%rax
0000000000017361	movq	%rax,0xd0(%rbp)
0000000000017365	movq	0x0009052c(%rip),%rsi
000000000001736c	leaq	0xc8(%rbp),%rdi
0000000000017370	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000017375	addq	$0x48,%rsp
0000000000017379	popq	%rbx
000000000001737a	popq	%r14
000000000001737c	popq	%r15
000000000001737e	popq	%rbp
000000000001737f	ret
-[DBGGDBThread PBXThread]:
0000000000017380	pushq	%rbp
0000000000017381	movq	%rsp,%rbp
0000000000017384	movq	0x000982c5(%rip),%rax
000000000001738b	movq	(%rdi,%rax),%rax
000000000001738f	popq	%rbp
0000000000017390	ret
0000000000017391	nop
0000000000017392	nop
-[PBXLSThread threadStateStatus]:
0000000000017393	pushq	%rbp
0000000000017394	movq	%rsp,%rbp
0000000000017397	movq	0x00098042(%rip),%rax
000000000001739e	movq	(%rdi,%rax),%rax
00000000000173a2	popq	%rbp
00000000000173a3	ret
00000000000173a4	nop
00000000000173a5	nop
00000000000173a6	nop
00000000000173a7	nop
00000000000173a8	nop
00000000000173a9	nop
00000000000173aa	nop
00000000000173ab	nop
00000000000173ac	nop
00000000000173ad	nop
00000000000173ae	nop
00000000000173af	nop
___29-[DBGGDBThread setPBXThread:]_block_invoke_0:
00000000000173b0	pushq	%rbp
00000000000173b1	movq	%rsp,%rbp
00000000000173b4	pushq	%rbx
00000000000173b5	pushq	%rax
00000000000173b6	movq	0x20(%rdi),%rbx
00000000000173ba	movq	0x0009828f(%rip),%rax
00000000000173c1	movq	(%rbx,%rax),%rdi
00000000000173c5	movq	0x00090c9c(%rip),%rsi
00000000000173cc	call	*0x0006cd06(%rip)
00000000000173d2	movq	0x0008fcd7(%rip),%rsi
00000000000173d9	movq	%rbx,%rdi
00000000000173dc	movl	%eax,%edx
00000000000173de	movq	0x0006ccf3(%rip),%rax
00000000000173e5	addq	$0x08,%rsp
00000000000173e9	popq	%rbx
00000000000173ea	popq	%rbp
00000000000173eb	jmp	*%rax
00000000000173ed	nopl	(%rax)
00000000000173f0	nop
00000000000173f1	nop
-[PBXLSThread stopReason]:
00000000000173f2	pushq	%rbp
00000000000173f3	movq	%rsp,%rbp
00000000000173f6	movq	0x0009801b(%rip),%rax
00000000000173fd	movl	(%rdi,%rax),%eax
0000000000017400	popq	%rbp
0000000000017401	ret
0000000000017402	nop
0000000000017403	nop
0000000000017404	nop
-[PBXLSThread lastReasonStopped]:
0000000000017405	pushq	%rbp
0000000000017406	movq	%rsp,%rbp
0000000000017409	movq	0x00098000(%rip),%rdx
0000000000017410	movl	$0x00000001,%ecx
0000000000017415	popq	%rbp
0000000000017416	jmp	0x0004e632	; symbol stub for: _objc_getProperty
-[PBXLSThread name]:
000000000001741b	pushq	%rbp
000000000001741c	movq	%rsp,%rbp
000000000001741f	movq	0x00097fc2(%rip),%rdx
0000000000017426	movl	$0x00000001,%ecx
000000000001742b	popq	%rbp
000000000001742c	jmp	0x0004e632	; symbol stub for: _objc_getProperty
0000000000017431	nop
0000000000017432	nop
0000000000017433	nop
-[PBXLSThread queueName]:
0000000000017434	pushq	%rbp
0000000000017435	movq	%rsp,%rbp
0000000000017438	movq	0x00097fc9(%rip),%rdx
000000000001743f	movl	$0x00000001,%ecx
0000000000017444	popq	%rbp
0000000000017445	jmp	0x0004e632	; symbol stub for: _objc_getProperty
000000000001744a	nop
000000000001744b	nop
000000000001744c	nop
000000000001744d	nop
000000000001744e	nop
000000000001744f	nop
0000000000017450	nop
0000000000017451	nop
0000000000017452	nop
0000000000017453	nop
-[DBGGDBThread refreshStackFramesAndSetFirstFrame]:
0000000000017454	pushq	%rbp
0000000000017455	movq	%rsp,%rbp
0000000000017458	pushq	%rbx
0000000000017459	subq	$0x18,%rsp
000000000001745d	movq	%rdi,%rbx
0000000000017460	movq	%rbx,0xe8(%rbp)
0000000000017464	movq	0x00091c55(%rip),%rax
000000000001746b	movq	%rax,0xf0(%rbp)
000000000001746f	movq	0x0008e7fa(%rip),%rsi
0000000000017476	leaq	0xe8(%rbp),%rdi
000000000001747a	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000001747f	movq	0x000981d2(%rip),%rax
0000000000017486	movb	$0x01,(%rbx,%rax)
000000000001748a	movq	0x00090c7f(%rip),%rsi
0000000000017491	movq	%rbx,%rdi
0000000000017494	call	*0x0006cc3e(%rip)
000000000001749a	addq	$0x18,%rsp
000000000001749e	popq	%rbx
000000000001749f	popq	%rbp
00000000000174a0	ret
00000000000174a1	nop
00000000000174a2	nop
00000000000174a3	nop
-[DBGGDBThread refreshStackFrames]:
00000000000174a4	pushq	%rbp
00000000000174a5	movq	%rsp,%rbp
00000000000174a8	pushq	%rbx
00000000000174a9	subq	$0x18,%rsp
00000000000174ad	movq	%rdi,%rbx
00000000000174b0	movq	%rbx,0xe8(%rbp)
00000000000174b4	movq	0x00091c05(%rip),%rax
00000000000174bb	movq	%rax,0xf0(%rbp)
00000000000174bf	movq	0x00090c4a(%rip),%rsi
00000000000174c6	leaq	0xe8(%rbp),%rdi
00000000000174ca	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000174cf	movq	0x0009817a(%rip),%rax
00000000000174d6	movq	(%rbx,%rax),%rdi
00000000000174da	movq	0x0009019f(%rip),%rsi
00000000000174e1	call	*0x0006cbf1(%rip)
00000000000174e7	cmpl	$0x02,%eax
00000000000174ea	jne	0x00017500
00000000000174ec	movq	0x000901b5(%rip),%rsi
00000000000174f3	movq	%rbx,%rdi
00000000000174f6	call	*0x0006cbdc(%rip)
00000000000174fc	movb	$0x01,%al
00000000000174fe	jmp	0x0001751a
0000000000017500	movq	0x00098149(%rip),%rax
0000000000017507	movq	(%rbx,%rax),%rdi
000000000001750b	movq	0x00090176(%rip),%rsi
0000000000017512	call	*0x0006cbc0(%rip)
0000000000017518	xorb	%al,%al
000000000001751a	movzbl	%al,%eax
000000000001751d	addq	$0x18,%rsp
0000000000017521	popq	%rbx
0000000000017522	popq	%rbp
0000000000017523	ret
0000000000017524	nop
-[PBXLSThread stackValidityStatus]:
0000000000017525	pushq	%rbp
0000000000017526	movq	%rsp,%rbp
0000000000017529	movq	0x0008e060(%rip),%rsi
0000000000017530	popq	%rbp
0000000000017531	jmp	*0x0006cba1(%rip)
0000000000017537	nop
0000000000017538	nop
0000000000017539	nop
-[PBXLSModel childValidityStatus]:
000000000001753a	pushq	%rbp
000000000001753b	movq	%rsp,%rbp
000000000001753e	movq	0x00097dd3(%rip),%rax
0000000000017545	movl	(%rdi,%rax),%eax
0000000000017548	popq	%rbp
0000000000017549	ret
000000000001754a	nop
000000000001754b	nop
000000000001754c	nop
-[PBXLSThread requestUpdateStack]:
000000000001754d	pushq	%rbp
000000000001754e	movq	%rsp,%rbp
0000000000017551	pushq	%r15
0000000000017553	pushq	%r14
0000000000017555	pushq	%r12
0000000000017557	pushq	%rbx
0000000000017558	movq	%rdi,%r15
000000000001755b	movq	0x0009011e(%rip),%rsi
0000000000017562	call	*0x0006cb70(%rip)
0000000000017568	movl	%eax,%r14d
000000000001756b	cmpl	$0x02,%r14d
000000000001756f	je	0x000175c2
0000000000017571	movq	0x0008e6f0(%rip),%rsi
0000000000017578	movq	0x0006cb59(%rip),%r12
000000000001757f	movq	%r15,%rdi
0000000000017582	call	*%r12
0000000000017585	movq	%rax,%rbx
0000000000017588	movq	0x000900e9(%rip),%rsi
000000000001758f	movq	%rbx,%rdi
0000000000017592	call	*%r12
0000000000017595	testb	%al,%al
0000000000017597	je	0x000175bd
0000000000017599	movq	0x00090080(%rip),%rsi
00000000000175a0	movq	0x0006cb31(%rip),%r12
00000000000175a7	movq	%rbx,%rdi
00000000000175aa	call	*%r12
00000000000175ad	movq	0x00090104(%rip),%rsi
00000000000175b4	movq	%rax,%rdi
00000000000175b7	movq	%rbx,%rdx
00000000000175ba	call	*%r12
00000000000175bd	testl	%r14d,%r14d
00000000000175c0	je	0x000175cb
00000000000175c2	popq	%rbx
00000000000175c3	popq	%r12
00000000000175c5	popq	%r14
00000000000175c7	popq	%r15
00000000000175c9	popq	%rbp
00000000000175ca	ret
00000000000175cb	movq	0x000900ce(%rip),%rsi
00000000000175d2	movq	%r15,%rdi
00000000000175d5	movl	$0x00000001,%edx
00000000000175da	call	*0x0006caf8(%rip)
00000000000175e0	movq	0x0008dfe1(%rip),%rsi
00000000000175e7	movq	%r15,%rdi
00000000000175ea	call	*0x0006cae8(%rip)
00000000000175f0	movq	0x000900c9(%rip),%rsi
00000000000175f7	movq	%rax,%rdi
00000000000175fa	movq	%r15,%rdx
00000000000175fd	movq	0x0006cad4(%rip),%rax
0000000000017604	popq	%rbx
0000000000017605	popq	%r12
0000000000017607	popq	%r14
0000000000017609	popq	%r15
000000000001760b	popq	%rbp
000000000001760c	jmp	*%rax
000000000001760e	nop
000000000001760f	nop
0000000000017610	nop
-[PBXLSThread foundationThread]:
0000000000017611	pushq	%rbp
0000000000017612	movq	%rsp,%rbp
0000000000017615	movq	0x00097de4(%rip),%rax
000000000001761c	movq	(%rdi,%rax),%rax
0000000000017620	popq	%rbp
0000000000017621	ret
0000000000017622	nop
-[PBXLSThread setStackValidityStatus:]:
0000000000017623	pushq	%rbp
0000000000017624	movq	%rsp,%rbp
0000000000017627	movq	0x0008df6a(%rip),%rsi
000000000001762e	popq	%rbp
000000000001762f	jmp	*0x0006caa3(%rip)
0000000000017635	nop
-[PBXLSModel setChildValidityStatus:]:
0000000000017636	pushq	%rbp
0000000000017637	movq	%rsp,%rbp
000000000001763a	movq	0x00097cd7(%rip),%rax
0000000000017641	movl	%edx,(%rdi,%rax)
0000000000017644	popq	%rbp
0000000000017645	ret
0000000000017646	nop
0000000000017647	nop
-[PBXLSModel debugger]:
0000000000017648	pushq	%rbp
0000000000017649	movq	%rsp,%rbp
000000000001764c	movq	0x00097ca5(%rip),%rax
0000000000017653	movq	(%rdi,%rax),%rax
0000000000017657	popq	%rbp
0000000000017658	ret
-[PBXGDB_Adaptor threadRequestUpdateStack:]:
0000000000017659	pushq	%rbp
000000000001765a	movq	%rsp,%rbp
000000000001765d	pushq	%rbx
000000000001765e	pushq	%rax
000000000001765f	leaq	0x00097e32(%rip),%rax
0000000000017666	movq	(%rax),%rax
0000000000017669	incq	(%rdi,%rax)
000000000001766d	movq	0x0009700c(%rip),%rax
0000000000017674	movq	(%rdi,%rax),%rbx
0000000000017678	movq	0x0008da71(%rip),%rsi
000000000001767f	movq	%rdx,%rdi
0000000000017682	call	*0x0006ca50(%rip)
0000000000017688	movq	0x0008da69(%rip),%rsi
000000000001768f	movq	%rbx,%rdi
0000000000017692	movq	%rax,%rdx
0000000000017695	movq	0x0006ca3c(%rip),%rax
000000000001769c	addq	$0x08,%rsp
00000000000176a0	popq	%rbx
00000000000176a1	popq	%rbp
00000000000176a2	jmp	*%rax
00000000000176a4	nop
00000000000176a5	nop
-[PBXGDB_ThreadController enqueueUpdateStackSequenceForThreadHandle:]:
00000000000176a6	pushq	%rbp
00000000000176a7	movq	%rsp,%rbp
00000000000176aa	pushq	%r15
00000000000176ac	pushq	%r14
00000000000176ae	pushq	%rbx
00000000000176af	pushq	%rax
00000000000176b0	movq	%rdx,%r15
00000000000176b3	movq	%rdi,%r14
00000000000176b6	movq	0x000910d3(%rip),%rdi
00000000000176bd	leaq	0x00090c1c(%rip),%rsi
00000000000176c4	call	*0x00090c16(%rip)
00000000000176ca	movq	0x0008d39f(%rip),%rsi
00000000000176d1	movq	%rax,%rdi
00000000000176d4	call	*0x0006c9fe(%rip)
00000000000176da	movq	%rax,%rbx
00000000000176dd	movq	0x0008fa9c(%rip),%rsi
00000000000176e4	movq	%r14,%rdi
00000000000176e7	movq	%rbx,%rdx
00000000000176ea	movq	%r15,%rcx
00000000000176ed	call	*0x0006c9e5(%rip)
00000000000176f3	movq	0x0008d3be(%rip),%rsi
00000000000176fa	movq	%r14,%rdi
00000000000176fd	call	*0x0006c9d5(%rip)
0000000000017703	movq	0x0008d6c6(%rip),%rsi
000000000001770a	movq	%rax,%rdi
000000000001770d	call	*0x0006c9c5(%rip)
0000000000017713	movq	0x0008d6c6(%rip),%rsi
000000000001771a	movq	%rax,%rdi
000000000001771d	movq	%rbx,%rdx
0000000000017720	movq	0x0006c9b1(%rip),%rax
0000000000017727	addq	$0x08,%rsp
000000000001772b	popq	%rbx
000000000001772c	popq	%r14
000000000001772e	popq	%r15
0000000000017730	popq	%rbp
0000000000017731	jmp	*%rax
-[PBXGDB_UpdateStackSequence init]:
0000000000017733	pushq	%rbp
0000000000017734	movq	%rsp,%rbp
0000000000017737	movq	0x0008f16a(%rip),%rsi
000000000001773e	xorl	%edx,%edx
0000000000017740	popq	%rbp
0000000000017741	jmp	*0x0006c991(%rip)
-[PBXGDB_UpdateStackSequence initWithResultHandler:]:
0000000000017747	pushq	%rbp
0000000000017748	movq	%rsp,%rbp
000000000001774b	subq	$0x10,%rsp
000000000001774f	movq	0x0008f4ea(%rip),%rsi
0000000000017756	movq	%rdx,0x08(%rsp)
000000000001775b	movl	$0x00000001,(%rsp)
0000000000017762	xorl	%edx,%edx
0000000000017764	movq	$0x7fffffffffffffff,%rcx
000000000001776e	movq	$0x7fffffffffffffff,%r8
0000000000017778	movl	$0x00000065,%r9d
000000000001777e	call	*0x0006c954(%rip)
0000000000017784	addq	$0x10,%rsp
0000000000017788	popq	%rbp
0000000000017789	ret
-[PBXGDB_UpdateStackSequence initWithStartIndex:endIndex:lastFetchedIndex:chunkSize:shouldUpdateThread:resultHandler:]:
000000000001778a	pushq	%rbp
000000000001778b	movq	%rsp,%rbp
000000000001778e	pushq	%r15
0000000000017790	pushq	%r14
0000000000017792	pushq	%r13
0000000000017794	pushq	%r12
0000000000017796	pushq	%rbx
0000000000017797	subq	$0x18,%rsp
000000000001779b	movq	%r9,%r14
000000000001779e	movq	%r8,%r15
00000000000177a1	movq	%rcx,%r12
00000000000177a4	movq	%rdx,%r13
00000000000177a7	movq	%rdi,0xc8(%rbp)
00000000000177ab	movq	0x000917b6(%rip),%rax
00000000000177b2	movq	%rax,0xd0(%rbp)
00000000000177b6	movq	0x0008d2b3(%rip),%rsi
00000000000177bd	leaq	0xc8(%rbp),%rdi
00000000000177c1	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000177c6	movq	%rax,%rbx
00000000000177c9	testq	%rbx,%rbx
00000000000177cc	je	0x00017897
00000000000177d2	movq	0x18(%rbp),%rdi
00000000000177d6	movb	0x10(%rbp),%dl
00000000000177d9	movq	0x00097828(%rip),%rax
00000000000177e0	movq	%r13,(%rbx,%rax)
00000000000177e4	movq	0x00097825(%rip),%rax
00000000000177eb	movq	%r12,(%rbx,%rax)
00000000000177ef	movq	0x00097822(%rip),%rax
00000000000177f6	movq	%r15,(%rbx,%rax)
00000000000177fa	movq	$0x7fffffffffffffff,%rax
0000000000017804	movq	0x00097815(%rip),%rcx
000000000001780b	movq	%r14,(%rbx,%rcx)
000000000001780f	movq	0x00097812(%rip),%rcx
0000000000017816	movb	%dl,(%rbx,%rcx)
0000000000017819	movb	%dl,%r14b
000000000001781c	movq	0x0009780d(%rip),%rcx
0000000000017823	movq	0x000977ee(%rip),%rdx
000000000001782a	cmpq	%rax,(%rbx,%rdx)
000000000001782e	sete	(%rbx,%rcx)
0000000000017832	movq	0x0008d23f(%rip),%rsi
0000000000017839	call	*0x0006c899(%rip)
000000000001783f	movq	0x000977f2(%rip),%rdx
0000000000017846	movq	%rax,%rdi
0000000000017849	movq	%rbx,%rsi
000000000001784c	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000017851	testb	%r14b,%r14b
0000000000017854	je	0x00017863
0000000000017856	movq	0x000977d3(%rip),%rax
000000000001785d	cmpb	$0x00,(%rbx,%rax)
0000000000017861	je	0x00017871
0000000000017863	movq	0x000977ce(%rip),%rax
000000000001786a	cmpq	$0x00,(%rbx,%rax)
000000000001786f	je	0x00017897
0000000000017871	movq	0x0008dbb8(%rip),%rsi
0000000000017878	movq	0x00090be1(%rip),%rdi
000000000001787f	call	*0x0006c853(%rip)
0000000000017885	movq	0x000977b4(%rip),%rdx
000000000001788c	movq	%rax,%rdi
000000000001788f	movq	%rbx,%rsi
0000000000017892	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000017897	movq	%rbx,%rax
000000000001789a	addq	$0x18,%rsp
000000000001789e	popq	%rbx
000000000001789f	popq	%r12
00000000000178a1	popq	%r13
00000000000178a3	popq	%r14
00000000000178a5	popq	%r15
00000000000178a7	popq	%rbp
00000000000178a8	ret
-[PBXGDB_UpdateStackSequence description]:
00000000000178a9	pushq	%rbp
00000000000178aa	movq	%rsp,%rbp
00000000000178ad	pushq	%r14
00000000000178af	pushq	%rbx
00000000000178b0	subq	$0x10,%rsp
00000000000178b4	movq	%rdi,%rbx
00000000000178b7	movq	0x00090b7a(%rip),%r14
00000000000178be	movq	%rbx,0xe0(%rbp)
00000000000178c2	movq	0x0009169f(%rip),%rax
00000000000178c9	movq	%rax,0xe8(%rbp)
00000000000178cd	movq	0x0008e4fc(%rip),%rsi
00000000000178d4	leaq	0xe0(%rbp),%rdi
00000000000178d8	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000178dd	leaq	0x0009c7b4(%rip),%rdx
00000000000178e4	movq	0x0009771d(%rip),%rcx
00000000000178eb	movq	(%rbx,%rcx),%r9
00000000000178ef	movq	0x00097742(%rip),%rcx
00000000000178f6	cmpq	$0x00,(%rbx,%rcx)
00000000000178fb	setne	%cl
00000000000178fe	movzbl	%cl,%r8d
0000000000017902	movq	0x0008d26f(%rip),%rsi
0000000000017909	movq	%r14,%rdi
000000000001790c	movq	%rax,%rcx
000000000001790f	xorb	%al,%al
0000000000017911	call	*0x0006c7c1(%rip)
0000000000017917	movq	%rax,%r14
000000000001791a	movq	$0x7fffffffffffffff,%rax
0000000000017924	movq	0x000976e5(%rip),%rcx
000000000001792b	movq	(%rbx,%rcx),%rcx
000000000001792f	cmpq	%rax,%rcx
0000000000017932	jne	0x0001794d
0000000000017934	movq	0x0008d1c5(%rip),%rsi
000000000001793b	leaq	0x0009c776(%rip),%rdx
0000000000017942	movq	%r14,%rdi
0000000000017945	call	*0x0006c78d(%rip)
000000000001794b	jmp	0x00017966
000000000001794d	movq	0x0008d344(%rip),%rsi
0000000000017954	leaq	0x000990dd(%rip),%rdx
000000000001795b	movq	%r14,%rdi
000000000001795e	xorb	%al,%al
0000000000017960	call	*0x0006c772(%rip)
0000000000017966	movq	%r14,%rax
0000000000017969	addq	$0x10,%rsp
000000000001796d	popq	%rbx
000000000001796e	popq	%r14
0000000000017970	popq	%rbp
0000000000017971	ret
0000000000017972	nop
0000000000017973	nop
-[PBXLSThread processDidUpdateAndDoUpdate:]:
0000000000017974	pushq	%rbp
0000000000017975	movq	%rsp,%rbp
0000000000017978	pushq	%r15
000000000001797a	pushq	%r14
000000000001797c	pushq	%rbx
000000000001797d	pushq	%rax
000000000001797e	movq	%rdi,%rbx
0000000000017981	movq	0x00097a50(%rip),%rax
0000000000017988	movl	(%rbx,%rax),%eax
000000000001798b	cmpl	$0x06,%eax
000000000001798e	ja	0x00017a5d
0000000000017994	movl	$0x00000054,%ecx
0000000000017999	btl	%eax,%ecx
000000000001799c	jae	0x00017a5d
00000000000179a2	movq	0x0008e2bf(%rip),%rsi
00000000000179a9	movq	0x0006c728(%rip),%r15
00000000000179b0	movq	%rbx,%rdi
00000000000179b3	call	*%r15
00000000000179b6	movq	0x0008fcbb(%rip),%rsi
00000000000179bd	movq	%rax,%rdi
00000000000179c0	call	*%r15
00000000000179c3	movb	%al,%r14b
00000000000179c6	movq	0x0008fcb3(%rip),%rsi
00000000000179cd	movq	%rbx,%rdi
00000000000179d0	call	*%r15
00000000000179d3	testb	%r14b,%r14b
00000000000179d6	je	0x00017a4f
00000000000179d8	testl	%eax,%eax
00000000000179da	jne	0x000179f6
00000000000179dc	movq	0x0008fca5(%rip),%rsi
00000000000179e3	movq	%rbx,%rdi
00000000000179e6	addq	$0x08,%rsp
00000000000179ea	popq	%rbx
00000000000179eb	popq	%r14
00000000000179ed	popq	%r15
00000000000179ef	popq	%rbp
00000000000179f0	jmp	*0x0006c6e2(%rip)
00000000000179f6	movq	0x0008fc83(%rip),%rsi
00000000000179fd	movq	%rbx,%rdi
0000000000017a00	call	*0x0006c6d2(%rip)
0000000000017a06	cmpl	$0x02,%eax
0000000000017a09	jne	0x00017a5d
0000000000017a0b	movq	0x0008fc7e(%rip),%rsi
0000000000017a12	movq	%rbx,%rdi
0000000000017a15	call	*0x0006c6bd(%rip)
0000000000017a1b	movq	0x0008d846(%rip),%rsi
0000000000017a22	movq	%rbx,%rdi
0000000000017a25	call	*0x0006c6ad(%rip)
0000000000017a2b	movq	0x0008e3ae(%rip),%rsi
0000000000017a32	movq	0x0008fc5f(%rip),%rdx
0000000000017a39	movq	%rax,%rdi
0000000000017a3c	movq	0x0006c695(%rip),%rax
0000000000017a43	addq	$0x08,%rsp
0000000000017a47	popq	%rbx
0000000000017a48	popq	%r14
0000000000017a4a	popq	%r15
0000000000017a4c	popq	%rbp
0000000000017a4d	jmp	*%rax
0000000000017a4f	cmpl	$0x01,%eax
0000000000017a52	je	0x00017a5d
0000000000017a54	movq	0x0008d7d5(%rip),%rsi
0000000000017a5b	jmp	0x000179e3
0000000000017a5d	addq	$0x08,%rsp
0000000000017a61	popq	%rbx
0000000000017a62	popq	%r14
0000000000017a64	popq	%r15
0000000000017a66	popq	%rbp
0000000000017a67	ret
-[PBXLSModel removeAllChildren]:
0000000000017a68	pushq	%rbp
0000000000017a69	movq	%rsp,%rbp
0000000000017a6c	pushq	%rbx
0000000000017a6d	pushq	%rax
0000000000017a6e	movq	%rdi,%rbx
0000000000017a71	movq	0x0008dc10(%rip),%rsi
0000000000017a78	call	*0x0006c65a(%rip)
0000000000017a7e	leaq	0x0009088b(%rip),%rsi
0000000000017a85	movq	%rax,%rdi
0000000000017a88	call	*0x00090882(%rip)
0000000000017a8e	testq	%rax,%rax
0000000000017a91	jne	0x00017a9a
0000000000017a93	addq	$0x08,%rsp
0000000000017a97	popq	%rbx
0000000000017a98	popq	%rbp
0000000000017a99	ret
0000000000017a9a	movq	0x0008fa67(%rip),%rsi
0000000000017aa1	movq	%rbx,%rdi
0000000000017aa4	call	*0x0006c62e(%rip)
0000000000017aaa	movq	0x0008fa5f(%rip),%rsi
0000000000017ab1	movq	0x0008f8c8(%rip),%rdx
0000000000017ab8	movq	%rax,%rdi
0000000000017abb	xorl	%ecx,%ecx
0000000000017abd	call	*0x0006c615(%rip)
0000000000017ac3	movq	0x0008fa3e(%rip),%rsi
0000000000017aca	movq	%rbx,%rdi
0000000000017acd	call	*0x0006c605(%rip)
0000000000017ad3	movq	0x0008d576(%rip),%rsi
0000000000017ada	movq	%rax,%rdi
0000000000017add	movq	0x0006c5f4(%rip),%rax
0000000000017ae4	addq	$0x08,%rsp
0000000000017ae8	popq	%rbx
0000000000017ae9	popq	%rbp
0000000000017aea	jmp	*%rax
-[PBXGDB_UpdateStackSequence execute]:
0000000000017aec	pushq	%rbp
0000000000017aed	movq	%rsp,%rbp
0000000000017af0	pushq	%r15
0000000000017af2	pushq	%r14
0000000000017af4	pushq	%r12
0000000000017af6	pushq	%rbx
0000000000017af7	subq	$0x30,%rsp
0000000000017afb	movq	%rdi,%rbx
0000000000017afe	movq	%rbx,0xd8(%rbp)
0000000000017b02	movq	%rsi,0xd0(%rbp)
0000000000017b06	movq	0x0008cfab(%rip),%rsi
0000000000017b0d	movq	0x0006c5c4(%rip),%r12
0000000000017b14	call	*%r12
0000000000017b17	movq	%rax,%r14
0000000000017b1a	movq	0x0008d2cf(%rip),%rsi
0000000000017b21	movq	%r14,%rdi
0000000000017b24	call	*%r12
0000000000017b27	movq	%rax,%r15
0000000000017b2a	movq	0x0008e027(%rip),%rsi
0000000000017b31	movq	%rbx,%rdi
0000000000017b34	call	*%r12
0000000000017b37	movq	0x0008e102(%rip),%rsi
0000000000017b3e	movq	%r15,%rdi
0000000000017b41	movq	%rax,%rdx
0000000000017b44	call	*%r12
0000000000017b47	movq	0x000974fa(%rip),%rdx
0000000000017b4e	movq	%rax,%rdi
0000000000017b51	movq	%rbx,%rsi
0000000000017b54	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000017b59	movq	0x000974f8(%rip),%rdx
0000000000017b60	xorl	%edi,%edi
0000000000017b62	movq	%rbx,%rsi
0000000000017b65	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000017b6a	movq	0x000974f7(%rip),%rax
0000000000017b71	movq	$0x00000000,(%rbx,%rax)
0000000000017b79	movq	0x000974c8(%rip),%rax
0000000000017b80	cmpq	$0x00,(%rbx,%rax)
0000000000017b85	jne	0x00017b9b
0000000000017b87	movq	0x0008cfaa(%rip),%rsi
0000000000017b8e	movq	%rbx,%rdi
0000000000017b91	call	*0x0006c541(%rip)
0000000000017b97	movq	0xd8(%rbp),%rbx
0000000000017b9b	movq	$0x7fffffffffffffff,%rax
0000000000017ba5	movq	0x0009746c(%rip),%rcx
0000000000017bac	cmpq	%rax,(%rbx,%rcx)
0000000000017bb0	jne	0x00017cb2
0000000000017bb6	movq	0x0008cf03(%rip),%rsi
0000000000017bbd	movq	0x0006c514(%rip),%r15
0000000000017bc4	movq	%r14,%rdi
0000000000017bc7	call	*%r15
0000000000017bca	movq	0x0008de27(%rip),%rsi
0000000000017bd1	leaq	0x0009c640(%rip),%rdx
0000000000017bd8	movq	%rax,%rdi
0000000000017bdb	call	*%r15
0000000000017bde	cmpl	$0x02,%eax
0000000000017be1	je	0x00017c5a
0000000000017be3	testl	%eax,%eax
0000000000017be5	jne	0x00017c63
0000000000017be7	movq	0x0008ce92(%rip),%rsi
0000000000017bee	movq	0x00090b13(%rip),%rdi
0000000000017bf5	movq	0x0006c4dc(%rip),%r15
0000000000017bfc	call	*%r15
0000000000017bff	movq	%rax,%rbx
0000000000017c02	movq	0x0008ddf7(%rip),%rsi
0000000000017c09	leaq	0x0009c608(%rip),%rdx
0000000000017c10	movq	%rbx,%rdi
0000000000017c13	call	*%r15
0000000000017c16	movq	0x0008ce6b(%rip),%rsi
0000000000017c1d	movq	0xd8(%rbp),%rdx
0000000000017c21	movq	%rbx,%rdi
0000000000017c24	call	*%r15
0000000000017c27	movq	0x0008ce6a(%rip),%rsi
0000000000017c2e	movq	0x0008f21b(%rip),%rdx
0000000000017c35	movq	%rbx,%rdi
0000000000017c38	call	*%r15
0000000000017c3b	movq	0x0008ce7e(%rip),%rsi
0000000000017c42	movq	%r14,%rdi
0000000000017c45	call	*%r15
0000000000017c48	movq	0x0008ce79(%rip),%rsi
0000000000017c4f	movq	%rax,%rdi
0000000000017c52	movq	%rbx,%rdx
0000000000017c55	call	*%r15
0000000000017c58	jmp	0x00017cc2
0000000000017c5a	movq	0x0008f1e7(%rip),%rsi
0000000000017c61	jmp	0x00017cb9
0000000000017c63	leaq	0x0009c58e(%rip),%rax
0000000000017c6a	leaq	0x00097bc7(%rip),%rcx
0000000000017c71	leaq	0x0004565a(%rip),%rdx
0000000000017c78	movq	%rdx,0x10(%rsp)
0000000000017c7d	movq	%rcx,0x08(%rsp)
0000000000017c82	movq	%rax,(%rsp)
0000000000017c86	leaq	0xd8(%rbp),%rdi
0000000000017c8a	leaq	0xd0(%rbp),%rsi
0000000000017c8e	leaq	0x00049cd5(%rip),%rdx
0000000000017c95	leaq	0x00049652(%rip),%rcx
0000000000017c9c	leaq	0x0009c595(%rip),%r9
0000000000017ca3	movl	$0x000003be,%r8d
0000000000017ca9	xorb	%al,%al
0000000000017cab	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000017cb0	jmp	0x00017cc2
0000000000017cb2	movq	0x0008efc7(%rip),%rsi
0000000000017cb9	movq	%rbx,%rdi
0000000000017cbc	call	*0x0006c416(%rip)
0000000000017cc2	addq	$0x30,%rsp
0000000000017cc6	popq	%rbx
0000000000017cc7	popq	%r12
0000000000017cc9	popq	%r14
0000000000017ccb	popq	%r15
0000000000017ccd	popq	%rbp
0000000000017cce	ret
-[PBXGDB_BaseThreadSequence threadHandle]:
0000000000017ccf	pushq	%rbp
0000000000017cd0	movq	%rsp,%rbp
0000000000017cd3	movq	0x000972f6(%rip),%rax
0000000000017cda	movq	(%rdi,%rax),%rax
0000000000017cde	popq	%rbp
0000000000017cdf	ret
-[PBXGDB_UpdateStackSequence _gotListFramesLiteVerify:]:
0000000000017ce0	pushq	%rbp
0000000000017ce1	movq	%rsp,%rbp
0000000000017ce4	pushq	%r14
0000000000017ce6	pushq	%rbx
0000000000017ce7	subq	$0x40,%rsp
0000000000017ceb	movq	%rdx,%r14
0000000000017cee	movq	%rdi,0xe8(%rbp)
0000000000017cf2	movq	%rsi,0xe0(%rbp)
0000000000017cf6	testq	%r14,%r14
0000000000017cf9	jne	0x00017d61
0000000000017cfb	movq	0x00090a06(%rip),%rdi
0000000000017d02	leaq	0x00090627(%rip),%rsi
0000000000017d09	call	*0x00090621(%rip)
0000000000017d0f	movq	%rax,%rdi
0000000000017d12	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000017d17	leaq	0xe8(%rbp),%rdi
0000000000017d1b	leaq	0xe0(%rbp),%rsi
0000000000017d1f	leaq	0x00049bb7(%rip),%rdx
0000000000017d26	leaq	0x000495c1(%rip),%rcx
0000000000017d2d	leaq	0x00097c84(%rip),%r9
0000000000017d34	leaq	-[PBXLSDebuggerAdaptor threadRequest:stepUntilLineNumber:](%rip),%r8
0000000000017d3b	leaq	0x00045dc2(%rip),%rbx
0000000000017d42	movq	%rbx,0x18(%rsp)
0000000000017d47	leaq	0x00097aea(%rip),%rbx
0000000000017d4e	movq	%rbx,0x10(%rsp)
0000000000017d53	movq	%rax,0x08(%rsp)
0000000000017d58	movq	%r8,(%rsp)
0000000000017d5c	jmp	0x00017e09
0000000000017d61	movq	0x000909a0(%rip),%rdi
0000000000017d68	leaq	0x000905c1(%rip),%rsi
0000000000017d6f	call	*0x000905bb(%rip)
0000000000017d75	leaq	0x000905c4(%rip),%rsi
0000000000017d7c	movq	%r14,%rdi
0000000000017d7f	movq	%rax,%rdx
0000000000017d82	call	*0x000905b8(%rip)
0000000000017d88	testb	%al,%al
0000000000017d8a	jne	0x00017e16
0000000000017d90	movq	0x00090971(%rip),%rdi
0000000000017d97	leaq	0x00090592(%rip),%rsi
0000000000017d9e	call	*0x0009058c(%rip)
0000000000017da4	movq	%rax,%rdi
0000000000017da7	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000017dac	movq	%rax,%rbx
0000000000017daf	movq	0x0008ceaa(%rip),%rsi
0000000000017db6	movq	%r14,%rdi
0000000000017db9	call	*0x0006c319(%rip)
0000000000017dbf	leaq	0x00097a72(%rip),%r8
0000000000017dc6	leaq	0x000464ca(%rip),%r9
0000000000017dcd	leaq	0xe8(%rbp),%rdi
0000000000017dd1	leaq	0xe0(%rbp),%rsi
0000000000017dd5	leaq	0x00049b01(%rip),%rdx
0000000000017ddc	leaq	0x0004950b(%rip),%rcx
0000000000017de3	movq	%r9,0x20(%rsp)
0000000000017de8	leaq	0x00097be9(%rip),%r9
0000000000017def	movq	%r8,0x18(%rsp)
0000000000017df4	movq	%rax,0x10(%rsp)
0000000000017df9	leaq	0x00045d00(%rip),%rax
0000000000017e00	movq	%rbx,0x08(%rsp)
0000000000017e05	movq	%rax,(%rsp)
0000000000017e09	movl	$0x00000391,%r8d
0000000000017e0f	xorb	%al,%al
0000000000017e11	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000017e16	movq	0x0008dc23(%rip),%rsi
0000000000017e1d	movq	%r14,%rdi
0000000000017e20	call	*0x0006c2b2(%rip)
0000000000017e26	movl	$0x00000001,%ebx
0000000000017e2b	testb	%al,%al
0000000000017e2d	je	0x00017e49
0000000000017e2f	movq	0x0008dc12(%rip),%rsi
0000000000017e36	movq	%r14,%rdi
0000000000017e39	call	*0x0006c299(%rip)
0000000000017e3f	cmpb	$0x01,%al
0000000000017e41	movl	$0x00000001,%ebx
0000000000017e46	sbbl	$0xff,%ebx
0000000000017e49	movq	0x0008cc68(%rip),%rsi
0000000000017e50	movq	0xe8(%rbp),%rdi
0000000000017e54	movq	0x0006c27d(%rip),%r14
0000000000017e5b	call	*%r14
0000000000017e5e	movq	0x0008cc5b(%rip),%rsi
0000000000017e65	movq	%rax,%rdi
0000000000017e68	call	*%r14
0000000000017e6b	leaq	0x0009c3a6(%rip),%rcx
0000000000017e72	movq	0x0008dbd7(%rip),%rsi
0000000000017e79	movq	%rax,%rdi
0000000000017e7c	movl	%ebx,%edx
0000000000017e7e	call	*%r14
0000000000017e81	cmpl	$0x02,%ebx
0000000000017e84	jne	0x00017e99
0000000000017e86	movq	0x0008efbb(%rip),%rsi
0000000000017e8d	movq	0xe8(%rbp),%rdi
0000000000017e91	call	*0x0006c241(%rip)
0000000000017e97	jmp	0x00017ee6
0000000000017e99	leaq	0x0009c358(%rip),%rax
0000000000017ea0	leaq	0x00097991(%rip),%rcx
0000000000017ea7	leaq	0x00045424(%rip),%rdx
0000000000017eae	movq	%rdx,0x10(%rsp)
0000000000017eb3	movq	%rcx,0x08(%rsp)
0000000000017eb8	movq	%rax,(%rsp)
0000000000017ebc	leaq	0xe8(%rbp),%rdi
0000000000017ec0	leaq	0xe0(%rbp),%rsi
0000000000017ec4	leaq	0x00049a12(%rip),%rdx
0000000000017ecb	leaq	0x0004941c(%rip),%rcx
0000000000017ed2	leaq	0x0009c35f(%rip),%r9
0000000000017ed9	movl	$0x0000039e,%r8d
0000000000017edf	xorb	%al,%al
0000000000017ee1	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000017ee6	addq	$0x40,%rsp
0000000000017eea	popq	%rbx
0000000000017eeb	popq	%r14
0000000000017eed	popq	%rbp
0000000000017eee	ret
-[PBXGDB_UpdateStackSequence _startUpdateStackSequence]:
0000000000017eef	pushq	%rbp
0000000000017ef0	movq	%rsp,%rbp
0000000000017ef3	pushq	%r15
0000000000017ef5	pushq	%r14
0000000000017ef7	pushq	%rbx
0000000000017ef8	pushq	%rax
0000000000017ef9	movq	%rdi,%rbx
0000000000017efc	movq	0x0008cb7d(%rip),%rsi
0000000000017f03	movq	0x00090b2e(%rip),%rdi
0000000000017f0a	movq	0x0006c1c7(%rip),%r15
0000000000017f11	call	*%r15
0000000000017f14	movq	%rax,%r14
0000000000017f17	movq	0x00097132(%rip),%rax
0000000000017f1e	movb	$0x00,(%rbx,%rax)
0000000000017f22	movsbl	(%rbx,%rax),%edx
0000000000017f26	movq	0x0008ed5b(%rip),%rsi
0000000000017f2d	movq	%r14,%rdi
0000000000017f30	call	*%r15
0000000000017f33	movq	0x000970ce(%rip),%rax
0000000000017f3a	movq	(%rbx,%rax),%rdx
0000000000017f3e	movq	0x0008eef3(%rip),%rsi
0000000000017f45	movq	%r14,%rdi
0000000000017f48	call	*%r15
0000000000017f4b	movq	$0x7fffffffffffffff,%rax
0000000000017f55	movq	0x000970c4(%rip),%rcx
0000000000017f5c	movq	(%rbx,%rcx),%rcx
0000000000017f60	movq	0x000970a1(%rip),%rdx
0000000000017f67	movq	(%rbx,%rdx),%rdx
0000000000017f6b	leaq	0xff(%rdx,%rcx),%rdx
0000000000017f70	movq	0x00097099(%rip),%rcx
0000000000017f77	movq	(%rbx,%rcx),%rcx
0000000000017f7b	cmpq	%rax,%rcx
0000000000017f7e	je	0x00017f87
0000000000017f80	cmpq	%rdx,%rcx
0000000000017f83	cmovbq	%rcx,%rdx
0000000000017f87	movq	0x0008ed0a(%rip),%rsi
0000000000017f8e	movq	%r14,%rdi
0000000000017f91	call	*0x0006c141(%rip)
0000000000017f97	movq	0x0008caea(%rip),%rsi
0000000000017f9e	movq	%r14,%rdi
0000000000017fa1	movq	%rbx,%rdx
0000000000017fa4	call	*0x0006c12e(%rip)
0000000000017faa	movq	0x0008cae7(%rip),%rsi
0000000000017fb1	movq	0x0008ee88(%rip),%rdx
0000000000017fb8	movq	%r14,%rdi
0000000000017fbb	call	*0x0006c117(%rip)
0000000000017fc1	movq	0x0008db90(%rip),%rsi
0000000000017fc8	movq	%rbx,%rdi
0000000000017fcb	call	*0x0006c107(%rip)
0000000000017fd1	movq	0x0008cad0(%rip),%rsi
0000000000017fd8	movq	%r14,%rdi
0000000000017fdb	movq	%rax,%rdx
0000000000017fde	call	*0x0006c0f4(%rip)
0000000000017fe4	movq	0x0008cacd(%rip),%rsi
0000000000017feb	movq	%rbx,%rdi
0000000000017fee	call	*0x0006c0e4(%rip)
0000000000017ff4	movq	0x0008cac5(%rip),%rsi
0000000000017ffb	movq	%rax,%rdi
0000000000017ffe	call	*0x0006c0d4(%rip)
0000000000018004	movq	0x0008cabd(%rip),%rsi
000000000001800b	movq	%rax,%rdi
000000000001800e	movq	%r14,%rdx
0000000000018011	movq	0x0006c0c0(%rip),%rax
0000000000018018	addq	$0x08,%rsp
000000000001801c	popq	%rbx
000000000001801d	popq	%r14
000000000001801f	popq	%r15
0000000000018021	popq	%rbp
0000000000018022	jmp	*%rax
-[PBXGDB_MILiteStackFramesCommand initWithSequenceNumber:]:
0000000000018024	pushq	%rbp
0000000000018025	movq	%rsp,%rbp
0000000000018028	subq	$0x10,%rsp
000000000001802c	movq	%rdi,0xf0(%rbp)
0000000000018030	movq	0x00090ea9(%rip),%rax
0000000000018037	movq	%rax,0xf8(%rbp)
000000000001803b	movq	0x0008e1ee(%rip),%rsi
0000000000018042	leaq	0xf0(%rbp),%rdi
0000000000018046	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000001804b	testq	%rax,%rax
000000000001804e	je	0x00018070
0000000000018050	movq	0x00096db1(%rip),%rcx
0000000000018057	movb	$0x01,(%rax,%rcx)
000000000001805b	movq	$0x7fffffffffffffff,%rcx
0000000000018065	movq	0x00096da4(%rip),%rdx
000000000001806c	movq	%rcx,(%rax,%rdx)
0000000000018070	addq	$0x10,%rsp
0000000000018074	popq	%rbp
0000000000018075	ret
-[PBXGDB_MILiteStackFramesCommand setShouldUseStartFlag:]:
0000000000018076	pushq	%rbp
0000000000018077	movq	%rsp,%rbp
000000000001807a	movq	0x00096d87(%rip),%rax
0000000000018081	movb	%dl,(%rdi,%rax)
0000000000018084	popq	%rbp
0000000000018085	ret
-[PBXGDB_MILiteStackFramesCommand setStartIndex:]:
0000000000018086	pushq	%rbp
0000000000018087	movq	%rsp,%rbp
000000000001808a	movq	0x00096dbf(%rip),%rax
0000000000018091	movq	%rdx,(%rdi,%rax)
0000000000018095	popq	%rbp
0000000000018096	ret
-[PBXGDB_MILiteStackFramesCommand setEndIndex:]:
0000000000018097	pushq	%rbp
0000000000018098	movq	%rsp,%rbp
000000000001809b	movq	0x00096db6(%rip),%rax
00000000000180a2	movq	%rdx,(%rdi,%rax)
00000000000180a6	popq	%rbp
00000000000180a7	ret
-[PBXGDB_MICommand setThreadIdContext:]:
00000000000180a8	pushq	%rbp
00000000000180a9	movq	%rsp,%rbp
00000000000180ac	movq	0x00096a45(%rip),%rax
00000000000180b3	movq	%rdx,(%rdi,%rax)
00000000000180b7	popq	%rbp
00000000000180b8	ret
-[PBXGDB_MILiteStackFramesCommand GDBCommandString]:
00000000000180b9	pushq	%rbp
00000000000180ba	movq	%rsp,%rbp
00000000000180bd	pushq	%r15
00000000000180bf	pushq	%r14
00000000000180c1	pushq	%rbx
00000000000180c2	subq	$0x28,%rsp
00000000000180c6	movq	%rdi,0xe0(%rbp)
00000000000180ca	movq	%rsi,0xd8(%rbp)
00000000000180ce	movq	0x00096d33(%rip),%rax
00000000000180d5	cmpb	$0x00,(%rdi,%rax)
00000000000180d9	je	0x00018139
00000000000180db	movq	0x0009036e(%rip),%rdi
00000000000180e2	leaq	0x000901f7(%rip),%rsi
00000000000180e9	call	*0x000901f1(%rip)
00000000000180ef	movq	%rax,%r14
00000000000180f2	movq	0x0008e64f(%rip),%rsi
00000000000180f9	movq	0xe0(%rbp),%rdi
00000000000180fd	movq	0x0006bfd4(%rip),%r15
0000000000018104	call	*%r15
0000000000018107	movq	%rax,%rbx
000000000001810a	movq	0x0008e63f(%rip),%rsi
0000000000018111	movq	0xe0(%rbp),%rdi
0000000000018115	call	*%r15
0000000000018118	leaq	0x0009ae99(%rip),%rdx
000000000001811f	movq	0x0008cb92(%rip),%rsi
0000000000018126	movq	%r14,%rdi
0000000000018129	movq	%rbx,%rcx
000000000001812c	movq	%rax,%r8
000000000001812f	xorb	%al,%al
0000000000018131	call	*%r15
0000000000018134	jmp	0x000181d2
0000000000018139	movq	0x0008e608(%rip),%rsi
0000000000018140	call	*0x0006bf92(%rip)
0000000000018146	testq	%rax,%rax
0000000000018149	je	0x0001818c
000000000001814b	leaq	0x000976e6(%rip),%rax
0000000000018152	leaq	0x0004831f(%rip),%rcx
0000000000018159	movq	%rcx,0x08(%rsp)
000000000001815e	movq	%rax,(%rsp)
0000000000018162	leaq	0xe0(%rbp),%rdi
0000000000018166	leaq	0xd8(%rbp),%rsi
000000000001816a	leaq	0x0004829b(%rip),%rdx
0000000000018171	leaq	0x00048076(%rip),%rcx
0000000000018178	leaq	0x0009ae59(%rip),%r9
000000000001817f	movl	$0x000001d4,%r8d
0000000000018185	xorb	%al,%al
0000000000018187	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000001818c	movq	0x000902bd(%rip),%rdi
0000000000018193	leaq	0x00090146(%rip),%rsi
000000000001819a	call	*0x00090140(%rip)
00000000000181a0	movq	%rax,%rbx
00000000000181a3	movq	0x0008e5a6(%rip),%rsi
00000000000181aa	movq	0xe0(%rbp),%rdi
00000000000181ae	movq	0x0006bf23(%rip),%r14
00000000000181b5	call	*%r14
00000000000181b8	leaq	0x01(%rax),%rcx
00000000000181bc	leaq	0x0009ae35(%rip),%rdx
00000000000181c3	movq	0x0008caee(%rip),%rsi
00000000000181ca	movq	%rbx,%rdi
00000000000181cd	xorb	%al,%al
00000000000181cf	call	*%r14
00000000000181d2	leaq	0x00096957(%rip),%rcx
00000000000181d9	movq	(%rcx),%rdx
00000000000181dc	movq	0xe0(%rbp),%rsi
00000000000181e0	movq	%rax,%rdi
00000000000181e3	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000181e8	leaq	0x00096941(%rip),%rax
00000000000181ef	movq	(%rax),%rax
00000000000181f2	movq	0xe0(%rbp),%rcx
00000000000181f6	movq	(%rcx,%rax),%rax
00000000000181fa	addq	$0x28,%rsp
00000000000181fe	popq	%rbx
00000000000181ff	popq	%r14
0000000000018201	popq	%r15
0000000000018203	popq	%rbp
0000000000018204	ret
-[PBXGDB_MILiteStackFramesCommand startIndex]:
0000000000018205	pushq	%rbp
0000000000018206	movq	%rsp,%rbp
0000000000018209	movq	0x00096c40(%rip),%rax
0000000000018210	movq	(%rdi,%rax),%rax
0000000000018214	popq	%rbp
0000000000018215	ret
-[PBXGDB_MILiteStackFramesCommand endIndex]:
0000000000018216	pushq	%rbp
0000000000018217	movq	%rsp,%rbp
000000000001821a	movq	0x00096c37(%rip),%rax
0000000000018221	movq	(%rdi,%rax),%rax
0000000000018225	popq	%rbp
0000000000018226	ret
-[PBXGDB_MILiteStackFramesCommand didFinishWithResultList:]:
0000000000018227	pushq	%rbp
0000000000018228	movq	%rsp,%rbp
000000000001822b	pushq	%r15
000000000001822d	pushq	%r14
000000000001822f	pushq	%r12
0000000000018231	pushq	%rbx
0000000000018232	subq	$0x10,%rsp
0000000000018236	movq	%rdx,%r14
0000000000018239	movq	%rdi,%rbx
000000000001823c	movq	0x0008c895(%rip),%rsi
0000000000018243	leaq	0x00097c2e(%rip),%rdx
000000000001824a	movq	%r14,%rdi
000000000001824d	call	*0x0006be85(%rip)
0000000000018253	movq	%rax,%r15
0000000000018256	movq	0x00096bbb(%rip),%rax
000000000001825d	movq	$0x00000000,(%rbx,%rax)
0000000000018265	movq	0x00096bb4(%rip),%rax
000000000001826c	movq	$0x00000000,(%rbx,%rax)
0000000000018274	movq	0x00096bad(%rip),%rdx
000000000001827b	xorl	%edi,%edi
000000000001827d	movq	%rbx,%rsi
0000000000018280	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000018285	movq	0x00096ba4(%rip),%rdx
000000000001828c	xorl	%edi,%edi
000000000001828e	movq	%rbx,%rsi
0000000000018291	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000018296	movq	0x00096b9b(%rip),%rdx
000000000001829d	xorl	%edi,%edi
000000000001829f	movq	%rbx,%rsi
00000000000182a2	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000182a7	movq	0x00096b92(%rip),%rdx
00000000000182ae	xorl	%edi,%edi
00000000000182b0	movq	%rbx,%rsi
00000000000182b3	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000182b8	testq	%r15,%r15
00000000000182bb	je	0x0001840e
00000000000182c1	movq	0x0008c840(%rip),%rsi
00000000000182c8	movq	0x0006be09(%rip),%r12
00000000000182cf	movq	%r15,%rdi
00000000000182d2	call	*%r12
00000000000182d5	movq	0x0008d004(%rip),%rsi
00000000000182dc	movq	%rax,%rdi
00000000000182df	call	*%r12
00000000000182e2	cmpq	$0x01,%rax
00000000000182e6	jne	0x0001840e
00000000000182ec	movq	0x00096b2d(%rip),%rax
00000000000182f3	movq	$0x00000001,(%rbx,%rax)
00000000000182fb	movq	0x0008c7d6(%rip),%rsi
0000000000018302	leaq	0x00097c6f(%rip),%rdx
0000000000018309	movq	%r14,%rdi
000000000001830c	call	*0x0006bdc6(%rip)
0000000000018312	testq	%rax,%rax
0000000000018315	je	0x00018515
000000000001831b	movq	0x0008c7e6(%rip),%rsi
0000000000018322	movq	0x0006bdaf(%rip),%r15
0000000000018329	movq	%rax,%rdi
000000000001832c	call	*%r15
000000000001832f	movq	0x0008cfaa(%rip),%rsi
0000000000018336	movq	%rax,%rdi
0000000000018339	call	*%r15
000000000001833c	leaq	0x00097955(%rip),%rdx
0000000000018343	movq	0x00096ace(%rip),%rcx
000000000001834a	movq	%rax,(%rbx,%rcx)
000000000001834e	movq	0x0008c783(%rip),%rsi
0000000000018355	movq	%r14,%rdi
0000000000018358	call	*%r15
000000000001835b	testq	%rax,%rax
000000000001835e	je	0x00018515
0000000000018364	movq	0x0008c775(%rip),%rsi
000000000001836b	movq	0x0006bd66(%rip),%r15
0000000000018372	movq	%rax,%rdi
0000000000018375	call	*%r15
0000000000018378	movq	0x00096ab1(%rip),%rdx
000000000001837f	movq	%rax,%rdi
0000000000018382	movq	%rbx,%rsi
0000000000018385	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001838a	movq	0x00096a9f(%rip),%rax
0000000000018391	movq	(%rbx,%rax),%rdi
0000000000018395	movq	0x0008c74c(%rip),%rsi
000000000001839c	call	*%r15
000000000001839f	movq	0x00096a82(%rip),%rdx
00000000000183a6	movq	%rax,%rdi
00000000000183a9	movq	%rbx,%rsi
00000000000183ac	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000183b1	leaq	0x0008ff58(%rip),%rsi
00000000000183b8	movq	0x00096a69(%rip),%rax
00000000000183bf	movq	(%rbx,%rax),%rdi
00000000000183c3	call	*0x0008ff47(%rip)
00000000000183c9	testq	%rax,%rax
00000000000183cc	je	0x00018515
00000000000183d2	movq	0x0008e36f(%rip),%rsi
00000000000183d9	movq	%rbx,%rdi
00000000000183dc	call	*0x0006bcf6(%rip)
00000000000183e2	movq	%rax,%r15
00000000000183e5	movq	0x00096a3c(%rip),%rax
00000000000183ec	movq	(%rbx,%rax),%rdi
00000000000183f0	leaq	0x0008ff19(%rip),%rsi
00000000000183f7	call	*0x0008ff13(%rip)
00000000000183fd	leaq	0xff(%r15,%rax),%rax
0000000000018402	movq	0x00096a07(%rip),%rcx
0000000000018409	jmp	0x00018511
000000000001840e	movq	0x0008c6c3(%rip),%rsi
0000000000018415	leaq	0x0009787c(%rip),%rdx
000000000001841c	movq	%r14,%rdi
000000000001841f	call	*0x0006bcb3(%rip)
0000000000018425	testq	%rax,%rax
0000000000018428	je	0x00018515
000000000001842e	movq	0x000969eb(%rip),%rcx
0000000000018435	movq	$0x00000001,(%rbx,%rcx)
000000000001843d	movq	0x0008c69c(%rip),%rsi
0000000000018444	movq	0x0006bc8d(%rip),%r15
000000000001844b	movq	%rax,%rdi
000000000001844e	call	*%r15
0000000000018451	movq	0x000969d8(%rip),%rdx
0000000000018458	movq	%rax,%rdi
000000000001845b	movq	%rbx,%rsi
000000000001845e	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000018463	movq	0x000969c6(%rip),%rax
000000000001846a	movq	(%rbx,%rax),%rdi
000000000001846e	movq	0x0008c673(%rip),%rsi
0000000000018475	call	*%r15
0000000000018478	movq	0x000969a9(%rip),%rdx
000000000001847f	movq	%rax,%rdi
0000000000018482	movq	%rbx,%rsi
0000000000018485	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001848a	leaq	0x0008fe7f(%rip),%rsi
0000000000018491	movq	0x00096990(%rip),%rax
0000000000018498	movq	(%rbx,%rax),%rdi
000000000001849c	call	*0x0008fe6e(%rip)
00000000000184a2	testq	%rax,%rax
00000000000184a5	je	0x000184e2
00000000000184a7	movq	0x0008e29a(%rip),%rsi
00000000000184ae	movq	%rbx,%rdi
00000000000184b1	call	*0x0006bc21(%rip)
00000000000184b7	movq	%rax,%r15
00000000000184ba	movq	0x00096967(%rip),%rax
00000000000184c1	movq	(%rbx,%rax),%rdi
00000000000184c5	leaq	0x0008fe44(%rip),%rsi
00000000000184cc	call	*0x0008fe3e(%rip)
00000000000184d2	leaq	0xff(%r15,%rax),%rax
00000000000184d7	movq	0x00096932(%rip),%rcx
00000000000184de	movq	%rax,(%rbx,%rcx)
00000000000184e2	movq	0x00096947(%rip),%rax
00000000000184e9	movq	(%rbx,%rax),%rdi
00000000000184ed	movq	0x0008c5f4(%rip),%rsi
00000000000184f4	call	*0x0006bbde(%rip)
00000000000184fa	leaq	0x0008fe0f(%rip),%rsi
0000000000018501	movq	%rax,%rdi
0000000000018504	call	*0x0008fe06(%rip)
000000000001850a	movq	0x00096907(%rip),%rcx
0000000000018511	movq	%rax,(%rbx,%rcx)
0000000000018515	movq	%rbx,0xd0(%rbp)
0000000000018519	movq	0x000909c0(%rip),%rax
0000000000018520	movq	%rax,0xd8(%rbp)
0000000000018524	movq	0x0008dcd5(%rip),%rsi
000000000001852b	leaq	0xd0(%rbp),%rdi
000000000001852f	movq	%r14,%rdx
0000000000018532	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000018537	addq	$0x10,%rsp
000000000001853b	popq	%rbx
000000000001853c	popq	%r12
000000000001853e	popq	%r14
0000000000018540	popq	%r15
0000000000018542	popq	%rbp
0000000000018543	ret
-[PBXGDB_UpdateStackSequence _gotLiteStackFramesInitial:]:
0000000000018544	pushq	%rbp
0000000000018545	movq	%rsp,%rbp
0000000000018548	pushq	%r15
000000000001854a	pushq	%r14
000000000001854c	pushq	%rbx
000000000001854d	subq	$0x38,%rsp
0000000000018551	movq	%rdx,%r15
0000000000018554	movq	%rdi,0xe0(%rbp)
0000000000018558	movq	%rsi,0xd8(%rbp)
000000000001855c	testq	%r15,%r15
000000000001855f	jne	0x000185c7
0000000000018561	movq	0x000904d0(%rip),%rdi
0000000000018568	leaq	0x0008fdc1(%rip),%rsi
000000000001856f	call	*0x0008fdbb(%rip)
0000000000018575	movq	%rax,%rdi
0000000000018578	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000001857d	leaq	0xe0(%rbp),%rdi
0000000000018581	leaq	0xd8(%rbp),%rsi
0000000000018585	leaq	0x000492d5(%rip),%rdx
000000000001858c	leaq	0x00048d5b(%rip),%rcx
0000000000018593	leaq	0x0009741e(%rip),%r9
000000000001859a	leaq	0x0004555f(%rip),%r8
00000000000185a1	leaq	0x0004555c(%rip),%rbx
00000000000185a8	movq	%rbx,0x18(%rsp)
00000000000185ad	leaq	0x00097284(%rip),%rbx
00000000000185b4	movq	%rbx,0x10(%rsp)
00000000000185b9	movq	%rax,0x08(%rsp)
00000000000185be	movq	%r8,(%rsp)
00000000000185c2	jmp	0x00018672
00000000000185c7	movq	0x0009046a(%rip),%rdi
00000000000185ce	leaq	0x0008fd5b(%rip),%rsi
00000000000185d5	call	*0x0008fd55(%rip)
00000000000185db	leaq	0x0008fd5e(%rip),%rsi
00000000000185e2	movq	%r15,%rdi
00000000000185e5	movq	%rax,%rdx
00000000000185e8	call	*0x0008fd52(%rip)
00000000000185ee	testb	%al,%al
00000000000185f0	movq	%r15,%rbx
00000000000185f3	jne	0x00018682
00000000000185f9	movq	0x00090438(%rip),%rdi
0000000000018600	leaq	0x0008fd29(%rip),%rsi
0000000000018607	call	*0x0008fd23(%rip)
000000000001860d	movq	%rax,%rdi
0000000000018610	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000018615	movq	%rax,%r14
0000000000018618	movq	0x0008c641(%rip),%rsi
000000000001861f	movq	%r15,%rdi
0000000000018622	call	*0x0006bab0(%rip)
0000000000018628	leaq	0x00097209(%rip),%r8
000000000001862f	leaq	0x00049265(%rip),%rbx
0000000000018636	leaq	0xe0(%rbp),%rdi
000000000001863a	leaq	0xd8(%rbp),%rsi
000000000001863e	leaq	0x0004921c(%rip),%rdx
0000000000018645	leaq	0x00048ca2(%rip),%rcx
000000000001864c	movq	%rbx,0x20(%rsp)
0000000000018651	leaq	0x00097380(%rip),%r9
0000000000018658	movq	%r8,0x18(%rsp)
000000000001865d	movq	%rax,0x10(%rsp)
0000000000018662	leaq	0x00045497(%rip),%rax
0000000000018669	movq	%r14,0x08(%rsp)
000000000001866e	movq	%rax,(%rsp)
0000000000018672	movl	$0x00000366,%r8d
0000000000018678	xorb	%al,%al
000000000001867a	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000001867f	movq	%r15,%rbx
0000000000018682	movq	0x0008e797(%rip),%rsi
0000000000018689	movq	%rbx,%rdi
000000000001868c	call	*0x0006ba46(%rip)
0000000000018692	testb	%al,%al
0000000000018694	je	0x000186b5
0000000000018696	movq	0x0008e75b(%rip),%rsi
000000000001869d	movq	%rbx,%rdi
00000000000186a0	call	*0x0006ba32(%rip)
00000000000186a6	movq	$0x7fffffffffffffff,%rcx
00000000000186b0	cmpq	%rcx,%rax
00000000000186b3	jne	0x000186c2
00000000000186b5	movq	0x0008c47c(%rip),%rsi
00000000000186bc	movq	0xe0(%rbp),%rdi
00000000000186c0	jmp	0x00018704
00000000000186c2	movq	0x0008e75f(%rip),%rsi
00000000000186c9	movq	0xe0(%rbp),%rdi
00000000000186cd	movq	%r15,%rdx
00000000000186d0	call	*0x0006ba02(%rip)
00000000000186d6	movq	0xe0(%rbp),%rdi
00000000000186da	testb	%al,%al
00000000000186dc	jne	0x000186e7
00000000000186de	movq	0x0008e6a3(%rip),%rsi
00000000000186e5	jmp	0x00018704
00000000000186e7	movq	0x00096962(%rip),%rax
00000000000186ee	cmpb	$0x00,(%rdi,%rax)
00000000000186f2	je	0x000186fd
00000000000186f4	movq	0x0008e735(%rip),%rsi
00000000000186fb	jmp	0x00018704
00000000000186fd	movq	0x0008e57c(%rip),%rsi
0000000000018704	call	*0x0006b9ce(%rip)
000000000001870a	addq	$0x38,%rsp
000000000001870e	popq	%rbx
000000000001870f	popq	%r14
0000000000018711	popq	%r15
0000000000018713	popq	%rbp
0000000000018714	ret
-[PBXGDB_MILiteStackFramesCommand infoIsValid]:
0000000000018715	pushq	%rbp
0000000000018716	movq	%rsp,%rbp
0000000000018719	movq	0x00096700(%rip),%rax
0000000000018720	movsbl	(%rdi,%rax),%eax
0000000000018724	popq	%rbp
0000000000018725	ret
-[PBXGDB_MILiteStackFramesCommand returnedEndIndex]:
0000000000018726	pushq	%rbp
0000000000018727	movq	%rsp,%rbp
000000000001872a	movq	0x000966df(%rip),%rax
0000000000018731	movq	(%rdi,%rax),%rax
0000000000018735	popq	%rbp
0000000000018736	ret
-[PBXGDB_UpdateStackSequence _reuseExistingFramesForFramesLiteCmd:]:
0000000000018737	pushq	%rbp
0000000000018738	movq	%rsp,%rbp
000000000001873b	pushq	%r15
000000000001873d	pushq	%r14
000000000001873f	pushq	%r13
0000000000018741	pushq	%r12
0000000000018743	pushq	%rbx
0000000000018744	subq	$0x38,%rsp
0000000000018748	movq	%rdx,0xc8(%rbp)
000000000001874c	movq	%rdi,%r15
000000000001874f	movq	%r15,0xd0(%rbp)
0000000000018753	movq	0x0008e686(%rip),%rsi
000000000001875a	movq	0x0006b977(%rip),%rbx
0000000000018761	movq	%rdx,%rdi
0000000000018764	call	*%rbx
0000000000018766	movq	0x000968fb(%rip),%rcx
000000000001876d	movq	%rax,(%r15,%rcx)
0000000000018771	movq	0x000968d0(%rip),%rax
0000000000018778	movq	(%r15,%rax),%rdi
000000000001877c	movq	0x0008cae5(%rip),%rsi
0000000000018783	call	*%rbx
0000000000018785	movq	%rax,%r12
0000000000018788	leaq	0x0008fb81(%rip),%rsi
000000000001878f	movq	0x000968d2(%rip),%rax
0000000000018796	movq	(%r15,%rax),%rbx
000000000001879a	movq	%r12,%rdi
000000000001879d	call	*0x0008fb6d(%rip)
00000000000187a3	movq	%rax,%r14
00000000000187a6	movq	%rbx,%rcx
00000000000187a9	subq	%r14,%rcx
00000000000187ac	jns	0x000187d3
00000000000187ae	movq	0x00096893(%rip),%rax
00000000000187b5	movq	(%r15,%rax),%rdi
00000000000187b9	movq	0x0008e628(%rip),%rsi
00000000000187c0	negq	%rcx
00000000000187c3	xorl	%edx,%edx
00000000000187c5	xorl	%r8d,%r8d
00000000000187c8	call	*0x0006b90a(%rip)
00000000000187ce	jmp	0x0001886d
00000000000187d3	testq	%rcx,%rcx
00000000000187d6	jle	0x0001886d
00000000000187dc	movq	%r12,0xc0(%rbp)
00000000000187e0	movq	0x00096881(%rip),%rax
00000000000187e7	movq	(%r15,%rax),%rdx
00000000000187eb	movq	0x0008ceae(%rip),%rsi
00000000000187f2	movq	0x0008fc67(%rip),%rdi
00000000000187f9	call	*0x0006b8d9(%rip)
00000000000187ff	movq	%rax,%r13
0000000000018802	cmpq	%r14,%rbx
0000000000018805	je	0x0001883c
0000000000018807	subq	%r14,%rbx
000000000001880a	movq	0x0008e467(%rip),%r14
0000000000018811	leaq	0x0008fae8(%rip),%r12
0000000000018818	movq	0x0008fdd9(%rip),%rdi
000000000001881f	movq	%r14,%rsi
0000000000018822	call	*0x0006b8b0(%rip)
0000000000018828	movq	%r13,%rdi
000000000001882b	movq	%r12,%rsi
000000000001882e	movq	%rax,%rdx
0000000000018831	call	*0x0008fac9(%rip)
0000000000018837	decq	%rbx
000000000001883a	jne	0x00018818
000000000001883c	movq	0x0008cc9d(%rip),%rsi
0000000000018843	movq	0x0006b88e(%rip),%rbx
000000000001884a	movq	%r13,%rdi
000000000001884d	movq	0xc0(%rbp),%rdx
0000000000018851	call	*%rbx
0000000000018853	movq	0x000967ee(%rip),%rax
000000000001885a	movq	(%r15,%rax),%rdi
000000000001885e	movq	0x0008e58b(%rip),%rsi
0000000000018865	movq	%r13,%rdx
0000000000018868	call	*%rbx
000000000001886a	movq	%r13,%r12
000000000001886d	movq	%r15,0xd0(%rbp)
0000000000018871	movq	0x0008c240(%rip),%rsi
0000000000018878	movq	0x0006b859(%rip),%r14
000000000001887f	movq	%r15,%rdi
0000000000018882	call	*%r14
0000000000018885	movq	%rax,0xb0(%rbp)
0000000000018889	movq	0x0008deb8(%rip),%rsi
0000000000018890	movq	0xc8(%rbp),%rbx
0000000000018894	movq	%rbx,%rdi
0000000000018897	call	*%r14
000000000001889a	movq	%rax,%r13
000000000001889d	movq	%r13,0xa8(%rbp)
00000000000188a1	movq	0x0008e550(%rip),%rsi
00000000000188a8	movq	%rbx,%rdi
00000000000188ab	call	*%r14
00000000000188ae	movq	0x00096763(%rip),%rcx
00000000000188b5	movq	%rax,(%r15,%rcx)
00000000000188b9	movq	(%r15,%rcx),%r14
00000000000188bd	cmpq	%r13,%r14
00000000000188c0	jge	0x000188cb
00000000000188c2	movq	0xd0(%rbp),%rbx
00000000000188c6	jmp	0x00018ab2
00000000000188cb	movq	%r12,0xb8(%rbp)
00000000000188cf	movq	0x0006b802(%rip),%r13
00000000000188d6	movq	0xb8(%rbp),%rdi
00000000000188da	leaq	0x0008fa3f(%rip),%rsi
00000000000188e1	movq	%r14,%rdx
00000000000188e4	call	*0x0008fa36(%rip)
00000000000188ea	movq	%rax,%r12
00000000000188ed	movq	%rbx,%rdi
00000000000188f0	movq	0x0008e509(%rip),%rsi
00000000000188f7	movq	%r14,%rdx
00000000000188fa	call	*%r13
00000000000188fd	movq	%r12,%rdi
0000000000018900	movq	0x0008e439(%rip),%rsi
0000000000018907	call	*%r13
000000000001890a	testb	%al,%al
000000000001890c	je	0x0001898a
000000000001890e	movq	0x0008fce3(%rip),%rdi
0000000000018915	leaq	0x0008f9c4(%rip),%rsi
000000000001891c	call	*0x0008f9be(%rip)
0000000000018922	movq	%rax,%rdi
0000000000018925	movq	0x0008c424(%rip),%rsi
000000000001892c	movq	0xb0(%rbp),%rdx
0000000000018930	call	*%r13
0000000000018933	movq	%r13,%r15
0000000000018936	movq	%rbx,%r13
0000000000018939	movq	%rax,%rbx
000000000001893c	movq	0x00096705(%rip),%rax
0000000000018943	movq	%r12,0xc0(%rbp)
0000000000018947	movq	%r14,%r12
000000000001894a	movq	0xd0(%rbp),%r14
000000000001894e	movq	(%r14,%rax),%rdi
0000000000018952	movq	0x0008e3f7(%rip),%rsi
0000000000018959	movq	%r12,%rdx
000000000001895c	movq	%rbx,%rcx
000000000001895f	xorl	%r8d,%r8d
0000000000018962	call	*%r15
0000000000018965	movq	%r14,%rdi
0000000000018968	movq	%r12,%r14
000000000001896b	movq	0xc0(%rbp),%r12
000000000001896f	movq	0x0008e492(%rip),%rsi
0000000000018976	movq	%r13,%rdx
0000000000018979	movq	%rbx,%rcx
000000000001897c	movq	%r13,%rbx
000000000001897f	movq	%r15,%r13
0000000000018982	call	*%r13
0000000000018985	jmp	0x00018a7f
000000000001898a	movq	%rbx,%rdi
000000000001898d	movq	0x0008e424(%rip),%rsi
0000000000018994	call	*%r13
0000000000018997	movq	%rbx,%rdi
000000000001899a	movq	%rax,%rbx
000000000001899d	movq	0x0008e41c(%rip),%rsi
00000000000189a4	call	*%r13
00000000000189a7	movq	%rax,%r15
00000000000189aa	movq	%r12,%rdi
00000000000189ad	movq	0x0008d50c(%rip),%rsi
00000000000189b4	call	*%r13
00000000000189b7	cmpq	%rbx,%rax
00000000000189ba	jne	0x000189d1
00000000000189bc	movq	%r12,%rdi
00000000000189bf	movq	0x0008e44a(%rip),%rsi
00000000000189c6	call	*0x0006b70c(%rip)
00000000000189cc	cmpq	%r15,%rax
00000000000189cf	je	0x00018a3c
00000000000189d1	movq	%r12,%rdi
00000000000189d4	movq	0x0008d50d(%rip),%rsi
00000000000189db	call	*%r13
00000000000189de	movq	%rax,%rbx
00000000000189e1	movq	0xc8(%rbp),%rdi
00000000000189e5	movq	0x0008e3c4(%rip),%rsi
00000000000189ec	call	*%r13
00000000000189ef	movq	%r13,%r15
00000000000189f2	movq	%rbx,%rdi
00000000000189f5	leaq	0x0008f964(%rip),%rsi
00000000000189fc	movq	%rax,%rdx
00000000000189ff	call	*0x0008f95b(%rip)
0000000000018a05	testb	%al,%al
0000000000018a07	movq	0xd0(%rbp),%rbx
0000000000018a0b	jne	0x00018a1d
0000000000018a0d	movq	%r12,%rdi
0000000000018a10	movq	0x0008e401(%rip),%rsi
0000000000018a17	call	*0x0006b6bb(%rip)
0000000000018a1d	movq	%rbx,%rdi
0000000000018a20	movq	0x0008e3e1(%rip),%rsi
0000000000018a27	movq	0xc8(%rbp),%rbx
0000000000018a2b	movq	%rbx,%rdx
0000000000018a2e	movq	%r12,%rcx
0000000000018a31	call	*0x0006b6a1(%rip)
0000000000018a37	movq	%r15,%r13
0000000000018a3a	jmp	0x00018a7f
0000000000018a3c	movq	%r12,%rdi
0000000000018a3f	movq	0x0008e302(%rip),%rsi
0000000000018a46	call	*%r13
0000000000018a49	movb	%al,%r15b
0000000000018a4c	movq	0xc8(%rbp),%rbx
0000000000018a50	movq	%rbx,%rdi
0000000000018a53	movq	0x0008e34e(%rip),%rsi
0000000000018a5a	call	*%r13
0000000000018a5d	cmpb	%al,%r15b
0000000000018a60	je	0x00018a7f
0000000000018a62	movq	%rbx,%rdi
0000000000018a65	movq	0x0008e33c(%rip),%rsi
0000000000018a6c	call	*%r13
0000000000018a6f	movsbl	%al,%edx
0000000000018a72	movq	%r12,%rdi
0000000000018a75	movq	0x0008c83c(%rip),%rsi
0000000000018a7c	call	*%r13
0000000000018a7f	movq	0xd0(%rbp),%rdi
0000000000018a83	movq	0x0008e2ee(%rip),%rsi
0000000000018a8a	movq	%r12,%rdx
0000000000018a8d	movq	%r14,%rcx
0000000000018a90	call	*0x0006b642(%rip)
0000000000018a96	decq	%r14
0000000000018a99	cmpq	0xa8(%rbp),%r14
0000000000018a9d	jge	0x000188d6
0000000000018aa3	movq	0x0009656e(%rip),%rax
0000000000018aaa	movq	0xd0(%rbp),%rbx
0000000000018aae	movq	(%rbx,%rax),%r14
0000000000018ab2	incq	%r14
0000000000018ab5	movq	0x0009654c(%rip),%rax
0000000000018abc	movq	%r14,(%rbx,%rax)
0000000000018ac0	movq	0x000965a1(%rip),%rax
0000000000018ac7	movq	(%rbx,%rax),%rcx
0000000000018acb	leaq	0xff(%rcx),%rdx
0000000000018acf	xorb	%al,%al
0000000000018ad1	movq	0x00096540(%rip),%rsi
0000000000018ad8	cmpq	%rdx,(%rbx,%rsi)
0000000000018adc	jae	0x00018b21
0000000000018ade	movq	$0x7fffffffffffffff,%rax
0000000000018ae8	movq	0x00096521(%rip),%rdx
0000000000018aef	cmpq	%rax,(%rbx,%rdx)
0000000000018af3	jne	0x00018b01
0000000000018af5	cmpq	$0x000001f5,%rcx
0000000000018afc	setb	%al
0000000000018aff	jmp	0x00018b21
0000000000018b01	movq	0x0008e278(%rip),%rsi
0000000000018b08	movq	%rbx,%rdi
0000000000018b0b	call	*0x0006b5c7(%rip)
0000000000018b11	movq	0x00096550(%rip),%rcx
0000000000018b18	movq	(%rbx,%rcx),%rcx
0000000000018b1c	testb	%al,%al
0000000000018b1e	sete	%al
0000000000018b21	decq	%rcx
0000000000018b24	movq	0x000964e5(%rip),%rdx
0000000000018b2b	movq	%rcx,(%rbx,%rdx)
0000000000018b2f	movzbl	%al,%eax
0000000000018b32	addq	$0x38,%rsp
0000000000018b36	popq	%rbx
0000000000018b37	popq	%r12
0000000000018b39	popq	%r13
0000000000018b3b	popq	%r14
0000000000018b3d	popq	%r15
0000000000018b3f	popq	%rbp
0000000000018b40	ret
-[PBXGDB_MILiteStackFramesCommand stackDepth]:
0000000000018b41	pushq	%rbp
0000000000018b42	movq	%rsp,%rbp
0000000000018b45	movq	0x000962cc(%rip),%rax
0000000000018b4c	movq	(%rdi,%rax),%rcx
0000000000018b50	testq	%rcx,%rcx
0000000000018b53	movl	$0x00000000,%eax
0000000000018b58	cmovnsq	%rcx,%rax
0000000000018b5c	popq	%rbp
0000000000018b5d	ret
0000000000018b5e	nop
-[PBXLSThread stackFrames]:
0000000000018b5f	pushq	%rbp
0000000000018b60	movq	%rsp,%rbp
0000000000018b63	movq	0x0008cb1e(%rip),%rsi
0000000000018b6a	popq	%rbp
0000000000018b6b	jmp	*0x0006b567(%rip)
0000000000018b71	nop
0000000000018b72	nop
0000000000018b73	nop
+[PBXLSStackFrame uninitializedStackFrame]:
0000000000018b74	pushq	%rbp
0000000000018b75	movq	%rsp,%rbp
0000000000018b78	cmpq	$0xff,0x0009eb68(%rip)
0000000000018b80	je	0x00018b95
0000000000018b82	leaq	0x0009eb5f(%rip),%rdi
0000000000018b89	leaq	0x0009e690(%rip),%rsi
0000000000018b90	callq	0x0004e69e	; symbol stub for: _dispatch_once
0000000000018b95	movq	0x0009eb54(%rip),%rax
0000000000018b9c	popq	%rbp
0000000000018b9d	ret
___42+[PBXLSStackFrame uninitializedStackFrame]_block_invoke_0:
0000000000018b9e	pushq	%rbp
0000000000018b9f	movq	%rsp,%rbp
0000000000018ba2	movq	0x0008fa4f(%rip),%rdi
0000000000018ba9	leaq	0x0008f730(%rip),%rsi
0000000000018bb0	call	*0x0008f72a(%rip)
0000000000018bb6	movq	0x0008c193(%rip),%rsi
0000000000018bbd	movq	%rax,%rdi
0000000000018bc0	xorl	%edx,%edx
0000000000018bc2	call	*0x0006b510(%rip)
0000000000018bc8	leaq	0x0009eb21(%rip),%rsi
0000000000018bcf	movq	%rax,%rdi
0000000000018bd2	popq	%rbp
0000000000018bd3	jmp	0x0004e602	; symbol stub for: _objc_assign_global
-[PBXLSStackFrame initWithDebugger:]:
0000000000018bd8	pushq	%rbp
0000000000018bd9	movq	%rsp,%rbp
0000000000018bdc	pushq	%rbx
0000000000018bdd	subq	$0x18,%rsp
0000000000018be1	movq	%rdi,0xe8(%rbp)
0000000000018be5	movq	0x0009042c(%rip),%rax
0000000000018bec	movq	%rax,0xf0(%rbp)
0000000000018bf0	movq	0x0008c159(%rip),%rsi
0000000000018bf7	leaq	0xe8(%rbp),%rdi
0000000000018bfb	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000018c00	movq	%rax,%rbx
0000000000018c03	testq	%rbx,%rbx
0000000000018c06	je	0x00018c36
0000000000018c08	movq	0x00096759(%rip),%rax
0000000000018c0f	movq	$0xffffffff,(%rbx,%rax)
0000000000018c17	movq	0x0008e1b2(%rip),%rsi
0000000000018c1e	movq	0x0008f9d3(%rip),%rdi
0000000000018c25	call	*0x0006b4ad(%rip)
0000000000018c2b	movq	0x0009673e(%rip),%rcx
0000000000018c32	movq	%rax,(%rbx,%rcx)
0000000000018c36	movq	%rbx,%rax
0000000000018c39	addq	$0x18,%rsp
0000000000018c3d	popq	%rbx
0000000000018c3e	popq	%rbp
0000000000018c3f	ret
0000000000018c40	nop
0000000000018c41	nop
0000000000018c42	nop
0000000000018c43	nop
0000000000018c44	nop
0000000000018c45	nop
0000000000018c46	nop
+[PBXLSStackFrame uninitializedFramePointer]:
0000000000018c47	pushq	%rbp
0000000000018c48	movq	%rsp,%rbp
0000000000018c4b	movq	$0xffffffff,%rax
0000000000018c52	popq	%rbp
0000000000018c53	ret
0000000000018c54	nop
0000000000018c55	nop
-[PBXLSThread setStackFramesWithoutKVO:]:
0000000000018c56	pushq	%rbp
0000000000018c57	movq	%rsp,%rbp
0000000000018c5a	movq	%rdi,%rax
0000000000018c5d	leaq	0x000966a4(%rip),%rcx
0000000000018c64	movq	(%rcx),%rcx
0000000000018c67	movq	%rdx,%rdi
0000000000018c6a	movq	%rax,%rsi
0000000000018c6d	movq	%rcx,%rdx
0000000000018c70	popq	%rbp
0000000000018c71	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MILiteStackFramesCommand setupCurrentFrameInfoForIndex:]:
0000000000018c76	pushq	%rbp
0000000000018c77	movq	%rsp,%rbp
0000000000018c7a	pushq	%r14
0000000000018c7c	pushq	%rbx
0000000000018c7d	movq	%rdx,%r14
0000000000018c80	movq	%rdi,%rbx
0000000000018c83	movq	0x0009619e(%rip),%rax
0000000000018c8a	movq	(%rbx,%rax),%rdi
0000000000018c8e	leaq	0x0008f67b(%rip),%rsi
0000000000018c95	call	*0x0008f675(%rip)
0000000000018c9b	cmpq	%r14,%rax
0000000000018c9e	jbe	0x00018d61
0000000000018ca4	movq	0x0009617d(%rip),%rax
0000000000018cab	movq	(%rbx,%rax),%rdi
0000000000018caf	leaq	0x0008f66a(%rip),%rsi
0000000000018cb6	movq	%r14,%rdx
0000000000018cb9	call	*0x0008f661(%rip)
0000000000018cbf	movq	0x0008be1a(%rip),%rsi
0000000000018cc6	movq	%rax,%rdi
0000000000018cc9	call	*0x0006b409(%rip)
0000000000018ccf	movq	0x00096172(%rip),%rdx
0000000000018cd6	movq	%rax,%rdi
0000000000018cd9	movq	%rbx,%rsi
0000000000018cdc	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000018ce1	leaq	0x000971b0(%rip),%rdx
0000000000018ce8	movq	0x00096159(%rip),%rax
0000000000018cef	movq	(%rbx,%rax),%rdi
0000000000018cf3	movq	0x0008bdde(%rip),%rsi
0000000000018cfa	call	*0x0006b3d8(%rip)
0000000000018d00	movq	0x0008be01(%rip),%rsi
0000000000018d07	movq	%rax,%rdi
0000000000018d0a	call	*0x0006b3c8(%rip)
0000000000018d10	movq	0x0008da41(%rip),%rsi
0000000000018d17	movq	%rbx,%rdi
0000000000018d1a	movq	%rax,%rdx
0000000000018d1d	call	*0x0006b3b5(%rip)
0000000000018d23	leaq	0x000970ce(%rip),%rdx
0000000000018d2a	movq	0x00096117(%rip),%rax
0000000000018d31	movq	(%rbx,%rax),%rdi
0000000000018d35	movq	0x0008bd9c(%rip),%rsi
0000000000018d3c	call	*0x0006b396(%rip)
0000000000018d42	movq	0x0008bdbf(%rip),%rsi
0000000000018d49	movq	%rax,%rdi
0000000000018d4c	call	*0x0006b386(%rip)
0000000000018d52	movq	0x0008da07(%rip),%rsi
0000000000018d59	movq	%rbx,%rdi
0000000000018d5c	movq	%rax,%rdx
0000000000018d5f	jmp	0x00018d7f
0000000000018d61	movq	0x0008d9f0(%rip),%rsi
0000000000018d68	movq	%rbx,%rdi
0000000000018d6b	xorl	%edx,%edx
0000000000018d6d	call	*0x0006b365(%rip)
0000000000018d73	movq	0x0008d9e6(%rip),%rsi
0000000000018d7a	movq	%rbx,%rdi
0000000000018d7d	xorl	%edx,%edx
0000000000018d7f	movq	0x0006b352(%rip),%rax
0000000000018d86	popq	%rbx
0000000000018d87	popq	%r14
0000000000018d89	popq	%rbp
0000000000018d8a	jmp	*%rax
-[PBXGDB_MILiteStackFramesCommand setCurrentFPString:]:
0000000000018d8c	pushq	%rbp
0000000000018d8d	movq	%rsp,%rbp
0000000000018d90	movq	%rdx,%rax
0000000000018d93	movq	%rdi,%rcx
0000000000018d96	movq	0x0009609b(%rip),%rdx
0000000000018d9d	movq	%rax,%rdi
0000000000018da0	movq	%rcx,%rsi
0000000000018da3	popq	%rbp
0000000000018da4	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MILiteStackFramesCommand setCurrentPCString:]:
0000000000018da9	pushq	%rbp
0000000000018daa	movq	%rsp,%rbp
0000000000018dad	movq	%rdx,%rax
0000000000018db0	movq	%rdi,%rcx
0000000000018db3	movq	0x00096086(%rip),%rdx
0000000000018dba	movq	%rax,%rdi
0000000000018dbd	movq	%rcx,%rsi
0000000000018dc0	popq	%rbp
0000000000018dc1	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000018dc6	nop
0000000000018dc7	nop
0000000000018dc8	nop
0000000000018dc9	nop
-[PBXLSStackFrame isUninitialized]:
0000000000018dca	pushq	%rbp
0000000000018dcb	movq	%rsp,%rbp
0000000000018dce	pushq	%rbx
0000000000018dcf	pushq	%rax
0000000000018dd0	movq	%rdi,%rbx
0000000000018dd3	movq	0x0008de9e(%rip),%rsi
0000000000018dda	movq	0x0008f817(%rip),%rdi
0000000000018de1	call	*0x0006b2f1(%rip)
0000000000018de7	cmpq	%rbx,%rax
0000000000018dea	sete	%al
0000000000018ded	movzbl	%al,%eax
0000000000018df0	addq	$0x08,%rsp
0000000000018df4	popq	%rbx
0000000000018df5	popq	%rbp
0000000000018df6	ret
0000000000018df7	nop
0000000000018df8	nop
-[PBXLSModel replaceChildAtIndex:withChild:withKVO:]:
0000000000018df9	pushq	%rbp
0000000000018dfa	movq	%rsp,%rbp
0000000000018dfd	pushq	%r15
0000000000018dff	pushq	%r14
0000000000018e01	pushq	%r13
0000000000018e03	pushq	%r12
0000000000018e05	pushq	%rbx
0000000000018e06	pushq	%rax
0000000000018e07	movl	%r8d,%r12d
0000000000018e0a	movq	%rcx,%r14
0000000000018e0d	movq	%rdx,%r15
0000000000018e10	movq	%rdi,%rbx
0000000000018e13	movq	0x0008c86e(%rip),%rsi
0000000000018e1a	movq	0x0006b2b7(%rip),%r13
0000000000018e21	call	*%r13
0000000000018e24	leaq	0x0008f4f5(%rip),%rsi
0000000000018e2b	movq	%rax,%rdi
0000000000018e2e	movq	%r15,%rdx
0000000000018e31	call	*0x0008f4e9(%rip)
0000000000018e37	movq	0x0008e542(%rip),%rsi
0000000000018e3e	movq	%rax,%rdi
0000000000018e41	xorl	%edx,%edx
0000000000018e43	call	*%r13
0000000000018e46	movq	0x0008e533(%rip),%rsi
0000000000018e4d	movq	%r14,%rdi
0000000000018e50	movq	%rbx,%rdx
0000000000018e53	call	*%r13
0000000000018e56	testb	%r12b,%r12b
0000000000018e59	je	0x00018e70
0000000000018e5b	movq	0x0008e6a6(%rip),%rsi
0000000000018e62	movq	%rbx,%rdi
0000000000018e65	call	*0x0006b26d(%rip)
0000000000018e6b	movq	%rax,%rdi
0000000000018e6e	jmp	0x00018e7b
0000000000018e70	movq	0x00096491(%rip),%rax
0000000000018e77	movq	(%rbx,%rax),%rdi
0000000000018e7b	movq	0x0008e6ae(%rip),%rsi
0000000000018e82	movq	%r15,%rdx
0000000000018e85	movq	%r14,%rcx
0000000000018e88	addq	$0x08,%rsp
0000000000018e8c	popq	%rbx
0000000000018e8d	popq	%r12
0000000000018e8f	popq	%r13
0000000000018e91	popq	%r14
0000000000018e93	popq	%r15
0000000000018e95	popq	%rbp
0000000000018e96	jmp	*0x0006b23c(%rip)
-[PBXGDB_UpdateStackSequence _extractInfoFromFramesLiteCmd:toFrame:]:
0000000000018e9c	pushq	%rbp
0000000000018e9d	movq	%rsp,%rbp
0000000000018ea0	pushq	%r15
0000000000018ea2	pushq	%r14
0000000000018ea4	pushq	%rbx
0000000000018ea5	pushq	%rax
0000000000018ea6	movq	%rcx,%rbx
0000000000018ea9	movq	%rdx,%r15
0000000000018eac	movq	%rdi,%r14
0000000000018eaf	movq	0x0008def2(%rip),%rsi
0000000000018eb6	movq	%r15,%rdi
0000000000018eb9	call	*0x0006b219(%rip)
0000000000018ebf	movsbl	%al,%edx
0000000000018ec2	movq	0x0008c3ef(%rip),%rsi
0000000000018ec9	movq	%rbx,%rdi
0000000000018ecc	call	*0x0006b206(%rip)
0000000000018ed2	movq	0x0008ded7(%rip),%rsi
0000000000018ed9	movq	%r15,%rdi
0000000000018edc	call	*0x0006b1f6(%rip)
0000000000018ee2	movq	0x0008ddf7(%rip),%rsi
0000000000018ee9	movq	%rbx,%rdi
0000000000018eec	movq	%rax,%rdx
0000000000018eef	call	*0x0006b1e3(%rip)
0000000000018ef5	movq	0x0008debc(%rip),%rsi
0000000000018efc	movq	%r15,%rdi
0000000000018eff	call	*0x0006b1d3(%rip)
0000000000018f05	movq	0x0008dddc(%rip),%rsi
0000000000018f0c	movq	%rbx,%rdi
0000000000018f0f	movq	%rax,%rdx
0000000000018f12	call	*0x0006b1c0(%rip)
0000000000018f18	movq	0x0008dea1(%rip),%rsi
0000000000018f1f	movq	%r15,%rdi
0000000000018f22	call	*0x0006b1b0(%rip)
0000000000018f28	movq	0x0008de99(%rip),%rsi
0000000000018f2f	movq	%rbx,%rdi
0000000000018f32	movq	%rax,%rdx
0000000000018f35	call	*0x0006b19d(%rip)
0000000000018f3b	movq	0x0008de26(%rip),%rsi
0000000000018f42	movq	%r15,%rdi
0000000000018f45	call	*0x0006b18d(%rip)
0000000000018f4b	movq	0x0008dd76(%rip),%rsi
0000000000018f52	movq	%r14,%rdi
0000000000018f55	movq	%rax,%rdx
0000000000018f58	movl	$0x00000001,%ecx
0000000000018f5d	movq	%rbx,%r8
0000000000018f60	call	*0x0006b172(%rip)
0000000000018f66	movq	0x0008de63(%rip),%rsi
0000000000018f6d	movq	0x0008f684(%rip),%rdi
0000000000018f74	call	*0x0006b15e(%rip)
0000000000018f7a	movq	0x0008dd6f(%rip),%rsi
0000000000018f81	movq	%rbx,%rdi
0000000000018f84	movq	%rax,%rdx
0000000000018f87	call	*0x0006b14b(%rip)
0000000000018f8d	movq	0x0008dd6c(%rip),%rsi
0000000000018f94	movq	%rbx,%rdi
0000000000018f97	movq	$0xffffffff,%rdx
0000000000018f9e	call	*0x0006b134(%rip)
0000000000018fa4	movq	0x0008dd4d(%rip),%rsi
0000000000018fab	movq	%rbx,%rdi
0000000000018fae	xorl	%edx,%edx
0000000000018fb0	call	*0x0006b122(%rip)
0000000000018fb6	movq	0x0008de1b(%rip),%rsi
0000000000018fbd	movq	%rbx,%rdi
0000000000018fc0	xorl	%edx,%edx
0000000000018fc2	movq	0x0006b10f(%rip),%rax
0000000000018fc9	addq	$0x08,%rsp
0000000000018fcd	popq	%rbx
0000000000018fce	popq	%r14
0000000000018fd0	popq	%r15
0000000000018fd2	popq	%rbp
0000000000018fd3	jmp	*%rax
-[PBXGDB_MILiteStackFramesCommand currentHasSymbols]:
0000000000018fd5	pushq	%rbp
0000000000018fd6	movq	%rsp,%rbp
0000000000018fd9	movq	0x00095e68(%rip),%rax
0000000000018fe0	movq	(%rdi,%rax),%rdi
0000000000018fe4	movq	0x0008baed(%rip),%rsi
0000000000018feb	leaq	0x0009a026(%rip),%rdx
0000000000018ff2	call	*0x0006b0e0(%rip)
0000000000018ff8	testq	%rax,%rax
0000000000018ffb	jne	0x00019001
0000000000018ffd	xorb	%al,%al
0000000000018fff	jmp	0x00019028
0000000000019001	movq	0x0008bb00(%rip),%rsi
0000000000019008	movq	%rax,%rdi
000000000001900b	call	*0x0006b0c7(%rip)
0000000000019011	leaq	0x0008f348(%rip),%rsi
0000000000019018	leaq	0x00096a99(%rip),%rdx
000000000001901f	movq	%rax,%rdi
0000000000019022	call	*0x0008f338(%rip)
0000000000019028	movsbl	%al,%eax
000000000001902b	popq	%rbp
000000000001902c	ret
000000000001902d	nop
000000000001902e	nop
000000000001902f	nop
0000000000019030	nop
0000000000019031	nop
0000000000019032	nop
0000000000019033	nop
0000000000019034	nop
0000000000019035	nop
-[PBXLSStackFrame setHasSymbols:]:
0000000000019036	pushq	%rbp
0000000000019037	movq	%rsp,%rbp
000000000001903a	movq	0x0009638f(%rip),%rax
0000000000019041	movb	%dl,(%rdi,%rax)
0000000000019044	popq	%rbp
0000000000019045	ret
-[PBXGDB_MILiteStackFramesCommand currentFunctionName]:
0000000000019046	pushq	%rbp
0000000000019047	movq	%rsp,%rbp
000000000001904a	movq	0x00095df7(%rip),%rax
0000000000019051	movq	(%rdi,%rax),%rdi
0000000000019055	popq	%rbp
0000000000019056	jmp	_functionNameFromFrameItem
_functionNameFromFrameItem:
000000000001905b	pushq	%rbp
000000000001905c	movq	%rsp,%rbp
000000000001905f	pushq	%r14
0000000000019061	pushq	%rbx
0000000000019062	movq	%rdi,%r14
0000000000019065	movq	0x0008ba6c(%rip),%rsi
000000000001906c	leaq	0x00096de5(%rip),%rdx
0000000000019073	call	*0x0006b05f(%rip)
0000000000019079	xorl	%ebx,%ebx
000000000001907b	testq	%rax,%rax
000000000001907e	je	0x000190d1
0000000000019080	movq	0x0008ba81(%rip),%rsi
0000000000019087	movq	%rax,%rdi
000000000001908a	call	*0x0006b048(%rip)
0000000000019090	movq	%rax,%rbx
0000000000019093	leaq	0x0008f2c6(%rip),%rsi
000000000001909a	leaq	0x00096bb7(%rip),%rdx
00000000000190a1	movq	%rbx,%rdi
00000000000190a4	call	*0x0008f2b6(%rip)
00000000000190aa	testb	%al,%al
00000000000190ac	je	0x000190d1
00000000000190ae	movq	0x0008ba23(%rip),%rsi
00000000000190b5	leaq	0x000966dc(%rip),%rdx
00000000000190bc	movq	%r14,%rdi
00000000000190bf	call	*0x0006b013(%rip)
00000000000190c5	testq	%rax,%rax
00000000000190c8	jne	0x000190d9
00000000000190ca	leaq	0x00096867(%rip),%rbx
00000000000190d1	movq	%rbx,%rax
00000000000190d4	popq	%rbx
00000000000190d5	popq	%r14
00000000000190d7	popq	%rbp
00000000000190d8	ret
00000000000190d9	movq	0x0008ba28(%rip),%rsi
00000000000190e0	movq	%rax,%rdi
00000000000190e3	popq	%rbx
00000000000190e4	popq	%r14
00000000000190e6	popq	%rbp
00000000000190e7	jmp	*0x0006afeb(%rip)
00000000000190ed	nop
00000000000190ee	nop
00000000000190ef	nop
00000000000190f0	nop
00000000000190f1	nop
00000000000190f2	nop
00000000000190f3	nop
00000000000190f4	nop
00000000000190f5	nop
00000000000190f6	nop
00000000000190f7	nop
00000000000190f8	nop
00000000000190f9	nop
00000000000190fa	nop
00000000000190fb	nop
-[PBXLSStackFrame setFunctionName:]:
00000000000190fc	pushq	%rbp
00000000000190fd	movq	%rsp,%rbp
0000000000019100	movq	%rdx,%rax
0000000000019103	movq	%rdi,%rcx
0000000000019106	movq	0x0009629b(%rip),%rdx
000000000001910d	movq	%rax,%rdi
0000000000019110	movq	%rcx,%rsi
0000000000019113	popq	%rbp
0000000000019114	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MILiteStackFramesCommand currentIPAddress]:
0000000000019119	pushq	%rbp
000000000001911a	movq	%rsp,%rbp
000000000001911d	pushq	%rbx
000000000001911e	pushq	%rax
000000000001911f	movq	0x00095d1a(%rip),%rax
0000000000019126	cmpq	$0x00,(%rdi,%rax)
000000000001912b	jne	0x00019136
000000000001912d	xorl	%eax,%eax
000000000001912f	addq	$0x08,%rsp
0000000000019133	popq	%rbx
0000000000019134	popq	%rbp
0000000000019135	ret
0000000000019136	movq	0x0008d633(%rip),%rsi
000000000001913d	movq	0x0006af94(%rip),%rbx
0000000000019144	call	*%rbx
0000000000019146	movq	0x0008b9e3(%rip),%rsi
000000000001914d	movq	%rax,%rdi
0000000000019150	call	*%rbx
0000000000019152	movq	%rax,%rdi
0000000000019155	xorl	%esi,%esi
0000000000019157	xorl	%edx,%edx
0000000000019159	addq	$0x08,%rsp
000000000001915d	popq	%rbx
000000000001915e	popq	%rbp
000000000001915f	jmp	0x0004e71c	; symbol stub for: _strtoull
-[PBXGDB_MILiteStackFramesCommand currentIPString]:
0000000000019164	pushq	%rbp
0000000000019165	movq	%rsp,%rbp
0000000000019168	movq	0x00095cd1(%rip),%rax
000000000001916f	movq	(%rdi,%rax),%rax
0000000000019173	popq	%rbp
0000000000019174	ret
0000000000019175	nop
0000000000019176	nop
0000000000019177	nop
0000000000019178	nop
0000000000019179	nop
000000000001917a	nop
000000000001917b	nop
000000000001917c	nop
000000000001917d	nop
-[PBXLSStackFrame setInstructionPointerAddress:]:
000000000001917e	pushq	%rbp
000000000001917f	movq	%rsp,%rbp
0000000000019182	movq	0x00096207(%rip),%rax
0000000000019189	movq	%rdx,(%rdi,%rax)
000000000001918d	popq	%rbp
000000000001918e	ret
-[PBXGDB_MILiteStackFramesCommand currentFPAddress]:
000000000001918f	pushq	%rbp
0000000000019190	movq	%rsp,%rbp
0000000000019193	pushq	%rbx
0000000000019194	pushq	%rax
0000000000019195	movq	0x00095c9c(%rip),%rax
000000000001919c	cmpq	$0x00,(%rdi,%rax)
00000000000191a1	jne	0x000191ac
00000000000191a3	xorl	%eax,%eax
00000000000191a5	addq	$0x08,%rsp
00000000000191a9	popq	%rbx
00000000000191aa	popq	%rbp
00000000000191ab	ret
00000000000191ac	movq	0x0008d5b5(%rip),%rsi
00000000000191b3	movq	0x0006af1e(%rip),%rbx
00000000000191ba	call	*%rbx
00000000000191bc	movq	0x0008b96d(%rip),%rsi
00000000000191c3	movq	%rax,%rdi
00000000000191c6	call	*%rbx
00000000000191c8	movq	%rax,%rdi
00000000000191cb	xorl	%esi,%esi
00000000000191cd	xorl	%edx,%edx
00000000000191cf	addq	$0x08,%rsp
00000000000191d3	popq	%rbx
00000000000191d4	popq	%rbp
00000000000191d5	jmp	0x0004e71c	; symbol stub for: _strtoull
-[PBXGDB_MILiteStackFramesCommand currentFPString]:
00000000000191da	pushq	%rbp
00000000000191db	movq	%rsp,%rbp
00000000000191de	movq	0x00095c53(%rip),%rax
00000000000191e5	movq	(%rdi,%rax),%rax
00000000000191e9	popq	%rbp
00000000000191ea	ret
00000000000191eb	nop
00000000000191ec	nop
00000000000191ed	nop
00000000000191ee	nop
00000000000191ef	nop
00000000000191f0	nop
00000000000191f1	nop
00000000000191f2	nop
00000000000191f3	nop
00000000000191f4	nop
-[PBXLSStackFrame setLiteFramePointerIdentifer:]:
00000000000191f5	pushq	%rbp
00000000000191f6	movq	%rsp,%rbp
00000000000191f9	movq	0x00096198(%rip),%rax
0000000000019200	movq	%rdx,(%rdi,%rax)
0000000000019204	popq	%rbp
0000000000019205	ret
-[PBXGDB_MILiteStackFramesCommand currentModulePath]:
0000000000019206	pushq	%rbp
0000000000019207	movq	%rsp,%rbp
000000000001920a	movq	0x00095c37(%rip),%rax
0000000000019211	movq	(%rdi,%rax),%rdi
0000000000019215	movq	0x0008b8bc(%rip),%rsi
000000000001921c	leaq	0x00099c95(%rip),%rdx
0000000000019223	call	*0x0006aeaf(%rip)
0000000000019229	movq	%rax,%rdi
000000000001922c	popq	%rbp
000000000001922d	jmp	_shlibNameFromItem
-[PBXGDB_UpdateStackSequence _addCodeModuleWithPath:shouldScheduleIfNil:forFrame:]:
0000000000019232	pushq	%rbp
0000000000019233	movq	%rsp,%rbp
0000000000019236	pushq	%r15
0000000000019238	pushq	%r14
000000000001923a	pushq	%r13
000000000001923c	pushq	%r12
000000000001923e	pushq	%rbx
000000000001923f	pushq	%rax
0000000000019240	movq	%r8,%r14
0000000000019243	movq	%rdx,%r15
0000000000019246	movq	%rdi,%rbx
0000000000019249	testq	%r15,%r15
000000000001924c	je	0x0001930a
0000000000019252	movq	0x0008b85f(%rip),%rsi
0000000000019259	movq	0x0006ae78(%rip),%r13
0000000000019260	movq	%rbx,%rdi
0000000000019263	call	*%r13
0000000000019266	movq	0x0008bb83(%rip),%rsi
000000000001926d	movq	%rax,%rdi
0000000000019270	call	*%r13
0000000000019273	movq	0x0008c8ee(%rip),%rsi
000000000001927a	movq	%rax,%rdi
000000000001927d	call	*%r13
0000000000019280	movq	%rax,%r12
0000000000019283	movq	0x0008da1e(%rip),%rsi
000000000001928a	movq	%r12,%rdi
000000000001928d	movq	%r15,%rdx
0000000000019290	call	*%r13
0000000000019293	movq	%rax,%rbx
0000000000019296	testq	%rbx,%rbx
0000000000019299	jne	0x000192e9
000000000001929b	movq	0x0008f7a6(%rip),%rdi
00000000000192a2	leaq	0x0008f037(%rip),%rsi
00000000000192a9	call	*0x0008f031(%rip)
00000000000192af	movq	0x0008d9fa(%rip),%rsi
00000000000192b6	movq	0x0006ae1b(%rip),%r13
00000000000192bd	movq	%rax,%rdi
00000000000192c0	movq	%r15,%rdx
00000000000192c3	call	*%r13
00000000000192c6	movq	%rax,%rbx
00000000000192c9	movq	0x0008d9e8(%rip),%rsi
00000000000192d0	movq	%r12,%rdi
00000000000192d3	call	*%r13
00000000000192d6	leaq	0x0008f023(%rip),%rsi
00000000000192dd	movq	%rax,%rdi
00000000000192e0	movq	%rbx,%rdx
00000000000192e3	call	*0x0008f017(%rip)
00000000000192e9	movq	0x0008d9d0(%rip),%rsi
00000000000192f0	movq	%r14,%rdi
00000000000192f3	movq	%rbx,%rdx
00000000000192f6	addq	$0x08,%rsp
00000000000192fa	popq	%rbx
00000000000192fb	popq	%r12
00000000000192fd	popq	%r13
00000000000192ff	popq	%r14
0000000000019301	popq	%r15
0000000000019303	popq	%rbp
0000000000019304	jmp	*0x0006adce(%rip)
000000000001930a	testb	%cl,%cl
000000000001930c	je	0x00019370
000000000001930e	movq	0x00095d43(%rip),%rax
0000000000019315	movq	(%rbx,%rax),%rdi
0000000000019319	testq	%rdi,%rdi
000000000001931c	jne	0x0001934f
000000000001931e	movq	0x0008c10b(%rip),%rsi
0000000000019325	movq	0x0008f134(%rip),%rdi
000000000001932c	call	*0x0006ada6(%rip)
0000000000019332	movq	0x00095d1f(%rip),%rdx
0000000000019339	movq	%rax,%rdi
000000000001933c	movq	%rbx,%rsi
000000000001933f	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000019344	movq	0x00095d0d(%rip),%rax
000000000001934b	movq	(%rbx,%rax),%rdi
000000000001934f	movq	0x0008efaa(%rip),%rax
0000000000019356	leaq	0x0008efa3(%rip),%rsi
000000000001935d	movq	%r14,%rdx
0000000000019360	addq	$0x08,%rsp
0000000000019364	popq	%rbx
0000000000019365	popq	%r12
0000000000019367	popq	%r13
0000000000019369	popq	%r14
000000000001936b	popq	%r15
000000000001936d	popq	%rbp
000000000001936e	jmp	*%rax
0000000000019370	addq	$0x08,%rsp
0000000000019374	popq	%rbx
0000000000019375	popq	%r12
0000000000019377	popq	%r13
0000000000019379	popq	%r14
000000000001937b	popq	%r15
000000000001937d	popq	%rbp
000000000001937e	ret
000000000001937f	nop
0000000000019380	nop
0000000000019381	nop
0000000000019382	nop
0000000000019383	nop
0000000000019384	nop
0000000000019385	nop
0000000000019386	nop
0000000000019387	nop
-[PBXLSStackFrame setFoundationModule:]:
0000000000019388	pushq	%rbp
0000000000019389	movq	%rsp,%rbp
000000000001938c	movq	%rdx,%rax
000000000001938f	movq	%rdi,%rcx
0000000000019392	movq	0x0009602f(%rip),%rdx
0000000000019399	movq	%rax,%rdi
000000000001939c	movq	%rcx,%rsi
000000000001939f	popq	%rbp
00000000000193a0	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000193a5	nop
00000000000193a6	nop
00000000000193a7	nop
00000000000193a8	nop
00000000000193a9	nop
00000000000193aa	nop
00000000000193ab	nop
00000000000193ac	nop
00000000000193ad	nop
00000000000193ae	nop
00000000000193af	nop
00000000000193b0	nop
00000000000193b1	nop
00000000000193b2	nop
00000000000193b3	nop
-[PBXLSStackFrame setFramePointerAddress:]:
00000000000193b4	pushq	%rbp
00000000000193b5	movq	%rsp,%rbp
00000000000193b8	movq	0x00095fb1(%rip),%rax
00000000000193bf	movq	%rdx,(%rdi,%rax)
00000000000193c3	popq	%rbp
00000000000193c4	ret
00000000000193c5	nop
-[PBXLSStackFrame setLineNumber:]:
00000000000193c6	pushq	%rbp
00000000000193c7	movq	%rsp,%rbp
00000000000193ca	movq	0x00095f97(%rip),%rax
00000000000193d1	movq	%rdx,(%rdi,%rax)
00000000000193d5	popq	%rbp
00000000000193d6	ret
00000000000193d7	nop
-[PBXLSStackFrame setFileName:]:
00000000000193d8	pushq	%rbp
00000000000193d9	movq	%rsp,%rbp
00000000000193dc	pushq	%r14
00000000000193de	pushq	%rbx
00000000000193df	subq	$0x20,%rsp
00000000000193e3	movq	%rdx,%rbx
00000000000193e6	movq	%rdi,%r14
00000000000193e9	leaq	0x0008ef00(%rip),%rsi
00000000000193f0	movq	%rbx,%rdi
00000000000193f3	call	*0x0008eef7(%rip)
00000000000193f9	testq	%rax,%rax
00000000000193fc	je	0x0001945b
00000000000193fe	movq	$0x00000000,0xe0(%rbp)
0000000000019406	leaq	0x0008eee3(%rip),%rsi
000000000001940d	movq	%rbx,%rdi
0000000000019410	call	*0x0008eeda(%rip)
0000000000019416	movq	%rax,0xe8(%rbp)
000000000001941a	movq	0x0008e1cf(%rip),%rsi
0000000000019421	leaq	0x0009c270(%rip),%rdx
0000000000019428	leaq	0x00099a09(%rip),%rcx
000000000001942f	movq	0xe0(%rbp),%rax
0000000000019433	movq	0xe8(%rbp),%rdi
0000000000019437	movq	%rdi,0x08(%rsp)
000000000001943c	movq	%rax,(%rsp)
0000000000019440	movq	%rbx,%rdi
0000000000019443	movl	$0x00000008,%r8d
0000000000019449	call	*0x0006ac89(%rip)
000000000001944f	movq	0x00095f4a(%rip),%rdx
0000000000019456	movq	%rax,%rdi
0000000000019459	jmp	0x00019464
000000000001945b	movq	0x00095f3e(%rip),%rdx
0000000000019462	xorl	%edi,%edi
0000000000019464	movq	%r14,%rsi
0000000000019467	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001946c	addq	$0x20,%rsp
0000000000019470	popq	%rbx
0000000000019471	popq	%r14
0000000000019473	popq	%rbp
0000000000019474	ret
0000000000019475	nop
-[PBXLSStackFrame setDisassemblyDocument:]:
0000000000019476	pushq	%rbp
0000000000019477	movq	%rsp,%rbp
000000000001947a	movq	%rdx,%rax
000000000001947d	movq	%rdi,%rcx
0000000000019480	movq	0x00095ef9(%rip),%rdx
0000000000019487	movq	%rax,%rdi
000000000001948a	movq	%rcx,%rsi
000000000001948d	popq	%rbp
000000000001948e	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_UpdateStackSequence _pushInfoToFoundationStackFrameFromPBXStackFrame:index:]:
0000000000019493	pushq	%rbp
0000000000019494	movq	%rsp,%rbp
0000000000019497	pushq	%r15
0000000000019499	pushq	%r14
000000000001949b	pushq	%r13
000000000001949d	pushq	%r12
000000000001949f	pushq	%rbx
00000000000194a0	pushq	%rax
00000000000194a1	movq	%rcx,%r15
00000000000194a4	movq	%rdx,%r14
00000000000194a7	movq	%rdi,%rbx
00000000000194aa	movq	0x00095b97(%rip),%rax
00000000000194b1	movq	(%rbx,%rax),%rdi
00000000000194b5	movq	0x0008c7ac(%rip),%rsi
00000000000194bc	movq	0x0006ac15(%rip),%r13
00000000000194c3	call	*%r13
00000000000194c6	movq	%rax,%r12
00000000000194c9	movq	0x0008d838(%rip),%rsi
00000000000194d0	movq	0x0008f219(%rip),%rdi
00000000000194d7	movq	%r15,%rdx
00000000000194da	call	*%r13
00000000000194dd	movq	0x00095b5c(%rip),%rcx
00000000000194e4	cmpq	$0x00,(%rbx,%rcx)
00000000000194e9	setne	%cl
00000000000194ec	movzbl	%cl,%r8d
00000000000194f0	movq	0x0008d819(%rip),%rsi
00000000000194f7	movq	%r12,%rdi
00000000000194fa	movq	%r14,%rdx
00000000000194fd	movq	%rax,%rcx
0000000000019500	call	*%r13
0000000000019503	testq	%rax,%rax
0000000000019506	jne	0x00019517
0000000000019508	addq	$0x08,%rsp
000000000001950c	popq	%rbx
000000000001950d	popq	%r12
000000000001950f	popq	%r13
0000000000019511	popq	%r14
0000000000019513	popq	%r15
0000000000019515	popq	%rbp
0000000000019516	ret
0000000000019517	movq	0x00095b22(%rip),%rcx
000000000001951e	movq	(%rbx,%rcx),%rdi
0000000000019522	movq	0x0008edd7(%rip),%rcx
0000000000019529	leaq	0x0008edd0(%rip),%rsi
0000000000019530	movq	%rax,%rdx
0000000000019533	addq	$0x08,%rsp
0000000000019537	popq	%rbx
0000000000019538	popq	%r12
000000000001953a	popq	%r13
000000000001953c	popq	%r14
000000000001953e	popq	%r15
0000000000019540	popq	%rbp
0000000000019541	jmp	*%rcx
0000000000019543	nop
0000000000019544	nop
0000000000019545	nop
0000000000019546	nop
0000000000019547	nop
0000000000019548	nop
0000000000019549	nop
000000000001954a	nop
000000000001954b	nop
000000000001954c	nop
000000000001954d	nop
-[DBGGDBThread stackFrameFromPBXStackFrame:frameNumber:shouldCreate:]:
000000000001954e	pushq	%rbp
000000000001954f	movq	%rsp,%rbp
0000000000019552	pushq	%r15
0000000000019554	pushq	%r14
0000000000019556	pushq	%r13
0000000000019558	pushq	%r12
000000000001955a	pushq	%rbx
000000000001955b	pushq	%rax
000000000001955c	movl	%r8d,%r13d
000000000001955f	movq	%rcx,0xd0(%rbp)
0000000000019563	movq	%rdx,%r12
0000000000019566	movq	%rdi,%r14
0000000000019569	movq	0x0008c6e8(%rip),%rsi
0000000000019570	movq	%r12,%rdi
0000000000019573	call	*0x0006ab5f(%rip)
0000000000019579	movq	%rax,%rbx
000000000001957c	testq	%rbx,%rbx
000000000001957f	je	0x00019599
0000000000019581	movq	0x0008eb50(%rip),%rsi
0000000000019588	movq	%r14,%rdi
000000000001958b	movq	%rbx,%rdx
000000000001958e	movq	%r12,%rcx
0000000000019591	call	*0x0006ab41(%rip)
0000000000019597	jmp	0x0001960e
0000000000019599	xorl	%ebx,%ebx
000000000001959b	testb	%r13b,%r13b
000000000001959e	je	0x0001960e
00000000000195a0	movq	0x0008f721(%rip),%rdi
00000000000195a7	leaq	0x0008ed32(%rip),%rsi
00000000000195ae	call	*0x0008ed2c(%rip)
00000000000195b4	movq	%rax,%r13
00000000000195b7	movq	0x0008eb0a(%rip),%rsi
00000000000195be	movq	0x0006ab13(%rip),%r15
00000000000195c5	movq	%r14,%rdi
00000000000195c8	movq	%r12,%rdx
00000000000195cb	call	*%r15
00000000000195ce	movq	%rax,%rbx
00000000000195d1	movq	0x0008eae0(%rip),%rsi
00000000000195d8	movq	%r12,%rdi
00000000000195db	call	*%r15
00000000000195de	movq	0x0008eafb(%rip),%rsi
00000000000195e5	movq	%r13,%rdi
00000000000195e8	movq	%r14,%rdx
00000000000195eb	movq	0xd0(%rbp),%rcx
00000000000195ef	movq	%rbx,%r8
00000000000195f2	movq	%rax,%r9
00000000000195f5	call	*%r15
00000000000195f8	movq	%rax,%rbx
00000000000195fb	movq	0x0008ead6(%rip),%rsi
0000000000019602	movq	%r14,%rdi
0000000000019605	movq	%rbx,%rdx
0000000000019608	movq	%r12,%rcx
000000000001960b	call	*%r15
000000000001960e	movq	%rbx,%rax
0000000000019611	addq	$0x08,%rsp
0000000000019615	popq	%rbx
0000000000019616	popq	%r12
0000000000019618	popq	%r13
000000000001961a	popq	%r14
000000000001961c	popq	%r15
000000000001961e	popq	%rbp
000000000001961f	ret
0000000000019620	nop
0000000000019621	nop
0000000000019622	nop
0000000000019623	nop
0000000000019624	nop
0000000000019625	nop
-[PBXLSStackFrame foundationStackFrame]:
0000000000019626	pushq	%rbp
0000000000019627	movq	%rsp,%rbp
000000000001962a	movq	0x00095d47(%rip),%rax
0000000000019631	movq	(%rdi,%rax),%rax
0000000000019635	popq	%rbp
0000000000019636	ret
-[PBXGDB_UpdateStackSequence _attemptFinish]:
0000000000019637	pushq	%rbp
0000000000019638	movq	%rsp,%rbp
000000000001963b	pushq	%rbx
000000000001963c	pushq	%rax
000000000001963d	movq	%rdi,%rbx
0000000000019640	movq	0x00095a11(%rip),%rax
0000000000019647	movq	(%rbx,%rax),%rdi
000000000001964b	testq	%rdi,%rdi
000000000001964e	je	0x00019678
0000000000019650	leaq	0x0008ecb9(%rip),%rsi
0000000000019657	call	*0x0008ecb3(%rip)
000000000001965d	testq	%rax,%rax
0000000000019660	je	0x00019678
0000000000019662	movq	0x0008d66f(%rip),%rsi
0000000000019669	movq	%rbx,%rdi
000000000001966c	addq	$0x08,%rsp
0000000000019670	popq	%rbx
0000000000019671	popq	%rbp
0000000000019672	jmp	*0x0006aa60(%rip)
0000000000019678	movq	0x0008b4b9(%rip),%rsi
000000000001967f	jmp	0x00019669
-[PBXGDB_UpdateStackSequence didFinish]:
0000000000019681	pushq	%rbp
0000000000019682	movq	%rsp,%rbp
0000000000019685	pushq	%r15
0000000000019687	pushq	%r14
0000000000019689	pushq	%r13
000000000001968b	pushq	%r12
000000000001968d	pushq	%rbx
000000000001968e	subq	$0x48,%rsp
0000000000019692	movq	%rdi,0xd0(%rbp)
0000000000019696	movq	%rsi,0xc8(%rbp)
000000000001969a	movq	0x00095987(%rip),%rax
00000000000196a1	cmpb	$0x00,(%rdi,%rax)
00000000000196a5	je	0x00019931
00000000000196ab	movq	0x0009597e(%rip),%rax
00000000000196b2	cmpb	$0x00,(%rdi,%rax)
00000000000196b6	je	0x000196e9
00000000000196b8	movq	0x00095989(%rip),%rax
00000000000196bf	movq	(%rdi,%rax),%rbx
00000000000196c3	movq	0x0008b3ee(%rip),%rsi
00000000000196ca	movq	0x0006aa07(%rip),%r14
00000000000196d1	call	*%r14
00000000000196d4	movq	0x0008d56d(%rip),%rsi
00000000000196db	movq	%rbx,%rdi
00000000000196de	movq	%rax,%rdx
00000000000196e1	call	*%r14
00000000000196e4	jmp	0x00019931
00000000000196e9	movq	0x00095950(%rip),%rax
00000000000196f0	cmpq	$0x00,(%rdi,%rax)
00000000000196f5	jne	0x00019748
00000000000196f7	leaq	0x00047dc0(%rip),%rax
00000000000196fe	leaq	0x00096133(%rip),%rcx
0000000000019705	leaq	0x00047dd2(%rip),%rdx
000000000001970c	movq	%rdx,0x10(%rsp)
0000000000019711	movq	%rcx,0x08(%rsp)
0000000000019716	movq	%rax,(%rsp)
000000000001971a	leaq	0xd0(%rbp),%rdi
000000000001971e	leaq	0xc8(%rbp),%rsi
0000000000019722	leaq	0x00047d57(%rip),%rdx
0000000000019729	leaq	0x00047bbe(%rip),%rcx
0000000000019730	leaq	0x0009a9a1(%rip),%r9
0000000000019737	movl	$0x000001db,%r8d
000000000001973d	xorb	%al,%al
000000000001973f	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000019744	movq	0xd0(%rbp),%rdi
0000000000019748	movq	0x000958f9(%rip),%rax
000000000001974f	movq	(%rdi,%rax),%rdi
0000000000019753	movq	0x0008c50e(%rip),%rsi
000000000001975a	movq	0x0006a977(%rip),%r13
0000000000019761	call	*%r13
0000000000019764	movq	%rax,%r14
0000000000019767	movq	0x000958d2(%rip),%rax
000000000001976e	movq	0xd0(%rbp),%rcx
0000000000019772	movq	(%rcx,%rax),%rdi
0000000000019776	leaq	0x0008eb93(%rip),%rsi
000000000001977d	call	*0x0008eb8d(%rip)
0000000000019783	movq	%rax,%rbx
0000000000019786	movq	0x0009587b(%rip),%rax
000000000001978d	movq	0xd0(%rbp),%rcx
0000000000019791	movq	(%rcx,%rax),%r15
0000000000019795	movq	%r15,0xb0(%rbp)
0000000000019799	subq	%rbx,%r15
000000000001979c	movq	0x0008d4ad(%rip),%rsi
00000000000197a3	movq	0x0008f286(%rip),%rdi
00000000000197aa	movq	%r15,%rdx
00000000000197ad	movq	%rbx,%rcx
00000000000197b0	call	*%r13
00000000000197b3	movq	%rax,%r12
00000000000197b6	leaq	0x0009a93b(%rip),%r8
00000000000197bd	movq	0x0008d494(%rip),%rsi
00000000000197c4	movq	%r14,%rdi
00000000000197c7	movl	$0x00000004,%edx
00000000000197cc	movq	%r12,%rcx
00000000000197cf	call	*%r13
00000000000197d2	movq	0x0008d487(%rip),%rsi
00000000000197d9	movq	%r14,%rdi
00000000000197dc	call	*%r13
00000000000197df	movq	0x0009585a(%rip),%rcx
00000000000197e6	movq	0xd0(%rbp),%rdx
00000000000197ea	movq	(%rdx,%rcx),%r8
00000000000197ee	movq	0x0008d473(%rip),%rsi
00000000000197f5	movq	%rax,%rdi
00000000000197f8	movq	%r15,%rdx
00000000000197fb	movq	%rbx,%rcx
00000000000197fe	call	*%r13
0000000000019801	movq	0x0008d468(%rip),%rsi
0000000000019808	movq	%r14,%rdi
000000000001980b	movl	$0x00000004,%edx
0000000000019810	movq	%r12,%rcx
0000000000019813	leaq	0x0009a8de(%rip),%r8
000000000001981a	call	*%r13
000000000001981d	cmpq	%rbx,0xb0(%rbp)
0000000000019821	je	0x00019914
0000000000019827	movq	0x0009581a(%rip),%rax
000000000001982e	movq	0xd0(%rbp),%rcx
0000000000019832	movq	(%rcx,%rax),%rdi
0000000000019836	movq	0x0008ba2b(%rip),%rsi
000000000001983d	call	*0x0006a895(%rip)
0000000000019843	movq	%rax,%rbx
0000000000019846	leaq	0x0008eac3(%rip),%rsi
000000000001984d	movq	%rbx,%rdi
0000000000019850	call	*0x0008eaba(%rip)
0000000000019856	cmpq	%r15,%rax
0000000000019859	ja	0x00019890
000000000001985b	leaq	0x00047cb1(%rip),%rax
0000000000019862	movq	%rax,(%rsp)
0000000000019866	leaq	0xd0(%rbp),%rdi
000000000001986a	leaq	0xc8(%rbp),%rsi
000000000001986e	leaq	0x00047c0b(%rip),%rdx
0000000000019875	leaq	0x00047a72(%rip),%rcx
000000000001987c	leaq	0x00095fb5(%rip),%r9
0000000000019883	movl	$0x000001ec,%r8d
0000000000019889	xorb	%al,%al
000000000001988b	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000019890	decq	%r15
0000000000019893	leaq	0x0008ea86(%rip),%rsi
000000000001989a	movq	%rbx,%rdi
000000000001989d	movq	%r15,%rdx
00000000000198a0	call	*0x0008ea7a(%rip)
00000000000198a6	movq	%rax,%rbx
00000000000198a9	movq	0x0008d3c8(%rip),%rsi
00000000000198b0	movq	0x0008ed41(%rip),%rdi
00000000000198b7	call	*0x0006a81b(%rip)
00000000000198bd	cmpq	%rax,%rbx
00000000000198c0	jne	0x00019914
00000000000198c2	movq	0x0008b4a7(%rip),%rsi
00000000000198c9	movq	0x0008ebf0(%rip),%rdi
00000000000198d0	movq	0x0006a801(%rip),%rbx
00000000000198d7	call	*%rbx
00000000000198d9	movq	0x0008b498(%rip),%rsi
00000000000198e0	leaq	0x0009a831(%rip),%rdx
00000000000198e7	movq	%rax,%rdi
00000000000198ea	call	*%rbx
00000000000198ec	testb	%al,%al
00000000000198ee	je	0x00019914
00000000000198f0	movq	0x00095719(%rip),%rax
00000000000198f7	movq	0xd0(%rbp),%rcx
00000000000198fb	movq	%r15,(%rcx,%rax)
00000000000198ff	movq	0xd0(%rbp),%rcx
0000000000019903	movq	(%rcx,%rax),%rax
0000000000019907	movq	0x000956fa(%rip),%rdx
000000000001990e	movq	%rax,(%rcx,%rdx)
0000000000019912	jmp	0x00019931
0000000000019914	movq	0x000956f5(%rip),%rcx
000000000001991b	movq	0xd0(%rbp),%rax
000000000001991f	movq	(%rax,%rcx),%rcx
0000000000019923	incq	%rcx
0000000000019926	movq	0x000956db(%rip),%rdx
000000000001992d	movq	%rcx,(%rax,%rdx)
0000000000019931	movq	0x00095700(%rip),%rax
0000000000019938	movq	0xd0(%rbp),%rcx
000000000001993c	movq	(%rcx,%rax),%rax
0000000000019940	testq	%rax,%rax
0000000000019943	je	0x000199cb
0000000000019949	movq	0x000956f0(%rip),%rdx
0000000000019950	movq	(%rcx,%rdx),%rsi
0000000000019954	testq	%rsi,%rsi
0000000000019957	jne	0x000199c0
0000000000019959	leaq	0x00047b5e(%rip),%rax
0000000000019960	leaq	0x00095ed1(%rip),%rcx
0000000000019967	leaq	0x00047b70(%rip),%rdx
000000000001996e	movq	%rdx,0x10(%rsp)
0000000000019973	movq	%rcx,0x08(%rsp)
0000000000019978	movq	%rax,(%rsp)
000000000001997c	leaq	0xd0(%rbp),%rdi
0000000000019980	leaq	0xc8(%rbp),%rsi
0000000000019984	leaq	0x00047af5(%rip),%rdx
000000000001998b	leaq	0x0004795c(%rip),%rcx
0000000000019992	leaq	0x0009a73f(%rip),%r9
0000000000019999	movl	$0x000001fa,%r8d
000000000001999f	xorb	%al,%al
00000000000199a1	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
00000000000199a6	movq	0x00095693(%rip),%rcx
00000000000199ad	movq	0xd0(%rbp),%rax
00000000000199b1	movq	(%rax,%rcx),%rsi
00000000000199b5	movq	0x0009567c(%rip),%rcx
00000000000199bc	movq	(%rax,%rcx),%rax
00000000000199c0	movq	%rax,%rdi
00000000000199c3	call	*0x10(%rax)
00000000000199c6	jmp	0x00019af5
00000000000199cb	movq	0x0009563e(%rip),%rax
00000000000199d2	movq	(%rcx,%rax),%rax
00000000000199d6	movq	$0x7fffffffffffffff,%rdx
00000000000199e0	cmpq	%rdx,%rax
00000000000199e3	je	0x00019af5
00000000000199e9	movq	0x00095618(%rip),%rdx
00000000000199f0	cmpq	%rax,(%rcx,%rdx)
00000000000199f4	ja	0x00019af5
00000000000199fa	movq	0x0009561f(%rip),%rsi
0000000000019a01	xorl	%edx,%edx
0000000000019a03	subq	(%rcx,%rsi),%rdx
0000000000019a07	leaq	0x01(%rax,%rdx),%rdx
0000000000019a0c	movq	0x00095605(%rip),%rsi
0000000000019a13	movq	(%rcx,%rsi),%rsi
0000000000019a17	cmpq	%rsi,%rdx
0000000000019a1a	seta	%bh
0000000000019a1e	cmpq	%rax,%rsi
0000000000019a21	leaq	0x01(%rsi),%rbx
0000000000019a25	seta	%cl
0000000000019a28	orb	%bh,%cl
0000000000019a2b	cmovneq	%rdx,%rbx
0000000000019a2f	cmpq	%rax,%rbx
0000000000019a32	ja	0x00019af5
0000000000019a38	movq	0x0008ed51(%rip),%rdi
0000000000019a3f	leaq	0x0008e89a(%rip),%rsi
0000000000019a46	call	*0x0008e894(%rip)
0000000000019a4c	movq	0x000955cd(%rip),%rdx
0000000000019a53	movq	0xd0(%rbp),%rcx
0000000000019a57	movq	(%rcx,%rdx),%r9
0000000000019a5b	movq	0x000955b6(%rip),%rdx
0000000000019a62	movq	(%rcx,%rdx),%r8
0000000000019a66	movq	0x000955a3(%rip),%rdx
0000000000019a6d	movq	(%rcx,%rdx),%rcx
0000000000019a71	movq	0x0008d1c8(%rip),%rsi
0000000000019a78	movq	0x0006a659(%rip),%r14
0000000000019a7f	movq	$0x00000000,0x08(%rsp)
0000000000019a88	movl	$0x00000001,(%rsp)
0000000000019a8f	movq	%rax,%rdi
0000000000019a92	movq	%rbx,%rdx
0000000000019a95	call	*%r14
0000000000019a98	movq	%rax,%rbx
0000000000019a9b	movq	0x0008b32e(%rip),%rsi
0000000000019aa2	movq	0xd0(%rbp),%rdi
0000000000019aa6	call	*%r14
0000000000019aa9	movq	0x0008b328(%rip),%rsi
0000000000019ab0	movq	%rbx,%rdi
0000000000019ab3	movq	%rax,%rdx
0000000000019ab6	call	*%r14
0000000000019ab9	movq	0x0008c098(%rip),%rsi
0000000000019ac0	movq	0xd0(%rbp),%rdi
0000000000019ac4	call	*%r14
0000000000019ac7	movq	0x0008c162(%rip),%rsi
0000000000019ace	movq	%rbx,%rdi
0000000000019ad1	movq	%rax,%rdx
0000000000019ad4	call	*%r14
0000000000019ad7	movq	0x0008b2f2(%rip),%rsi
0000000000019ade	movq	0xd0(%rbp),%rdi
0000000000019ae2	call	*%r14
0000000000019ae5	movq	0x0008b2f4(%rip),%rsi
0000000000019aec	movq	%rax,%rdi
0000000000019aef	movq	%rbx,%rdx
0000000000019af2	call	*%r14
0000000000019af5	movq	0xd0(%rbp),%rax
0000000000019af9	movq	%rax,0xb8(%rbp)
0000000000019afd	movq	0x0008f464(%rip),%rax
0000000000019b04	movq	%rax,0xc0(%rbp)
0000000000019b08	movq	0x0008b029(%rip),%rsi
0000000000019b0f	leaq	0xb8(%rbp),%rdi
0000000000019b13	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000019b18	addq	$0x48,%rsp
0000000000019b1c	popq	%rbx
0000000000019b1d	popq	%r12
0000000000019b1f	popq	%r13
0000000000019b21	popq	%r14
0000000000019b23	popq	%r15
0000000000019b25	popq	%rbp
0000000000019b26	ret
0000000000019b27	nop
-[PBXLSThread debuggerDidUpdateStack:]:
0000000000019b28	pushq	%rbp
0000000000019b29	movq	%rsp,%rbp
0000000000019b2c	pushq	%r15
0000000000019b2e	pushq	%r14
0000000000019b30	pushq	%rbx
0000000000019b31	pushq	%rax
0000000000019b32	movq	%rdi,%r14
0000000000019b35	movq	0x0008db64(%rip),%rsi
0000000000019b3c	movq	0x0006a595(%rip),%r15
0000000000019b43	movl	$0x00000002,%edx
0000000000019b48	call	*%r15
0000000000019b4b	movq	0x0008c116(%rip),%rsi
0000000000019b52	movq	%r14,%rdi
0000000000019b55	call	*%r15
0000000000019b58	movq	%rax,%rbx
0000000000019b5b	movq	0x0008db46(%rip),%rsi
0000000000019b62	movq	%rbx,%rdi
0000000000019b65	call	*%r15
0000000000019b68	movq	0x0008db09(%rip),%rsi
0000000000019b6f	movq	%rbx,%rdi
0000000000019b72	call	*%r15
0000000000019b75	testb	%al,%al
0000000000019b77	je	0x00019b9d
0000000000019b79	movq	0x0008daa0(%rip),%rsi
0000000000019b80	movq	0x0006a551(%rip),%r15
0000000000019b87	movq	%rbx,%rdi
0000000000019b8a	call	*%r15
0000000000019b8d	movq	0x0008db1c(%rip),%rsi
0000000000019b94	movq	%rax,%rdi
0000000000019b97	movq	%rbx,%rdx
0000000000019b9a	call	*%r15
0000000000019b9d	movq	0x0008b6c4(%rip),%rsi
0000000000019ba4	movq	%r14,%rdi
0000000000019ba7	call	*0x0006a52b(%rip)
0000000000019bad	movq	0x0008c22c(%rip),%rsi
0000000000019bb4	movq	0x0008dadd(%rip),%rdx
0000000000019bbb	movq	%rax,%rdi
0000000000019bbe	movq	0x0006a513(%rip),%rax
0000000000019bc5	addq	$0x08,%rsp
0000000000019bc9	popq	%rbx
0000000000019bca	popq	%r14
0000000000019bcc	popq	%r15
0000000000019bce	popq	%rbp
0000000000019bcf	jmp	*%rax
0000000000019bd1	nop
0000000000019bd2	nop
0000000000019bd3	nop
0000000000019bd4	nop
0000000000019bd5	nop
0000000000019bd6	nop
0000000000019bd7	nop
0000000000019bd8	nop
0000000000019bd9	nop
0000000000019bda	nop
0000000000019bdb	nop
0000000000019bdc	nop
0000000000019bdd	nop
0000000000019bde	nop
0000000000019bdf	nop
-[DBGGDBThread updateStackFrames]:
0000000000019be0	pushq	%rbp
0000000000019be1	movq	%rsp,%rbp
0000000000019be4	pushq	%r15
0000000000019be6	pushq	%r14
0000000000019be8	pushq	%r13
0000000000019bea	pushq	%r12
0000000000019bec	pushq	%rbx
0000000000019bed	subq	$0x58,%rsp
0000000000019bf1	movq	%rdi,%rbx
0000000000019bf4	movq	%rbx,0xc8(%rbp)
0000000000019bf8	movq	0x0008d061(%rip),%rsi
0000000000019bff	movq	0x0006a4d2(%rip),%r14
0000000000019c06	call	*%r14
0000000000019c09	movq	%rax,0xb8(%rbp)
0000000000019c0d	movq	0x0008e4d4(%rip),%rsi
0000000000019c14	leaq	0x0009cb5d(%rip),%rdx
0000000000019c1b	movq	%rax,%rdi
0000000000019c1e	call	*%r14
0000000000019c21	movq	%rax,0xa8(%rbp)
0000000000019c25	movq	0x00095a24(%rip),%rax
0000000000019c2c	movq	(%rbx,%rax),%rdi
0000000000019c30	movq	0x0008b631(%rip),%rsi
0000000000019c37	call	*%r14
0000000000019c3a	movq	%rax,0xa0(%rbp)
0000000000019c3e	leaq	0x0008e6cb(%rip),%rsi
0000000000019c45	movq	%rax,%rdi
0000000000019c48	call	*0x0008e6c2(%rip)
0000000000019c4e	movq	%rax,%rbx
0000000000019c51	movq	%rbx,0x98(%rbp)
0000000000019c55	movq	0x0008ba44(%rip),%rsi
0000000000019c5c	movq	0x0008e7fd(%rip),%rdi
0000000000019c63	movq	%rbx,%rdx
0000000000019c66	call	*%r14
0000000000019c69	movq	%rax,%r12
0000000000019c6c	movq	%r12,0xb0(%rbp)
0000000000019c70	xorb	%r15b,%r15b
0000000000019c73	testq	%rbx,%rbx
0000000000019c76	je	0x00019e44
0000000000019c7c	xorb	%r15b,%r15b
0000000000019c7f	xorl	%r13d,%r13d
0000000000019c82	movl	$0x00000001,%eax
0000000000019c87	leaq	0x0008e692(%rip),%rbx
0000000000019c8e	movb	%r15b,0xc3(%rbp)
0000000000019c92	movl	%eax,0xc4(%rbp)
0000000000019c95	movq	0xa0(%rbp),%rdi
0000000000019c99	movq	%rbx,%rsi
0000000000019c9c	movq	%r13,%rdx
0000000000019c9f	call	*0x0008e67b(%rip)
0000000000019ca5	movq	%rax,%r15
0000000000019ca8	movq	0xa8(%rbp),%rdi
0000000000019cac	movq	0x0008b5bd(%rip),%rsi
0000000000019cb3	movq	%r15,%rdx
0000000000019cb6	movq	0x0006a41b(%rip),%r12
0000000000019cbd	call	*%r12
0000000000019cc0	movq	%rax,%r14
0000000000019cc3	movq	0x0008ea26(%rip),%rdi
0000000000019cca	movq	0x0008d037(%rip),%rsi
0000000000019cd1	movq	%r13,%rdx
0000000000019cd4	call	*%r12
0000000000019cd7	movq	%rax,0xd0(%rbp)
0000000000019cdb	movq	$0x7fffffffffffffff,%rax
0000000000019ce5	cmpq	%rax,%r14
0000000000019ce8	je	0x00019da7
0000000000019cee	movq	0xb8(%rbp),%rdi
0000000000019cf2	movq	%rbx,%rsi
0000000000019cf5	movq	%r14,%rdx
0000000000019cf8	call	*0x0008e622(%rip)
0000000000019cfe	movq	%rax,%r14
0000000000019d01	movq	%r14,%rdi
0000000000019d04	movq	0x0008b635(%rip),%rsi
0000000000019d0b	call	*%r12
0000000000019d0e	movq	%rax,%rdi
0000000000019d11	movq	0x0008d860(%rip),%rsi
0000000000019d18	call	*%r12
0000000000019d1b	cmpq	%r13,%rax
0000000000019d1e	je	0x00019d34
0000000000019d20	movq	%r14,%rdi
0000000000019d23	movq	0x0008e3c6(%rip),%rsi
0000000000019d2a	movq	0xd0(%rbp),%rdx
0000000000019d2e	call	*0x0006a3a4(%rip)
0000000000019d34	movq	%r14,%rdi
0000000000019d37	movq	0x0008af62(%rip),%rsi
0000000000019d3e	movq	%r12,%r13
0000000000019d41	call	*%r13
0000000000019d44	movq	%rax,%r12
0000000000019d47	movq	%r15,%rdi
0000000000019d4a	movq	0x0008e367(%rip),%rbx
0000000000019d51	movq	%rbx,%rsi
0000000000019d54	call	*%r13
0000000000019d57	movq	%r12,%rdi
0000000000019d5a	leaq	0x0008e5ff(%rip),%rsi
0000000000019d61	movq	%rax,%rdx
0000000000019d64	call	*0x0008e5f6(%rip)
0000000000019d6a	testb	%al,%al
0000000000019d6c	movq	0xc8(%rbp),%r12
0000000000019d70	jne	0x00019d8b
0000000000019d72	movq	%r15,%rdi
0000000000019d75	movq	%rbx,%rsi
0000000000019d78	call	*%r13
0000000000019d7b	movq	%r14,%rdi
0000000000019d7e	movq	0x0008b0d3(%rip),%rsi
0000000000019d85	movq	%rax,%rdx
0000000000019d88	call	*%r13
0000000000019d8b	movq	%r12,%rdi
0000000000019d8e	movq	0x0008e343(%rip),%rsi
0000000000019d95	movq	%r14,%rdx
0000000000019d98	movq	%r15,%rcx
0000000000019d9b	call	*0x0006a337(%rip)
0000000000019da1	movb	0xc3(%rbp),%r15b
0000000000019da5	jmp	0x00019e14
0000000000019da7	movq	%r15,%rdi
0000000000019daa	movq	0x0008cf8f(%rip),%rsi
0000000000019db1	call	*0x0006a321(%rip)
0000000000019db7	testb	%al,%al
0000000000019db9	movq	0xc8(%rbp),%rax
0000000000019dbd	jne	0x00019de1
0000000000019dbf	movq	%rax,%rdi
0000000000019dc2	movq	0x0008cf47(%rip),%rsi
0000000000019dc9	movq	%r15,%rdx
0000000000019dcc	movq	0xd0(%rbp),%rcx
0000000000019dd0	movl	$0x00000001,%r8d
0000000000019dd6	call	*0x0006a2fc(%rip)
0000000000019ddc	movq	%rax,%r14
0000000000019ddf	jmp	0x00019e11
0000000000019de1	movq	0x0008eee0(%rip),%rdi
0000000000019de8	movq	0x0008e309(%rip),%rsi
0000000000019def	movq	%rax,%rdx
0000000000019df2	movq	0xd0(%rbp),%rcx
0000000000019df6	movq	0x0006a2db(%rip),%rbx
0000000000019dfd	call	*%rbx
0000000000019dff	movq	%rax,%r14
0000000000019e02	movq	%r14,%rdi
0000000000019e05	movq	0x0008e274(%rip),%rsi
0000000000019e0c	movq	%r15,%rdx
0000000000019e0f	call	*%rbx
0000000000019e11	movb	$0x01,%r15b
0000000000019e14	movq	0xb0(%rbp),%r12
0000000000019e18	movq	%r12,%rdi
0000000000019e1b	leaq	0x0008e4de(%rip),%rsi
0000000000019e22	movq	%r14,%rdx
0000000000019e25	call	*0x0008e4d5(%rip)
0000000000019e2b	movl	0xc4(%rbp),%eax
0000000000019e2e	movl	%eax,%r13d
0000000000019e31	incl	%eax
0000000000019e33	cmpq	0x98(%rbp),%r13
0000000000019e37	leaq	0x0008e4e2(%rip),%rbx
0000000000019e3e	jb	0x00019c8e
0000000000019e44	movb	%r15b,%r13b
0000000000019e47	leaq	0x0008e4c2(%rip),%r14
0000000000019e4e	movq	0xb8(%rbp),%rdi
0000000000019e52	movq	%r14,%rsi
0000000000019e55	call	*0x0008e4b5(%rip)
0000000000019e5b	movq	%rax,%r15
0000000000019e5e	movq	%r12,%rdi
0000000000019e61	movq	%r14,%rsi
0000000000019e64	call	*0x0008e4a6(%rip)
0000000000019e6a	cmpq	%rax,%r15
0000000000019e6d	movq	0xc8(%rbp),%rbx
0000000000019e71	jne	0x00019e78
0000000000019e73	testb	%r13b,%r13b
0000000000019e76	je	0x00019edd
0000000000019e78	movq	0x0008c9e9(%rip),%rsi
0000000000019e7f	movq	0x0006a252(%rip),%r14
0000000000019e86	movq	%rbx,%rdi
0000000000019e89	movq	%r12,%rdx
0000000000019e8c	call	*%r14
0000000000019e8f	movq	0x0008d78a(%rip),%rsi
0000000000019e96	movq	%rbx,%rdi
0000000000019e99	call	*%r14
0000000000019e9c	movq	0x0008b02d(%rip),%rsi
0000000000019ea3	movq	%rax,%rdi
0000000000019ea6	call	*%r14
0000000000019ea9	testq	%rax,%rax
0000000000019eac	je	0x00019ef2
0000000000019eae	movq	0x0008c43b(%rip),%rsi
0000000000019eb5	movq	%r12,%rdi
0000000000019eb8	movq	%rax,%rdx
0000000000019ebb	call	*0x0006a217(%rip)
0000000000019ec1	movq	$0x7fffffffffffffff,%rcx
0000000000019ecb	cmpq	%rcx,%rax
0000000000019ece	jne	0x00019ef2
0000000000019ed0	movq	0x00095781(%rip),%rax
0000000000019ed7	movb	$0x01,(%rbx,%rax)
0000000000019edb	jmp	0x00019ef2
0000000000019edd	movq	0x0008e21c(%rip),%rsi
0000000000019ee4	movq	%rbx,%rdi
0000000000019ee7	movl	$0x00000001,%edx
0000000000019eec	call	*0x0006a1e6(%rip)
0000000000019ef2	movq	0x0009575f(%rip),%rax
0000000000019ef9	cmpb	$0x00,(%rbx,%rax)
0000000000019efd	je	0x00019f55
0000000000019eff	movq	0x0008d71a(%rip),%rsi
0000000000019f06	movq	0x0006a1cb(%rip),%r15
0000000000019f0d	movq	%rbx,%rdi
0000000000019f10	call	*%r15
0000000000019f13	movq	%rax,%r14
0000000000019f16	movq	0x0008afab(%rip),%rsi
0000000000019f1d	movq	%r14,%rdi
0000000000019f20	call	*%r15
0000000000019f23	leaq	0x0008e466(%rip),%rsi
0000000000019f2a	movq	%rax,%rdi
0000000000019f2d	movq	%rbx,%rdx
0000000000019f30	call	*0x0008e45a(%rip)
0000000000019f36	testb	%al,%al
0000000000019f38	je	0x00019f4a
0000000000019f3a	movq	0x0008e1c7(%rip),%rsi
0000000000019f41	movq	%r14,%rdi
0000000000019f44	call	*0x0006a18e(%rip)
0000000000019f4a	movq	0x00095707(%rip),%rax
0000000000019f51	movb	$0x00,(%rbx,%rax)
0000000000019f55	addq	$0x58,%rsp
0000000000019f59	popq	%rbx
0000000000019f5a	popq	%r12
0000000000019f5c	popq	%r13
0000000000019f5e	popq	%r14
0000000000019f60	popq	%r15
0000000000019f62	popq	%rbp
0000000000019f63	ret
0000000000019f64	nop
0000000000019f65	nop
0000000000019f66	nop
0000000000019f67	nop
0000000000019f68	nop
0000000000019f69	nop
0000000000019f6a	nop
0000000000019f6b	nop
0000000000019f6c	nop
0000000000019f6d	nop
0000000000019f6e	nop
0000000000019f6f	nop
0000000000019f70	nop
0000000000019f71	nop
0000000000019f72	nop
-[DBGGDBThread _framePointerPBXStackFrame:]:
0000000000019f73	pushq	%rbp
0000000000019f74	movq	%rsp,%rbp
0000000000019f77	pushq	%r15
0000000000019f79	pushq	%r14
0000000000019f7b	pushq	%rbx
0000000000019f7c	pushq	%rax
0000000000019f7d	movq	%rdx,%rbx
0000000000019f80	movq	0x0008e0e9(%rip),%rsi
0000000000019f87	movq	0x0006a14a(%rip),%r15
0000000000019f8e	movq	%rbx,%rdi
0000000000019f91	call	*%r15
0000000000019f94	movq	%rax,%r14
0000000000019f97	movq	0x0008ce32(%rip),%rsi
0000000000019f9e	movq	0x0008e653(%rip),%rdi
0000000000019fa5	call	*%r15
0000000000019fa8	cmpq	%rax,%r14
0000000000019fab	jne	0x00019fba
0000000000019fad	xorl	%eax,%eax
0000000000019faf	addq	$0x08,%rsp
0000000000019fb3	popq	%rbx
0000000000019fb4	popq	%r14
0000000000019fb6	popq	%r15
0000000000019fb8	popq	%rbp
0000000000019fb9	ret
0000000000019fba	movq	0x0008e72f(%rip),%r14
0000000000019fc1	movq	0x0008e0a8(%rip),%rsi
0000000000019fc8	movq	%rbx,%rdi
0000000000019fcb	call	*0x0006a107(%rip)
0000000000019fd1	movq	0x0008e0a0(%rip),%rsi
0000000000019fd8	movq	%r14,%rdi
0000000000019fdb	movq	%rax,%rdx
0000000000019fde	movq	0x0006a0f3(%rip),%rax
0000000000019fe5	addq	$0x08,%rsp
0000000000019fe9	popq	%rbx
0000000000019fea	popq	%r14
0000000000019fec	popq	%r15
0000000000019fee	popq	%rbp
0000000000019fef	jmp	*%rax
0000000000019ff1	nop
0000000000019ff2	nop
0000000000019ff3	nop
0000000000019ff4	nop
-[PBXLSStackFrame framePointerAddress]:
0000000000019ff5	pushq	%rbp
0000000000019ff6	movq	%rsp,%rbp
0000000000019ff9	movq	0x00095370(%rip),%rax
000000000001a000	movq	(%rdi,%rax),%rax
000000000001a004	popq	%rbp
000000000001a005	ret
000000000001a006	nop
000000000001a007	nop
000000000001a008	nop
000000000001a009	nop
-[PBXLSStackFrame displayFunctionName]:
000000000001a00a	pushq	%rbp
000000000001a00b	movq	%rsp,%rbp
000000000001a00e	movq	0x0008bed3(%rip),%rsi
000000000001a015	popq	%rbp
000000000001a016	jmp	*0x0006a0bc(%rip)
000000000001a01c	nop
000000000001a01d	nop
000000000001a01e	nop
000000000001a01f	nop
000000000001a020	nop
000000000001a021	nop
000000000001a022	nop
000000000001a023	nop
000000000001a024	nop
000000000001a025	nop
000000000001a026	nop
000000000001a027	nop
000000000001a028	nop
-[PBXLSStackFrame functionName]:
000000000001a029	pushq	%rbp
000000000001a02a	movq	%rsp,%rbp
000000000001a02d	movq	0x00095374(%rip),%rax
000000000001a034	movq	(%rdi,%rax),%rax
000000000001a038	popq	%rbp
000000000001a039	ret
000000000001a03a	nop
000000000001a03b	nop
000000000001a03c	nop
000000000001a03d	nop
000000000001a03e	nop
000000000001a03f	nop
-[DBGGDBStackFrame initWithParentThread:frameNumber:framePointer:name:]:
000000000001a040	pushq	%rbp
000000000001a041	movq	%rsp,%rbp
000000000001a044	pushq	%r14
000000000001a046	pushq	%rbx
000000000001a047	subq	$0x10,%rsp
000000000001a04b	movq	%rdi,0xe0(%rbp)
000000000001a04f	movq	0x0008f072(%rip),%rax
000000000001a056	movq	%rax,0xe8(%rbp)
000000000001a05a	movq	0x0008e07f(%rip),%rsi
000000000001a061	leaq	0xe0(%rbp),%rdi
000000000001a065	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000001a06a	movq	%rax,%rbx
000000000001a06d	testq	%rbx,%rbx
000000000001a070	je	0x0001a0b9
000000000001a072	movq	0x0008b3b7(%rip),%rsi
000000000001a079	movq	0x0008e3e0(%rip),%rdi
000000000001a080	movq	0x0006a051(%rip),%r14
000000000001a087	call	*%r14
000000000001a08a	movq	0x000955cf(%rip),%rdx
000000000001a091	movq	%rax,%rdi
000000000001a094	movq	%rbx,%rsi
000000000001a097	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001a09c	movq	0x0008d575(%rip),%rsi
000000000001a0a3	movq	%rbx,%rdi
000000000001a0a6	call	*%r14
000000000001a0a9	movq	0x0008da28(%rip),%rsi
000000000001a0b0	movq	%rbx,%rdi
000000000001a0b3	movq	%rbx,%rdx
000000000001a0b6	call	*%r14
000000000001a0b9	movq	%rbx,%rax
000000000001a0bc	addq	$0x10,%rsp
000000000001a0c0	popq	%rbx
000000000001a0c1	popq	%r14
000000000001a0c3	popq	%rbp
000000000001a0c4	ret
-[DBGGDBStackFrame resetDataValues]:
000000000001a0c5	pushq	%rbp
000000000001a0c6	movq	%rsp,%rbp
000000000001a0c9	pushq	%r14
000000000001a0cb	pushq	%rbx
000000000001a0cc	movq	%rdi,%r14
000000000001a0cf	movq	0x0008d82a(%rip),%rsi
000000000001a0d6	movq	0x0008eab3(%rip),%rdi
000000000001a0dd	call	*0x00069ff5(%rip)
000000000001a0e3	movq	%rax,%rbx
000000000001a0e6	movq	0x00095583(%rip),%rdx
000000000001a0ed	movq	%rbx,%rdi
000000000001a0f0	movq	%r14,%rsi
000000000001a0f3	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001a0f8	movq	0x00095579(%rip),%rdx
000000000001a0ff	movq	%rbx,%rdi
000000000001a102	movq	%r14,%rsi
000000000001a105	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001a10a	movq	0x0009556f(%rip),%rdx
000000000001a111	movq	%rbx,%rdi
000000000001a114	movq	%r14,%rsi
000000000001a117	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001a11c	movq	0x00095565(%rip),%rdx
000000000001a123	movq	%rbx,%rdi
000000000001a126	movq	%r14,%rsi
000000000001a129	popq	%rbx
000000000001a12a	popq	%r14
000000000001a12c	popq	%rbp
000000000001a12d	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001a132	nop
000000000001a133	nop
000000000001a134	nop
000000000001a135	nop
000000000001a136	nop
000000000001a137	nop
000000000001a138	nop
000000000001a139	nop
000000000001a13a	nop
-[DBGGDBStackFrame setPBXStackFrame:]:
000000000001a13b	pushq	%rbp
000000000001a13c	movq	%rsp,%rbp
000000000001a13f	pushq	%rbx
000000000001a140	pushq	%rax
000000000001a141	movq	%rdx,%rax
000000000001a144	movq	%rdi,%rbx
000000000001a147	movq	0x0009551a(%rip),%rdx
000000000001a14e	cmpq	%rax,(%rbx,%rdx)
000000000001a152	jne	0x0001a15b
000000000001a154	addq	$0x08,%rsp
000000000001a158	popq	%rbx
000000000001a159	popq	%rbp
000000000001a15a	ret
000000000001a15b	addq	%rbx,%rdx
000000000001a15e	subq	%rbx,%rdx
000000000001a161	movq	%rax,%rdi
000000000001a164	movq	%rbx,%rsi
000000000001a167	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001a16c	movq	0x000954f5(%rip),%rax
000000000001a173	movq	(%rbx,%rax),%rdi
000000000001a177	movq	0x0008dfd2(%rip),%rsi
000000000001a17e	movq	%rbx,%rdx
000000000001a181	call	*0x00069f51(%rip)
000000000001a187	movq	0x000954da(%rip),%rax
000000000001a18e	movq	(%rbx,%rax),%rdi
000000000001a192	movq	0x0008d4b7(%rip),%rsi
000000000001a199	call	*0x00069f39(%rip)
000000000001a19f	movq	0x0008def2(%rip),%rsi
000000000001a1a6	movq	%rbx,%rdi
000000000001a1a9	movq	%rax,%rdx
000000000001a1ac	movq	0x00069f25(%rip),%rax
000000000001a1b3	addq	$0x08,%rsp
000000000001a1b7	popq	%rbx
000000000001a1b8	popq	%rbp
000000000001a1b9	jmp	*%rax
000000000001a1bb	nop
000000000001a1bc	nop
000000000001a1bd	nop
000000000001a1be	nop
000000000001a1bf	nop
-[PBXLSStackFrame setFoundationStackFrame:]:
000000000001a1c0	pushq	%rbp
000000000001a1c1	movq	%rsp,%rbp
000000000001a1c4	pushq	%r14
000000000001a1c6	pushq	%rbx
000000000001a1c7	movq	%rdx,%r14
000000000001a1ca	movq	%rdi,%rbx
000000000001a1cd	movq	0x0008caa4(%rip),%rsi
000000000001a1d4	movq	0x0008e41d(%rip),%rdi
000000000001a1db	call	*0x00069ef7(%rip)
000000000001a1e1	cmpq	%rbx,%rax
000000000001a1e4	je	0x0001a1ff
000000000001a1e6	movq	0x0008b0db(%rip),%rsi
000000000001a1ed	movq	0x0008e404(%rip),%rdi
000000000001a1f4	call	*0x00069ede(%rip)
000000000001a1fa	cmpq	%rbx,%rax
000000000001a1fd	jne	0x0001a204
000000000001a1ff	popq	%rbx
000000000001a200	popq	%r14
000000000001a202	popq	%rbp
000000000001a203	ret
000000000001a204	movq	0x0009516d(%rip),%rdx
000000000001a20b	movq	%r14,%rdi
000000000001a20e	movq	%rbx,%rsi
000000000001a211	popq	%rbx
000000000001a212	popq	%r14
000000000001a214	popq	%rbp
000000000001a215	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001a21a	nop
000000000001a21b	nop
000000000001a21c	nop
000000000001a21d	nop
000000000001a21e	nop
000000000001a21f	nop
+[PBXLSStackFrame globalStackFrame]:
000000000001a220	pushq	%rbp
000000000001a221	movq	%rsp,%rbp
000000000001a224	cmpq	$0xff,0x0009d4ac(%rip)
000000000001a22c	je	0x0001a241
000000000001a22e	leaq	0x0009d4a3(%rip),%rdi
000000000001a235	leaq	0x0009cfa4(%rip),%rsi
000000000001a23c	callq	0x0004e69e	; symbol stub for: _dispatch_once
000000000001a241	movq	0x0009d498(%rip),%rax
000000000001a248	popq	%rbp
000000000001a249	ret
___35+[PBXLSStackFrame globalStackFrame]_block_invoke_0:
000000000001a24a	pushq	%rbp
000000000001a24b	movq	%rsp,%rbp
000000000001a24e	movq	0x0008e3a3(%rip),%rdi
000000000001a255	leaq	0x0008e084(%rip),%rsi
000000000001a25c	call	*0x0008e07e(%rip)
000000000001a262	movq	0x0008aae7(%rip),%rsi
000000000001a269	movq	%rax,%rdi
000000000001a26c	xorl	%edx,%edx
000000000001a26e	call	*0x00069e64(%rip)
000000000001a274	leaq	0x0009d465(%rip),%rsi
000000000001a27b	movq	%rax,%rdi
000000000001a27e	popq	%rbp
000000000001a27f	jmp	0x0004e602	; symbol stub for: _objc_assign_global
000000000001a284	nop
000000000001a285	nop
000000000001a286	nop
000000000001a287	nop
000000000001a288	nop
000000000001a289	nop
000000000001a28a	nop
000000000001a28b	nop
000000000001a28c	nop
000000000001a28d	nop
000000000001a28e	nop
000000000001a28f	nop
-[PBXLSStackFrame instructionPointerAddressString]:
000000000001a290	pushq	%rbp
000000000001a291	movq	%rsp,%rbp
000000000001a294	movq	0x000950f5(%rip),%rax
000000000001a29b	movq	(%rdi,%rax),%rdi
000000000001a29f	popq	%rbp
000000000001a2a0	jmp	_xcodePBXLSAddressAddressString
_xcodePBXLSAddressAddressString:
000000000001a2a5	pushq	%rbp
000000000001a2a6	movq	%rsp,%rbp
000000000001a2a9	movq	%rdi,%rcx
000000000001a2ac	movl	%ecx,%eax
000000000001a2ae	shrq	$0x20,%rcx
000000000001a2b2	movq	0x0008a8bf(%rip),%rsi
000000000001a2b9	movq	0x0008e190(%rip),%rdi
000000000001a2c0	testq	%rcx,%rcx
000000000001a2c3	je	0x0001a2d9
000000000001a2c5	leaq	0x0009ad4c(%rip),%rdx
000000000001a2cc	movq	%rax,%r8
000000000001a2cf	xorb	%al,%al
000000000001a2d1	call	*0x00069e01(%rip)
000000000001a2d7	jmp	0x0001a2eb
000000000001a2d9	leaq	0x0009ad58(%rip),%rdx
000000000001a2e0	movq	%rax,%rcx
000000000001a2e3	xorb	%al,%al
000000000001a2e5	call	*0x00069ded(%rip)
000000000001a2eb	popq	%rbp
000000000001a2ec	ret
000000000001a2ed	nop
000000000001a2ee	nop
000000000001a2ef	nop
000000000001a2f0	nop
-[DBGGDBThread _extractInfoForStackFrame:fromPBXStackFrame:]:
000000000001a2f1	pushq	%rbp
000000000001a2f2	movq	%rsp,%rbp
000000000001a2f5	pushq	%r15
000000000001a2f7	pushq	%r14
000000000001a2f9	pushq	%r13
000000000001a2fb	pushq	%r12
000000000001a2fd	pushq	%rbx
000000000001a2fe	pushq	%rax
000000000001a2ff	movq	%rcx,%r14
000000000001a302	movq	%rdx,%r12
000000000001a305	movq	%rdi,%r15
000000000001a308	movq	0x0008dd71(%rip),%rsi
000000000001a30f	movq	0x00069dc2(%rip),%r13
000000000001a316	movq	%r12,%rdi
000000000001a319	movq	%r14,%rdx
000000000001a31c	call	*%r13
000000000001a31f	movq	0x0008dd62(%rip),%rsi
000000000001a326	movq	%r14,%rdi
000000000001a329	call	*%r13
000000000001a32c	movq	%rax,%rbx
000000000001a32f	movq	0x0008dc42(%rip),%rsi
000000000001a336	movq	%r12,%rdi
000000000001a339	call	*%r13
000000000001a33c	movq	0x0008da4d(%rip),%rsi
000000000001a343	movq	%rax,%rdi
000000000001a346	call	*%r13
000000000001a349	leaq	0x0008e010(%rip),%rsi
000000000001a350	movq	%rax,%rdi
000000000001a353	movq	%rbx,%rdx
000000000001a356	call	*0x0008e004(%rip)
000000000001a35c	testb	%al,%al
000000000001a35e	jne	0x0001a3a1
000000000001a360	leaq	0x0008df89(%rip),%rsi
000000000001a367	movq	%rbx,%rdi
000000000001a36a	call	*0x0008df80(%rip)
000000000001a370	xorl	%edx,%edx
000000000001a372	testq	%rax,%rax
000000000001a375	je	0x0001a391
000000000001a377	movq	0x0008c492(%rip),%rsi
000000000001a37e	movq	0x0008e613(%rip),%rdi
000000000001a385	movq	%rbx,%rdx
000000000001a388	call	*0x00069d4a(%rip)
000000000001a38e	movq	%rax,%rdx
000000000001a391	movq	0x0008dcf8(%rip),%rsi
000000000001a398	movq	%r12,%rdi
000000000001a39b	call	*0x00069d37(%rip)
000000000001a3a1	movq	0x0008af00(%rip),%rsi
000000000001a3a8	movq	0x00069d29(%rip),%r13
000000000001a3af	movq	%r12,%rdi
000000000001a3b2	call	*%r13
000000000001a3b5	movq	0x0008d1bc(%rip),%rsi
000000000001a3bc	movq	%rax,%rdi
000000000001a3bf	call	*%r13
000000000001a3c2	movq	%rax,%rbx
000000000001a3c5	movq	0x0008aedc(%rip),%rsi
000000000001a3cc	movq	%r14,%rdi
000000000001a3cf	call	*%r13
000000000001a3d2	cmpq	%rax,%rbx
000000000001a3d5	je	0x0001a450
000000000001a3d7	movq	0x0008aeca(%rip),%rsi
000000000001a3de	movq	%r14,%rdi
000000000001a3e1	call	*0x00069cf1(%rip)
000000000001a3e7	testq	%rax,%rax
000000000001a3ea	jle	0x0001a429
000000000001a3ec	movq	0x0008e2fd(%rip),%rbx
000000000001a3f3	movq	0x0008aeae(%rip),%rsi
000000000001a3fa	movq	0x00069cd7(%rip),%r13
000000000001a401	movq	%r14,%rdi
000000000001a404	call	*%r13
000000000001a407	movq	0x0008c8fa(%rip),%rsi
000000000001a40e	movq	%rbx,%rdi
000000000001a411	movq	%rax,%rdx
000000000001a414	call	*%r13
000000000001a417	movq	0x0008c8e2(%rip),%rsi
000000000001a41e	movq	%r12,%rdi
000000000001a421	movq	%rax,%rdx
000000000001a424	call	*%r13
000000000001a427	jmp	0x0001a450
000000000001a429	movq	0x0008ae78(%rip),%rsi
000000000001a430	movq	%r12,%rdi
000000000001a433	call	*0x00069c9f(%rip)
000000000001a439	testq	%rax,%rax
000000000001a43c	je	0x0001a450
000000000001a43e	movq	0x0008c8bb(%rip),%rsi
000000000001a445	movq	%r12,%rdi
000000000001a448	xorl	%edx,%edx
000000000001a44a	call	*0x00069c88(%rip)
000000000001a450	movq	0x0008d1f9(%rip),%rsi
000000000001a457	movq	0x00069c7a(%rip),%r13
000000000001a45e	movq	%r12,%rdi
000000000001a461	call	*%r13
000000000001a464	movq	%rax,%rbx
000000000001a467	movq	0x0008d1e2(%rip),%rsi
000000000001a46e	movq	%r14,%rdi
000000000001a471	call	*%r13
000000000001a474	leaq	0x0008dee5(%rip),%rsi
000000000001a47b	movq	%rbx,%rdi
000000000001a47e	movq	%rax,%rdx
000000000001a481	call	*0x0008ded9(%rip)
000000000001a487	testb	%al,%al
000000000001a489	jne	0x0001a4ad
000000000001a48b	movq	0x0008d1be(%rip),%rsi
000000000001a492	movq	0x00069c3f(%rip),%rbx
000000000001a499	movq	%r14,%rdi
000000000001a49c	call	*%rbx
000000000001a49e	movq	0x0008dbf3(%rip),%rsi
000000000001a4a5	movq	%r12,%rdi
000000000001a4a8	movq	%rax,%rdx
000000000001a4ab	call	*%rbx
000000000001a4ad	movq	0x0008c894(%rip),%rsi
000000000001a4b4	movq	0x00069c1d(%rip),%r13
000000000001a4bb	movq	%r12,%rdi
000000000001a4be	call	*%r13
000000000001a4c1	movb	%al,%bl
000000000001a4c3	movq	0x0008c87e(%rip),%rsi
000000000001a4ca	movq	%r14,%rdi
000000000001a4cd	call	*%r13
000000000001a4d0	cmpb	%al,%bl
000000000001a4d2	je	0x0001a4f6
000000000001a4d4	movq	0x0008c86d(%rip),%rsi
000000000001a4db	movq	0x00069bf6(%rip),%rbx
000000000001a4e2	movq	%r14,%rdi
000000000001a4e5	call	*%rbx
000000000001a4e7	movsbl	%al,%edx
000000000001a4ea	movq	0x0008adc7(%rip),%rsi
000000000001a4f1	movq	%r12,%rdi
000000000001a4f4	call	*%rbx
000000000001a4f6	movq	0x0008dba3(%rip),%rsi
000000000001a4fd	movq	0x00069bd4(%rip),%r13
000000000001a504	movq	%r12,%rdi
000000000001a507	call	*%r13
000000000001a50a	movq	%rax,%rbx
000000000001a50d	movq	0x0008db94(%rip),%rsi
000000000001a514	movq	%r14,%rdi
000000000001a517	call	*%r13
000000000001a51a	leaq	0x0008de6f(%rip),%rsi
000000000001a521	movq	%rbx,%rdi
000000000001a524	movq	%rax,%rdx
000000000001a527	call	*0x0008de63(%rip)
000000000001a52d	testb	%al,%al
000000000001a52f	jne	0x0001a553
000000000001a531	movq	0x0008db70(%rip),%rsi
000000000001a538	movq	0x00069b99(%rip),%rbx
000000000001a53f	movq	%r14,%rdi
000000000001a542	call	*%rbx
000000000001a544	movq	0x0008db65(%rip),%rsi
000000000001a54b	movq	%r12,%rdi
000000000001a54e	movq	%rax,%rdx
000000000001a551	call	*%rbx
000000000001a553	movq	0x0008a746(%rip),%rsi
000000000001a55a	movq	0x00069b77(%rip),%r13
000000000001a561	movq	%r12,%rdi
000000000001a564	call	*%r13
000000000001a567	movq	%rax,%rbx
000000000001a56a	movq	0x0008db47(%rip),%rsi
000000000001a571	movq	%r14,%rdi
000000000001a574	call	*%r13
000000000001a577	leaq	0x0008dde2(%rip),%rsi
000000000001a57e	movq	%rbx,%rdi
000000000001a581	movq	%rax,%rdx
000000000001a584	call	*0x0008ddd6(%rip)
000000000001a58a	testb	%al,%al
000000000001a58c	jne	0x0001a5b0
000000000001a58e	movq	0x0008db23(%rip),%rsi
000000000001a595	movq	0x00069b3c(%rip),%rbx
000000000001a59c	movq	%r14,%rdi
000000000001a59f	call	*%rbx
000000000001a5a1	movq	0x0008a8b0(%rip),%rsi
000000000001a5a8	movq	%r12,%rdi
000000000001a5ab	movq	%rax,%rdx
000000000001a5ae	call	*%rbx
000000000001a5b0	movq	0x0008dab9(%rip),%rsi
000000000001a5b7	movq	0x00069b1a(%rip),%r13
000000000001a5be	movq	%r14,%rdi
000000000001a5c1	call	*%r13
000000000001a5c4	movq	%rax,%rbx
000000000001a5c7	movq	0x0008c802(%rip),%rsi
000000000001a5ce	movq	0x0008e023(%rip),%rdi
000000000001a5d5	call	*%r13
000000000001a5d8	cmpq	%rax,%rbx
000000000001a5db	jne	0x0001a5f2
000000000001a5dd	movq	0x0008cf8c(%rip),%rsi
000000000001a5e4	movq	%r12,%rdi
000000000001a5e7	call	*0x00069aeb(%rip)
000000000001a5ed	testq	%rax,%rax
000000000001a5f0	je	0x0001a628
000000000001a5f2	movq	0x0008da77(%rip),%rsi
000000000001a5f9	movq	0x00069ad8(%rip),%r13
000000000001a600	movq	%r14,%rdi
000000000001a603	call	*%r13
000000000001a606	movq	%rax,%rbx
000000000001a609	movq	0x0008cf60(%rip),%rsi
000000000001a610	movq	%r12,%rdi
000000000001a613	call	*%r13
000000000001a616	movq	0x0008daa3(%rip),%rsi
000000000001a61d	movq	%rax,%rdi
000000000001a620	call	*%r13
000000000001a623	cmpq	%rax,%rbx
000000000001a626	jne	0x0001a637
000000000001a628	addq	$0x08,%rsp
000000000001a62c	popq	%rbx
000000000001a62d	popq	%r12
000000000001a62f	popq	%r13
000000000001a631	popq	%r14
000000000001a633	popq	%r15
000000000001a635	popq	%rbp
000000000001a636	ret
000000000001a637	movq	0x0008da8a(%rip),%rsi
000000000001a63e	movq	%r15,%rdi
000000000001a641	movq	%r14,%rdx
000000000001a644	call	*0x00069a8e(%rip)
000000000001a64a	movq	0x0008da7f(%rip),%rsi
000000000001a651	movq	%r12,%rdi
000000000001a654	movq	%rax,%rdx
000000000001a657	movq	0x00069a7a(%rip),%rax
000000000001a65e	addq	$0x08,%rsp
000000000001a662	popq	%rbx
000000000001a663	popq	%r12
000000000001a665	popq	%r13
000000000001a667	popq	%r14
000000000001a669	popq	%r15
000000000001a66b	popq	%rbp
000000000001a66c	jmp	*%rax
000000000001a66e	nop
000000000001a66f	nop
000000000001a670	nop
000000000001a671	nop
000000000001a672	nop
000000000001a673	nop
000000000001a674	nop
000000000001a675	nop
000000000001a676	nop
000000000001a677	nop
000000000001a678	nop
000000000001a679	nop
000000000001a67a	nop
-[PBXLSStackFrame realFileName]:
000000000001a67b	pushq	%rbp
000000000001a67c	movq	%rsp,%rbp
000000000001a67f	movq	0x00094d1a(%rip),%rax
000000000001a686	movq	(%rdi,%rax),%rax
000000000001a68a	popq	%rbp
000000000001a68b	ret
000000000001a68c	nop
000000000001a68d	nop
000000000001a68e	nop
000000000001a68f	nop
000000000001a690	nop
000000000001a691	nop
000000000001a692	nop
000000000001a693	nop
000000000001a694	nop
000000000001a695	nop
000000000001a696	nop
000000000001a697	nop
000000000001a698	nop
000000000001a699	nop
000000000001a69a	nop
-[DBGGDBStackFrame lineNumber]:
000000000001a69b	pushq	%rbp
000000000001a69c	movq	%rsp,%rbp
000000000001a69f	pushq	%rbx
000000000001a6a0	pushq	%rax
000000000001a6a1	movq	%rdi,%rbx
000000000001a6a4	movq	0x00094fbd(%rip),%rax
000000000001a6ab	movq	(%rbx,%rax),%rdi
000000000001a6af	movq	0x0008abf2(%rip),%rsi
000000000001a6b6	call	*0x00069a1c(%rip)
000000000001a6bc	testq	%rax,%rax
000000000001a6bf	jns	0x0001a6ca
000000000001a6c1	xorl	%eax,%eax
000000000001a6c3	addq	$0x08,%rsp
000000000001a6c7	popq	%rbx
000000000001a6c8	popq	%rbp
000000000001a6c9	ret
000000000001a6ca	movq	0x00094f97(%rip),%rax
000000000001a6d1	movq	(%rbx,%rax),%rdi
000000000001a6d5	movq	0x0008e014(%rip),%rbx
000000000001a6dc	movq	0x0008abc5(%rip),%rsi
000000000001a6e3	call	*0x000699ef(%rip)
000000000001a6e9	movq	0x0008c618(%rip),%rsi
000000000001a6f0	movq	%rbx,%rdi
000000000001a6f3	movq	%rax,%rdx
000000000001a6f6	movq	0x000699db(%rip),%rax
000000000001a6fd	addq	$0x08,%rsp
000000000001a701	popq	%rbx
000000000001a702	popq	%rbp
000000000001a703	jmp	*%rax
000000000001a705	nop
000000000001a706	nop
-[PBXLSStackFrame lineNumber]:
000000000001a707	pushq	%rbp
000000000001a708	movq	%rsp,%rbp
000000000001a70b	movq	0x00094c56(%rip),%rax
000000000001a712	movq	(%rdi,%rax),%rax
000000000001a716	popq	%rbp
000000000001a717	ret
000000000001a718	nop
000000000001a719	nop
000000000001a71a	nop
000000000001a71b	nop
000000000001a71c	nop
000000000001a71d	nop
000000000001a71e	nop
000000000001a71f	nop
000000000001a720	nop
000000000001a721	nop
000000000001a722	nop
-[PBXLSStackFrame hasSymbols]:
000000000001a723	pushq	%rbp
000000000001a724	movq	%rsp,%rbp
000000000001a727	movq	0x00094ca2(%rip),%rax
000000000001a72e	movb	(%rdi,%rax),%al
000000000001a731	movsbl	%al,%eax
000000000001a734	popq	%rbp
000000000001a735	ret
000000000001a736	nop
-[PBXLSStackFrame foundationModule]:
000000000001a737	pushq	%rbp
000000000001a738	movq	%rsp,%rbp
000000000001a73b	movq	0x00094c86(%rip),%rax
000000000001a742	movq	(%rdi,%rax),%rax
000000000001a746	popq	%rbp
000000000001a747	ret
000000000001a748	nop
000000000001a749	nop
000000000001a74a	nop
+[DBGGDBStackFrame keyPathsForValuesAffectingLineNumber]:
000000000001a74b	pushq	%rbp
000000000001a74c	movq	%rsp,%rbp
000000000001a74f	movq	0x0008da02(%rip),%rsi
000000000001a756	movq	0x0008df13(%rip),%rdi
000000000001a75d	leaq	0x0009c074(%rip),%rdx
000000000001a764	popq	%rbp
000000000001a765	jmp	*0x0006996d(%rip)
-[DBGGDBStackFrame PBXStackFrame]:
000000000001a76b	pushq	%rbp
000000000001a76c	movq	%rsp,%rbp
000000000001a76f	movq	0x00094ef2(%rip),%rax
000000000001a776	movq	(%rdi,%rax),%rax
000000000001a77a	popq	%rbp
000000000001a77b	ret
000000000001a77c	nop
000000000001a77d	nop
000000000001a77e	nop
000000000001a77f	nop
000000000001a780	nop
000000000001a781	nop
000000000001a782	nop
-[DBGGDBStackFrame fileStatics]:
000000000001a783	pushq	%rbp
000000000001a784	movq	%rsp,%rbp
000000000001a787	pushq	%r14
000000000001a789	pushq	%rbx
000000000001a78a	subq	$0x30,%rsp
000000000001a78e	movq	%rdi,%rbx
000000000001a791	movq	0x00094ee0(%rip),%rax
000000000001a798	movq	(%rbx,%rax),%r14
000000000001a79c	movq	0x0008e3ed(%rip),%rdi
000000000001a7a3	leaq	0x0008db86(%rip),%rsi
000000000001a7aa	call	*0x0008db80(%rip)
000000000001a7b0	leaq	0x0008db89(%rip),%rsi
000000000001a7b7	movq	%r14,%rdi
000000000001a7ba	movq	%rax,%rdx
000000000001a7bd	call	*0x0008db7d(%rip)
000000000001a7c3	testb	%al,%al
000000000001a7c5	je	0x0001a82e
000000000001a7c7	movq	0x00094eaa(%rip),%rdx
000000000001a7ce	xorl	%edi,%edi
000000000001a7d0	movq	%rbx,%rsi
000000000001a7d3	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001a7d8	movq	0x000698b1(%rip),%rax
000000000001a7df	movq	%rax,0xc8(%rbp)
000000000001a7e3	movl	$0x42000000,0xd0(%rbp)
000000000001a7ea	movl	$0x00000000,0xd4(%rbp)
000000000001a7f1	leaq	0x000084aa(%rip),%rax
000000000001a7f8	movq	%rax,0xd8(%rbp)
000000000001a7fc	leaq	0xe8(%rbp),%rsi
000000000001a800	leaq	0x0009cd09(%rip),%rax
000000000001a807	movq	%rax,0xe0(%rbp)
000000000001a80b	movq	%rbx,%rdi
000000000001a80e	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
000000000001a813	leaq	0x000967be(%rip),%rdx
000000000001a81a	leaq	0xc8(%rbp),%rcx
000000000001a81e	movq	0x0008d9ab(%rip),%rsi
000000000001a825	movq	%rbx,%rdi
000000000001a828	call	*0x000698aa(%rip)
000000000001a82e	movq	0x00094e43(%rip),%rax
000000000001a835	movq	(%rbx,%rax),%rax
000000000001a839	addq	$0x30,%rsp
000000000001a83d	popq	%rbx
000000000001a83e	popq	%r14
000000000001a840	popq	%rbp
000000000001a841	ret
000000000001a842	nop
000000000001a843	nop
000000000001a844	nop
000000000001a845	nop
000000000001a846	nop
000000000001a847	nop
000000000001a848	nop
000000000001a849	nop
000000000001a84a	nop
000000000001a84b	nop
000000000001a84c	nop
000000000001a84d	nop
-[DBGGDBStackFrame _requestStackBasedContainerNamed:completionBlock:]:
000000000001a84e	pushq	%rbp
000000000001a84f	movq	%rsp,%rbp
000000000001a852	pushq	%r15
000000000001a854	pushq	%r14
000000000001a856	pushq	%r13
000000000001a858	pushq	%r12
000000000001a85a	pushq	%rbx
000000000001a85b	subq	$0x78,%rsp
000000000001a85f	movq	%rcx,%r15
000000000001a862	movq	%rdx,0xffffff68(%rbp)
000000000001a869	movq	%rdi,%rbx
000000000001a86c	movq	$0x00000000,0xa8(%rbp)
000000000001a874	leaq	0xa8(%rbp),%r14
000000000001a878	movq	%r14,0xb0(%rbp)
000000000001a87c	movl	$0x02000000,0xb8(%rbp)
000000000001a883	movl	$0x00000030,0xbc(%rbp)
000000000001a88a	leaq	0x000006ff(%rip),%rax
000000000001a891	movq	%rax,0xc0(%rbp)
000000000001a895	leaq	0x00032084(%rip),%rax
000000000001a89c	movq	%rax,0xc8(%rbp)
000000000001a8a0	movq	0x00069831(%rip),%r13
000000000001a8a7	movq	0x00094dba(%rip),%rax
000000000001a8ae	movq	(%rbx,%rax),%rdi
000000000001a8b2	movq	0x0008ac8f(%rip),%rsi
000000000001a8b9	call	*%r13
000000000001a8bc	movq	%rax,0xd0(%rbp)
000000000001a8c0	movq	0x00094da1(%rip),%rax
000000000001a8c7	movq	(%rbx,%rax),%rdi
000000000001a8cb	movq	0x0008cd36(%rip),%rsi
000000000001a8d2	call	*%r13
000000000001a8d5	movq	0x0008a19c(%rip),%rsi
000000000001a8dc	movq	%r15,%rdi
000000000001a8df	call	*%r13
000000000001a8e2	movq	%rax,%r12
000000000001a8e5	leaq	0x98(%rbp),%rsi
000000000001a8e9	leaq	0x0009cb60(%rip),%rax
000000000001a8f0	leaq	0x0000074b(%rip),%rcx
000000000001a8f7	movq	0x00069792(%rip),%rdx
000000000001a8fe	movq	0xb0(%rbp),%rdi
000000000001a902	movq	0x28(%rdi),%r15
000000000001a906	movq	%rdx,0xffffff70(%rbp)
000000000001a90d	movl	$0x42000000,0xffffff78(%rbp)
000000000001a917	movl	$0x00000000,0xffffff7c(%rbp)
000000000001a921	movq	%rcx,0x80(%rbp)
000000000001a925	movq	%rax,0x88(%rbp)
000000000001a929	movq	%r14,0x90(%rbp)
000000000001a92d	movq	0xffffff68(%rbp),%rdi
000000000001a934	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
000000000001a939	leaq	0xa0(%rbp),%rsi
000000000001a93d	movq	%r12,%rdi
000000000001a940	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
000000000001a945	leaq	0x0009becc(%rip),%rcx
000000000001a94c	leaq	0xffffff70(%rbp),%r8
000000000001a953	movq	0x0008d85e(%rip),%rsi
000000000001a95a	movq	%rbx,%rdi
000000000001a95d	movq	%r15,%rdx
000000000001a960	call	*%r13
000000000001a963	addq	$0x78,%rsp
000000000001a967	popq	%rbx
000000000001a968	popq	%r12
000000000001a96a	popq	%r13
000000000001a96c	popq	%r14
000000000001a96e	popq	%r15
000000000001a970	popq	%rbp
000000000001a971	ret
000000000001a972	nop
-[PBXLSStackFrame containerDataValue]:
000000000001a973	pushq	%rbp
000000000001a974	movq	%rsp,%rbp
000000000001a977	pushq	%r14
000000000001a979	pushq	%rbx
000000000001a97a	movq	%rdi,%rbx
000000000001a97d	movq	0x00094a04(%rip),%rax
000000000001a984	movq	(%rbx,%rax),%rax
000000000001a988	testq	%rax,%rax
000000000001a98b	jne	0x0001a9ef
000000000001a98d	movq	0x0008ac34(%rip),%rsi
000000000001a994	movq	0x0006973d(%rip),%r14
000000000001a99b	movq	%rbx,%rdi
000000000001a99e	call	*%r14
000000000001a9a1	movq	0x0008cc90(%rip),%rsi
000000000001a9a8	movq	%rax,%rdi
000000000001a9ab	movq	%rbx,%rdx
000000000001a9ae	call	*%r14
000000000001a9b1	movq	0x000949d0(%rip),%rdx
000000000001a9b8	movq	%rax,%rdi
000000000001a9bb	movq	%rbx,%rsi
000000000001a9be	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001a9c3	xorl	%eax,%eax
000000000001a9c5	movq	0x000949bc(%rip),%rcx
000000000001a9cc	movq	(%rbx,%rcx),%rdi
000000000001a9d0	testq	%rdi,%rdi
000000000001a9d3	je	0x0001a9ef
000000000001a9d5	movq	0x0008ac04(%rip),%rsi
000000000001a9dc	xorl	%edx,%edx
000000000001a9de	call	*0x000696f4(%rip)
000000000001a9e4	movq	0x0009499d(%rip),%rax
000000000001a9eb	movq	(%rbx,%rax),%rax
000000000001a9ef	popq	%rbx
000000000001a9f0	popq	%r14
000000000001a9f2	popq	%rbp
000000000001a9f3	ret
-[PBXGDB_Adaptor newDataValueForFrame:]:
000000000001a9f4	pushq	%rbp
000000000001a9f5	movq	%rsp,%rbp
000000000001a9f8	pushq	%r15
000000000001a9fa	pushq	%r14
000000000001a9fc	pushq	%r13
000000000001a9fe	pushq	%r12
000000000001aa00	pushq	%rbx
000000000001aa01	subq	$0x18,%rsp
000000000001aa05	movq	%rdx,%r12
000000000001aa08	movq	%rdi,0xd0(%rbp)
000000000001aa0c	movq	0x0008a885(%rip),%rsi
000000000001aa13	movq	0x000696be(%rip),%r15
000000000001aa1a	movq	%r12,%rdi
000000000001aa1d	call	*%r15
000000000001aa20	movq	%rax,%rbx
000000000001aa23	movq	0x0008a6c6(%rip),%rsi
000000000001aa2a	movq	%rbx,%rdi
000000000001aa2d	call	*%r15
000000000001aa30	movq	%rax,0xc8(%rbp)
000000000001aa34	movq	0x0008a82d(%rip),%rsi
000000000001aa3b	movq	%rbx,%rdi
000000000001aa3e	call	*%r15
000000000001aa41	movq	0x0008a828(%rip),%rsi
000000000001aa48	movq	%rax,%rdi
000000000001aa4b	movq	%r12,%rdx
000000000001aa4e	call	*%r15
000000000001aa51	movq	%rax,%rbx
000000000001aa54	movq	0x0008a845(%rip),%rsi
000000000001aa5b	movq	%r12,%rdi
000000000001aa5e	call	*%r15
000000000001aa61	movq	%rax,%r14
000000000001aa64	movq	0x0008a83d(%rip),%rsi
000000000001aa6b	movq	%r12,%rdi
000000000001aa6e	call	*%r15
000000000001aa71	movq	%rax,%r13
000000000001aa74	leaq	0x0008d865(%rip),%rsi
000000000001aa7b	movq	0x0008db66(%rip),%rdi
000000000001aa82	call	*0x0008d858(%rip)
000000000001aa88	movq	0x0008a821(%rip),%rsi
000000000001aa8f	movq	%rax,%rdi
000000000001aa92	movq	0xd0(%rbp),%rdx
000000000001aa96	movq	0xc8(%rbp),%rcx
000000000001aa9a	movq	%rbx,%r8
000000000001aa9d	call	*%r15
000000000001aaa0	movq	%rax,%rbx
000000000001aaa3	xorb	%al,%al
000000000001aaa5	testq	%r14,%r14
000000000001aaa8	je	0x0001aac8
000000000001aaaa	leaq	0x0008d83f(%rip),%rsi
000000000001aab1	movq	%r14,%rdi
000000000001aab4	call	*0x0008d836(%rip)
000000000001aaba	testq	%rax,%rax
000000000001aabd	setne	%cl
000000000001aac0	testq	%r13,%r13
000000000001aac3	setne	%al
000000000001aac6	andb	%cl,%al
000000000001aac8	movq	0x0008a7e9(%rip),%rsi
000000000001aacf	movzbl	%al,%edx
000000000001aad2	movq	0x000695ff(%rip),%r14
000000000001aad9	movq	%rbx,%rdi
000000000001aadc	call	*%r14
000000000001aadf	movq	0x0008a7da(%rip),%rsi
000000000001aae6	movq	%rbx,%rdi
000000000001aae9	movq	%r12,%rdx
000000000001aaec	call	*%r14
000000000001aaef	movq	%rbx,%rax
000000000001aaf2	addq	$0x18,%rsp
000000000001aaf6	popq	%rbx
000000000001aaf7	popq	%r12
000000000001aaf9	popq	%r13
000000000001aafb	popq	%r14
000000000001aafd	popq	%r15
000000000001aaff	popq	%rbp
000000000001ab00	ret
000000000001ab01	nop
000000000001ab02	nop
000000000001ab03	nop
000000000001ab04	nop
000000000001ab05	nop
000000000001ab06	nop
000000000001ab07	nop
000000000001ab08	nop
000000000001ab09	nop
000000000001ab0a	nop
000000000001ab0b	nop
-[PBXLSStackFrame parentThread]:
000000000001ab0c	pushq	%rbp
000000000001ab0d	movq	%rsp,%rbp
000000000001ab10	movq	0x0008c861(%rip),%rsi
000000000001ab17	popq	%rbp
000000000001ab18	jmp	*0x000695ba(%rip)
000000000001ab1e	nop
000000000001ab1f	nop
000000000001ab20	nop
-[PBXLSModel parentModel]:
000000000001ab21	pushq	%rbp
000000000001ab22	movq	%rsp,%rbp
000000000001ab25	movq	0x000947e4(%rip),%rax
000000000001ab2c	movq	(%rdi,%rax),%rax
000000000001ab30	popq	%rbp
000000000001ab31	ret
000000000001ab32	nop
000000000001ab33	nop
000000000001ab34	nop
-[PBXLSStackFrame fileName]:
000000000001ab35	pushq	%rbp
000000000001ab36	movq	%rsp,%rbp
000000000001ab39	pushq	%rbx
000000000001ab3a	pushq	%rax
000000000001ab3b	movq	%rdi,%rbx
000000000001ab3e	movq	0x0009485b(%rip),%rax
000000000001ab45	movq	(%rbx,%rax),%rdi
000000000001ab49	leaq	0x0008d810(%rip),%rsi
000000000001ab50	leaq	0x00094de1(%rip),%rdx
000000000001ab57	call	*0x0008d803(%rip)
000000000001ab5d	cmpb	$0x01,%al
000000000001ab5f	jne	0x0001aba9
000000000001ab61	movq	0x00094840(%rip),%rax
000000000001ab68	movq	(%rbx,%rax),%rcx
000000000001ab6c	testq	%rcx,%rcx
000000000001ab6f	je	0x0001aba9
000000000001ab71	movq	0x000947f0(%rip),%rax
000000000001ab78	cmpq	$0x00,(%rbx,%rax)
000000000001ab7d	jns	0x0001aba9
000000000001ab7f	movq	0x000947ea(%rip),%rax
000000000001ab86	movq	(%rbx,%rax),%r8
000000000001ab8a	movq	0x00089fe7(%rip),%rsi
000000000001ab91	movq	0x0008d8b8(%rip),%rdi
000000000001ab98	leaq	0x0009ab19(%rip),%rdx
000000000001ab9f	xorb	%al,%al
000000000001aba1	call	*0x00069531(%rip)
000000000001aba7	jmp	0x0001abb4
000000000001aba9	movq	0x000947f0(%rip),%rax
000000000001abb0	movq	(%rbx,%rax),%rax
000000000001abb4	addq	$0x08,%rsp
000000000001abb8	popq	%rbx
000000000001abb9	popq	%rbp
000000000001abba	ret
-[PBXGDB_FrameDataValue2 initWithDebugger:threadID:frameIndex:]:
000000000001abbb	pushq	%rbp
000000000001abbc	movq	%rsp,%rbp
000000000001abbf	pushq	%r15
000000000001abc1	pushq	%r14
000000000001abc3	pushq	%r12
000000000001abc5	pushq	%rbx
000000000001abc6	subq	$0x10,%rsp
000000000001abca	movq	%r8,%r14
000000000001abcd	movq	%rcx,%r15
000000000001abd0	movq	%rdi,0xd0(%rbp)
000000000001abd4	movq	0x0008e23d(%rip),%rax
000000000001abdb	movq	%rax,0xd8(%rbp)
000000000001abdf	movq	0x0008a16a(%rip),%rsi
000000000001abe6	leaq	0xd0(%rbp),%rdi
000000000001abea	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000001abef	movq	%rax,%rbx
000000000001abf2	movq	0x000694df(%rip),%r12
000000000001abf9	leaq	0x00093cf0(%rip),%rax
000000000001ac00	leaq	0x00093ce1(%rip),%rcx
000000000001ac07	movq	0x00093e4a(%rip),%rdx
000000000001ac0e	movb	$0x00,(%rbx,%rdx)
000000000001ac12	movq	(%rcx),%rcx
000000000001ac15	movq	%r15,(%rbx,%rcx)
000000000001ac19	movq	(%rax),%rax
000000000001ac1c	movq	%r14,(%rbx,%rax)
000000000001ac20	movq	0x0008a691(%rip),%rsi
000000000001ac27	movq	%rbx,%rdi
000000000001ac2a	movl	$0x00000001,%edx
000000000001ac2f	call	*%r12
000000000001ac32	movq	0x0008aa97(%rip),%rsi
000000000001ac39	movq	%rbx,%rdi
000000000001ac3c	movl	$0x00000001,%edx
000000000001ac41	call	*%r12
000000000001ac44	movq	0x0008abc5(%rip),%rsi
000000000001ac4b	movq	%rbx,%rdi
000000000001ac4e	movl	$0x00000001,%edx
000000000001ac53	call	*%r12
000000000001ac56	movq	0x0008a93b(%rip),%rsi
000000000001ac5d	movq	%rbx,%rdi
000000000001ac60	movl	$0x00000002,%edx
000000000001ac65	call	*%r12
000000000001ac68	movq	%rbx,%rax
000000000001ac6b	addq	$0x10,%rsp
000000000001ac6f	popq	%rbx
000000000001ac70	popq	%r12
000000000001ac72	popq	%r14
000000000001ac74	popq	%r15
000000000001ac76	popq	%rbp
000000000001ac77	ret
-[PBXGDB_ContainingDataValue2 initWithDebugger:]:
000000000001ac78	pushq	%rbp
000000000001ac79	movq	%rsp,%rbp
000000000001ac7c	pushq	%r15
000000000001ac7e	pushq	%r14
000000000001ac80	pushq	%rbx
000000000001ac81	subq	$0x18,%rsp
000000000001ac85	movq	%rdi,0xd8(%rbp)
000000000001ac89	movq	0x0008e0b0(%rip),%rax
000000000001ac90	movq	%rax,0xe0(%rbp)
000000000001ac94	movq	0x0008a0b5(%rip),%rsi
000000000001ac9b	leaq	0xd8(%rbp),%rdi
000000000001ac9f	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000001aca4	movq	%rax,%rbx
000000000001aca7	leaq	0x0008d632(%rip),%r14
000000000001acae	movq	0x0008d7fb(%rip),%rdi
000000000001acb5	movq	%r14,%rsi
000000000001acb8	call	*0x0008d622(%rip)
000000000001acbe	movq	0x00069413(%rip),%r15
000000000001acc5	movq	0x00089da4(%rip),%rsi
000000000001accc	movq	%rax,%rdi
000000000001accf	call	*%r15
000000000001acd2	movq	0x00093b7f(%rip),%rdx
000000000001acd9	movq	%rax,%rdi
000000000001acdc	movq	%rbx,%rsi
000000000001acdf	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001ace4	movq	0x00093b75(%rip),%rax
000000000001aceb	movq	$0x00000000,(%rbx,%rax)
000000000001acf3	movq	0x0008d96e(%rip),%rdi
000000000001acfa	movq	%r14,%rsi
000000000001acfd	call	*0x0008d5dd(%rip)
000000000001ad03	movq	0x00089d66(%rip),%rsi
000000000001ad0a	movq	%rax,%rdi
000000000001ad0d	call	*%r15
000000000001ad10	movq	0x00093b51(%rip),%rdx
000000000001ad17	movq	%rax,%rdi
000000000001ad1a	movq	%rbx,%rsi
000000000001ad1d	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001ad22	movq	%rbx,%rax
000000000001ad25	addq	$0x18,%rsp
000000000001ad29	popq	%rbx
000000000001ad2a	popq	%r14
000000000001ad2c	popq	%r15
000000000001ad2e	popq	%rbp
000000000001ad2f	ret
-[PBXGDB_FrameDataValue2 setHasSymbols:]:
000000000001ad30	pushq	%rbp
000000000001ad31	movq	%rsp,%rbp
000000000001ad34	movq	0x00093d25(%rip),%rax
000000000001ad3b	movb	%dl,(%rdi,%rax)
000000000001ad3e	popq	%rbp
000000000001ad3f	ret
-[PBXLSDataValue setContextFrame:]:
000000000001ad40	pushq	%rbp
000000000001ad41	movq	%rsp,%rbp
000000000001ad44	movq	%rdx,%rax
000000000001ad47	movq	%rdi,%rcx
000000000001ad4a	movq	0x000944a7(%rip),%rdx
000000000001ad51	movq	%rax,%rdi
000000000001ad54	movq	%rcx,%rsi
000000000001ad57	popq	%rbp
000000000001ad58	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001ad5d	nop
000000000001ad5e	nop
-[DBGGDBStackFrame _watchChangeObject:keyPath:withChangeBlock:]:
000000000001ad5f	pushq	%rbp
000000000001ad60	movq	%rsp,%rbp
000000000001ad63	pushq	%r15
000000000001ad65	pushq	%r14
000000000001ad67	pushq	%r13
000000000001ad69	pushq	%r12
000000000001ad6b	pushq	%rbx
000000000001ad6c	subq	$0x000000c8,%rsp
000000000001ad73	movq	%r8,0xffffff28(%rbp)
000000000001ad7a	movq	%rcx,0xffffff30(%rbp)
000000000001ad81	movq	%rdx,%r15
000000000001ad84	movq	%rdi,%rbx
000000000001ad87	movq	%rbx,0xd0(%rbp)
000000000001ad8b	movq	%rsi,0xc8(%rbp)
000000000001ad8f	testq	%r15,%r15
000000000001ad92	je	0x0001af6f
000000000001ad98	movq	0x000948f9(%rip),%rax
000000000001ad9f	cmpq	$0x00,(%rbx,%rax)
000000000001ada4	jne	0x0001add1
000000000001ada6	movq	0x0008a72b(%rip),%rsi
000000000001adad	movq	0x0008d8b4(%rip),%rdi
000000000001adb4	call	*0x0006931e(%rip)
000000000001adba	movq	0x000948d7(%rip),%rdx
000000000001adc1	movq	0xd0(%rbp),%rsi
000000000001adc5	movq	%rax,%rdi
000000000001adc8	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001adcd	movq	0xd0(%rbp),%rbx
000000000001add1	movq	$0x00000000,0x98(%rbp)
000000000001add9	leaq	0x98(%rbp),%r14
000000000001addd	movq	%r14,0xa0(%rbp)
000000000001ade1	movl	$0x02000000,0xa8(%rbp)
000000000001ade8	movl	$0x00000030,0xac(%rbp)
000000000001adef	leaq	0x0000019a(%rip),%rax
000000000001adf6	movq	%rax,0xb0(%rbp)
000000000001adfa	leaq	0x00031b1f(%rip),%rax
000000000001ae01	movq	%rax,0xb8(%rbp)
000000000001ae05	movq	$0x00000000,0xc0(%rbp)
000000000001ae0d	movq	0x000692c4(%rip),%r12
000000000001ae14	leaq	0xffffff78(%rbp),%r13
000000000001ae1b	movq	$0x00000000,0xffffff78(%rbp)
000000000001ae26	movq	%r13,0x80(%rbp)
000000000001ae2a	movl	$0x00000000,0x88(%rbp)
000000000001ae31	movl	$0x00000020,0x8c(%rbp)
000000000001ae38	movb	$0x01,0x90(%rbp)
000000000001ae3c	movq	0x00089c35(%rip),%rsi
000000000001ae43	movq	0xffffff28(%rbp),%rdi
000000000001ae4a	call	*%r12
000000000001ae4d	leaq	0xffffff58(%rbp),%rsi
000000000001ae54	leaq	0x0009c535(%rip),%rcx
000000000001ae5b	leaq	0x00000161(%rip),%rdx
000000000001ae62	movq	0x00069227(%rip),%rdi
000000000001ae69	movq	%rdi,0xffffff38(%rbp)
000000000001ae70	movl	$0x42000000,0xffffff40(%rbp)
000000000001ae7a	movl	$0x00000000,0xffffff44(%rbp)
000000000001ae84	movq	%rdx,0xffffff48(%rbp)
000000000001ae8b	movq	%rcx,0xffffff50(%rbp)
000000000001ae92	movq	%rax,%rdi
000000000001ae95	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
000000000001ae9a	leaq	0xffffff70(%rbp),%rsi
000000000001aea1	movq	%r13,0xffffff60(%rbp)
000000000001aea8	movq	%r14,0xffffff68(%rbp)
000000000001aeaf	movq	%rbx,%rdi
000000000001aeb2	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
000000000001aeb7	leaq	0xffffff38(%rbp),%r8
000000000001aebe	movq	0x0008c77b(%rip),%rsi
000000000001aec5	movq	%r15,%rdi
000000000001aec8	movq	0xffffff30(%rbp),%rdx
000000000001aecf	movl	$0x00000007,%ecx
000000000001aed4	call	*%r12
000000000001aed7	movq	0xa0(%rbp),%rsi
000000000001aedb	addq	$0x28,%rsi
000000000001aedf	movq	%rax,%rdi
000000000001aee2	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
000000000001aee7	movq	0x80(%rbp),%rax
000000000001aeeb	cmpb	$0x00,0x18(%rax)
000000000001aeef	je	0x0001af6f
000000000001aef1	movq	0xa0(%rbp),%rax
000000000001aef5	movq	0x28(%rax),%rdx
000000000001aef9	testq	%rdx,%rdx
000000000001aefc	jne	0x0001af57
000000000001aefe	leaq	0x0004a6ac(%rip),%rax
000000000001af05	leaq	0x0009492c(%rip),%rcx
000000000001af0c	leaq	0x0004a6a6(%rip),%rdx
000000000001af13	movq	%rdx,0x10(%rsp)
000000000001af18	movq	%rcx,0x08(%rsp)
000000000001af1d	movq	%rax,(%rsp)
000000000001af21	leaq	0xd0(%rbp),%rdi
000000000001af25	leaq	0xc8(%rbp),%rsi
000000000001af29	leaq	0x0004a5f0(%rip),%rdx
000000000001af30	leaq	0x0004a629(%rip),%rcx
000000000001af37	leaq	0x0009919a(%rip),%r9
000000000001af3e	movl	$0x00000097,%r8d
000000000001af44	xorb	%al,%al
000000000001af46	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000001af4b	movq	0xa0(%rbp),%rax
000000000001af4f	movq	0x28(%rax),%rdx
000000000001af53	movq	0xd0(%rbp),%rbx
000000000001af57	movq	0x0009473a(%rip),%rax
000000000001af5e	movq	(%rbx,%rax),%rdi
000000000001af62	leaq	0x0008d397(%rip),%rsi
000000000001af69	call	*0x0008d391(%rip)
000000000001af6f	addq	$0x000000c8,%rsp
000000000001af76	popq	%rbx
000000000001af77	popq	%r12
000000000001af79	popq	%r13
000000000001af7b	popq	%r14
000000000001af7d	popq	%r15
000000000001af7f	popq	%rbp
000000000001af80	ret
000000000001af81	nopl	%cs:0x00000000(%rax,%rax)
___Block_byref_object_copy_:
000000000001af90	pushq	%rbp
000000000001af91	movq	%rsp,%rbp
000000000001af94	addq	$0x28,%rdi
000000000001af98	movq	0x28(%rsi),%rsi
000000000001af9c	movl	$0x00000083,%edx
000000000001afa1	popq	%rbp
000000000001afa2	jmp	0x0004e662	; symbol stub for: __Block_object_assign
000000000001afa7	nopw	0x00000000(%rax,%rax)
000000000001afb0	nop
000000000001afb1	nop
-[PBXLSModel validityStatus]:
000000000001afb2	pushq	%rbp
000000000001afb3	movq	%rsp,%rbp
000000000001afb6	movq	0x00094343(%rip),%rax
000000000001afbd	movl	(%rdi,%rax),%eax
000000000001afc0	popq	%rbp
000000000001afc1	ret
000000000001afc2	nop
___63-[DBGGDBStackFrame _watchChangeObject:keyPath:withChangeBlock:]_block_invoke_0:
000000000001afc3	pushq	%rbp
000000000001afc4	movq	%rsp,%rbp
000000000001afc7	pushq	%rbx
000000000001afc8	pushq	%rax
000000000001afc9	movq	%rdi,%rbx
000000000001afcc	movq	0x20(%rbx),%rax
000000000001afd0	movq	%rax,%rdi
000000000001afd3	call	*0x10(%rax)
000000000001afd6	testb	%al,%al
000000000001afd8	je	0x0001aff7
000000000001afda	movq	0x28(%rbx),%rax
000000000001afde	movq	0x08(%rax),%rax
000000000001afe2	movb	$0x00,0x18(%rax)
000000000001afe6	movq	0x30(%rbx),%rax
000000000001afea	movq	0x08(%rax),%rax
000000000001afee	movq	0x28(%rax),%rdi
000000000001aff2	testq	%rdi,%rdi
000000000001aff5	jne	0x0001affe
000000000001aff7	addq	$0x08,%rsp
000000000001affb	popq	%rbx
000000000001affc	popq	%rbp
000000000001affd	ret
000000000001affe	movq	0x0008c62b(%rip),%rsi
000000000001b005	call	*0x000690cd(%rip)
000000000001b00b	movq	0x30(%rbx),%rax
000000000001b00f	movq	0x38(%rbx),%rcx
000000000001b013	movq	0x0009467e(%rip),%rdx
000000000001b01a	movq	(%rcx,%rdx),%rdi
000000000001b01e	movq	0x08(%rax),%rax
000000000001b022	movq	0x28(%rax),%rdx
000000000001b026	movq	0x00089cf3(%rip),%rsi
000000000001b02d	movq	0x000690a4(%rip),%rax
000000000001b034	addq	$0x08,%rsp
000000000001b038	popq	%rbx
000000000001b039	popq	%rbp
000000000001b03a	jmp	*%rax
000000000001b03c	nopl	0x00(%rax)
000000000001b040	nop
000000000001b041	nop
___69-[DBGGDBStackFrame _requestStackBasedContainerNamed:completionBlock:]_block_invoke_0:
000000000001b042	pushq	%rbp
000000000001b043	movq	%rsp,%rbp
000000000001b046	pushq	%r15
000000000001b048	pushq	%r14
000000000001b04a	pushq	%r13
000000000001b04c	pushq	%r12
000000000001b04e	pushq	%rbx
000000000001b04f	subq	$0x000000d8,%rsp
000000000001b056	movq	%rdi,%rbx
000000000001b059	movq	0x00069040(%rip),%rax
000000000001b060	movq	(%rax),%rax
000000000001b063	movq	%rax,0xd0(%rbp)
000000000001b067	movq	0x20(%rbx),%rax
000000000001b06b	movq	0x08(%rax),%rax
000000000001b06f	movq	0x28(%rax),%rdi
000000000001b073	movq	0x0008a55e(%rip),%rsi
000000000001b07a	call	*0x00069058(%rip)
000000000001b080	movl	%eax,%ecx
000000000001b082	xorb	%al,%al
000000000001b084	cmpl	$0x02,%ecx
000000000001b087	jne	0x0001b186
000000000001b08d	xorps	%xmm0,%xmm0
000000000001b090	movaps	%xmm0,0xc0(%rbp)
000000000001b094	movaps	%xmm0,0xb0(%rbp)
000000000001b098	movaps	%xmm0,0xa0(%rbp)
000000000001b09c	movaps	%xmm0,0x90(%rbp)
000000000001b0a0	movq	0x20(%rbx),%rax
000000000001b0a4	movq	%rbx,0xffffff08(%rbp)
000000000001b0ab	movq	0x08(%rax),%rax
000000000001b0af	movq	0x28(%rax),%rdi
000000000001b0b3	movq	0x0008a5ce(%rip),%rsi
000000000001b0ba	call	*0x00069018(%rip)
000000000001b0c0	movq	%rax,%r12
000000000001b0c3	leaq	0x0008d2b6(%rip),%rsi
000000000001b0ca	leaq	0x90(%rbp),%rdx
000000000001b0ce	leaq	0xffffff10(%rbp),%rcx
000000000001b0d5	movq	%r12,%rdi
000000000001b0d8	movl	$0x00000010,%r8d
000000000001b0de	call	*0x0008d29c(%rip)
000000000001b0e4	movq	%rax,%rbx
000000000001b0e7	testq	%rbx,%rbx
000000000001b0ea	je	0x0001b173
000000000001b0f0	movq	0xa0(%rbp),%rax
000000000001b0f4	movq	(%rax),%r13
000000000001b0f7	xorl	%r14d,%r14d
000000000001b0fa	movq	0xa0(%rbp),%rax
000000000001b0fe	cmpq	%r13,(%rax)
000000000001b101	je	0x0001b10b
000000000001b103	movq	%r12,%rdi
000000000001b106	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
000000000001b10b	movq	0x98(%rbp),%rax
000000000001b10f	movq	(%rax,%r14,8),%r15
000000000001b113	movq	%r15,%rdi
000000000001b116	movq	0x0008a353(%rip),%rsi
000000000001b11d	call	*0x00068fb5(%rip)
000000000001b123	movq	0xffffff08(%rbp),%rcx
000000000001b12a	movq	0x28(%rcx),%rdx
000000000001b12e	movq	%rax,%rdi
000000000001b131	leaq	0x0008d228(%rip),%rsi
000000000001b138	call	*0x0008d222(%rip)
000000000001b13e	testb	%al,%al
000000000001b140	jne	0x0001b1ab
000000000001b142	incq	%r14
000000000001b145	cmpq	%rbx,%r14
000000000001b148	jb	0x0001b0fa
000000000001b14a	movq	%r12,%rdi
000000000001b14d	leaq	0x0008d22c(%rip),%rsi
000000000001b154	leaq	0x90(%rbp),%rdx
000000000001b158	leaq	0xffffff10(%rbp),%rcx
000000000001b15f	movl	$0x00000010,%r8d
000000000001b165	call	*0x0008d215(%rip)
000000000001b16b	movq	%rax,%rbx
000000000001b16e	testq	%rbx,%rbx
000000000001b171	jne	0x0001b0f7
000000000001b173	movq	0xffffff08(%rbp),%rax
000000000001b17a	movq	0x30(%rax),%rax
000000000001b17e	movq	%rax,%rdi
000000000001b181	xorl	%esi,%esi
000000000001b183	call	*0x10(%rax)
000000000001b186	movq	0x00068f13(%rip),%rcx
000000000001b18d	movq	(%rcx),%rcx
000000000001b190	cmpq	0xd0(%rbp),%rcx
000000000001b194	jne	0x0001b1be
000000000001b196	movsbl	%al,%eax
000000000001b199	addq	$0x000000d8,%rsp
000000000001b1a0	popq	%rbx
000000000001b1a1	popq	%r12
000000000001b1a3	popq	%r13
000000000001b1a5	popq	%r14
000000000001b1a7	popq	%r15
000000000001b1a9	popq	%rbp
000000000001b1aa	ret
000000000001b1ab	movq	0xffffff08(%rbp),%rax
000000000001b1b2	movq	0x30(%rax),%rax
000000000001b1b6	movq	%rax,%rdi
000000000001b1b9	movq	%r15,%rsi
000000000001b1bc	jmp	0x0001b183
000000000001b1be	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
000000000001b1c3	nopl	%cs:0x00000000(%rax,%rax)
000000000001b1d0	nop
000000000001b1d1	nop
000000000001b1d2	nop
000000000001b1d3	nop
000000000001b1d4	nop
000000000001b1d5	nop
000000000001b1d6	nop
000000000001b1d7	nop
000000000001b1d8	nop
-[DBGGDBStackFrame locals]:
000000000001b1d9	pushq	%rbp
000000000001b1da	movq	%rsp,%rbp
000000000001b1dd	pushq	%r14
000000000001b1df	pushq	%rbx
000000000001b1e0	subq	$0x30,%rsp
000000000001b1e4	movq	%rdi,%rbx
000000000001b1e7	movq	0x0009449a(%rip),%rax
000000000001b1ee	movq	(%rbx,%rax),%r14
000000000001b1f2	movq	0x0008d997(%rip),%rdi
000000000001b1f9	leaq	0x0008d130(%rip),%rsi
000000000001b200	call	*0x0008d12a(%rip)
000000000001b206	leaq	0x0008d133(%rip),%rsi
000000000001b20d	movq	%r14,%rdi
000000000001b210	movq	%rax,%rdx
000000000001b213	call	*0x0008d127(%rip)
000000000001b219	testb	%al,%al
000000000001b21b	je	0x0001b284
000000000001b21d	movq	0x00094464(%rip),%rdx
000000000001b224	xorl	%edi,%edi
000000000001b226	movq	%rbx,%rsi
000000000001b229	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001b22e	movq	0x00068e5b(%rip),%rax
000000000001b235	movq	%rax,0xc8(%rbp)
000000000001b239	movl	$0x42000000,0xd0(%rbp)
000000000001b240	movl	$0x00000000,0xd4(%rbp)
000000000001b247	leaq	0x000079ca(%rip),%rax
000000000001b24e	movq	%rax,0xd8(%rbp)
000000000001b252	leaq	0xe8(%rbp),%rsi
000000000001b256	leaq	0x0009c223(%rip),%rax
000000000001b25d	movq	%rax,0xe0(%rbp)
000000000001b261	movq	%rbx,%rdi
000000000001b264	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
000000000001b269	leaq	0x00095cc8(%rip),%rdx
000000000001b270	leaq	0xc8(%rbp),%rcx
000000000001b274	movq	0x0008cf55(%rip),%rsi
000000000001b27b	movq	%rbx,%rdi
000000000001b27e	call	*0x00068e54(%rip)
000000000001b284	movq	0x000943fd(%rip),%rax
000000000001b28b	movq	(%rbx,%rax),%rax
000000000001b28f	addq	$0x30,%rsp
000000000001b293	popq	%rbx
000000000001b294	popq	%r14
000000000001b296	popq	%rbp
000000000001b297	ret
000000000001b298	nop
000000000001b299	nop
000000000001b29a	nop
000000000001b29b	nop
000000000001b29c	nop
000000000001b29d	nop
000000000001b29e	nop
000000000001b29f	nop
000000000001b2a0	nop
000000000001b2a1	nop
000000000001b2a2	nop
-[DBGGDBStackFrame arguments]:
000000000001b2a3	pushq	%rbp
000000000001b2a4	movq	%rsp,%rbp
000000000001b2a7	pushq	%r14
000000000001b2a9	pushq	%rbx
000000000001b2aa	subq	$0x30,%rsp
000000000001b2ae	movq	%rdi,%rbx
000000000001b2b1	movq	0x000943c8(%rip),%rax
000000000001b2b8	movq	(%rbx,%rax),%r14
000000000001b2bc	movq	0x0008d8cd(%rip),%rdi
000000000001b2c3	leaq	0x0008d066(%rip),%rsi
000000000001b2ca	call	*0x0008d060(%rip)
000000000001b2d0	leaq	0x0008d069(%rip),%rsi
000000000001b2d7	movq	%r14,%rdi
000000000001b2da	movq	%rax,%rdx
000000000001b2dd	call	*0x0008d05d(%rip)
000000000001b2e3	testb	%al,%al
000000000001b2e5	je	0x0001b34e
000000000001b2e7	movq	0x00094392(%rip),%rdx
000000000001b2ee	xorl	%edi,%edi
000000000001b2f0	movq	%rbx,%rsi
000000000001b2f3	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001b2f8	movq	0x00068d91(%rip),%rax
000000000001b2ff	movq	%rax,0xc8(%rbp)
000000000001b303	movl	$0x42000000,0xd0(%rbp)
000000000001b30a	movl	$0x00000000,0xd4(%rbp)
000000000001b311	leaq	0x000074ba(%rip),%rax
000000000001b318	movq	%rax,0xd8(%rbp)
000000000001b31c	leaq	0xe8(%rbp),%rsi
000000000001b320	leaq	0x0009c189(%rip),%rax
000000000001b327	movq	%rax,0xe0(%rbp)
000000000001b32b	movq	%rbx,%rdi
000000000001b32e	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
000000000001b333	leaq	0x00095cbe(%rip),%rdx
000000000001b33a	leaq	0xc8(%rbp),%rcx
000000000001b33e	movq	0x0008ce8b(%rip),%rsi
000000000001b345	movq	%rbx,%rdi
000000000001b348	call	*0x00068d8a(%rip)
000000000001b34e	movq	0x0009432b(%rip),%rax
000000000001b355	movq	(%rbx,%rax),%rax
000000000001b359	addq	$0x30,%rsp
000000000001b35d	popq	%rbx
000000000001b35e	popq	%r14
000000000001b360	popq	%rbp
000000000001b361	ret
-[PBXGDB_CommandSequence setTransient:]:
000000000001b362	pushq	%rbp
000000000001b363	movq	%rsp,%rbp
000000000001b366	movq	0x000934c3(%rip),%rax
000000000001b36d	movb	%dl,(%rdi,%rax)
000000000001b370	popq	%rbp
000000000001b371	ret
000000000001b372	nop
000000000001b373	nop
000000000001b374	nop
000000000001b375	nop
000000000001b376	nop
000000000001b377	nop
000000000001b378	nop
000000000001b379	nop
000000000001b37a	nop
000000000001b37b	nop
000000000001b37c	nop
000000000001b37d	nop
000000000001b37e	nop
-[PBXLSStackFrame threadDidUpdate]:
000000000001b37f	pushq	%rbp
000000000001b380	movq	%rsp,%rbp
000000000001b383	pushq	%r15
000000000001b385	pushq	%r14
000000000001b387	pushq	%r12
000000000001b389	pushq	%rbx
000000000001b38a	movq	%rdi,%rbx
000000000001b38d	movq	0x00089f04(%rip),%rsi
000000000001b394	movq	0x00068d3d(%rip),%r12
000000000001b39b	call	*%r12
000000000001b39e	movq	0x0008a8c3(%rip),%rsi
000000000001b3a5	movq	%rax,%rdi
000000000001b3a8	call	*%r12
000000000001b3ab	movq	0x0008c26e(%rip),%rsi
000000000001b3b2	movq	%rax,%rdi
000000000001b3b5	call	*%r12
000000000001b3b8	movq	%rax,%r14
000000000001b3bb	movq	0x00089b0e(%rip),%rsi
000000000001b3c2	movq	%r14,%rdi
000000000001b3c5	call	*%r12
000000000001b3c8	movq	%rax,%r15
000000000001b3cb	movq	0x0008a886(%rip),%rsi
000000000001b3d2	movq	%rbx,%rdi
000000000001b3d5	call	*%r12
000000000001b3d8	cmpq	%rax,%r15
000000000001b3db	je	0x0001b3f6
000000000001b3dd	movq	0x00093fcc(%rip),%rax
000000000001b3e4	movq	(%rbx,%rax),%rdi
000000000001b3e8	testq	%rdi,%rdi
000000000001b3eb	jne	0x0001b424
000000000001b3ed	popq	%rbx
000000000001b3ee	popq	%r12
000000000001b3f0	popq	%r14
000000000001b3f2	popq	%r15
000000000001b3f4	popq	%rbp
000000000001b3f5	ret
000000000001b3f6	movq	0x0008c15b(%rip),%rsi
000000000001b3fd	movq	%r14,%rdi
000000000001b400	call	*0x00068cd2(%rip)
000000000001b406	movq	0x0008c21b(%rip),%rsi
000000000001b40d	movq	%rbx,%rdi
000000000001b410	movq	%rax,%rdx
000000000001b413	movq	0x00068cbe(%rip),%rax
000000000001b41a	popq	%rbx
000000000001b41b	popq	%r12
000000000001b41d	popq	%r14
000000000001b41f	popq	%r15
000000000001b421	popq	%rbp
000000000001b422	jmp	*%rax
000000000001b424	movq	0x0008c205(%rip),%rsi
000000000001b42b	call	*0x00068ca7(%rip)
000000000001b431	movq	0x00093f78(%rip),%rdx
000000000001b438	xorl	%edi,%edi
000000000001b43a	movq	%rbx,%rsi
000000000001b43d	popq	%rbx
000000000001b43e	popq	%r12
000000000001b440	popq	%r14
000000000001b442	popq	%r15
000000000001b444	popq	%rbp
000000000001b445	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_UpdateStackSequence _fetchFullStackFrames]:
000000000001b44a	pushq	%rbp
000000000001b44b	movq	%rsp,%rbp
000000000001b44e	pushq	%r15
000000000001b450	pushq	%r14
000000000001b452	pushq	%rbx
000000000001b453	pushq	%rax
000000000001b454	movq	%rdi,%rbx
000000000001b457	movq	0x00089622(%rip),%rsi
000000000001b45e	movq	0x0008d5db(%rip),%rdi
000000000001b465	call	*0x00068c6d(%rip)
000000000001b46b	movq	%rax,%r14
000000000001b46e	movq	0x00089613(%rip),%rsi
000000000001b475	movq	%r14,%rdi
000000000001b478	movq	%rbx,%rdx
000000000001b47b	call	*0x00068c57(%rip)
000000000001b481	movq	0x00089610(%rip),%rsi
000000000001b488	movq	0x0008b901(%rip),%rdx
000000000001b48f	movq	%r14,%rdi
000000000001b492	call	*0x00068c40(%rip)
000000000001b498	movq	0x0008a6b9(%rip),%rsi
000000000001b49f	movq	%rbx,%rdi
000000000001b4a2	call	*0x00068c30(%rip)
000000000001b4a8	movq	0x000895f9(%rip),%rsi
000000000001b4af	movq	%r14,%rdi
000000000001b4b2	movq	%rax,%rdx
000000000001b4b5	call	*0x00068c1d(%rip)
000000000001b4bb	movq	0x00093b46(%rip),%rax
000000000001b4c2	movq	(%rbx,%rax),%r15
000000000001b4c6	movq	0x0008b8cb(%rip),%rsi
000000000001b4cd	movq	%rbx,%rdi
000000000001b4d0	call	*0x00068c02(%rip)
000000000001b4d6	movq	0x0008b8c3(%rip),%rsi
000000000001b4dd	movq	%r14,%rdi
000000000001b4e0	movq	%r15,%rdx
000000000001b4e3	movq	%rax,%rcx
000000000001b4e6	call	*0x00068bec(%rip)
000000000001b4ec	movq	0x000895c5(%rip),%rsi
000000000001b4f3	movq	%rbx,%rdi
000000000001b4f6	call	*0x00068bdc(%rip)
000000000001b4fc	movq	0x000895bd(%rip),%rsi
000000000001b503	movq	%rax,%rdi
000000000001b506	call	*0x00068bcc(%rip)
000000000001b50c	movq	0x000895b5(%rip),%rsi
000000000001b513	movq	%rax,%rdi
000000000001b516	movq	%r14,%rdx
000000000001b519	movq	0x00068bb8(%rip),%rax
000000000001b520	addq	$0x08,%rsp
000000000001b524	popq	%rbx
000000000001b525	popq	%r14
000000000001b527	popq	%r15
000000000001b529	popq	%rbp
000000000001b52a	jmp	*%rax
-[PBXGDB_MIStackFramesCommand initWithSequenceNumber:]:
000000000001b52c	pushq	%rbp
000000000001b52d	movq	%rsp,%rbp
000000000001b530	pushq	%rbx
000000000001b531	subq	$0x18,%rsp
000000000001b535	movq	%rdi,0xe8(%rbp)
000000000001b539	movq	0x0008d970(%rip),%rax
000000000001b540	movq	%rax,0xf0(%rbp)
000000000001b544	movq	0x0008ace5(%rip),%rsi
000000000001b54b	leaq	0xe8(%rbp),%rdi
000000000001b54f	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000001b554	movq	%rax,%rbx
000000000001b557	leaq	0x0008cd82(%rip),%rsi
000000000001b55e	movq	0x0008ced3(%rip),%rdi
000000000001b565	call	*0x0008cd75(%rip)
000000000001b56b	movq	0x000894fe(%rip),%rsi
000000000001b572	movq	%rax,%rdi
000000000001b575	call	*0x00068b5d(%rip)
000000000001b57b	movq	0x0009382e(%rip),%rdx
000000000001b582	movq	%rax,%rdi
000000000001b585	movq	%rbx,%rsi
000000000001b588	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001b58d	leaq	0x000978a4(%rip),%rdi
000000000001b594	movq	0x0009381d(%rip),%rdx
000000000001b59b	movq	%rbx,%rsi
000000000001b59e	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001b5a3	movq	%rbx,%rax
000000000001b5a6	addq	$0x18,%rsp
000000000001b5aa	popq	%rbx
000000000001b5ab	popq	%rbp
000000000001b5ac	ret
-[PBXGDB_UpdateStackSequence _deriveEndIndex]:
000000000001b5ad	pushq	%rbp
000000000001b5ae	movq	%rsp,%rbp
000000000001b5b1	pushq	%rbx
000000000001b5b2	subq	$0x28,%rsp
000000000001b5b6	movq	%rdi,0xf0(%rbp)
000000000001b5ba	movq	%rsi,0xe8(%rbp)
000000000001b5be	movq	0x00093a5b(%rip),%rax
000000000001b5c5	movq	(%rdi,%rax),%rcx
000000000001b5c9	movq	0x00093a38(%rip),%rax
000000000001b5d0	movq	(%rdi,%rax),%rax
000000000001b5d4	leaq	0xff(%rax,%rcx),%rbx
000000000001b5d9	movq	0x00093a30(%rip),%rcx
000000000001b5e0	movq	(%rdi,%rcx),%rcx
000000000001b5e4	cmpq	%rcx,%rbx
000000000001b5e7	cmovaq	%rcx,%rbx
000000000001b5eb	cmpq	%rbx,%rax
000000000001b5ee	jbe	0x0001b631
000000000001b5f0	leaq	0x00094241(%rip),%rax
000000000001b5f7	leaq	0x000461a4(%rip),%rcx
000000000001b5fe	movq	%rcx,0x08(%rsp)
000000000001b603	movq	%rax,(%rsp)
000000000001b607	leaq	0xf0(%rbp),%rdi
000000000001b60b	leaq	0xe8(%rbp),%rsi
000000000001b60f	leaq	0x00046120(%rip),%rdx
000000000001b616	leaq	0x00045cd1(%rip),%rcx
000000000001b61d	leaq	0x00098b94(%rip),%r9
000000000001b624	movl	$0x000002e7,%r8d
000000000001b62a	xorb	%al,%al
000000000001b62c	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000001b631	movq	%rbx,%rax
000000000001b634	addq	$0x28,%rsp
000000000001b638	popq	%rbx
000000000001b639	popq	%rbp
000000000001b63a	ret
-[PBXGDB_MIStackFramesCommand setStartFrameIndex:stopFrameIndex:]:
000000000001b63b	pushq	%rbp
000000000001b63c	movq	%rsp,%rbp
000000000001b63f	pushq	%r15
000000000001b641	pushq	%r14
000000000001b643	pushq	%rbx
000000000001b644	pushq	%rax
000000000001b645	movq	%rcx,%r14
000000000001b648	movq	%rdx,%r15
000000000001b64b	movq	%rdi,%rbx
000000000001b64e	movq	0x0008cdfb(%rip),%rdi
000000000001b655	leaq	0x0008cc84(%rip),%rsi
000000000001b65c	call	*0x0008cc7e(%rip)
000000000001b662	movq	0x0008964f(%rip),%rsi
000000000001b669	leaq	0x000977e8(%rip),%rdx
000000000001b670	movq	%rax,%rdi
000000000001b673	movq	%r15,%rcx
000000000001b676	movq	%r14,%r8
000000000001b679	xorb	%al,%al
000000000001b67b	call	*0x00068a57(%rip)
000000000001b681	leaq	0x000934a8(%rip),%rcx
000000000001b688	movq	(%rcx),%rdx
000000000001b68b	movq	%rax,%rdi
000000000001b68e	movq	%rbx,%rsi
000000000001b691	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001b696	movq	0x00093723(%rip),%rax
000000000001b69d	movq	%r15,(%rbx,%rax)
000000000001b6a1	movq	0x00093720(%rip),%rax
000000000001b6a8	movq	%r14,(%rbx,%rax)
000000000001b6ac	addq	$0x08,%rsp
000000000001b6b0	popq	%rbx
000000000001b6b1	popq	%r14
000000000001b6b3	popq	%r15
000000000001b6b5	popq	%rbp
000000000001b6b6	ret
-[PBXGDB_MIStackFramesCommand didFinishWithResultList:]:
000000000001b6b7	pushq	%rbp
000000000001b6b8	movq	%rsp,%rbp
000000000001b6bb	pushq	%r15
000000000001b6bd	pushq	%r14
000000000001b6bf	pushq	%r12
000000000001b6c1	pushq	%rbx
000000000001b6c2	subq	$0x10,%rsp
000000000001b6c6	movq	%rdx,%r14
000000000001b6c9	movq	%rdi,%rbx
000000000001b6cc	movq	0x00089405(%rip),%rsi
000000000001b6d3	leaq	0x00094b7e(%rip),%rdx
000000000001b6da	movq	%r14,%rdi
000000000001b6dd	call	*0x000689f5(%rip)
000000000001b6e3	movq	%rax,%r15
000000000001b6e6	movq	0x000936e3(%rip),%rdx
000000000001b6ed	xorl	%edi,%edi
000000000001b6ef	movq	%rbx,%rsi
000000000001b6f2	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001b6f7	movq	0x000936da(%rip),%rax
000000000001b6fe	movq	$0x00000000,(%rbx,%rax)
000000000001b706	movq	0x000936d3(%rip),%rdx
000000000001b70d	xorl	%edi,%edi
000000000001b70f	movq	%rbx,%rsi
000000000001b712	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001b717	testq	%r15,%r15
000000000001b71a	je	0x0001b74f
000000000001b71c	movq	0x000893bd(%rip),%rsi
000000000001b723	movq	0x000689ae(%rip),%r12
000000000001b72a	movq	%r15,%rdi
000000000001b72d	call	*%r12
000000000001b730	movq	0x000893b1(%rip),%rsi
000000000001b737	movq	%rax,%rdi
000000000001b73a	call	*%r12
000000000001b73d	movq	0x0009368c(%rip),%rdx
000000000001b744	movq	%rax,%rdi
000000000001b747	movq	%rbx,%rsi
000000000001b74a	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001b74f	movq	%rbx,0xd0(%rbp)
000000000001b753	movq	0x0008d756(%rip),%rax
000000000001b75a	movq	%rax,0xd8(%rbp)
000000000001b75e	movq	0x0008aa9b(%rip),%rsi
000000000001b765	leaq	0xd0(%rbp),%rdi
000000000001b769	movq	%r14,%rdx
000000000001b76c	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000001b771	addq	$0x10,%rsp
000000000001b775	popq	%rbx
000000000001b776	popq	%r12
000000000001b778	popq	%r14
000000000001b77a	popq	%r15
000000000001b77c	popq	%rbp
000000000001b77d	ret
-[PBXGDB_UpdateStackSequence _gotFullStackFrames:]:
000000000001b77e	pushq	%rbp
000000000001b77f	movq	%rsp,%rbp
000000000001b782	pushq	%r15
000000000001b784	pushq	%r14
000000000001b786	pushq	%r13
000000000001b788	pushq	%r12
000000000001b78a	pushq	%rbx
000000000001b78b	subq	$0x78,%rsp
000000000001b78f	movq	%rdi,0xd0(%rbp)
000000000001b793	movq	%rsi,0xc8(%rbp)
000000000001b797	testq	%rdx,%rdx
000000000001b79a	movq	%rdx,%r15
000000000001b79d	jne	0x0001b805
000000000001b79f	movq	0x0008d29a(%rip),%rdi
000000000001b7a6	leaq	0x0008cb83(%rip),%rsi
000000000001b7ad	call	*0x0008cb7d(%rip)
000000000001b7b3	movq	%rax,%rdi
000000000001b7b6	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000001b7bb	leaq	0xd0(%rbp),%rdi
000000000001b7bf	leaq	0xc8(%rbp),%rsi
000000000001b7c3	leaq	0x00045efb(%rip),%rdx
000000000001b7ca	leaq	-[PBXLSDebuggerAdaptor dealloc](%rip),%rcx
000000000001b7d1	leaq	0x000941e0(%rip),%r9
000000000001b7d8	leaq	0x00042321(%rip),%r8
000000000001b7df	leaq	0x0004231e(%rip),%rbx
000000000001b7e6	movq	%rbx,0x18(%rsp)
000000000001b7eb	leaq	0x00094046(%rip),%rbx
000000000001b7f2	movq	%rbx,0x10(%rsp)
000000000001b7f7	movq	%rax,0x08(%rsp)
000000000001b7fc	movq	%r8,(%rsp)
000000000001b800	jmp	0x0001b8ad
000000000001b805	movq	0x0008d234(%rip),%rdi
000000000001b80c	leaq	0x0008cb1d(%rip),%rsi
000000000001b813	call	*0x0008cb17(%rip)
000000000001b819	leaq	0x0008cb20(%rip),%rsi
000000000001b820	movq	%r15,%rdi
000000000001b823	movq	%rax,%rdx
000000000001b826	call	*0x0008cb14(%rip)
000000000001b82c	testb	%al,%al
000000000001b82e	jne	0x0001b8ba
000000000001b834	movq	0x0008d205(%rip),%rdi
000000000001b83b	leaq	0x0008caee(%rip),%rsi
000000000001b842	call	*0x0008cae8(%rip)
000000000001b848	movq	%rax,%rdi
000000000001b84b	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000001b850	movq	%rax,%rbx
000000000001b853	movq	0x00089406(%rip),%rsi
000000000001b85a	movq	%r15,%rdi
000000000001b85d	call	*0x00068875(%rip)
000000000001b863	leaq	0x00093fce(%rip),%r8
000000000001b86a	leaq	0x00045e87(%rip),%r9
000000000001b871	leaq	0xd0(%rbp),%rdi
000000000001b875	leaq	0xc8(%rbp),%rsi
000000000001b879	leaq	0x00045e45(%rip),%rdx
000000000001b880	leaq	0x00045a67(%rip),%rcx
000000000001b887	movq	%r9,0x20(%rsp)
000000000001b88c	leaq	0x00094145(%rip),%r9
000000000001b893	movq	%r8,0x18(%rsp)
000000000001b898	movq	%rax,0x10(%rsp)
000000000001b89d	leaq	0x0004225c(%rip),%rax
000000000001b8a4	movq	%rbx,0x08(%rsp)
000000000001b8a9	movq	%rax,(%rsp)
000000000001b8ad	movl	$0x000002af,%r8d
000000000001b8b3	xorb	%al,%al
000000000001b8b5	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000001b8ba	movq	%r15,0x88(%rbp)
000000000001b8be	movq	0x000891f3(%rip),%rsi
000000000001b8c5	movq	0xd0(%rbp),%rdi
000000000001b8c9	movq	0x00068808(%rip),%rbx
000000000001b8d0	call	*%rbx
000000000001b8d2	movq	%rax,%r12
000000000001b8d5	movq	%r12,0xb8(%rbp)
000000000001b8d9	movq	0x00093768(%rip),%rax
000000000001b8e0	movq	0xd0(%rbp),%rcx
000000000001b8e4	movq	(%rcx,%rax),%rdi
000000000001b8e8	movq	0x00089979(%rip),%rsi
000000000001b8ef	call	*%rbx
000000000001b8f1	movq	%rax,0x90(%rbp)
000000000001b8f5	movq	0x0008b41c(%rip),%rsi
000000000001b8fc	movq	%r15,%rdi
000000000001b8ff	call	*%rbx
000000000001b901	xorl	%r14d,%r14d
000000000001b904	testb	%al,%al
000000000001b906	je	0x0001bae6
000000000001b90c	movq	0x000687c5(%rip),%r13
000000000001b913	movq	%r15,%rdi
000000000001b916	movq	0x0008b403(%rip),%rsi
000000000001b91d	call	*%r13
000000000001b920	movq	%r12,%r14
000000000001b923	movq	%r14,%rdi
000000000001b926	movq	0x0008ace3(%rip),%rbx
000000000001b92d	movq	%rbx,%rsi
000000000001b930	movq	%rax,%rdx
000000000001b933	call	*%r13
000000000001b936	movq	%rax,%r12
000000000001b939	movq	%r15,%rdi
000000000001b93c	movq	0x0008b3e5(%rip),%rsi
000000000001b943	call	*%r13
000000000001b946	movq	%r14,%rdi
000000000001b949	movq	%rbx,%rsi
000000000001b94c	movq	%rax,%rdx
000000000001b94f	call	*%r13
000000000001b952	movq	%rax,%r14
000000000001b955	testq	%r12,%r12
000000000001b958	leaq	0x00093fd9(%rip),%rbx
000000000001b95f	cmoveq	%rbx,%r12
000000000001b963	movq	%r12,0xb0(%rbp)
000000000001b967	movq	%r15,%rdi
000000000001b96a	movq	0x0008b3bf(%rip),%rsi
000000000001b971	call	*%r13
000000000001b974	movq	%rax,0xc0(%rbp)
000000000001b978	testq	%r14,%r14
000000000001b97b	cmoveq	%rbx,%r14
000000000001b97f	movq	%r14,0xa8(%rbp)
000000000001b983	movq	%r15,%rdi
000000000001b986	movq	0x0008b3ab(%rip),%rsi
000000000001b98d	call	*%r13
000000000001b990	movq	%rax,%r12
000000000001b993	movq	0x90(%rbp),%rdi
000000000001b997	leaq	0x0008c982(%rip),%rsi
000000000001b99e	movq	%r12,%rdx
000000000001b9a1	call	*0x0008c979(%rip)
000000000001b9a7	movq	%rax,%r15
000000000001b9aa	movq	%r15,%rdi
000000000001b9ad	movq	0x0008b38c(%rip),%rsi
000000000001b9b4	call	*%r13
000000000001b9b7	testb	%al,%al
000000000001b9b9	je	0x0001ba3f
000000000001b9bf	movq	0x0008cc32(%rip),%rdi
000000000001b9c6	leaq	0x0008c913(%rip),%rsi
000000000001b9cd	call	*0x0008c90d(%rip)
000000000001b9d3	movq	%rax,%rdi
000000000001b9d6	movq	0x00089373(%rip),%rsi
000000000001b9dd	movq	0xb8(%rbp),%rdx
000000000001b9e1	call	*0x000686f1(%rip)
000000000001b9e7	movq	%rax,%r15
000000000001b9ea	cmpq	$0x00,0xc0(%rbp)
000000000001b9ef	js	0x0001ba1a
000000000001b9f1	movq	%r15,%rdi
000000000001b9f4	movq	0x0008b34d(%rip),%rsi
000000000001b9fb	call	*0x000686d7(%rip)
000000000001ba01	testb	%al,%al
000000000001ba03	jne	0x0001ba1a
000000000001ba05	movq	%r15,%rdi
000000000001ba08	movq	0x000898a9(%rip),%rsi
000000000001ba0f	movl	$0x00000001,%edx
000000000001ba14	call	*0x000686be(%rip)
000000000001ba1a	movq	0xd0(%rbp),%rax
000000000001ba1e	movq	0x00093623(%rip),%rcx
000000000001ba25	movq	(%rax,%rcx),%rdi
000000000001ba29	movq	0x0008b320(%rip),%rsi
000000000001ba30	movq	%r12,%rdx
000000000001ba33	movq	%r15,%rcx
000000000001ba36	xorl	%r8d,%r8d
000000000001ba39	call	*0x00068699(%rip)
000000000001ba3f	movq	0xd0(%rbp),%rax
000000000001ba43	movq	%rax,0xa0(%rbp)
000000000001ba47	movq	%r12,%r14
000000000001ba4a	movq	0x88(%rbp),%r12
000000000001ba4e	movq	%r12,%rdi
000000000001ba51	movq	0x0008b300(%rip),%rsi
000000000001ba58	call	*%r13
000000000001ba5b	movq	%rax,0x98(%rbp)
000000000001ba5f	movq	%r12,%rdi
000000000001ba62	movq	0x0008b2f7(%rip),%rsi
000000000001ba69	call	*%r13
000000000001ba6c	movq	%rax,%rbx
000000000001ba6f	movq	%r12,%rdi
000000000001ba72	movq	0x0008b2ef(%rip),%rsi
000000000001ba79	call	*%r13
000000000001ba7c	movq	%rax,0x08(%rsp)
000000000001ba81	movq	%r14,0x18(%rsp)
000000000001ba86	movq	%r15,0x10(%rsp)
000000000001ba8b	movq	0xc0(%rbp),%rax
000000000001ba8f	movq	%rax,(%rsp)
000000000001ba93	movq	0xa0(%rbp),%rdi
000000000001ba97	movq	%r12,%rax
000000000001ba9a	movq	0xb8(%rbp),%r12
000000000001ba9e	movq	0x0008b2cb(%rip),%rsi
000000000001baa5	movq	0xb0(%rbp),%rdx
000000000001baa9	movq	0x98(%rbp),%rcx
000000000001baad	movq	%rbx,%r8
000000000001bab0	movq	%rax,%rbx
000000000001bab3	movq	0xa8(%rbp),%r9
000000000001bab7	call	*%r13
000000000001baba	movq	0xd0(%rbp),%rdi
000000000001babe	movq	0x0008b2b3(%rip),%rsi
000000000001bac5	movq	%r15,%rdx
000000000001bac8	movq	%r14,%rcx
000000000001bacb	call	*%r13
000000000001bace	movq	%rbx,%rdi
000000000001bad1	movq	%rbx,%r15
000000000001bad4	movq	0x0008b23d(%rip),%rsi
000000000001badb	call	*%r13
000000000001bade	testb	%al,%al
000000000001bae0	jne	0x0001b913
000000000001bae6	movq	0x0009352b(%rip),%rcx
000000000001baed	movq	0xd0(%rbp),%rax
000000000001baf1	movq	%r14,(%rax,%rcx)
000000000001baf5	movq	0xd0(%rbp),%rax
000000000001baf9	movq	(%rax,%rcx),%rcx
000000000001bafd	incq	%rcx
000000000001bb00	movq	0x00093501(%rip),%rdx
000000000001bb07	movq	%rcx,(%rax,%rdx)
000000000001bb0b	movq	0x0008b26e(%rip),%rsi
000000000001bb12	movq	0xd0(%rbp),%rdi
000000000001bb16	call	*0x000685bc(%rip)
000000000001bb1c	movq	0xd0(%rbp),%rdi
000000000001bb20	testb	%al,%al
000000000001bb22	je	0x0001bb2d
000000000001bb24	movq	0x0008b25d(%rip),%rsi
000000000001bb2b	jmp	0x0001bb34
000000000001bb2d	movq	0x0008b14c(%rip),%rsi
000000000001bb34	call	*0x0006859e(%rip)
000000000001bb3a	addq	$0x78,%rsp
000000000001bb3e	popq	%rbx
000000000001bb3f	popq	%r12
000000000001bb41	popq	%r13
000000000001bb43	popq	%r14
000000000001bb45	popq	%r15
000000000001bb47	popq	%rbp
000000000001bb48	ret
-[PBXGDB_MICommand errorMessage]:
000000000001bb49	pushq	%rbp
000000000001bb4a	movq	%rsp,%rbp
000000000001bb4d	movq	0x00092fec(%rip),%rax
000000000001bb54	movq	(%rdi,%rax),%rax
000000000001bb58	popq	%rbp
000000000001bb59	ret
-[PBXGDB_MIStackFramesCommand nextFrame]:
000000000001bb5a	pushq	%rbp
000000000001bb5b	movq	%rsp,%rbp
000000000001bb5e	pushq	%rbx
000000000001bb5f	pushq	%rax
000000000001bb60	movq	%rdi,%rbx
000000000001bb63	movq	0x00093266(%rip),%rax
000000000001bb6a	movq	(%rbx,%rax),%rdi
000000000001bb6e	xorb	%cl,%cl
000000000001bb70	testq	%rdi,%rdi
000000000001bb73	je	0x0001bc02
000000000001bb79	leaq	0x0008c790(%rip),%rsi
000000000001bb80	call	*0x0008c78a(%rip)
000000000001bb86	xorb	%cl,%cl
000000000001bb88	testq	%rax,%rax
000000000001bb8b	je	0x0001bc02
000000000001bb8d	movq	0x00093244(%rip),%rcx
000000000001bb94	movq	(%rbx,%rcx),%rsi
000000000001bb98	testq	%rsi,%rsi
000000000001bb9b	jne	0x0001bbad
000000000001bb9d	xorl	%edx,%edx
000000000001bb9f	movq	0x0009323a(%rip),%rdi
000000000001bba6	cmpq	$0x00,(%rbx,%rdi)
000000000001bbab	je	0x0001bbbf
000000000001bbad	incq	%rsi
000000000001bbb0	movq	%rsi,(%rbx,%rcx)
000000000001bbb4	movq	0x0009321d(%rip),%rcx
000000000001bbbb	movq	(%rbx,%rcx),%rdx
000000000001bbbf	xorb	%cl,%cl
000000000001bbc1	cmpq	%rax,%rdx
000000000001bbc4	jae	0x0001bc02
000000000001bbc6	movq	0x00093203(%rip),%rax
000000000001bbcd	movq	(%rbx,%rax),%rdi
000000000001bbd1	leaq	0x0008c748(%rip),%rsi
000000000001bbd8	call	*0x0008c742(%rip)
000000000001bbde	movq	0x00088efb(%rip),%rsi
000000000001bbe5	movq	%rax,%rdi
000000000001bbe8	call	*0x000684ea(%rip)
000000000001bbee	movq	0x000931eb(%rip),%rdx
000000000001bbf5	movq	%rax,%rdi
000000000001bbf8	movq	%rbx,%rsi
000000000001bbfb	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001bc00	movb	$0x01,%cl
000000000001bc02	movzbl	%cl,%eax
000000000001bc05	addq	$0x08,%rsp
000000000001bc09	popq	%rbx
000000000001bc0a	popq	%rbp
000000000001bc0b	ret
-[PBXGDB_MIStackFramesCommand currentFrameFunctionName]:
000000000001bc0c	pushq	%rbp
000000000001bc0d	movq	%rsp,%rbp
000000000001bc10	movq	0x000931c9(%rip),%rax
000000000001bc17	movq	(%rdi,%rax),%rdi
000000000001bc1b	popq	%rbp
000000000001bc1c	jmp	_functionNameFromFrameItem
-[PBXGDB_MIStackFramesCommand currentFrameFileName]:
000000000001bc21	pushq	%rbp
000000000001bc22	movq	%rsp,%rbp
000000000001bc25	pushq	%r15
000000000001bc27	pushq	%r14
000000000001bc29	pushq	%r13
000000000001bc2b	pushq	%r12
000000000001bc2d	pushq	%rbx
000000000001bc2e	pushq	%rax
000000000001bc2f	movq	%rdi,%r14
000000000001bc32	movq	0x000931a7(%rip),%rax
000000000001bc39	movq	(%r14,%rax),%rdi
000000000001bc3d	movq	0x00088e94(%rip),%rsi
000000000001bc44	leaq	0x0009724d(%rip),%rdx
000000000001bc4b	call	*0x00068487(%rip)
000000000001bc51	movq	%rax,%rbx
000000000001bc54	testq	%rbx,%rbx
000000000001bc57	jne	0x0001bc86
000000000001bc59	movq	0x00093180(%rip),%rax
000000000001bc60	movq	(%r14,%rax),%rdi
000000000001bc64	movq	0x00088e6d(%rip),%rsi
000000000001bc6b	leaq	0x000944e6(%rip),%rdx
000000000001bc72	call	*0x00068460(%rip)
000000000001bc78	movq	%rax,%rbx
000000000001bc7b	xorl	%eax,%eax
000000000001bc7d	testq	%rbx,%rbx
000000000001bc80	je	0x0001bd9f
000000000001bc86	movq	0x00088e7b(%rip),%rsi
000000000001bc8d	movq	0x00068444(%rip),%r15
000000000001bc94	movq	%rbx,%rdi
000000000001bc97	call	*%r15
000000000001bc9a	movq	0x0008aa7f(%rip),%rsi
000000000001bca1	movq	%rax,%rdi
000000000001bca4	call	*%r15
000000000001bca7	testb	%al,%al
000000000001bca9	jne	0x0001bdae
000000000001bcaf	movq	0x0009312a(%rip),%rax
000000000001bcb6	movq	(%r14,%rax),%rdi
000000000001bcba	movq	0x00088e17(%rip),%rsi
000000000001bcc1	leaq	0x00094610(%rip),%rdx
000000000001bcc8	call	*0x0006840a(%rip)
000000000001bcce	testq	%rax,%rax
000000000001bcd1	je	0x0001bdae
000000000001bcd7	movq	0x00088e2a(%rip),%rsi
000000000001bcde	movq	0x000683f3(%rip),%r13
000000000001bce5	movq	%rax,%rdi
000000000001bce8	call	*%r13
000000000001bceb	movq	%rax,%r15
000000000001bcee	movq	0x00088e13(%rip),%rsi
000000000001bcf5	movq	%rbx,%rdi
000000000001bcf8	call	*%r13
000000000001bcfb	movq	%rax,%r12
000000000001bcfe	movq	0x000930ab(%rip),%rax
000000000001bd05	movq	(%r14,%rax),%rdi
000000000001bd09	movq	0x0008a888(%rip),%rsi
000000000001bd10	movq	%r15,%rdx
000000000001bd13	call	*%r13
000000000001bd16	leaq	0x0008c5d3(%rip),%rsi
000000000001bd1d	movq	%r15,%rdi
000000000001bd20	call	*0x0008c5ca(%rip)
000000000001bd26	leaq	0xff(%rax),%rdx
000000000001bd2a	movq	0x00089527(%rip),%rsi
000000000001bd31	movq	%r15,%rdi
000000000001bd34	call	*%r13
000000000001bd37	movw	%ax,%bx
000000000001bd3a	movq	0x00093077(%rip),%rax
000000000001bd41	movq	(%r14,%rax),%rdi
000000000001bd45	movq	0x0008950c(%rip),%rsi
000000000001bd4c	xorl	%edx,%edx
000000000001bd4e	call	*%r13
000000000001bd51	cmpw	%ax,%bx
000000000001bd54	je	0x0001bd79
000000000001bd56	movq	0x0009305b(%rip),%rax
000000000001bd5d	movq	(%r14,%rax),%rdx
000000000001bd61	movq	0x00093048(%rip),%rax
000000000001bd68	movq	(%r14,%rax),%rdi
000000000001bd6c	movq	0x00088d8d(%rip),%rsi
000000000001bd73	call	*0x0006835f(%rip)
000000000001bd79	movq	0x00093030(%rip),%rax
000000000001bd80	movq	(%r14,%rax),%rdi
000000000001bd84	movq	0x00088d75(%rip),%rsi
000000000001bd8b	movq	%r12,%rdx
000000000001bd8e	call	*0x00068344(%rip)
000000000001bd94	movq	0x00093015(%rip),%rax
000000000001bd9b	movq	(%r14,%rax),%rax
000000000001bd9f	addq	$0x08,%rsp
000000000001bda3	popq	%rbx
000000000001bda4	popq	%r12
000000000001bda6	popq	%r13
000000000001bda8	popq	%r14
000000000001bdaa	popq	%r15
000000000001bdac	popq	%rbp
000000000001bdad	ret
000000000001bdae	movq	0x00088d53(%rip),%rsi
000000000001bdb5	movq	%rbx,%rdi
000000000001bdb8	addq	$0x08,%rsp
000000000001bdbc	popq	%rbx
000000000001bdbd	popq	%r12
000000000001bdbf	popq	%r13
000000000001bdc1	popq	%r14
000000000001bdc3	popq	%r15
000000000001bdc5	popq	%rbp
000000000001bdc6	jmp	*0x0006830c(%rip)
-[PBXGDB_MIStackFramesCommand currentFrameLineNumber]:
000000000001bdcc	pushq	%rbp
000000000001bdcd	movq	%rsp,%rbp
000000000001bdd0	movq	0x00093009(%rip),%rax
000000000001bdd7	movq	(%rdi,%rax),%rdi
000000000001bddb	movq	0x00088cf6(%rip),%rsi
000000000001bde2	leaq	0x0009440f(%rip),%rdx
000000000001bde9	call	*0x000682e9(%rip)
000000000001bdef	testq	%rax,%rax
000000000001bdf2	jne	0x0001bdfd
000000000001bdf4	movq	$0xffffffff,%rax
000000000001bdfb	popq	%rbp
000000000001bdfc	ret
000000000001bdfd	movq	0x00088d04(%rip),%rsi
000000000001be04	movq	%rax,%rdi
000000000001be07	call	*0x000682cb(%rip)
000000000001be0d	movq	0x000894cc(%rip),%rsi
000000000001be14	movq	%rax,%rdi
000000000001be17	movq	0x000682ba(%rip),%rax
000000000001be1e	popq	%rbp
000000000001be1f	jmp	*%rax
-[PBXGDB_MIStackFramesCommand currentFrameIndex]:
000000000001be21	pushq	%rbp
000000000001be22	movq	%rsp,%rbp
000000000001be25	movq	0x00092fb4(%rip),%rax
000000000001be2c	movq	(%rdi,%rax),%rdi
000000000001be30	movq	0x00088ca1(%rip),%rsi
000000000001be37	leaq	0x000940ba(%rip),%rdx
000000000001be3e	call	*0x00068294(%rip)
000000000001be44	testq	%rax,%rax
000000000001be47	jne	0x0001be52
000000000001be49	movq	$0xffffffff,%rax
000000000001be50	popq	%rbp
000000000001be51	ret
000000000001be52	movq	0x00088caf(%rip),%rsi
000000000001be59	movq	%rax,%rdi
000000000001be5c	call	*0x00068276(%rip)
000000000001be62	movq	0x00089477(%rip),%rsi
000000000001be69	movq	%rax,%rdi
000000000001be6c	movq	0x00068265(%rip),%rax
000000000001be73	popq	%rbp
000000000001be74	jmp	*%rax
-[PBXGDB_MIStackFramesCommand currentFrameIPAddress]:
000000000001be76	pushq	%rbp
000000000001be77	movq	%rsp,%rbp
000000000001be7a	pushq	%rbx
000000000001be7b	pushq	%rax
000000000001be7c	movq	0x00092f5d(%rip),%rax
000000000001be83	movq	(%rdi,%rax),%rdi
000000000001be87	movq	0x00088c4a(%rip),%rsi
000000000001be8e	leaq	0x00093903(%rip),%rdx
000000000001be95	call	*0x0006823d(%rip)
000000000001be9b	testq	%rax,%rax
000000000001be9e	jne	0x0001bea9
000000000001bea0	xorl	%eax,%eax
000000000001bea2	addq	$0x08,%rsp
000000000001bea6	popq	%rbx
000000000001bea7	popq	%rbp
000000000001bea8	ret
000000000001bea9	movq	0x00088c58(%rip),%rsi
000000000001beb0	movq	0x00068221(%rip),%rbx
000000000001beb7	movq	%rax,%rdi
000000000001beba	call	*%rbx
000000000001bebc	movq	0x00088c6d(%rip),%rsi
000000000001bec3	movq	%rax,%rdi
000000000001bec6	call	*%rbx
000000000001bec8	movq	%rax,%rdi
000000000001becb	xorl	%esi,%esi
000000000001becd	xorl	%edx,%edx
000000000001becf	addq	$0x08,%rsp
000000000001bed3	popq	%rbx
000000000001bed4	popq	%rbp
000000000001bed5	jmp	0x0004e71c	; symbol stub for: _strtoull
-[PBXGDB_MIStackFramesCommand currentFrameFPAddress]:
000000000001beda	pushq	%rbp
000000000001bedb	movq	%rsp,%rbp
000000000001bede	pushq	%rbx
000000000001bedf	pushq	%rax
000000000001bee0	movq	0x00092ef9(%rip),%rax
000000000001bee7	movq	(%rdi,%rax),%rdi
000000000001beeb	movq	0x00088be6(%rip),%rsi
000000000001bef2	leaq	0x00093f9f(%rip),%rdx
000000000001bef9	call	*0x000681d9(%rip)
000000000001beff	testq	%rax,%rax
000000000001bf02	jne	0x0001bf0d
000000000001bf04	xorl	%eax,%eax
000000000001bf06	addq	$0x08,%rsp
000000000001bf0a	popq	%rbx
000000000001bf0b	popq	%rbp
000000000001bf0c	ret
000000000001bf0d	movq	0x00088bf4(%rip),%rsi
000000000001bf14	movq	0x000681bd(%rip),%rbx
000000000001bf1b	movq	%rax,%rdi
000000000001bf1e	call	*%rbx
000000000001bf20	movq	0x00088c09(%rip),%rsi
000000000001bf27	movq	%rax,%rdi
000000000001bf2a	call	*%rbx
000000000001bf2c	movq	%rax,%rdi
000000000001bf2f	xorl	%esi,%esi
000000000001bf31	xorl	%edx,%edx
000000000001bf33	addq	$0x08,%rsp
000000000001bf37	popq	%rbx
000000000001bf38	popq	%rbp
000000000001bf39	jmp	0x0004e71c	; symbol stub for: _strtoull
-[PBXGDB_MIStackFramesCommand currentModulePath]:
000000000001bf3e	pushq	%rbp
000000000001bf3f	movq	%rsp,%rbp
000000000001bf42	movq	0x00092e97(%rip),%rax
000000000001bf49	movq	(%rdi,%rax),%rdi
000000000001bf4d	movq	0x00088b84(%rip),%rsi
000000000001bf54	leaq	0x00096f5d(%rip),%rdx
000000000001bf5b	call	*0x00068177(%rip)
000000000001bf61	movq	%rax,%rdi
000000000001bf64	popq	%rbp
000000000001bf65	jmp	_shlibNameFromItem
-[PBXGDB_UpdateStackSequence _setFunctionName:IPAddress:FPAddress:fileName:lineNumber:modulePath:forStackFrame:withFrameIndex:]:
000000000001bf6a	pushq	%rbp
000000000001bf6b	movq	%rsp,%rbp
000000000001bf6e	pushq	%r15
000000000001bf70	pushq	%r14
000000000001bf72	pushq	%r13
000000000001bf74	pushq	%r12
000000000001bf76	pushq	%rbx
000000000001bf77	pushq	%rax
000000000001bf78	movq	%r9,%r15
000000000001bf7b	movq	%r8,%r12
000000000001bf7e	movq	%rcx,%r13
000000000001bf81	movq	%rdi,%r14
000000000001bf84	movq	0x0008ad55(%rip),%rsi
000000000001bf8b	movq	0x20(%rbp),%rbx
000000000001bf8f	movq	%rbx,%rdi
000000000001bf92	call	*0x00068140(%rip)
000000000001bf98	movq	0x0008ad49(%rip),%rsi
000000000001bf9f	movq	%rbx,%rdi
000000000001bfa2	movq	%r13,%rdx
000000000001bfa5	call	*0x0006812d(%rip)
000000000001bfab	movq	0x0008ad3e(%rip),%rsi
000000000001bfb2	movq	%rbx,%rdi
000000000001bfb5	movq	%r12,%rdx
000000000001bfb8	call	*0x0006811a(%rip)
000000000001bfbe	movq	0x0008ad33(%rip),%rsi
000000000001bfc5	movq	%rbx,%rdi
000000000001bfc8	movq	%r15,%rdx
000000000001bfcb	call	*0x00068107(%rip)
000000000001bfd1	movq	0x10(%rbp),%rdx
000000000001bfd5	movq	0x0008ad24(%rip),%rsi
000000000001bfdc	movq	%rbx,%rdi
000000000001bfdf	call	*0x000680f3(%rip)
000000000001bfe5	movq	0x18(%rbp),%rdx
000000000001bfe9	movq	0x0008acd8(%rip),%rsi
000000000001bff0	movq	%r14,%rdi
000000000001bff3	movl	$0x00000001,%ecx
000000000001bff8	movq	%rbx,%r8
000000000001bffb	movq	0x000680d6(%rip),%rax
000000000001c002	addq	$0x08,%rsp
000000000001c006	popq	%rbx
000000000001c007	popq	%r12
000000000001c009	popq	%r13
000000000001c00b	popq	%r14
000000000001c00d	popq	%r15
000000000001c00f	popq	%rbp
000000000001c010	jmp	*%rax
-[PBXGDB_UpdateStackSequence _shouldEndCurrentFetch]:
000000000001c012	pushq	%rbp
000000000001c013	movq	%rsp,%rbp
000000000001c016	subq	$0x20,%rsp
000000000001c01a	movq	%rdi,0xf8(%rbp)
000000000001c01e	movq	%rsi,0xf0(%rbp)
000000000001c022	movq	0x00092fe7(%rip),%rax
000000000001c029	movq	(%rdi,%rax),%rax
000000000001c02d	movq	$0x7fffffffffffffff,%rcx
000000000001c037	cmpq	%rcx,%rax
000000000001c03a	jne	0x0001c08c
000000000001c03c	leaq	0x000937f5(%rip),%rax
000000000001c043	leaq	0x00045663(%rip),%rcx
000000000001c04a	movq	%rcx,0x08(%rsp)
000000000001c04f	movq	%rax,(%rsp)
000000000001c053	leaq	0xf8(%rbp),%rdi
000000000001c057	leaq	0xf0(%rbp),%rsi
000000000001c05b	leaq	0x000455f0(%rip),%rdx
000000000001c062	leaq	0x00045285(%rip),%rcx
000000000001c069	leaq	0x00098128(%rip),%r9
000000000001c070	movl	$0x000002a0,%r8d
000000000001c076	xorb	%al,%al
000000000001c078	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000001c07d	movq	0x00092f8c(%rip),%rax
000000000001c084	movq	0xf8(%rbp),%rdi
000000000001c088	movq	(%rdi,%rax),%rax
000000000001c08c	movb	$0x01,%cl
000000000001c08e	cmpq	$0x000001f4,%eax
000000000001c094	ja	0x0001c0a4
000000000001c096	movq	0x00092f6b(%rip),%rcx
000000000001c09d	cmpq	%rax,(%rdi,%rcx)
000000000001c0a1	seta	%cl
000000000001c0a4	movzbl	%cl,%eax
000000000001c0a7	addq	$0x20,%rsp
000000000001c0ab	popq	%rbp
000000000001c0ac	ret
000000000001c0ad	nop
000000000001c0ae	nop
000000000001c0af	nop
000000000001c0b0	nop
000000000001c0b1	nop
-[DBGGDBLauncher parseConsoleInputFromOriginalInput:]:
000000000001c0b2	pushq	%rbp
000000000001c0b3	movq	%rsp,%rbp
000000000001c0b6	movq	0x0009344b(%rip),%rax
000000000001c0bd	movq	(%rdi,%rax),%rdi
000000000001c0c1	movq	0x0008b9a0(%rip),%rsi
000000000001c0c8	popq	%rbp
000000000001c0c9	jmp	*0x00068009(%rip)
-[PBXGDB_Adaptor parseAndApproveInputFromConsole:]:
000000000001c0cf	pushq	%rbp
000000000001c0d0	movq	%rsp,%rbp
000000000001c0d3	pushq	%r15
000000000001c0d5	pushq	%r14
000000000001c0d7	pushq	%r13
000000000001c0d9	pushq	%r12
000000000001c0db	pushq	%rbx
000000000001c0dc	pushq	%rax
000000000001c0dd	movq	%rdx,%r14
000000000001c0e0	movq	%rdi,%r15
000000000001c0e3	movq	0x00088bfe(%rip),%rsi
000000000001c0ea	movq	0x00067fe7(%rip),%r13
000000000001c0f1	call	*%r13
000000000001c0f4	movq	0x00088bf5(%rip),%rsi
000000000001c0fb	movq	%rax,%rdi
000000000001c0fe	call	*%r13
000000000001c101	movq	0x00088db8(%rip),%rsi
000000000001c108	movq	%rax,%rdi
000000000001c10b	call	*%r13
000000000001c10e	movq	%rax,%rbx
000000000001c111	movq	0x00088db0(%rip),%rsi
000000000001c118	movq	%rbx,%rdi
000000000001c11b	call	*%r13
000000000001c11e	movq	%rax,%r12
000000000001c121	movq	0x00088da8(%rip),%rsi
000000000001c128	movq	%rbx,%rdi
000000000001c12b	call	*%r13
000000000001c12e	movq	%rax,%rbx
000000000001c131	movq	0x00088da0(%rip),%rsi
000000000001c138	movq	%r12,%rdi
000000000001c13b	call	*%r13
000000000001c13e	movq	%rax,%r12
000000000001c141	movq	0x00088d98(%rip),%rsi
000000000001c148	movq	%rbx,%rdi
000000000001c14b	call	*%r13
000000000001c14e	movq	0x00088d93(%rip),%rsi
000000000001c155	movq	%r15,%rdi
000000000001c158	movq	%r14,%rdx
000000000001c15b	movq	%r12,%rcx
000000000001c15e	movq	%rax,%r8
000000000001c161	call	*%r13
000000000001c164	xorl	%eax,%eax
000000000001c166	addq	$0x08,%rsp
000000000001c16a	popq	%rbx
000000000001c16b	popq	%r12
000000000001c16d	popq	%r13
000000000001c16f	popq	%r14
000000000001c171	popq	%r15
000000000001c173	popq	%rbp
000000000001c174	ret
-[PBXGDB_Adaptor requestInterpretCommand:inThread:atStackFrame:]:
000000000001c175	pushq	%rbp
000000000001c176	movq	%rsp,%rbp
000000000001c179	pushq	%r15
000000000001c17b	pushq	%r14
000000000001c17d	pushq	%r13
000000000001c17f	pushq	%r12
000000000001c181	pushq	%rbx
000000000001c182	subq	$0x18,%rsp
000000000001c186	movq	%r8,0xc0(%rbp)
000000000001c18a	movq	%rcx,%rbx
000000000001c18d	movq	%rdx,%r15
000000000001c190	movq	%rdi,%r14
000000000001c193	movq	0x000888e6(%rip),%rsi
000000000001c19a	movq	0x0008c33f(%rip),%rdi
000000000001c1a1	call	*0x00067f31(%rip)
000000000001c1a7	movq	%rax,%r12
000000000001c1aa	movq	0x0009b4c7(%rip),%rdx
000000000001c1b1	testq	%rdx,%rdx
000000000001c1b4	jne	0x0001c1f1
000000000001c1b6	movq	0x00089083(%rip),%rsi
000000000001c1bd	movq	0x0008c414(%rip),%rdi
000000000001c1c4	movq	0x00067f0d(%rip),%r13
000000000001c1cb	call	*%r13
000000000001c1ce	movq	0x00089073(%rip),%rsi
000000000001c1d5	movq	%rax,%rdi
000000000001c1d8	call	*%r13
000000000001c1db	leaq	0x0009b496(%rip),%rsi
000000000001c1e2	movq	%rax,%rdi
000000000001c1e5	callq	0x0004e602	; symbol stub for: _objc_assign_global
000000000001c1ea	movq	0x0009b487(%rip),%rdx
000000000001c1f1	movq	%r12,0xc8(%rbp)
000000000001c1f5	movq	%r14,0xd0(%rbp)
000000000001c1f9	movq	0x00089050(%rip),%rsi
000000000001c200	movq	%r15,%rdi
000000000001c203	call	*0x00067ecf(%rip)
000000000001c209	movq	$0x7fffffffffffffff,%rcx
000000000001c213	cmpq	%rcx,%rax
000000000001c216	jne	0x0001c221
000000000001c218	leaq	0x00093719(%rip),%r15
000000000001c21f	jmp	0x0001c285
000000000001c221	movq	0x00089030(%rip),%rsi
000000000001c228	movq	%r15,%rdi
000000000001c22b	movq	%rax,%rdx
000000000001c22e	call	*0x00067ea4(%rip)
000000000001c234	cmpw	$0x0a,%ax
000000000001c238	je	0x0001c218
000000000001c23a	movq	%rbx,%r14
000000000001c23d	leaq	0x0008c0ac(%rip),%rsi
000000000001c244	movq	%r15,%rdi
000000000001c247	call	*0x0008c0a3(%rip)
000000000001c24d	movq	%rax,%rbx
000000000001c250	decq	%rbx
000000000001c253	movq	0x00088ffe(%rip),%rsi
000000000001c25a	movq	%r15,%rdi
000000000001c25d	movq	%rbx,%rdx
000000000001c260	call	*0x00067e72(%rip)
000000000001c266	cmpw	$0x0a,%ax
000000000001c26a	jne	0x0001c282
000000000001c26c	movq	0x00088fed(%rip),%rsi
000000000001c273	movq	%r15,%rdi
000000000001c276	movq	%rbx,%rdx
000000000001c279	call	*0x00067e59(%rip)
000000000001c27f	movq	%rax,%r15
000000000001c282	movq	%r14,%rbx
000000000001c285	movq	$0xffffffff,%r12
000000000001c28c	testq	%rbx,%rbx
000000000001c28f	movq	$0xffffffff,%r14
000000000001c296	je	0x0001c2f7
000000000001c298	movq	0x00088fc9(%rip),%rsi
000000000001c29f	movq	0x00067e32(%rip),%r14
000000000001c2a6	movq	%rbx,%rdi
000000000001c2a9	call	*%r14
000000000001c2ac	movq	%rbx,%rdi
000000000001c2af	movq	%rax,%r13
000000000001c2b2	movq	0x00088e37(%rip),%rsi
000000000001c2b9	call	*%r14
000000000001c2bc	movq	%rax,%r12
000000000001c2bf	leaq	0x0008c04a(%rip),%rsi
000000000001c2c6	movq	%r13,%rdi
000000000001c2c9	call	*0x0008c041(%rip)
000000000001c2cf	movq	$0xffffffff,%r14
000000000001c2d6	testq	%rax,%rax
000000000001c2d9	je	0x0001c2f7
000000000001c2db	movq	0xc0(%rbp),%rdx
000000000001c2df	testq	%rdx,%rdx
000000000001c2e2	je	0x0001c2f7
000000000001c2e4	movq	0x00088f85(%rip),%rsi
000000000001c2eb	movq	%r13,%rdi
000000000001c2ee	call	*0x00067de4(%rip)
000000000001c2f4	movq	%rax,%r14
000000000001c2f7	movq	0x000887aa(%rip),%rsi
000000000001c2fe	movq	0x00067dd3(%rip),%rbx
000000000001c305	movq	0xc8(%rbp),%rax
000000000001c309	movq	%rax,%rdi
000000000001c30c	movq	%r12,%rdx
000000000001c30f	movq	%rax,%r12
000000000001c312	call	*%rbx
000000000001c314	movq	0x00088795(%rip),%rsi
000000000001c31b	movq	%r12,%rdi
000000000001c31e	movq	%r14,%rdx
000000000001c321	call	*%rbx
000000000001c323	movq	0x00088f4e(%rip),%rsi
000000000001c32a	movq	%r12,%rdi
000000000001c32d	movq	%r15,%rdx
000000000001c330	call	*%rbx
000000000001c332	movq	0x0009233f(%rip),%rax
000000000001c339	movq	0xd0(%rbp),%r14
000000000001c33d	movq	(%r14,%rax),%rdi
000000000001c341	movq	0x00088f38(%rip),%rsi
000000000001c348	call	*%rbx
000000000001c34a	cmpb	$0x01,%al
000000000001c34c	jne	0x0001c377
000000000001c34e	movq	0x00092323(%rip),%rax
000000000001c355	movq	(%r14,%rax),%rdi
000000000001c359	movq	0x00088768(%rip),%rsi
000000000001c360	movq	%r12,%rdx
000000000001c363	addq	$0x18,%rsp
000000000001c367	popq	%rbx
000000000001c368	popq	%r12
000000000001c36a	popq	%r13
000000000001c36c	popq	%r14
000000000001c36e	popq	%r15
000000000001c370	popq	%rbp
000000000001c371	jmp	*0x00067d61(%rip)
000000000001c377	movq	0x0008c262(%rip),%rdi
000000000001c37e	leaq	0x0008bf5b(%rip),%rsi
000000000001c385	call	*0x0008bf55(%rip)
000000000001c38b	movq	0x000886de(%rip),%rsi
000000000001c392	movq	%rax,%rdi
000000000001c395	call	*0x00067d3d(%rip)
000000000001c39b	movq	%rax,%rbx
000000000001c39e	movq	0x00088e13(%rip),%rsi
000000000001c3a5	movq	%r14,%rdi
000000000001c3a8	call	*0x00067d2a(%rip)
000000000001c3ae	movq	0x00088e0b(%rip),%rsi
000000000001c3b5	movq	%rbx,%rdi
000000000001c3b8	movq	%rax,%rdx
000000000001c3bb	call	*0x00067d17(%rip)
000000000001c3c1	movq	0x00088a08(%rip),%rsi
000000000001c3c8	movq	%r14,%rdi
000000000001c3cb	call	*0x00067d07(%rip)
000000000001c3d1	movq	0x00088a00(%rip),%rsi
000000000001c3d8	movq	%rbx,%rdi
000000000001c3db	movq	%rax,%rdx
000000000001c3de	call	*0x00067cf4(%rip)
000000000001c3e4	movq	0x00088e9d(%rip),%rsi
000000000001c3eb	movq	%rbx,%rdi
000000000001c3ee	movq	%r12,%rdx
000000000001c3f1	call	*0x00067ce1(%rip)
000000000001c3f7	movq	0x0008868a(%rip),%rsi
000000000001c3fe	movq	%r12,%rdi
000000000001c401	movq	%rbx,%rdx
000000000001c404	call	*0x00067cce(%rip)
000000000001c40a	movq	0x00088687(%rip),%rsi
000000000001c411	movq	0x00088e78(%rip),%rdx
000000000001c418	movq	%r12,%rdi
000000000001c41b	call	*0x00067cb7(%rip)
000000000001c421	movq	0x000889a8(%rip),%rsi
000000000001c428	movq	%r14,%rdi
000000000001c42b	call	*0x00067ca7(%rip)
000000000001c431	movq	0x000889a8(%rip),%rsi
000000000001c438	movq	%rax,%rdi
000000000001c43b	movq	%rbx,%rdx
000000000001c43e	movq	0x00067c93(%rip),%rax
000000000001c445	addq	$0x18,%rsp
000000000001c449	popq	%rbx
000000000001c44a	popq	%r12
000000000001c44c	popq	%r13
000000000001c44e	popq	%r14
000000000001c450	popq	%r15
000000000001c452	popq	%rbp
000000000001c453	jmp	*%rax
000000000001c455	nop
000000000001c456	nop
000000000001c457	nop
-[PBXGDB_MIUserCommand initWithSequenceNumber:]:
000000000001c458	pushq	%rbp
000000000001c459	movq	%rsp,%rbp
000000000001c45c	subq	$0x10,%rsp
000000000001c460	movq	%rdi,0xf0(%rbp)
000000000001c464	movq	0x0008ca9d(%rip),%rax
000000000001c46b	movq	%rax,0xf8(%rbp)
000000000001c46f	movq	0x00089dba(%rip),%rsi
000000000001c476	leaq	0xf0(%rbp),%rdi
000000000001c47a	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000001c47f	leaq	0x0009267a(%rip),%rcx
000000000001c486	leaq	0x0009266b(%rip),%rdx
000000000001c48d	movq	(%rdx),%rdx
000000000001c490	movq	$0xfffffffe,(%rax,%rdx)
000000000001c498	movq	(%rcx),%rcx
000000000001c49b	movq	$0xfffffffe,(%rax,%rcx)
000000000001c4a3	movq	0x000929e6(%rip),%rcx
000000000001c4aa	movq	$0xffffffff,(%rax,%rcx)
000000000001c4b2	movq	0x000929df(%rip),%rcx
000000000001c4b9	movq	$0xffffffff,(%rax,%rcx)
000000000001c4c1	movq	0x000929d8(%rip),%rcx
000000000001c4c8	movb	$0x00,(%rax,%rcx)
000000000001c4cc	addq	$0x10,%rsp
000000000001c4d0	popq	%rbp
000000000001c4d1	ret
-[PBXGDB_MICommand setFrameIndexContext:]:
000000000001c4d2	pushq	%rbp
000000000001c4d3	movq	%rsp,%rbp
000000000001c4d6	movq	0x00092623(%rip),%rax
000000000001c4dd	movq	%rdx,(%rdi,%rax)
000000000001c4e1	popq	%rbp
000000000001c4e2	ret
-[PBXGDB_MIUserCommand setUserCommandString:]:
000000000001c4e3	pushq	%rbp
000000000001c4e4	movq	%rsp,%rbp
000000000001c4e7	movq	%rdx,%rax
000000000001c4ea	movq	%rdi,%rcx
000000000001c4ed	movq	0x000929b4(%rip),%rdx
000000000001c4f4	cmpq	%rax,(%rcx,%rdx)
000000000001c4f8	jne	0x0001c4fc
000000000001c4fa	popq	%rbp
000000000001c4fb	ret
000000000001c4fc	addq	%rcx,%rdx
000000000001c4ff	subq	%rcx,%rdx
000000000001c502	movq	%rax,%rdi
000000000001c505	movq	%rcx,%rsi
000000000001c508	popq	%rbp
000000000001c509	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001c50e	nop
000000000001c50f	nop
000000000001c510	nop
000000000001c511	nop
000000000001c512	nop
000000000001c513	nop
000000000001c514	nop
000000000001c515	nop
000000000001c516	nop
000000000001c517	nop
000000000001c518	nop
000000000001c519	nop
000000000001c51a	nop
000000000001c51b	nop
-[PBXGDB_MIController sendRawCommand]:
000000000001c51c	pushq	%rbp
000000000001c51d	movq	%rsp,%rbp
000000000001c520	movq	0x00092711(%rip),%rax
000000000001c527	movsbl	(%rdi,%rax),%eax
000000000001c52b	popq	%rbp
000000000001c52c	ret
000000000001c52d	nop
000000000001c52e	nop
-[PBXGDB_InterpreterCommandSequence init]:
000000000001c52f	pushq	%rbp
000000000001c530	movq	%rsp,%rbp
000000000001c533	subq	$0x10,%rsp
000000000001c537	movq	%rdi,0xf0(%rbp)
000000000001c53b	movq	0x0008c82e(%rip),%rax
000000000001c542	movq	%rax,0xf8(%rbp)
000000000001c546	movq	0x00088523(%rip),%rsi
000000000001c54d	leaq	0xf0(%rbp),%rdi
000000000001c551	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000001c556	testq	%rax,%rax
000000000001c559	je	0x0001c569
000000000001c55b	leaq	0x000922d6(%rip),%rcx
000000000001c562	movq	(%rcx),%rcx
000000000001c565	movb	$0x00,(%rax,%rcx)
000000000001c569	addq	$0x10,%rsp
000000000001c56d	popq	%rbp
000000000001c56e	ret
-[PBXGDB_InterpreterCommandSequence setMICommand:]:
000000000001c56f	pushq	%rbp
000000000001c570	movq	%rsp,%rbp
000000000001c573	movq	%rdx,%rax
000000000001c576	movq	%rdi,%rcx
000000000001c579	movq	0x00092338(%rip),%rdx
000000000001c580	movq	%rax,%rdi
000000000001c583	movq	%rcx,%rsi
000000000001c586	popq	%rbp
000000000001c587	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_InterpreterCommandSequence execute]:
000000000001c58c	pushq	%rbp
000000000001c58d	movq	%rsp,%rbp
000000000001c590	pushq	%r14
000000000001c592	pushq	%rbx
000000000001c593	movq	%rdi,%rbx
000000000001c596	movq	0x00092323(%rip),%rax
000000000001c59d	movb	$0x00,(%rbx,%rax)
000000000001c5a1	movq	0x00088510(%rip),%rsi
000000000001c5a8	movq	0x00067b29(%rip),%r14
000000000001c5af	call	*%r14
000000000001c5b2	movq	0x00088837(%rip),%rsi
000000000001c5b9	movq	%rax,%rdi
000000000001c5bc	call	*%r14
000000000001c5bf	movq	0x000895a2(%rip),%rsi
000000000001c5c6	movq	%rax,%rdi
000000000001c5c9	call	*%r14
000000000001c5cc	movq	0x000896a5(%rip),%rsi
000000000001c5d3	movq	%rax,%rdi
000000000001c5d6	movl	$0x00000001,%edx
000000000001c5db	call	*%r14
000000000001c5de	movq	0x000922d3(%rip),%rax
000000000001c5e5	movq	(%rbx,%rax),%rdi
000000000001c5e9	testq	%rdi,%rdi
000000000001c5ec	jne	0x0001c5f3
000000000001c5ee	popq	%rbx
000000000001c5ef	popq	%r14
000000000001c5f1	popq	%rbp
000000000001c5f2	ret
000000000001c5f3	movq	0x0008848e(%rip),%rsi
000000000001c5fa	movq	%rbx,%rdx
000000000001c5fd	call	*0x00067ad5(%rip)
000000000001c603	movq	0x000922ae(%rip),%rax
000000000001c60a	movq	(%rbx,%rax),%rdi
000000000001c60e	movq	0x00088483(%rip),%rsi
000000000001c615	movq	0x00088c74(%rip),%rdx
000000000001c61c	call	*0x00067ab6(%rip)
000000000001c622	movq	0x0009228f(%rip),%rax
000000000001c629	movq	(%rbx,%rax),%rdi
000000000001c62d	movq	0x000894ec(%rip),%rsi
000000000001c634	movq	0x0008954d(%rip),%rdx
000000000001c63b	call	*0x00067a97(%rip)
000000000001c641	movq	0x00088470(%rip),%rsi
000000000001c648	movq	%rbx,%rdi
000000000001c64b	call	*0x00067a87(%rip)
000000000001c651	movq	0x00088468(%rip),%rsi
000000000001c658	movq	%rax,%rdi
000000000001c65b	call	*0x00067a77(%rip)
000000000001c661	movq	0x00092250(%rip),%rcx
000000000001c668	movq	(%rbx,%rcx),%rdx
000000000001c66c	movq	0x000890e5(%rip),%rsi
000000000001c673	movq	%rax,%rdi
000000000001c676	movq	0x00067a5b(%rip),%rax
000000000001c67d	popq	%rbx
000000000001c67e	popq	%r14
000000000001c680	popq	%rbp
000000000001c681	jmp	*%rax
000000000001c683	nop
000000000001c684	nop
000000000001c685	nop
-[PBXGDB_MIUserCommand willExecute]:
000000000001c686	pushq	%rbp
000000000001c687	movq	%rsp,%rbp
000000000001c68a	subq	$0x10,%rsp
000000000001c68e	movq	%rdi,0xf0(%rbp)
000000000001c692	movq	0x0008c86f(%rip),%rax
000000000001c699	movq	%rax,0xf8(%rbp)
000000000001c69d	movq	0x00089c84(%rip),%rsi
000000000001c6a4	leaq	0xf0(%rbp),%rdi
000000000001c6a8	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000001c6ad	addq	$0x10,%rsp
000000000001c6b1	popq	%rbp
000000000001c6b2	ret
000000000001c6b3	nop
000000000001c6b4	nop
000000000001c6b5	nop
-[PBXGDB_MIUserCommand GDBCommandString]:
000000000001c6b6	pushq	%rbp
000000000001c6b7	movq	%rsp,%rbp
000000000001c6ba	pushq	%r14
000000000001c6bc	pushq	%rbx
000000000001c6bd	subq	$0x10,%rsp
000000000001c6c1	movq	%rdi,%r14
000000000001c6c4	movq	0x0008a0dd(%rip),%rsi
000000000001c6cb	call	*0x00067a07(%rip)
000000000001c6d1	movq	%rax,%rbx
000000000001c6d4	leaq	0x0008bc15(%rip),%rsi
000000000001c6db	movq	%rbx,%rdi
000000000001c6de	call	*0x0008bc0c(%rip)
000000000001c6e4	testq	%rax,%rax
000000000001c6e7	je	0x0001c724
000000000001c6e9	movq	0x00088b68(%rip),%rsi
000000000001c6f0	movq	%rbx,%rdi
000000000001c6f3	xorl	%edx,%edx
000000000001c6f5	call	*0x000679dd(%rip)
000000000001c6fb	cmpw	$0x22,%ax
000000000001c6ff	je	0x0001c724
000000000001c701	movq	0x00088470(%rip),%rsi
000000000001c708	movq	0x0008bd41(%rip),%rdi
000000000001c70f	leaq	0x00096e02(%rip),%rdx
000000000001c716	movq	%rbx,%rcx
000000000001c719	xorb	%al,%al
000000000001c71b	call	*0x000679b7(%rip)
000000000001c721	movq	%rax,%rbx
000000000001c724	movq	0x0008bd25(%rip),%rdi
000000000001c72b	leaq	0x0008bbae(%rip),%rsi
000000000001c732	call	*0x0008bba8(%rip)
000000000001c738	movq	0x00088579(%rip),%rsi
000000000001c73f	leaq	0x00096df2(%rip),%rdx
000000000001c746	movq	%rax,%rdi
000000000001c749	movq	%rbx,%rcx
000000000001c74c	xorb	%al,%al
000000000001c74e	call	*0x00067984(%rip)
000000000001c754	leaq	0x000923d5(%rip),%rcx
000000000001c75b	movq	(%rcx),%rdx
000000000001c75e	movq	%rax,%rdi
000000000001c761	movq	%r14,%rsi
000000000001c764	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001c769	leaq	0xe0(%rbp),%rdi
000000000001c76d	movq	%r14,0xe0(%rbp)
000000000001c771	movq	0x0008c790(%rip),%rax
000000000001c778	movq	%rax,0xe8(%rbp)
000000000001c77c	movq	0x00089abd(%rip),%rsi
000000000001c783	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000001c788	addq	$0x10,%rsp
000000000001c78c	popq	%rbx
000000000001c78d	popq	%r14
000000000001c78f	popq	%rbp
000000000001c790	ret
000000000001c791	nop
000000000001c792	nop
000000000001c793	nop
-[PBXGDB_MIUserCommand stringByQuotingIfNeeded]:
000000000001c794	pushq	%rbp
000000000001c795	movq	%rsp,%rbp
000000000001c798	pushq	%r15
000000000001c79a	pushq	%r14
000000000001c79c	pushq	%rbx
000000000001c79d	pushq	%rax
000000000001c79e	movq	%rdi,%r14
000000000001c7a1	cmpq	$0x00,0x0009aef7(%rip)
000000000001c7a9	jne	0x0001c803
000000000001c7ab	movq	0x00089fd6(%rip),%rsi
000000000001c7b2	movq	0x0008be1f(%rip),%rdi
000000000001c7b9	movq	0x00067918(%rip),%r15
000000000001c7c0	call	*%r15
000000000001c7c3	movq	0x0008986e(%rip),%rsi
000000000001c7ca	movq	%rax,%rdi
000000000001c7cd	call	*%r15
000000000001c7d0	movq	%rax,%rbx
000000000001c7d3	leaq	0x00096cfe(%rip),%rdx
000000000001c7da	movq	0x00089faf(%rip),%rsi
000000000001c7e1	movq	%rbx,%rdi
000000000001c7e4	call	*%r15
000000000001c7e7	movq	0x00088a5a(%rip),%rsi
000000000001c7ee	movq	%rbx,%rdi
000000000001c7f1	call	*%r15
000000000001c7f4	leaq	0x0009aea5(%rip),%rsi
000000000001c7fb	movq	%rax,%rdi
000000000001c7fe	callq	0x0004e602	; symbol stub for: _objc_assign_global
000000000001c803	cmpq	$0x00,0x0009ae9d(%rip)
000000000001c80b	jne	0x0001c837
000000000001c80d	movq	0x00089f84(%rip),%rsi
000000000001c814	movq	0x0008bdbd(%rip),%rdi
000000000001c81b	leaq	0x00096cd6(%rip),%rdx
000000000001c822	call	*0x000678b0(%rip)
000000000001c828	leaq	0x0009ae79(%rip),%rsi
000000000001c82f	movq	%rax,%rdi
000000000001c832	callq	0x0004e602	; symbol stub for: _objc_assign_global
000000000001c837	movq	0x0009266a(%rip),%rax
000000000001c83e	movq	(%r14,%rax),%rdi
000000000001c842	movq	0x00088a07(%rip),%rsi
000000000001c849	movq	0x0009ae50(%rip),%rdx
000000000001c850	call	*0x00067882(%rip)
000000000001c856	testq	%rdx,%rdx
000000000001c859	jne	0x0001c871
000000000001c85b	movq	0x00092646(%rip),%rax
000000000001c862	movq	(%r14,%rax),%rax
000000000001c866	addq	$0x08,%rsp
000000000001c86a	popq	%rbx
000000000001c86b	popq	%r14
000000000001c86d	popq	%r15
000000000001c86f	popq	%rbp
000000000001c870	ret
000000000001c871	movq	0x00089f28(%rip),%rsi
000000000001c878	movq	%r14,%rdi
000000000001c87b	xorl	%edx,%edx
000000000001c87d	xorl	%ecx,%ecx
000000000001c87f	xorl	%r8d,%r8d
000000000001c882	addq	$0x08,%rsp
000000000001c886	popq	%rbx
000000000001c887	popq	%r14
000000000001c889	popq	%r15
000000000001c88b	popq	%rbp
000000000001c88c	jmp	*0x00067846(%rip)
000000000001c892	nop
-[PBXGDB_MIUserCommand stringByQuotingOnlyIfNeeded:quoteTabsAndEOLs:quoteHighBitUnichars:]:
000000000001c893	pushq	%rbp
000000000001c894	movq	%rsp,%rbp
000000000001c897	pushq	%r15
000000000001c899	pushq	%r14
000000000001c89b	pushq	%r13
000000000001c89d	pushq	%r12
000000000001c89f	pushq	%rbx
000000000001c8a0	subq	$0x00000278,%rsp
000000000001c8a7	movl	%r8d,0xfffffd88(%rbp)
000000000001c8ae	movl	%ecx,0xfffffdcc(%rbp)
000000000001c8b4	movl	%edx,%r15d
000000000001c8b7	movq	%rdi,0xfffffd98(%rbp)
000000000001c8be	movq	0x000677db(%rip),%rax
000000000001c8c5	movq	(%rax),%rax
000000000001c8c8	movq	%rax,0xd0(%rbp)
000000000001c8cc	movq	0x000925d5(%rip),%rax
000000000001c8d3	movq	(%rdi,%rax),%rdi
000000000001c8d7	leaq	0x0008ba12(%rip),%rsi
000000000001c8de	call	*0x0008ba0c(%rip)
000000000001c8e4	movq	%rax,0xfffffd90(%rbp)
000000000001c8eb	testb	%r15b,%r15b
000000000001c8ee	sete	%r14b
000000000001c8f2	testq	%rax,%rax
000000000001c8f5	jne	0x0001c903
000000000001c8f7	leaq	0x00094b7a(%rip),%rbx
000000000001c8fe	jmp	0x0001d11e
000000000001c903	xorl	%ebx,%ebx
000000000001c905	testb	%r15b,%r15b
000000000001c908	je	0x0001cc06
000000000001c90e	movq	0x0008c06b(%rip),%rdi
000000000001c915	leaq	0x0008b9c4(%rip),%rsi
000000000001c91c	call	*0x0008b9be(%rip)
000000000001c922	movq	0x00088147(%rip),%rsi
000000000001c929	movq	%rax,%rdi
000000000001c92c	call	*0x000677a6(%rip)
000000000001c932	movq	%rax,%rbx
000000000001c935	movq	0x00067734(%rip),%rax
000000000001c93c	movq	0x00092565(%rip),%rcx
000000000001c943	movq	0xfffffd98(%rbp),%rdx
000000000001c94a	movq	(%rdx,%rcx),%rdi
000000000001c94e	movq	(%rax),%rdx
000000000001c951	movq	%rbx,%rsi
000000000001c954	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001c959	movq	0x00067718(%rip),%rax
000000000001c960	movq	0x00067719(%rip),%rcx
000000000001c967	movq	(%rcx),%rcx
000000000001c96a	movq	$0x00000000,(%rbx,%rcx)
000000000001c972	movq	(%rax),%rax
000000000001c975	movq	0xfffffd90(%rbp),%rdx
000000000001c97c	movq	%rdx,(%rbx,%rax)
000000000001c980	movq	(%rbx,%rax),%rax
000000000001c984	movq	(%rbx,%rcx),%rcx
000000000001c988	cmpq	%rax,%rcx
000000000001c98b	jae	0x0001c9fd
000000000001c98d	subq	%rcx,%rax
000000000001c990	cmpq	$0x20,%rax
000000000001c994	movl	$0x00000020,%r8d
000000000001c99a	cmovbeq	%rax,%r8
000000000001c99e	movq	0x000676b3(%rip),%rax
000000000001c9a5	movq	(%rax),%rax
000000000001c9a8	movq	%r8,(%rbx,%rax)
000000000001c9ac	movq	0x0006769d(%rip),%r15
000000000001c9b3	movq	(%r15),%rdx
000000000001c9b6	addq	%rbx,%rdx
000000000001c9b9	movq	0x000676b0(%rip),%rax
000000000001c9c0	movq	(%rax),%rax
000000000001c9c3	movq	(%rbx,%rax),%rdi
000000000001c9c7	movq	0x00089ea2(%rip),%rsi
000000000001c9ce	call	*0x00067704(%rip)
000000000001c9d4	movq	0x00067685(%rip),%rax
000000000001c9db	movq	0x00067686(%rip),%rcx
000000000001c9e2	movq	(%r15),%rdx
000000000001c9e5	movw	(%rbx,%rdx),%dx
000000000001c9e9	movq	(%rcx),%rcx
000000000001c9ec	movw	%dx,(%rbx,%rcx)
000000000001c9f0	movq	(%rax),%rax
000000000001c9f3	movq	$0x00000001,(%rbx,%rax)
000000000001c9fb	jmp	0x0001ca31
000000000001c9fd	movq	0x00067654(%rip),%rax
000000000001ca04	movq	(%rax),%rax
000000000001ca07	movq	$0x00000000,(%rbx,%rax)
000000000001ca0f	movq	0x0006764a(%rip),%rax
000000000001ca16	movq	(%rax),%rax
000000000001ca19	movq	$0x00000001,(%rbx,%rax)
000000000001ca21	movq	0x00067640(%rip),%rax
000000000001ca28	movq	(%rax),%rax
000000000001ca2b	movw	$0xffff,(%rbx,%rax)
000000000001ca31	movb	%r14b,%r13b
000000000001ca34	movq	0x0006763d(%rip),%rcx
000000000001ca3b	movq	0x0006762e(%rip),%rax
000000000001ca42	movq	(%rax),%rax
000000000001ca45	movq	%rax,0xfffffda8(%rbp)
000000000001ca4c	movq	0x00067605(%rip),%rax
000000000001ca53	movq	(%rcx),%rcx
000000000001ca56	movq	%rcx,0xfffffdb8(%rbp)
000000000001ca5d	movq	0x000675fc(%rip),%rcx
000000000001ca64	movq	0x00067615(%rip),%rdx
000000000001ca6b	movq	0x000675de(%rip),%rsi
000000000001ca72	movq	(%rsi),%r12
000000000001ca75	addq	%rbx,%r12
000000000001ca78	movq	(%rdx),%r14
000000000001ca7b	movq	(%rax),%rax
000000000001ca7e	movq	%rax,0xfffffdb0(%rbp)
000000000001ca85	movq	(%rcx),%rsi
000000000001ca88	movq	%rsi,0xfffffda0(%rbp)
000000000001ca8f	movq	0x000675d2(%rip),%rax
000000000001ca96	movq	(%rax),%rcx
000000000001ca99	movq	%rcx,0xfffffdc0(%rbp)
000000000001caa0	movq	0xfffffd90(%rbp),%rax
000000000001caa7	jmp	0x0001cac7
000000000001caa9	movq	%rdx,0xfffffdb8(%rbp)
000000000001cab0	incq	%rax
000000000001cab3	movq	%rax,(%rbx,%rsi)
000000000001cab7	movq	0xfffffdc0(%rbp),%rcx
000000000001cabe	movw	$0xffff,(%rbx,%rcx)
000000000001cac4	movq	%r15,%rax
000000000001cac7	testb	%r13b,%r13b
000000000001caca	jne	0x0001cc06
000000000001cad0	movq	%rsi,%rdi
000000000001cad3	movq	%r14,%rsi
000000000001cad6	movw	(%rbx,%rcx),%cx
000000000001cada	cmpw	$0xff,%cx
000000000001cade	je	0x0001d10c
000000000001cae4	movl	%ecx,%edx
000000000001cae6	addl	$0x9f,%edx
000000000001cae9	xorb	%r13b,%r13b
000000000001caec	cmpw	$0x1a,%dx
000000000001caf0	movq	%rsi,%r14
000000000001caf3	movq	%rdi,%rsi
000000000001caf6	jb	0x0001cb04
000000000001caf8	leal	0xbf(%rcx),%edx
000000000001cafb	xorb	%r13b,%r13b
000000000001cafe	cmpw	$0x1a,%dx
000000000001cb02	jae	0x0001cb09
000000000001cb04	movq	%rax,%r15
000000000001cb07	jmp	0x0001cb55
000000000001cb09	movl	%ecx,%edx
000000000001cb0b	addl	$0xd0,%edx
000000000001cb0e	cmpw	$0x0a,%dx
000000000001cb12	jb	0x0001cb04
000000000001cb14	movl	%ecx,%edx
000000000001cb16	addl	$0xd2,%edx
000000000001cb19	cmpw	$0x31,%dx
000000000001cb1d	ja	0x0001cb35
000000000001cb1f	movzwl	%dx,%edx
000000000001cb22	xorb	%r13b,%r13b
000000000001cb25	movq	$0x0002000000000003,%rdi
000000000001cb2f	btq	%rdx,%rdi
000000000001cb33	jb	0x0001cb04
000000000001cb35	movb	$0x01,%r13b
000000000001cb38	cmpw	$0x5c,%cx
000000000001cb3c	jne	0x0001cb04
000000000001cb3e	movq	(%rbx,%rsi),%rcx
000000000001cb42	movq	(%rbx,%r14),%rdx
000000000001cb46	leaq	0xff(%rdx,%rcx),%r15
000000000001cb4b	incq	%rax
000000000001cb4e	cmpq	%rax,%r15
000000000001cb51	sete	%r13b
000000000001cb55	movq	0xfffffdb0(%rbp),%rax
000000000001cb5c	movq	(%rbx,%rax),%rax
000000000001cb60	movq	(%rbx,%rsi),%rcx
000000000001cb64	cmpq	%rax,%rcx
000000000001cb67	jae	0x0001cb89
000000000001cb69	leaq	0x01(%rcx),%rax
000000000001cb6d	movq	%rax,(%rbx,%rsi)
000000000001cb71	movw	(%r12,%rcx,2),%eax
000000000001cb76	movq	0xfffffdc0(%rbp),%rcx
000000000001cb7d	movw	%ax,(%rbx,%rcx)
000000000001cb81	movq	%r15,%rax
000000000001cb84	jmp	0x0001cac7
000000000001cb89	movq	(%rbx,%r14),%rcx
000000000001cb8d	addq	%rax,%rcx
000000000001cb90	movq	0xfffffdb8(%rbp),%rdx
000000000001cb97	cmpq	(%rbx,%rdx),%rcx
000000000001cb9b	jae	0x0001caa9
000000000001cba1	movq	%rcx,(%rbx,%r14)
000000000001cba5	movq	(%rbx,%rdx),%r8
000000000001cba9	subq	%rcx,%r8
000000000001cbac	cmpq	$0x20,%r8
000000000001cbb0	movl	$0x00000020,%eax
000000000001cbb5	cmovaq	%rax,%r8
000000000001cbb9	movq	0xfffffdb0(%rbp),%rax
000000000001cbc0	movq	%r8,(%rbx,%rax)
000000000001cbc4	movq	0xfffffda8(%rbp),%rax
000000000001cbcb	movq	(%rbx,%rax),%rdi
000000000001cbcf	movq	0x00089c9a(%rip),%rsi
000000000001cbd6	movq	%r12,%rdx
000000000001cbd9	call	*0x000674f9(%rip)
000000000001cbdf	movq	0xfffffda0(%rbp),%rsi
000000000001cbe6	movw	(%r12),%eax
000000000001cbeb	movq	0xfffffdc0(%rbp),%rcx
000000000001cbf2	movw	%ax,(%rbx,%rcx)
000000000001cbf6	movq	$0x00000001,(%rbx,%rsi)
000000000001cbfe	movq	%r15,%rax
000000000001cc01	jmp	0x0001cac7
000000000001cc06	movq	0x00088083(%rip),%rsi
000000000001cc0d	movq	0x0008b824(%rip),%rdi
000000000001cc14	call	*0x000674be(%rip)
000000000001cc1a	movq	%rax,0xfffffda8(%rbp)
000000000001cc21	testq	%rbx,%rbx
000000000001cc24	jne	0x0001cc4d
000000000001cc26	movq	0x0008bd53(%rip),%rdi
000000000001cc2d	leaq	0x0008b6ac(%rip),%rsi
000000000001cc34	call	*0x0008b6a6(%rip)
000000000001cc3a	movq	0x00087e2f(%rip),%rsi
000000000001cc41	movq	%rax,%rdi
000000000001cc44	call	*0x0006748e(%rip)
000000000001cc4a	movq	%rax,%rbx
000000000001cc4d	movw	$0x0022,0xfffffdd0(%rbp)
000000000001cc56	movq	0x0009224b(%rip),%rax
000000000001cc5d	movq	0xfffffd98(%rbp),%rcx
000000000001cc64	movq	(%rcx,%rax),%rdi
000000000001cc68	movq	0x00067401(%rip),%rax
000000000001cc6f	movq	(%rax),%rdx
000000000001cc72	movq	%rbx,%rsi
000000000001cc75	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001cc7a	movq	%rbx,%r9
000000000001cc7d	movq	0x000673fc(%rip),%rax
000000000001cc84	movq	(%rax),%rcx
000000000001cc87	movq	$0x00000000,(%r9,%rcx)
000000000001cc8f	movq	0x000673e2(%rip),%rax
000000000001cc96	movq	(%rax),%rax
000000000001cc99	movq	0xfffffd90(%rbp),%rdx
000000000001cca0	movq	%rdx,(%r9,%rax)
000000000001cca4	movq	(%r9,%rax),%rax
000000000001cca8	movq	(%r9,%rcx),%rcx
000000000001ccac	cmpq	%rax,%rcx
000000000001ccaf	jae	0x0001cd29
000000000001ccb1	subq	%rcx,%rax
000000000001ccb4	cmpq	$0x20,%rax
000000000001ccb8	movl	$0x00000020,%r8d
000000000001ccbe	cmovbeq	%rax,%r8
000000000001ccc2	movq	0x0006738f(%rip),%rax
000000000001ccc9	movq	(%rax),%rax
000000000001cccc	movq	%r8,(%r9,%rax)
000000000001ccd0	movq	0x00067379(%rip),%r14
000000000001ccd7	movq	(%r14),%rdx
000000000001ccda	addq	%r9,%rdx
000000000001ccdd	movq	0x0006738c(%rip),%rax
000000000001cce4	movq	(%rax),%rax
000000000001cce7	movq	(%r9,%rax),%rdi
000000000001cceb	movq	0x00089b7e(%rip),%rsi
000000000001ccf2	movq	%r9,%rbx
000000000001ccf5	call	*0x000673dd(%rip)
000000000001ccfb	movq	%rbx,%r9
000000000001ccfe	movq	0x0006735b(%rip),%rax
000000000001cd05	movq	0x0006735c(%rip),%rcx
000000000001cd0c	movq	(%r14),%rdx
000000000001cd0f	movw	(%r9,%rdx),%edx
000000000001cd14	movq	(%rcx),%rcx
000000000001cd17	movw	%edx,(%r9,%rcx)
000000000001cd1c	movq	(%rax),%rax
000000000001cd1f	movq	$0x00000001,(%r9,%rax)
000000000001cd27	jmp	0x0001cd5e
000000000001cd29	movq	0x00067328(%rip),%rax
000000000001cd30	movq	(%rax),%rax
000000000001cd33	movq	$0x00000000,(%r9,%rax)
000000000001cd3b	movq	0x0006731e(%rip),%rax
000000000001cd42	movq	(%rax),%rax
000000000001cd45	movq	$0x00000001,(%r9,%rax)
000000000001cd4d	movq	0x00067314(%rip),%rax
000000000001cd54	movq	(%rax),%rax
000000000001cd57	movw	$0xffff,(%r9,%rax)
000000000001cd5e	movq	0x00067303(%rip),%rax
000000000001cd65	movq	(%rax),%rax
000000000001cd68	movq	%rax,0xfffffdc0(%rbp)
000000000001cd6f	movw	(%r9,%rax),%r15d
000000000001cd74	movl	$0x00000001,%eax
000000000001cd79	cmpw	$0xff,%r15d
000000000001cd7e	je	0x0001d0c4
000000000001cd84	movq	0x000672e5(%rip),%rax
000000000001cd8b	xorl	%edx,%edx
000000000001cd8d	movl	0xfffffdcc(%rbp),%ecx
000000000001cd93	testb	%cl,%cl
000000000001cd95	movq	0x000672b4(%rip),%rcx
000000000001cd9c	movw	$0x006e,%si
000000000001cda0	cmovew	%dx,%si
000000000001cda4	movw	%si,0xfffffdb8(%rbp)
000000000001cdab	movw	$0x0074,%si
000000000001cdaf	cmovew	%dx,%si
000000000001cdb3	movw	%si,0xfffffda0(%rbp)
000000000001cdba	movl	0xfffffd88(%rbp),%edx
000000000001cdc0	testb	%dl,%dl
000000000001cdc2	movq	(%rax),%rax
000000000001cdc5	movq	%rax,0xfffffd98(%rbp)
000000000001cdcc	movq	0x0006728d(%rip),%rax
000000000001cdd3	movq	0x000672a6(%rip),%rdx
000000000001cdda	movq	0x00067297(%rip),%rsi
000000000001cde1	movl	$0x000000ff,%edi
000000000001cde6	movl	$0x0000ffff,%ebx
000000000001cdeb	cmovnel	%edi,%ebx
000000000001cdee	movl	%ebx,0xfffffd90(%rbp)
000000000001cdf4	movq	(%rcx),%rcx
000000000001cdf7	addq	%r9,%rcx
000000000001cdfa	movq	%rcx,0xfffffdb0(%rbp)
000000000001ce01	movq	(%rsi),%rcx
000000000001ce04	movq	%rcx,0xfffffd88(%rbp)
000000000001ce0b	movq	(%rdx),%rcx
000000000001ce0e	movq	%rcx,0xfffffd80(%rbp)
000000000001ce15	movq	0x0006723c(%rip),%rcx
000000000001ce1c	movq	(%rcx),%rcx
000000000001ce1f	movq	%rcx,0xfffffd70(%rbp)
000000000001ce26	movq	(%rax),%rax
000000000001ce29	movq	%rax,0xfffffd78(%rbp)
000000000001ce30	movl	$0x00000001,%eax
000000000001ce35	jmp	0x0001ce65
000000000001ce37	leaq	0x01(%rcx),%rax
000000000001ce3b	movq	%rax,(%r9,%r15)
000000000001ce3f	movq	0xfffffdb0(%rbp),%rax
000000000001ce46	movw	(%rax,%rcx,2),%r15d
000000000001ce4b	movq	0xfffffdc0(%rbp),%rax
000000000001ce52	movw	%r15d,(%r9,%rax)
000000000001ce57	cmpw	$0xff,%r15d
000000000001ce5c	movq	%r12,%rax
000000000001ce5f	je	0x0001d0c4
000000000001ce65	cmpq	$0x000000fb,%eax
000000000001ce6b	movq	%r9,%r14
000000000001ce6e	jae	0x0001ce75
000000000001ce70	movq	%rax,%r13
000000000001ce73	jmp	0x0001ceb1
000000000001ce75	movq	0xfffffda8(%rbp),%r12
000000000001ce7c	movq	%r12,%rdi
000000000001ce7f	leaq	0x0008b46a(%rip),%rsi
000000000001ce86	movq	%rax,%rbx
000000000001ce89	call	*0x0008b461(%rip)
000000000001ce8f	xorl	%r13d,%r13d
000000000001ce92	movq	%r12,%rdi
000000000001ce95	movq	0x000898e4(%rip),%rsi
000000000001ce9c	movq	%rax,%rdx
000000000001ce9f	xorl	%ecx,%ecx
000000000001cea1	leaq	0xfffffdd0(%rbp),%r8
000000000001cea8	movq	%rbx,%r9
000000000001ceab	call	*0x00067227(%rip)
000000000001ceb1	movzwl	%di,%eax
000000000001ceb5	cmpl	$0x5b,%eax
000000000001ceb8	movq	%r14,%r9
000000000001cebb	movw	$0x005c,%si
000000000001cebf	jg	0x0001cfb1
000000000001cec5	cmpl	$0x21,%eax
000000000001cec8	jg	0x0001cee2
000000000001ceca	leal	0xf9(%rax),%ecx
000000000001cecd	cmpl	$0x06,%ecx
000000000001ced0	ja	0x0001cf2d
000000000001ced2	leaq	0x0000026f(%rip),%rdx
000000000001ced9	movslq	(%rdx,%rcx,4),%rax
000000000001cedd	addq	%rdx,%rax
000000000001cee0	jmp	*%rax
000000000001cee2	cmpl	$0x22,%eax
000000000001cee5	jne	0x0001cf2d
000000000001cee7	movw	$0x0022,%cx
000000000001ceeb	jmp	0x0001cfbe
000000000001cef0	movw	$0x0061,%cx
000000000001cef4	jmp	0x0001cfbe
000000000001cef9	movw	$0x0062,%cx
000000000001cefd	jmp	0x0001cfbe
000000000001cf02	movw	$0x0066,%cx
000000000001cf06	jmp	0x0001cfbe
000000000001cf0b	movl	0xfffffdcc(%rbp),%eax
000000000001cf11	testb	%al,%al
000000000001cf13	cmovnew	%esi,%r15d
000000000001cf18	movw	0xfffffda0(%rbp),%cx
000000000001cf1f	jmp	0x0001cfe3
000000000001cf24	movw	$0x0076,%cx
000000000001cf28	jmp	0x0001cfbe
000000000001cf2d	cmpw	$0x20,%r15d
000000000001cf32	jb	0x0001cf42
000000000001cf34	xorl	%ecx,%ecx
000000000001cf36	cmpl	0xfffffd90(%rbp),%eax
000000000001cf3c	jbe	0x0001cfe3
000000000001cf42	movw	$0x005c,0xfffffdd0(%rbp,%r13,2)
000000000001cf4d	movw	$0x0055,0xfffffdd2(%rbp,%r13,2)
000000000001cf58	movl	%eax,%ecx
000000000001cf5a	shrl	$0x0c,%ecx
000000000001cf5d	leaq	0x0004387d(%rip),%rdx
000000000001cf64	movsbl	(%rcx,%rdx),%ecx
000000000001cf68	movw	%ecx,0xfffffdd4(%rbp,%r13,2)
000000000001cf71	movl	%eax,%ecx
000000000001cf73	shrl	$0x08,%ecx
000000000001cf76	andl	$0x0f,%ecx
000000000001cf79	movsbl	(%rcx,%rdx),%ecx
000000000001cf7d	movw	%ecx,0xfffffdd6(%rbp,%r13,2)
000000000001cf86	movl	%eax,%ecx
000000000001cf88	shrl	$0x04,%ecx
000000000001cf8b	andl	$0x0f,%ecx
000000000001cf8e	movsbl	(%rcx,%rdx),%ecx
000000000001cf92	movw	%ecx,0xfffffdd8(%rbp,%r13,2)
000000000001cf9b	andl	$0x0f,%eax
000000000001cf9e	movsbl	(%rax,%rdx),%eax
000000000001cfa2	movw	%eax,0xfffffdda(%rbp,%r13,2)
000000000001cfab	addq	$0x06,%r13
000000000001cfaf	jmp	0x0001d007
000000000001cfb1	movw	$0x005c,%cx
000000000001cfb5	cmpl	$0x5c,%eax
000000000001cfb8	jne	0x0001cf2d
000000000001cfbe	movw	$0x005c,0xfffffdd0(%rbp,%r13,2)
000000000001cfc9	leaq	0x01(%r13),%rax
000000000001cfcd	jmp	0x0001cffb
000000000001cfcf	movl	0xfffffdcc(%rbp),%eax
000000000001cfd5	testb	%al,%al
000000000001cfd7	cmovnew	%esi,%r15d
000000000001cfdc	movw	0xfffffdb8(%rbp),%cx
000000000001cfe3	testw	%r15d,%r15d
000000000001cfe7	je	0x0001d007
000000000001cfe9	movw	%r15d,0xfffffdd0(%rbp,%r13,2)
000000000001cff2	leaq	0x01(%r13),%rax
000000000001cff6	testw	%cx,%cx
000000000001cff9	je	0x0001d00a
000000000001cffb	movw	%cx,0xfffffdd0(%rbp,%rax,2)
000000000001d003	addq	$0x02,%r13
000000000001d007	movq	%r13,%rax
000000000001d00a	movq	%rax,%r12
000000000001d00d	movq	0xfffffd70(%rbp),%rdi
000000000001d014	movq	(%r9,%rdi),%rax
000000000001d018	movq	0xfffffd78(%rbp),%r15
000000000001d01f	movq	(%r9,%r15),%rcx
000000000001d023	cmpq	%rax,%rcx
000000000001d026	movq	0xfffffd88(%rbp),%rdx
000000000001d02d	movq	0xfffffd80(%rbp),%rsi
000000000001d034	jb	0x0001ce37
000000000001d03a	movq	(%r9,%rsi),%rcx
000000000001d03e	addq	%rax,%rcx
000000000001d041	cmpq	(%r9,%rdx),%rcx
000000000001d045	jae	0x0001d0ac
000000000001d047	movq	%rcx,(%r9,%rsi)
000000000001d04b	movq	(%r9,%rdx),%r8
000000000001d04f	subq	%rcx,%r8
000000000001d052	cmpq	$0x20,%r8
000000000001d056	movl	$0x00000020,%eax
000000000001d05b	cmovaq	%rax,%r8
000000000001d05f	movq	%r8,(%r9,%rdi)
000000000001d063	movq	0xfffffd98(%rbp),%rax
000000000001d06a	movq	(%r9,%rax),%rdi
000000000001d06e	movq	0x000897fb(%rip),%rsi
000000000001d075	movq	0xfffffdb0(%rbp),%rbx
000000000001d07c	movq	%rbx,%rdx
000000000001d07f	movq	%r9,%r14
000000000001d082	call	*0x00067050(%rip)
000000000001d088	movq	%r14,%r9
000000000001d08b	movw	(%rbx),%ax
000000000001d08e	movq	0xfffffdc0(%rbp),%rcx
000000000001d095	movw	%eax,(%r9,%rcx)
000000000001d09a	movq	$0x00000001,(%r9,%r15)
000000000001d0a2	movzwl	(%rcx,%rcx),%r15d
000000000001d0a7	jmp	0x0001ce57
000000000001d0ac	incq	%rax
000000000001d0af	movq	%rax,(%r9,%r15)
000000000001d0b3	movq	0xfffffdc0(%rbp),%rax
000000000001d0ba	movw	$0xffff,(%r9,%rax)
000000000001d0c1	movq	%r12,%rax
000000000001d0c4	movw	$0x0022,0xfffffdd0(%rbp,%rax,2)
000000000001d0ce	leaq	0x0008b21b(%rip),%rsi
000000000001d0d5	movq	0xfffffda8(%rbp),%rbx
000000000001d0dc	movq	%rbx,%rdi
000000000001d0df	movq	%rax,%r14
000000000001d0e2	call	*0x0008b208(%rip)
000000000001d0e8	movq	0x00089691(%rip),%rsi
000000000001d0ef	incq	%r14
000000000001d0f2	leaq	0xfffffdd0(%rbp),%r8
000000000001d0f9	movq	%rbx,%rdi
000000000001d0fc	movq	%rax,%rdx
000000000001d0ff	xorl	%ecx,%ecx
000000000001d101	movq	%r14,%r9
000000000001d104	call	*0x00066fce(%rip)
000000000001d10a	jmp	0x0001d11e
000000000001d10c	movq	0x00091d95(%rip),%rax
000000000001d113	movq	0xfffffd98(%rbp),%rcx
000000000001d11a	movq	(%rcx,%rax),%rbx
000000000001d11e	movq	0x00066f7b(%rip),%rax
000000000001d125	movq	(%rax),%rax
000000000001d128	cmpq	0xd0(%rbp),%rax
000000000001d12c	jne	0x0001d143
000000000001d12e	movq	%rbx,%rax
000000000001d131	addq	$0x00000278,%rsp
000000000001d138	popq	%rbx
000000000001d139	popq	%r12
000000000001d13b	popq	%r13
000000000001d13d	popq	%r14
000000000001d13f	popq	%r15
000000000001d141	popq	%rbp
000000000001d142	ret
000000000001d143	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
000000000001d148	testb	$0xfd,%al
000000000001d14a	.byte 0xff, 0xff #bad opcode
000000000001d14c	movb	$0xfd,%cl
000000000001d14e	.byte 0xff, 0xff #bad opcode
000000000001d150	ret
000000000001d151	std
000000000001d152	.byte 0xff, 0xff #bad opcode
000000000001d154	xchgl	%esi,%edi
000000000001d156	.byte 0xff, 0xff #bad opcode
000000000001d158	fdivr	%st,%st(5)
000000000001d15a	.byte 0xff, 0xff #bad opcode
000000000001d15c	movl	$0x87fffffd,%edx
000000000001d161	.byte 0xfe, 0xff #bad opcode
000000000001d163	call	*0xe5894855(%rax)
000000000001d169	pushq	%r15
000000000001d16b	pushq	%r14
000000000001d16d	pushq	%r13
000000000001d16f	pushq	%r12
000000000001d171	pushq	%rbx
000000000001d172	subq	$0x00000188,%rsp
000000000001d179	movq	%rdx,0xfffffe98(%rbp)
000000000001d180	movq	%rdi,%r15
000000000001d183	movq	%r15,0xfffffed0(%rbp)
000000000001d18a	movq	0x00066f0f(%rip),%rax
000000000001d191	movq	(%rax),%rax
000000000001d194	movq	%rax,0xd0(%rbp)
000000000001d198	movq	0x00087949(%rip),%rsi
000000000001d19f	movq	0x00066f32(%rip),%r14
000000000001d1a6	movq	%rdx,%rdi
000000000001d1a9	call	*%r14
000000000001d1ac	movq	%rax,0xfffffe90(%rbp)
000000000001d1b3	leaq	0x0008b156(%rip),%rsi
000000000001d1ba	movq	%rax,%rdi
000000000001d1bd	call	*0x0008b14d(%rip)
000000000001d1c3	movq	%rax,%rbx
000000000001d1c6	movq	%rbx,0xfffffe88(%rbp)
000000000001d1cd	leaq	0x00091934(%rip),%rax
000000000001d1d4	movq	(%rax),%rax
000000000001d1d7	movq	(%r15,%rax),%rdi
000000000001d1db	movq	0x000895ce(%rip),%rsi
000000000001d1e2	call	*%r14
000000000001d1e5	testq	%rbx,%rbx
000000000001d1e8	je	0x0001df4e
000000000001d1ee	xorl	%ecx,%ecx
000000000001d1f0	leaq	0x00091911(%rip),%rax
000000000001d1f7	movq	(%rax),%rax
000000000001d1fa	movq	%rax,0xfffffec8(%rbp)
000000000001d201	movq	0x00087900(%rip),%r14
000000000001d208	movq	0x000878c9(%rip),%r15
000000000001d20f	leaq	0x0008b14a(%rip),%r12
000000000001d216	movq	%rcx,0xfffffea8(%rbp)
000000000001d21d	movq	0xfffffe90(%rbp),%rdi
000000000001d224	leaq	0x0008b0f5(%rip),%rsi
000000000001d22b	movq	%rcx,%rdx
000000000001d22e	call	*0x0008b0ec(%rip)
000000000001d234	movq	%rax,%rbx
000000000001d237	movq	%rbx,%rdi
000000000001d23a	movq	0x00088f9f(%rip),%rsi
000000000001d241	call	*0x00066e91(%rip)
000000000001d247	movq	%rax,%rdi
000000000001d24a	movq	%r12,%rsi
000000000001d24d	leaq	0x00094a04(%rip),%rdx
000000000001d254	call	*0x0008b106(%rip)
000000000001d25a	testb	%al,%al
000000000001d25c	je	0x0001de1f
000000000001d262	movq	%rbx,%rdi
000000000001d265	movq	0x00087874(%rip),%rsi
000000000001d26c	movq	0x00066e65(%rip),%rbx
000000000001d273	call	*%rbx
000000000001d275	movq	%rax,%r12
000000000001d278	movq	%r12,%rdi
000000000001d27b	movq	%r15,%rsi
000000000001d27e	leaq	0x000949f3(%rip),%rdx
000000000001d285	call	*%rbx
000000000001d287	movq	%rax,%rdi
000000000001d28a	movq	%r14,%rsi
000000000001d28d	call	*%rbx
000000000001d28f	movq	%rax,%rbx
000000000001d292	testq	%rbx,%rbx
000000000001d295	je	0x0001df22
000000000001d29b	movq	%r12,%r13
000000000001d29e	movq	%rbx,%rdi
000000000001d2a1	leaq	0x0008b0b8(%rip),%r12
000000000001d2a8	movq	%r12,%rsi
000000000001d2ab	leaq	0x000962a6(%rip),%rdx
000000000001d2b2	call	*0x0008b0a8(%rip)
000000000001d2b8	testb	%al,%al
000000000001d2ba	movq	%rbx,%r14
000000000001d2bd	je	0x0001d2d6
000000000001d2bf	movq	0xfffffed0(%rbp),%rax
000000000001d2c6	movq	0x00091bd3(%rip),%rcx
000000000001d2cd	movb	$0x01,(%rax,%rcx)
000000000001d2d1	jmp	0x0001df22
000000000001d2d6	movq	%r14,%rdi
000000000001d2d9	movq	%r12,%rsi
000000000001d2dc	leaq	0x00096295(%rip),%rdx
000000000001d2e3	call	*0x0008b077(%rip)
000000000001d2e9	testb	%al,%al
000000000001d2eb	movq	0x00087816(%rip),%rbx
000000000001d2f2	movq	%rbx,%r15
000000000001d2f5	movq	0x000877dc(%rip),%rbx
000000000001d2fc	je	0x0001d348
000000000001d2fe	movq	%r13,%rdi
000000000001d301	movq	%rbx,%rsi
000000000001d304	leaq	0x00092a4d(%rip),%rdx
000000000001d30b	call	*0x00066dc7(%rip)
000000000001d311	testq	%rax,%rax
000000000001d314	je	0x0001d348
000000000001d316	movq	%rax,%rdi
000000000001d319	movq	%r15,%rsi
000000000001d31c	movq	0x00066db5(%rip),%rbx
000000000001d323	call	*%rbx
000000000001d325	movq	%rax,%rdi
000000000001d328	movq	0x00087fb1(%rip),%rsi
000000000001d32f	call	*%rbx
000000000001d331	movq	0xfffffed0(%rbp),%rcx
000000000001d338	movq	0x00091b51(%rip),%rdx
000000000001d33f	movq	%rax,(%rcx,%rdx)
000000000001d343	jmp	0x0001df22
000000000001d348	movq	%r14,%rdi
000000000001d34b	movq	%r12,%rsi
000000000001d34e	leaq	0x00096243(%rip),%rdx
000000000001d355	call	*0x0008b005(%rip)
000000000001d35b	testb	%al,%al
000000000001d35d	je	0x0001d39e
000000000001d35f	movq	0xfffffed0(%rbp),%rax
000000000001d366	movq	0xfffffec8(%rbp),%rcx
000000000001d36d	movq	(%rax,%rcx),%rdi
000000000001d371	movq	0x00087740(%rip),%rsi
000000000001d378	movq	0x00066d59(%rip),%rbx
000000000001d37f	call	*%rbx
000000000001d381	movq	%rax,%rdi
000000000001d384	movq	0x00087a65(%rip),%rsi
000000000001d38b	call	*%rbx
000000000001d38d	movq	%rax,%rdi
000000000001d390	movq	0x00089091(%rip),%rsi
000000000001d397	call	*%rbx
000000000001d399	jmp	0x0001df22
000000000001d39e	movq	%r14,%rdi
000000000001d3a1	movq	%r12,%rsi
000000000001d3a4	leaq	0x0009620d(%rip),%rdx
000000000001d3ab	call	*0x0008afaf(%rip)
000000000001d3b1	testb	%al,%al
000000000001d3b3	movq	%r13,%r12
000000000001d3b6	je	0x0001d402
000000000001d3b8	movq	%r12,%rdi
000000000001d3bb	movq	%rbx,%rsi
000000000001d3be	leaq	0x00093893(%rip),%rdx
000000000001d3c5	call	*0x00066d0d(%rip)
000000000001d3cb	testq	%rax,%rax
000000000001d3ce	je	0x0001d402
000000000001d3d0	movq	%rax,%rdi
000000000001d3d3	movq	%r15,%rsi
000000000001d3d6	movq	0x00066cfb(%rip),%rbx
000000000001d3dd	call	*%rbx
000000000001d3df	movq	%rax,%rdi
000000000001d3e2	movq	0x00087ef7(%rip),%rsi
000000000001d3e9	call	*%rbx
000000000001d3eb	movq	0xfffffed0(%rbp),%rcx
000000000001d3f2	movq	0x00091a9f(%rip),%rdx
000000000001d3f9	movq	%rax,(%rcx,%rdx)
000000000001d3fd	jmp	0x0001df22
000000000001d402	movq	%r14,%rdi
000000000001d405	movq	0x00087edc(%rip),%rsi
000000000001d40c	leaq	0x000961c5(%rip),%rdx
000000000001d413	call	*0x00066cbf(%rip)
000000000001d419	cmpb	$0x01,%al
000000000001d41b	movq	%r14,0xfffffed8(%rbp)
000000000001d422	jne	0x0001df22
000000000001d428	movq	%r12,%rdi
000000000001d42b	movq	%r12,%r15
000000000001d42e	movq	0x000876a3(%rip),%r12
000000000001d435	movq	%r12,%rsi
000000000001d438	leaq	0x00092879(%rip),%rdx
000000000001d43f	movq	0x00066c92(%rip),%r13
000000000001d446	call	*%r13
000000000001d449	movq	%rax,%rdi
000000000001d44c	movq	0x0008768d(%rip),%rsi
000000000001d453	call	*%r13
000000000001d456	movq	%rax,%r14
000000000001d459	movq	%r14,%rdi
000000000001d45c	movq	%r12,%rsi
000000000001d45f	leaq	0x00092b92(%rip),%rdx
000000000001d466	call	*%r13
000000000001d469	movq	%rax,%rdi
000000000001d46c	movq	0x00087695(%rip),%rbx
000000000001d473	movq	%rbx,%rsi
000000000001d476	call	*%r13
000000000001d479	movq	%rax,0xfffffef0(%rbp)
000000000001d480	movq	%r14,%rdi
000000000001d483	movq	%r12,%rsi
000000000001d486	leaq	0x00092ccb(%rip),%rdx
000000000001d48d	call	*%r13
000000000001d490	movq	%rax,%rdi
000000000001d493	movq	%rbx,%rsi
000000000001d496	call	*%r13
000000000001d499	movq	%rax,0xfffffea0(%rbp)
000000000001d4a0	movq	%r14,%rdi
000000000001d4a3	movq	%r12,%rsi
000000000001d4a6	leaq	0x00092d4b(%rip),%rdx
000000000001d4ad	call	*%r13
000000000001d4b0	movq	%rax,%rdi
000000000001d4b3	movq	%rbx,%rsi
000000000001d4b6	call	*%r13
000000000001d4b9	movq	%rax,0xfffffef8(%rbp)
000000000001d4c0	movq	0xfffffed0(%rbp),%rax
000000000001d4c7	movq	0xfffffec8(%rbp),%rcx
000000000001d4ce	movq	(%rax,%rcx),%rdi
000000000001d4d2	movq	0x000875df(%rip),%rsi
000000000001d4d9	call	*%r13
000000000001d4dc	movq	%rax,%rdi
000000000001d4df	movq	0x00087af2(%rip),%rsi
000000000001d4e6	call	*%r13
000000000001d4e9	movq	%rax,0xfffffee0(%rbp)
000000000001d4f0	movq	0xfffffed8(%rbp),%rdi
000000000001d4f7	leaq	0x0008ae62(%rip),%rsi
000000000001d4fe	leaq	0x000960f3(%rip),%rdx
000000000001d505	call	*0x0008ae55(%rip)
000000000001d50b	cmpb	$0x01,%al
000000000001d50d	jne	0x0001d525
000000000001d50f	movq	%r14,0xfffffeb0(%rbp)
000000000001d516	movq	%r15,%rdi
000000000001d519	movq	%r12,%rsi
000000000001d51c	leaq	0x00092bf5(%rip),%rdx
000000000001d523	jmp	0x0001d539
000000000001d525	movq	%r14,%rdi
000000000001d528	movq	%r14,0xfffffeb0(%rbp)
000000000001d52f	movq	%r12,%rsi
000000000001d532	leaq	0x00092a7f(%rip),%rdx
000000000001d539	call	*%r13
000000000001d53c	movq	%rax,%rdi
000000000001d53f	movq	%rbx,%rsi
000000000001d542	call	*%r13
000000000001d545	movq	%r13,%r12
000000000001d548	movq	%rax,%rdi
000000000001d54b	movq	0x00087d8e(%rip),%rsi
000000000001d552	call	*0x00066b80(%rip)
000000000001d558	movq	%rax,%r13
000000000001d55b	xorl	%r14d,%r14d
000000000001d55e	testq	%r13,%r13
000000000001d561	leaq	0x0008adf8(%rip),%rbx
000000000001d568	jle	0x0001d584
000000000001d56a	movq	0xfffffee0(%rbp),%rdi
000000000001d571	movq	0x00088eb8(%rip),%rsi
000000000001d578	movq	%r13,%rdx
000000000001d57b	call	*0x00066b57(%rip)
000000000001d581	movq	%rax,%r14
000000000001d584	movq	%r13,0xfffffec0(%rbp)
000000000001d58b	movq	0xfffffef8(%rbp),%rdi
000000000001d592	movq	0x00087d47(%rip),%rsi
000000000001d599	call	*0x00066b39(%rip)
000000000001d59f	movq	%rax,0xfffffef8(%rbp)
000000000001d5a6	xorb	%al,%al
000000000001d5a8	movq	0xfffffef0(%rbp),%rdi
000000000001d5af	testq	%rdi,%rdi
000000000001d5b2	je	0x0001d5c9
000000000001d5b4	movq	%rbx,%rsi
000000000001d5b7	leaq	0x0009471a(%rip),%rdx
000000000001d5be	call	*0x0008ad9c(%rip)
000000000001d5c4	cmpb	$0x01,%al
000000000001d5c6	sete	%al
000000000001d5c9	movb	%al,0xfffffeb8(%rbp)
000000000001d5cf	movq	0xfffffed0(%rbp),%rax
000000000001d5d6	movq	0xfffffec8(%rbp),%rcx
000000000001d5dd	movq	(%rax,%rcx),%rdi
000000000001d5e1	movq	0x000874d0(%rip),%rsi
000000000001d5e8	call	*%r12
000000000001d5eb	movq	%rax,%rdi
000000000001d5ee	movq	0x000876f3(%rip),%rsi
000000000001d5f5	call	*%r12
000000000001d5f8	movq	%rax,%rdi
000000000001d5fb	movq	0x000876ee(%rip),%rsi
000000000001d602	call	*%r12
000000000001d605	movq	%rax,0xfffffee8(%rbp)
000000000001d60c	movq	%rax,%rdi
000000000001d60f	movq	0x00088dd2(%rip),%rsi
000000000001d616	call	*%r12
000000000001d619	movq	%rax,0xfffffef0(%rbp)
000000000001d620	testq	%r14,%r14
000000000001d623	je	0x0001d96c
000000000001d629	movq	0x0008b358(%rip),%rdi
000000000001d630	leaq	0x0008acf9(%rip),%rsi
000000000001d637	call	*0x0008acf3(%rip)
000000000001d63d	movq	%r14,%rdi
000000000001d640	leaq	0x0008acf9(%rip),%rsi
000000000001d647	movq	%rax,%rdx
000000000001d64a	call	*0x0008acf0(%rip)
000000000001d650	movb	%al,%r15b
000000000001d653	movq	0xfffffed8(%rbp),%r13
000000000001d65a	movq	%r13,%rdi
000000000001d65d	movq	%rbx,%rsi
000000000001d660	leaq	0x00095f91(%rip),%rdx
000000000001d667	call	*0x0008acf3(%rip)
000000000001d66d	testb	%al,%al
000000000001d66f	je	0x0001d84c
000000000001d675	movq	%r14,%rdi
000000000001d678	movq	0x00089139(%rip),%rbx
000000000001d67f	movq	%rbx,%rsi
000000000001d682	call	*0x00066a50(%rip)
000000000001d688	movq	%rax,%rdi
000000000001d68b	leaq	0x0008ac7e(%rip),%rsi
000000000001d692	call	*0x0008ac78(%rip)
000000000001d698	cmpq	$0x02,%rax
000000000001d69c	jb	0x0001d7e0
000000000001d6a2	movq	%r14,%rdi
000000000001d6a5	movq	%r14,%r15
000000000001d6a8	movq	%rbx,%rsi
000000000001d6ab	call	*%r12
000000000001d6ae	movq	%rax,%rdi
000000000001d6b1	movq	0x000873c0(%rip),%rsi
000000000001d6b8	call	*%r12
000000000001d6bb	movq	%rax,0xfffffef8(%rbp)
000000000001d6c2	xorps	%xmm0,%xmm0
000000000001d6c5	movaps	%xmm0,0xc0(%rbp)
000000000001d6c9	movaps	%xmm0,0xb0(%rbp)
000000000001d6cd	movaps	%xmm0,0xa0(%rbp)
000000000001d6d1	movaps	%xmm0,0x90(%rbp)
000000000001d6d5	movq	%rax,%rdi
000000000001d6d8	leaq	0x0008aca1(%rip),%rsi
000000000001d6df	leaq	0x90(%rbp),%rdx
000000000001d6e3	leaq	0xffffff10(%rbp),%rcx
000000000001d6ea	movl	$0x00000010,%r8d
000000000001d6f0	call	*0x0008ac8a(%rip)
000000000001d6f6	movq	%rax,0xfffffef0(%rbp)
000000000001d6fd	testq	%rax,%rax
000000000001d700	movq	0xfffffec0(%rbp),%r12
000000000001d707	je	0x0001df22
000000000001d70d	movq	0xa0(%rbp),%rax
000000000001d711	movq	(%rax),%rax
000000000001d714	movq	%rax,0xfffffed8(%rbp)
000000000001d71b	xorl	%r14d,%r14d
000000000001d71e	movq	0xa0(%rbp),%rax
000000000001d722	movq	0xfffffed8(%rbp),%rcx
000000000001d729	cmpq	%rcx,(%rax)
000000000001d72c	je	0x0001d73a
000000000001d72e	movq	0xfffffef8(%rbp),%rdi
000000000001d735	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
000000000001d73a	movq	0x98(%rbp),%rax
000000000001d73e	movq	(%rax,%r14,8),%r13
000000000001d742	movq	0xfffffee8(%rbp),%rdi
000000000001d749	movq	0x00089070(%rip),%rsi
000000000001d750	movq	%r13,%rdx
000000000001d753	call	*0x0006697f(%rip)
000000000001d759	cmpq	%r12,%rax
000000000001d75c	jne	0x0001d796
000000000001d75e	movq	%r15,%rdi
000000000001d761	movq	0x00089060(%rip),%rsi
000000000001d768	movq	%r13,%rdx
000000000001d76b	movq	0x00066966(%rip),%rbx
000000000001d772	call	*%rbx
000000000001d774	movq	0xfffffee0(%rbp),%rdi
000000000001d77b	movq	0x00088d5e(%rip),%rsi
000000000001d782	movq	%r15,%rdx
000000000001d785	call	*%rbx
000000000001d787	movq	%rax,%rdi
000000000001d78a	movq	0x0008903f(%rip),%rsi
000000000001d791	movq	%r12,%rdx
000000000001d794	call	*%rbx
000000000001d796	incq	%r14
000000000001d799	cmpq	0xfffffef0(%rbp),%r14
000000000001d7a0	jb	0x0001d71e
000000000001d7a6	movq	0xfffffef8(%rbp),%rdi
000000000001d7ad	leaq	0x0008abcc(%rip),%rsi
000000000001d7b4	leaq	0x90(%rbp),%rdx
000000000001d7b8	leaq	0xffffff10(%rbp),%rcx
000000000001d7bf	movl	$0x00000010,%r8d
000000000001d7c5	call	*0x0008abb5(%rip)
000000000001d7cb	movq	%rax,0xfffffef0(%rbp)
000000000001d7d2	testq	%rax,%rax
000000000001d7d5	jne	0x0001d71b
000000000001d7db	jmp	0x0001df22
000000000001d7e0	movq	0xfffffee0(%rbp),%rbx
000000000001d7e7	movq	%rbx,%rdi
000000000001d7ea	movq	0x00088cef(%rip),%rsi
000000000001d7f1	movq	%r14,%rdx
000000000001d7f4	call	*%r12
000000000001d7f7	movq	%rbx,%rdi
000000000001d7fa	movq	0x00088fd7(%rip),%rsi
000000000001d801	movq	%rax,%rdx
000000000001d804	call	*%r12
000000000001d807	movq	0xfffffed0(%rbp),%rax
000000000001d80e	movq	0xfffffec8(%rbp),%rcx
000000000001d815	movq	(%rax,%rcx),%rdi
000000000001d819	movq	0x00087298(%rip),%rsi
000000000001d820	call	*%r12
000000000001d823	movq	%rax,%rdi
000000000001d826	movq	0x00088fb3(%rip),%rsi
000000000001d82d	movq	%r14,%rdx
000000000001d830	call	*%r12
000000000001d833	movq	0xfffffef0(%rbp),%rdi
000000000001d83a	movq	0x00088c07(%rip),%rsi
000000000001d841	movq	%r14,%rdx
000000000001d844	call	*%r12
000000000001d847	jmp	0x0001df22
000000000001d84c	movq	%r13,%rdi
000000000001d84f	movq	%rbx,%rsi
000000000001d852	leaq	0x00095dbf(%rip),%rdx
000000000001d859	call	*0x0008ab01(%rip)
000000000001d85f	testb	%al,%al
000000000001d861	jne	0x0001d882
000000000001d863	movq	%r13,%rdi
000000000001d866	leaq	0x0008aaf3(%rip),%rsi
000000000001d86d	leaq	0x00094424(%rip),%rdx
000000000001d874	call	*0x0008aae6(%rip)
000000000001d87a	testb	%al,%al
000000000001d87c	je	0x0001df22
000000000001d882	movb	0xfffffeb8(%rbp),%r12b
000000000001d889	testb	%r12b,%r12b
000000000001d88c	sete	%al
000000000001d88f	movzbl	%al,%edx
000000000001d892	orl	$0x02,%edx
000000000001d895	movq	%r14,%rdi
000000000001d898	movq	0x00088b59(%rip),%rsi
000000000001d89f	movq	0x00066832(%rip),%rbx
000000000001d8a6	call	*%rbx
000000000001d8a8	movzbl	%ah,%edx
000000000001d8ac	movq	%r14,%rdi
000000000001d8af	movq	%r14,%r13
000000000001d8b2	movq	0x00088b47(%rip),%rsi
000000000001d8b9	call	*%rbx
000000000001d8bb	testb	%r15b,%r15b
000000000001d8be	je	0x0001df22
000000000001d8c4	movq	%r13,%rdi
000000000001d8c7	movq	0x0008878a(%rip),%rsi
000000000001d8ce	call	*0x00066804(%rip)
000000000001d8d4	movq	%rax,%r14
000000000001d8d7	cmpq	$0x00,0xfffffef8(%rbp)
000000000001d8df	jle	0x0001df22
000000000001d8e5	movq	%r14,%rdi
000000000001d8e8	movq	0x00088ef9(%rip),%rsi
000000000001d8ef	call	*0x000667e3(%rip)
000000000001d8f5	cmpq	0xfffffef8(%rbp),%rax
000000000001d8fc	je	0x0001df22
000000000001d902	movq	0x0008b087(%rip),%rdi
000000000001d909	leaq	0x0008a9d0(%rip),%rsi
000000000001d910	call	*0x0008a9ca(%rip)
000000000001d916	movq	%rax,%r15
000000000001d919	movq	%r14,%rdi
000000000001d91c	movq	0x00088ecd(%rip),%rsi
000000000001d923	movq	0x000667ae(%rip),%rbx
000000000001d92a	call	*%rbx
000000000001d92c	movq	%rax,%r12
000000000001d92f	movq	%r14,%rdi
000000000001d932	movq	0x00088ebf(%rip),%rsi
000000000001d939	call	*%rbx
000000000001d93b	movq	%r15,%rdi
000000000001d93e	movq	0x00088ebb(%rip),%rsi
000000000001d945	movq	%r12,%rdx
000000000001d948	movq	%rax,%rcx
000000000001d94b	movq	0xfffffef8(%rbp),%r8
000000000001d952	movl	$0x00000001,%r9d
000000000001d958	call	*%rbx
000000000001d95a	movq	%r13,%rdi
000000000001d95d	movq	0x00088ea4(%rip),%rsi
000000000001d964	movq	%rax,%rdx
000000000001d967	jmp	0x0001df20
000000000001d96c	movq	0xfffffed8(%rbp),%rdi
000000000001d973	movq	%rbx,%rsi
000000000001d976	leaq	0x0009431b(%rip),%rdx
000000000001d97d	call	*0x0008a9dd(%rip)
000000000001d983	cmpb	$0x01,%al
000000000001d985	movq	0xfffffea0(%rbp),%rbx
000000000001d98c	jne	0x0001df22
000000000001d992	movq	%r15,0xfffffee0(%rbp)
000000000001d999	testq	%rbx,%rbx
000000000001d99c	je	0x0001dabf
000000000001d9a2	movq	0x0008afe7(%rip),%rdi
000000000001d9a9	leaq	0x0008a930(%rip),%r13
000000000001d9b0	movq	%r13,%rsi
000000000001d9b3	call	*0x0008a927(%rip)
000000000001d9b9	movq	%rax,%r14
000000000001d9bc	movq	0x0008afd5(%rip),%rdi
000000000001d9c3	movq	0x00088e46(%rip),%rsi
000000000001d9ca	movq	%rbx,%rdx
000000000001d9cd	movq	0x00066704(%rip),%rbx
000000000001d9d4	call	*%rbx
000000000001d9d6	movq	%rax,%r15
000000000001d9d9	movq	0x0008ad10(%rip),%r12
000000000001d9e0	movq	0x0008afb9(%rip),%rdi
000000000001d9e7	movq	0x00088e2a(%rip),%rsi
000000000001d9ee	call	*%rbx
000000000001d9f0	movq	%r12,%rdi
000000000001d9f3	movq	0x00088e26(%rip),%rsi
000000000001d9fa	call	*%rbx
000000000001d9fc	movq	%r14,%rdi
000000000001d9ff	movq	0x00088dfa(%rip),%rsi
000000000001da06	movq	%r15,%rdx
000000000001da09	movq	%rax,%rcx
000000000001da0c	movq	0xfffffef8(%rbp),%r8
000000000001da13	movl	$0x00000001,%r9d
000000000001da19	call	*%rbx
000000000001da1b	movq	%rax,%r14
000000000001da1e	movq	0x0008af63(%rip),%rdi
000000000001da25	movq	%r13,%rsi
000000000001da28	call	*0x0008a8b2(%rip)
000000000001da2e	movq	%rax,%rdi
000000000001da31	movq	0x00088df0(%rip),%rsi
000000000001da38	movq	%r14,%rdx
000000000001da3b	call	*%rbx
000000000001da3d	movq	%rax,%r14
000000000001da40	movq	%r14,%rdi
000000000001da43	movq	0x000889ae(%rip),%rsi
000000000001da4a	movl	$0x00000002,%edx
000000000001da4f	call	*%rbx
000000000001da51	movzbl	0xfffffeb8(%rbp),%edx
000000000001da58	movq	%r14,%rdi
000000000001da5b	movq	0x0008899e(%rip),%rsi
000000000001da62	call	*%rbx
000000000001da64	movq	0xfffffee0(%rbp),%rdi
000000000001da6b	movq	0x00087066(%rip),%rsi
000000000001da72	leaq	0x0009223f(%rip),%rdx
000000000001da79	call	*%rbx
000000000001da7b	movq	0x0008af26(%rip),%rdi
000000000001da82	movq	0x00088da7(%rip),%rsi
000000000001da89	movq	%r14,%rdx
000000000001da8c	movq	%rax,%rcx
000000000001da8f	movq	0xfffffee8(%rbp),%r8
000000000001da96	call	*%rbx
000000000001da98	movq	0x0008abc1(%rip),%rdi
000000000001da9f	movq	0x00087a5a(%rip),%rsi
000000000001daa6	movq	%rax,%rdx
000000000001daa9	call	*%rbx
000000000001daab	movq	%r14,%rdi
000000000001daae	movq	0x00088d83(%rip),%rsi
000000000001dab5	movq	%rax,%rdx
000000000001dab8	call	*%rbx
000000000001daba	jmp	0x0001dd04
000000000001dabf	movq	0xfffffee0(%rbp),%rdi
000000000001dac6	movq	0x0008700b(%rip),%rbx
000000000001dacd	movq	%rbx,%r12
000000000001dad0	movq	%r12,%rsi
000000000001dad3	leaq	0x000921de(%rip),%r13
000000000001dada	movq	%r13,%rdx
000000000001dadd	movq	0x000665f4(%rip),%rbx
000000000001dae4	call	*%rbx
000000000001dae6	movq	%rax,%rdi
000000000001dae9	movq	0x00086ff0(%rip),%r15
000000000001daf0	movq	%r15,%rsi
000000000001daf3	call	*%rbx
000000000001daf5	movq	%rax,%rdi
000000000001daf8	movq	%r12,%rsi
000000000001dafb	leaq	0x000922d6(%rip),%rdx
000000000001db02	call	*%rbx
000000000001db04	movq	%rax,%rdi
000000000001db07	movq	0x00086ffa(%rip),%r14
000000000001db0e	movq	%r14,%rsi
000000000001db11	call	*%rbx
000000000001db13	movq	%rax,%rdi
000000000001db16	movq	0x000877bb(%rip),%rsi
000000000001db1d	leaq	0x00095b14(%rip),%rdx
000000000001db24	call	*%rbx
000000000001db26	movq	$0x7fffffffffffffff,%rcx
000000000001db30	cmpq	%rcx,%rax
000000000001db33	je	0x0001dbba
000000000001db39	movq	0xfffffee0(%rbp),%rdi
000000000001db40	movq	%r12,%rsi
000000000001db43	movq	%r13,%rdx
000000000001db46	call	*%rbx
000000000001db48	movq	%rax,%rdi
000000000001db4b	movq	%r15,%rsi
000000000001db4e	call	*%rbx
000000000001db50	movq	%rax,%rdi
000000000001db53	movq	%r12,%rsi
000000000001db56	leaq	0x0009415b(%rip),%rdx
000000000001db5d	call	*%rbx
000000000001db5f	movq	%rax,%rdi
000000000001db62	movq	%r14,%rsi
000000000001db65	call	*%rbx
000000000001db67	movq	%rax,%r14
000000000001db6a	movq	0x0008adb7(%rip),%rdi
000000000001db71	leaq	0x0008a768(%rip),%rsi
000000000001db78	call	*0x0008a762(%rip)
000000000001db7e	movq	%rax,%rdi
000000000001db81	movq	0x00088cb8(%rip),%rsi
000000000001db88	movq	%r14,%rdx
000000000001db8b	movq	%r14,%rcx
000000000001db8e	call	*%rbx
000000000001db90	movq	%rax,%r14
000000000001db93	movq	%r14,%rdi
000000000001db96	movq	0x0008885b(%rip),%rsi
000000000001db9d	movl	$0x00000002,%edx
000000000001dba2	call	*%rbx
000000000001dba4	movzbl	0xfffffeb8(%rbp),%edx
000000000001dbab	movq	%r14,%rdi
000000000001dbae	movq	0x0008884b(%rip),%rsi
000000000001dbb5	jmp	0x0001dd02
000000000001dbba	movq	0xfffffeb0(%rbp),%r13
000000000001dbc1	movq	%r13,%rdi
000000000001dbc4	movq	%r12,%rsi
000000000001dbc7	leaq	0x00095a8a(%rip),%rdx
000000000001dbce	call	*%rbx
000000000001dbd0	movq	%rax,%rdi
000000000001dbd3	movq	%r14,%rsi
000000000001dbd6	call	*%rbx
000000000001dbd8	movq	%rax,%r15
000000000001dbdb	testq	%r15,%r15
000000000001dbde	je	0x0001dc11
000000000001dbe0	movq	%r15,%rdi
000000000001dbe3	leaq	0x0008a706(%rip),%rbx
000000000001dbea	movq	%rbx,%rsi
000000000001dbed	call	*0x0008a6fd(%rip)
000000000001dbf3	leaq	0xfe(%rax),%rcx
000000000001dbf7	movq	%r15,%rdi
000000000001dbfa	movq	0x00086f57(%rip),%rsi
000000000001dc01	movl	$0x00000001,%edx
000000000001dc06	call	*0x000664cc(%rip)
000000000001dc0c	movq	%rax,%r15
000000000001dc0f	jmp	0x0001dc32
000000000001dc11	movq	%r13,%rdi
000000000001dc14	movq	%r12,%rsi
000000000001dc17	leaq	0x00095a5a(%rip),%rdx
000000000001dc1e	call	*%rbx
000000000001dc20	movq	%rax,%rdi
000000000001dc23	movq	%r14,%rsi
000000000001dc26	call	*%rbx
000000000001dc28	movq	%rax,%r15
000000000001dc2b	leaq	0x0008a6be(%rip),%rbx
000000000001dc32	movq	%r15,%rdi
000000000001dc35	movq	%rbx,%rsi
000000000001dc38	call	*0x0008a6b2(%rip)
000000000001dc3e	testq	%rax,%rax
000000000001dc41	je	0x0001df22
000000000001dc47	movq	%r15,%rdi
000000000001dc4a	movq	0x00088bf7(%rip),%rsi
000000000001dc51	leaq	0x00095a40(%rip),%rdx
000000000001dc58	movl	$0x00000004,%ecx
000000000001dc5d	call	*0x00066475(%rip)
000000000001dc63	testq	%rax,%rax
000000000001dc66	je	0x0001dc8f
000000000001dc68	movq	$0x7fffffffffffffff,%rcx
000000000001dc72	cmpq	%rcx,%rax
000000000001dc75	je	0x0001dc8f
000000000001dc77	movq	%r15,%rdi
000000000001dc7a	movq	0x00086ed7(%rip),%rsi
000000000001dc81	xorl	%edx,%edx
000000000001dc83	movq	%rax,%rcx
000000000001dc86	call	*0x0006644c(%rip)
000000000001dc8c	movq	%rax,%r15
000000000001dc8f	movq	0x00086e72(%rip),%rbx
000000000001dc96	movq	%rbx,%r14
000000000001dc99	movq	0x00086e38(%rip),%rsi
000000000001dca0	movq	0x00066431(%rip),%rbx
000000000001dca7	movq	%r13,%rdi
000000000001dcaa	leaq	0x00093787(%rip),%rdx
000000000001dcb1	call	*%rbx
000000000001dcb3	movq	%rax,%rdi
000000000001dcb6	movq	%r14,%rsi
000000000001dcb9	call	*%rbx
000000000001dcbb	movq	%rax,%rdi
000000000001dcbe	movq	0x0008823b(%rip),%rsi
000000000001dcc5	call	*%rbx
000000000001dcc7	movq	%rax,%r14
000000000001dcca	movq	0x0008acdf(%rip),%rdi
000000000001dcd1	leaq	0x0008a608(%rip),%rsi
000000000001dcd8	call	*0x0008a602(%rip)
000000000001dcde	movq	%rax,%rdi
000000000001dce1	movq	0x00088b68(%rip),%rsi
000000000001dce8	movq	%r15,%rdx
000000000001dceb	movq	%r14,%rcx
000000000001dcee	call	*%rbx
000000000001dcf0	movq	%rax,%r14
000000000001dcf3	movq	%r14,%rdi
000000000001dcf6	movq	0x000886fb(%rip),%rsi
000000000001dcfd	movl	$0x00000002,%edx
000000000001dd02	call	*%rbx
000000000001dd04	movq	0xfffffec0(%rbp),%rbx
000000000001dd0b	testq	%rbx,%rbx
000000000001dd0e	jle	0x0001df22
000000000001dd14	movq	0x0008ac0d(%rip),%rdi
000000000001dd1b	leaq	0x0008a60e(%rip),%rsi
000000000001dd22	call	*0x0008a608(%rip)
000000000001dd28	movq	%r14,%rdi
000000000001dd2b	leaq	0x0008a60e(%rip),%rsi
000000000001dd32	movq	%rax,%rdx
000000000001dd35	call	*0x0008a605(%rip)
000000000001dd3b	testb	%al,%al
000000000001dd3d	je	0x0001dd4f
000000000001dd3f	movq	0xfffffee8(%rbp),%rdi
000000000001dd46	movq	0x000886c3(%rip),%rsi
000000000001dd4d	jmp	0x0001dd5d
000000000001dd4f	movq	0xfffffee8(%rbp),%rdi
000000000001dd56	movq	0x000887a3(%rip),%rsi
000000000001dd5d	movq	%rbx,%rdx
000000000001dd60	movq	%r14,%rcx
000000000001dd63	call	*0x0006636f(%rip)
000000000001dd69	movq	0xfffffed0(%rbp),%r15
000000000001dd70	movq	0xfffffec8(%rbp),%r13
000000000001dd77	movq	(%r15,%r13),%rdi
000000000001dd7b	movq	0x00086d36(%rip),%r12
000000000001dd82	movq	%r12,%rsi
000000000001dd85	movq	0x0006634c(%rip),%rbx
000000000001dd8c	call	*%rbx
000000000001dd8e	movq	%rax,%rdi
000000000001dd91	movq	0x00088670(%rip),%rsi
000000000001dd98	movq	%r14,%rdx
000000000001dd9b	call	*%rbx
000000000001dd9d	movq	(%r15,%r13),%rdi
000000000001dda1	movq	%r12,%rsi
000000000001dda4	call	*%rbx
000000000001dda6	movq	%rax,%rdi
000000000001dda9	movq	0x00087228(%rip),%rsi
000000000001ddb0	call	*%rbx
000000000001ddb2	movq	%rax,%rdi
000000000001ddb5	movq	0x0008865c(%rip),%rsi
000000000001ddbc	movq	0xfffffec0(%rbp),%rdx
000000000001ddc3	movq	%r14,%rcx
000000000001ddc6	call	*%rbx
000000000001ddc8	movq	0x0008ab59(%rip),%rdi
000000000001ddcf	leaq	0x0008a55a(%rip),%rsi
000000000001ddd6	call	*0x0008a554(%rip)
000000000001dddc	movq	%r14,%rdi
000000000001dddf	leaq	0x0008a55a(%rip),%rsi
000000000001dde6	movq	%rax,%rdx
000000000001dde9	call	*0x0008a551(%rip)
000000000001ddef	testb	%al,%al
000000000001ddf1	je	0x0001de0f
000000000001ddf3	movq	0xfffffef0(%rbp),%rdi
000000000001ddfa	movq	0x00088a57(%rip),%rsi
000000000001de01	movq	%r14,%rdx
000000000001de04	call	*0x000662ce(%rip)
000000000001de0a	jmp	0x0001df22
000000000001de0f	movq	0xfffffef0(%rbp),%rdi
000000000001de16	movq	0x00088a43(%rip),%rsi
000000000001de1d	jmp	0x0001de01
000000000001de1f	movq	0xfffffed0(%rbp),%rdi
000000000001de26	movq	0x00088593(%rip),%rsi
000000000001de2d	movq	0x000662a4(%rip),%rbx
000000000001de34	call	*%rbx
000000000001de36	movq	%rax,%r15
000000000001de39	movq	%r15,%rdi
000000000001de3c	movq	0x000874a5(%rip),%rsi
000000000001de43	leaq	0x0009586e(%rip),%rdx
000000000001de4a	call	*%rbx
000000000001de4c	movb	%al,%r14b
000000000001de4f	testb	%r14b,%r14b
000000000001de52	jne	0x0001de73
000000000001de54	movq	%r15,%rdi
000000000001de57	movq	0x0008748a(%rip),%rsi
000000000001de5e	leaq	0x00095873(%rip),%rdx
000000000001de65	call	*0x0006626d(%rip)
000000000001de6b	testb	%al,%al
000000000001de6d	je	0x0001df22
000000000001de73	movq	0xfffffe98(%rbp),%rdi
000000000001de7a	movq	0x00086e1f(%rip),%rsi
000000000001de81	call	*0x00066251(%rip)
000000000001de87	leaq	0x00098e82(%rip),%rcx
000000000001de8e	movq	(%rcx),%rdx
000000000001de91	movq	%rax,%rdi
000000000001de94	leaq	0x0008a4c5(%rip),%rsi
000000000001de9b	call	*0x0008a4bf(%rip)
000000000001dea1	testb	%al,%al
000000000001dea3	je	0x0001df22
000000000001dea5	movq	0xfffffed0(%rbp),%rax
000000000001deac	movq	0x00090fed(%rip),%rcx
000000000001deb3	movb	$0x01,(%rax,%rcx)
000000000001deb7	testb	%r14b,%r14b
000000000001deba	je	0x0001df22
000000000001debc	movq	0xfffffed0(%rbp),%r15
000000000001dec3	movq	0xfffffec8(%rbp),%rax
000000000001deca	movq	(%r15,%rax),%rdi
000000000001dece	movq	0x00086be3(%rip),%rsi
000000000001ded5	movq	0x000661fc(%rip),%rbx
000000000001dedc	call	*%rbx
000000000001dede	movq	%rax,%rdi
000000000001dee1	movq	0x00086f08(%rip),%rsi
000000000001dee8	call	*%rbx
000000000001deea	movq	%rax,%r14
000000000001deed	movq	%r15,%rdi
000000000001def0	movq	0x00087851(%rip),%rsi
000000000001def7	call	*%rbx
000000000001def9	movq	%r14,%rdi
000000000001defc	movq	0x00087d3d(%rip),%rsi
000000000001df03	movq	%rax,%rdx
000000000001df06	call	*%rbx
000000000001df08	movq	%rax,%rdi
000000000001df0b	movq	0x00087d56(%rip),%rsi
000000000001df12	call	*%rbx
000000000001df14	movq	%rax,%rdi
000000000001df17	movq	0x0008894a(%rip),%rsi
000000000001df1e	xorl	%edx,%edx
000000000001df20	call	*%rbx
000000000001df22	movq	0xfffffea8(%rbp),%rcx
000000000001df29	incq	%rcx
000000000001df2c	cmpq	0xfffffe88(%rbp),%rcx
000000000001df33	movq	0x00086bce(%rip),%r14
000000000001df3a	movq	0x00086b97(%rip),%r15
000000000001df41	leaq	0x0008a418(%rip),%r12
000000000001df48	jne	0x0001d216
000000000001df4e	movq	0xfffffed0(%rbp),%rax
000000000001df55	movq	%rax,0xffffff00(%rbp)
000000000001df5c	movq	0x0008afa5(%rip),%rax
000000000001df63	movq	%rax,0xffffff08(%rbp)
000000000001df6a	movq	0x0008828f(%rip),%rsi
000000000001df71	leaq	0xffffff00(%rbp),%rdi
000000000001df78	movq	0xfffffe98(%rbp),%rdx
000000000001df7f	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000001df84	movq	0x00066115(%rip),%rax
000000000001df8b	movq	(%rax),%rax
000000000001df8e	cmpq	0xd0(%rbp),%rax
000000000001df92	jne	0x0001dfa6
000000000001df94	addq	$0x00000188,%rsp
000000000001df9b	popq	%rbx
000000000001df9c	popq	%r12
000000000001df9e	popq	%r13
000000000001dfa0	popq	%r14
000000000001dfa2	popq	%r15
000000000001dfa4	popq	%rbp
000000000001dfa5	ret
000000000001dfa6	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
000000000001dfab	nop
-[PBXGDB_InterpreterCommandSequence _userCommandFinished:]:
000000000001dfac	pushq	%rbp
000000000001dfad	movq	%rsp,%rbp
000000000001dfb0	pushq	%r14
000000000001dfb2	pushq	%rbx
000000000001dfb3	movq	%rdi,%r14
000000000001dfb6	movq	0x00086afb(%rip),%rsi
000000000001dfbd	movq	0x00066114(%rip),%rbx
000000000001dfc4	call	*%rbx
000000000001dfc6	movq	0x00086e23(%rip),%rsi
000000000001dfcd	movq	%rax,%rdi
000000000001dfd0	call	*%rbx
000000000001dfd2	movq	0x00087b8f(%rip),%rsi
000000000001dfd9	movq	%rax,%rdi
000000000001dfdc	call	*%rbx
000000000001dfde	movq	0x00087c93(%rip),%rsi
000000000001dfe5	movq	%rax,%rdi
000000000001dfe8	xorl	%edx,%edx
000000000001dfea	call	*%rbx
000000000001dfec	movq	0x000908c5(%rip),%rax
000000000001dff3	movq	(%r14,%rax),%rdi
000000000001dff7	movq	0x00086ac2(%rip),%rsi
000000000001dffe	call	*%rbx
000000000001e000	movq	0x00086ee9(%rip),%rsi
000000000001e007	movq	%rax,%rdi
000000000001e00a	call	*%rbx
000000000001e00c	movq	0x00087c6d(%rip),%rsi
000000000001e013	movq	%rax,%rdi
000000000001e016	call	*%rbx
000000000001e018	testb	%al,%al
000000000001e01a	je	0x0001e062
000000000001e01c	movq	0x00086a95(%rip),%rsi
000000000001e023	movq	0x000660ae(%rip),%rbx
000000000001e02a	movq	%r14,%rdi
000000000001e02d	call	*%rbx
000000000001e02f	movq	0x00086dca(%rip),%rsi
000000000001e036	movq	%rax,%rdi
000000000001e039	call	*%rbx
000000000001e03b	movq	0x00087096(%rip),%rsi
000000000001e042	movq	%rax,%rdi
000000000001e045	call	*%rbx
000000000001e047	leaq	0x000918ea(%rip),%rdx
000000000001e04e	movq	0x0008708b(%rip),%rsi
000000000001e055	movq	%rax,%rdi
000000000001e058	xorl	%ecx,%ecx
000000000001e05a	movl	$0x00000001,%r8d
000000000001e060	call	*%rbx
000000000001e062	movq	0x0009084f(%rip),%rax
000000000001e069	movq	(%r14,%rax),%rdi
000000000001e06d	movq	0x00087c14(%rip),%rsi
000000000001e074	call	*0x0006605e(%rip)
000000000001e07a	cmpb	$0x01,%al
000000000001e07c	jne	0x0001e094
000000000001e07e	movq	0x00087c0b(%rip),%rsi
000000000001e085	movq	%r14,%rdi
000000000001e088	xorl	%edx,%edx
000000000001e08a	popq	%rbx
000000000001e08b	popq	%r14
000000000001e08d	popq	%rbp
000000000001e08e	jmp	*0x00066044(%rip)
000000000001e094	movq	0x00087bfd(%rip),%rsi
000000000001e09b	movq	%r14,%rdi
000000000001e09e	popq	%rbx
000000000001e09f	popq	%r14
000000000001e0a1	popq	%rbp
000000000001e0a2	jmp	*0x00066030(%rip)
-[PBXGDB_MIParser hasParsedOutputText]:
000000000001e0a8	pushq	%rbp
000000000001e0a9	movq	%rsp,%rbp
000000000001e0ac	movq	0x00088615(%rip),%rsi
000000000001e0b3	call	*0x0006601f(%rip)
000000000001e0b9	leaq	0x0008a230(%rip),%rsi
000000000001e0c0	movq	%rax,%rdi
000000000001e0c3	call	*0x0008a227(%rip)
000000000001e0c9	testq	%rax,%rax
000000000001e0cc	setne	%al
000000000001e0cf	movzbl	%al,%eax
000000000001e0d2	popq	%rbp
000000000001e0d3	ret
000000000001e0d4	nop
-[PBXGDB_MIUserCommand shouldFetchStack]:
000000000001e0d5	pushq	%rbp
000000000001e0d6	movq	%rsp,%rbp
000000000001e0d9	movq	0x00090dc0(%rip),%rax
000000000001e0e0	movsbl	(%rdi,%rax),%eax
000000000001e0e4	popq	%rbp
000000000001e0e5	ret
-[PBXGDB_InterpreterCommandSequence _threadOrFrameChanged]:
000000000001e0e6	pushq	%rbp
000000000001e0e7	movq	%rsp,%rbp
000000000001e0ea	pushq	%r15
000000000001e0ec	pushq	%r14
000000000001e0ee	pushq	%r13
000000000001e0f0	pushq	%r12
000000000001e0f2	pushq	%rbx
000000000001e0f3	subq	$0x18,%rsp
000000000001e0f7	movq	%rdi,%rbx
000000000001e0fa	movq	0x000907b7(%rip),%rax
000000000001e101	movq	(%rbx,%rax),%r12
000000000001e105	movq	%r12,0xc0(%rbp)
000000000001e109	movq	0x000869a8(%rip),%rsi
000000000001e110	movq	0x00065fc1(%rip),%r14
000000000001e117	call	*%r14
000000000001e11a	movq	%rax,%r15
000000000001e11d	movq	0x00086ccc(%rip),%rsi
000000000001e124	movq	%r15,%rdi
000000000001e127	call	*%r14
000000000001e12a	movq	%rax,%r13
000000000001e12d	movq	0x00087b04(%rip),%rsi
000000000001e134	movq	%r12,%rdi
000000000001e137	call	*%r14
000000000001e13a	movq	%rax,%r12
000000000001e13d	testq	%r12,%r12
000000000001e140	jle	0x0001e16c
000000000001e142	movq	0x00087af7(%rip),%rsi
000000000001e149	movq	0x00065f88(%rip),%r14
000000000001e150	movq	%r13,%rdi
000000000001e153	movq	%r12,%rdx
000000000001e156	call	*%r14
000000000001e159	movq	0x00087ae8(%rip),%rsi
000000000001e160	movq	%r13,%rdi
000000000001e163	movq	%r15,%rdx
000000000001e166	movq	%rax,%rcx
000000000001e169	call	*%r14
000000000001e16c	movq	%r15,0xd0(%rbp)
000000000001e170	movq	0x00090749(%rip),%rax
000000000001e177	cmpb	$0x00,(%rbx,%rax)
000000000001e17b	jne	0x0001e2ba
000000000001e181	movq	%rbx,0xc8(%rbp)
000000000001e185	movq	0x00087ac4(%rip),%rsi
000000000001e18c	movq	0xc0(%rbp),%rbx
000000000001e190	movq	%rbx,%rdi
000000000001e193	call	*0x00065f3f(%rip)
000000000001e199	movq	%rax,%r14
000000000001e19c	testq	%r14,%r14
000000000001e19f	js	0x0001e2a5
000000000001e1a5	testq	%r12,%r12
000000000001e1a8	jg	0x0001e1bd
000000000001e1aa	movq	0x00087597(%rip),%rsi
000000000001e1b1	movq	%rbx,%rdi
000000000001e1b4	call	*0x00065f1e(%rip)
000000000001e1ba	movq	%rax,%r12
000000000001e1bd	movq	0x00087a7c(%rip),%rsi
000000000001e1c4	movq	0x00065f0d(%rip),%r15
000000000001e1cb	movq	%r13,%rdi
000000000001e1ce	movq	%r12,%rdx
000000000001e1d1	call	*%r15
000000000001e1d4	movq	%rax,%r12
000000000001e1d7	movq	0x0008708a(%rip),%rsi
000000000001e1de	movq	%r12,%rdi
000000000001e1e1	call	*%r15
000000000001e1e4	movq	%rax,%rbx
000000000001e1e7	leaq	0x0008a122(%rip),%rsi
000000000001e1ee	movq	%rbx,%rdi
000000000001e1f1	call	*0x0008a119(%rip)
000000000001e1f7	cmpq	%r14,%rax
000000000001e1fa	jbe	0x0001e281
000000000001e200	leaq	0x0008a119(%rip),%rsi
000000000001e207	movq	%rbx,%rdi
000000000001e20a	movq	%r14,%rdx
000000000001e20d	call	*0x0008a10d(%rip)
000000000001e213	movq	%rax,%r14
000000000001e216	movq	0x00086bd3(%rip),%rsi
000000000001e21d	movq	0x00065eb4(%rip),%r13
000000000001e224	movq	0xd0(%rbp),%rdi
000000000001e228	call	*%r13
000000000001e22b	movq	0x00087936(%rip),%rsi
000000000001e232	movq	%rax,%rdi
000000000001e235	call	*%r13
000000000001e238	movq	0x00086c91(%rip),%rsi
000000000001e23f	movq	%rax,%rdi
000000000001e242	call	*%r13
000000000001e245	movq	%rax,%rbx
000000000001e248	movq	0x00087a09(%rip),%rsi
000000000001e24f	movq	%r14,%rdi
000000000001e252	call	*%r13
000000000001e255	leaq	0x0008a134(%rip),%rsi
000000000001e25c	movq	%rax,%rdi
000000000001e25f	movq	%rbx,%rdx
000000000001e262	call	*0x0008a128(%rip)
000000000001e268	testb	%al,%al
000000000001e26a	jne	0x0001e2a5
000000000001e26c	movq	0x000879ed(%rip),%rsi
000000000001e273	movq	%r12,%rdi
000000000001e276	movq	%r14,%rdx
000000000001e279	call	*0x00065e59(%rip)
000000000001e27f	jmp	0x0001e2a5
000000000001e281	testq	%rax,%rax
000000000001e284	jne	0x0001e2a5
000000000001e286	movq	0x000879db(%rip),%rsi
000000000001e28d	movq	0x00065e44(%rip),%rbx
000000000001e294	movq	%r12,%rdi
000000000001e297	call	*%rbx
000000000001e299	movq	0x000879d0(%rip),%rsi
000000000001e2a0	movq	%rax,%rdi
000000000001e2a3	call	*%rbx
000000000001e2a5	movq	0x00086b7c(%rip),%rsi
000000000001e2ac	movq	0xd0(%rbp),%rdi
000000000001e2b0	call	*0x00065e22(%rip)
000000000001e2b6	movq	0xc8(%rbp),%rbx
000000000001e2ba	movq	0x00086877(%rip),%rsi
000000000001e2c1	movq	%rbx,%rdi
000000000001e2c4	addq	$0x18,%rsp
000000000001e2c8	popq	%rbx
000000000001e2c9	popq	%r12
000000000001e2cb	popq	%r13
000000000001e2cd	popq	%r14
000000000001e2cf	popq	%r15
000000000001e2d1	popq	%rbp
000000000001e2d2	jmp	*0x00065e00(%rip)
-[PBXGDB_MIUserCommand selectedThreadIndex]:
000000000001e2d8	pushq	%rbp
000000000001e2d9	movq	%rsp,%rbp
000000000001e2dc	movq	0x00090bb5(%rip),%rax
000000000001e2e3	movq	(%rdi,%rax),%rax
000000000001e2e7	popq	%rbp
000000000001e2e8	ret
000000000001e2e9	nop
000000000001e2ea	nop
-[PBXGDB_MIUserCommand selectedFrameIndex]:
000000000001e2eb	pushq	%rbp
000000000001e2ec	movq	%rsp,%rbp
000000000001e2ef	movq	0x00090b9a(%rip),%rax
000000000001e2f6	movq	(%rdi,%rax),%rax
000000000001e2fa	popq	%rbp
000000000001e2fb	ret
000000000001e2fc	nop
000000000001e2fd	nop
000000000001e2fe	nop
000000000001e2ff	nop
000000000001e300	nop
000000000001e301	nop
000000000001e302	nop
000000000001e303	nop
-[PBXLSStackFrame ensureValidDataValues]:
000000000001e304	pushq	%rbp
000000000001e305	movq	%rsp,%rbp
000000000001e308	pushq	%r15
000000000001e30a	pushq	%r14
000000000001e30c	pushq	%r13
000000000001e30e	pushq	%r12
000000000001e310	pushq	%rbx
000000000001e311	subq	$0x38,%rsp
000000000001e315	movq	%rdi,%r12
000000000001e318	movq	0x00087229(%rip),%rsi
000000000001e31f	call	*0x00065db3(%rip)
000000000001e325	movq	%rax,%r14
000000000001e328	testq	%r14,%r14
000000000001e32b	je	0x0001e499
000000000001e331	movq	0x00086f60(%rip),%rsi
000000000001e338	movq	0x00065d99(%rip),%r13
000000000001e33f	movq	%r12,%rdi
000000000001e342	call	*%r13
000000000001e345	movq	0x0008791c(%rip),%rsi
000000000001e34c	movq	%rax,%rdi
000000000001e34f	call	*%r13
000000000001e352	movq	0x000892c7(%rip),%rsi
000000000001e359	movq	%rax,%rdi
000000000001e35c	call	*%r13
000000000001e35f	movq	%rax,%rbx
000000000001e362	movq	0x00086b67(%rip),%rsi
000000000001e369	movq	%rbx,%rdi
000000000001e36c	call	*%r13
000000000001e36f	movq	%rax,%r15
000000000001e372	movq	0x000878df(%rip),%rsi
000000000001e379	movq	%r12,%rdi
000000000001e37c	call	*%r13
000000000001e37f	cmpq	%rax,%r15
000000000001e382	jne	0x0001e470
000000000001e388	movq	0x000891c9(%rip),%rsi
000000000001e38f	movq	0x00065d42(%rip),%r13
000000000001e396	movq	%rbx,%rdi
000000000001e399	call	*%r13
000000000001e39c	movq	%rax,%r15
000000000001e39f	movq	0x00089252(%rip),%rsi
000000000001e3a6	movq	%r15,%rdi
000000000001e3a9	call	*%r13
000000000001e3ac	testb	%al,%al
000000000001e3ae	je	0x0001e3ee
000000000001e3b0	movq	0x00087221(%rip),%rsi
000000000001e3b7	movq	%r14,%rdi
000000000001e3ba	call	*0x00065d18(%rip)
000000000001e3c0	testl	%eax,%eax
000000000001e3c2	jne	0x0001e499
000000000001e3c8	movq	0x00089009(%rip),%rsi
000000000001e3cf	movq	0x00065d02(%rip),%rbx
000000000001e3d6	movq	%r14,%rdi
000000000001e3d9	xorl	%edx,%edx
000000000001e3db	call	*%rbx
000000000001e3dd	movq	0x0008771c(%rip),%rsi
000000000001e3e4	movq	%r14,%rdi
000000000001e3e7	call	*%rbx
000000000001e3e9	jmp	0x0001e499
000000000001e3ee	movq	0x00090fbb(%rip),%rax
000000000001e3f5	cmpq	$0x00,(%r12,%rax)
000000000001e3fa	jne	0x0001e499
000000000001e400	movq	0x00065c89(%rip),%rax
000000000001e407	movq	%rax,0xa8(%rbp)
000000000001e40b	movl	$0x42000000,0xb0(%rbp)
000000000001e412	movl	$0x00000000,0xb4(%rbp)
000000000001e419	leaq	0x00026b88(%rip),%rax
000000000001e420	movq	%rax,0xb8(%rbp)
000000000001e424	leaq	0x00098e15(%rip),%rax
000000000001e42b	movq	%rax,0xc0(%rbp)
000000000001e42f	leaq	0xc8(%rbp),%rsi
000000000001e433	movq	%r12,%rdi
000000000001e436	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
000000000001e43b	leaq	0xd0(%rbp),%rsi
000000000001e43f	movq	%r15,%rdi
000000000001e442	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
000000000001e447	leaq	0x000972ca(%rip),%rdx
000000000001e44e	leaq	0xa8(%rbp),%r8
000000000001e452	movq	0x000891e7(%rip),%rsi
000000000001e459	movq	%r15,%rdi
000000000001e45c	xorl	%ecx,%ecx
000000000001e45e	call	*0x00065c74(%rip)
000000000001e464	movq	0x00090f45(%rip),%rdx
000000000001e46b	movq	%rax,%rdi
000000000001e46e	jmp	0x0001e491
000000000001e470	movq	0x00090f39(%rip),%rax
000000000001e477	movq	(%r12,%rax),%rdi
000000000001e47b	movq	0x000891ae(%rip),%rsi
000000000001e482	call	*0x00065c50(%rip)
000000000001e488	movq	0x00090f21(%rip),%rdx
000000000001e48f	xorl	%edi,%edi
000000000001e491	movq	%r12,%rsi
000000000001e494	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001e499	addq	$0x38,%rsp
000000000001e49d	popq	%rbx
000000000001e49e	popq	%r12
000000000001e4a0	popq	%r13
000000000001e4a2	popq	%r14
000000000001e4a4	popq	%r15
000000000001e4a6	popq	%rbp
000000000001e4a7	ret
-[PBXLSDataValue setUpdatingAfterSet:]:
000000000001e4a8	pushq	%rbp
000000000001e4a9	movq	%rsp,%rbp
000000000001e4ac	movq	0x00090d75(%rip),%rax
000000000001e4b3	movb	%dl,(%rdi,%rax)
000000000001e4b6	popq	%rbp
000000000001e4b7	ret
-[PBXGDB_FrameDataValue2 requestUpdateValues]:
000000000001e4b8	pushq	%rbp
000000000001e4b9	movq	%rsp,%rbp
000000000001e4bc	pushq	%r14
000000000001e4be	pushq	%rbx
000000000001e4bf	subq	$0x10,%rsp
000000000001e4c3	movq	%rdi,%rbx
000000000001e4c6	movq	%rbx,0xe0(%rbp)
000000000001e4ca	movq	0x0008a947(%rip),%rax
000000000001e4d1	movq	%rax,0xe8(%rbp)
000000000001e4d5	movq	0x00087624(%rip),%rsi
000000000001e4dc	leaq	0xe0(%rbp),%rdi
000000000001e4e0	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000001e4e5	movq	0x0009056c(%rip),%rax
000000000001e4ec	cmpb	$0x00,(%rbx,%rax)
000000000001e4f0	jne	0x0001e520
000000000001e4f2	movb	$0x01,(%rbx,%rax)
000000000001e4f6	movq	0x000865bb(%rip),%rsi
000000000001e4fd	movq	0x00065bd4(%rip),%r14
000000000001e504	movq	%rbx,%rdi
000000000001e507	call	*%r14
000000000001e50a	movq	0x00086f37(%rip),%rsi
000000000001e511	movq	%rax,%rdi
000000000001e514	call	*%r14
000000000001e517	movq	0x00087c2a(%rip),%rsi
000000000001e51e	jmp	0x0001e548
000000000001e520	movq	0x00086591(%rip),%rsi
000000000001e527	movq	0x00065baa(%rip),%r14
000000000001e52e	movq	%rbx,%rdi
000000000001e531	call	*%r14
000000000001e534	movq	0x00086f0d(%rip),%rsi
000000000001e53b	movq	%rax,%rdi
000000000001e53e	call	*%r14
000000000001e541	movq	0x00087018(%rip),%rsi
000000000001e548	movq	%rax,%rdi
000000000001e54b	movq	%rbx,%rdx
000000000001e54e	call	*%r14
000000000001e551	addq	$0x10,%rsp
000000000001e555	popq	%rbx
000000000001e556	popq	%r14
000000000001e558	popq	%rbp
000000000001e559	ret
-[PBXGDB_ContainingDataValue2 requestUpdateValues]:
000000000001e55a	pushq	%rbp
000000000001e55b	movq	%rsp,%rbp
000000000001e55e	pushq	%r15
000000000001e560	pushq	%r14
000000000001e562	pushq	%r13
000000000001e564	pushq	%r12
000000000001e566	pushq	%rbx
000000000001e567	subq	$0x18,%rsp
000000000001e56b	movq	%rdi,%r14
000000000001e56e	movq	0x000902f3(%rip),%rax
000000000001e575	movq	(%r14,%rax),%rdi
000000000001e579	movq	0x00086570(%rip),%rsi
000000000001e580	movq	0x00065b51(%rip),%r15
000000000001e587	call	*%r15
000000000001e58a	movq	%rax,%r13
000000000001e58d	movq	%r14,0xc8(%rbp)
000000000001e591	movq	0x0008a7a8(%rip),%rax
000000000001e598	movq	%rax,0xd0(%rbp)
000000000001e59c	leaq	0xc8(%rbp),%rdi
000000000001e5a0	movq	0x00087559(%rip),%rsi
000000000001e5a7	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000001e5ac	movq	0x00086545(%rip),%rsi
000000000001e5b3	movq	%r13,%rdi
000000000001e5b6	call	*%r15
000000000001e5b9	testq	%rax,%rax
000000000001e5bc	je	0x0001e5e8
000000000001e5be	movq	0x00086533(%rip),%r15
000000000001e5c5	movq	0x0008753c(%rip),%r12
000000000001e5cc	movq	0x00065b05(%rip),%rbx
000000000001e5d3	movq	%rax,%rdi
000000000001e5d6	movq	%r12,%rsi
000000000001e5d9	call	*%rbx
000000000001e5db	movq	%r13,%rdi
000000000001e5de	movq	%r15,%rsi
000000000001e5e1	call	*%rbx
000000000001e5e3	testq	%rax,%rax
000000000001e5e6	jne	0x0001e5d3
000000000001e5e8	movq	0x00090279(%rip),%rax
000000000001e5ef	movq	(%r14,%rax),%rdi
000000000001e5f3	movq	0x00086a56(%rip),%rsi
000000000001e5fa	call	*0x00065ad8(%rip)
000000000001e600	addq	$0x18,%rsp
000000000001e604	popq	%rbx
000000000001e605	popq	%r12
000000000001e607	popq	%r13
000000000001e609	popq	%r14
000000000001e60b	popq	%r15
000000000001e60d	popq	%rbp
000000000001e60e	ret
-[PBXLSDataValue requestUpdateValues]:
000000000001e60f	pushq	%rbp
000000000001e610	movq	%rsp,%rbp
000000000001e613	movq	0x00086fc6(%rip),%rsi
000000000001e61a	movl	$0x00000001,%edx
000000000001e61f	popq	%rbp
000000000001e620	jmp	*0x00065ab2(%rip)
-[PBXGDB_DataValue2 gdbAdaptor]:
000000000001e626	pushq	%rbp
000000000001e627	movq	%rsp,%rbp
000000000001e62a	movq	0x00086f97(%rip),%rsi
000000000001e631	popq	%rbp
000000000001e632	jmp	*0x00065aa0(%rip)
-[PBXGDB_Adaptor dataValueController]:
000000000001e638	pushq	%rbp
000000000001e639	movq	%rsp,%rbp
000000000001e63c	movq	0x0009004d(%rip),%rax
000000000001e643	movq	(%rdi,%rax),%rax
000000000001e647	popq	%rbp
000000000001e648	ret
-[PBXGDB_DataValueController enqueueGetFrameSymbolsSequenceForDataValue:]:
000000000001e649	pushq	%rbp
000000000001e64a	movq	%rsp,%rbp
000000000001e64d	pushq	%r15
000000000001e64f	pushq	%r14
000000000001e651	pushq	%rbx
000000000001e652	pushq	%rax
000000000001e653	movq	%rdx,%r15
000000000001e656	movq	%rdi,%r14
000000000001e659	movq	0x0008a160(%rip),%rdi
000000000001e660	leaq	0x00089c79(%rip),%rsi
000000000001e667	call	*0x00089c73(%rip)
000000000001e66d	movq	0x000863fc(%rip),%rsi
000000000001e674	movq	%rax,%rdi
000000000001e677	call	*0x00065a5b(%rip)
000000000001e67d	movq	%rax,%rbx
000000000001e680	movq	0x00086dd1(%rip),%rsi
000000000001e687	movq	%r14,%rdi
000000000001e68a	movq	%rbx,%rdx
000000000001e68d	movq	%r15,%rcx
000000000001e690	call	*0x00065a42(%rip)
000000000001e696	movq	0x0008641b(%rip),%rsi
000000000001e69d	movq	%r14,%rdi
000000000001e6a0	call	*0x00065a32(%rip)
000000000001e6a6	movq	0x00086723(%rip),%rsi
000000000001e6ad	movq	%rax,%rdi
000000000001e6b0	call	*0x00065a22(%rip)
000000000001e6b6	movq	0x00086723(%rip),%rsi
000000000001e6bd	movq	%rax,%rdi
000000000001e6c0	movq	%rbx,%rdx
000000000001e6c3	movq	0x00065a0e(%rip),%rax
000000000001e6ca	addq	$0x08,%rsp
000000000001e6ce	popq	%rbx
000000000001e6cf	popq	%r14
000000000001e6d1	popq	%r15
000000000001e6d3	popq	%rbp
000000000001e6d4	jmp	*%rax
-[PBXGDB_DataValueController _initSequence:dataValue:]:
000000000001e6d6	pushq	%rbp
000000000001e6d7	movq	%rsp,%rbp
000000000001e6da	pushq	%r14
000000000001e6dc	pushq	%rbx
000000000001e6dd	movq	%rcx,%r14
000000000001e6e0	movq	%rdx,%rbx
000000000001e6e3	movq	0x000863ce(%rip),%rsi
000000000001e6ea	call	*0x000659e8(%rip)
000000000001e6f0	movq	0x000866d9(%rip),%rsi
000000000001e6f7	movq	%rax,%rdi
000000000001e6fa	call	*0x000659d8(%rip)
000000000001e700	movq	0x000866d1(%rip),%rsi
000000000001e707	movq	%rbx,%rdi
000000000001e70a	movq	%rax,%rdx
000000000001e70d	call	*0x000659c5(%rip)
000000000001e713	movq	0x00086ee6(%rip),%rsi
000000000001e71a	movq	%rbx,%rdi
000000000001e71d	movq	%r14,%rdx
000000000001e720	movq	0x000659b1(%rip),%rax
000000000001e727	popq	%rbx
000000000001e728	popq	%r14
000000000001e72a	popq	%rbp
000000000001e72b	jmp	*%rax
-[PBXGDB_BaseDataValueSequence setDataValue:]:
000000000001e72d	pushq	%rbp
000000000001e72e	movq	%rsp,%rbp
000000000001e731	movq	%rdx,%rax
000000000001e734	movq	%rdi,%rcx
000000000001e737	movq	0x000900a2(%rip),%rdx
000000000001e73e	movq	%rax,%rdi
000000000001e741	movq	%rcx,%rsi
000000000001e744	popq	%rbp
000000000001e745	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_GetFrameSymbolsDataValueSequence execute]:
000000000001e74a	pushq	%rbp
000000000001e74b	movq	%rsp,%rbp
000000000001e74e	pushq	%r14
000000000001e750	pushq	%rbx
000000000001e751	movq	%rdi,%r14
000000000001e754	movq	0x00086325(%rip),%rsi
000000000001e75b	movq	0x0008a0ce(%rip),%rdi
000000000001e762	call	*0x00065970(%rip)
000000000001e768	movq	%rax,%rbx
000000000001e76b	movq	0x00086316(%rip),%rsi
000000000001e772	movq	%rbx,%rdi
000000000001e775	movq	%r14,%rdx
000000000001e778	call	*0x0006595a(%rip)
000000000001e77e	movq	0x00086313(%rip),%rsi
000000000001e785	movq	0x0008761c(%rip),%rdx
000000000001e78c	movq	%rbx,%rdi
000000000001e78f	call	*0x00065943(%rip)
000000000001e795	movq	0x00086ea4(%rip),%rsi
000000000001e79c	movq	%r14,%rdi
000000000001e79f	movq	%rbx,%rdx
000000000001e7a2	movq	0x0006592f(%rip),%rax
000000000001e7a9	popq	%rbx
000000000001e7aa	popq	%r14
000000000001e7ac	popq	%rbp
000000000001e7ad	jmp	*%rax
-[PBXGDB_BaseDataValueSequence postCommandWithGroupFrameContext:]:
000000000001e7af	pushq	%rbp
000000000001e7b0	movq	%rsp,%rbp
000000000001e7b3	pushq	%r15
000000000001e7b5	pushq	%r14
000000000001e7b7	pushq	%r12
000000000001e7b9	pushq	%rbx
000000000001e7ba	movq	%rdx,%r14
000000000001e7bd	movq	%rdi,%r15
000000000001e7c0	movq	0x00086e41(%rip),%rsi
000000000001e7c7	movq	0x0006590a(%rip),%rbx
000000000001e7ce	call	*%rbx
000000000001e7d0	movq	0x00086f71(%rip),%rsi
000000000001e7d7	movq	%rax,%rdi
000000000001e7da	call	*%rbx
000000000001e7dc	movq	%rax,%r12
000000000001e7df	movq	0x00086e22(%rip),%rsi
000000000001e7e6	movq	%r15,%rdi
000000000001e7e9	call	*%rbx
000000000001e7eb	movq	0x00086f5e(%rip),%rsi
000000000001e7f2	movq	%rax,%rdi
000000000001e7f5	call	*%rbx
000000000001e7f7	movq	%rax,%rbx
000000000001e7fa	testq	%r12,%r12
000000000001e7fd	jle	0x0001e812
000000000001e7ff	movq	0x000862a2(%rip),%rsi
000000000001e806	movq	%r14,%rdi
000000000001e809	movq	%r12,%rdx
000000000001e80c	call	*0x000658c6(%rip)
000000000001e812	testq	%rbx,%rbx
000000000001e815	js	0x0001e82a
000000000001e817	movq	0x00086292(%rip),%rsi
000000000001e81e	movq	%r14,%rdi
000000000001e821	movq	%rbx,%rdx
000000000001e824	call	*0x000658ae(%rip)
000000000001e82a	movq	0x00086287(%rip),%rsi
000000000001e831	movq	%r15,%rdi
000000000001e834	call	*0x0006589e(%rip)
000000000001e83a	movq	0x0008627f(%rip),%rsi
000000000001e841	movq	%rax,%rdi
000000000001e844	call	*0x0006588e(%rip)
000000000001e84a	movq	0x00086f07(%rip),%rsi
000000000001e851	movq	%rax,%rdi
000000000001e854	movq	%r14,%rdx
000000000001e857	movq	0x0006587a(%rip),%rax
000000000001e85e	popq	%rbx
000000000001e85f	popq	%r12
000000000001e861	popq	%r14
000000000001e863	popq	%r15
000000000001e865	popq	%rbp
000000000001e866	jmp	*%rax
-[PBXGDB_BaseDataValueSequence dataValue]:
000000000001e868	pushq	%rbp
000000000001e869	movq	%rsp,%rbp
000000000001e86c	movq	0x0008ff6d(%rip),%rax
000000000001e873	movq	(%rdi,%rax),%rax
000000000001e877	popq	%rbp
000000000001e878	ret
-[PBXGDB_DataValue2 threadIdContext]:
000000000001e879	pushq	%rbp
000000000001e87a	movq	%rsp,%rbp
000000000001e87d	movq	0x00090064(%rip),%rax
000000000001e884	movq	(%rdi,%rax),%rax
000000000001e888	testq	%rax,%rax
000000000001e88b	jle	0x0001e88f
000000000001e88d	popq	%rbp
000000000001e88e	ret
000000000001e88f	movq	0x00086cba(%rip),%rsi
000000000001e896	call	*0x0006583c(%rip)
000000000001e89c	movq	0x000869f5(%rip),%rsi
000000000001e8a3	movq	%rax,%rdi
000000000001e8a6	call	*0x0006582c(%rip)
000000000001e8ac	movq	0x0008683d(%rip),%rsi
000000000001e8b3	movq	%rax,%rdi
000000000001e8b6	movq	0x0006581b(%rip),%rax
000000000001e8bd	popq	%rbp
000000000001e8be	jmp	*%rax
-[PBXGDB_FrameDataValue2 frameIndexContext]:
000000000001e8c0	pushq	%rbp
000000000001e8c1	movq	%rsp,%rbp
000000000001e8c4	pushq	%r14
000000000001e8c6	pushq	%rbx
000000000001e8c7	movq	%rdi,%rbx
000000000001e8ca	movq	0x00086c7f(%rip),%rsi
000000000001e8d1	call	*0x00065801(%rip)
000000000001e8d7	movq	0x000869ba(%rip),%rsi
000000000001e8de	movq	%rax,%rdi
000000000001e8e1	call	*0x000657f1(%rip)
000000000001e8e7	movq	0x0008697a(%rip),%rsi
000000000001e8ee	movq	%rax,%rdi
000000000001e8f1	call	*0x000657e1(%rip)
000000000001e8f7	movq	%rax,%r14
000000000001e8fa	movq	0x00086c4f(%rip),%rsi
000000000001e901	movq	%rbx,%rdi
000000000001e904	call	*0x000657ce(%rip)
000000000001e90a	movq	0x0008695f(%rip),%rsi
000000000001e911	movq	%r14,%rdi
000000000001e914	movq	%rax,%rdx
000000000001e917	movq	0x000657ba(%rip),%rax
000000000001e91e	popq	%rbx
000000000001e91f	popq	%r14
000000000001e921	popq	%rbp
000000000001e922	jmp	*%rax
-[PBXLSDataValue contextFrame]:
000000000001e924	pushq	%rbp
000000000001e925	movq	%rsp,%rbp
000000000001e928	movq	0x000908c9(%rip),%rax
000000000001e92f	movq	(%rdi,%rax),%rax
000000000001e933	popq	%rbp
000000000001e934	ret
-[PBXGDB_MIFrameArgVarObjsCommand GDBCommandString]:
000000000001e935	pushq	%rbp
000000000001e936	movq	%rsp,%rbp
000000000001e939	pushq	%rbx
000000000001e93a	subq	$0x18,%rsp
000000000001e93e	movq	%rdi,0xf0(%rbp)
000000000001e942	movq	%rsi,0xe8(%rbp)
000000000001e946	leaq	0x000901b3(%rip),%rax
000000000001e94d	movq	(%rax),%rax
000000000001e950	cmpq	$0x00,(%rdi,%rax)
000000000001e955	jns	0x0001e98c
000000000001e957	leaq	0x00041916(%rip),%rax
000000000001e95e	movq	%rax,(%rsp)
000000000001e962	leaq	0xf0(%rbp),%rdi
000000000001e966	leaq	0xe8(%rbp),%rsi
000000000001e96a	leaq	0x00041a12(%rip),%rdx
000000000001e971	leaq	0x00041876(%rip),%rcx
000000000001e978	leaq	0x00090eb9(%rip),%r9
000000000001e97f	movl	$0x000001a2,%r8d
000000000001e985	xorb	%al,%al
000000000001e987	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000001e98c	movq	0x00089abd(%rip),%rdi
000000000001e993	leaq	0x00089946(%rip),%rsi
000000000001e99a	call	*0x00089940(%rip)
000000000001e9a0	leaq	0x00090159(%rip),%rcx
000000000001e9a7	movq	(%rcx),%rcx
000000000001e9aa	movq	0xf0(%rbp),%rdx
000000000001e9ae	movq	(%rdx,%rcx),%r8
000000000001e9b2	movq	0x000862ff(%rip),%rsi
000000000001e9b9	leaq	0x000945d8(%rip),%rdx
000000000001e9c0	movq	%rax,%rdi
000000000001e9c3	movq	%r8,%rcx
000000000001e9c6	xorb	%al,%al
000000000001e9c8	call	*0x0006570a(%rip)
000000000001e9ce	leaq	0x0009015b(%rip),%rcx
000000000001e9d5	movq	(%rcx),%rbx
000000000001e9d8	movq	0xf0(%rbp),%rsi
000000000001e9dc	movq	%rax,%rdi
000000000001e9df	movq	%rbx,%rdx
000000000001e9e2	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001e9e7	movq	0xf0(%rbp),%rax
000000000001e9eb	movq	(%rax,%rbx),%rax
000000000001e9ef	addq	$0x18,%rsp
000000000001e9f3	popq	%rbx
000000000001e9f4	popq	%rbp
000000000001e9f5	ret
-[PBXGDB_GetFrameSymbolsDataValueSequence timeOutPeriod]:
000000000001e9f6	pushq	%rbp
000000000001e9f7	movq	%rsp,%rbp
000000000001e9fa	xorps	%xmm0,%xmm0
000000000001e9fd	popq	%rbp
000000000001e9fe	ret
000000000001e9ff	nop
000000000001ea00	nop
000000000001ea01	nop
-[DBGGDBStackFrame updateExpressionValues]:
000000000001ea02	pushq	%rbp
000000000001ea03	movq	%rsp,%rbp
000000000001ea06	pushq	%r15
000000000001ea08	pushq	%r14
000000000001ea0a	pushq	%r13
000000000001ea0c	pushq	%r12
000000000001ea0e	pushq	%rbx
000000000001ea0f	subq	$0x00000198,%rsp
000000000001ea16	movq	%rdi,0xfffffe40(%rbp)
000000000001ea1d	movq	0x0006567c(%rip),%rax
000000000001ea24	movq	(%rax),%rax
000000000001ea27	movq	%rax,0xd0(%rbp)
000000000001ea2b	movq	0x00090c5e(%rip),%rax
000000000001ea32	movq	(%rdi,%rax),%rdi
000000000001ea36	testq	%rdi,%rdi
000000000001ea39	je	0x0001ec08
000000000001ea3f	xorps	%xmm0,%xmm0
000000000001ea42	movaps	%xmm0,0xc0(%rbp)
000000000001ea46	movaps	%xmm0,0xb0(%rbp)
000000000001ea4a	movaps	%xmm0,0xa0(%rbp)
000000000001ea4e	movaps	%xmm0,0x90(%rbp)
000000000001ea52	movq	0x00086097(%rip),%rsi
000000000001ea59	call	*0x00065679(%rip)
000000000001ea5f	movq	%rax,0xfffffe48(%rbp)
000000000001ea66	leaq	0x00089913(%rip),%rsi
000000000001ea6d	leaq	0x90(%rbp),%rdx
000000000001ea71	leaq	0xffffff10(%rbp),%rcx
000000000001ea78	movq	%rax,%rdi
000000000001ea7b	movl	$0x00000010,%r8d
000000000001ea81	call	*0x000898f9(%rip)
000000000001ea87	movq	%rax,%rbx
000000000001ea8a	testq	%rbx,%rbx
000000000001ea8d	je	0x0001eb0e
000000000001ea8f	movq	0xa0(%rbp),%rax
000000000001ea93	movq	(%rax),%r15
000000000001ea96	movq	0x0006563b(%rip),%r13
000000000001ea9d	xorl	%r12d,%r12d
000000000001eaa0	movq	0xa0(%rbp),%rax
000000000001eaa4	cmpq	%r15,(%rax)
000000000001eaa7	je	0x0001eab5
000000000001eaa9	movq	0xfffffe48(%rbp),%rdi
000000000001eab0	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
000000000001eab5	movq	0x98(%rbp),%rax
000000000001eab9	movq	(%rax,%r12,8),%r14
000000000001eabd	movq	%r14,%rdi
000000000001eac0	movq	0x00088911(%rip),%rsi
000000000001eac7	xorl	%edx,%edx
000000000001eac9	call	*%r13
000000000001eacc	movq	%r14,%rdi
000000000001eacf	movq	0x0008702a(%rip),%rsi
000000000001ead6	call	*%r13
000000000001ead9	incq	%r12
000000000001eadc	cmpq	%rbx,%r12
000000000001eadf	jb	0x0001eaa0
000000000001eae1	movq	0xfffffe48(%rbp),%rdi
000000000001eae8	leaq	0x00089891(%rip),%rsi
000000000001eaef	leaq	0x90(%rbp),%rdx
000000000001eaf3	leaq	0xffffff10(%rbp),%rcx
000000000001eafa	movl	$0x00000010,%r8d
000000000001eb00	call	*0x0008987a(%rip)
000000000001eb06	movq	%rax,%rbx
000000000001eb09	testq	%rbx,%rbx
000000000001eb0c	jne	0x0001ea9d
000000000001eb0e	movq	0x00090b4b(%rip),%rax
000000000001eb15	movq	0xfffffe40(%rbp),%rcx
000000000001eb1c	movq	(%rcx,%rax),%rdi
000000000001eb20	movq	0x00085f51(%rip),%rsi
000000000001eb27	call	*0x000655ab(%rip)
000000000001eb2d	movq	%rax,%r12
000000000001eb30	xorps	%xmm0,%xmm0
000000000001eb33	movaps	%xmm0,0xffffff00(%rbp)
000000000001eb3a	movaps	%xmm0,0xfffffef0(%rbp)
000000000001eb41	movaps	%xmm0,0xfffffee0(%rbp)
000000000001eb48	movaps	%xmm0,0xfffffed0(%rbp)
000000000001eb4f	leaq	0x0008982a(%rip),%rsi
000000000001eb56	leaq	0xfffffed0(%rbp),%rdx
000000000001eb5d	leaq	0xfffffe50(%rbp),%rcx
000000000001eb64	movq	%r12,%rdi
000000000001eb67	movl	$0x00000010,%r8d
000000000001eb6d	call	*0x0008980d(%rip)
000000000001eb73	movq	%rax,%rbx
000000000001eb76	testq	%rbx,%rbx
000000000001eb79	je	0x0001ec08
000000000001eb7f	movq	0xfffffee0(%rbp),%rax
000000000001eb86	movq	(%rax),%r14
000000000001eb89	xorl	%r15d,%r15d
000000000001eb8c	movq	0xfffffee0(%rbp),%rax
000000000001eb93	cmpq	%r14,(%rax)
000000000001eb96	je	0x0001eba0
000000000001eb98	movq	%r12,%rdi
000000000001eb9b	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
000000000001eba0	movq	0xfffffed8(%rbp),%rax
000000000001eba7	movq	(%rax,%r15,8),%r13
000000000001ebab	movq	%r13,%rdi
000000000001ebae	call	*0x10(%r13)
000000000001ebb2	movq	0xfffffe40(%rbp),%rax
000000000001ebb9	movq	0x00090aa0(%rip),%rcx
000000000001ebc0	movq	(%rax,%rcx),%rdi
000000000001ebc4	movq	0x00086155(%rip),%rsi
000000000001ebcb	movq	%r13,%rdx
000000000001ebce	call	*0x00065504(%rip)
000000000001ebd4	incq	%r15
000000000001ebd7	cmpq	%rbx,%r15
000000000001ebda	jb	0x0001eb8c
000000000001ebdc	movq	%r12,%rdi
000000000001ebdf	leaq	0x0008979a(%rip),%rsi
000000000001ebe6	leaq	0xfffffed0(%rbp),%rdx
000000000001ebed	leaq	0xfffffe50(%rbp),%rcx
000000000001ebf4	movl	$0x00000010,%r8d
000000000001ebfa	call	*0x00089780(%rip)
000000000001ec00	movq	%rax,%rbx
000000000001ec03	testq	%rbx,%rbx
000000000001ec06	jne	0x0001eb89
000000000001ec08	movq	0x00065491(%rip),%rax
000000000001ec0f	movq	(%rax),%rax
000000000001ec12	cmpq	0xd0(%rbp),%rax
000000000001ec16	jne	0x0001ec2a
000000000001ec18	addq	$0x00000198,%rsp
000000000001ec1f	popq	%rbx
000000000001ec20	popq	%r12
000000000001ec22	popq	%r13
000000000001ec24	popq	%r14
000000000001ec26	popq	%r15
000000000001ec28	popq	%rbp
000000000001ec29	ret
000000000001ec2a	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
-[PBXGDB_MIFrameArgVarObjsCommand didFinishWithResultList:]:
000000000001ec2f	pushq	%rbp
000000000001ec30	movq	%rsp,%rbp
000000000001ec33	pushq	%r15
000000000001ec35	pushq	%r14
000000000001ec37	pushq	%r12
000000000001ec39	pushq	%rbx
000000000001ec3a	subq	$0x10,%rsp
000000000001ec3e	movq	%rdx,%r14
000000000001ec41	movq	%rdi,%r15
000000000001ec44	movq	0x00085e8d(%rip),%rsi
000000000001ec4b	leaq	0x000916a6(%rip),%rdx
000000000001ec52	movq	%r14,%rdi
000000000001ec55	call	*0x0006547d(%rip)
000000000001ec5b	movq	%rax,%rbx
000000000001ec5e	leaq	0x00090253(%rip),%rax
000000000001ec65	movq	(%rax),%rdx
000000000001ec68	xorl	%edi,%edi
000000000001ec6a	movq	%r15,%rsi
000000000001ec6d	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001ec72	leaq	0x0009024f(%rip),%rax
000000000001ec79	movq	(%rax),%rcx
000000000001ec7c	leaq	0x0009023d(%rip),%rax
000000000001ec83	movq	$0x00000000,(%r15,%rcx)
000000000001ec8b	movq	(%rax),%rdx
000000000001ec8e	xorl	%edi,%edi
000000000001ec90	movq	%r15,%rsi
000000000001ec93	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001ec98	testq	%rbx,%rbx
000000000001ec9b	je	0x0001ed15
000000000001ec9d	movq	0x00085e3c(%rip),%rsi
000000000001eca4	movq	0x0006542d(%rip),%r12
000000000001ecab	movq	%rbx,%rdi
000000000001ecae	call	*%r12
000000000001ecb1	movq	0x00085e20(%rip),%rsi
000000000001ecb8	leaq	0x00091099(%rip),%rdx
000000000001ecbf	movq	%rax,%rdi
000000000001ecc2	call	*%r12
000000000001ecc5	movq	0x00085e14(%rip),%rsi
000000000001eccc	movq	%rax,%rdi
000000000001eccf	call	*%r12
000000000001ecd2	leaq	0x0009125f(%rip),%rdx
000000000001ecd9	movq	0x00085df8(%rip),%rsi
000000000001ece0	movq	%rax,%rdi
000000000001ece3	call	*%r12
000000000001ece6	movq	0x00085df3(%rip),%rsi
000000000001eced	movq	%rax,%rdi
000000000001ecf0	call	*%r12
000000000001ecf3	movq	0x00085dee(%rip),%rsi
000000000001ecfa	movq	%rax,%rdi
000000000001ecfd	call	*%r12
000000000001ed00	leaq	0x000901b1(%rip),%rcx
000000000001ed07	movq	(%rcx),%rdx
000000000001ed0a	movq	%rax,%rdi
000000000001ed0d	movq	%r15,%rsi
000000000001ed10	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001ed15	movq	%r15,0xd0(%rbp)
000000000001ed19	movq	0x0008a1b8(%rip),%rax
000000000001ed20	movq	%rax,0xd8(%rbp)
000000000001ed24	movq	0x000874d5(%rip),%rsi
000000000001ed2b	leaq	0xd0(%rbp),%rdi
000000000001ed2f	movq	%r14,%rdx
000000000001ed32	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000001ed37	addq	$0x10,%rsp
000000000001ed3b	popq	%rbx
000000000001ed3c	popq	%r12
000000000001ed3e	popq	%r14
000000000001ed40	popq	%r15
000000000001ed42	popq	%rbp
000000000001ed43	ret
-[PBXGDB_GetFrameSymbolsDataValueSequence _gotResultArgumentVarObjs:]:
000000000001ed44	pushq	%rbp
000000000001ed45	movq	%rsp,%rbp
000000000001ed48	pushq	%r15
000000000001ed4a	pushq	%r14
000000000001ed4c	pushq	%rbx
000000000001ed4d	subq	$0x38,%rsp
000000000001ed51	movq	%rdx,%r14
000000000001ed54	movq	%rdi,0xe0(%rbp)
000000000001ed58	movq	%rsi,0xd8(%rbp)
000000000001ed5c	testq	%r14,%r14
000000000001ed5f	jne	0x0001edc7
000000000001ed61	movq	0x00089ac8(%rip),%rdi
000000000001ed68	leaq	0x000895c1(%rip),%rsi
000000000001ed6f	call	*0x000895bb(%rip)
000000000001ed75	movq	%rax,%rdi
000000000001ed78	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000001ed7d	leaq	0xe0(%rbp),%rdi
000000000001ed81	leaq	0xd8(%rbp),%rsi
000000000001ed85	leaq	0x0003f80e(%rip),%rdx
000000000001ed8c	leaq	0x0003f62a(%rip),%rcx
000000000001ed93	leaq	0x00090c1e(%rip),%r9
000000000001ed9a	leaq	0x0003ed5f(%rip),%r8
000000000001eda1	leaq	0x0003ed5c(%rip),%rbx
000000000001eda8	movq	%rbx,0x18(%rsp)
000000000001edad	leaq	0x00090a84(%rip),%rbx
000000000001edb4	movq	%rbx,0x10(%rsp)
000000000001edb9	movq	%rax,0x08(%rsp)
000000000001edbe	movq	%r8,(%rsp)
000000000001edc2	jmp	0x0001ee72
000000000001edc7	movq	0x00089a62(%rip),%rdi
000000000001edce	leaq	0x0008955b(%rip),%rsi
000000000001edd5	call	*0x00089555(%rip)
000000000001eddb	leaq	0x0008955e(%rip),%rsi
000000000001ede2	movq	%r14,%rdi
000000000001ede5	movq	%rax,%rdx
000000000001ede8	call	*0x00089552(%rip)
000000000001edee	testb	%al,%al
000000000001edf0	movq	%r14,%rdi
000000000001edf3	jne	0x0001ee82
000000000001edf9	movq	0x00089a30(%rip),%rdi
000000000001ee00	leaq	0x00089529(%rip),%rsi
000000000001ee07	call	*0x00089523(%rip)
000000000001ee0d	movq	%rax,%rdi
000000000001ee10	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000001ee15	movq	%rax,%rbx
000000000001ee18	movq	0x00085e41(%rip),%rsi
000000000001ee1f	movq	%r14,%rdi
000000000001ee22	call	*0x000652b0(%rip)
000000000001ee28	leaq	0x00090a09(%rip),%r8
000000000001ee2f	leaq	0x0003f7aa(%rip),%r9
000000000001ee36	leaq	0xe0(%rbp),%rdi
000000000001ee3a	leaq	0xd8(%rbp),%rsi
000000000001ee3e	leaq	0x0003f755(%rip),%rdx
000000000001ee45	leaq	0x0003f571(%rip),%rcx
000000000001ee4c	movq	%r9,0x20(%rsp)
000000000001ee51	leaq	0x00090b80(%rip),%r9
000000000001ee58	movq	%r8,0x18(%rsp)
000000000001ee5d	movq	%rax,0x10(%rsp)
000000000001ee62	leaq	0x0003ec97(%rip),%rax
000000000001ee69	movq	%rbx,0x08(%rsp)
000000000001ee6e	movq	%rax,(%rsp)
000000000001ee72	movl	$0x000000c1,%r8d
000000000001ee78	xorb	%al,%al
000000000001ee7a	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000001ee7f	movq	%r14,%rdi
000000000001ee82	movq	0x00086ee7(%rip),%rsi
000000000001ee89	call	*0x00065249(%rip)
000000000001ee8f	testq	%rax,%rax
000000000001ee92	je	0x0001ef1d
000000000001ee98	movq	0x00089619(%rip),%rdi
000000000001ee9f	leaq	0x0008943a(%rip),%rsi
000000000001eea6	call	*0x00089434(%rip)
000000000001eeac	movq	%rax,%rbx
000000000001eeaf	movq	0x00085c02(%rip),%rsi
000000000001eeb6	movq	0xe0(%rbp),%rdi
000000000001eeba	movq	0x00065217(%rip),%r15
000000000001eec1	call	*%r15
000000000001eec4	movq	0x00085e85(%rip),%rsi
000000000001eecb	movq	%rbx,%rdi
000000000001eece	movq	%rax,%rdx
000000000001eed1	call	*%r15
000000000001eed4	movq	%rax,%rbx
000000000001eed7	leaq	0x0009211a(%rip),%rdx
000000000001eede	movq	0x00085e73(%rip),%rsi
000000000001eee5	movq	%rbx,%rdi
000000000001eee8	call	*%r15
000000000001eeeb	movq	0x00086716(%rip),%rsi
000000000001eef2	movq	0xe0(%rbp),%rdi
000000000001eef6	call	*%r15
000000000001eef9	movq	0x00086638(%rip),%rsi
000000000001ef00	movq	%rax,%rdi
000000000001ef03	movq	%rbx,%rdx
000000000001ef06	call	*%r15
000000000001ef09	movq	0x00086e68(%rip),%rsi
000000000001ef10	movq	0xe0(%rbp),%rdi
000000000001ef14	movq	%r14,%rdx
000000000001ef17	movq	%rbx,%rcx
000000000001ef1a	call	*%r15
000000000001ef1d	movq	0x00086e3c(%rip),%rsi
000000000001ef24	movq	0xe0(%rbp),%rdi
000000000001ef28	call	*0x000651aa(%rip)
000000000001ef2e	addq	$0x38,%rsp
000000000001ef32	popq	%rbx
000000000001ef33	popq	%r14
000000000001ef35	popq	%r15
000000000001ef37	popq	%rbp
000000000001ef38	ret
-[PBXGDB_MIBaseVarObjCommand numberOfVarObjs]:
000000000001ef39	pushq	%rbp
000000000001ef3a	movq	%rsp,%rbp
000000000001ef3d	movq	0x0008ff74(%rip),%rax
000000000001ef44	movq	(%rdi,%rax),%rax
000000000001ef48	testq	%rax,%rax
000000000001ef4b	jne	0x0001ef61
000000000001ef4d	movq	0x0008ff6c(%rip),%rax
000000000001ef54	cmpq	$0x00,(%rdi,%rax)
000000000001ef59	setne	%al
000000000001ef5c	movzbl	%al,%eax
000000000001ef5f	popq	%rbp
000000000001ef60	ret
000000000001ef61	movq	0x000893a8(%rip),%rcx
000000000001ef68	leaq	0x000893a1(%rip),%rsi
000000000001ef6f	movq	%rax,%rdi
000000000001ef72	popq	%rbp
000000000001ef73	jmp	*%rcx
-[PBXLSDataValue addChildDataValue:]:
000000000001ef75	pushq	%rbp
000000000001ef76	movq	%rsp,%rbp
000000000001ef79	pushq	%r14
000000000001ef7b	pushq	%rbx
000000000001ef7c	movq	%rdx,%r14
000000000001ef7f	movq	%rdi,%rbx
000000000001ef82	movq	0x00086b37(%rip),%rsi
000000000001ef89	call	*0x00065149(%rip)
000000000001ef8f	movq	0x000879e2(%rip),%rsi
000000000001ef96	movq	%rbx,%rdi
000000000001ef99	movq	%r14,%rdx
000000000001ef9c	call	*0x00065136(%rip)
000000000001efa2	movq	0x00086eef(%rip),%rsi
000000000001efa9	movq	%rbx,%rdi
000000000001efac	call	*0x00065126(%rip)
000000000001efb2	movq	0x00088407(%rip),%rsi
000000000001efb9	movq	%rax,%rdi
000000000001efbc	movq	0x00065115(%rip),%rax
000000000001efc3	popq	%rbx
000000000001efc4	popq	%r14
000000000001efc6	popq	%rbp
000000000001efc7	jmp	*%rax
-[PBXGDB_ContainingDataValue2 invalidateAllChildDataValuesCache]:
000000000001efc9	pushq	%rbp
000000000001efca	movq	%rsp,%rbp
000000000001efcd	pushq	%rbx
000000000001efce	subq	$0x18,%rsp
000000000001efd2	movq	%rdi,%rbx
000000000001efd5	movq	0x0008f894(%rip),%rdx
000000000001efdc	xorl	%edi,%edi
000000000001efde	movq	%rbx,%rsi
000000000001efe1	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001efe6	movq	%rbx,0xe8(%rbp)
000000000001efea	movq	0x00089d4f(%rip),%rax
000000000001eff1	movq	%rax,0xf0(%rbp)
000000000001eff5	leaq	0xe8(%rbp),%rdi
000000000001eff9	movq	0x00086ac0(%rip),%rsi
000000000001f000	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000001f005	addq	$0x18,%rsp
000000000001f009	popq	%rbx
000000000001f00a	popq	%rbp
000000000001f00b	ret
-[PBXLSDataValue invalidateAllChildDataValuesCache]:
000000000001f00c	pushq	%rbp
000000000001f00d	movq	%rsp,%rbp
000000000001f010	pushq	%rbx
000000000001f011	pushq	%rax
000000000001f012	movq	%rdi,%rbx
000000000001f015	movq	0x000901fc(%rip),%rdx
000000000001f01c	cmpq	$0x00,(%rbx,%rdx)
000000000001f021	je	0x0001f033
000000000001f023	addq	%rbx,%rdx
000000000001f026	subq	%rbx,%rdx
000000000001f029	xorl	%edi,%edi
000000000001f02b	movq	%rbx,%rsi
000000000001f02e	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001f033	movq	0x000864e6(%rip),%rsi
000000000001f03a	movq	%rbx,%rdi
000000000001f03d	call	*0x00065095(%rip)
000000000001f043	movq	0x00086a76(%rip),%rsi
000000000001f04a	movq	%rax,%rdi
000000000001f04d	movq	0x00065084(%rip),%rax
000000000001f054	addq	$0x08,%rsp
000000000001f058	popq	%rbx
000000000001f059	popq	%rbp
000000000001f05a	jmp	*%rax
-[PBXLSDataValue parentDataValue]:
000000000001f05c	pushq	%rbp
000000000001f05d	movq	%rsp,%rbp
000000000001f060	movq	0x00088311(%rip),%rsi
000000000001f067	popq	%rbp
000000000001f068	jmp	*0x0006506a(%rip)
-[PBXLSDataValue setParentModel:]:
000000000001f06e	pushq	%rbp
000000000001f06f	movq	%rsp,%rbp
000000000001f072	pushq	%r14
000000000001f074	pushq	%rbx
000000000001f075	subq	$0x10,%rsp
000000000001f079	movq	%rdx,%rbx
000000000001f07c	movq	%rdi,%r14
000000000001f07f	movq	%r14,0xe0(%rbp)
000000000001f083	movq	0x00089f66(%rip),%rax
000000000001f08a	movq	%rax,0xe8(%rbp)
000000000001f08e	movq	0x000882eb(%rip),%rsi
000000000001f095	leaq	0xe0(%rbp),%rdi
000000000001f099	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000001f09e	movq	0x000867a3(%rip),%rsi
000000000001f0a5	movq	%rbx,%rdi
000000000001f0a8	call	*0x0006502a(%rip)
000000000001f0ae	cmpb	$0x01,%al
000000000001f0b0	jne	0x0001f0c7
000000000001f0b2	movq	0x0008637f(%rip),%rsi
000000000001f0b9	movq	%r14,%rdi
000000000001f0bc	movl	$0x00000001,%edx
000000000001f0c1	call	*0x00065011(%rip)
000000000001f0c7	addq	$0x10,%rsp
000000000001f0cb	popq	%rbx
000000000001f0cc	popq	%r14
000000000001f0ce	popq	%rbp
000000000001f0cf	ret
-[PBXLSDataValue isCPURegister]:
000000000001f0d0	pushq	%rbp
000000000001f0d1	movq	%rsp,%rbp
000000000001f0d4	movq	0x0009019d(%rip),%rax
000000000001f0db	movb	(%rdi,%rax),%al
000000000001f0de	movsbl	%al,%eax
000000000001f0e1	popq	%rbp
000000000001f0e2	ret
-[PBXGDB_BaseDataValueSequence createVarObjDataValuesFromCommand:parentDV:]:
000000000001f0e3	pushq	%rbp
000000000001f0e4	movq	%rsp,%rbp
000000000001f0e7	movq	0x00086742(%rip),%rsi
000000000001f0ee	xorl	%r8d,%r8d
000000000001f0f1	popq	%rbp
000000000001f0f2	jmp	*0x00064fe0(%rip)
-[PBXGDB_BaseDataValueSequence createVarObjDataValuesFromCommand:parentDV:isTrigger:]:
000000000001f0f8	pushq	%rbp
000000000001f0f9	movq	%rsp,%rbp
000000000001f0fc	movq	0x0008661d(%rip),%rsi
000000000001f103	movl	$0x00000001,%r9d
000000000001f109	popq	%rbp
000000000001f10a	jmp	*0x00064fc8(%rip)
-[PBXGDB_BaseDataValueSequence createVarObjDataValuesFromCommand:parentDV:isTrigger:automaticallyAddToParent:]:
000000000001f110	pushq	%rbp
000000000001f111	movq	%rsp,%rbp
000000000001f114	pushq	%r15
000000000001f116	pushq	%r14
000000000001f118	pushq	%r13
000000000001f11a	pushq	%r12
000000000001f11c	pushq	%rbx
000000000001f11d	subq	$0x28,%rsp
000000000001f121	movl	%r9d,0xb0(%rbp)
000000000001f125	movl	%r8d,0xcc(%rbp)
000000000001f129	movq	%rcx,%rbx
000000000001f12c	movq	%rbx,0xd0(%rbp)
000000000001f130	movq	%rdx,%r15
000000000001f133	movq	%r15,0xc0(%rbp)
000000000001f137	movq	%rdi,%r12
000000000001f13a	movq	0x000862ef(%rip),%rsi
000000000001f141	movq	0x00089318(%rip),%rdi
000000000001f148	movq	0x00064f89(%rip),%r14
000000000001f14f	call	*%r14
000000000001f152	movq	%rax,0xb8(%rbp)
000000000001f156	movq	0x000866db(%rip),%rsi
000000000001f15d	movq	%rbx,%rdi
000000000001f160	movq	%r15,%rbx
000000000001f163	call	*%r14
000000000001f166	movb	%al,0xb7(%rbp)
000000000001f169	movq	0x000866d0(%rip),%rsi
000000000001f170	movq	%rbx,%rdi
000000000001f173	call	*%r14
000000000001f176	testb	%al,%al
000000000001f178	je	0x0001f34f
000000000001f17e	movq	0x00085933(%rip),%r14
000000000001f185	movq	0x00064f4c(%rip),%r13
000000000001f18c	movq	%r14,%r15
000000000001f18f	movq	%rbx,%rdi
000000000001f192	movq	0x00086637(%rip),%rsi
000000000001f199	call	*0x00064f39(%rip)
000000000001f19f	movq	%rax,%r14
000000000001f1a2	cmpb	$0x00,0xb7(%rbp)
000000000001f1a6	je	0x0001f270
000000000001f1ac	movq	0xd0(%rbp),%rdi
000000000001f1b0	movq	0x00086691(%rip),%rsi
000000000001f1b7	call	*0x00064f1b(%rip)
000000000001f1bd	testb	%al,%al
000000000001f1bf	jne	0x0001f270
000000000001f1c5	movq	0x00089434(%rip),%rdi
000000000001f1cc	movq	0x0008667d(%rip),%rsi
000000000001f1d3	movq	%r14,%rdx
000000000001f1d6	call	*0x00064efc(%rip)
000000000001f1dc	testb	%al,%al
000000000001f1de	jne	0x0001f238
000000000001f1e0	movq	0x00089419(%rip),%rdi
000000000001f1e7	movq	0x0008666a(%rip),%rsi
000000000001f1ee	movq	%r14,%rdx
000000000001f1f1	call	*0x00064ee1(%rip)
000000000001f1f7	testb	%al,%al
000000000001f1f9	jne	0x0001f238
000000000001f1fb	movq	0x000893fe(%rip),%rbx
000000000001f202	movq	0xc0(%rbp),%rdi
000000000001f206	movq	0x000865d3(%rip),%rsi
000000000001f20d	call	*%r13
000000000001f210	movq	0x0008f5d9(%rip),%rcx
000000000001f217	movq	(%r12,%rcx),%rcx
000000000001f21b	movq	%rbx,%rdi
000000000001f21e	movq	0x0008663b(%rip),%rsi
000000000001f225	movl	%eax,%edx
000000000001f227	movq	%r14,%r8
000000000001f22a	call	*%r13
000000000001f22d	testb	%al,%al
000000000001f22f	je	0x0001f270
000000000001f231	movl	0xcc(%rbp),%eax
000000000001f234	testb	%al,%al
000000000001f236	jne	0x0001f270
000000000001f238	movq	0x00089479(%rip),%rdi
000000000001f23f	leaq	0x0008909a(%rip),%rsi
000000000001f246	call	*0x00089094(%rip)
000000000001f24c	movq	%rax,%rbx
000000000001f24f	movq	%r12,%rdi
000000000001f252	movq	%r15,%r14
000000000001f255	movq	%r14,%rsi
000000000001f258	call	*%r13
000000000001f25b	movq	%rbx,%rdi
000000000001f25e	movq	0x00085aeb(%rip),%rsi
000000000001f265	movq	%rax,%rdx
000000000001f268	call	*%r13
000000000001f26b	movq	%rax,%rbx
000000000001f26e	jmp	0x0001f2c9
000000000001f270	movl	0xcc(%rbp),%eax
000000000001f273	cmpb	$0x01,%al
000000000001f275	jne	0x0001f2b3
000000000001f277	movq	0x00089442(%rip),%rdi
000000000001f27e	leaq	0x0008905b(%rip),%rsi
000000000001f285	call	*0x00089055(%rip)
000000000001f28b	movq	%rax,%rbx
000000000001f28e	movq	%r12,%rdi
000000000001f291	movq	%r15,%r14
000000000001f294	movq	%r14,%rsi
000000000001f297	call	*%r13
000000000001f29a	movq	%rbx,%rdi
000000000001f29d	movq	0x000865c4(%rip),%rsi
000000000001f2a4	movq	%rax,%rdx
000000000001f2a7	movq	0xd0(%rbp),%rcx
000000000001f2ab	call	*%r13
000000000001f2ae	movq	%rax,%rbx
000000000001f2b1	jmp	0x0001f2c9
000000000001f2b3	movq	%r12,%rdi
000000000001f2b6	movq	0x000865b3(%rip),%rsi
000000000001f2bd	call	*0x00064e15(%rip)
000000000001f2c3	movq	%rax,%rbx
000000000001f2c6	movq	%r15,%r14
000000000001f2c9	movq	%r12,%rdi
000000000001f2cc	movq	0x00086335(%rip),%rsi
000000000001f2d3	call	*%r13
000000000001f2d6	movq	%rax,%rdi
000000000001f2d9	movq	0x00086270(%rip),%rsi
000000000001f2e0	call	*%r13
000000000001f2e3	movq	%rbx,%rdi
000000000001f2e6	movq	0x00085fd3(%rip),%rsi
000000000001f2ed	movq	%rax,%rdx
000000000001f2f0	call	*%r13
000000000001f2f3	movq	%r12,%rdi
000000000001f2f6	movq	0x0008657b(%rip),%rsi
000000000001f2fd	movq	%rbx,%rdx
000000000001f300	movq	0xc0(%rbp),%r15
000000000001f304	movq	%r15,%rcx
000000000001f307	call	*%r13
000000000001f30a	movq	%r12,%rdi
000000000001f30d	movq	%r14,%rsi
000000000001f310	call	*%r13
000000000001f313	movq	%rax,%rdi
000000000001f316	movq	0x0008649b(%rip),%rsi
000000000001f31d	movq	%rbx,%rdx
000000000001f320	call	*%r13
000000000001f323	movq	0xb8(%rbp),%rdi
000000000001f327	leaq	0x00088fd2(%rip),%rsi
000000000001f32e	movq	%rbx,%rdx
000000000001f331	movq	%r15,%rbx
000000000001f334	call	*0x00088fc6(%rip)
000000000001f33a	movq	%rbx,%rdi
000000000001f33d	movq	0x000864fc(%rip),%rsi
000000000001f344	call	*%r13
000000000001f347	testb	%al,%al
000000000001f349	jne	0x0001f18c
000000000001f34f	movl	0xb0(%rbp),%eax
000000000001f352	testb	%al,%al
000000000001f354	je	0x0001f372
000000000001f356	movl	0xcc(%rbp),%eax
000000000001f359	testb	%al,%al
000000000001f35b	jne	0x0001f372
000000000001f35d	movq	0x00086374(%rip),%rsi
000000000001f364	movq	0xd0(%rbp),%rdi
000000000001f368	movq	0xb8(%rbp),%rdx
000000000001f36c	call	*0x00064d66(%rip)
000000000001f372	movq	0x000856ff(%rip),%rsi
000000000001f379	movq	0xb8(%rbp),%rdi
000000000001f37d	addq	$0x28,%rsp
000000000001f381	popq	%rbx
000000000001f382	popq	%r12
000000000001f384	popq	%r13
000000000001f386	popq	%r14
000000000001f388	popq	%r15
000000000001f38a	popq	%rbp
000000000001f38b	jmp	*0x00064d47(%rip)
-[PBXLSDataValue usesCustomDataFormatters]:
000000000001f391	pushq	%rbp
000000000001f392	movq	%rsp,%rbp
000000000001f395	movl	$0x00000001,%eax
000000000001f39a	popq	%rbp
000000000001f39b	ret
-[PBXGDB_MIBaseVarObjCommand nextVarObj]:
000000000001f39c	pushq	%rbp
000000000001f39d	movq	%rsp,%rbp
000000000001f3a0	pushq	%r15
000000000001f3a2	pushq	%r14
000000000001f3a4	pushq	%rbx
000000000001f3a5	pushq	%rax
000000000001f3a6	movq	%rdi,%rbx
000000000001f3a9	movq	0x0008fb08(%rip),%rax
000000000001f3b0	movq	(%rbx,%rax),%rdi
000000000001f3b4	testq	%rdi,%rdi
000000000001f3b7	jne	0x0001f3ea
000000000001f3b9	movq	0x0008fb00(%rip),%rax
000000000001f3c0	cmpq	$0x00,(%rbx,%rax)
000000000001f3c5	je	0x0001f3ea
000000000001f3c7	xorb	%cl,%cl
000000000001f3c9	movq	0x0008faf8(%rip),%rax
000000000001f3d0	cmpq	$0x00,(%rbx,%rax)
000000000001f3d5	jne	0x0001f4c7
000000000001f3db	movq	$0x00000001,(%rbx,%rax)
000000000001f3e3	movb	$0x01,%cl
000000000001f3e5	jmp	0x0001f4c7
000000000001f3ea	leaq	0x00088f1f(%rip),%rsi
000000000001f3f1	call	*0x00088f19(%rip)
000000000001f3f7	xorb	%cl,%cl
000000000001f3f9	testq	%rax,%rax
000000000001f3fc	je	0x0001f4c7
000000000001f402	movq	0x0008fabf(%rip),%rcx
000000000001f409	movq	(%rbx,%rcx),%rsi
000000000001f40d	testq	%rsi,%rsi
000000000001f410	jne	0x0001f422
000000000001f412	xorl	%edx,%edx
000000000001f414	movq	0x0008faa5(%rip),%rdi
000000000001f41b	cmpq	$0x00,(%rbx,%rdi)
000000000001f420	je	0x0001f434
000000000001f422	incq	%rsi
000000000001f425	movq	%rsi,(%rbx,%rcx)
000000000001f429	movq	0x0008fa98(%rip),%rcx
000000000001f430	movq	(%rbx,%rcx),%rdx
000000000001f434	xorb	%cl,%cl
000000000001f436	cmpq	%rax,%rdx
000000000001f439	jae	0x0001f4c7
000000000001f43f	movq	0x0008fa72(%rip),%rax
000000000001f446	movq	(%rbx,%rax),%rdi
000000000001f44a	leaq	0x00088ecf(%rip),%rsi
000000000001f451	call	*0x00088ec9(%rip)
000000000001f457	movq	%rax,%r14
000000000001f45a	movq	0x0008567f(%rip),%rsi
000000000001f461	movq	0x00064c70(%rip),%r15
000000000001f468	movq	%r14,%rdi
000000000001f46b	call	*%r15
000000000001f46e	movq	0x0008fa4b(%rip),%rdx
000000000001f475	movq	%rax,%rdi
000000000001f478	movq	%rbx,%rsi
000000000001f47b	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001f480	leaq	0x00090c71(%rip),%rdx
000000000001f487	movq	0x0008fa32(%rip),%rax
000000000001f48e	movq	(%rbx,%rax),%rdi
000000000001f492	movq	0x0008563f(%rip),%rsi
000000000001f499	call	*%r15
000000000001f49c	movb	$0x01,%cl
000000000001f49e	testq	%rax,%rax
000000000001f4a1	jne	0x0001f4c7
000000000001f4a3	movq	0x0008fa16(%rip),%rdx
000000000001f4aa	movq	%r14,%rdi
000000000001f4ad	movq	%rbx,%rsi
000000000001f4b0	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000001f4b5	movq	0x00086384(%rip),%rsi
000000000001f4bc	movq	%rbx,%rdi
000000000001f4bf	call	*0x00064c13(%rip)
000000000001f4c5	movb	%al,%cl
000000000001f4c7	movsbl	%cl,%eax
000000000001f4ca	addq	$0x08,%rsp
000000000001f4ce	popq	%rbx
000000000001f4cf	popq	%r14
000000000001f4d1	popq	%r15
000000000001f4d3	popq	%rbp
000000000001f4d4	ret
-[PBXGDB_MIBaseVarObjCommand currentVarObjTypeExpressionString]:
000000000001f4d5	pushq	%rbp
000000000001f4d6	movq	%rsp,%rbp
000000000001f4d9	movq	0x00087248(%rip),%rsi
000000000001f4e0	leaq	0x000908f1(%rip),%rdx
000000000001f4e7	popq	%rbp
000000000001f4e8	jmp	*0x00064bea(%rip)
-[PBXGDB_MIBaseVarObjCommand _currentVarObjStringAttribute:]:
000000000001f4ee	pushq	%rbp
000000000001f4ef	movq	%rsp,%rbp
000000000001f4f2	movq	0x0008f9c7(%rip),%rax
000000000001f4f9	movq	(%rdi,%rax),%rdi
000000000001f4fd	movq	0x000855d4(%rip),%rsi
000000000001f504	call	*0x00064bce(%rip)
000000000001f50a	testq	%rax,%rax
000000000001f50d	jne	0x0001f513
000000000001f50f	xorl	%eax,%eax
000000000001f511	popq	%rbp
000000000001f512	ret
000000000001f513	movq	0x000855ee(%rip),%rsi
000000000001f51a	movq	%rax,%rdi
000000000001f51d	popq	%rbp
000000000001f51e	jmp	*0x00064bb4(%rip)
+[PBXGDB_VarObjDataValue2 initialize]:
000000000001f524	pushq	%rbp
000000000001f525	movq	%rsp,%rbp
000000000001f528	pushq	%r15
000000000001f52a	pushq	%r14
000000000001f52c	pushq	%rbx
000000000001f52d	subq	$0x000000d8,%rsp
000000000001f534	cmpq	$0x00,0x00098184(%rip)
000000000001f53c	je	0x0001f54c
000000000001f53e	addq	$0x000000d8,%rsp
000000000001f545	popq	%rbx
000000000001f546	popq	%r14
000000000001f548	popq	%r15
000000000001f54a	popq	%rbp
000000000001f54b	ret
000000000001f54c	movq	0x00087ced(%rip),%rsi
000000000001f553	movq	0x00089116(%rip),%rdi
000000000001f55a	leaq	0x000952f7(%rip),%r15
000000000001f561	leaq	0x00095310(%rip),%rax
000000000001f568	leaq	0x00095329(%rip),%rdx
000000000001f56f	leaq	0x00095242(%rip),%r8
000000000001f576	leaq	0x0009525b(%rip),%r10
000000000001f57d	leaq	0x00095294(%rip),%rbx
000000000001f584	leaq	0x000952ad(%rip),%rcx
000000000001f58b	leaq	0x000951a6(%rip),%r9
000000000001f592	movq	%rdx,0x000000c8(%rsp)
000000000001f59a	leaq	0x00093e37(%rip),%r11
000000000001f5a1	movq	%rax,0x000000c0(%rsp)
000000000001f5a9	leaq	0x000951a8(%rip),%r14
000000000001f5b0	movq	%r15,0x000000b8(%rsp)
000000000001f5b8	leaq	0x000951b9(%rip),%rdx
000000000001f5bf	movq	%rcx,0x000000b0(%rsp)
000000000001f5c7	leaq	0x000951ca(%rip),%rcx
000000000001f5ce	movq	%rbx,0x000000a8(%rsp)
000000000001f5d6	leaq	0x0009521b(%rip),%rax
000000000001f5dd	movq	%rax,0x000000a0(%rsp)
000000000001f5e5	leaq	0x000950ec(%rip),%r15
000000000001f5ec	movq	%r10,0x00000098(%rsp)
000000000001f5f4	leaq	0x000950fd(%rip),%rbx
000000000001f5fb	movq	%r8,0x00000090(%rsp)
000000000001f603	leaq	0x0009510e(%rip),%rax
000000000001f60a	movq	%rcx,0x00000088(%rsp)
000000000001f612	leaq	0x00094f7f(%rip),%r8
000000000001f619	movq	%rdx,0x00000080(%rsp)
000000000001f621	leaq	0x00094f90(%rip),%r10
000000000001f628	movq	%r14,0x78(%rsp)
000000000001f62d	leaq	0x00094fa4(%rip),%r14
000000000001f634	movq	%r11,0x70(%rsp)
000000000001f639	leaq	0x00094fb8(%rip),%r11
000000000001f640	movq	%r9,0x68(%rsp)
000000000001f645	leaq	0x00094fcc(%rip),%rcx
000000000001f64c	movq	%rax,0x60(%rsp)
000000000001f651	leaq	0x00094fe0(%rip),%rdx
000000000001f658	movq	%rbx,0x58(%rsp)
000000000001f65d	leaq	0x00094ff4(%rip),%rax
000000000001f664	movq	%r15,0x50(%rsp)
000000000001f669	leaq	0x00095048(%rip),%rbx
000000000001f670	movq	%rbx,0x48(%rsp)
000000000001f675	leaq	0x0009501c(%rip),%rbx
000000000001f67c	movq	%rbx,0x40(%rsp)
000000000001f681	leaq	0x00094ff0(%rip),%rbx
000000000001f688	movq	%rbx,0x38(%rsp)
000000000001f68d	movq	%rax,0x30(%rsp)
000000000001f692	movq	%rdx,0x28(%rsp)
000000000001f697	movq	%rcx,0x20(%rsp)
000000000001f69c	movq	%r11,0x18(%rsp)
000000000001f6a1	movq	%r14,0x10(%rsp)
000000000001f6a6	movq	%r10,0x08(%rsp)
000000000001f6ab	movq	%r8,(%rsp)
000000000001f6af	movq	$0x00000000,0x000000d0(%rsp)
000000000001f6bb	leaq	0x00094e56(%rip),%rdx
000000000001f6c2	leaq	0x00094e6f(%rip),%rcx
000000000001f6c9	leaq	0x00094e88(%rip),%r8
000000000001f6d0	leaq	0x00094ea1(%rip),%r9
000000000001f6d7	xorb	%al,%al
000000000001f6d9	call	*0x000649f9(%rip)
000000000001f6df	leaq	0x00097fda(%rip),%rsi
000000000001f6e6	movq	%rax,%rdi
000000000001f6e9	addq	$0x000000d8,%rsp
000000000001f6f0	popq	%rbx
000000000001f6f1	popq	%r14
000000000001f6f3	popq	%r15
000000000001f6f5	popq	%rbp
000000000001f6f6	jmp	0x0004e602	; symbol stub for: _objc_assign_global
+[PBXGDB_VarObjDataValue2 isSTLVectorType:]:
000000000001f6fb	pushq	%rbp
000000000001f6fc	movq	%rsp,%rbp
000000000001f6ff	pushq	%r15
000000000001f701	pushq	%r14
000000000001f703	pushq	%rbx
000000000001f704	pushq	%rax
000000000001f705	movq	%rdx,%rbx
000000000001f708	xorb	%cl,%cl
000000000001f70a	testq	%rbx,%rbx
000000000001f70d	je	0x0001f762
000000000001f70f	movq	0x00085bc2(%rip),%rsi
000000000001f716	leaq	0x000951db(%rip),%rdx
000000000001f71d	movq	%rbx,%rdi
000000000001f720	call	*0x000649b2(%rip)
000000000001f726	movq	%rax,%r14
000000000001f729	xorb	%cl,%cl
000000000001f72b	movq	$0x7fffffffffffffff,%r15
000000000001f735	cmpq	%r15,%r14
000000000001f738	je	0x0001f762
000000000001f73a	movq	0x00085b97(%rip),%rsi
000000000001f741	leaq	0x00093170(%rip),%rdx
000000000001f748	movq	%rbx,%rdi
000000000001f74b	call	*0x00064987(%rip)
000000000001f751	movb	$0x01,%cl
000000000001f753	cmpq	%r15,%rax
000000000001f756	je	0x0001f762
000000000001f758	cmpq	%rax,%r14
000000000001f75b	sbbl	%eax,%eax
000000000001f75d	andl	$0x01,%eax
000000000001f760	jmp	0x0001f765
000000000001f762	movzbl	%cl,%eax
000000000001f765	addq	$0x08,%rsp
000000000001f769	popq	%rbx
000000000001f76a	popq	%r14
000000000001f76c	popq	%r15
000000000001f76e	popq	%rbp
000000000001f76f	ret
+[PBXGDB_VarObjDataValue2 isNSArrayType:]:
000000000001f770	pushq	%rbp
000000000001f771	movq	%rsp,%rbp
000000000001f774	pushq	%r14
000000000001f776	pushq	%rbx
000000000001f777	movq	%rdx,%rbx
000000000001f77a	xorb	%cl,%cl
000000000001f77c	testq	%rbx,%rbx
000000000001f77f	je	0x0001f810
000000000001f785	movq	0x00085b4c(%rip),%rsi
000000000001f78c	leaq	0x00095185(%rip),%rdx
000000000001f793	movq	%rbx,%rdi
000000000001f796	call	*0x0006493c(%rip)
000000000001f79c	movb	$0x01,%cl
000000000001f79e	movq	$0x7fffffffffffffff,%r14
000000000001f7a8	cmpq	%r14,%rax
000000000001f7ab	jne	0x0001f810
000000000001f7ad	movq	0x00085b24(%rip),%rsi
000000000001f7b4	leaq	0x0009517d(%rip),%rdx
000000000001f7bb	movq	%rbx,%rdi
000000000001f7be	call	*0x00064914(%rip)
000000000001f7c4	movb	$0x01,%cl
000000000001f7c6	cmpq	%r14,%rax
000000000001f7c9	jne	0x0001f810
000000000001f7cb	movq	0x00085b06(%rip),%rsi
000000000001f7d2	leaq	0x0009517f(%rip),%rdx
000000000001f7d9	movq	%rbx,%rdi
000000000001f7dc	call	*0x000648f6(%rip)
000000000001f7e2	movb	$0x01,%cl
000000000001f7e4	movq	$0x7fffffffffffffff,%r14
000000000001f7ee	cmpq	%r14,%rax
000000000001f7f1	jne	0x0001f810
000000000001f7f3	movq	0x00085ade(%rip),%rsi
000000000001f7fa	leaq	0x00095177(%rip),%rdx
000000000001f801	movq	%rbx,%rdi
000000000001f804	call	*0x000648ce(%rip)
000000000001f80a	cmpq	%r14,%rax
000000000001f80d	setne	%cl
000000000001f810	movzbl	%cl,%eax
000000000001f813	popq	%rbx
000000000001f814	popq	%r14
000000000001f816	popq	%rbp
000000000001f817	ret
-[PBXGDB_MIBaseVarObjCommand currentVarObjTypeCode]:
000000000001f818	pushq	%rbp
000000000001f819	movq	%rsp,%rbp
000000000001f81c	pushq	%rbx
000000000001f81d	pushq	%rax
000000000001f81e	movq	%rdi,%rbx
000000000001f821	movq	0x00086f00(%rip),%rsi
000000000001f828	leaq	0x00090949(%rip),%rdx
000000000001f82f	call	*0x000648a3(%rip)
000000000001f835	movq	0x0008698c(%rip),%rsi
000000000001f83c	movq	%rbx,%rdi
000000000001f83f	movq	%rax,%rdx
000000000001f842	movq	0x0006488f(%rip),%rax
000000000001f849	addq	$0x08,%rsp
000000000001f84d	popq	%rbx
000000000001f84e	popq	%rbp
000000000001f84f	jmp	*%rax
-[PBXGDB_MIBaseVarObjCommand _typeCodeFromString:]:
000000000001f851	pushq	%rbp
000000000001f852	movq	%rsp,%rbp
000000000001f855	pushq	%rbx
000000000001f856	pushq	%rax
000000000001f857	movq	%rdx,%rbx
000000000001f85a	xorl	%eax,%eax
000000000001f85c	testq	%rbx,%rbx
000000000001f85f	je	0x0001fc0b
000000000001f865	leaq	0x00093e8c(%rip),%rdi
000000000001f86c	leaq	0x00088aed(%rip),%rsi
000000000001f873	movq	%rbx,%rdx
000000000001f876	call	*0x00088ae4(%rip)
000000000001f87c	movb	%al,%cl
000000000001f87e	movl	$0x00000001,%eax
000000000001f883	testb	%cl,%cl
000000000001f885	jne	0x0001fc0b
000000000001f88b	leaq	0x00093e66(%rip),%rdi
000000000001f892	leaq	0x00088ac7(%rip),%rsi
000000000001f899	movq	%rbx,%rdx
000000000001f89c	call	*0x00088abe(%rip)
000000000001f8a2	movb	%al,%cl
000000000001f8a4	movl	$0x00000001,%eax
000000000001f8a9	testb	%cl,%cl
000000000001f8ab	jne	0x0001fc0b
000000000001f8b1	leaq	0x00093e60(%rip),%rdi
000000000001f8b8	leaq	0x00088aa1(%rip),%rsi
000000000001f8bf	movq	%rbx,%rdx
000000000001f8c2	call	*0x00088a98(%rip)
000000000001f8c8	movb	%al,%cl
000000000001f8ca	movl	$0x00000002,%eax
000000000001f8cf	testb	%cl,%cl
000000000001f8d1	jne	0x0001fc0b
000000000001f8d7	leaq	0x00093e5a(%rip),%rdi
000000000001f8de	leaq	0x00088a7b(%rip),%rsi
000000000001f8e5	movq	%rbx,%rdx
000000000001f8e8	call	*0x00088a72(%rip)
000000000001f8ee	movb	%al,%cl
000000000001f8f0	movl	$0x00000003,%eax
000000000001f8f5	testb	%cl,%cl
000000000001f8f7	jne	0x0001fc0b
000000000001f8fd	leaq	0x00093e54(%rip),%rdi
000000000001f904	leaq	0x00088a55(%rip),%rsi
000000000001f90b	movq	%rbx,%rdx
000000000001f90e	call	*0x00088a4c(%rip)
000000000001f914	movb	%al,%cl
000000000001f916	movl	$0x00000005,%eax
000000000001f91b	testb	%cl,%cl
000000000001f91d	jne	0x0001fc0b
000000000001f923	leaq	0x00093e4e(%rip),%rdi
000000000001f92a	leaq	0x00088a2f(%rip),%rsi
000000000001f931	movq	%rbx,%rdx
000000000001f934	call	*0x00088a26(%rip)
000000000001f93a	movb	%al,%cl
000000000001f93c	movl	$0x00000006,%eax
000000000001f941	testb	%cl,%cl
000000000001f943	jne	0x0001fc0b
000000000001f949	leaq	0x00093e48(%rip),%rdi
000000000001f950	leaq	0x00088a09(%rip),%rsi
000000000001f957	movq	%rbx,%rdx
000000000001f95a	call	*0x00088a00(%rip)
000000000001f960	movb	%al,%cl
000000000001f962	movl	$0x00000007,%eax
000000000001f967	testb	%cl,%cl
000000000001f969	jne	0x0001fc0b
000000000001f96f	leaq	0x00093e42(%rip),%rdi
000000000001f976	leaq	0x000889e3(%rip),%rsi
000000000001f97d	movq	%rbx,%rdx
000000000001f980	call	*0x000889da(%rip)
000000000001f986	movb	%al,%cl
000000000001f988	movl	$0x00000008,%eax
000000000001f98d	testb	%cl,%cl
000000000001f98f	jne	0x0001fc0b
000000000001f995	leaq	0x00093e3c(%rip),%rdi
000000000001f99c	leaq	0x000889bd(%rip),%rsi
000000000001f9a3	movq	%rbx,%rdx
000000000001f9a6	call	*0x000889b4(%rip)
000000000001f9ac	movb	%al,%cl
000000000001f9ae	movl	$0x00000009,%eax
000000000001f9b3	testb	%cl,%cl
000000000001f9b5	jne	0x0001fc0b
000000000001f9bb	leaq	0x00093e36(%rip),%rdi
000000000001f9c2	leaq	0x00088997(%rip),%rsi
000000000001f9c9	movq	%rbx,%rdx
000000000001f9cc	call	*0x0008898e(%rip)
000000000001f9d2	movb	%al,%cl
000000000001f9d4	movl	$0x0000000a,%eax
000000000001f9d9	testb	%cl,%cl
000000000001f9db	jne	0x0001fc0b
000000000001f9e1	leaq	0x00093e30(%rip),%rdi
000000000001f9e8	leaq	0x00088971(%rip),%rsi
000000000001f9ef	movq	%rbx,%rdx
000000000001f9f2	call	*0x00088968(%rip)
000000000001f9f8	movb	%al,%cl
000000000001f9fa	movl	$0x0000000b,%eax
000000000001f9ff	testb	%cl,%cl
000000000001fa01	jne	0x0001fc0b
000000000001fa07	leaq	0x00093e2a(%rip),%rdi
000000000001fa0e	leaq	0x0008894b(%rip),%rsi
000000000001fa15	movq	%rbx,%rdx
000000000001fa18	call	*0x00088942(%rip)
000000000001fa1e	movb	%al,%cl
000000000001fa20	movl	$0x0000000c,%eax
000000000001fa25	testb	%cl,%cl
000000000001fa27	jne	0x0001fc0b
000000000001fa2d	leaq	0x00093e24(%rip),%rdi
000000000001fa34	leaq	0x00088925(%rip),%rsi
000000000001fa3b	movq	%rbx,%rdx
000000000001fa3e	call	*0x0008891c(%rip)
000000000001fa44	movb	%al,%cl
000000000001fa46	movl	$0x0000000d,%eax
000000000001fa4b	testb	%cl,%cl
000000000001fa4d	jne	0x0001fc0b
000000000001fa53	leaq	0x00093e1e(%rip),%rdi
000000000001fa5a	leaq	0x000888ff(%rip),%rsi
000000000001fa61	movq	%rbx,%rdx
000000000001fa64	call	*0x000888f6(%rip)
000000000001fa6a	movb	%al,%cl
000000000001fa6c	movl	$0x0000000e,%eax
000000000001fa71	testb	%cl,%cl
000000000001fa73	jne	0x0001fc0b
000000000001fa79	leaq	0x00093e18(%rip),%rdi
000000000001fa80	leaq	0x000888d9(%rip),%rsi
000000000001fa87	movq	%rbx,%rdx
000000000001fa8a	call	*0x000888d0(%rip)
000000000001fa90	movb	%al,%cl
000000000001fa92	movl	$0x0000000f,%eax
000000000001fa97	testb	%cl,%cl
000000000001fa99	jne	0x0001fc0b
000000000001fa9f	leaq	0x00093e12(%rip),%rdi
000000000001faa6	leaq	0x000888b3(%rip),%rsi
000000000001faad	movq	%rbx,%rdx
000000000001fab0	call	*0x000888aa(%rip)
000000000001fab6	movb	%al,%cl
000000000001fab8	movl	$0x00000010,%eax
000000000001fabd	testb	%cl,%cl
000000000001fabf	jne	0x0001fc0b
000000000001fac5	leaq	0x00093e0c(%rip),%rdi
000000000001facc	leaq	0x0008888d(%rip),%rsi
000000000001fad3	movq	%rbx,%rdx
000000000001fad6	call	*0x00088884(%rip)
000000000001fadc	movb	%al,%cl
000000000001fade	movl	$0x00000011,%eax
000000000001fae3	testb	%cl,%cl
000000000001fae5	jne	0x0001fc0b
000000000001faeb	leaq	0x00093e06(%rip),%rdi
000000000001faf2	leaq	0x00088867(%rip),%rsi
000000000001faf9	movq	%rbx,%rdx
000000000001fafc	call	*0x0008885e(%rip)
000000000001fb02	movb	%al,%cl
000000000001fb04	movl	$0x00000012,%eax
000000000001fb09	testb	%cl,%cl
000000000001fb0b	jne	0x0001fc0b
000000000001fb11	leaq	0x00093e00(%rip),%rdi
000000000001fb18	leaq	0x00088841(%rip),%rsi
000000000001fb1f	movq	%rbx,%rdx
000000000001fb22	call	*0x00088838(%rip)
000000000001fb28	movb	%al,%cl
000000000001fb2a	movl	$0x00000013,%eax
000000000001fb2f	testb	%cl,%cl
000000000001fb31	jne	0x0001fc0b
000000000001fb37	leaq	0x00093dfa(%rip),%rdi
000000000001fb3e	leaq	0x0008881b(%rip),%rsi
000000000001fb45	movq	%rbx,%rdx
000000000001fb48	call	*0x00088812(%rip)
000000000001fb4e	movb	%al,%cl
000000000001fb50	movl	$0x00000014,%eax
000000000001fb55	testb	%cl,%cl
000000000001fb57	jne	0x0001fc0b
000000000001fb5d	leaq	0x00093df4(%rip),%rdi
000000000001fb64	leaq	0x000887f5(%rip),%rsi
000000000001fb6b	movq	%rbx,%rdx
000000000001fb6e	call	*0x000887ec(%rip)
000000000001fb74	movb	%al,%cl
000000000001fb76	movl	$0x00000015,%eax
000000000001fb7b	testb	%cl,%cl
000000000001fb7d	jne	0x0001fc0b
000000000001fb83	leaq	0x00093dee(%rip),%rdi
000000000001fb8a	leaq	0x000887cf(%rip),%rsi
000000000001fb91	movq	%rbx,%rdx
000000000001fb94	call	*0x000887c6(%rip)
000000000001fb9a	movb	%al,%cl
000000000001fb9c	movl	$0x00000016,%eax
000000000001fba1	testb	%cl,%cl
000000000001fba3	jne	0x0001fc0b
000000000001fba5	leaq	0x00093dec(%rip),%rdi
000000000001fbac	leaq	0x000887ad(%rip),%rsi
000000000001fbb3	movq	%rbx,%rdx
000000000001fbb6	call	*0x000887a4(%rip)
000000000001fbbc	movb	%al,%cl
000000000001fbbe	movl	$0x00000017,%eax
000000000001fbc3	testb	%cl,%cl
000000000001fbc5	jne	0x0001fc0b
000000000001fbc7	leaq	0x00093dea(%rip),%rdi
000000000001fbce	leaq	0x0008878b(%rip),%rsi
000000000001fbd5	movq	%rbx,%rdx
000000000001fbd8	call	*0x00088782(%rip)
000000000001fbde	movb	%al,%cl
000000000001fbe0	movl	$0x00000018,%eax
000000000001fbe5	testb	%cl,%cl
000000000001fbe7	jne	0x0001fc0b
000000000001fbe9	leaq	0x00093de8(%rip),%rdi
000000000001fbf0	leaq	0x00088769(%rip),%rsi
000000000001fbf7	movq	%rbx,%rdx
000000000001fbfa	call	*0x00088760(%rip)
000000000001fc00	testb	%al,%al
000000000001fc02	setne	%al
000000000001fc05	movzbl	%al,%eax
000000000001fc08	shll	$0x02,%eax
000000000001fc0b	addq	$0x08,%rsp
000000000001fc0f	popq	%rbx
000000000001fc10	popq	%rbp
000000000001fc11	ret
+[PBXGDB_VarObjDataValue2 isArrayType:name:type:]:
000000000001fc12	pushq	%rbp
000000000001fc13	movq	%rsp,%rbp
000000000001fc16	pushq	%r15
000000000001fc18	pushq	%r14
000000000001fc1a	pushq	%r12
000000000001fc1c	pushq	%rbx
000000000001fc1d	movq	%r8,%rbx
000000000001fc20	movq	%rcx,%r15
000000000001fc23	movl	%edx,%r14d
000000000001fc26	movq	0x000856bb(%rip),%rsi
000000000001fc2d	leaq	0x00094ca4(%rip),%rdx
000000000001fc34	movq	%rbx,%rdi
000000000001fc37	call	*0x0006449b(%rip)
000000000001fc3d	cmpb	$0x01,%al
000000000001fc3f	jne	0x0001fcb3
000000000001fc41	movq	0x000856a8(%rip),%rsi
000000000001fc48	leaq	0x00094c89(%rip),%rdx
000000000001fc4f	movq	%rbx,%rdi
000000000001fc52	call	*0x00064480(%rip)
000000000001fc58	movq	%rax,%rbx
000000000001fc5b	leaq	0x0008868e(%rip),%rsi
000000000001fc62	movq	%rbx,%rdi
000000000001fc65	call	*0x00088685(%rip)
000000000001fc6b	cmpq	$0x02,%rax
000000000001fc6f	jb	0x0001fcb3
000000000001fc71	movq	0x000855e8(%rip),%rsi
000000000001fc78	movq	0x00064459(%rip),%r12
000000000001fc7f	movq	%rbx,%rdi
000000000001fc82	movl	$0x00000001,%edx
000000000001fc87	call	*%r12
000000000001fc8a	movq	%rax,%rbx
000000000001fc8d	movq	0x000875f4(%rip),%rsi
000000000001fc94	movq	%rbx,%rdi
000000000001fc97	call	*%r12
000000000001fc9a	leaq	0x000886bf(%rip),%rsi
000000000001fca1	movq	%rbx,%rdi
000000000001fca4	movq	%rax,%rdx
000000000001fca7	call	*0x000886b3(%rip)
000000000001fcad	xorb	%bl,%bl
000000000001fcaf	testb	%al,%al
000000000001fcb1	jne	0x0001fcee
000000000001fcb3	cmpl	$0x02,%r14d
000000000001fcb7	setne	%al
000000000001fcba	sete	%bl
000000000001fcbd	testq	%r15,%r15
000000000001fcc0	je	0x0001fcee
000000000001fcc2	testb	%al,%al
000000000001fcc4	jne	0x0001fcee
000000000001fcc6	movq	0x0008560b(%rip),%rsi
000000000001fccd	leaq	0x00093de4(%rip),%rdx
000000000001fcd4	movq	%r15,%rdi
000000000001fcd7	call	*0x000643fb(%rip)
000000000001fcdd	movq	$0x7fffffffffffffff,%rcx
000000000001fce7	cmpq	%rcx,%rax
000000000001fcea	je	0x0001fcee
000000000001fcec	xorb	%bl,%bl
000000000001fcee	movzbl	%bl,%eax
000000000001fcf1	popq	%rbx
000000000001fcf2	popq	%r12
000000000001fcf4	popq	%r14
000000000001fcf6	popq	%r15
000000000001fcf8	popq	%rbp
000000000001fcf9	ret
-[PBXGDB_BaseDataValueSequence createVarObjDataValue]:
000000000001fcfa	pushq	%rbp
000000000001fcfb	movq	%rsp,%rbp
000000000001fcfe	pushq	%r14
000000000001fd00	pushq	%rbx
000000000001fd01	movq	%rdi,%r14
000000000001fd04	movq	0x000888f5(%rip),%rdi
000000000001fd0b	leaq	0x000885ce(%rip),%rsi
000000000001fd12	call	*0x000885c8(%rip)
000000000001fd18	movq	%rax,%rbx
000000000001fd1b	movq	0x00084d96(%rip),%rsi
000000000001fd22	movq	%r14,%rdi
000000000001fd25	call	*0x000643ad(%rip)
000000000001fd2b	movq	0x0008501e(%rip),%rsi
000000000001fd32	movq	%rbx,%rdi
000000000001fd35	movq	%rax,%rdx
000000000001fd38	movq	0x00064399(%rip),%rax
000000000001fd3f	popq	%rbx
000000000001fd40	popq	%r14
000000000001fd42	popq	%rbp
000000000001fd43	jmp	*%rax
-[PBXGDB_BaseDataValueSequence setDataValue:fromVarObjCommand:]:
000000000001fd45	pushq	%rbp
000000000001fd46	movq	%rsp,%rbp
000000000001fd49	pushq	%r15
000000000001fd4b	pushq	%r14
000000000001fd4d	pushq	%r13
000000000001fd4f	pushq	%r12
000000000001fd51	pushq	%rbx
000000000001fd52	pushq	%rax
000000000001fd53	movq	%rcx,%r13
000000000001fd56	movq	%rdx,%r12
000000000001fd59	movq	%rdi,%r15
000000000001fd5c	movq	0x00085a65(%rip),%rsi
000000000001fd63	movq	0x0006436e(%rip),%r14
000000000001fd6a	movq	%r13,%rdi
000000000001fd6d	call	*%r14
000000000001fd70	movq	0x00084fe1(%rip),%rsi
000000000001fd77	movq	%r12,%rdi
000000000001fd7a	movq	%rax,%rdx
000000000001fd7d	call	*%r14
000000000001fd80	movq	0x00085a49(%rip),%rsi
000000000001fd87	movq	%r13,%rdi
000000000001fd8a	call	*%r14
000000000001fd8d	movq	%rax,0xd0(%rbp)
000000000001fd91	movq	0x00085a40(%rip),%rsi
000000000001fd98	movq	%r13,%rdi
000000000001fd9b	call	*%r14
000000000001fd9e	movq	%rax,%rbx
000000000001fda1	movq	0x00085a38(%rip),%rsi
000000000001fda8	movq	%r13,%rdi
000000000001fdab	call	*%r14
000000000001fdae	movq	0x00085a33(%rip),%rsi
000000000001fdb5	movq	%r15,%rdi
000000000001fdb8	movq	%r12,%rdx
000000000001fdbb	movq	0xd0(%rbp),%rcx
000000000001fdbf	movq	%rbx,%r8
000000000001fdc2	movl	%eax,%r9d
000000000001fdc5	call	*%r14
000000000001fdc8	movq	0x00085a21(%rip),%rsi
000000000001fdcf	movq	%r13,%rdi
000000000001fdd2	call	*%r14
000000000001fdd5	testb	%al,%al
000000000001fdd7	je	0x0001fdfd
000000000001fdd9	movq	0x00085a18(%rip),%rsi
000000000001fde0	movq	0x000642f1(%rip),%rbx
000000000001fde7	movq	%r13,%rdi
000000000001fdea	call	*%rbx
000000000001fdec	movsbl	%al,%edx
000000000001fdef	movq	0x000858da(%rip),%rsi
000000000001fdf6	movq	%r12,%rdi
000000000001fdf9	call	*%rbx
000000000001fdfb	jmp	0x0001fe12
000000000001fdfd	movq	0x000858cc(%rip),%rsi
000000000001fe04	movq	%r12,%rdi
000000000001fe07	movl	$0x00000001,%edx
000000000001fe0c	call	*0x000642c6(%rip)
000000000001fe12	movq	0x00085757(%rip),%rsi
000000000001fe19	movq	0x000642b8(%rip),%r14
000000000001fe20	movq	%r15,%rdi
000000000001fe23	call	*%r14
000000000001fe26	movq	%rax,%rbx
000000000001fe29	movq	0x00085818(%rip),%rsi
000000000001fe30	movq	%r13,%rdi
000000000001fe33	call	*%r14
000000000001fe36	movq	0x000859c3(%rip),%rsi
000000000001fe3d	movq	%rbx,%rdi
000000000001fe40	movq	%rax,%rdx
000000000001fe43	movq	%r12,%rcx
000000000001fe46	call	*%r14
000000000001fe49	movq	0x000859b8(%rip),%rsi
000000000001fe50	movq	%r13,%rdi
000000000001fe53	call	*%r14
000000000001fe56	testq	%rax,%rax
000000000001fe59	movl	$0x00000000,%ebx
000000000001fe5e	cmovnsq	%rax,%rbx
000000000001fe62	movq	0x000859a7(%rip),%rsi
000000000001fe69	testq	%rbx,%rbx
000000000001fe6c	jle	0x0001fea9
000000000001fe6e	movq	0x00064263(%rip),%r14
000000000001fe75	movq	%r12,%rdi
000000000001fe78	movl	$0x00000001,%edx
000000000001fe7d	call	*%r14
000000000001fe80	movq	0x00085991(%rip),%rsi
000000000001fe87	movq	%r12,%rdi
000000000001fe8a	movq	%rbx,%rdx
000000000001fe8d	call	*%r14
000000000001fe90	movq	0x000856f9(%rip),%rsi
000000000001fe97	movq	%r12,%rdi
000000000001fe9a	call	*%r14
000000000001fe9d	cmpl	$0x02,%eax
000000000001fea0	jne	0x0001feb4
000000000001fea2	movq	0x000856ef(%rip),%rsi
000000000001fea9	movq	%r12,%rdi
000000000001feac	xorl	%edx,%edx
000000000001feae	call	*0x00064224(%rip)
000000000001feb4	movq	0x000855bd(%rip),%rsi
000000000001febb	movq	%r13,%rdi
000000000001febe	call	*0x00064214(%rip)
000000000001fec4	movq	%rax,%rbx
000000000001fec7	testq	%rbx,%rbx
000000000001feca	je	0x0001fee7
000000000001fecc	leaq	0x0008848d(%rip),%rsi
000000000001fed3	leaq	0x00090c5e(%rip),%rdx
000000000001feda	movq	%rbx,%rdi
000000000001fedd	call	*0x0008847d(%rip)
000000000001fee3	cmpb	$0x01,%al
000000000001fee5	jne	0x0001ff09
000000000001fee7	movq	0x00085632(%rip),%rsi
000000000001feee	movq	0x000641e3(%rip),%rbx
000000000001fef5	movq	%r12,%rdi
000000000001fef8	call	*%rbx
000000000001fefa	movq	0x00085577(%rip),%rsi
000000000001ff01	movq	%rax,%rdi
000000000001ff04	call	*%rbx
000000000001ff06	movq	%rax,%rbx
000000000001ff09	movq	0x00085910(%rip),%rsi
000000000001ff10	movq	0x000641c1(%rip),%r14
000000000001ff17	movq	%r12,%rdi
000000000001ff1a	movq	%rbx,%rdx
000000000001ff1d	call	*%r14
000000000001ff20	movq	0x00085901(%rip),%rsi
000000000001ff27	movq	%r13,%rdi
000000000001ff2a	call	*%r14
000000000001ff2d	movq	%rax,%rbx
000000000001ff30	testq	%rbx,%rbx
000000000001ff33	jne	0x0001ff44
000000000001ff35	addq	$0x08,%rsp
000000000001ff39	popq	%rbx
000000000001ff3a	popq	%r12
000000000001ff3c	popq	%r13
000000000001ff3e	popq	%r14
000000000001ff40	popq	%r15
000000000001ff42	popq	%rbp
000000000001ff43	ret
000000000001ff44	movq	0x00084b6d(%rip),%rsi
000000000001ff4b	movq	%r15,%rdi
000000000001ff4e	call	*0x00064184(%rip)
000000000001ff54	movq	0x0008585d(%rip),%rsi
000000000001ff5b	movq	%rax,%rdi
000000000001ff5e	movq	%r12,%rdx
000000000001ff61	call	*0x00064171(%rip)
000000000001ff67	movq	0x00085652(%rip),%rsi
000000000001ff6e	movq	%r12,%rdi
000000000001ff71	movq	%rbx,%rdx
000000000001ff74	call	*0x0006415e(%rip)
000000000001ff7a	movq	0x0008565f(%rip),%rsi
000000000001ff81	movq	%r12,%rdi
000000000001ff84	movl	$0x00000002,%edx
000000000001ff89	movq	0x00064148(%rip),%rax
000000000001ff90	addq	$0x08,%rsp
000000000001ff94	popq	%rbx
000000000001ff95	popq	%r12
000000000001ff97	popq	%r13
000000000001ff99	popq	%r14
000000000001ff9b	popq	%r15
000000000001ff9d	popq	%rbp
000000000001ff9e	jmp	*%rax
-[PBXGDB_MIBaseVarObjCommand currentVarObjExpressionString]:
000000000001ffa0	pushq	%rbp
000000000001ffa1	movq	%rsp,%rbp
000000000001ffa4	movq	0x0008677d(%rip),%rsi
000000000001ffab	leaq	0x00090026(%rip),%rdx
000000000001ffb2	popq	%rbp
000000000001ffb3	jmp	*0x0006411f(%rip)
-[PBXGDB_MIBaseVarObjCommand currentVarObjDynamicTypeExpressionString]:
000000000001ffb9	pushq	%rbp
000000000001ffba	movq	%rsp,%rbp
000000000001ffbd	movq	0x00086764(%rip),%rsi
000000000001ffc4	leaq	0x0009038d(%rip),%rdx
000000000001ffcb	popq	%rbp
000000000001ffcc	jmp	*0x00064106(%rip)
-[PBXGDB_BaseDataValueSequence _setupTypeInfoForDV:fromBaseTypeExpressionString:dynamicTypeExpressionString:typeCode:]:
000000000001ffd2	pushq	%rbp
000000000001ffd3	movq	%rsp,%rbp
000000000001ffd6	pushq	%r15
000000000001ffd8	pushq	%r14
000000000001ffda	pushq	%r13
000000000001ffdc	pushq	%r12
000000000001ffde	pushq	%rbx
000000000001ffdf	subq	$0x28,%rsp
000000000001ffe3	movl	%r9d,%r13d
000000000001ffe6	movq	%r8,%r12
000000000001ffe9	movq	%rcx,%r15
000000000001ffec	movq	%rdx,0xc0(%rbp)
000000000001fff0	movq	%rdi,0xb8(%rbp)
000000000001fff4	movq	0x00084abd(%rip),%rsi
000000000001fffb	movq	0x000640d6(%rip),%rbx
0000000000020002	call	*%rbx
0000000000020004	movq	0x00085755(%rip),%rsi
000000000002000b	movq	%rax,%rdi
000000000002000e	call	*%rbx
0000000000020010	xorl	%r14d,%r14d
0000000000020013	testq	%r15,%r15
0000000000020016	jne	0x00020024
0000000000020018	movq	%rax,0xc8(%rbp)
000000000002001c	movl	%r13d,%ebx
000000000002001f	jmp	0x000200ea
0000000000020024	movq	%rax,0xc8(%rbp)
0000000000020028	testl	%r13d,%r13d
000000000002002b	movl	%r13d,%ebx
000000000002002e	je	0x000200ea
0000000000020034	movq	0x000852ad(%rip),%rsi
000000000002003b	leaq	0x00090ad6(%rip),%rdx
0000000000020042	movq	%r15,%rdi
0000000000020045	call	*0x0006408d(%rip)
000000000002004b	testb	%al,%al
000000000002004d	jne	0x00020054
000000000002004f	movl	%ebx,0xd4(%rbp)
0000000000020052	jmp	0x00020085
0000000000020054	movl	%ebx,0xd4(%rbp)
0000000000020057	leaq	0x00088292(%rip),%rsi
000000000002005e	movq	%r15,%rdi
0000000000020061	call	*0x00088289(%rip)
0000000000020067	cmpq	$0x07,%rax
000000000002006b	jb	0x00020085
000000000002006d	movq	0x00084ab4(%rip),%rsi
0000000000020074	movq	%r15,%rdi
0000000000020077	movl	$0x00000006,%edx
000000000002007c	call	*0x00064056(%rip)
0000000000020082	movq	%rax,%r15
0000000000020085	movq	0x000856dc(%rip),%rsi
000000000002008c	movq	0xc8(%rbp),%r13
0000000000020090	movq	%r13,%rdi
0000000000020093	movq	%r15,%rdx
0000000000020096	call	*0x0006403c(%rip)
000000000002009c	movq	%rax,%r14
000000000002009f	testq	%r14,%r14
00000000000200a2	jne	0x000200cf
00000000000200a4	movq	0x000856c5(%rip),%rsi
00000000000200ab	movq	0x00064026(%rip),%rbx
00000000000200b2	movq	%r13,%rdi
00000000000200b5	movq	%r15,%rdx
00000000000200b8	call	*%rbx
00000000000200ba	movq	%rax,%r14
00000000000200bd	movq	0x000856b4(%rip),%rsi
00000000000200c4	movq	%r13,%rdi
00000000000200c7	movq	%r14,%rdx
00000000000200ca	movq	%r15,%rcx
00000000000200cd	call	*%rbx
00000000000200cf	movq	%r13,0xc8(%rbp)
00000000000200d3	movq	0x000856a6(%rip),%rsi
00000000000200da	movq	0xc0(%rbp),%rdi
00000000000200de	movq	%r14,%rdx
00000000000200e1	call	*0x00063ff1(%rip)
00000000000200e7	movl	0xd4(%rbp),%ebx
00000000000200ea	testq	%r12,%r12
00000000000200ed	je	0x000201fb
00000000000200f3	leaq	0x00088266(%rip),%rsi
00000000000200fa	leaq	0x0008f837(%rip),%rdx
0000000000020101	movq	%r12,%rdi
0000000000020104	call	*0x00088256(%rip)
000000000002010a	testb	%al,%al
000000000002010c	jne	0x000201fb
0000000000020112	movq	0x000851cf(%rip),%rsi
0000000000020119	leaq	0x000909f8(%rip),%rdx
0000000000020120	movq	%r12,%rdi
0000000000020123	call	*0x00063faf(%rip)
0000000000020129	testb	%al,%al
000000000002012b	jne	0x00020132
000000000002012d	movl	%ebx,0xd4(%rbp)
0000000000020130	jmp	0x00020163
0000000000020132	leaq	0x000881b7(%rip),%rsi
0000000000020139	movq	%r12,%rdi
000000000002013c	call	*0x000881ae(%rip)
0000000000020142	cmpq	$0x07,%rax
0000000000020146	jb	0x0002012d
0000000000020148	movl	%ebx,0xd4(%rbp)
000000000002014b	movq	0x000849d6(%rip),%rsi
0000000000020152	movq	%r12,%rdi
0000000000020155	movl	$0x00000006,%edx
000000000002015a	call	*0x00063f78(%rip)
0000000000020160	movq	%rax,%r12
0000000000020163	movq	0x000855fe(%rip),%rsi
000000000002016a	movq	0xc8(%rbp),%r13
000000000002016e	movq	%r13,%rdi
0000000000020171	movq	%r12,%rdx
0000000000020174	call	*0x00063f5e(%rip)
000000000002017a	movq	%rax,%rbx
000000000002017d	testq	%rbx,%rbx
0000000000020180	jne	0x000201bf
0000000000020182	movq	0x000855e7(%rip),%rsi
0000000000020189	movq	0x00063f48(%rip),%r15
0000000000020190	movq	%r13,%rdi
0000000000020193	movq	%r12,%rdx
0000000000020196	call	*%r15
0000000000020199	movq	%rax,%rbx
000000000002019c	movq	0x000855d5(%rip),%rsi
00000000000201a3	movq	%r13,%rdi
00000000000201a6	movq	%rbx,%rdx
00000000000201a9	movq	%r12,%rcx
00000000000201ac	call	*%r15
00000000000201af	movq	0x000855d2(%rip),%rsi
00000000000201b6	movq	%r14,%rdi
00000000000201b9	movq	%rbx,%rdx
00000000000201bc	call	*%r15
00000000000201bf	movq	0x000855ca(%rip),%rsi
00000000000201c6	movq	0x00063f0b(%rip),%r14
00000000000201cd	movq	0xc0(%rbp),%r15
00000000000201d1	movq	%r15,%rdi
00000000000201d4	movq	%rbx,%rdx
00000000000201d7	call	*%r14
00000000000201da	movq	0x0008538f(%rip),%rsi
00000000000201e1	movq	0xb8(%rbp),%rdi
00000000000201e5	call	*%r14
00000000000201e8	movq	0x000855a9(%rip),%rsi
00000000000201ef	movq	%rax,%rdi
00000000000201f2	movq	%r15,%rdx
00000000000201f5	call	*%r14
00000000000201f8	movl	0xd4(%rbp),%ebx
00000000000201fb	movq	0x0008559e(%rip),%rsi
0000000000020202	movq	0xc0(%rbp),%rdi
0000000000020206	movl	%ebx,%edx
0000000000020208	addq	$0x28,%rsp
000000000002020c	popq	%rbx
000000000002020d	popq	%r12
000000000002020f	popq	%r13
0000000000020211	popq	%r14
0000000000020213	popq	%r15
0000000000020215	popq	%rbp
0000000000020216	jmp	*0x00063ebc(%rip)
-[PBXGDB_Adaptor CTypeController]:
000000000002021c	pushq	%rbp
000000000002021d	movq	%rsp,%rbp
0000000000020220	movq	0x00084bc1(%rip),%rsi
0000000000020227	popq	%rbp
0000000000020228	jmp	*0x00063eaa(%rip)
-[PBXLSDebuggerAdaptor typeController]:
000000000002022e	pushq	%rbp
000000000002022f	movq	%rsp,%rbp
0000000000020232	movq	0x0008f257(%rip),%rax
0000000000020239	movq	(%rdi,%rax),%rax
000000000002023d	popq	%rbp
000000000002023e	ret
-[PBXGDB_CTypeController typeByExpressionString:]:
000000000002023f	pushq	%rbp
0000000000020240	movq	%rsp,%rbp
0000000000020243	movq	0x00085d4e(%rip),%rsi
000000000002024a	xorl	%ecx,%ecx
000000000002024c	popq	%rbp
000000000002024d	jmp	*0x00063e85(%rip)
-[PBXGDB_SyntheticDataValue setBaseType:]:
0000000000020253	pushq	%rbp
0000000000020254	movq	%rsp,%rbp
0000000000020257	pushq	%rbx
0000000000020258	subq	$0x18,%rsp
000000000002025c	movq	%rdi,%rbx
000000000002025f	movq	%rbx,0xe8(%rbp)
0000000000020263	movq	0x00088d0e(%rip),%rax
000000000002026a	movq	%rax,0xf0(%rbp)
000000000002026e	movq	0x0008550b(%rip),%rsi
0000000000020275	leaq	0xe8(%rbp),%rdi
0000000000020279	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000002027e	movq	0x00086c9b(%rip),%rsi
0000000000020285	movq	%rbx,%rdi
0000000000020288	call	*0x00063e4a(%rip)
000000000002028e	addq	$0x18,%rsp
0000000000020292	popq	%rbx
0000000000020293	popq	%rbp
0000000000020294	ret
-[PBXLSDataValue setBaseType:]:
0000000000020295	pushq	%rbp
0000000000020296	movq	%rsp,%rbp
0000000000020299	pushq	%rbx
000000000002029a	pushq	%rax
000000000002029b	movq	%rdi,%rbx
000000000002029e	movq	0x0008ef03(%rip),%rax
00000000000202a5	cmpq	%rdx,(%rbx,%rax)
00000000000202a9	jne	0x000202b2
00000000000202ab	addq	$0x08,%rsp
00000000000202af	popq	%rbx
00000000000202b0	popq	%rbp
00000000000202b1	ret
00000000000202b2	movq	0x0008eef7(%rip),%rax
00000000000202b9	movl	$0x00000001,(%rbx,%rax)
00000000000202c0	movq	0x0008eee1(%rip),%rax
00000000000202c7	movq	%rdx,%rdi
00000000000202ca	movq	%rbx,%rsi
00000000000202cd	movq	%rax,%rdx
00000000000202d0	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000202d5	movq	0x00085bbc(%rip),%rsi
00000000000202dc	movq	%rbx,%rdi
00000000000202df	call	*0x00063df3(%rip)
00000000000202e5	movq	0x0008eebc(%rip),%rcx
00000000000202ec	movq	(%rbx,%rcx),%rdx
00000000000202f0	movq	0x00087091(%rip),%rsi
00000000000202f7	movq	%rax,%rdi
00000000000202fa	movq	0x00063dd7(%rip),%rax
0000000000020301	addq	$0x08,%rsp
0000000000020305	popq	%rbx
0000000000020306	popq	%rbp
0000000000020307	jmp	*%rax
-[PBXGDB_SyntheticDataValue _updateToStaticType]:
0000000000020309	pushq	%rbp
000000000002030a	movq	%rsp,%rbp
000000000002030d	pushq	%r14
000000000002030f	pushq	%rbx
0000000000020310	movq	%rdi,%rbx
0000000000020313	movq	0x00086bee(%rip),%rsi
000000000002031a	movq	0x00063db7(%rip),%r14
0000000000020321	call	*%r14
0000000000020324	movq	0x00086be5(%rip),%rsi
000000000002032b	movq	%rax,%rdi
000000000002032e	call	*%r14
0000000000020331	movq	0x00086be0(%rip),%rsi
0000000000020338	movq	%rbx,%rdi
000000000002033b	testq	%rax,%rax
000000000002033e	je	0x0002034f
0000000000020340	movl	$0x00000001,%edx
0000000000020345	popq	%rbx
0000000000020346	popq	%r14
0000000000020348	popq	%rbp
0000000000020349	jmp	*0x00063d89(%rip)
000000000002034f	xorl	%edx,%edx
0000000000020351	jmp	0x00020345
-[PBXLSDataValue staticType]:
0000000000020353	pushq	%rbp
0000000000020354	movq	%rsp,%rbp
0000000000020357	pushq	%rbx
0000000000020358	pushq	%rax
0000000000020359	movq	%rdi,%rbx
000000000002035c	movq	0x0008703d(%rip),%rsi
0000000000020363	call	*0x00063d6f(%rip)
0000000000020369	testq	%rax,%rax
000000000002036c	je	0x00020375
000000000002036e	addq	$0x08,%rsp
0000000000020372	popq	%rbx
0000000000020373	popq	%rbp
0000000000020374	ret
0000000000020375	movq	0x00085104(%rip),%rsi
000000000002037c	movq	%rbx,%rdi
000000000002037f	addq	$0x08,%rsp
0000000000020383	popq	%rbx
0000000000020384	popq	%rbp
0000000000020385	jmp	*0x00063d4d(%rip)
-[PBXLSDataValue viewAsType]:
000000000002038b	pushq	%rbp
000000000002038c	movq	%rsp,%rbp
000000000002038f	movq	0x0008ee22(%rip),%rax
0000000000020396	movq	(%rdi,%rax),%rax
000000000002039a	popq	%rbp
000000000002039b	ret
-[PBXLSDataValue baseType]:
000000000002039c	pushq	%rbp
000000000002039d	movq	%rsp,%rbp
00000000000203a0	movq	0x0008ee01(%rip),%rax
00000000000203a7	movq	(%rdi,%rax),%rax
00000000000203ab	popq	%rbp
00000000000203ac	ret
-[PBXGDB_CType summaryDescriptionDictionaryViaSuperclass]:
00000000000203ad	pushq	%rbp
00000000000203ae	movq	%rsp,%rbp
00000000000203b1	pushq	%rbx
00000000000203b2	pushq	%rax
00000000000203b3	movq	%rdi,%rbx
00000000000203b6	movq	0x00086f5b(%rip),%rsi
00000000000203bd	call	*0x00063d15(%rip)
00000000000203c3	testq	%rax,%rax
00000000000203c6	je	0x000203dd
00000000000203c8	movq	0x00086f51(%rip),%rsi
00000000000203cf	movq	%rax,%rdi
00000000000203d2	call	*0x00063d00(%rip)
00000000000203d8	testq	%rax,%rax
00000000000203db	jne	0x000203f7
00000000000203dd	movq	0x00086f44(%rip),%rsi
00000000000203e4	movq	%rbx,%rdi
00000000000203e7	call	*0x00063ceb(%rip)
00000000000203ed	movq	%rax,%rcx
00000000000203f0	xorl	%eax,%eax
00000000000203f2	testq	%rcx,%rcx
00000000000203f5	jne	0x000203fe
00000000000203f7	addq	$0x08,%rsp
00000000000203fb	popq	%rbx
00000000000203fc	popq	%rbp
00000000000203fd	ret
00000000000203fe	movq	0x00086f23(%rip),%rsi
0000000000020405	movq	%rbx,%rdi
0000000000020408	call	*0x00063cca(%rip)
000000000002040e	movq	0x00086afb(%rip),%rsi
0000000000020415	movq	%rax,%rdi
0000000000020418	movq	0x00063cb9(%rip),%rax
000000000002041f	addq	$0x08,%rsp
0000000000020423	popq	%rbx
0000000000020424	popq	%rbp
0000000000020425	jmp	*%rax
-[PBXLSType typeDescription]:
0000000000020427	pushq	%rbp
0000000000020428	movq	%rsp,%rbp
000000000002042b	movq	0x0008f006(%rip),%rax
0000000000020432	movq	(%rdi,%rax),%rax
0000000000020436	popq	%rbp
0000000000020437	ret
-[PBXGDB_CType superclassType]:
0000000000020438	pushq	%rbp
0000000000020439	movq	%rsp,%rbp
000000000002043c	movq	0x0008ed0d(%rip),%rax
0000000000020443	movq	(%rdi,%rax),%rax
0000000000020447	popq	%rbp
0000000000020448	ret
-[PBXGDB_SyntheticDataValue setNeedsSecondaryUpdate:]:
0000000000020449	pushq	%rbp
000000000002044a	movq	%rsp,%rbp
000000000002044d	movq	0x0008ec2c(%rip),%rax
0000000000020454	movb	%dl,(%rdi,%rax)
0000000000020457	popq	%rbp
0000000000020458	ret
-[PBXLSDataValue setDynamicType:]:
0000000000020459	pushq	%rbp
000000000002045a	movq	%rsp,%rbp
000000000002045d	pushq	%r14
000000000002045f	pushq	%rbx
0000000000020460	movq	%rdx,%r14
0000000000020463	movq	%rdi,%rbx
0000000000020466	movq	0x0008ed5b(%rip),%rax
000000000002046d	movq	(%rbx,%rax),%rdx
0000000000020471	leaq	0x00087f18(%rip),%rsi
0000000000020478	movq	%r14,%rdi
000000000002047b	call	*0x00087f0f(%rip)
0000000000020481	testb	%al,%al
0000000000020483	jne	0x00020515
0000000000020489	movq	0x0008ed38(%rip),%rax
0000000000020490	movq	(%rbx,%rax),%rdi
0000000000020494	testq	%rdi,%rdi
0000000000020497	je	0x000204af
0000000000020499	leaq	0x00087ef0(%rip),%rsi
00000000000204a0	movq	%r14,%rdx
00000000000204a3	call	*0x00087ee7(%rip)
00000000000204a9	testb	%al,%al
00000000000204ab	je	0x000204bc
00000000000204ad	jmp	0x000204d1
00000000000204af	movq	0x0008ecfa(%rip),%rax
00000000000204b6	cmpl	$0x00,(%rbx,%rax)
00000000000204ba	jne	0x000204d1
00000000000204bc	movq	0x00086ecd(%rip),%rsi
00000000000204c3	movq	%rbx,%rdi
00000000000204c6	movl	$0x00000001,%edx
00000000000204cb	call	*0x00063c07(%rip)
00000000000204d1	movq	0x0008ecf0(%rip),%rdx
00000000000204d8	movq	%r14,%rdi
00000000000204db	movq	%rbx,%rsi
00000000000204de	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000204e3	movq	0x000859ae(%rip),%rsi
00000000000204ea	movq	%rbx,%rdi
00000000000204ed	call	*0x00063be5(%rip)
00000000000204f3	movq	0x0008ecce(%rip),%rcx
00000000000204fa	movq	(%rbx,%rcx),%rdx
00000000000204fe	movq	0x00086e93(%rip),%rsi
0000000000020505	movq	%rax,%rdi
0000000000020508	movq	0x00063bc9(%rip),%rax
000000000002050f	popq	%rbx
0000000000020510	popq	%r14
0000000000020512	popq	%rbp
0000000000020513	jmp	*%rax
0000000000020515	popq	%rbx
0000000000020516	popq	%r14
0000000000020518	popq	%rbp
0000000000020519	ret
-[PBXGDB_BaseDataValueSequence containingDataValue]:
000000000002051a	pushq	%rbp
000000000002051b	movq	%rsp,%rbp
000000000002051e	pushq	%rbx
000000000002051f	pushq	%rax
0000000000020520	movq	0x000850e1(%rip),%rsi
0000000000020527	movq	0x00063baa(%rip),%rbx
000000000002052e	call	*%rbx
0000000000020530	movq	0x00085039(%rip),%rsi
0000000000020537	movq	%rax,%rdi
000000000002053a	call	*%rbx
000000000002053c	movq	%rax,%rbx
000000000002053f	leaq	0x00087dea(%rip),%rsi
0000000000020546	movq	0x00088163(%rip),%rdi
000000000002054d	call	*0x00087ddd(%rip)
0000000000020553	leaq	0x00087de6(%rip),%rsi
000000000002055a	movq	%rbx,%rdi
000000000002055d	movq	%rax,%rdx
0000000000020560	call	*0x00087dda(%rip)
0000000000020566	testb	%al,%al
0000000000020568	movl	$0x00000000,%eax
000000000002056d	cmovneq	%rbx,%rax
0000000000020571	addq	$0x08,%rsp
0000000000020575	popq	%rbx
0000000000020576	popq	%rbp
0000000000020577	ret
-[PBXLSDataValue containingDataValue]:
0000000000020578	pushq	%rbp
0000000000020579	movq	%rsp,%rbp
000000000002057c	pushq	%rbx
000000000002057d	pushq	%rax
000000000002057e	movq	%rdi,%rbx
0000000000020581	movq	0x00084f98(%rip),%rsi
0000000000020588	call	*0x00063b4a(%rip)
000000000002058e	testq	%rax,%rax
0000000000020591	jne	0x0002059d
0000000000020593	movq	%rbx,%rax
0000000000020596	addq	$0x08,%rsp
000000000002059a	popq	%rbx
000000000002059b	popq	%rbp
000000000002059c	ret
000000000002059d	movq	0x00084fcc(%rip),%rsi
00000000000205a4	movq	%rax,%rdi
00000000000205a7	addq	$0x08,%rsp
00000000000205ab	popq	%rbx
00000000000205ac	popq	%rbp
00000000000205ad	jmp	*0x00063b25(%rip)
-[PBXGDB_ContainingDataValue2 addDataValueWithNewSetDynamicType:]:
00000000000205b3	pushq	%rbp
00000000000205b4	movq	%rsp,%rbp
00000000000205b7	movq	0x0008e2aa(%rip),%rax
00000000000205be	movq	(%rdi,%rax),%rdi
00000000000205c2	movq	0x00087d37(%rip),%rax
00000000000205c9	leaq	0x00087d30(%rip),%rsi
00000000000205d0	popq	%rbp
00000000000205d1	jmp	*%rax
-[PBXGDB_VarObjDataValue2 setTypeCode:]:
00000000000205d3	pushq	%rbp
00000000000205d4	movq	%rsp,%rbp
00000000000205d7	movq	0x0008eb5a(%rip),%rax
00000000000205de	movl	%edx,(%rdi,%rax)
00000000000205e1	popq	%rbp
00000000000205e2	ret
-[PBXGDB_MIBaseVarObjCommand currentVarObjHasScopeInfo]:
00000000000205e3	pushq	%rbp
00000000000205e4	movq	%rsp,%rbp
00000000000205e7	movq	0x0008613a(%rip),%rsi
00000000000205ee	leaq	0x0008faa3(%rip),%rdx
00000000000205f5	call	*0x00063add(%rip)
00000000000205fb	testq	%rax,%rax
00000000000205fe	setne	%al
0000000000020601	movzbl	%al,%eax
0000000000020604	popq	%rbp
0000000000020605	ret
-[PBXGDB_MIBaseVarObjCommand currentVarObjInScope]:
0000000000020606	pushq	%rbp
0000000000020607	movq	%rsp,%rbp
000000000002060a	movq	0x00086117(%rip),%rsi
0000000000020611	leaq	0x0008fa80(%rip),%rdx
0000000000020618	call	*0x00063aba(%rip)
000000000002061e	movb	$0x01,%cl
0000000000020620	testq	%rax,%rax
0000000000020623	je	0x0002063e
0000000000020625	leaq	0x00087d34(%rip),%rsi
000000000002062c	leaq	0x00092ae5(%rip),%rdx
0000000000020633	movq	%rax,%rdi
0000000000020636	call	*0x00087d24(%rip)
000000000002063c	movb	%al,%cl
000000000002063e	movsbl	%cl,%eax
0000000000020641	popq	%rbp
0000000000020642	ret
-[PBXGDB_MIBaseVarObjCommand currentVarObjName]:
0000000000020643	pushq	%rbp
0000000000020644	movq	%rsp,%rbp
0000000000020647	movq	0x000860da(%rip),%rsi
000000000002064e	leaq	0x0008faa3(%rip),%rdx
0000000000020655	popq	%rbp
0000000000020656	jmp	*0x00063a7c(%rip)
-[PBXGDB_ContainingDataValue2 addVarObjName:forDataValue:]:
000000000002065c	pushq	%rbp
000000000002065d	movq	%rsp,%rbp
0000000000020660	pushq	%r15
0000000000020662	pushq	%r14
0000000000020664	pushq	%rbx
0000000000020665	subq	$0x38,%rsp
0000000000020669	movq	%rcx,%r14
000000000002066c	movq	%rdx,%rbx
000000000002066f	movq	%rdi,0xe0(%rbp)
0000000000020673	movq	%rsi,0xd8(%rbp)
0000000000020677	testq	%rbx,%rbx
000000000002067a	je	0x000206bc
000000000002067c	testq	%r14,%r14
000000000002067f	je	0x000206bc
0000000000020681	movq	0x00084fd0(%rip),%rsi
0000000000020688	movq	0x00063a49(%rip),%r15
000000000002068f	movq	%r14,%rdi
0000000000020692	movq	%rbx,%rdx
0000000000020695	call	*%r15
0000000000020698	movq	0x0008e1b9(%rip),%rax
000000000002069f	movq	0xe0(%rbp),%rcx
00000000000206a3	movq	(%rcx,%rax),%rdi
00000000000206a7	movq	0x00084682(%rip),%rsi
00000000000206ae	movq	%r14,%rdx
00000000000206b1	movq	%rbx,%rcx
00000000000206b4	call	*%r15
00000000000206b7	jmp	0x00020814
00000000000206bc	testq	%rbx,%rbx
00000000000206bf	je	0x00020738
00000000000206c1	movq	%rbx,%rdi
00000000000206c4	callq	0x0004e746	; symbol stub for: _CFGetTypeID
00000000000206c9	movq	%rax,%r15
00000000000206cc	callq	0x0004e788	; symbol stub for: _CFStringGetTypeID
00000000000206d1	cmpq	%rax,%r15
00000000000206d4	je	0x00020738
00000000000206d6	movq	0x00084583(%rip),%rsi
00000000000206dd	movq	%rbx,%rdi
00000000000206e0	call	*0x000639f2(%rip)
00000000000206e6	leaq	0x0003da1f(%rip),%rcx
00000000000206ed	leaq	0x0008f144(%rip),%rdx
00000000000206f4	leaq	0x0003da1e(%rip),%rsi
00000000000206fb	movq	%rsi,0x18(%rsp)
0000000000020700	movq	%rdx,0x10(%rsp)
0000000000020705	movq	%rax,0x08(%rsp)
000000000002070a	movq	%rcx,(%rsp)
000000000002070e	leaq	0xe0(%rbp),%rdi
0000000000020712	leaq	0xd8(%rbp),%rsi
0000000000020716	leaq	0x0003d905(%rip),%rdx
000000000002071d	leaq	0x0003d939(%rip),%rcx
0000000000020724	leaq	0x0009058d(%rip),%r9
000000000002072b	movl	$0x00000059,%r8d
0000000000020731	xorb	%al,%al
0000000000020733	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000020738	testq	%r14,%r14
000000000002073b	je	0x00020814
0000000000020741	movq	0x00087eb8(%rip),%rdi
0000000000020748	leaq	0x00087be1(%rip),%rbx
000000000002074f	movq	%rbx,%rsi
0000000000020752	call	*0x00087bd8(%rip)
0000000000020758	movq	%rax,%rdi
000000000002075b	movq	%rbx,%rsi
000000000002075e	call	*0x00087bcc(%rip)
0000000000020764	leaq	0x00087bd5(%rip),%rsi
000000000002076b	movq	%r14,%rdi
000000000002076e	movq	%rax,%rdx
0000000000020771	call	*0x00087bc9(%rip)
0000000000020777	testb	%al,%al
0000000000020779	jne	0x00020814
000000000002077f	movq	0x00087e7a(%rip),%rdi
0000000000020786	leaq	0x00087ba3(%rip),%rbx
000000000002078d	movq	%rbx,%rsi
0000000000020790	call	*0x00087b9a(%rip)
0000000000020796	movq	%rax,%rdi
0000000000020799	movq	%rbx,%rsi
000000000002079c	call	*0x00087b8e(%rip)
00000000000207a2	movq	%rax,%rdi
00000000000207a5	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
00000000000207aa	movq	%rax,%r15
00000000000207ad	movq	0x000844ac(%rip),%rsi
00000000000207b4	movq	%r14,%rdi
00000000000207b7	call	*0x0006391b(%rip)
00000000000207bd	leaq	0x0003d9ac(%rip),%r8
00000000000207c4	leaq	0xe0(%rbp),%rdi
00000000000207c8	leaq	0xd8(%rbp),%rsi
00000000000207cc	leaq	0x0003d84f(%rip),%rdx
00000000000207d3	leaq	0x0003d883(%rip),%rcx
00000000000207da	leaq	0x0008f1f7(%rip),%r9
00000000000207e1	movq	%r8,0x20(%rsp)
00000000000207e6	leaq	0x0008f04b(%rip),%rbx
00000000000207ed	movq	%rbx,0x18(%rsp)
00000000000207f2	leaq	0x0003d3de(%rip),%r8
00000000000207f9	movq	%rax,0x10(%rsp)
00000000000207fe	movq	%r15,0x08(%rsp)
0000000000020803	movq	%r8,(%rsp)
0000000000020807	movl	$0x0000005a,%r8d
000000000002080d	xorb	%al,%al
000000000002080f	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000020814	addq	$0x38,%rsp
0000000000020818	popq	%rbx
0000000000020819	popq	%r14
000000000002081b	popq	%r15
000000000002081d	popq	%rbp
000000000002081e	ret
-[PBXGDB_VarObjDataValue2 setVarObjName:]:
000000000002081f	pushq	%rbp
0000000000020820	movq	%rsp,%rbp
0000000000020823	movq	%rdx,%rax
0000000000020826	movq	%rdi,%rcx
0000000000020829	movq	0x0008e900(%rip),%rdx
0000000000020830	cmpq	%rax,(%rcx,%rdx)
0000000000020834	jne	0x00020838
0000000000020836	popq	%rbp
0000000000020837	ret
0000000000020838	addq	%rcx,%rdx
000000000002083b	subq	%rcx,%rdx
000000000002083e	movq	%rax,%rdi
0000000000020841	movq	%rcx,%rsi
0000000000020844	popq	%rbp
0000000000020845	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MIBaseVarObjCommand currentVarObjNumberOfChildren]:
000000000002084a	pushq	%rbp
000000000002084b	movq	%rsp,%rbp
000000000002084e	movq	0x00085ed3(%rip),%rsi
0000000000020855	leaq	0x0008f87c(%rip),%rdx
000000000002085c	call	*0x00063876(%rip)
0000000000020862	movq	0x00084a77(%rip),%rsi
0000000000020869	movq	%rax,%rdi
000000000002086c	movq	0x00063865(%rip),%rax
0000000000020873	popq	%rbp
0000000000020874	jmp	*%rax
-[PBXGDB_DataValue2 setStaticNumberOfChildren:]:
0000000000020876	pushq	%rbp
0000000000020877	movq	%rsp,%rbp
000000000002087a	movq	0x0008e077(%rip),%rax
0000000000020881	movq	%rdx,(%rdi,%rax)
0000000000020885	popq	%rbp
0000000000020886	ret
-[PBXGDB_MIBaseVarObjCommand blockStartAddress]:
0000000000020887	pushq	%rbp
0000000000020888	movq	%rsp,%rbp
000000000002088b	movq	0x00085e96(%rip),%rsi
0000000000020892	leaq	0x00090b5f(%rip),%rdx
0000000000020899	popq	%rbp
000000000002089a	jmp	*0x00063838(%rip)
-[PBXLSDataValue setBlockStartAddress:]:
00000000000208a0	pushq	%rbp
00000000000208a1	movq	%rsp,%rbp
00000000000208a4	movq	%rdx,%rax
00000000000208a7	movq	%rdi,%rcx
00000000000208aa	movq	0x0008e97f(%rip),%rdx
00000000000208b1	movq	%rax,%rdi
00000000000208b4	movq	%rcx,%rsi
00000000000208b7	popq	%rbp
00000000000208b8	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MIBaseVarObjCommand currentVarObjValueString]:
00000000000208bd	pushq	%rbp
00000000000208be	movq	%rsp,%rbp
00000000000208c1	movq	0x00085e60(%rip),%rsi
00000000000208c8	leaq	0x0008f869(%rip),%rdx
00000000000208cf	popq	%rbp
00000000000208d0	jmp	*0x00063802(%rip)
-[PBXGDB_Adaptor restoreVariableFormatForDataValue:]:
00000000000208d6	pushq	%rbp
00000000000208d7	movq	%rsp,%rbp
00000000000208da	pushq	%r15
00000000000208dc	pushq	%r14
00000000000208de	pushq	%rbx
00000000000208df	pushq	%rax
00000000000208e0	movq	%rdx,%rbx
00000000000208e3	movq	0x00084bb6(%rip),%rsi
00000000000208ea	movq	0x000637e7(%rip),%r15
00000000000208f1	call	*%r15
00000000000208f4	movl	%eax,%r14d
00000000000208f7	movq	0x00084baa(%rip),%rsi
00000000000208fe	movq	%rbx,%rdi
0000000000020901	call	*%r15
0000000000020904	cmpl	%eax,%r14d
0000000000020907	je	0x00020926
0000000000020909	movq	0x00084ba0(%rip),%rsi
0000000000020910	movq	%rbx,%rdi
0000000000020913	movl	%r14d,%edx
0000000000020916	addq	$0x08,%rsp
000000000002091a	popq	%rbx
000000000002091b	popq	%r14
000000000002091d	popq	%r15
000000000002091f	popq	%rbp
0000000000020920	jmp	*0x000637b2(%rip)
0000000000020926	movq	0x00084b8b(%rip),%rsi
000000000002092d	movq	%rbx,%rdi
0000000000020930	call	*0x000637a2(%rip)
0000000000020936	cmpb	$0x01,%al
0000000000020938	jne	0x0002095f
000000000002093a	movq	0x00084b67(%rip),%rsi
0000000000020941	movq	%rbx,%rdi
0000000000020944	call	*0x0006378e(%rip)
000000000002094a	testl	%eax,%eax
000000000002094c	jne	0x0002095f
000000000002094e	movq	0x00084b5b(%rip),%rsi
0000000000020955	movq	%rbx,%rdi
0000000000020958	movl	$0x00000005,%edx
000000000002095d	jmp	0x00020916
000000000002095f	addq	$0x08,%rsp
0000000000020963	popq	%rbx
0000000000020964	popq	%r14
0000000000020966	popq	%r15
0000000000020968	popq	%rbp
0000000000020969	ret
-[PBXGDB_Adaptor variableFormatForDataValue:]:
000000000002096a	pushq	%rbp
000000000002096b	movq	%rsp,%rbp
000000000002096e	pushq	%rbx
000000000002096f	pushq	%rax
0000000000020970	movq	%rdi,%rbx
0000000000020973	movq	0x00084b16(%rip),%rsi
000000000002097a	movq	0x00087b67(%rip),%rdi
0000000000020981	call	*0x00063751(%rip)
0000000000020987	movq	0x00084b0a(%rip),%rsi
000000000002098e	movq	%rbx,%rdi
0000000000020991	movq	%rax,%rdx
0000000000020994	movq	0x0006373d(%rip),%rax
000000000002099b	addq	$0x08,%rsp
000000000002099f	popq	%rbx
00000000000209a0	popq	%rbp
00000000000209a1	jmp	*%rax
+[PBXGDB_Adaptor variableFormatKeyForDataValue:]:
00000000000209a3	pushq	%rbp
00000000000209a4	movq	%rsp,%rbp
00000000000209a7	pushq	%r15
00000000000209a9	pushq	%r14
00000000000209ab	pushq	%r12
00000000000209ad	pushq	%rbx
00000000000209ae	movq	%rdx,%rbx
00000000000209b1	movq	0x00084ab8(%rip),%rsi
00000000000209b8	movq	0x00063719(%rip),%r15
00000000000209bf	movq	%rbx,%rdi
00000000000209c2	call	*%r15
00000000000209c5	movq	%rax,%r14
00000000000209c8	movq	0x00084aa9(%rip),%rsi
00000000000209cf	movq	%rbx,%rdi
00000000000209d2	call	*%r15
00000000000209d5	testq	%rax,%rax
00000000000209d8	jne	0x000209e3
00000000000209da	leaq	0x0008ef57(%rip),%r8
00000000000209e1	jmp	0x00020a27
00000000000209e3	movq	0x00087a66(%rip),%r15
00000000000209ea	movq	0x00084a8f(%rip),%rsi
00000000000209f1	movq	0x000636e0(%rip),%r12
00000000000209f8	movq	%rbx,%rdi
00000000000209fb	call	*%r12
00000000000209fe	movq	0x00084a83(%rip),%rsi
0000000000020a05	movq	%rax,%rdi
0000000000020a08	call	*%r12
0000000000020a0b	leaq	0x0008fea6(%rip),%rdx
0000000000020a12	movq	0x0008415f(%rip),%rsi
0000000000020a19	movq	%r15,%rdi
0000000000020a1c	movq	%rax,%rcx
0000000000020a1f	xorb	%al,%al
0000000000020a21	call	*%r12
0000000000020a24	movq	%rax,%r8
0000000000020a27	movq	0x0008414a(%rip),%rsi
0000000000020a2e	movq	0x00087a1b(%rip),%rdi
0000000000020a35	leaq	0x0008fe9c(%rip),%rdx
0000000000020a3c	leaq	0x0008eef5(%rip),%r9
0000000000020a43	movq	%r14,%rcx
0000000000020a46	xorb	%al,%al
0000000000020a48	popq	%rbx
0000000000020a49	popq	%r12
0000000000020a4b	popq	%r14
0000000000020a4d	popq	%r15
0000000000020a4f	popq	%rbp
0000000000020a50	jmp	*0x00063682(%rip)
-[PBXLSDataValue symbolicName]:
0000000000020a56	pushq	%rbp
0000000000020a57	movq	%rsp,%rbp
0000000000020a5a	movq	0x0008e73f(%rip),%rax
0000000000020a61	movq	(%rdi,%rax),%rax
0000000000020a65	popq	%rbp
0000000000020a66	ret
-[PBXLSDataValue blockStartAddress]:
0000000000020a67	pushq	%rbp
0000000000020a68	movq	%rsp,%rbp
0000000000020a6b	movq	0x0008e7be(%rip),%rax
0000000000020a72	movq	(%rdi,%rax),%rax
0000000000020a76	popq	%rbp
0000000000020a77	ret
-[PBXGDB_Adaptor variableFormatForKey:]:
0000000000020a78	pushq	%rbp
0000000000020a79	movq	%rsp,%rbp
0000000000020a7c	pushq	%rbx
0000000000020a7d	pushq	%rax
0000000000020a7e	movq	%rdx,%rbx
0000000000020a81	movq	0x000849e0(%rip),%rsi
0000000000020a88	call	*0x0006364a(%rip)
0000000000020a8e	leaq	0x000878bb(%rip),%rsi
0000000000020a95	movq	%rax,%rdi
0000000000020a98	movq	%rbx,%rdx
0000000000020a9b	call	*0x000878af(%rip)
0000000000020aa1	testq	%rax,%rax
0000000000020aa4	jne	0x00020aaa
0000000000020aa6	xorl	%eax,%eax
0000000000020aa8	jmp	0x00020aba
0000000000020aaa	movq	0x0008482f(%rip),%rsi
0000000000020ab1	movq	%rax,%rdi
0000000000020ab4	call	*0x0006361e(%rip)
0000000000020aba	addq	$0x08,%rsp
0000000000020abe	popq	%rbx
0000000000020abf	popq	%rbp
0000000000020ac0	ret
-[PBXGDB_Adaptor variableFormatDictionary]:
0000000000020ac1	pushq	%rbp
0000000000020ac2	movq	%rsp,%rbp
0000000000020ac5	movq	0x0008dc0c(%rip),%rax
0000000000020acc	movq	(%rdi,%rax),%rax
0000000000020ad0	popq	%rbp
0000000000020ad1	ret
-[PBXLSDataValue valueFormat]:
0000000000020ad2	pushq	%rbp
0000000000020ad3	movq	%rsp,%rbp
0000000000020ad6	movq	0x0008e743(%rip),%rax
0000000000020add	movl	(%rdi,%rax),%eax
0000000000020ae0	popq	%rbp
0000000000020ae1	ret
-[PBXGDB_VarObjDataValue2 isFourCharCodeType]:
0000000000020ae2	pushq	%rbp
0000000000020ae3	movq	%rsp,%rbp
0000000000020ae6	pushq	%r14
0000000000020ae8	pushq	%rbx
0000000000020ae9	movq	0x00096bd0(%rip),%rbx
0000000000020af0	movq	0x00084829(%rip),%rsi
0000000000020af7	movq	0x000635da(%rip),%r14
0000000000020afe	call	*%r14
0000000000020b01	movq	0x000867c8(%rip),%rsi
0000000000020b08	movq	%rbx,%rdi
0000000000020b0b	movq	%rax,%rdx
0000000000020b0e	call	*%r14
0000000000020b11	testq	%rax,%rax
0000000000020b14	setne	%al
0000000000020b17	movzbl	%al,%eax
0000000000020b1a	popq	%rbx
0000000000020b1b	popq	%r14
0000000000020b1d	popq	%rbp
0000000000020b1e	ret
-[PBXLSDataValue typeExpressionString]:
0000000000020b1f	pushq	%rbp
0000000000020b20	movq	%rsp,%rbp
0000000000020b23	pushq	%rbx
0000000000020b24	pushq	%rax
0000000000020b25	movq	%rdi,%rbx
0000000000020b28	movq	0x00086781(%rip),%rsi
0000000000020b2f	call	*0x000635a3(%rip)
0000000000020b35	testq	%rax,%rax
0000000000020b38	jne	0x00020b4c
0000000000020b3a	movq	0x0008e68f(%rip),%rax
0000000000020b41	movq	(%rbx,%rax),%rax
0000000000020b45	addq	$0x08,%rsp
0000000000020b49	popq	%rbx
0000000000020b4a	popq	%rbp
0000000000020b4b	ret
0000000000020b4c	movq	0x00084935(%rip),%rsi
0000000000020b53	movq	%rax,%rdi
0000000000020b56	addq	$0x08,%rsp
0000000000020b5a	popq	%rbx
0000000000020b5b	popq	%rbp
0000000000020b5c	jmp	*0x00063576(%rip)
-[PBXLSDataValue type]:
0000000000020b62	pushq	%rbp
0000000000020b63	movq	%rsp,%rbp
0000000000020b66	pushq	%rbx
0000000000020b67	pushq	%rax
0000000000020b68	movq	%rdi,%rbx
0000000000020b6b	movq	0x00084d36(%rip),%rsi
0000000000020b72	call	*0x00063560(%rip)
0000000000020b78	testq	%rax,%rax
0000000000020b7b	je	0x00020b84
0000000000020b7d	addq	$0x08,%rsp
0000000000020b81	popq	%rbx
0000000000020b82	popq	%rbp
0000000000020b83	ret
0000000000020b84	movq	0x0008637d(%rip),%rsi
0000000000020b8b	movq	%rbx,%rdi
0000000000020b8e	addq	$0x08,%rsp
0000000000020b92	popq	%rbx
0000000000020b93	popq	%rbp
0000000000020b94	jmp	*0x0006353e(%rip)
-[PBXLSDataValue dynamicType]:
0000000000020b9a	pushq	%rbp
0000000000020b9b	movq	%rsp,%rbp
0000000000020b9e	movq	0x0008e623(%rip),%rax
0000000000020ba5	movq	(%rdi,%rax),%rax
0000000000020ba9	popq	%rbp
0000000000020baa	ret
-[PBXGDB_VarObjDataValue2 setStringValue:]:
0000000000020bab	pushq	%rbp
0000000000020bac	movq	%rsp,%rbp
0000000000020baf	pushq	%r15
0000000000020bb1	pushq	%r14
0000000000020bb3	pushq	%rbx
0000000000020bb4	subq	$0x18,%rsp
0000000000020bb8	movq	%rdx,%r14
0000000000020bbb	movq	%rdi,%rbx
0000000000020bbe	movq	0x000866bb(%rip),%rsi
0000000000020bc5	call	*0x0006350d(%rip)
0000000000020bcb	cmpl	$0x07,%eax
0000000000020bce	jne	0x00020c54
0000000000020bd4	movq	0x000848cd(%rip),%rsi
0000000000020bdb	movq	%rbx,%rdi
0000000000020bde	call	*0x000634f4(%rip)
0000000000020be4	testl	%eax,%eax
0000000000020be6	jne	0x00020c05
0000000000020be8	movq	0x000848c9(%rip),%rsi
0000000000020bef	movq	%rbx,%rdi
0000000000020bf2	call	*0x000634e0(%rip)
0000000000020bf8	leaq	0x0008ed39(%rip),%rcx
0000000000020bff	testb	%al,%al
0000000000020c01	cmovneq	%rcx,%r14
0000000000020c05	movq	0x0008489c(%rip),%rsi
0000000000020c0c	movq	%rbx,%rdi
0000000000020c0f	call	*0x000634c3(%rip)
0000000000020c15	testl	%eax,%eax
0000000000020c17	jne	0x00020c54
0000000000020c19	movq	0x00086690(%rip),%rsi
0000000000020c20	movq	0x000634b1(%rip),%r15
0000000000020c27	movq	%rbx,%rdi
0000000000020c2a	call	*%r15
0000000000020c2d	movq	0x00086684(%rip),%rsi
0000000000020c34	movq	%rax,%rdi
0000000000020c37	call	*%r15
0000000000020c3a	cmpb	$0x01,%al
0000000000020c3c	jne	0x00020c54
0000000000020c3e	movq	0x00086693(%rip),%rsi
0000000000020c45	movq	%rbx,%rdi
0000000000020c48	movq	%r14,%rdx
0000000000020c4b	call	*0x00063487(%rip)
0000000000020c51	movq	%rax,%r14
0000000000020c54	movq	0x00086625(%rip),%rsi
0000000000020c5b	movq	%rbx,%rdi
0000000000020c5e	call	*0x00063474(%rip)
0000000000020c64	cmpl	$0x01,%eax
0000000000020c67	jne	0x00020c7f
0000000000020c69	movq	0x00086670(%rip),%rsi
0000000000020c70	movq	%rbx,%rdi
0000000000020c73	movq	%r14,%rdx
0000000000020c76	call	*0x0006345c(%rip)
0000000000020c7c	movq	%rax,%r14
0000000000020c7f	movq	%rbx,0xd8(%rbp)
0000000000020c83	movq	0x00088306(%rip),%rax
0000000000020c8a	movq	%rax,0xe0(%rbp)
0000000000020c8e	movq	0x0008492b(%rip),%rsi
0000000000020c95	leaq	0xd8(%rbp),%rdi
0000000000020c99	movq	%r14,%rdx
0000000000020c9c	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000020ca1	addq	$0x18,%rsp
0000000000020ca5	popq	%rbx
0000000000020ca6	popq	%r14
0000000000020ca8	popq	%r15
0000000000020caa	popq	%rbp
0000000000020cab	ret
-[PBXGDB_VarObjDataValue2 typeCode]:
0000000000020cac	pushq	%rbp
0000000000020cad	movq	%rsp,%rbp
0000000000020cb0	movq	0x0008e481(%rip),%rax
0000000000020cb7	movl	(%rdi,%rax),%eax
0000000000020cba	popq	%rbp
0000000000020cbb	ret
-[PBXGDB_VarObjDataValue2 _pointerValueStringForString:]:
0000000000020cbc	pushq	%rbp
0000000000020cbd	movq	%rsp,%rbp
0000000000020cc0	pushq	%rbx
0000000000020cc1	pushq	%rax
0000000000020cc2	movq	%rdx,%rbx
0000000000020cc5	movq	0x0008460c(%rip),%rsi
0000000000020ccc	leaq	0x0008ea85(%rip),%rdx
0000000000020cd3	movq	%rbx,%rdi
0000000000020cd6	call	*0x000633fc(%rip)
0000000000020cdc	testq	%rdx,%rdx
0000000000020cdf	je	0x00020ce6
0000000000020ce1	testq	%rax,%rax
0000000000020ce4	jne	0x00020cf0
0000000000020ce6	movq	%rbx,%rax
0000000000020ce9	addq	$0x08,%rsp
0000000000020ced	popq	%rbx
0000000000020cee	popq	%rbp
0000000000020cef	ret
0000000000020cf0	movq	0x00084569(%rip),%rsi
0000000000020cf7	movq	%rbx,%rdi
0000000000020cfa	movq	%rax,%rdx
0000000000020cfd	addq	$0x08,%rsp
0000000000020d01	popq	%rbx
0000000000020d02	popq	%rbp
0000000000020d03	jmp	*0x000633cf(%rip)
-[PBXLSDataValue setStringValue:]:
0000000000020d09	pushq	%rbp
0000000000020d0a	movq	%rsp,%rbp
0000000000020d0d	pushq	%r15
0000000000020d0f	pushq	%r14
0000000000020d11	pushq	%r12
0000000000020d13	pushq	%rbx
0000000000020d14	movq	%rdx,%r14
0000000000020d17	movq	%rdi,%rbx
0000000000020d1a	movq	0x0008e457(%rip),%rax
0000000000020d21	movq	(%rbx,%rax),%rdi
0000000000020d25	movq	0x00083ddc(%rip),%rsi
0000000000020d2c	movq	0x000633a5(%rip),%r12
0000000000020d33	call	*%r12
0000000000020d36	movq	%rax,%r15
0000000000020d39	movq	0x00084830(%rip),%rsi
0000000000020d40	movq	%rbx,%rdi
0000000000020d43	call	*%r12
0000000000020d46	movq	0x0008665b(%rip),%rsi
0000000000020d4d	movq	%rax,%rdi
0000000000020d50	call	*%r12
0000000000020d53	testb	%al,%al
0000000000020d55	jne	0x00020d69
0000000000020d57	movq	0x00086652(%rip),%rsi
0000000000020d5e	movq	%rbx,%rdi
0000000000020d61	xorl	%edx,%edx
0000000000020d63	call	*0x0006336f(%rip)
0000000000020d69	cmpq	%r14,%r15
0000000000020d6c	je	0x00020df4
0000000000020d72	testq	%r15,%r15
0000000000020d75	je	0x00020dd1
0000000000020d77	leaq	0x000875e2(%rip),%rsi
0000000000020d7e	movq	%r15,%rdi
0000000000020d81	movq	%r14,%rdx
0000000000020d84	call	*0x000875d6(%rip)
0000000000020d8a	testb	%al,%al
0000000000020d8c	jne	0x00020dd1
0000000000020d8e	movq	0x0008661b(%rip),%rsi
0000000000020d95	movq	0x0006333c(%rip),%r15
0000000000020d9c	movq	%rbx,%rdi
0000000000020d9f	movl	$0x00000001,%edx
0000000000020da4	call	*%r15
0000000000020da7	movq	0x0008481a(%rip),%rsi
0000000000020dae	movq	%rbx,%rdi
0000000000020db1	call	*%r15
0000000000020db4	movq	0x000865ad(%rip),%rsi
0000000000020dbb	movq	%rax,%rdi
0000000000020dbe	call	*%r15
0000000000020dc1	movq	0x000865a8(%rip),%rsi
0000000000020dc8	movq	%rbx,%rdi
0000000000020dcb	movq	%rax,%rdx
0000000000020dce	call	*%r15
0000000000020dd1	movq	0x0008e3a0(%rip),%rax
0000000000020dd8	movq	(%rbx,%rax),%rdi
0000000000020ddc	movq	0x000847dd(%rip),%rsi
0000000000020de3	movq	%r14,%rdx
0000000000020de6	popq	%rbx
0000000000020de7	popq	%r12
0000000000020de9	popq	%r14
0000000000020deb	popq	%r15
0000000000020ded	popq	%rbp
0000000000020dee	jmp	*0x000632e4(%rip)
0000000000020df4	popq	%rbx
0000000000020df5	popq	%r12
0000000000020df7	popq	%r14
0000000000020df9	popq	%r15
0000000000020dfb	popq	%rbp
0000000000020dfc	ret
-[PBXLSDVValue stringValue]:
0000000000020dfd	pushq	%rbp
0000000000020dfe	movq	%rsp,%rbp
0000000000020e01	movq	0x0008e488(%rip),%rax
0000000000020e08	movq	(%rdi,%rax),%rax
0000000000020e0c	popq	%rbp
0000000000020e0d	ret
-[PBXLSDataValue isUpdatingAfterSet]:
0000000000020e0e	pushq	%rbp
0000000000020e0f	movq	%rsp,%rbp
0000000000020e12	movq	0x0008e40f(%rip),%rax
0000000000020e19	movsbl	(%rdi,%rax),%eax
0000000000020e1d	popq	%rbp
0000000000020e1e	ret
-[PBXLSDataValue setValueChangeStatus:]:
0000000000020e1f	pushq	%rbp
0000000000020e20	movq	%rsp,%rbp
0000000000020e23	movq	0x0008e3b6(%rip),%rax
0000000000020e2a	movl	%edx,(%rdi,%rax)
0000000000020e2d	popq	%rbp
0000000000020e2e	ret
-[PBXLSDVValue setStringValue:]:
0000000000020e2f	pushq	%rbp
0000000000020e30	movq	%rsp,%rbp
0000000000020e33	movq	%rdx,%rax
0000000000020e36	movq	%rdi,%rcx
0000000000020e39	movq	0x0008e450(%rip),%rdx
0000000000020e40	cmpq	%rax,(%rcx,%rdx)
0000000000020e44	jne	0x00020e48
0000000000020e46	popq	%rbp
0000000000020e47	ret
0000000000020e48	addq	%rcx,%rdx
0000000000020e4b	subq	%rcx,%rdx
0000000000020e4e	movq	%rax,%rdi
0000000000020e51	movq	%rcx,%rsi
0000000000020e54	popq	%rbp
0000000000020e55	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_GetFrameSymbolsDataValueSequence _fetchLocals]:
0000000000020e5a	pushq	%rbp
0000000000020e5b	movq	%rsp,%rbp
0000000000020e5e	pushq	%r14
0000000000020e60	pushq	%rbx
0000000000020e61	movq	%rdi,%r14
0000000000020e64	movq	0x00083c15(%rip),%rsi
0000000000020e6b	movq	0x000879ae(%rip),%rdi
0000000000020e72	call	*0x00063260(%rip)
0000000000020e78	movq	%rax,%rbx
0000000000020e7b	movq	0x0008da86(%rip),%rax
0000000000020e82	movb	$0x01,(%r14,%rax)
0000000000020e87	movq	0x00083bfa(%rip),%rsi
0000000000020e8e	movq	%rbx,%rdi
0000000000020e91	movq	%r14,%rdx
0000000000020e94	call	*0x0006323e(%rip)
0000000000020e9a	movq	0x00083bf7(%rip),%rsi
0000000000020ea1	movq	0x00084ef8(%rip),%rdx
0000000000020ea8	movq	%rbx,%rdi
0000000000020eab	call	*0x00063227(%rip)
0000000000020eb1	movq	0x00084788(%rip),%rsi
0000000000020eb8	movq	%r14,%rdi
0000000000020ebb	movq	%rbx,%rdx
0000000000020ebe	movq	0x00063213(%rip),%rax
0000000000020ec5	popq	%rbx
0000000000020ec6	popq	%r14
0000000000020ec8	popq	%rbp
0000000000020ec9	jmp	*%rax
-[PBXGDB_MIFrameAllLocalVarObjsCommand GDBCommandString]:
0000000000020ecb	pushq	%rbp
0000000000020ecc	movq	%rsp,%rbp
0000000000020ecf	pushq	%rbx
0000000000020ed0	subq	$0x18,%rsp
0000000000020ed4	movq	%rdi,0xf0(%rbp)
0000000000020ed8	movq	%rsi,0xe8(%rbp)
0000000000020edc	leaq	0x0008dc1d(%rip),%rax
0000000000020ee3	movq	(%rax),%rax
0000000000020ee6	cmpq	$0x00,(%rdi,%rax)
0000000000020eeb	jns	0x00020f22
0000000000020eed	leaq	0x0003f380(%rip),%rax
0000000000020ef4	movq	%rax,(%rsp)
0000000000020ef8	leaq	0xf0(%rbp),%rdi
0000000000020efc	leaq	0xe8(%rbp),%rsi
0000000000020f00	leaq	0x0003f2ae(%rip),%rdx
0000000000020f07	leaq	0x0003f2e0(%rip),%rcx
0000000000020f0e	leaq	0x0008e923(%rip),%r9
0000000000020f15	movl	$0x000000f6,%r8d
0000000000020f1b	xorb	%al,%al
0000000000020f1d	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000020f22	movq	0x00087527(%rip),%rdi
0000000000020f29	leaq	0x000873b0(%rip),%rsi
0000000000020f30	call	*0x000873aa(%rip)
0000000000020f36	movq	0x00083d7b(%rip),%rsi
0000000000020f3d	leaq	0x00091f94(%rip),%rdx
0000000000020f44	movq	%rax,%rdi
0000000000020f47	xorb	%al,%al
0000000000020f49	call	*0x00063189(%rip)
0000000000020f4f	leaq	0x0008dbda(%rip),%rcx
0000000000020f56	movq	(%rcx),%rbx
0000000000020f59	movq	0xf0(%rbp),%rsi
0000000000020f5d	movq	%rax,%rdi
0000000000020f60	movq	%rbx,%rdx
0000000000020f63	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000020f68	movq	0xf0(%rbp),%rax
0000000000020f6c	movq	(%rax,%rbx),%rax
0000000000020f70	addq	$0x18,%rsp
0000000000020f74	popq	%rbx
0000000000020f75	popq	%rbp
0000000000020f76	ret
-[PBXGDB_MIFrameAllLocalVarObjsCommand didFinishWithResultList:]:
0000000000020f77	pushq	%rbp
0000000000020f78	movq	%rsp,%rbp
0000000000020f7b	pushq	%r15
0000000000020f7d	pushq	%r14
0000000000020f7f	pushq	%r12
0000000000020f81	pushq	%rbx
0000000000020f82	subq	$0x10,%rsp
0000000000020f86	movq	%rdx,%r14
0000000000020f89	movq	%rdi,%rbx
0000000000020f8c	movq	0x00083b45(%rip),%rsi
0000000000020f93	leaq	0x0008ed7e(%rip),%rdx
0000000000020f9a	movq	%r14,%rdi
0000000000020f9d	call	*0x00063135(%rip)
0000000000020fa3	movq	%rax,%r15
0000000000020fa6	leaq	0x0008df0b(%rip),%rax
0000000000020fad	movq	(%rax),%rdx
0000000000020fb0	xorl	%edi,%edi
0000000000020fb2	movq	%rbx,%rsi
0000000000020fb5	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000020fba	leaq	0x0008df07(%rip),%rax
0000000000020fc1	movq	(%rax),%rcx
0000000000020fc4	leaq	0x0008def5(%rip),%rax
0000000000020fcb	movq	$0x00000000,(%rbx,%rcx)
0000000000020fd3	movq	(%rax),%rdx
0000000000020fd6	xorl	%edi,%edi
0000000000020fd8	movq	%rbx,%rsi
0000000000020fdb	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000020fe0	testq	%r15,%r15
0000000000020fe3	je	0x0002101b
0000000000020fe5	movq	0x00083af4(%rip),%rsi
0000000000020fec	movq	0x000630e5(%rip),%r12
0000000000020ff3	movq	%r15,%rdi
0000000000020ff6	call	*%r12
0000000000020ff9	movq	0x00083ae8(%rip),%rsi
0000000000021000	movq	%rax,%rdi
0000000000021003	call	*%r12
0000000000021006	leaq	0x0008deab(%rip),%rcx
000000000002100d	movq	(%rcx),%rdx
0000000000021010	movq	%rax,%rdi
0000000000021013	movq	%rbx,%rsi
0000000000021016	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000002101b	movq	%rbx,0xd0(%rbp)
000000000002101f	movq	0x00087e92(%rip),%rax
0000000000021026	movq	%rax,0xd8(%rbp)
000000000002102a	movq	0x000851cf(%rip),%rsi
0000000000021031	leaq	0xd0(%rbp),%rdi
0000000000021035	movq	%r14,%rdx
0000000000021038	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000002103d	addq	$0x10,%rsp
0000000000021041	popq	%rbx
0000000000021042	popq	%r12
0000000000021044	popq	%r14
0000000000021046	popq	%r15
0000000000021048	popq	%rbp
0000000000021049	ret
-[PBXGDB_GetFrameSymbolsDataValueSequence _gotResultLocalVarObjs:]:
000000000002104a	pushq	%rbp
000000000002104b	movq	%rsp,%rbp
000000000002104e	pushq	%r15
0000000000021050	pushq	%r14
0000000000021052	pushq	%rbx
0000000000021053	subq	$0x38,%rsp
0000000000021057	movq	%rdx,%r14
000000000002105a	movq	%rdi,0xe0(%rbp)
000000000002105e	movq	%rsi,0xd8(%rbp)
0000000000021062	testq	%r14,%r14
0000000000021065	jne	0x000210cd
0000000000021067	movq	0x000877b2(%rip),%rdi
000000000002106e	leaq	0x000872bb(%rip),%rsi
0000000000021075	call	*0x000872b5(%rip)
000000000002107b	movq	%rax,%rdi
000000000002107e	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000021083	leaq	0xe0(%rbp),%rdi
0000000000021087	leaq	0xd8(%rbp),%rsi
000000000002108b	leaq	0x0003d2e8(%rip),%rdx
0000000000021092	leaq	0x0003d324(%rip),%rcx
0000000000021099	leaq	0x0008e918(%rip),%r9
00000000000210a0	leaq	0x0003ca59(%rip),%r8
00000000000210a7	leaq	0x0003ca56(%rip),%rbx
00000000000210ae	movq	%rbx,0x18(%rsp)
00000000000210b3	leaq	0x0008e77e(%rip),%rbx
00000000000210ba	movq	%rbx,0x10(%rsp)
00000000000210bf	movq	%rax,0x08(%rsp)
00000000000210c4	movq	%r8,(%rsp)
00000000000210c8	jmp	0x00021178
00000000000210cd	movq	0x0008774c(%rip),%rdi
00000000000210d4	leaq	0x00087255(%rip),%rsi
00000000000210db	call	*0x0008724f(%rip)
00000000000210e1	leaq	0x00087258(%rip),%rsi
00000000000210e8	movq	%r14,%rdi
00000000000210eb	movq	%rax,%rdx
00000000000210ee	call	*0x0008724c(%rip)
00000000000210f4	testb	%al,%al
00000000000210f6	movq	%r14,%rdi
00000000000210f9	jne	0x00021188
00000000000210ff	movq	0x0008771a(%rip),%rdi
0000000000021106	leaq	0x00087223(%rip),%rsi
000000000002110d	call	*0x0008721d(%rip)
0000000000021113	movq	%rax,%rdi
0000000000021116	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000002111b	movq	%rax,%rbx
000000000002111e	movq	0x00083b3b(%rip),%rsi
0000000000021125	movq	%r14,%rdi
0000000000021128	call	*0x00062faa(%rip)
000000000002112e	leaq	0x0008e703(%rip),%r8
0000000000021135	leaq	0x0003d30a(%rip),%r9
000000000002113c	leaq	0xe0(%rbp),%rdi
0000000000021140	leaq	0xd8(%rbp),%rsi
0000000000021144	leaq	0x0003d22f(%rip),%rdx
000000000002114b	leaq	0x0003d26b(%rip),%rcx
0000000000021152	movq	%r9,0x20(%rsp)
0000000000021157	leaq	0x0008e87a(%rip),%r9
000000000002115e	movq	%r8,0x18(%rsp)
0000000000021163	movq	%rax,0x10(%rsp)
0000000000021168	leaq	0x0003c991(%rip),%rax
000000000002116f	movq	%rbx,0x08(%rsp)
0000000000021174	movq	%rax,(%rsp)
0000000000021178	movl	$0x0000006a,%r8d
000000000002117e	xorb	%al,%al
0000000000021180	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000021185	movq	%r14,%rdi
0000000000021188	movq	0x00084be1(%rip),%rsi
000000000002118f	call	*0x00062f43(%rip)
0000000000021195	testq	%rax,%rax
0000000000021198	je	0x00021223
000000000002119e	movq	0x00087313(%rip),%rdi
00000000000211a5	leaq	0x00087134(%rip),%rsi
00000000000211ac	call	*0x0008712e(%rip)
00000000000211b2	movq	%rax,%rbx
00000000000211b5	movq	0x000838fc(%rip),%rsi
00000000000211bc	movq	0xe0(%rbp),%rdi
00000000000211c0	movq	0x00062f11(%rip),%r15
00000000000211c7	call	*%r15
00000000000211ca	movq	0x00083b7f(%rip),%rsi
00000000000211d1	movq	%rbx,%rdi
00000000000211d4	movq	%rax,%rdx
00000000000211d7	call	*%r15
00000000000211da	movq	%rax,%rbx
00000000000211dd	leaq	0x0008fd54(%rip),%rdx
00000000000211e4	movq	0x00083b6d(%rip),%rsi
00000000000211eb	movq	%rbx,%rdi
00000000000211ee	call	*%r15
00000000000211f1	movq	0x00084b80(%rip),%rsi
00000000000211f8	movq	0xe0(%rbp),%rdi
00000000000211fc	movq	%r14,%rdx
00000000000211ff	movq	%rbx,%rcx
0000000000021202	call	*%r15
0000000000021205	movq	0x000843fc(%rip),%rsi
000000000002120c	movq	0xe0(%rbp),%rdi
0000000000021210	call	*%r15
0000000000021213	movq	0x0008431e(%rip),%rsi
000000000002121a	movq	%rax,%rdi
000000000002121d	movq	%rbx,%rdx
0000000000021220	call	*%r15
0000000000021223	movq	0x0008388e(%rip),%rsi
000000000002122a	movq	0xe0(%rbp),%rdi
000000000002122e	movq	0x00062ea3(%rip),%rbx
0000000000021235	call	*%rbx
0000000000021237	movq	0x00083882(%rip),%rsi
000000000002123e	movq	%rax,%rdi
0000000000021241	call	*%rbx
0000000000021243	leaq	0x0008fd0e(%rip),%rdx
000000000002124a	movq	0x000847a7(%rip),%rsi
0000000000021251	movq	%rax,%rdi
0000000000021254	call	*%rbx
0000000000021256	testl	%eax,%eax
0000000000021258	jne	0x000212df
000000000002125e	movq	0x0008381b(%rip),%rsi
0000000000021265	movq	0x0008749c(%rip),%rdi
000000000002126c	movq	0x00062e65(%rip),%r14
0000000000021273	call	*%r14
0000000000021276	movq	%rax,%rbx
0000000000021279	movq	0x00084780(%rip),%rsi
0000000000021280	leaq	0x0008fcd1(%rip),%rdx
0000000000021287	movq	%rbx,%rdi
000000000002128a	call	*%r14
000000000002128d	movq	0x000837f4(%rip),%rsi
0000000000021294	movq	0xe0(%rbp),%rdx
0000000000021298	movq	%rbx,%rdi
000000000002129b	call	*%r14
000000000002129e	movq	0x000837f3(%rip),%rsi
00000000000212a5	movq	0x00084ad4(%rip),%rdx
00000000000212ac	movq	%rbx,%rdi
00000000000212af	call	*%r14
00000000000212b2	movq	0x000837ff(%rip),%rsi
00000000000212b9	movq	0xe0(%rbp),%rdi
00000000000212bd	call	*%r14
00000000000212c0	movq	0x000837f9(%rip),%rsi
00000000000212c7	movq	%rax,%rdi
00000000000212ca	call	*%r14
00000000000212cd	movq	0x000837f4(%rip),%rsi
00000000000212d4	movq	%rax,%rdi
00000000000212d7	movq	%rbx,%rdx
00000000000212da	call	*%r14
00000000000212dd	jmp	0x000212fe
00000000000212df	movq	0xe0(%rbp),%rdi
00000000000212e3	cmpl	$0x02,%eax
00000000000212e6	jne	0x000212f1
00000000000212e8	movq	0x00084a79(%rip),%rsi
00000000000212ef	jmp	0x000212f8
00000000000212f1	movq	0x00083840(%rip),%rsi
00000000000212f8	call	*0x00062dda(%rip)
00000000000212fe	addq	$0x38,%rsp
0000000000021302	popq	%rbx
0000000000021303	popq	%r14
0000000000021305	popq	%r15
0000000000021307	popq	%rbp
0000000000021308	ret
-[PBXLSType hash]:
0000000000021309	pushq	%rbp
000000000002130a	movq	%rsp,%rbp
000000000002130d	movq	0x00084174(%rip),%rsi
0000000000021314	call	*0x00062dbe(%rip)
000000000002131a	leaq	0x0008708f(%rip),%rsi
0000000000021321	movq	0x00087088(%rip),%rcx
0000000000021328	movq	%rax,%rdi
000000000002132b	popq	%rbp
000000000002132c	jmp	*%rcx
-[PBXGDB_ArrayDataValue setStringValue:]:
000000000002132e	pushq	%rbp
000000000002132f	movq	%rsp,%rbp
0000000000021332	pushq	%r15
0000000000021334	pushq	%r14
0000000000021336	pushq	%rbx
0000000000021337	subq	$0x18,%rsp
000000000002133b	movq	%rdx,%r14
000000000002133e	movq	%rdi,%rbx
0000000000021341	leaq	0x0008de30(%rip),%rax
0000000000021348	movq	(%rax),%rax
000000000002134b	movq	(%rbx,%rax),%rdi
000000000002134f	movq	0x000837b2(%rip),%rsi
0000000000021356	call	*0x00062d7c(%rip)
000000000002135c	testq	%rax,%rax
000000000002135f	je	0x000213ab
0000000000021361	cmpq	%r14,%rax
0000000000021364	je	0x000213ab
0000000000021366	leaq	0x00086ff3(%rip),%rsi
000000000002136d	movq	%rax,%rdi
0000000000021370	movq	%r14,%rdx
0000000000021373	call	*0x00086fe7(%rip)
0000000000021379	testb	%al,%al
000000000002137b	jne	0x000213ab
000000000002137d	movq	0x00083eac(%rip),%rsi
0000000000021384	movq	0x00062d4d(%rip),%r15
000000000002138b	movq	%rbx,%rdi
000000000002138e	call	*%r15
0000000000021391	movq	0x00084210(%rip),%rsi
0000000000021398	movq	%rbx,%rdi
000000000002139b	call	*%r15
000000000002139e	movq	0x000841fb(%rip),%rsi
00000000000213a5	movq	%rbx,%rdi
00000000000213a8	call	*%r15
00000000000213ab	movq	0x000841fe(%rip),%rsi
00000000000213b2	movq	%rbx,%rdi
00000000000213b5	call	*0x00062d1d(%rip)
00000000000213bb	testb	%al,%al
00000000000213bd	je	0x000213e1
00000000000213bf	movq	0x000837b2(%rip),%rsi
00000000000213c6	movq	0x00087083(%rip),%rdi
00000000000213cd	leaq	0x0008f5e4(%rip),%rdx
00000000000213d4	movq	%r14,%rcx
00000000000213d7	xorb	%al,%al
00000000000213d9	call	*0x00062cf9(%rip)
00000000000213df	jmp	0x00021412
00000000000213e1	movq	0x000841d0(%rip),%rsi
00000000000213e8	movq	0x00062ce9(%rip),%r15
00000000000213ef	movq	%rbx,%rdi
00000000000213f2	call	*%r15
00000000000213f5	movq	0x0008377c(%rip),%rsi
00000000000213fc	movq	0x0008704d(%rip),%rdi
0000000000021403	leaq	0x0008e3ce(%rip),%rdx
000000000002140a	movq	%r14,%rcx
000000000002140d	xorb	%al,%al
000000000002140f	call	*%r15
0000000000021412	movq	%rbx,0xd8(%rbp)
0000000000021416	movq	0x000878fb(%rip),%rcx
000000000002141d	movq	%rcx,0xe0(%rbp)
0000000000021421	movq	0x00084198(%rip),%rsi
0000000000021428	leaq	0xd8(%rbp),%rdi
000000000002142c	movq	%rax,%rdx
000000000002142f	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000021434	addq	$0x18,%rsp
0000000000021438	popq	%rbx
0000000000021439	popq	%r14
000000000002143b	popq	%r15
000000000002143d	popq	%rbp
000000000002143e	ret
-[PBXGDB_VarObjDataValue2 isSTLVectorType]:
000000000002143f	pushq	%rbp
0000000000021440	movq	%rsp,%rbp
0000000000021443	pushq	%rbx
0000000000021444	pushq	%rax
0000000000021445	leaq	0x0008dd5c(%rip),%rax
000000000002144c	movq	(%rax),%rax
000000000002144f	movq	(%rdi,%rax),%rdi
0000000000021453	movq	0x0008402e(%rip),%rsi
000000000002145a	movq	0x00062c77(%rip),%rbx
0000000000021461	call	*%rbx
0000000000021463	movq	0x000843e6(%rip),%rsi
000000000002146a	movq	0x0008718f(%rip),%rdi
0000000000021471	movq	%rax,%rdx
0000000000021474	call	*%rbx
0000000000021476	movsbl	%al,%eax
0000000000021479	addq	$0x08,%rsp
000000000002147d	popq	%rbx
000000000002147e	popq	%rbp
000000000002147f	ret
-[PBXGDB_VarObjDataValue2 isArrayType]:
0000000000021480	pushq	%rbp
0000000000021481	movq	%rsp,%rbp
0000000000021484	pushq	%r15
0000000000021486	pushq	%r14
0000000000021488	pushq	%rbx
0000000000021489	pushq	%rax
000000000002148a	movq	%rdi,%rbx
000000000002148d	movq	0x0008716c(%rip),%r14
0000000000021494	movq	0x00085de5(%rip),%rsi
000000000002149b	movq	0x00062c36(%rip),%r15
00000000000214a2	call	*%r15
00000000000214a5	leaq	0x0008dcf4(%rip),%rcx
00000000000214ac	movq	(%rcx),%rcx
00000000000214af	movq	(%rbx,%rcx),%rcx
00000000000214b3	movq	0x000843a6(%rip),%rsi
00000000000214ba	movq	%r14,%rdi
00000000000214bd	movl	%eax,%edx
00000000000214bf	xorl	%r8d,%r8d
00000000000214c2	call	*%r15
00000000000214c5	movsbl	%al,%eax
00000000000214c8	addq	$0x08,%rsp
00000000000214cc	popq	%rbx
00000000000214cd	popq	%r14
00000000000214cf	popq	%r15
00000000000214d1	popq	%rbp
00000000000214d2	ret
-[PBXGDB_GetFrameSymbolsDataValueSequence _gotVerifyFileStatics:]:
00000000000214d3	pushq	%rbp
00000000000214d4	movq	%rsp,%rbp
00000000000214d7	pushq	%r15
00000000000214d9	pushq	%r14
00000000000214db	pushq	%rbx
00000000000214dc	subq	$0x38,%rsp
00000000000214e0	movq	%rdx,%r15
00000000000214e3	movq	%rdi,0xe0(%rbp)
00000000000214e7	movq	%rsi,0xd8(%rbp)
00000000000214eb	movq	0x000835c6(%rip),%rsi
00000000000214f2	call	*0x00062be0(%rip)
00000000000214f8	movq	%rax,%r14
00000000000214fb	testq	%r15,%r15
00000000000214fe	jne	0x00021566
0000000000021500	movq	0x00087201(%rip),%rdi
0000000000021507	leaq	0x00086e22(%rip),%rsi
000000000002150e	call	*0x00086e1c(%rip)
0000000000021514	movq	%rax,%rdi
0000000000021517	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000002151c	leaq	0xe0(%rbp),%rdi
0000000000021520	leaq	0xd8(%rbp),%rsi
0000000000021524	leaq	0x0003cf7b(%rip),%rdx
000000000002152b	leaq	0x0003ce8b(%rip),%rcx
0000000000021532	leaq	0x0008e47f(%rip),%r9
0000000000021539	leaq	0x0003c5c0(%rip),%r8
0000000000021540	leaq	0x0003c5bd(%rip),%rbx
0000000000021547	movq	%rbx,0x18(%rsp)
000000000002154c	leaq	0x0008e2e5(%rip),%rbx
0000000000021553	movq	%rbx,0x10(%rsp)
0000000000021558	movq	%rax,0x08(%rsp)
000000000002155d	movq	%r8,(%rsp)
0000000000021561	jmp	0x0002160e
0000000000021566	movq	0x0008719b(%rip),%rdi
000000000002156d	leaq	0x00086dbc(%rip),%rsi
0000000000021574	call	*0x00086db6(%rip)
000000000002157a	leaq	0x00086dbf(%rip),%rsi
0000000000021581	movq	%r15,%rdi
0000000000021584	movq	%rax,%rdx
0000000000021587	call	*0x00086db3(%rip)
000000000002158d	testb	%al,%al
000000000002158f	jne	0x0002161b
0000000000021595	movq	0x0008716c(%rip),%rdi
000000000002159c	leaq	0x00086d8d(%rip),%rsi
00000000000215a3	call	*0x00086d87(%rip)
00000000000215a9	movq	%rax,%rdi
00000000000215ac	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
00000000000215b1	movq	%rax,%rbx
00000000000215b4	movq	0x000836a5(%rip),%rsi
00000000000215bb	movq	%r15,%rdi
00000000000215be	call	*0x00062b14(%rip)
00000000000215c4	leaq	0x0008e26d(%rip),%r8
00000000000215cb	leaq	0x0003ccc5(%rip),%r9
00000000000215d2	leaq	0xe0(%rbp),%rdi
00000000000215d6	leaq	0xd8(%rbp),%rsi
00000000000215da	leaq	0x0003cec5(%rip),%rdx
00000000000215e1	leaq	0x0003cdd5(%rip),%rcx
00000000000215e8	movq	%r9,0x20(%rsp)
00000000000215ed	leaq	0x0008e3e4(%rip),%r9
00000000000215f4	movq	%r8,0x18(%rsp)
00000000000215f9	movq	%rax,0x10(%rsp)
00000000000215fe	leaq	0x0003c4fb(%rip),%rax
0000000000021605	movq	%rbx,0x08(%rsp)
000000000002160a	movq	%rax,(%rsp)
000000000002160e	movl	$0x0000008e,%r8d
0000000000021614	xorb	%al,%al
0000000000021616	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000002161b	movq	0x0008441e(%rip),%rsi
0000000000021622	movq	%r15,%rdi
0000000000021625	call	*0x00062aad(%rip)
000000000002162b	movl	$0x00000001,%ebx
0000000000021630	testb	%al,%al
0000000000021632	je	0x0002164e
0000000000021634	movq	0x0008440d(%rip),%rsi
000000000002163b	movq	%r15,%rdi
000000000002163e	call	*0x00062a94(%rip)
0000000000021644	cmpb	$0x01,%al
0000000000021646	movl	$0x00000001,%ebx
000000000002164b	sbbl	$0xff,%ebx
000000000002164e	movq	0x0008346b(%rip),%rsi
0000000000021655	movq	0x00062a7c(%rip),%r15
000000000002165c	movq	%r14,%rdi
000000000002165f	call	*%r15
0000000000021662	movq	0x000843e7(%rip),%rsi
0000000000021669	leaq	0x0008f8e8(%rip),%rcx
0000000000021670	movq	%rax,%rdi
0000000000021673	movl	%ebx,%edx
0000000000021675	call	*%r15
0000000000021678	movq	0xe0(%rbp),%rdi
000000000002167c	cmpl	$0x02,%ebx
000000000002167f	jne	0x0002168a
0000000000021681	movq	0x000846e0(%rip),%rsi
0000000000021688	jmp	0x00021691
000000000002168a	movq	0x000834a7(%rip),%rsi
0000000000021691	call	*0x00062a41(%rip)
0000000000021697	addq	$0x38,%rsp
000000000002169b	popq	%rbx
000000000002169c	popq	%r14
000000000002169e	popq	%r15
00000000000216a0	popq	%rbp
00000000000216a1	ret
-[PBXGDB_GetFrameSymbolsDataValueSequence _fetchFileStaticsLITE]:
00000000000216a2	pushq	%rbp
00000000000216a3	movq	%rsp,%rbp
00000000000216a6	pushq	%r14
00000000000216a8	pushq	%rbx
00000000000216a9	movq	%rdi,%r14
00000000000216ac	movq	0x0008d25d(%rip),%rax
00000000000216b3	movb	$0x01,(%r14,%rax)
00000000000216b8	movq	0x000846c9(%rip),%rsi
00000000000216bf	movq	0x00087162(%rip),%rdi
00000000000216c6	leaq	0x0008f8ab(%rip),%rdx
00000000000216cd	leaq	0x0008e264(%rip),%rcx
00000000000216d4	leaq	0x0008f8bd(%rip),%r8
00000000000216db	leaq	0x0008f8d6(%rip),%r9
00000000000216e2	call	*0x000629f0(%rip)
00000000000216e8	movq	%rax,%rbx
00000000000216eb	movq	0x00083396(%rip),%rsi
00000000000216f2	movq	%rbx,%rdi
00000000000216f5	movq	%r14,%rdx
00000000000216f8	call	*0x000629da(%rip)
00000000000216fe	movq	0x00083393(%rip),%rsi
0000000000021705	movq	0x00084684(%rip),%rdx
000000000002170c	movq	%rbx,%rdi
000000000002170f	call	*0x000629c3(%rip)
0000000000021715	movq	0x00083f24(%rip),%rsi
000000000002171c	movq	%r14,%rdi
000000000002171f	movq	%rbx,%rdx
0000000000021722	movq	0x000629af(%rip),%rax
0000000000021729	popq	%rbx
000000000002172a	popq	%r14
000000000002172c	popq	%rbp
000000000002172d	jmp	*%rax
+[PBXGDB_MIFileListStaticsCommand miCommandForFile:shlib:format:filter:]:
000000000002172f	pushq	%rbp
0000000000021730	movq	%rsp,%rbp
0000000000021733	pushq	%r15
0000000000021735	pushq	%r14
0000000000021737	pushq	%r13
0000000000021739	pushq	%r12
000000000002173b	pushq	%rbx
000000000002173c	pushq	%rax
000000000002173d	movq	%r9,0xd0(%rbp)
0000000000021741	movq	%r8,%r15
0000000000021744	movq	%rcx,%r12
0000000000021747	movq	%rdx,%r13
000000000002174a	movq	0x0008332f(%rip),%rsi
0000000000021751	movq	0x000870d0(%rip),%rdi
0000000000021758	movq	0x00062979(%rip),%r14
000000000002175f	call	*%r14
0000000000021762	movq	%rax,%rbx
0000000000021765	movq	0x00083c04(%rip),%rsi
000000000002176c	movq	%rbx,%rdi
000000000002176f	movq	%r13,%rdx
0000000000021772	call	*%r14
0000000000021775	movq	0x00084fb4(%rip),%rsi
000000000002177c	movq	%rbx,%rdi
000000000002177f	movq	%r12,%rdx
0000000000021782	call	*%r14
0000000000021785	movq	0x00084fac(%rip),%rsi
000000000002178c	movq	%rbx,%rdi
000000000002178f	movq	%r15,%rdx
0000000000021792	call	*%r14
0000000000021795	movq	0x00084fa4(%rip),%rsi
000000000002179c	movq	%rbx,%rdi
000000000002179f	movq	0xd0(%rbp),%rdx
00000000000217a3	call	*%r14
00000000000217a6	movq	%rbx,%rax
00000000000217a9	addq	$0x08,%rsp
00000000000217ad	popq	%rbx
00000000000217ae	popq	%r12
00000000000217b0	popq	%r13
00000000000217b2	popq	%r14
00000000000217b4	popq	%r15
00000000000217b6	popq	%rbp
00000000000217b7	ret
-[PBXGDB_MIFileListParentCommand setFilename:]:
00000000000217b8	pushq	%rbp
00000000000217b9	movq	%rsp,%rbp
00000000000217bc	movq	%rdx,%rax
00000000000217bf	movq	%rdi,%rcx
00000000000217c2	movq	0x0008d61f(%rip),%rdx
00000000000217c9	movq	%rax,%rdi
00000000000217cc	movq	%rcx,%rsi
00000000000217cf	popq	%rbp
00000000000217d0	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MIFileListParentCommand setShlibname:]:
00000000000217d5	pushq	%rbp
00000000000217d6	movq	%rsp,%rbp
00000000000217d9	movq	%rdx,%rax
00000000000217dc	movq	%rdi,%rcx
00000000000217df	movq	0x0008d60a(%rip),%rdx
00000000000217e6	movq	%rax,%rdi
00000000000217e9	movq	%rcx,%rsi
00000000000217ec	popq	%rbp
00000000000217ed	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MIFileListParentCommand setFormat:]:
00000000000217f2	pushq	%rbp
00000000000217f3	movq	%rsp,%rbp
00000000000217f6	movq	%rdx,%rax
00000000000217f9	movq	%rdi,%rcx
00000000000217fc	movq	0x0008d5f5(%rip),%rdx
0000000000021803	movq	%rax,%rdi
0000000000021806	movq	%rcx,%rsi
0000000000021809	popq	%rbp
000000000002180a	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MIFileListParentCommand setRegexFilter:]:
000000000002180f	pushq	%rbp
0000000000021810	movq	%rsp,%rbp
0000000000021813	pushq	%r15
0000000000021815	pushq	%r14
0000000000021817	pushq	%rbx
0000000000021818	pushq	%rax
0000000000021819	movq	%rdx,%r15
000000000002181c	movq	%rdi,%r14
000000000002181f	testq	%r15,%r15
0000000000021822	jne	0x0002182d
0000000000021824	leaq	0x0008e10d(%rip),%rbx
000000000002182b	jmp	0x0002186e
000000000002182d	leaq	0x00086b2c(%rip),%rsi
0000000000021834	leaq	0x0008e0fd(%rip),%rbx
000000000002183b	movq	%r15,%rdi
000000000002183e	movq	%rbx,%rdx
0000000000021841	call	*0x00086b19(%rip)
0000000000021847	testb	%al,%al
0000000000021849	jne	0x0002186e
000000000002184b	movq	0x00083326(%rip),%rsi
0000000000021852	movq	0x00086bf7(%rip),%rdi
0000000000021859	leaq	0x000916b8(%rip),%rdx
0000000000021860	movq	%r15,%rcx
0000000000021863	xorb	%al,%al
0000000000021865	call	*0x0006286d(%rip)
000000000002186b	movq	%rax,%rbx
000000000002186e	movq	0x0008d58b(%rip),%rdx
0000000000021875	movq	%rbx,%rdi
0000000000021878	movq	%r14,%rsi
000000000002187b	addq	$0x08,%rsp
000000000002187f	popq	%rbx
0000000000021880	popq	%r14
0000000000021882	popq	%r15
0000000000021884	popq	%rbp
0000000000021885	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MIFileListStaticsCommand GDBCommandString]:
000000000002188a	pushq	%rbp
000000000002188b	movq	%rsp,%rbp
000000000002188e	pushq	%r14
0000000000021890	pushq	%rbx
0000000000021891	subq	$0x10,%rsp
0000000000021895	movq	%rdi,%rbx
0000000000021898	movq	0x00086bb1(%rip),%rdi
000000000002189f	leaq	0x00086a3a(%rip),%rsi
00000000000218a6	call	*0x00086a34(%rip)
00000000000218ac	movq	0x0008d545(%rip),%rcx
00000000000218b3	movq	(%rbx,%rcx),%r9
00000000000218b7	movq	0x0008d532(%rip),%rcx
00000000000218be	movq	(%rbx,%rcx),%r8
00000000000218c2	movq	0x0008d51f(%rip),%rcx
00000000000218c9	movq	(%rbx,%rcx),%rcx
00000000000218cd	movq	0x0008d52c(%rip),%rdx
00000000000218d4	movq	(%rbx,%rdx),%rdi
00000000000218d8	movq	0x000833d9(%rip),%rsi
00000000000218df	leaq	0x00091672(%rip),%rdx
00000000000218e6	movq	%rdi,(%rsp)
00000000000218ea	movq	%rax,%rdi
00000000000218ed	xorb	%al,%al
00000000000218ef	call	*0x000627e3(%rip)
00000000000218f5	leaq	0x0008d234(%rip),%rcx
00000000000218fc	movq	(%rcx),%r14
00000000000218ff	movq	%rax,%rdi
0000000000021902	movq	%rbx,%rsi
0000000000021905	movq	%r14,%rdx
0000000000021908	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000002190d	movq	(%rbx,%r14),%rax
0000000000021911	addq	$0x10,%rsp
0000000000021915	popq	%rbx
0000000000021916	popq	%r14
0000000000021918	popq	%rbp
0000000000021919	ret
-[PBXGDB_MIFileListStaticsCommand didFinishWithResultList:]:
000000000002191a	pushq	%rbp
000000000002191b	movq	%rsp,%rbp
000000000002191e	pushq	%r15
0000000000021920	pushq	%r14
0000000000021922	pushq	%r12
0000000000021924	pushq	%rbx
0000000000021925	subq	$0x10,%rsp
0000000000021929	movq	%rdx,%r14
000000000002192c	movq	%rdi,%rbx
000000000002192f	movq	0x000831a2(%rip),%rsi
0000000000021936	leaq	0x0009163b(%rip),%rdx
000000000002193d	movq	%r14,%rdi
0000000000021940	call	*0x00062792(%rip)
0000000000021946	movq	%rax,%r15
0000000000021949	leaq	0x0008d568(%rip),%rax
0000000000021950	movq	(%rax),%rdx
0000000000021953	xorl	%edi,%edi
0000000000021955	movq	%rbx,%rsi
0000000000021958	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000002195d	leaq	0x0008d564(%rip),%rax
0000000000021964	movq	(%rax),%rcx
0000000000021967	leaq	0x0008d552(%rip),%rax
000000000002196e	movq	$0x00000000,(%rbx,%rcx)
0000000000021976	movq	(%rax),%rdx
0000000000021979	xorl	%edi,%edi
000000000002197b	movq	%rbx,%rsi
000000000002197e	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000021983	testq	%r15,%r15
0000000000021986	je	0x000219be
0000000000021988	movq	0x00083151(%rip),%rsi
000000000002198f	movq	0x00062742(%rip),%r12
0000000000021996	movq	%r15,%rdi
0000000000021999	call	*%r12
000000000002199c	movq	0x00083145(%rip),%rsi
00000000000219a3	movq	%rax,%rdi
00000000000219a6	call	*%r12
00000000000219a9	leaq	0x0008d508(%rip),%rcx
00000000000219b0	movq	(%rcx),%rdx
00000000000219b3	movq	%rax,%rdi
00000000000219b6	movq	%rbx,%rsi
00000000000219b9	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000219be	movq	%rbx,0xd0(%rbp)
00000000000219c2	movq	0x00087507(%rip),%rax
00000000000219c9	movq	%rax,0xd8(%rbp)
00000000000219cd	movq	0x0008482c(%rip),%rsi
00000000000219d4	leaq	0xd0(%rbp),%rdi
00000000000219d8	movq	%r14,%rdx
00000000000219db	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000219e0	addq	$0x10,%rsp
00000000000219e4	popq	%rbx
00000000000219e5	popq	%r12
00000000000219e7	popq	%r14
00000000000219e9	popq	%r15
00000000000219eb	popq	%rbp
00000000000219ec	ret
-[PBXGDB_GetFrameSymbolsDataValueSequence _gotFileStaticsLITE:]:
00000000000219ed	pushq	%rbp
00000000000219ee	movq	%rsp,%rbp
00000000000219f1	pushq	%r14
00000000000219f3	pushq	%rbx
00000000000219f4	subq	$0x40,%rsp
00000000000219f8	movq	%rdx,%r14
00000000000219fb	movq	%rdi,0xe8(%rbp)
00000000000219ff	movq	%rsi,0xe0(%rbp)
0000000000021a03	testq	%r14,%r14
0000000000021a06	jne	0x00021a6e
0000000000021a08	movq	0x00086e19(%rip),%rdi
0000000000021a0f	leaq	0x0008691a(%rip),%rsi
0000000000021a16	call	*0x00086914(%rip)
0000000000021a1c	movq	%rax,%rdi
0000000000021a1f	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000021a24	leaq	0xe8(%rbp),%rdi
0000000000021a28	leaq	0xe0(%rbp),%rsi
0000000000021a2c	leaq	0x0003cad8(%rip),%rdx
0000000000021a33	leaq	0x0003c983(%rip),%rcx
0000000000021a3a	leaq	0x0008df77(%rip),%r9
0000000000021a41	leaq	0x0003c0b8(%rip),%r8
0000000000021a48	leaq	0x0003c0b5(%rip),%rbx
0000000000021a4f	movq	%rbx,0x18(%rsp)
0000000000021a54	leaq	0x0008dddd(%rip),%rbx
0000000000021a5b	movq	%rbx,0x10(%rsp)
0000000000021a60	movq	%rax,0x08(%rsp)
0000000000021a65	movq	%r8,(%rsp)
0000000000021a69	jmp	0x00021b16
0000000000021a6e	movq	0x00086db3(%rip),%rdi
0000000000021a75	leaq	0x000868b4(%rip),%rsi
0000000000021a7c	call	*0x000868ae(%rip)
0000000000021a82	leaq	0x000868b7(%rip),%rsi
0000000000021a89	movq	%r14,%rdi
0000000000021a8c	movq	%rax,%rdx
0000000000021a8f	call	*0x000868ab(%rip)
0000000000021a95	testb	%al,%al
0000000000021a97	jne	0x00021b23
0000000000021a9d	movq	0x00086d84(%rip),%rdi
0000000000021aa4	leaq	0x00086885(%rip),%rsi
0000000000021aab	call	*0x0008687f(%rip)
0000000000021ab1	movq	%rax,%rdi
0000000000021ab4	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000021ab9	movq	%rax,%rbx
0000000000021abc	movq	0x0008319d(%rip),%rsi
0000000000021ac3	movq	%r14,%rdi
0000000000021ac6	call	*0x0006260c(%rip)
0000000000021acc	leaq	0x0008dd65(%rip),%r8
0000000000021ad3	leaq	0x0003ca71(%rip),%r9
0000000000021ada	leaq	0xe8(%rbp),%rdi
0000000000021ade	leaq	0xe0(%rbp),%rsi
0000000000021ae2	leaq	0x0003ca22(%rip),%rdx
0000000000021ae9	leaq	0x0003c8cd(%rip),%rcx
0000000000021af0	movq	%r9,0x20(%rsp)
0000000000021af5	leaq	0x0008dedc(%rip),%r9
0000000000021afc	movq	%r8,0x18(%rsp)
0000000000021b01	movq	%rax,0x10(%rsp)
0000000000021b06	leaq	0x0003bff3(%rip),%rax
0000000000021b0d	movq	%rbx,0x08(%rsp)
0000000000021b12	movq	%rax,(%rsp)
0000000000021b16	movl	$0x000000af,%r8d
0000000000021b1c	xorb	%al,%al
0000000000021b1e	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000021b23	movq	0x00084246(%rip),%rsi
0000000000021b2a	movq	%r14,%rdi
0000000000021b2d	call	*0x000625a5(%rip)
0000000000021b33	testq	%rax,%rax
0000000000021b36	jle	0x00021bd0
0000000000021b3c	movq	0x00086975(%rip),%rdi
0000000000021b43	leaq	0x00086796(%rip),%rsi
0000000000021b4a	call	*0x00086790(%rip)
0000000000021b50	movq	%rax,%rbx
0000000000021b53	movq	0x00082f5e(%rip),%rsi
0000000000021b5a	movq	0xe8(%rbp),%rdi
0000000000021b5e	movq	0x00062573(%rip),%r14
0000000000021b65	call	*%r14
0000000000021b68	movq	0x000831e1(%rip),%rsi
0000000000021b6f	movq	%rbx,%rdi
0000000000021b72	movq	%rax,%rdx
0000000000021b75	call	*%r14
0000000000021b78	movq	%rax,%rbx
0000000000021b7b	movq	0x0008389e(%rip),%rsi
0000000000021b82	movq	0x0008420f(%rip),%rdx
0000000000021b89	movq	%rbx,%rdi
0000000000021b8c	call	*%r14
0000000000021b8f	leaq	0x0008f442(%rip),%rdx
0000000000021b96	movq	0x000831bb(%rip),%rsi
0000000000021b9d	movq	%rbx,%rdi
0000000000021ba0	call	*%r14
0000000000021ba3	movq	0x000839ee(%rip),%rsi
0000000000021baa	movq	%rbx,%rdi
0000000000021bad	xorl	%edx,%edx
0000000000021baf	call	*%r14
0000000000021bb2	movq	0x00083a4f(%rip),%rsi
0000000000021bb9	movq	0xe8(%rbp),%rdi
0000000000021bbd	call	*%r14
0000000000021bc0	movq	0x00083971(%rip),%rsi
0000000000021bc7	movq	%rax,%rdi
0000000000021bca	movq	%rbx,%rdx
0000000000021bcd	call	*%r14
0000000000021bd0	movq	0x00082f61(%rip),%rsi
0000000000021bd7	movq	0xe8(%rbp),%rdi
0000000000021bdb	call	*0x000624f7(%rip)
0000000000021be1	addq	$0x40,%rsp
0000000000021be5	popq	%rbx
0000000000021be6	popq	%r14
0000000000021be8	popq	%rbp
0000000000021be9	ret
-[PBXLSDataValue setExpandAction:]:
0000000000021bea	pushq	%rbp
0000000000021beb	movq	%rsp,%rbp
0000000000021bee	movq	0x0008d5cb(%rip),%rax
0000000000021bf5	movq	%rdx,(%rdi,%rax)
0000000000021bf9	popq	%rbp
0000000000021bfa	ret
-[PBXGDB_GetFrameSymbolsDataValueSequence didFinish]:
0000000000021bfb	pushq	%rbp
0000000000021bfc	movq	%rsp,%rbp
0000000000021bff	pushq	%r15
0000000000021c01	pushq	%r14
0000000000021c03	pushq	%r13
0000000000021c05	pushq	%r12
0000000000021c07	pushq	%rbx
0000000000021c08	subq	$0x28,%rsp
0000000000021c0c	movq	%rdi,%r13
0000000000021c0f	movq	%r13,0xb8(%rbp)
0000000000021c13	movq	0x00082e9e(%rip),%rsi
0000000000021c1a	movq	0x000624b7(%rip),%r14
0000000000021c21	call	*%r14
0000000000021c24	movq	0x00083e7d(%rip),%rsi
0000000000021c2b	movq	%rax,%rdi
0000000000021c2e	call	*%r14
0000000000021c31	movq	%rax,%r12
0000000000021c34	movq	0x000839cd(%rip),%rsi
0000000000021c3b	movq	%r13,%rdi
0000000000021c3e	call	*%r14
0000000000021c41	movq	%rax,%rbx
0000000000021c44	movq	0x000838ed(%rip),%rsi
0000000000021c4b	movq	%rbx,%rdi
0000000000021c4e	movq	%r12,%rdx
0000000000021c51	call	*%r14
0000000000021c54	movq	0x000838fd(%rip),%rsi
0000000000021c5b	movq	%rbx,%rdi
0000000000021c5e	movq	%rbx,%r15
0000000000021c61	movq	%r12,%rdx
0000000000021c64	call	*%r14
0000000000021c67	movq	0x000837b2(%rip),%rsi
0000000000021c6e	movq	0x000837a3(%rip),%rdx
0000000000021c75	movq	%r12,%rdi
0000000000021c78	call	*%r14
0000000000021c7b	movq	0x00082e36(%rip),%rsi
0000000000021c82	movq	%r13,%rdi
0000000000021c85	call	*%r14
0000000000021c88	movq	0x000838b1(%rip),%rsi
0000000000021c8f	movq	%rax,%rdi
0000000000021c92	call	*%r14
0000000000021c95	movq	%rax,%r14
0000000000021c98	leaq	0x00086671(%rip),%rsi
0000000000021c9f	movq	%r14,%rdi
0000000000021ca2	call	*0x00086668(%rip)
0000000000021ca8	movq	%rax,0xc0(%rbp)
0000000000021cac	testq	%rax,%rax
0000000000021caf	je	0x00021d23
0000000000021cb1	xorl	%ebx,%ebx
0000000000021cb3	movq	0x0006241e(%rip),%r13
0000000000021cba	movq	%r14,%rdi
0000000000021cbd	leaq	0x0008665c(%rip),%rsi
0000000000021cc4	movq	%rbx,%rdx
0000000000021cc7	call	*0x00086653(%rip)
0000000000021ccd	movq	%r14,%r12
0000000000021cd0	movq	%rax,%r14
0000000000021cd3	movq	0x0008691e(%rip),%rdi
0000000000021cda	movq	0x000835e7(%rip),%rsi
0000000000021ce1	call	*%r13
0000000000021ce4	movq	%r14,%rdi
0000000000021ce7	movq	0x000835d2(%rip),%rsi
0000000000021cee	movq	%rax,%rdx
0000000000021cf1	call	*%r13
0000000000021cf4	movq	%r15,%rdi
0000000000021cf7	movq	0x0008383a(%rip),%rsi
0000000000021cfe	movq	%r14,%rdx
0000000000021d01	call	*%r13
0000000000021d04	movq	%r15,%rdi
0000000000021d07	movq	0x0008384a(%rip),%rsi
0000000000021d0e	movq	%r14,%rdx
0000000000021d11	movq	%r12,%r14
0000000000021d14	call	*%r13
0000000000021d17	movq	0xc0(%rbp),%rax
0000000000021d1b	incq	%rbx
0000000000021d1e	cmpq	%rbx,%rax
0000000000021d21	jne	0x00021cba
0000000000021d23	movq	0x000839c6(%rip),%rsi
0000000000021d2a	movq	0x000623a7(%rip),%r14
0000000000021d31	movq	%r15,%rdi
0000000000021d34	call	*%r14
0000000000021d37	movq	0x00082d7a(%rip),%rsi
0000000000021d3e	movq	0xb8(%rbp),%rbx
0000000000021d42	movq	%rbx,%rdi
0000000000021d45	call	*%r14
0000000000021d48	movq	0x000836f9(%rip),%rsi
0000000000021d4f	movq	%rax,%rdi
0000000000021d52	call	*%r14
0000000000021d55	movq	0x00083804(%rip),%rsi
0000000000021d5c	movq	%rax,%rdi
0000000000021d5f	movq	%r15,%rdx
0000000000021d62	call	*%r14
0000000000021d65	leaq	0xc8(%rbp),%rdi
0000000000021d69	movq	%rbx,0xc8(%rbp)
0000000000021d6d	movq	0x00087024(%rip),%rax
0000000000021d74	movq	%rax,0xd0(%rbp)
0000000000021d78	movq	0x00082db9(%rip),%rsi
0000000000021d7f	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000021d84	addq	$0x28,%rsp
0000000000021d88	popq	%rbx
0000000000021d89	popq	%r12
0000000000021d8b	popq	%r13
0000000000021d8d	popq	%r14
0000000000021d8f	popq	%r15
0000000000021d91	popq	%rbp
0000000000021d92	ret
-[PBXGDB_Adaptor globalsDescriptionDV]:
0000000000021d93	pushq	%rbp
0000000000021d94	movq	%rsp,%rbp
0000000000021d97	pushq	%r14
0000000000021d99	pushq	%rbx
0000000000021d9a	movq	%rdi,%rbx
0000000000021d9d	movq	0x0008c9bc(%rip),%rax
0000000000021da4	movq	(%rbx,%rax),%rax
0000000000021da8	testq	%rax,%rax
0000000000021dab	jne	0x00021e3e
0000000000021db1	movq	0x00086700(%rip),%rdi
0000000000021db8	leaq	0x00086521(%rip),%rsi
0000000000021dbf	call	*0x0008651b(%rip)
0000000000021dc5	movq	0x00082f84(%rip),%rsi
0000000000021dcc	movq	0x00062305(%rip),%r14
0000000000021dd3	movq	%rax,%rdi
0000000000021dd6	movq	%rbx,%rdx
0000000000021dd9	call	*%r14
0000000000021ddc	movq	0x0008c97d(%rip),%rdx
0000000000021de3	movq	%rax,%rdi
0000000000021de6	movq	%rbx,%rsi
0000000000021de9	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000021dee	leaq	0x0008ea83(%rip),%rdx
0000000000021df5	movq	0x0008c964(%rip),%rax
0000000000021dfc	movq	(%rbx,%rax),%rdi
0000000000021e00	movq	0x00082f51(%rip),%rsi
0000000000021e07	call	*%r14
0000000000021e0a	movq	0x0008c94f(%rip),%rax
0000000000021e11	movq	(%rbx,%rax),%rdi
0000000000021e15	movq	0x00083604(%rip),%rsi
0000000000021e1c	movq	0x000835f5(%rip),%rdx
0000000000021e23	call	*%r14
0000000000021e26	movq	0x000835fb(%rip),%rsi
0000000000021e2d	movq	%rbx,%rdi
0000000000021e30	call	*%r14
0000000000021e33	movq	0x0008c926(%rip),%rax
0000000000021e3a	movq	(%rbx,%rax),%rax
0000000000021e3e	popq	%rbx
0000000000021e3f	popq	%r14
0000000000021e41	popq	%rbp
0000000000021e42	ret
-[PBXGDB_Adaptor requestLoadSavedGlobals]:
0000000000021e43	pushq	%rbp
0000000000021e44	movq	%rsp,%rbp
0000000000021e47	movq	0x00082f22(%rip),%rsi
0000000000021e4e	movq	0x0008666b(%rip),%rdi
0000000000021e55	call	*0x0006227d(%rip)
0000000000021e5b	leaq	0x0008e976(%rip),%rdx
0000000000021e62	movq	0x00082f0f(%rip),%rsi
0000000000021e69	movq	%rax,%rdi
0000000000021e6c	movq	0x00062265(%rip),%rax
0000000000021e73	popq	%rbp
0000000000021e74	jmp	*%rax
-[PBXGDB_ContainingDataValue2 updateVarObjsMappingInDV:]:
0000000000021e76	pushq	%rbp
0000000000021e77	movq	%rsp,%rbp
0000000000021e7a	pushq	%r15
0000000000021e7c	pushq	%r14
0000000000021e7e	pushq	%r13
0000000000021e80	pushq	%r12
0000000000021e82	pushq	%rbx
0000000000021e83	subq	$0x000000d8,%rsp
0000000000021e8a	movq	%rdi,0xffffff08(%rbp)
0000000000021e91	movq	0x00062208(%rip),%rax
0000000000021e98	movq	(%rax),%rax
0000000000021e9b	movq	%rax,0xd0(%rbp)
0000000000021e9f	xorps	%xmm0,%xmm0
0000000000021ea2	movaps	%xmm0,0xc0(%rbp)
0000000000021ea6	movaps	%xmm0,0xb0(%rbp)
0000000000021eaa	movaps	%xmm0,0xa0(%rbp)
0000000000021eae	movaps	%xmm0,0x90(%rbp)
0000000000021eb2	movq	0x00083bff(%rip),%rsi
0000000000021eb9	movq	%rdx,%rdi
0000000000021ebc	call	*0x00062216(%rip)
0000000000021ec2	movq	%rax,%r12
0000000000021ec5	leaq	0x000864b4(%rip),%rsi
0000000000021ecc	leaq	0x90(%rbp),%rdx
0000000000021ed0	leaq	0xffffff10(%rbp),%rcx
0000000000021ed7	movq	%r12,%rdi
0000000000021eda	movl	$0x00000010,%r8d
0000000000021ee0	call	*0x0008649a(%rip)
0000000000021ee6	movq	%rax,%rbx
0000000000021ee9	testq	%rbx,%rbx
0000000000021eec	je	0x00021f75
0000000000021ef2	movq	0xa0(%rbp),%rax
0000000000021ef6	movq	(%rax),%r13
0000000000021ef9	xorl	%r14d,%r14d
0000000000021efc	movq	0xa0(%rbp),%rax
0000000000021f00	cmpq	%r13,(%rax)
0000000000021f03	je	0x00021f0d
0000000000021f05	movq	%r12,%rdi
0000000000021f08	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
0000000000021f0d	movq	0x98(%rbp),%rax
0000000000021f11	movq	(%rax,%r14,8),%r15
0000000000021f15	movq	%r15,%rdi
0000000000021f18	movq	0x000837d9(%rip),%rsi
0000000000021f1f	call	*0x000621b3(%rip)
0000000000021f25	testq	%rax,%rax
0000000000021f28	je	0x00021f44
0000000000021f2a	movq	0xffffff08(%rbp),%rdi
0000000000021f31	movq	0x000838c8(%rip),%rsi
0000000000021f38	movq	%rax,%rdx
0000000000021f3b	movq	%r15,%rcx
0000000000021f3e	call	*0x00062194(%rip)
0000000000021f44	incq	%r14
0000000000021f47	cmpq	%rbx,%r14
0000000000021f4a	jb	0x00021efc
0000000000021f4c	movq	%r12,%rdi
0000000000021f4f	leaq	0x0008642a(%rip),%rsi
0000000000021f56	leaq	0x90(%rbp),%rdx
0000000000021f5a	leaq	0xffffff10(%rbp),%rcx
0000000000021f61	movl	$0x00000010,%r8d
0000000000021f67	call	*0x00086413(%rip)
0000000000021f6d	movq	%rax,%rbx
0000000000021f70	testq	%rbx,%rbx
0000000000021f73	jne	0x00021ef9
0000000000021f75	movq	0x00062124(%rip),%rax
0000000000021f7c	movq	(%rax),%rax
0000000000021f7f	cmpq	0xd0(%rbp),%rax
0000000000021f83	jne	0x00021f97
0000000000021f85	addq	$0x000000d8,%rsp
0000000000021f8c	popq	%rbx
0000000000021f8d	popq	%r12
0000000000021f8f	popq	%r13
0000000000021f91	popq	%r14
0000000000021f93	popq	%r15
0000000000021f95	popq	%rbp
0000000000021f96	ret
0000000000021f97	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
-[PBXLSDataValue allChildDataValues]:
0000000000021f9c	pushq	%rbp
0000000000021f9d	movq	%rsp,%rbp
0000000000021fa0	pushq	%r15
0000000000021fa2	pushq	%r14
0000000000021fa4	pushq	%r13
0000000000021fa6	pushq	%r12
0000000000021fa8	pushq	%rbx
0000000000021fa9	pushq	%rax
0000000000021faa	movq	%rdi,%rbx
0000000000021fad	movq	0x0008d264(%rip),%rax
0000000000021fb4	movq	(%rbx,%rax),%rax
0000000000021fb8	testq	%rax,%rax
0000000000021fbb	jne	0x000220ca
0000000000021fc1	movq	0x00086498(%rip),%rdi
0000000000021fc8	leaq	0x00086311(%rip),%rsi
0000000000021fcf	call	*0x0008630b(%rip)
0000000000021fd5	movq	0x00082a94(%rip),%rsi
0000000000021fdc	movq	0x000620f5(%rip),%r14
0000000000021fe3	movq	%rax,%rdi
0000000000021fe6	call	*%r14
0000000000021fe9	movq	%rax,%r15
0000000000021fec	movq	0x00083695(%rip),%rsi
0000000000021ff3	movq	%rbx,%rdi
0000000000021ff6	movq	%rbx,0xd0(%rbp)
0000000000021ffa	call	*%r14
0000000000021ffd	movq	0x000834dc(%rip),%rsi
0000000000022004	movq	%r15,%rdi
0000000000022007	movq	%rax,%rdx
000000000002200a	call	*%r14
000000000002200d	leaq	0x000862fc(%rip),%rsi
0000000000022014	movq	%r15,%rdi
0000000000022017	call	*0x000862f3(%rip)
000000000002201d	movq	%rax,%r12
0000000000022020	testq	%r12,%r12
0000000000022023	jle	0x000220a9
0000000000022029	xorl	%ebx,%ebx
000000000002202b	movq	0x000620a6(%rip),%r14
0000000000022032	movq	%r15,%rdi
0000000000022035	leaq	0x000862e4(%rip),%rsi
000000000002203c	movq	%rbx,%rdx
000000000002203f	call	*0x000862db(%rip)
0000000000022045	movq	%rax,%r13
0000000000022048	movq	%r13,%rdi
000000000002204b	movq	0x0008375e(%rip),%rsi
0000000000022052	call	*0x00062080(%rip)
0000000000022058	testb	%al,%al
000000000002205a	je	0x000220a1
000000000002205c	movq	%r13,%rdi
000000000002205f	movq	0x0008352a(%rip),%rsi
0000000000022066	call	*0x0006206c(%rip)
000000000002206c	cmpl	$0x02,%eax
000000000002206f	jne	0x000220a1
0000000000022071	movq	%r13,%rdi
0000000000022074	movq	0x0008360d(%rip),%rsi
000000000002207b	call	*%r14
000000000002207e	movq	%r15,%rdi
0000000000022081	movq	0x00083458(%rip),%rsi
0000000000022088	movq	%rax,%rdx
000000000002208b	call	*%r14
000000000002208e	movq	%r15,%rdi
0000000000022091	leaq	0x00086278(%rip),%rsi
0000000000022098	call	*0x00086272(%rip)
000000000002209e	movq	%rax,%r12
00000000000220a1	incq	%rbx
00000000000220a4	cmpq	%r12,%rbx
00000000000220a7	jl	0x00022032
00000000000220a9	movq	0x0008d168(%rip),%rdx
00000000000220b0	movq	%r15,%rdi
00000000000220b3	movq	0xd0(%rbp),%rbx
00000000000220b7	movq	%rbx,%rsi
00000000000220ba	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000220bf	movq	0x0008d152(%rip),%rax
00000000000220c6	movq	(%rbx,%rax),%rax
00000000000220ca	addq	$0x08,%rsp
00000000000220ce	popq	%rbx
00000000000220cf	popq	%r12
00000000000220d1	popq	%r13
00000000000220d3	popq	%r14
00000000000220d5	popq	%r15
00000000000220d7	popq	%rbp
00000000000220d8	ret
-[PBXGDB_Adaptor registersDescriptionDVVariablesView]:
00000000000220d9	pushq	%rbp
00000000000220da	movq	%rsp,%rbp
00000000000220dd	movq	0x0008c6b4(%rip),%rax
00000000000220e4	movq	(%rdi,%rax),%rax
00000000000220e8	popq	%rbp
00000000000220e9	ret
-[PBXGDB_FrameDataValue2 didUpdateValues]:
00000000000220ea	pushq	%rbp
00000000000220eb	movq	%rsp,%rbp
00000000000220ee	pushq	%r14
00000000000220f0	pushq	%rbx
00000000000220f1	subq	$0x10,%rsp
00000000000220f5	movq	%rdi,%rbx
00000000000220f8	movq	%rbx,0xe0(%rbp)
00000000000220fc	movq	0x00086d15(%rip),%rax
0000000000022103	movq	%rax,0xe8(%rbp)
0000000000022107	movq	0x000835e2(%rip),%rsi
000000000002210e	leaq	0xe0(%rbp),%rdi
0000000000022112	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000022117	movq	0x000834ba(%rip),%rsi
000000000002211e	movq	%rbx,%rdi
0000000000022121	call	*0x00061fb1(%rip)
0000000000022127	testl	%eax,%eax
0000000000022129	je	0x00022166
000000000002212b	movq	0x00083496(%rip),%rsi
0000000000022132	movq	0x00061f9f(%rip),%r14
0000000000022139	movq	%rbx,%rdi
000000000002213c	call	*%r14
000000000002213f	movq	0x00082caa(%rip),%rsi
0000000000022146	movq	%rax,%rdi
0000000000022149	call	*%r14
000000000002214c	movq	0x00083a15(%rip),%rsi
0000000000022153	movq	%rax,%rdi
0000000000022156	call	*%r14
0000000000022159	movq	0x00083ff0(%rip),%rsi
0000000000022160	movq	%rax,%rdi
0000000000022163	call	*%r14
0000000000022166	addq	$0x10,%rsp
000000000002216a	popq	%rbx
000000000002216b	popq	%r14
000000000002216d	popq	%rbp
000000000002216e	ret
-[PBXGDB_ContainingDataValue2 didUpdateValues]:
000000000002216f	pushq	%rbp
0000000000022170	movq	%rsp,%rbp
0000000000022173	pushq	%r15
0000000000022175	pushq	%r14
0000000000022177	pushq	%r13
0000000000022179	pushq	%r12
000000000002217b	pushq	%rbx
000000000002217c	subq	$0x28,%rsp
0000000000022180	movq	%rdi,%rbx
0000000000022183	movq	0x0008393e(%rip),%rsi
000000000002218a	call	*0x00061f48(%rip)
0000000000022190	movq	%rax,%r14
0000000000022193	leaq	0x00086176(%rip),%rsi
000000000002219a	movq	%r14,%rdi
000000000002219d	call	*0x0008616d(%rip)
00000000000221a3	testq	%rax,%rax
00000000000221a6	je	0x000222b5
00000000000221ac	movq	0x00082905(%rip),%rsi
00000000000221b3	movq	0x00061f1e(%rip),%r15
00000000000221ba	movq	%rbx,%rdi
00000000000221bd	call	*%r15
00000000000221c0	movq	0x00083909(%rip),%rsi
00000000000221c7	movq	%rax,%rdi
00000000000221ca	call	*%r15
00000000000221cd	testb	%al,%al
00000000000221cf	je	0x000222b5
00000000000221d5	movq	0x00082914(%rip),%rsi
00000000000221dc	movq	0x00061ef5(%rip),%r15
00000000000221e3	movq	%r14,%rdi
00000000000221e6	call	*%r15
00000000000221e9	movq	%rax,%r14
00000000000221ec	movq	0x00082905(%rip),%rsi
00000000000221f3	movq	%r14,%rdi
00000000000221f6	call	*%r15
00000000000221f9	movq	%rax,%r15
00000000000221fc	testq	%r15,%r15
00000000000221ff	je	0x0002228b
0000000000022205	movq	0x000838cc(%rip),%r13
000000000002220c	movq	0x00061ec5(%rip),%r12
0000000000022213	movq	%r15,%rdi
0000000000022216	movq	%r13,%rsi
0000000000022219	call	*0x00061eb9(%rip)
000000000002221f	testb	%al,%al
0000000000022221	jne	0x00022237
0000000000022223	movq	%r15,%rdi
0000000000022226	movq	0x000838b3(%rip),%rsi
000000000002222d	call	*0x00061ea5(%rip)
0000000000022233	cmpb	$0x01,%al
0000000000022235	jne	0x00022273
0000000000022237	movq	0x0008c622(%rip),%rax
000000000002223e	incq	(%rbx,%rax)
0000000000022242	movq	%r15,%rdi
0000000000022245	movq	0x0008389c(%rip),%rsi
000000000002224c	movq	%rbx,%rdx
000000000002224f	call	*%r12
0000000000022252	movq	%r15,%rdi
0000000000022255	movq	0x0008389c(%rip),%rsi
000000000002225c	movq	0x0008388d(%rip),%rdx
0000000000022263	call	*%r12
0000000000022266	movq	%r15,%rdi
0000000000022269	movq	0x00083318(%rip),%rsi
0000000000022270	call	*%r12
0000000000022273	movq	%r14,%rdi
0000000000022276	movq	0x0008287b(%rip),%rsi
000000000002227d	call	*0x00061e55(%rip)
0000000000022283	movq	%rax,%r15
0000000000022286	testq	%r15,%r15
0000000000022289	jne	0x00022213
000000000002228b	movq	0x0008c5ce(%rip),%rax
0000000000022292	cmpq	$0x00,(%rbx,%rax)
0000000000022297	jne	0x000222e3
0000000000022299	movq	%rbx,0xc8(%rbp)
000000000002229d	movq	0x00086a9c(%rip),%rax
00000000000222a4	movq	%rax,0xd0(%rbp)
00000000000222a8	movq	0x00083441(%rip),%rsi
00000000000222af	leaq	0xc8(%rbp),%rdi
00000000000222b3	jmp	0x000222de
00000000000222b5	movq	0x0008c5a4(%rip),%rax
00000000000222bc	movq	$0x00000000,(%rbx,%rax)
00000000000222c4	movq	%rbx,0xb8(%rbp)
00000000000222c8	movq	0x00086a71(%rip),%rax
00000000000222cf	movq	%rax,0xc0(%rbp)
00000000000222d3	movq	0x00083416(%rip),%rsi
00000000000222da	leaq	0xb8(%rbp),%rdi
00000000000222de	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000222e3	addq	$0x28,%rsp
00000000000222e7	popq	%rbx
00000000000222e8	popq	%r12
00000000000222ea	popq	%r13
00000000000222ec	popq	%r14
00000000000222ee	popq	%r15
00000000000222f0	popq	%rbp
00000000000222f1	ret
-[PBXGDB_ContainingDataValue2 secondaryUpdateDataValues]:
00000000000222f2	pushq	%rbp
00000000000222f3	movq	%rsp,%rbp
00000000000222f6	pushq	%r15
00000000000222f8	pushq	%r14
00000000000222fa	pushq	%r13
00000000000222fc	pushq	%r12
00000000000222fe	pushq	%rbx
00000000000222ff	pushq	%rax
0000000000022300	movq	%rdi,%rbx
0000000000022303	movq	0x0008c566(%rip),%rax
000000000002230a	movq	(%rbx,%rax),%rax
000000000002230e	testq	%rax,%rax
0000000000022311	jne	0x000223dd
0000000000022317	movq	0x0008634a(%rip),%rdi
000000000002231e	leaq	0x00085fbb(%rip),%rsi
0000000000022325	call	*0x00085fb5(%rip)
000000000002232b	movq	0x0008273e(%rip),%rsi
0000000000022332	movq	0x00061d9f(%rip),%r14
0000000000022339	movq	%rax,%rdi
000000000002233c	call	*%r14
000000000002233f	movq	%rax,%r15
0000000000022342	movq	0x0008376f(%rip),%rsi
0000000000022349	movq	%rbx,%rdi
000000000002234c	movq	%rbx,0xd0(%rbp)
0000000000022350	call	*%r14
0000000000022353	movq	%rax,%r12
0000000000022356	leaq	0x00085fb3(%rip),%rsi
000000000002235d	movq	%r12,%rdi
0000000000022360	call	*0x00085faa(%rip)
0000000000022366	movq	%rax,%r13
0000000000022369	testq	%r13,%r13
000000000002236c	jle	0x000223bc
000000000002236e	xorl	%ebx,%ebx
0000000000022370	movq	%r12,%rdi
0000000000022373	leaq	0x00085fa6(%rip),%rsi
000000000002237a	movq	%rbx,%rdx
000000000002237d	call	*0x00085f9d(%rip)
0000000000022383	movq	%rax,%r14
0000000000022386	movq	0x00086083(%rip),%rdx
000000000002238d	movq	%r14,%rdi
0000000000022390	movq	0x000828a1(%rip),%rsi
0000000000022397	call	*0x00061d3b(%rip)
000000000002239d	testb	%al,%al
000000000002239f	je	0x000223b4
00000000000223a1	movq	%r15,%rdi
00000000000223a4	leaq	0x00085f55(%rip),%rsi
00000000000223ab	movq	%r14,%rdx
00000000000223ae	call	*0x00085f4c(%rip)
00000000000223b4	incq	%rbx
00000000000223b7	cmpq	%rbx,%r13
00000000000223ba	jne	0x00022370
00000000000223bc	movq	0x0008c4ad(%rip),%rdx
00000000000223c3	movq	%r15,%rdi
00000000000223c6	movq	0xd0(%rbp),%rbx
00000000000223ca	movq	%rbx,%rsi
00000000000223cd	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000223d2	movq	0x0008c497(%rip),%rax
00000000000223d9	movq	(%rbx,%rax),%rax
00000000000223dd	addq	$0x08,%rsp
00000000000223e1	popq	%rbx
00000000000223e2	popq	%r12
00000000000223e4	popq	%r13
00000000000223e6	popq	%r14
00000000000223e8	popq	%r15
00000000000223ea	popq	%rbp
00000000000223eb	ret
-[PBXLSDataValue hasChildren]:
00000000000223ec	pushq	%rbp
00000000000223ed	movq	%rsp,%rbp
00000000000223f0	movq	0x0008ce09(%rip),%rax
00000000000223f7	movsbl	(%rdi,%rax),%eax
00000000000223fb	popq	%rbp
00000000000223fc	ret
-[PBXGDB_ArrayDataValue hasChildren]:
00000000000223fd	pushq	%rbp
00000000000223fe	movq	%rsp,%rbp
0000000000022401	movl	$0x00000001,%eax
0000000000022406	popq	%rbp
0000000000022407	ret
-[PBXGDB_Adaptor doSecondaryUpates]:
0000000000022408	pushq	%rbp
0000000000022409	movq	%rsp,%rbp
000000000002240c	movl	$0x00000001,%eax
0000000000022411	popq	%rbp
0000000000022412	ret
-[PBXGDB_SyntheticDataValue needsSecondaryUpdate]:
0000000000022413	pushq	%rbp
0000000000022414	movq	%rsp,%rbp
0000000000022417	movq	0x0008cc62(%rip),%rax
000000000002241e	movsbl	(%rdi,%rax),%eax
0000000000022422	popq	%rbp
0000000000022423	ret
-[PBXLSDataValue alwaysUpdate]:
0000000000022424	pushq	%rbp
0000000000022425	movq	%rsp,%rbp
0000000000022428	xorl	%eax,%eax
000000000002242a	popq	%rbp
000000000002242b	ret
-[PBXGDB_ArrayDataValue needsSecondaryUpdate]:
000000000002242c	pushq	%rbp
000000000002242d	movq	%rsp,%rbp
0000000000022430	movl	$0x00000001,%eax
0000000000022435	popq	%rbp
0000000000022436	ret
-[PBXGDB_SyntheticDataValue setSecondaryUpdateFinishTarget:]:
0000000000022437	pushq	%rbp
0000000000022438	movq	%rsp,%rbp
000000000002243b	movq	%rdx,%rax
000000000002243e	movq	%rdi,%rcx
0000000000022441	movq	0x0008cc48(%rip),%rdx
0000000000022448	movq	%rax,%rdi
000000000002244b	movq	%rcx,%rsi
000000000002244e	popq	%rbp
000000000002244f	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_SyntheticDataValue setSecondaryUpdateFinishAction:]:
0000000000022454	pushq	%rbp
0000000000022455	movq	%rsp,%rbp
0000000000022458	movq	0x0008cc39(%rip),%rax
000000000002245f	movq	%rdx,(%rdi,%rax)
0000000000022463	popq	%rbp
0000000000022464	ret
-[PBXGDB_ArrayDataValue requestSecondaryUpdate]:
0000000000022465	pushq	%rbp
0000000000022466	movq	%rsp,%rbp
0000000000022469	pushq	%rbx
000000000002246a	subq	$0x18,%rsp
000000000002246e	movq	%rdi,%rbx
0000000000022471	movq	0x00083108(%rip),%rsi
0000000000022478	call	*0x00061c5a(%rip)
000000000002247e	movq	%rbx,0xe8(%rbp)
0000000000022482	movq	0x0008688f(%rip),%rax
0000000000022489	movq	%rax,0xf0(%rbp)
000000000002248d	leaq	0xe8(%rbp),%rdi
0000000000022491	movq	0x000830f0(%rip),%rsi
0000000000022498	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000002249d	addq	$0x18,%rsp
00000000000224a1	popq	%rbx
00000000000224a2	popq	%rbp
00000000000224a3	ret
-[PBXGDB_ArrayDataValue requestUpdateContainer]:
00000000000224a4	pushq	%rbp
00000000000224a5	movq	%rsp,%rbp
00000000000224a8	pushq	%r14
00000000000224aa	pushq	%rbx
00000000000224ab	movq	%rdi,%rbx
00000000000224ae	leaq	0x0008cd8b(%rip),%rax
00000000000224b5	movq	(%rax),%rax
00000000000224b8	cmpl	$0x02,(%rbx,%rax)
00000000000224bc	jne	0x000224d2
00000000000224be	movq	0x000830a3(%rip),%rsi
00000000000224c5	movq	%rbx,%rdi
00000000000224c8	call	*0x00061c0a(%rip)
00000000000224ce	cmpb	$0x01,%al
00000000000224d0	je	0x000224d7
00000000000224d2	popq	%rbx
00000000000224d3	popq	%r14
00000000000224d5	popq	%rbp
00000000000224d6	ret
00000000000224d7	leaq	0x0008cd62(%rip),%rax
00000000000224de	movq	(%rax),%rax
00000000000224e1	movl	$0x00000001,(%rbx,%rax)
00000000000224e8	movq	0x00086191(%rip),%r14
00000000000224ef	movq	0x0008307a(%rip),%rsi
00000000000224f6	movq	%rbx,%rdi
00000000000224f9	call	*0x00061bd9(%rip)
00000000000224ff	movq	0x00083072(%rip),%rsi
0000000000022506	movq	%r14,%rdi
0000000000022509	movq	%rax,%rdx
000000000002250c	movq	%rbx,%rcx
000000000002250f	call	*0x00061bc3(%rip)
0000000000022515	movq	%rax,%r14
0000000000022518	movq	0x00082599(%rip),%rsi
000000000002251f	movq	%rbx,%rdi
0000000000022522	call	*0x00061bb0(%rip)
0000000000022528	movq	0x00082f19(%rip),%rsi
000000000002252f	movq	%rax,%rdi
0000000000022532	call	*0x00061ba0(%rip)
0000000000022538	movq	0x00082f19(%rip),%rsi
000000000002253f	movq	%rax,%rdi
0000000000022542	movq	%r14,%rdx
0000000000022545	movq	%rbx,%rcx
0000000000022548	call	*0x00061b8a(%rip)
000000000002254e	movq	0x00082563(%rip),%rsi
0000000000022555	movq	%rbx,%rdi
0000000000022558	call	*0x00061b7a(%rip)
000000000002255e	movq	0x0008286b(%rip),%rsi
0000000000022565	movq	%rax,%rdi
0000000000022568	call	*0x00061b6a(%rip)
000000000002256e	movq	0x0008286b(%rip),%rsi
0000000000022575	movq	%rax,%rdi
0000000000022578	movq	%r14,%rdx
000000000002257b	movq	0x00061b56(%rip),%rax
0000000000022582	popq	%rbx
0000000000022583	popq	%r14
0000000000022585	popq	%rbp
0000000000022586	jmp	*%rax
-[PBXGDB_SyntheticDataValue requestSecondaryUpdate]:
0000000000022588	pushq	%rbp
0000000000022589	movq	%rsp,%rbp
000000000002258c	pushq	%rbx
000000000002258d	pushq	%rax
000000000002258e	movq	%rdi,%rbx
0000000000022591	movq	0x00083110(%rip),%rsi
0000000000022598	call	*0x00061b3a(%rip)
000000000002259e	testb	%al,%al
00000000000225a0	jne	0x000225cd
00000000000225a2	movq	0x000849f7(%rip),%rsi
00000000000225a9	movq	%rbx,%rdi
00000000000225ac	xorl	%edx,%edx
00000000000225ae	call	*0x00061b24(%rip)
00000000000225b4	movq	0x00084aa5(%rip),%rsi
00000000000225bb	movq	%rbx,%rdi
00000000000225be	call	*0x00061b14(%rip)
00000000000225c4	movq	0x000849dd(%rip),%rsi
00000000000225cb	jmp	0x000225f4
00000000000225cd	movq	0x00084a8c(%rip),%rsi
00000000000225d4	movq	%rbx,%rdi
00000000000225d7	call	*0x00061afb(%rip)
00000000000225dd	movq	0x00083524(%rip),%rsi
00000000000225e4	movq	%rbx,%rdi
00000000000225e7	call	*0x00061aeb(%rip)
00000000000225ed	movq	0x00084a74(%rip),%rsi
00000000000225f4	movq	%rbx,%rdi
00000000000225f7	movq	0x00061ada(%rip),%rax
00000000000225fe	addq	$0x08,%rsp
0000000000022602	popq	%rbx
0000000000022603	popq	%rbp
0000000000022604	jmp	*%rax
-[PBXLSDataValue inScope]:
0000000000022606	pushq	%rbp
0000000000022607	movq	%rsp,%rbp
000000000002260a	movq	0x0008cbc7(%rip),%rax
0000000000022611	movsbl	(%rdi,%rax),%eax
0000000000022615	popq	%rbp
0000000000022616	ret
-[PBXLSDataValue setSummary:]:
0000000000022617	pushq	%rbp
0000000000022618	movq	%rsp,%rbp
000000000002261b	pushq	%r14
000000000002261d	pushq	%rbx
000000000002261e	movq	%rdx,%r14
0000000000022621	movq	%rdi,%rbx
0000000000022624	movq	0x0008cb4d(%rip),%rax
000000000002262b	movq	(%rbx,%rax),%rdi
000000000002262f	movq	0x00084992(%rip),%rsi
0000000000022636	call	*0x00061a9c(%rip)
000000000002263c	cmpq	%r14,%rax
000000000002263f	je	0x0002268c
0000000000022641	leaq	0x00085d48(%rip),%rsi
0000000000022648	movq	%rax,%rdi
000000000002264b	movq	%r14,%rdx
000000000002264e	call	*0x00085d3c(%rip)
0000000000022654	testb	%al,%al
0000000000022656	jne	0x0002266d
0000000000022658	movq	0x00084d59(%rip),%rsi
000000000002265f	movq	%rbx,%rdi
0000000000022662	movl	$0x00000001,%edx
0000000000022667	call	*0x00061a6b(%rip)
000000000002266d	movq	0x0008cb04(%rip),%rax
0000000000022674	movq	(%rbx,%rax),%rdi
0000000000022678	movq	0x00084921(%rip),%rsi
000000000002267f	movq	%r14,%rdx
0000000000022682	popq	%rbx
0000000000022683	popq	%r14
0000000000022685	popq	%rbp
0000000000022686	jmp	*0x00061a4c(%rip)
000000000002268c	popq	%rbx
000000000002268d	popq	%r14
000000000002268f	popq	%rbp
0000000000022690	ret
-[PBXLSDVValue summary]:
0000000000022691	pushq	%rbp
0000000000022692	movq	%rsp,%rbp
0000000000022695	movq	0x0008cbfc(%rip),%rax
000000000002269c	movq	(%rdi,%rax),%rax
00000000000226a0	popq	%rbp
00000000000226a1	ret
-[PBXLSDataValue resetSummaryChangeStatus]:
00000000000226a2	pushq	%rbp
00000000000226a3	movq	%rsp,%rbp
00000000000226a6	movq	0x00084d0b(%rip),%rsi
00000000000226ad	xorl	%edx,%edx
00000000000226af	popq	%rbp
00000000000226b0	jmp	*0x00061a22(%rip)
-[PBXLSDataValue setSummaryChangeStatus:]:
00000000000226b6	pushq	%rbp
00000000000226b7	movq	%rsp,%rbp
00000000000226ba	movq	0x0008cb27(%rip),%rax
00000000000226c1	movl	%edx,(%rdi,%rax)
00000000000226c4	popq	%rbp
00000000000226c5	ret
-[PBXGDB_SyntheticDataValue _doStep_FinishSummaryUpdate]:
00000000000226c6	pushq	%rbp
00000000000226c7	movq	%rsp,%rbp
00000000000226ca	pushq	%r15
00000000000226cc	pushq	%r14
00000000000226ce	pushq	%rbx
00000000000226cf	pushq	%rax
00000000000226d0	movq	%rdi,%r14
00000000000226d3	movq	0x000848b6(%rip),%rsi
00000000000226da	movq	0x000619f7(%rip),%r15
00000000000226e1	call	*%r15
00000000000226e4	movq	%rax,%rbx
00000000000226e7	movq	0x000848aa(%rip),%rsi
00000000000226ee	movq	%r14,%rdi
00000000000226f1	call	*%r15
00000000000226f4	movq	%rax,%r15
00000000000226f7	testq	%rbx,%rbx
00000000000226fa	je	0x00022713
00000000000226fc	leaq	0x00085c6d(%rip),%rsi
0000000000022703	movq	%rbx,%rdi
0000000000022706	movq	%r15,%rdx
0000000000022709	call	*0x00085c61(%rip)
000000000002270f	testb	%al,%al
0000000000022711	jne	0x0002271e
0000000000022713	addq	$0x08,%rsp
0000000000022717	popq	%rbx
0000000000022718	popq	%r14
000000000002271a	popq	%r15
000000000002271c	popq	%rbp
000000000002271d	ret
000000000002271e	movq	0x0008316b(%rip),%rsi
0000000000022725	movq	%rbx,%rdi
0000000000022728	movq	%r15,%rdx
000000000002272b	movq	%r14,%rcx
000000000002272e	addq	$0x08,%rsp
0000000000022732	popq	%rbx
0000000000022733	popq	%r14
0000000000022735	popq	%r15
0000000000022737	popq	%rbp
0000000000022738	jmp	*0x0006199a(%rip)
-[PBXGDB_SyntheticDataValue secondaryUpdateTarget]:
000000000002273e	pushq	%rbp
000000000002273f	movq	%rsp,%rbp
0000000000022742	movq	0x0008c947(%rip),%rax
0000000000022749	movq	(%rdi,%rax),%rax
000000000002274d	popq	%rbp
000000000002274e	ret
-[PBXGDB_SyntheticDataValue secondaryUpdateFinishAction]:
000000000002274f	pushq	%rbp
0000000000022750	movq	%rsp,%rbp
0000000000022753	movq	0x0008c93e(%rip),%rax
000000000002275a	movq	(%rdi,%rax),%rax
000000000002275e	popq	%rbp
000000000002275f	ret
-[PBXGDB_ContainingDataValue2 dataValueDidSecondaryUpdate:]:
0000000000022760	pushq	%rbp
0000000000022761	movq	%rsp,%rbp
0000000000022764	subq	$0x10,%rsp
0000000000022768	movq	0x0008c0f1(%rip),%rax
000000000002276f	decq	(%rdi,%rax)
0000000000022773	jne	0x00022794
0000000000022775	movq	%rdi,0xf0(%rbp)
0000000000022779	movq	0x000865c0(%rip),%rax
0000000000022780	movq	%rax,0xf8(%rbp)
0000000000022784	movq	0x00082f65(%rip),%rsi
000000000002278b	leaq	0xf0(%rbp),%rdi
000000000002278f	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000022794	addq	$0x10,%rsp
0000000000022798	popq	%rbp
0000000000022799	ret
-[PBXLSDataValue didUpdateValues]:
000000000002279a	pushq	%rbp
000000000002279b	movq	%rsp,%rbp
000000000002279e	pushq	%rbx
000000000002279f	pushq	%rax
00000000000227a0	movq	%rdi,%rbx
00000000000227a3	movq	0x00082e36(%rip),%rsi
00000000000227aa	movl	$0x00000002,%edx
00000000000227af	call	*0x00061923(%rip)
00000000000227b5	movq	0x00084c24(%rip),%rsi
00000000000227bc	movq	%rbx,%rdi
00000000000227bf	movq	0x00061912(%rip),%rax
00000000000227c6	addq	$0x08,%rsp
00000000000227ca	popq	%rbx
00000000000227cb	popq	%rbp
00000000000227cc	jmp	*%rax
00000000000227ce	nop
00000000000227cf	nop
00000000000227d0	nop
00000000000227d1	nop
___29-[DBGGDBStackFrame arguments]_block_invoke_0:
00000000000227d2	pushq	%rbp
00000000000227d3	movq	%rsp,%rbp
00000000000227d6	pushq	%r14
00000000000227d8	pushq	%rbx
00000000000227d9	movq	0x20(%rdi),%rbx
00000000000227dd	movq	0x00082ea4(%rip),%rax
00000000000227e4	movq	0x000618ed(%rip),%r14
00000000000227eb	movq	%rsi,%rdi
00000000000227ee	movq	%rax,%rsi
00000000000227f1	call	*%r14
00000000000227f4	movq	0x000859c5(%rip),%rsi
00000000000227fb	movq	%rbx,%rdi
00000000000227fe	movq	%rax,%rdx
0000000000022801	call	*%r14
0000000000022804	movq	0x000852ed(%rip),%rsi
000000000002280b	movq	%rbx,%rdi
000000000002280e	movq	%rax,%rdx
0000000000022811	call	*%r14
0000000000022814	movl	$0x00000001,%eax
0000000000022819	popq	%rbx
000000000002281a	popq	%r14
000000000002281c	popq	%rbp
000000000002281d	ret
000000000002281e	nop
0000000000022820	nop
0000000000022821	nop
0000000000022822	nop
0000000000022823	nop
0000000000022824	nop
0000000000022825	nop
0000000000022826	nop
0000000000022827	nop
0000000000022828	nop
0000000000022829	nop
000000000002282a	nop
000000000002282b	nop
-[DBGGDBStackFrame _wrapPBXLSDataValues:]:
000000000002282c	pushq	%rbp
000000000002282d	movq	%rsp,%rbp
0000000000022830	pushq	%r15
0000000000022832	pushq	%r14
0000000000022834	pushq	%r13
0000000000022836	pushq	%r12
0000000000022838	pushq	%rbx
0000000000022839	subq	$0x000000d8,%rsp
0000000000022840	movq	%rdx,%r13
0000000000022843	movq	%rdi,0xffffff00(%rbp)
000000000002284a	movq	0x0006184f(%rip),%rax
0000000000022851	movq	(%rax),%rax
0000000000022854	movq	%rax,0xd0(%rbp)
0000000000022858	movq	0x00082bd1(%rip),%rsi
000000000002285f	movq	0x00085bfa(%rip),%rdi
0000000000022866	call	*0x0006186c(%rip)
000000000002286c	movq	%rax,0xffffff08(%rbp)
0000000000022873	xorps	%xmm0,%xmm0
0000000000022876	movaps	%xmm0,0xc0(%rbp)
000000000002287a	movaps	%xmm0,0xb0(%rbp)
000000000002287e	movaps	%xmm0,0xa0(%rbp)
0000000000022882	movaps	%xmm0,0x90(%rbp)
0000000000022886	leaq	0x00085af3(%rip),%rsi
000000000002288d	leaq	0x90(%rbp),%rdx
0000000000022891	leaq	0xffffff10(%rbp),%rcx
0000000000022898	movq	%r13,%rdi
000000000002289b	movl	$0x00000010,%r8d
00000000000228a1	call	*0x00085ad9(%rip)
00000000000228a7	movq	%rax,%rbx
00000000000228aa	testq	%rbx,%rbx
00000000000228ad	je	0x00022950
00000000000228b3	movq	0xa0(%rbp),%rax
00000000000228b7	movq	(%rax),%r14
00000000000228ba	xorl	%r15d,%r15d
00000000000228bd	movq	0xa0(%rbp),%rax
00000000000228c1	cmpq	%r14,(%rax)
00000000000228c4	je	0x000228ce
00000000000228c6	movq	%r13,%rdi
00000000000228c9	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
00000000000228ce	movq	0x98(%rbp),%rax
00000000000228d2	movq	(%rax,%r15,8),%r12
00000000000228d6	movq	0x000863db(%rip),%rdi
00000000000228dd	leaq	0x000859fc(%rip),%rsi
00000000000228e4	call	*0x000859f6(%rip)
00000000000228ea	movq	%rax,%rdi
00000000000228ed	movq	0x000858b4(%rip),%rsi
00000000000228f4	movq	%r12,%rdx
00000000000228f7	movq	0xffffff00(%rbp),%rcx
00000000000228fe	call	*0x000617d4(%rip)
0000000000022904	movq	0xffffff08(%rbp),%rdi
000000000002290b	leaq	0x000859ee(%rip),%rsi
0000000000022912	movq	%rax,%rdx
0000000000022915	call	*0x000859e5(%rip)
000000000002291b	incq	%r15
000000000002291e	cmpq	%rbx,%r15
0000000000022921	jb	0x000228bd
0000000000022923	movq	%r13,%rdi
0000000000022926	leaq	0x00085a53(%rip),%rsi
000000000002292d	leaq	0x90(%rbp),%rdx
0000000000022931	leaq	0xffffff10(%rbp),%rcx
0000000000022938	movl	$0x00000010,%r8d
000000000002293e	call	*0x00085a3c(%rip)
0000000000022944	movq	%rax,%rbx
0000000000022947	testq	%rbx,%rbx
000000000002294a	jne	0x000228ba
0000000000022950	movq	0x00061749(%rip),%rax
0000000000022957	movq	(%rax),%rax
000000000002295a	cmpq	0xd0(%rbp),%rax
000000000002295e	jne	0x00022979
0000000000022960	movq	0xffffff08(%rbp),%rax
0000000000022967	addq	$0x000000d8,%rsp
000000000002296e	popq	%rbx
000000000002296f	popq	%r12
0000000000022971	popq	%r13
0000000000022973	popq	%r14
0000000000022975	popq	%r15
0000000000022977	popq	%rbp
0000000000022978	ret
0000000000022979	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
-[PBXLSDataValue setDelegate:]:
000000000002297e	pushq	%rbp
000000000002297f	movq	%rsp,%rbp
0000000000022982	movq	%rdx,%rax
0000000000022985	movq	%rdi,%rcx
0000000000022988	movq	0x0008c8f1(%rip),%rdx
000000000002298f	movq	%rax,%rdi
0000000000022992	movq	%rcx,%rsi
0000000000022995	popq	%rbp
0000000000022996	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000002299b	nop
000000000002299c	nop
000000000002299d	nop
000000000002299e	nop
000000000002299f	nop
00000000000229a0	nop
00000000000229a1	nop
00000000000229a2	nop
00000000000229a3	nop
00000000000229a4	nop
00000000000229a5	nop
-[DBGGDBDataValue _typeForDescription:]:
00000000000229a6	pushq	%rbp
00000000000229a7	movq	%rsp,%rbp
00000000000229aa	pushq	%r15
00000000000229ac	pushq	%r14
00000000000229ae	pushq	%rbx
00000000000229af	pushq	%rax
00000000000229b0	movq	%rdx,%r14
00000000000229b3	movq	%rdi,%r15
00000000000229b6	leaq	0x00085933(%rip),%rsi
00000000000229bd	movq	%r14,%rdi
00000000000229c0	call	*0x0008592a(%rip)
00000000000229c6	movq	%rax,%rcx
00000000000229c9	xorl	%eax,%eax
00000000000229cb	testq	%rcx,%rcx
00000000000229ce	je	0x00022a5e
00000000000229d4	movq	0x000855fd(%rip),%rsi
00000000000229db	movq	%r15,%rdi
00000000000229de	call	*0x000616f4(%rip)
00000000000229e4	movq	%rax,%rbx
00000000000229e7	movq	0x00085c12(%rip),%rdi
00000000000229ee	leaq	0x0008593b(%rip),%rsi
00000000000229f5	call	*0x00085935(%rip)
00000000000229fb	leaq	0x0008593e(%rip),%rsi
0000000000022a02	movq	%rbx,%rdi
0000000000022a05	movq	%rax,%rdx
0000000000022a08	call	*0x00085932(%rip)
0000000000022a0e	xorl	%ebx,%ebx
0000000000022a10	testb	%al,%al
0000000000022a12	je	0x00022a35
0000000000022a14	movq	0x000855bd(%rip),%rsi
0000000000022a1b	movq	0x000616b6(%rip),%rbx
0000000000022a22	movq	%r15,%rdi
0000000000022a25	call	*%rbx
0000000000022a27	movq	0x00084852(%rip),%rsi
0000000000022a2e	movq	%rax,%rdi
0000000000022a31	call	*%rbx
0000000000022a33	movl	%eax,%ebx
0000000000022a35	movq	0x0008629c(%rip),%rdi
0000000000022a3c	leaq	0x0008589d(%rip),%rsi
0000000000022a43	call	*0x00085897(%rip)
0000000000022a49	movq	0x000857d0(%rip),%rsi
0000000000022a50	movq	%rax,%rdi
0000000000022a53	movq	%r14,%rdx
0000000000022a56	movl	%ebx,%ecx
0000000000022a58	call	*0x0006167a(%rip)
0000000000022a5e	addq	$0x08,%rsp
0000000000022a62	popq	%rbx
0000000000022a63	popq	%r14
0000000000022a65	popq	%r15
0000000000022a67	popq	%rbp
0000000000022a68	ret
0000000000022a69	nop
0000000000022a6a	nop
-[DBGGDBDataValue pbxDataValue]:
0000000000022a6b	pushq	%rbp
0000000000022a6c	movq	%rsp,%rbp
0000000000022a6f	movq	0x0008cc2a(%rip),%rax
0000000000022a76	movq	(%rdi,%rax),%rax
0000000000022a7a	popq	%rbp
0000000000022a7b	ret
-[DBGGDBDataType initWithTypename:withTypeCode:]:
0000000000022a7c	pushq	%rbp
0000000000022a7d	movq	%rsp,%rbp
0000000000022a80	pushq	%rbx
0000000000022a81	subq	$0x18,%rsp
0000000000022a85	movl	%ecx,%ebx
0000000000022a87	movq	%rdi,0xe8(%rbp)
0000000000022a8b	movq	0x00086646(%rip),%rax
0000000000022a92	movq	%rax,0xf0(%rbp)
0000000000022a96	movq	0x0008580b(%rip),%rsi
0000000000022a9d	leaq	0xe8(%rbp),%rdi
0000000000022aa1	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000022aa6	testq	%rax,%rax
0000000000022aa9	je	0x00022ab5
0000000000022aab	movq	0x0008cc1e(%rip),%rcx
0000000000022ab2	movl	%ebx,(%rax,%rcx)
0000000000022ab5	addq	$0x18,%rsp
0000000000022ab9	popq	%rbx
0000000000022aba	popq	%rbp
0000000000022abb	ret
0000000000022abc	nop
0000000000022abd	nop
0000000000022abe	nop
0000000000022abf	nop
0000000000022ac0	nop
0000000000022ac1	nop
0000000000022ac2	nop
0000000000022ac3	nop
0000000000022ac4	nop
0000000000022ac5	nop
0000000000022ac6	nop
0000000000022ac7	nop
+[DBGGDBSession defaultFormat]:
0000000000022ac8	pushq	%rbp
0000000000022ac9	movq	%rsp,%rbp
0000000000022acc	movq	0x00085525(%rip),%rsi
0000000000022ad3	movq	0x000860be(%rip),%rdi
0000000000022ada	popq	%rbp
0000000000022adb	jmp	*0x000615f7(%rip)
+[DBGGDBSession _naturalFormat]:
0000000000022ae1	pushq	%rbp
0000000000022ae2	movq	%rsp,%rbp
0000000000022ae5	movq	0x00094c24(%rip),%rax
0000000000022aec	testq	%rax,%rax
0000000000022aef	jne	0x00022b1d
0000000000022af1	movq	0x00085538(%rip),%rsi
0000000000022af8	movq	0x000861c1(%rip),%rdi
0000000000022aff	xorl	%edx,%edx
0000000000022b01	call	*0x000615d1(%rip)
0000000000022b07	leaq	0x00094c02(%rip),%rsi
0000000000022b0e	movq	%rax,%rdi
0000000000022b11	callq	0x0004e602	; symbol stub for: _objc_assign_global
0000000000022b16	movq	0x00094bf3(%rip),%rax
0000000000022b1d	popq	%rbp
0000000000022b1e	ret
0000000000022b1f	nop
0000000000022b20	nop
0000000000022b21	nop
0000000000022b22	nop
-[DBGGDBDataValue childValidityStatusChanged:]:
0000000000022b23	pushq	%rbp
0000000000022b24	movq	%rsp,%rbp
0000000000022b27	pushq	%r14
0000000000022b29	pushq	%rbx
0000000000022b2a	movl	%edx,%r14d
0000000000022b2d	movq	%rdi,%rbx
0000000000022b30	movq	0x00082ab9(%rip),%rsi
0000000000022b37	leaq	0x00093e7a(%rip),%rdx
0000000000022b3e	call	*0x00061594(%rip)
0000000000022b44	movq	0x0008cb65(%rip),%rdx
0000000000022b4b	addq	%rbx,%rdx
0000000000022b4e	cmpl	$0x02,%r14d
0000000000022b52	je	0x00022b5b
0000000000022b54	subq	%rbx,%rdx
0000000000022b57	xorl	%edi,%edi
0000000000022b59	jmp	0x00022b7f
0000000000022b5b	cmpq	$0x00,(%rdx)
0000000000022b5f	jne	0x00022b87
0000000000022b61	movq	0x000856e0(%rip),%rsi
0000000000022b68	movq	0x00086171(%rip),%rdi
0000000000022b6f	call	*0x00061563(%rip)
0000000000022b75	movq	0x0008cb34(%rip),%rdx
0000000000022b7c	movq	%rax,%rdi
0000000000022b7f	movq	%rbx,%rsi
0000000000022b82	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000022b87	movq	0x0008cb22(%rip),%rax
0000000000022b8e	movq	(%rbx,%rax),%r14
0000000000022b92	movq	0x0008cb07(%rip),%rax
0000000000022b99	movq	(%rbx,%rax),%rdi
0000000000022b9d	movq	0x00082ae4(%rip),%rsi
0000000000022ba4	call	*0x0006152e(%rip)
0000000000022baa	leaq	0x0008575f(%rip),%rsi
0000000000022bb1	movq	%rax,%rdi
0000000000022bb4	call	*0x00085756(%rip)
0000000000022bba	movq	0x000856b7(%rip),%rsi
0000000000022bc1	movq	%r14,%rdi
0000000000022bc4	movq	%rax,%rdx
0000000000022bc7	call	*0x0006150b(%rip)
0000000000022bcd	leaq	0x00093de4(%rip),%rdx
0000000000022bd4	movq	0x00082a1d(%rip),%rsi
0000000000022bdb	movq	%rbx,%rdi
0000000000022bde	movq	0x000614f3(%rip),%rax
0000000000022be5	popq	%rbx
0000000000022be6	popq	%r14
0000000000022be8	popq	%rbp
0000000000022be9	jmp	*%rax
0000000000022beb	nop
-[DBGGDBStackFrame setArguments:]:
0000000000022bec	pushq	%rbp
0000000000022bed	movq	%rsp,%rbp
0000000000022bf0	movq	%rdx,%rax
0000000000022bf3	movq	0x0008ca86(%rip),%rdx
0000000000022bfa	movq	%rax,%rcx
0000000000022bfd	xorl	%r8d,%r8d
0000000000022c00	movl	$0x00000001,%r9d
0000000000022c06	popq	%rbp
0000000000022c07	jmp	0x0004e644	; symbol stub for: _objc_setProperty
0000000000022c0c	nop
0000000000022c0d	nop
0000000000022c0e	nop
0000000000022c0f	nop
0000000000022c10	nop
0000000000022c11	nop
0000000000022c12	nop
0000000000022c13	nop
0000000000022c14	nop
0000000000022c15	nop
0000000000022c16	nop
0000000000022c17	nop
___26-[DBGGDBStackFrame locals]_block_invoke_0:
0000000000022c18	pushq	%rbp
0000000000022c19	movq	%rsp,%rbp
0000000000022c1c	pushq	%r14
0000000000022c1e	pushq	%rbx
0000000000022c1f	movq	0x20(%rdi),%rbx
0000000000022c23	movq	0x00082a5e(%rip),%rax
0000000000022c2a	movq	0x000614a7(%rip),%r14
0000000000022c31	movq	%rsi,%rdi
0000000000022c34	movq	%rax,%rsi
0000000000022c37	call	*%r14
0000000000022c3a	movq	0x0008557f(%rip),%rsi
0000000000022c41	movq	%rbx,%rdi
0000000000022c44	movq	%rax,%rdx
0000000000022c47	call	*%r14
0000000000022c4a	movq	0x00085577(%rip),%rsi
0000000000022c51	movq	%rbx,%rdi
0000000000022c54	movq	%rax,%rdx
0000000000022c57	call	*%r14
0000000000022c5a	movl	$0x00000001,%eax
0000000000022c5f	popq	%rbx
0000000000022c60	popq	%r14
0000000000022c62	popq	%rbp
0000000000022c63	ret
0000000000022c64	nopw	%cs:0x00000000(%rax,%rax)
0000000000022c70	nop
0000000000022c71	nop
0000000000022c72	nop
0000000000022c73	nop
0000000000022c74	nop
0000000000022c75	nop
0000000000022c76	nop
0000000000022c77	nop
0000000000022c78	nop
0000000000022c79	nop
0000000000022c7a	nop
0000000000022c7b	nop
-[DBGGDBStackFrame setLocals:]:
0000000000022c7c	pushq	%rbp
0000000000022c7d	movq	%rsp,%rbp
0000000000022c80	movq	%rdx,%rax
0000000000022c83	movq	0x0008c9fe(%rip),%rdx
0000000000022c8a	movq	%rax,%rcx
0000000000022c8d	xorl	%r8d,%r8d
0000000000022c90	movl	$0x00000001,%r9d
0000000000022c96	popq	%rbp
0000000000022c97	jmp	0x0004e644	; symbol stub for: _objc_setProperty
0000000000022c9c	nop
0000000000022c9d	nop
0000000000022c9e	nop
0000000000022c9f	nop
0000000000022ca0	nop
0000000000022ca1	nop
___31-[DBGGDBStackFrame fileStatics]_block_invoke_0:
0000000000022ca2	pushq	%rbp
0000000000022ca3	movq	%rsp,%rbp
0000000000022ca6	pushq	%r15
0000000000022ca8	pushq	%r14
0000000000022caa	pushq	%r13
0000000000022cac	pushq	%r12
0000000000022cae	pushq	%rbx
0000000000022caf	subq	$0x38,%rsp
0000000000022cb3	movq	%rsi,%r12
0000000000022cb6	movq	%rdi,%r14
0000000000022cb9	movq	0x20(%r14),%rbx
0000000000022cbd	testq	%r12,%r12
0000000000022cc0	je	0x00022d60
0000000000022cc6	movq	0x00082213(%rip),%rsi
0000000000022ccd	movq	0x00061404(%rip),%r13
0000000000022cd4	movq	%rbx,%rdi
0000000000022cd7	call	*%r13
0000000000022cda	movq	0x000828e7(%rip),%rsi
0000000000022ce1	movq	%rax,%rdi
0000000000022ce4	call	*%r13
0000000000022ce7	movq	0x000830aa(%rip),%rsi
0000000000022cee	movq	%rax,%rdi
0000000000022cf1	movq	%r12,%rdx
0000000000022cf4	call	*%r13
0000000000022cf7	leaq	0xc8(%rbp),%rsi
0000000000022cfb	leaq	0x000947de(%rip),%rax
0000000000022d02	leaq	0x0002a203(%rip),%rcx
0000000000022d09	movq	0x00061380(%rip),%rdx
0000000000022d10	movq	0x20(%r14),%r15
0000000000022d14	movq	%rdx,0xa8(%rbp)
0000000000022d18	movl	$0x42000000,0xb0(%rbp)
0000000000022d1f	movl	$0x00000000,0xb4(%rbp)
0000000000022d26	movq	%rcx,0xb8(%rbp)
0000000000022d2a	movq	%rax,0xc0(%rbp)
0000000000022d2e	movq	%r12,%rdi
0000000000022d31	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
0000000000022d36	leaq	0xd0(%rbp),%rsi
0000000000022d3a	movq	0x20(%r14),%rdi
0000000000022d3e	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
0000000000022d43	leaq	0x00093aee(%rip),%rcx
0000000000022d4a	leaq	0xa8(%rbp),%r8
0000000000022d4e	movq	0x00085463(%rip),%rsi
0000000000022d55	movq	%r15,%rdi
0000000000022d58	movq	%r12,%rdx
0000000000022d5b	call	*%r13
0000000000022d5e	jmp	0x00022d88
0000000000022d60	movq	0x000826c9(%rip),%rsi
0000000000022d67	movq	0x000858f2(%rip),%rdi
0000000000022d6e	movq	0x00061363(%rip),%r14
0000000000022d75	call	*%r14
0000000000022d78	movq	0x00085459(%rip),%rsi
0000000000022d7f	movq	%rbx,%rdi
0000000000022d82	movq	%rax,%rdx
0000000000022d85	call	*%r14
0000000000022d88	movl	$0x00000001,%eax
0000000000022d8d	addq	$0x38,%rsp
0000000000022d91	popq	%rbx
0000000000022d92	popq	%r12
0000000000022d94	popq	%r13
0000000000022d96	popq	%r14
0000000000022d98	popq	%r15
0000000000022d9a	popq	%rbp
0000000000022d9b	ret
-[PBXGDB_Adaptor fetchStaticsForDV:]:
0000000000022d9c	pushq	%rbp
0000000000022d9d	movq	%rsp,%rbp
0000000000022da0	pushq	%r15
0000000000022da2	pushq	%r14
0000000000022da4	pushq	%rbx
0000000000022da5	pushq	%rax
0000000000022da6	movq	%rdx,%r14
0000000000022da9	movq	%rdi,%r15
0000000000022dac	movq	0x0008589d(%rip),%rdi
0000000000022db3	leaq	0x00085526(%rip),%rsi
0000000000022dba	call	*0x00085520(%rip)
0000000000022dc0	movq	0x00081ca9(%rip),%rsi
0000000000022dc7	movq	%rax,%rdi
0000000000022dca	call	*0x00061308(%rip)
0000000000022dd0	movq	%rax,%rbx
0000000000022dd3	movq	0x0008266e(%rip),%rsi
0000000000022dda	movq	%r15,%rdi
0000000000022ddd	call	*0x000612f5(%rip)
0000000000022de3	movq	0x0008266e(%rip),%rsi
0000000000022dea	movq	%rax,%rdi
0000000000022ded	movq	%rbx,%rdx
0000000000022df0	movq	%r14,%rcx
0000000000022df3	call	*0x000612df(%rip)
0000000000022df9	movq	0x00081fd0(%rip),%rsi
0000000000022e00	movq	%r15,%rdi
0000000000022e03	call	*0x000612cf(%rip)
0000000000022e09	movq	0x00081fd0(%rip),%rsi
0000000000022e10	movq	%rax,%rdi
0000000000022e13	movq	%rbx,%rdx
0000000000022e16	movq	0x000612bb(%rip),%rax
0000000000022e1d	addq	$0x08,%rsp
0000000000022e21	popq	%rbx
0000000000022e22	popq	%r14
0000000000022e24	popq	%r15
0000000000022e26	popq	%rbp
0000000000022e27	jmp	*%rax
-[PBXLSDataValue _informContainerViewControllersOfMyUpdate]:
0000000000022e29	pushq	%rbp
0000000000022e2a	movq	%rsp,%rbp
0000000000022e2d	popq	%rbp
0000000000022e2e	ret
-[PBXGDB_DataValueController enqueueUpdateSequenceForDataValue:]:
0000000000022e2f	pushq	%rbp
0000000000022e30	movq	%rsp,%rbp
0000000000022e33	pushq	%r15
0000000000022e35	pushq	%r14
0000000000022e37	pushq	%rbx
0000000000022e38	pushq	%rax
0000000000022e39	movq	%rdx,%r15
0000000000022e3c	movq	%rdi,%r14
0000000000022e3f	movq	0x00085982(%rip),%rdi
0000000000022e46	leaq	0x00085493(%rip),%rsi
0000000000022e4d	call	*0x0008548d(%rip)
0000000000022e53	movq	0x00081c16(%rip),%rsi
0000000000022e5a	movq	%rax,%rdi
0000000000022e5d	call	*0x00061275(%rip)
0000000000022e63	movq	%rax,%rbx
0000000000022e66	movq	0x000825eb(%rip),%rsi
0000000000022e6d	movq	%r14,%rdi
0000000000022e70	movq	%rbx,%rdx
0000000000022e73	movq	%r15,%rcx
0000000000022e76	call	*0x0006125c(%rip)
0000000000022e7c	movq	0x00081c35(%rip),%rsi
0000000000022e83	movq	%r14,%rdi
0000000000022e86	call	*0x0006124c(%rip)
0000000000022e8c	movq	0x00081f3d(%rip),%rsi
0000000000022e93	movq	%rax,%rdi
0000000000022e96	call	*0x0006123c(%rip)
0000000000022e9c	movq	0x00081f3d(%rip),%rsi
0000000000022ea3	movq	%rax,%rdi
0000000000022ea6	movq	%rbx,%rdx
0000000000022ea9	movq	0x00061228(%rip),%rax
0000000000022eb0	addq	$0x08,%rsp
0000000000022eb4	popq	%rbx
0000000000022eb5	popq	%r14
0000000000022eb7	popq	%r15
0000000000022eb9	popq	%rbp
0000000000022eba	jmp	*%rax
-[PBXGDB_UpdateDataValueSequence description]:
0000000000022ebc	pushq	%rbp
0000000000022ebd	movq	%rsp,%rbp
0000000000022ec0	pushq	%r14
0000000000022ec2	pushq	%rbx
0000000000022ec3	subq	$0x10,%rsp
0000000000022ec7	movq	%rdi,%rbx
0000000000022eca	movq	0x00082737(%rip),%rsi
0000000000022ed1	movq	0x00061200(%rip),%r14
0000000000022ed8	call	*%r14
0000000000022edb	movq	0x0008258e(%rip),%rsi
0000000000022ee2	movq	%rax,%rdi
0000000000022ee5	call	*%r14
0000000000022ee8	movq	%rax,%r14
0000000000022eeb	movq	%rbx,0xe0(%rbp)
0000000000022eef	leaq	0xe0(%rbp),%rdi
0000000000022ef3	movq	0x00085ea6(%rip),%rax
0000000000022efa	movq	%rax,0xe8(%rbp)
0000000000022efe	movq	0x00082ecb(%rip),%rsi
0000000000022f05	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000022f0a	testq	%r14,%r14
0000000000022f0d	je	0x00022f32
0000000000022f0f	movq	0x00081c62(%rip),%rsi
0000000000022f16	movq	0x00085533(%rip),%rdi
0000000000022f1d	leaq	0x0008e114(%rip),%rdx
0000000000022f24	movq	%rax,%rcx
0000000000022f27	movq	%r14,%r8
0000000000022f2a	xorb	%al,%al
0000000000022f2c	call	*0x000611a6(%rip)
0000000000022f32	addq	$0x10,%rsp
0000000000022f36	popq	%rbx
0000000000022f37	popq	%r14
0000000000022f39	popq	%rbp
0000000000022f3a	ret
-[PBXGDB_FetchFileStaticsSequence execute]:
0000000000022f3b	pushq	%rbp
0000000000022f3c	movq	%rsp,%rbp
0000000000022f3f	pushq	%r14
0000000000022f41	pushq	%rbx
0000000000022f42	movq	%rdi,%r14
0000000000022f45	movq	0x00081b6c(%rip),%rsi
0000000000022f4c	movq	0x00061185(%rip),%rbx
0000000000022f53	call	*%rbx
0000000000022f55	movq	0x00081b64(%rip),%rsi
0000000000022f5c	movq	%rax,%rdi
0000000000022f5f	call	*%rbx
0000000000022f61	leaq	0x0008dff0(%rip),%rdx
0000000000022f68	movq	0x00082a89(%rip),%rsi
0000000000022f6f	movq	%rax,%rdi
0000000000022f72	call	*%rbx
0000000000022f74	cmpl	$0x02,%eax
0000000000022f77	je	0x00023017
0000000000022f7d	testl	%eax,%eax
0000000000022f7f	jne	0x0002302b
0000000000022f85	movq	0x00081af4(%rip),%rsi
0000000000022f8c	movq	0x00085775(%rip),%rdi
0000000000022f93	call	*0x0006113f(%rip)
0000000000022f99	movq	%rax,%rbx
0000000000022f9c	movq	0x00082a5d(%rip),%rsi
0000000000022fa3	leaq	0x0008dfae(%rip),%rdx
0000000000022faa	movq	%rbx,%rdi
0000000000022fad	call	*0x00061125(%rip)
0000000000022fb3	movq	0x00081ace(%rip),%rsi
0000000000022fba	movq	%rbx,%rdi
0000000000022fbd	movq	%r14,%rdx
0000000000022fc0	call	*0x00061112(%rip)
0000000000022fc6	movq	0x00081acb(%rip),%rsi
0000000000022fcd	movq	0x00082dac(%rip),%rdx
0000000000022fd4	movq	%rbx,%rdi
0000000000022fd7	call	*0x000610fb(%rip)
0000000000022fdd	movq	0x00081ad4(%rip),%rsi
0000000000022fe4	movq	%r14,%rdi
0000000000022fe7	call	*0x000610eb(%rip)
0000000000022fed	movq	0x00081acc(%rip),%rsi
0000000000022ff4	movq	%rax,%rdi
0000000000022ff7	call	*0x000610db(%rip)
0000000000022ffd	movq	0x00081ac4(%rip),%rsi
0000000000023004	movq	%rax,%rdi
0000000000023007	movq	%rbx,%rdx
000000000002300a	movq	0x000610c7(%rip),%rax
0000000000023011	popq	%rbx
0000000000023012	popq	%r14
0000000000023014	popq	%rbp
0000000000023015	jmp	*%rax
0000000000023017	movq	0x00082d92(%rip),%rsi
000000000002301e	movq	%r14,%rdi
0000000000023021	popq	%rbx
0000000000023022	popq	%r14
0000000000023024	popq	%rbp
0000000000023025	jmp	*0x000610ad(%rip)
000000000002302b	movq	0x00081b06(%rip),%rsi
0000000000023032	jmp	0x0002301e
-[PBXGDB_FetchFileStaticsSequence _fetchFileStatics]:
0000000000023034	pushq	%rbp
0000000000023035	movq	%rsp,%rbp
0000000000023038	pushq	%r14
000000000002303a	pushq	%rbx
000000000002303b	movq	%rdi,%r14
000000000002303e	movq	0x000825c3(%rip),%rsi
0000000000023045	call	*0x0006108d(%rip)
000000000002304b	movq	0x0008269e(%rip),%rsi
0000000000023052	movq	%rax,%rdi
0000000000023055	call	*0x0006107d(%rip)
000000000002305b	leaq	0x0008df16(%rip),%rdx
0000000000023062	leaq	0x0008c8cf(%rip),%rcx
0000000000023069	leaq	0x0008dfa8(%rip),%r8
0000000000023070	leaq	0x0008df41(%rip),%r9
0000000000023077	movq	0x00082d0a(%rip),%rsi
000000000002307e	movq	0x000857a3(%rip),%rdi
0000000000023085	call	*0x0006104d(%rip)
000000000002308b	movq	%rax,%rbx
000000000002308e	movq	0x000819f3(%rip),%rsi
0000000000023095	movq	%rbx,%rdi
0000000000023098	movq	%r14,%rdx
000000000002309b	call	*0x00061037(%rip)
00000000000230a1	movq	0x000819f0(%rip),%rsi
00000000000230a8	movq	0x00082d09(%rip),%rdx
00000000000230af	movq	%rbx,%rdi
00000000000230b2	call	*0x00061020(%rip)
00000000000230b8	movq	0x00082581(%rip),%rsi
00000000000230bf	movq	%r14,%rdi
00000000000230c2	movq	%rbx,%rdx
00000000000230c5	movq	0x0006100c(%rip),%rax
00000000000230cc	popq	%rbx
00000000000230cd	popq	%r14
00000000000230cf	popq	%rbp
00000000000230d0	jmp	*%rax
-[PBXGDB_DataValue2 frameIndexContext]:
00000000000230d2	pushq	%rbp
00000000000230d3	movq	%rsp,%rbp
00000000000230d6	pushq	%r15
00000000000230d8	pushq	%r14
00000000000230da	pushq	%rbx
00000000000230db	pushq	%rax
00000000000230dc	movq	0x0008b80d(%rip),%rax
00000000000230e3	movq	(%rdi,%rax),%rbx
00000000000230e7	testq	%rbx,%rbx
00000000000230ea	jns	0x00023150
00000000000230ec	movq	0x0008245d(%rip),%rsi
00000000000230f3	movq	0x00060fde(%rip),%r15
00000000000230fa	call	*%r15
00000000000230fd	movq	%rax,%r14
0000000000023100	movq	0x00082191(%rip),%rsi
0000000000023107	movq	%r14,%rdi
000000000002310a	call	*%r15
000000000002310d	movq	0x00082154(%rip),%rsi
0000000000023114	movq	%rax,%rdi
0000000000023117	call	*%r15
000000000002311a	movq	$0x7fffffffffffffff,%r15
0000000000023124	testq	%r14,%r14
0000000000023127	movq	$0x7fffffffffffffff,%rcx
0000000000023131	je	0x00023149
0000000000023133	movq	0x00082136(%rip),%rsi
000000000002313a	movq	%rax,%rdi
000000000002313d	movq	%r14,%rdx
0000000000023140	call	*0x00060f92(%rip)
0000000000023146	movq	%rax,%rcx
0000000000023149	cmpq	%r15,%rcx
000000000002314c	cmovneq	%rcx,%rbx
0000000000023150	movq	%rbx,%rax
0000000000023153	addq	$0x08,%rsp
0000000000023157	popq	%rbx
0000000000023158	popq	%r14
000000000002315a	popq	%r15
000000000002315c	popq	%rbp
000000000002315d	ret
-[PBXGDB_FetchFileStaticsSequence timeOutPeriod]:
000000000002315e	pushq	%rbp
000000000002315f	movq	%rsp,%rbp
0000000000023162	xorps	%xmm0,%xmm0
0000000000023165	popq	%rbp
0000000000023166	ret
-[PBXGDB_FetchFileStaticsSequence _gotFileStatics:]:
0000000000023167	pushq	%rbp
0000000000023168	movq	%rsp,%rbp
000000000002316b	pushq	%r15
000000000002316d	pushq	%r14
000000000002316f	pushq	%rbx
0000000000023170	subq	$0x38,%rsp
0000000000023174	movq	%rdx,%r15
0000000000023177	movq	%rdi,0xe0(%rbp)
000000000002317b	movq	%rsi,0xd8(%rbp)
000000000002317f	testq	%r15,%r15
0000000000023182	jne	0x000231ea
0000000000023184	movq	0x0008569d(%rip),%rdi
000000000002318b	leaq	0x0008519e(%rip),%rsi
0000000000023192	call	*0x00085198(%rip)
0000000000023198	movq	%rax,%rdi
000000000002319b	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
00000000000231a0	leaq	0xe0(%rbp),%rdi
00000000000231a4	leaq	0xd8(%rbp),%rsi
00000000000231a8	leaq	0x0003b48c(%rip),%rdx
00000000000231af	leaq	0x0003b207(%rip),%rcx
00000000000231b6	leaq	0x0008c7fb(%rip),%r9
00000000000231bd	leaq	0x0003a93c(%rip),%r8
00000000000231c4	leaq	0x0003a939(%rip),%rbx
00000000000231cb	movq	%rbx,0x18(%rsp)
00000000000231d0	leaq	0x0008c661(%rip),%rbx
00000000000231d7	movq	%rbx,0x10(%rsp)
00000000000231dc	movq	%rax,0x08(%rsp)
00000000000231e1	movq	%r8,(%rsp)
00000000000231e5	jmp	0x00023295
00000000000231ea	movq	0x00085637(%rip),%rdi
00000000000231f1	leaq	0x00085138(%rip),%rsi
00000000000231f8	call	*0x00085132(%rip)
00000000000231fe	leaq	0x0008513b(%rip),%rsi
0000000000023205	movq	%r15,%rdi
0000000000023208	movq	%rax,%rdx
000000000002320b	call	*0x0008512f(%rip)
0000000000023211	testb	%al,%al
0000000000023213	movq	%r15,%rdi
0000000000023216	jne	0x000232a5
000000000002321c	movq	0x00085605(%rip),%rdi
0000000000023223	leaq	0x00085106(%rip),%rsi
000000000002322a	call	*0x00085100(%rip)
0000000000023230	movq	%rax,%rdi
0000000000023233	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000023238	movq	%rax,%r14
000000000002323b	movq	0x00081a1e(%rip),%rsi
0000000000023242	movq	%r15,%rdi
0000000000023245	call	*0x00060e8d(%rip)
000000000002324b	leaq	0x0008c5e6(%rip),%r8
0000000000023252	leaq	0x0003b2f2(%rip),%rbx
0000000000023259	leaq	0xe0(%rbp),%rdi
000000000002325d	leaq	0xd8(%rbp),%rsi
0000000000023261	leaq	0x0003b3d3(%rip),%rdx
0000000000023268	leaq	0x0003b14e(%rip),%rcx
000000000002326f	movq	%rbx,0x20(%rsp)
0000000000023274	leaq	0x0008c75d(%rip),%r9
000000000002327b	movq	%r8,0x18(%rsp)
0000000000023280	movq	%rax,0x10(%rsp)
0000000000023285	leaq	0x0003a874(%rip),%rax
000000000002328c	movq	%r14,0x08(%rsp)
0000000000023291	movq	%rax,(%rsp)
0000000000023295	movl	$0x00000122,%r8d
000000000002329b	xorb	%al,%al
000000000002329d	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
00000000000232a2	movq	%r15,%rdi
00000000000232a5	movq	0x00082ac4(%rip),%rsi
00000000000232ac	call	*0x00060e26(%rip)
00000000000232b2	testq	%rax,%rax
00000000000232b5	je	0x00023304
00000000000232b7	movq	0x0008234a(%rip),%rsi
00000000000232be	movq	0xe0(%rbp),%rdi
00000000000232c2	movq	0x00060e0f(%rip),%r14
00000000000232c9	call	*%r14
00000000000232cc	movq	%rax,%rbx
00000000000232cf	movq	0x00081a82(%rip),%rsi
00000000000232d6	leaq	0x0008dcfb(%rip),%rdx
00000000000232dd	movq	%rbx,%rdi
00000000000232e0	call	*%r14
00000000000232e3	movq	0x00082a8e(%rip),%rsi
00000000000232ea	movq	0xe0(%rbp),%rdi
00000000000232ee	movq	%r15,%rdx
00000000000232f1	movq	%rbx,%rcx
00000000000232f4	call	*%r14
00000000000232f7	movq	0x00082ac2(%rip),%rsi
00000000000232fe	movq	%rbx,%rdi
0000000000023301	call	*%r14
0000000000023304	movq	0x0008182d(%rip),%rsi
000000000002330b	movq	0xe0(%rbp),%rdi
000000000002330f	call	*0x00060dc3(%rip)
0000000000023315	addq	$0x38,%rsp
0000000000023319	popq	%rbx
000000000002331a	popq	%r14
000000000002331c	popq	%r15
000000000002331e	popq	%rbp
000000000002331f	ret
-[PBXLSDataValue didGetChildren]:
0000000000023320	pushq	%rbp
0000000000023321	movq	%rsp,%rbp
0000000000023324	pushq	%rbx
0000000000023325	pushq	%rax
0000000000023326	movq	%rdi,%rbx
0000000000023329	movq	0x00082268(%rip),%rsi
0000000000023330	movl	$0x00000002,%edx
0000000000023335	call	*0x00060d9d(%rip)
000000000002333b	movq	0x0008409e(%rip),%rsi
0000000000023342	movq	%rbx,%rdi
0000000000023345	movq	0x00060d8c(%rip),%rax
000000000002334c	addq	$0x08,%rsp
0000000000023350	popq	%rbx
0000000000023351	popq	%rbp
0000000000023352	jmp	*%rax
0000000000023354	nop
0000000000023355	nop
0000000000023356	nop
0000000000023357	nop
0000000000023358	nop
0000000000023359	nop
000000000002335a	nop
000000000002335b	nop
-[DBGGDBStackFrame setFileStatics:]:
000000000002335c	pushq	%rbp
000000000002335d	movq	%rsp,%rbp
0000000000023360	movq	%rdx,%rax
0000000000023363	movq	0x0008c30e(%rip),%rdx
000000000002336a	movq	%rax,%rcx
000000000002336d	xorl	%r8d,%r8d
0000000000023370	movl	$0x00000001,%r9d
0000000000023376	popq	%rbp
0000000000023377	jmp	0x0004e644	; symbol stub for: _objc_setProperty
-[PBXGDB_UpdateDataValueSequence needsEvaluationSafetyCheck]:
000000000002337c	pushq	%rbp
000000000002337d	movq	%rsp,%rbp
0000000000023380	movl	$0x00000001,%eax
0000000000023385	popq	%rbp
0000000000023386	ret
-[PBXGDB_CommandSequence evaluationSafetyCheck]:
0000000000023387	pushq	%rbp
0000000000023388	movq	%rsp,%rbp
000000000002338b	pushq	%r15
000000000002338d	pushq	%r14
000000000002338f	pushq	%r13
0000000000023391	pushq	%r12
0000000000023393	pushq	%rbx
0000000000023394	subq	$0x000000f8,%rsp
000000000002339b	movq	%rdi,%rbx
000000000002339e	movq	0x00060cfb(%rip),%rax
00000000000233a5	movq	(%rax),%rax
00000000000233a8	movq	%rax,0xd0(%rbp)
00000000000233ac	movq	0x0008262d(%rip),%rsi
00000000000233b3	movq	0x00060d1e(%rip),%r14
00000000000233ba	call	*%r14
00000000000233bd	movq	%rax,%r15
00000000000233c0	movq	%r15,0xffffff00(%rbp)
00000000000233c7	movq	0x0008261a(%rip),%rsi
00000000000233ce	movq	%r15,%rdi
00000000000233d1	call	*%r14
00000000000233d4	movq	%rax,0xfffffef0(%rbp)
00000000000233db	leaq	0x00084f9e(%rip),%rsi
00000000000233e2	leaq	0x90(%rbp),%rdx
00000000000233e6	leaq	0xffffff10(%rbp),%rcx
00000000000233ed	xorps	%xmm0,%xmm0
00000000000233f0	movaps	%xmm0,0xc0(%rbp)
00000000000233f4	movaps	%xmm0,0xb0(%rbp)
00000000000233f8	movaps	%xmm0,0xa0(%rbp)
00000000000233fc	movaps	%xmm0,0x90(%rbp)
0000000000023400	movq	%r15,%rdi
0000000000023403	movl	$0x00000010,%r8d
0000000000023409	call	*0x00084f71(%rip)
000000000002340f	movq	%rax,0xfffffef8(%rbp)
0000000000023416	testq	%rax,%rax
0000000000023419	je	0x0002355b
000000000002341f	movq	0x0008b3fa(%rip),%rax
0000000000023426	leaq	(%rbx,%rax),%rax
000000000002342a	movq	%rax,0xffffff08(%rbp)
0000000000023431	movq	%rbx,%r12
0000000000023434	movq	0xa0(%rbp),%rax
0000000000023438	movq	(%rax),%rax
000000000002343b	movq	%rax,0xfffffee8(%rbp)
0000000000023442	movq	0x00060c8f(%rip),%r14
0000000000023449	xorl	%r15d,%r15d
000000000002344c	movq	0xa0(%rbp),%rax
0000000000023450	movq	0xfffffee8(%rbp),%rcx
0000000000023457	cmpq	%rcx,(%rax)
000000000002345a	je	0x00023468
000000000002345c	movq	0xffffff00(%rbp),%rdi
0000000000023463	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
0000000000023468	movq	0x98(%rbp),%rax
000000000002346c	movq	(%rax,%r15,8),%rdi
0000000000023470	movq	%r12,%rbx
0000000000023473	movq	%rbx,%rsi
0000000000023476	movq	0x0008b3a3(%rip),%rdx
000000000002347d	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000023482	movq	%rbx,%rdi
0000000000023485	movq	%rbx,%r12
0000000000023488	movq	0x00081629(%rip),%rsi
000000000002348f	call	*%r14
0000000000023492	movq	%rax,%rdi
0000000000023495	movq	0x00081624(%rip),%rsi
000000000002349c	call	*%r14
000000000002349f	movq	%rax,%r13
00000000000234a2	movq	0xffffff08(%rbp),%rax
00000000000234a9	movq	(%rax),%rdi
00000000000234ac	movq	0x0008253d(%rip),%rsi
00000000000234b3	call	*%r14
00000000000234b6	movq	%r13,%rdi
00000000000234b9	movq	0x00082538(%rip),%rsi
00000000000234c0	movq	%rax,%rdx
00000000000234c3	call	*%r14
00000000000234c6	cmpl	$0x02,%eax
00000000000234c9	je	0x00023634
00000000000234cf	testl	%eax,%eax
00000000000234d1	jne	0x0002351f
00000000000234d3	jmp	0x0002359e
00000000000234d8	incq	%r15
00000000000234db	cmpq	0xfffffef8(%rbp),%r15
00000000000234e2	jb	0x0002344c
00000000000234e8	movq	0xffffff00(%rbp),%rdi
00000000000234ef	leaq	0x00084e8a(%rip),%rsi
00000000000234f6	leaq	0x90(%rbp),%rdx
00000000000234fa	leaq	0xffffff10(%rbp),%rcx
0000000000023501	movl	$0x00000010,%r8d
0000000000023507	call	*0x00084e73(%rip)
000000000002350d	movq	%rax,0xfffffef8(%rbp)
0000000000023514	testq	%rax,%rax
0000000000023517	jne	0x00023449
000000000002351d	jmp	0x00023558
000000000002351f	movq	0xfffffef0(%rbp),%rax
0000000000023526	movq	0xffffff08(%rbp),%rcx
000000000002352d	cmpq	%rax,(%rcx)
0000000000023530	jne	0x000234d8
0000000000023532	xorl	%edi,%edi
0000000000023534	movq	%r12,%rbx
0000000000023537	movq	%rbx,%rsi
000000000002353a	movq	0x0008b2df(%rip),%rdx
0000000000023541	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000023546	movq	0x000824cb(%rip),%rsi
000000000002354d	movq	%rbx,%rdi
0000000000023550	call	*0x00060b82(%rip)
0000000000023556	jmp	0x00023578
0000000000023558	movq	%r12,%rbx
000000000002355b	movq	%rbx,%rsi
000000000002355e	movq	%rbx,%rax
0000000000023561	movq	0x0008b2b8(%rip),%rcx
0000000000023568	addq	%rcx,%rbx
000000000002356b	subq	%rax,%rbx
000000000002356e	xorl	%edi,%edi
0000000000023570	movq	%rbx,%rdx
0000000000023573	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000023578	movq	0x00060b21(%rip),%rax
000000000002357f	movq	(%rax),%rax
0000000000023582	cmpq	0xd0(%rbp),%rax
0000000000023586	jne	0x00023649
000000000002358c	addq	$0x000000f8,%rsp
0000000000023593	popq	%rbx
0000000000023594	popq	%r12
0000000000023596	popq	%r13
0000000000023598	popq	%r14
000000000002359a	popq	%r15
000000000002359c	popq	%rbp
000000000002359d	ret
000000000002359e	movq	0x000814db(%rip),%rsi
00000000000235a5	movq	0x0008515c(%rip),%rdi
00000000000235ac	movq	0x00060b25(%rip),%r15
00000000000235b3	call	*%r15
00000000000235b6	movq	%rax,%r14
00000000000235b9	movq	0x0008b260(%rip),%rax
00000000000235c0	movq	%r12,%rbx
00000000000235c3	movq	(%rbx,%rax),%rdi
00000000000235c7	movq	0x00082422(%rip),%rsi
00000000000235ce	call	*%r15
00000000000235d1	movq	0x00082428(%rip),%rsi
00000000000235d8	movq	%r14,%rdi
00000000000235db	movq	%rax,%rdx
00000000000235de	call	*%r15
00000000000235e1	movq	0x000814a0(%rip),%rsi
00000000000235e8	movq	%r14,%rdi
00000000000235eb	movq	%rbx,%rdx
00000000000235ee	call	*%r15
00000000000235f1	movq	0x000814a0(%rip),%rsi
00000000000235f8	movq	0x00082409(%rip),%rdx
00000000000235ff	movq	%r14,%rdi
0000000000023602	call	*%r15
0000000000023605	movq	0x000814ac(%rip),%rsi
000000000002360c	movq	%rbx,%rdi
000000000002360f	call	*%r15
0000000000023612	movq	0x000814a7(%rip),%rsi
0000000000023619	movq	%rax,%rdi
000000000002361c	call	*%r15
000000000002361f	movq	0x000814a2(%rip),%rsi
0000000000023626	movq	%rax,%rdi
0000000000023629	movq	%r14,%rdx
000000000002362c	call	*%r15
000000000002362f	jmp	0x00023578
0000000000023634	movq	0x000823d5(%rip),%rsi
000000000002363b	movq	%r12,%rdi
000000000002363e	call	*0x00060a94(%rip)
0000000000023644	jmp	0x00023578
0000000000023649	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
-[PBXGDB_CommandSequence safetyCheckClasses]:
000000000002364e	pushq	%rbp
000000000002364f	movq	%rsp,%rbp
0000000000023652	pushq	%r15
0000000000023654	pushq	%r14
0000000000023656	pushq	%rbx
0000000000023657	pushq	%rax
0000000000023658	movq	0x00085001(%rip),%r14
000000000002365f	movq	0x00085092(%rip),%rdi
0000000000023666	leaq	0x00084cc3(%rip),%r15
000000000002366d	movq	%r15,%rsi
0000000000023670	call	*0x00084cba(%rip)
0000000000023676	movq	%rax,%rbx
0000000000023679	movq	0x00085080(%rip),%rdi
0000000000023680	movq	%r15,%rsi
0000000000023683	call	*0x00084ca7(%rip)
0000000000023689	movq	0x00082348(%rip),%rsi
0000000000023690	movq	%r14,%rdi
0000000000023693	movq	%rbx,%rdx
0000000000023696	movq	%rax,%rcx
0000000000023699	xorl	%r8d,%r8d
000000000002369c	xorb	%al,%al
000000000002369e	addq	$0x08,%rsp
00000000000236a2	popq	%rbx
00000000000236a3	popq	%r14
00000000000236a5	popq	%r15
00000000000236a7	popq	%rbp
00000000000236a8	jmp	*0x00060a2a(%rip)
00000000000236ae	nop
+[PBXGDB_MIEvaluationSafetyCheckCommand initialize]:
00000000000236af	pushq	%rbp
00000000000236b0	movq	%rsp,%rbp
00000000000236b3	pushq	%r15
00000000000236b5	pushq	%r14
00000000000236b7	pushq	%r12
00000000000236b9	pushq	%rbx
00000000000236ba	movq	%rdi,%r14
00000000000236bd	movq	0x000816ac(%rip),%rsi
00000000000236c4	movq	0x00084df5(%rip),%rdi
00000000000236cb	movq	0x00060a06(%rip),%rbx
00000000000236d2	call	*%rbx
00000000000236d4	movq	0x0008205d(%rip),%rsi
00000000000236db	leaq	0x0008ed96(%rip),%rdx
00000000000236e2	movq	%rax,%rdi
00000000000236e5	call	*%rbx
00000000000236e7	movq	%rax,%rbx
00000000000236ea	testq	%rbx,%rbx
00000000000236ed	je	0x0002370a
00000000000236ef	leaq	0x00084c6a(%rip),%rsi
00000000000236f6	leaq	0x0008c23b(%rip),%rdx
00000000000236fd	movq	%rbx,%rdi
0000000000023700	call	*0x00084c5a(%rip)
0000000000023706	testb	%al,%al
0000000000023708	je	0x00023711
000000000002370a	leaq	0x0008ed87(%rip),%rbx
0000000000023711	movq	0x00084d38(%rip),%r15
0000000000023718	movq	0x000822d1(%rip),%rsi
000000000002371f	movq	0x000609b2(%rip),%r12
0000000000023726	movq	%r14,%rdi
0000000000023729	call	*%r12
000000000002372c	movq	0x00081445(%rip),%rsi
0000000000023733	leaq	0x0008ed7e(%rip),%rdx
000000000002373a	movq	%r15,%rdi
000000000002373d	movq	%rax,%rcx
0000000000023740	movq	%rbx,%r8
0000000000023743	xorb	%al,%al
0000000000023745	call	*%r12
0000000000023748	leaq	0x00093f49(%rip),%rsi
000000000002374f	movq	%rax,%rdi
0000000000023752	popq	%rbx
0000000000023753	popq	%r12
0000000000023755	popq	%r14
0000000000023757	popq	%r15
0000000000023759	popq	%rbp
000000000002375a	jmp	0x0004e602	; symbol stub for: _objc_assign_global
000000000002375f	nop
0000000000023760	nop
0000000000023761	nop
+[PBXGDB_MIEvaluationSafetyCheckCommand verifyString]:
0000000000023762	pushq	%rbp
0000000000023763	movq	%rsp,%rbp
0000000000023766	leaq	0x0008eceb(%rip),%rax
000000000002376d	popq	%rbp
000000000002376e	ret
000000000002376f	nop
+[PBXGDB_MIFastEvaluationSafetyCheckCommand verifyString]:
0000000000023770	pushq	%rbp
0000000000023771	movq	%rsp,%rbp
0000000000023774	leaq	0x0008ec7d(%rip),%rax
000000000002377b	popq	%rbp
000000000002377c	ret
-[PBXGDB_BaseDataValueSequence timeOutPeriod]:
000000000002377d	pushq	%rbp
000000000002377e	movq	%rsp,%rbp
0000000000023781	movsd	0x00093eff(%rip),%xmm0
0000000000023789	popq	%rbp
000000000002378a	ret
000000000002378b	nop
000000000002378c	nop
000000000002378d	nop
000000000002378e	nop
000000000002378f	nop
0000000000023790	nop
0000000000023791	nop
0000000000023792	nop
0000000000023793	nop
0000000000023794	nop
0000000000023795	nop
0000000000023796	nop
0000000000023797	nop
0000000000023798	nop
-[DBGGDBDataValue name]:
0000000000023799	pushq	%rbp
000000000002379a	movq	%rsp,%rbp
000000000002379d	movq	0x00084834(%rip),%rsi
00000000000237a4	call	*0x0006092e(%rip)
00000000000237aa	movq	0x00081cbf(%rip),%rsi
00000000000237b1	movq	%rax,%rdi
00000000000237b4	movq	0x0006091d(%rip),%rax
00000000000237bb	popq	%rbp
00000000000237bc	jmp	*%rax
00000000000237be	nop
00000000000237bf	nop
-[DBGGDBDataValue inScope]:
00000000000237c0	pushq	%rbp
00000000000237c1	movq	%rsp,%rbp
00000000000237c4	pushq	%rbx
00000000000237c5	pushq	%rax
00000000000237c6	movq	0x0008480b(%rip),%rsi
00000000000237cd	movq	0x00060904(%rip),%rbx
00000000000237d4	call	*%rbx
00000000000237d6	movq	0x00081ecb(%rip),%rsi
00000000000237dd	movq	%rax,%rdi
00000000000237e0	call	*%rbx
00000000000237e2	movsbl	%al,%eax
00000000000237e5	addq	$0x08,%rsp
00000000000237e9	popq	%rbx
00000000000237ea	popq	%rbp
00000000000237eb	ret
00000000000237ec	nop
00000000000237ed	nop
00000000000237ee	nop
00000000000237ef	nop
00000000000237f0	nop
00000000000237f1	nop
-[DBGGDBDataValue hasChildValues]:
00000000000237f2	pushq	%rbp
00000000000237f3	movq	%rsp,%rbp
00000000000237f6	pushq	%rbx
00000000000237f7	pushq	%rax
00000000000237f8	movq	0x000847d9(%rip),%rsi
00000000000237ff	movq	0x000608d2(%rip),%rbx
0000000000023806	call	*%rbx
0000000000023808	movq	0x00081fa1(%rip),%rsi
000000000002380f	movq	%rax,%rdi
0000000000023812	call	*%rbx
0000000000023814	movsbl	%al,%eax
0000000000023817	addq	$0x08,%rsp
000000000002381b	popq	%rbx
000000000002381c	popq	%rbp
000000000002381d	ret
000000000002381e	nop
000000000002381f	nop
0000000000023820	nop
0000000000023821	nop
0000000000023822	nop
0000000000023823	nop
0000000000023824	nop
0000000000023825	nop
0000000000023826	nop
0000000000023827	nop
0000000000023828	nop
-[DBGGDBDataValue value]:
0000000000023829	pushq	%rbp
000000000002382a	movq	%rsp,%rbp
000000000002382d	movq	0x000847a4(%rip),%rsi
0000000000023834	call	*0x0006089e(%rip)
000000000002383a	movq	0x000812c7(%rip),%rsi
0000000000023841	movq	%rax,%rdi
0000000000023844	movq	0x0006088d(%rip),%rax
000000000002384b	popq	%rbp
000000000002384c	jmp	*%rax
-[PBXLSDataValue stringValue]:
000000000002384e	pushq	%rbp
000000000002384f	movq	%rsp,%rbp
0000000000023852	movq	0x0008b91f(%rip),%rax
0000000000023859	movq	(%rdi,%rax),%rdi
000000000002385d	movq	0x000812a4(%rip),%rsi
0000000000023864	popq	%rbp
0000000000023865	jmp	*0x0006086d(%rip)
000000000002386b	nop
-[DBGGDBDataValue valueHasChanged]:
000000000002386c	pushq	%rbp
000000000002386d	movq	%rsp,%rbp
0000000000023870	pushq	%rbx
0000000000023871	pushq	%rax
0000000000023872	movq	0x0008475f(%rip),%rsi
0000000000023879	movq	0x00060858(%rip),%rbx
0000000000023880	call	*%rbx
0000000000023882	movq	0x000849af(%rip),%rsi
0000000000023889	movq	%rax,%rdi
000000000002388c	call	*%rbx
000000000002388e	cmpl	$0x01,%eax
0000000000023891	sete	%al
0000000000023894	movzbl	%al,%eax
0000000000023897	addq	$0x08,%rsp
000000000002389b	popq	%rbx
000000000002389c	popq	%rbp
000000000002389d	ret
-[PBXLSDataValue valueChangeStatus]:
000000000002389e	pushq	%rbp
000000000002389f	movq	%rsp,%rbp
00000000000238a2	movq	0x0008b937(%rip),%rax
00000000000238a9	movl	(%rdi,%rax),%eax
00000000000238ac	popq	%rbp
00000000000238ad	ret
00000000000238ae	nop
00000000000238af	nop
-[DBGGDBDataValue dynamicTypeHasChanged]:
00000000000238b0	pushq	%rbp
00000000000238b1	movq	%rsp,%rbp
00000000000238b4	pushq	%rbx
00000000000238b5	pushq	%rax
00000000000238b6	movq	0x0008471b(%rip),%rsi
00000000000238bd	movq	0x00060814(%rip),%rbx
00000000000238c4	call	*%rbx
00000000000238c6	movq	0x00081edb(%rip),%rsi
00000000000238cd	movq	%rax,%rdi
00000000000238d0	call	*%rbx
00000000000238d2	cmpl	$0x01,%eax
00000000000238d5	sete	%al
00000000000238d8	movzbl	%al,%eax
00000000000238db	addq	$0x08,%rsp
00000000000238df	popq	%rbx
00000000000238e0	popq	%rbp
00000000000238e1	ret
-[PBXLSDataValue dynamicTypeChangeStatus]:
00000000000238e2	pushq	%rbp
00000000000238e3	movq	%rsp,%rbp
00000000000238e6	movq	0x0008b903(%rip),%rax
00000000000238ed	movl	(%rdi,%rax),%eax
00000000000238f0	popq	%rbp
00000000000238f1	ret
00000000000238f2	nop
-[DBGGDBDataValue staticType]:
00000000000238f3	pushq	%rbp
00000000000238f4	movq	%rsp,%rbp
00000000000238f7	movq	0x0008bdaa(%rip),%rax
00000000000238fe	movq	(%rdi,%rax),%rax
0000000000023902	popq	%rbp
0000000000023903	ret
0000000000023904	nop
0000000000023905	nop
0000000000023906	nop
0000000000023907	nop
0000000000023908	nop
0000000000023909	nop
000000000002390a	nop
000000000002390b	nop
000000000002390c	nop
000000000002390d	nop
000000000002390e	nop
000000000002390f	nop
0000000000023910	nop
0000000000023911	nop
-[DBGGDBDataValue summary]:
0000000000023912	pushq	%rbp
0000000000023913	movq	%rsp,%rbp
0000000000023916	pushq	%rbx
0000000000023917	pushq	%rax
0000000000023918	movq	0x000846b9(%rip),%rsi
000000000002391f	movq	0x000607b2(%rip),%rbx
0000000000023926	call	*%rbx
0000000000023928	movq	0x00083699(%rip),%rsi
000000000002392f	movq	%rax,%rdi
0000000000023932	call	*%rbx
0000000000023934	movq	%rax,%rbx
0000000000023937	leaq	0x000849f2(%rip),%rsi
000000000002393e	movq	0x00084f2b(%rip),%rdi
0000000000023945	call	*0x000849e5(%rip)
000000000002394b	leaq	0x000849ee(%rip),%rsi
0000000000023952	movq	%rbx,%rdi
0000000000023955	movq	%rax,%rdx
0000000000023958	call	*0x000849e2(%rip)
000000000002395e	testb	%al,%al
0000000000023960	jne	0x0002396c
0000000000023962	movq	%rbx,%rax
0000000000023965	addq	$0x08,%rsp
0000000000023969	popq	%rbx
000000000002396a	popq	%rbp
000000000002396b	ret
000000000002396c	movq	0x0008131d(%rip),%rsi
0000000000023973	movq	%rbx,%rdi
0000000000023976	addq	$0x08,%rsp
000000000002397a	popq	%rbx
000000000002397b	popq	%rbp
000000000002397c	jmp	*0x00060756(%rip)
-[PBXGDB_VarObjDataValue2 summary]:
0000000000023982	pushq	%rbp
0000000000023983	movq	%rsp,%rbp
0000000000023986	subq	$0x10,%rsp
000000000002398a	movq	%rdi,0xf0(%rbp)
000000000002398e	movq	0x000855fb(%rip),%rax
0000000000023995	movq	%rax,0xf8(%rbp)
0000000000023999	movq	0x00083628(%rip),%rsi
00000000000239a0	leaq	0xf0(%rbp),%rdi
00000000000239a4	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000239a9	addq	$0x10,%rsp
00000000000239ad	popq	%rbp
00000000000239ae	ret
-[PBXLSDataValue summary]:
00000000000239af	pushq	%rbp
00000000000239b0	movq	%rsp,%rbp
00000000000239b3	movq	0x0008b7be(%rip),%rax
00000000000239ba	movq	(%rdi,%rax),%rdi
00000000000239be	movq	0x00083603(%rip),%rsi
00000000000239c5	popq	%rbp
00000000000239c6	jmp	*0x0006070c(%rip)
00000000000239cc	nop
00000000000239cd	nop
-[DBGGDBDataValue summaryHasChanged]:
00000000000239ce	pushq	%rbp
00000000000239cf	movq	%rsp,%rbp
00000000000239d2	pushq	%rbx
00000000000239d3	pushq	%rax
00000000000239d4	movq	0x000845fd(%rip),%rsi
00000000000239db	movq	0x000606f6(%rip),%rbx
00000000000239e2	call	*%rbx
00000000000239e4	movq	0x00084855(%rip),%rsi
00000000000239eb	movq	%rax,%rdi
00000000000239ee	call	*%rbx
00000000000239f0	cmpl	$0x01,%eax
00000000000239f3	sete	%al
00000000000239f6	movzbl	%al,%eax
00000000000239f9	addq	$0x08,%rsp
00000000000239fd	popq	%rbx
00000000000239fe	popq	%rbp
00000000000239ff	ret
-[PBXLSDataValue summaryChangeStatus]:
0000000000023a00	pushq	%rbp
0000000000023a01	movq	%rsp,%rbp
0000000000023a04	movq	0x0008b7dd(%rip),%rax
0000000000023a0b	movl	(%rdi,%rax),%eax
0000000000023a0e	popq	%rbp
0000000000023a0f	ret
+[DBGGDBDataValue keyPathsForValuesAffectingSummaryHasChanged]:
0000000000023a10	pushq	%rbp
0000000000023a11	movq	%rsp,%rbp
0000000000023a14	movq	0x0008473d(%rip),%rsi
0000000000023a1b	movq	0x00084c4e(%rip),%rdi
0000000000023a22	leaq	0x00092ecf(%rip),%rdx
0000000000023a29	popq	%rbp
0000000000023a2a	jmp	*0x000606a8(%rip)
0000000000023a30	nop
0000000000023a31	nop
0000000000023a32	nop
0000000000023a33	nop
0000000000023a34	nop
0000000000023a35	nop
0000000000023a36	nop
0000000000023a37	nop
0000000000023a38	nop
0000000000023a39	nop
0000000000023a3a	nop
0000000000023a3b	nop
0000000000023a3c	nop
0000000000023a3d	nop
+[DBGGDBDataValue keyPathsForValuesAffectingValueHasChanged]:
0000000000023a3e	pushq	%rbp
0000000000023a3f	movq	%rsp,%rbp
0000000000023a42	movq	0x0008470f(%rip),%rsi
0000000000023a49	movq	0x00084c20(%rip),%rdi
0000000000023a50	leaq	0x00092e81(%rip),%rdx
0000000000023a57	popq	%rbp
0000000000023a58	jmp	*0x0006067a(%rip)
0000000000023a5e	nop
0000000000023a5f	nop
0000000000023a60	nop
0000000000023a61	nop
+[DBGGDBDataValue keyPathsForValuesAffectingSummary]:
0000000000023a62	pushq	%rbp
0000000000023a63	movq	%rsp,%rbp
0000000000023a66	movq	0x000846eb(%rip),%rsi
0000000000023a6d	movq	0x00084bfc(%rip),%rdi
0000000000023a74	leaq	0x00092e1d(%rip),%rdx
0000000000023a7b	popq	%rbp
0000000000023a7c	jmp	*0x00060656(%rip)
0000000000023a82	nop
0000000000023a83	nop
0000000000023a84	nop
0000000000023a85	nop
0000000000023a86	nop
0000000000023a87	nop
0000000000023a88	nop
0000000000023a89	nop
0000000000023a8a	nop
0000000000023a8b	nop
0000000000023a8c	nop
0000000000023a8d	nop
+[DBGGDBDataValue keyPathsForValuesAffectingValue]:
0000000000023a8e	pushq	%rbp
0000000000023a8f	movq	%rsp,%rbp
0000000000023a92	movq	0x000837a7(%rip),%rsi
0000000000023a99	movq	0x00084bd0(%rip),%rdi
0000000000023aa0	leaq	0x00092dd1(%rip),%rdx
0000000000023aa7	xorl	%ecx,%ecx
0000000000023aa9	xorb	%al,%al
0000000000023aab	popq	%rbp
0000000000023aac	jmp	*0x00060626(%rip)
0000000000023ab2	nop
0000000000023ab3	nop
0000000000023ab4	nop
0000000000023ab5	nop
0000000000023ab6	nop
0000000000023ab7	nop
0000000000023ab8	nop
0000000000023ab9	nop
0000000000023aba	nop
0000000000023abb	nop
0000000000023abc	nop
0000000000023abd	nop
-[DBGGDBDataValue expressionPath]:
0000000000023abe	pushq	%rbp
0000000000023abf	movq	%rsp,%rbp
0000000000023ac2	pushq	%r14
0000000000023ac4	pushq	%rbx
0000000000023ac5	movq	%rdi,%rbx
0000000000023ac8	movq	0x00084509(%rip),%rsi
0000000000023acf	movq	0x00060602(%rip),%r14
0000000000023ad6	call	*%r14
0000000000023ad9	movq	0x00081b38(%rip),%rsi
0000000000023ae0	movq	%rax,%rdi
0000000000023ae3	call	*%r14
0000000000023ae6	testl	%eax,%eax
0000000000023ae8	jne	0x00023b4f
0000000000023aea	movq	0x000844e7(%rip),%rsi
0000000000023af1	movq	0x000605e0(%rip),%r14
0000000000023af8	movq	%rbx,%rdi
0000000000023afb	call	*%r14
0000000000023afe	movq	0x0008470b(%rip),%rsi
0000000000023b05	movq	%rax,%rdi
0000000000023b08	call	*%r14
0000000000023b0b	testb	%al,%al
0000000000023b0d	je	0x00023b4f
0000000000023b0f	movq	0x000844c2(%rip),%rsi
0000000000023b16	movq	0x000605bb(%rip),%r14
0000000000023b1d	movq	%rbx,%rdi
0000000000023b20	call	*%r14
0000000000023b23	movq	0x000846ee(%rip),%rsi
0000000000023b2a	movq	%rax,%rdi
0000000000023b2d	call	*%r14
0000000000023b30	movq	0x000844a1(%rip),%rsi
0000000000023b37	movq	%rbx,%rdi
0000000000023b3a	call	*%r14
0000000000023b3d	movq	0x00081b84(%rip),%rsi
0000000000023b44	movq	%rax,%rdi
0000000000023b47	movl	$0x00000001,%edx
0000000000023b4c	call	*%r14
0000000000023b4f	movq	0x00084482(%rip),%rsi
0000000000023b56	movq	%rbx,%rdi
0000000000023b59	call	*0x00060579(%rip)
0000000000023b5f	movq	0x00081aaa(%rip),%rsi
0000000000023b66	movq	%rax,%rdi
0000000000023b69	movq	0x00060568(%rip),%rax
0000000000023b70	popq	%rbx
0000000000023b71	popq	%r14
0000000000023b73	popq	%rbp
0000000000023b74	jmp	*%rax
-[PBXLSDataValue pathExpressionValidityStatus]:
0000000000023b76	pushq	%rbp
0000000000023b77	movq	%rsp,%rbp
0000000000023b7a	movq	0x0008b68f(%rip),%rax
0000000000023b81	movl	(%rdi,%rax),%eax
0000000000023b84	popq	%rbp
0000000000023b85	ret
-[PBXGDB_VarObjDataValue2 canGetPathExpressionString]:
0000000000023b86	pushq	%rbp
0000000000023b87	movq	%rsp,%rbp
0000000000023b8a	movl	$0x00000001,%eax
0000000000023b8f	popq	%rbp
0000000000023b90	ret
-[PBXGDB_VarObjDataValue2 requestGetPathExpressionString]:
0000000000023b91	pushq	%rbp
0000000000023b92	movq	%rsp,%rbp
0000000000023b95	pushq	%rbx
0000000000023b96	pushq	%rax
0000000000023b97	movq	%rdi,%rbx
0000000000023b9a	movq	0x00080f17(%rip),%rsi
0000000000023ba1	call	*0x00060531(%rip)
0000000000023ba7	movq	0x0008189a(%rip),%rsi
0000000000023bae	movq	%rax,%rdi
0000000000023bb1	call	*0x00060521(%rip)
0000000000023bb7	movq	0x0008372a(%rip),%rsi
0000000000023bbe	movq	%rax,%rdi
0000000000023bc1	movq	%rbx,%rdx
0000000000023bc4	movq	0x0006050d(%rip),%rax
0000000000023bcb	addq	$0x08,%rsp
0000000000023bcf	popq	%rbx
0000000000023bd0	popq	%rbp
0000000000023bd1	jmp	*%rax
-[PBXGDB_DataValueController enqueueGetPathExpressionSequenceForDataValue:]:
0000000000023bd3	pushq	%rbp
0000000000023bd4	movq	%rsp,%rbp
0000000000023bd7	pushq	%r15
0000000000023bd9	pushq	%r14
0000000000023bdb	pushq	%rbx
0000000000023bdc	pushq	%rax
0000000000023bdd	movq	%rdx,%r15
0000000000023be0	movq	%rdi,%r14
0000000000023be3	movq	0x00084c0e(%rip),%rdi
0000000000023bea	leaq	0x000846ef(%rip),%rsi
0000000000023bf1	call	*0x000846e9(%rip)
0000000000023bf7	movq	0x00080e72(%rip),%rsi
0000000000023bfe	movq	%rax,%rdi
0000000000023c01	call	*0x000604d1(%rip)
0000000000023c07	movq	%rax,%rbx
0000000000023c0a	movq	0x00081847(%rip),%rsi
0000000000023c11	movq	%r14,%rdi
0000000000023c14	movq	%rbx,%rdx
0000000000023c17	movq	%r15,%rcx
0000000000023c1a	call	*0x000604b8(%rip)
0000000000023c20	movq	0x00080e91(%rip),%rsi
0000000000023c27	movq	%r14,%rdi
0000000000023c2a	call	*0x000604a8(%rip)
0000000000023c30	movq	0x00081199(%rip),%rsi
0000000000023c37	movq	%rax,%rdi
0000000000023c3a	call	*0x00060498(%rip)
0000000000023c40	movq	0x00081199(%rip),%rsi
0000000000023c47	movq	%rax,%rdi
0000000000023c4a	movq	%rbx,%rdx
0000000000023c4d	movq	0x00060484(%rip),%rax
0000000000023c54	addq	$0x08,%rsp
0000000000023c58	popq	%rbx
0000000000023c59	popq	%r14
0000000000023c5b	popq	%r15
0000000000023c5d	popq	%rbp
0000000000023c5e	jmp	*%rax
-[PBXLSDataValue setPathExpressionValidityStatus:]:
0000000000023c60	pushq	%rbp
0000000000023c61	movq	%rsp,%rbp
0000000000023c64	movq	0x0008b5a5(%rip),%rax
0000000000023c6b	movl	%edx,(%rdi,%rax)
0000000000023c6e	popq	%rbp
0000000000023c6f	ret
-[PBXLSDataValue pathExpressionString]:
0000000000023c70	pushq	%rbp
0000000000023c71	movq	%rsp,%rbp
0000000000023c74	movq	0x0008b58d(%rip),%rax
0000000000023c7b	movq	(%rdi,%rax),%rax
0000000000023c7f	popq	%rbp
0000000000023c80	ret
0000000000023c81	nop
0000000000023c82	nop
0000000000023c83	nop
0000000000023c84	nop
0000000000023c85	nop
+[DBGGDBDataValue keyPathsForValuesAffectingExpressionPath]:
0000000000023c86	pushq	%rbp
0000000000023c87	movq	%rsp,%rbp
0000000000023c8a	movq	0x000844c7(%rip),%rsi
0000000000023c91	movq	0x000849d8(%rip),%rdi
0000000000023c98	leaq	0x00092bb9(%rip),%rdx
0000000000023c9f	popq	%rbp
0000000000023ca0	jmp	*0x00060432(%rip)
-[PBXGDB_CommandSequence _verifySafetyCmd:]:
0000000000023ca6	pushq	%rbp
0000000000023ca7	movq	%rsp,%rbp
0000000000023caa	pushq	%r15
0000000000023cac	pushq	%r14
0000000000023cae	pushq	%r12
0000000000023cb0	pushq	%rbx
0000000000023cb1	movq	%rdx,%r12
0000000000023cb4	movq	%rdi,%r14
0000000000023cb7	movq	0x00080dfa(%rip),%rsi
0000000000023cbe	movq	0x00060413(%rip),%rbx
0000000000023cc5	call	*%rbx
0000000000023cc7	movq	%rax,%r15
0000000000023cca	movq	0x00081d6f(%rip),%rsi
0000000000023cd1	movq	%r12,%rdi
0000000000023cd4	call	*%rbx
0000000000023cd6	movl	$0x00000001,%ebx
0000000000023cdb	testb	%al,%al
0000000000023cdd	je	0x00023cf9
0000000000023cdf	movq	0x00081d62(%rip),%rsi
0000000000023ce6	movq	%r12,%rdi
0000000000023ce9	call	*0x000603e9(%rip)
0000000000023cef	cmpb	$0x01,%al
0000000000023cf1	movl	$0x00000001,%ebx
0000000000023cf6	sbbl	$0xff,%ebx
0000000000023cf9	movq	0x00080dc0(%rip),%rsi
0000000000023d00	movq	%r15,%rdi
0000000000023d03	call	*0x000603cf(%rip)
0000000000023d09	movq	%rax,%r15
0000000000023d0c	movq	0x0008ab0d(%rip),%rax
0000000000023d13	movq	(%r14,%rax),%rdi
0000000000023d17	movq	0x00081cd2(%rip),%rsi
0000000000023d1e	call	*0x000603b4(%rip)
0000000000023d24	movq	0x00081d25(%rip),%rsi
0000000000023d2b	movq	%r15,%rdi
0000000000023d2e	movl	%ebx,%edx
0000000000023d30	movq	%rax,%rcx
0000000000023d33	call	*0x0006039f(%rip)
0000000000023d39	movq	0x00081d18(%rip),%rsi
0000000000023d40	movq	%r14,%rdi
0000000000023d43	movq	0x0006038e(%rip),%rax
0000000000023d4a	popq	%rbx
0000000000023d4b	popq	%r12
0000000000023d4d	popq	%r14
0000000000023d4f	popq	%r15
0000000000023d51	popq	%rbp
0000000000023d52	jmp	*%rax
-[PBXGDB_CommandSequence _privateCheckSafety]:
0000000000023d54	pushq	%rbp
0000000000023d55	movq	%rsp,%rbp
0000000000023d58	pushq	%r14
0000000000023d5a	pushq	%rbx
0000000000023d5b	movq	%rdi,%r14
0000000000023d5e	cmpb	$0x00,0x0009392b(%rip)
0000000000023d65	je	0x00023dfb
0000000000023d6b	movq	0x00080d0e(%rip),%rsi
0000000000023d72	movq	0x00084997(%rip),%rdi
0000000000023d79	call	*0x00060359(%rip)
0000000000023d7f	movq	%rax,%rbx
0000000000023d82	movq	0x00081c9f(%rip),%rsi
0000000000023d89	movq	%rbx,%rdi
0000000000023d8c	movl	$0x00000001,%edx
0000000000023d91	call	*0x00060341(%rip)
0000000000023d97	movq	0x00080cea(%rip),%rsi
0000000000023d9e	movq	%rbx,%rdi
0000000000023da1	movq	%r14,%rdx
0000000000023da4	call	*0x0006032e(%rip)
0000000000023daa	movq	0x00080ce7(%rip),%rsi
0000000000023db1	movq	0x00081c78(%rip),%rdx
0000000000023db8	movq	%rbx,%rdi
0000000000023dbb	call	*0x00060317(%rip)
0000000000023dc1	movq	0x00080cf0(%rip),%rsi
0000000000023dc8	movq	%r14,%rdi
0000000000023dcb	call	*0x00060307(%rip)
0000000000023dd1	movq	0x00080ce8(%rip),%rsi
0000000000023dd8	movq	%rax,%rdi
0000000000023ddb	call	*0x000602f7(%rip)
0000000000023de1	movq	0x00080ce0(%rip),%rsi
0000000000023de8	movq	%rax,%rdi
0000000000023deb	movq	%rbx,%rdx
0000000000023dee	movq	0x000602e3(%rip),%rax
0000000000023df5	popq	%rbx
0000000000023df6	popq	%r14
0000000000023df8	popq	%rbp
0000000000023df9	jmp	*%rax
0000000000023dfb	movq	0x00081c2e(%rip),%rsi
0000000000023e02	movq	%r14,%rdi
0000000000023e05	popq	%rbx
0000000000023e06	popq	%r14
0000000000023e08	popq	%rbp
0000000000023e09	jmp	*0x000602c9(%rip)
-[PBXGDB_MISchedulerOnOrOffCommand setOn:]:
0000000000023e0f	pushq	%rbp
0000000000023e10	movq	%rsp,%rbp
0000000000023e13	movq	0x0008ad36(%rip),%rax
0000000000023e1a	movb	%dl,(%rdi,%rax)
0000000000023e1d	popq	%rbp
0000000000023e1e	ret
-[PBXGDB_MISchedulerOnOrOffCommand GDBCommandString]:
0000000000023e1f	pushq	%rbp
0000000000023e20	movq	%rsp,%rbp
0000000000023e23	leaq	0x0008dbae(%rip),%rax
0000000000023e2a	leaq	0x0008dbc7(%rip),%rcx
0000000000023e31	movq	0x0008ad18(%rip),%rdx
0000000000023e38	cmpb	$0x00,(%rdi,%rdx)
0000000000023e3c	cmovneq	%rax,%rcx
0000000000023e40	movq	0x00080d31(%rip),%rsi
0000000000023e47	movq	0x00084602(%rip),%rdi
0000000000023e4e	leaq	0x0008dbc3(%rip),%rdx
0000000000023e55	xorb	%al,%al
0000000000023e57	popq	%rbp
0000000000023e58	jmp	*0x0006027a(%rip)
-[PBXGDB_CommandSequence _privateDoCheckSaftey]:
0000000000023e5e	pushq	%rbp
0000000000023e5f	movq	%rsp,%rbp
0000000000023e62	pushq	%r14
0000000000023e64	pushq	%rbx
0000000000023e65	movq	%rdi,%rbx
0000000000023e68	movq	0x0008a9b1(%rip),%rax
0000000000023e6f	movq	(%rbx,%rax),%rdi
0000000000023e73	movq	0x00080c06(%rip),%rsi
0000000000023e7a	call	*0x00060258(%rip)
0000000000023e80	movq	%rax,%r14
0000000000023e83	movq	0x00080bfe(%rip),%rsi
0000000000023e8a	movq	%r14,%rdi
0000000000023e8d	movq	%rbx,%rdx
0000000000023e90	call	*0x00060242(%rip)
0000000000023e96	movq	0x00081b9b(%rip),%rsi
0000000000023e9d	movq	%rbx,%rdi
0000000000023ea0	call	*0x00060232(%rip)
0000000000023ea6	movq	0x00080bfb(%rip),%rsi
0000000000023ead	movq	%r14,%rdi
0000000000023eb0	movq	%rax,%rdx
0000000000023eb3	call	*0x0006021f(%rip)
0000000000023eb9	movq	0x00080bd8(%rip),%rsi
0000000000023ec0	movq	0x00081b59(%rip),%rdx
0000000000023ec7	movq	%r14,%rdi
0000000000023eca	call	*0x00060208(%rip)
0000000000023ed0	movq	0x00080be1(%rip),%rsi
0000000000023ed7	movq	%rbx,%rdi
0000000000023eda	call	*0x000601f8(%rip)
0000000000023ee0	movq	0x00080bd9(%rip),%rsi
0000000000023ee7	movq	%rax,%rdi
0000000000023eea	call	*0x000601e8(%rip)
0000000000023ef0	movq	0x00080bd1(%rip),%rsi
0000000000023ef7	movq	%rax,%rdi
0000000000023efa	movq	%r14,%rdx
0000000000023efd	movq	0x000601d4(%rip),%rax
0000000000023f04	popq	%rbx
0000000000023f05	popq	%r14
0000000000023f07	popq	%rbp
0000000000023f08	jmp	*%rax
-[PBXGDB_BaseDataValueSequence _safteyCheckThreadID]:
0000000000023f0a	pushq	%rbp
0000000000023f0b	movq	%rsp,%rbp
0000000000023f0e	movq	0x000816f3(%rip),%rsi
0000000000023f15	call	*0x000601bd(%rip)
0000000000023f1b	movq	0x00081826(%rip),%rsi
0000000000023f22	movq	%rax,%rdi
0000000000023f25	movq	0x000601ac(%rip),%rax
0000000000023f2c	popq	%rbp
0000000000023f2d	jmp	*%rax
0000000000023f2f	nop
0000000000023f30	nop
-[PBXGDB_MIFastEvaluationSafetyCheckCommand GDBCommandString]:
0000000000023f31	pushq	%rbp
0000000000023f32	movq	%rsp,%rbp
0000000000023f35	pushq	%r15
0000000000023f37	pushq	%r14
0000000000023f39	pushq	%rbx
0000000000023f3a	pushq	%rax
0000000000023f3b	movq	%rdi,%rbx
0000000000023f3e	movq	0x00081aab(%rip),%rsi
0000000000023f45	movq	0x000847ac(%rip),%rdi
0000000000023f4c	movq	0x00060185(%rip),%r15
0000000000023f53	call	*%r15
0000000000023f56	movq	%rax,%r14
0000000000023f59	movq	0x000817e8(%rip),%rsi
0000000000023f60	movq	%rbx,%rdi
0000000000023f63	call	*%r15
0000000000023f66	cmpq	$0xff,%rax
0000000000023f6a	jne	0x00023f75
0000000000023f6c	leaq	0x0008e4a5(%rip),%r8
0000000000023f73	jmp	0x00023f98
0000000000023f75	movq	0x00080bfc(%rip),%rsi
0000000000023f7c	movq	0x000844cd(%rip),%rdi
0000000000023f83	leaq	0x0008c96e(%rip),%rdx
0000000000023f8a	movq	%rax,%rcx
0000000000023f8d	xorb	%al,%al
0000000000023f8f	call	*0x00060143(%rip)
0000000000023f95	movq	%rax,%r8
0000000000023f98	movq	0x00080bd9(%rip),%rsi
0000000000023f9f	movq	0x000844aa(%rip),%rdi
0000000000023fa6	leaq	0x0008e48b(%rip),%rdx
0000000000023fad	movq	%r14,%rcx
0000000000023fb0	xorb	%al,%al
0000000000023fb2	addq	$0x08,%rsp
0000000000023fb6	popq	%rbx
0000000000023fb7	popq	%r14
0000000000023fb9	popq	%r15
0000000000023fbb	popq	%rbp
0000000000023fbc	jmp	*0x00060116(%rip)
-[PBXGDB_CommandSequence _didCheckSafety:]:
0000000000023fc2	pushq	%rbp
0000000000023fc3	movq	%rsp,%rbp
0000000000023fc6	pushq	%r15
0000000000023fc8	pushq	%r14
0000000000023fca	pushq	%r13
0000000000023fcc	pushq	%r12
0000000000023fce	pushq	%rbx
0000000000023fcf	subq	$0x18,%rsp
0000000000023fd3	movq	%rdx,%r15
0000000000023fd6	movq	%rdi,0xd0(%rbp)
0000000000023fda	movq	0x00080ad7(%rip),%rsi
0000000000023fe1	movq	0x000600f0(%rip),%rbx
0000000000023fe8	call	*%rbx
0000000000023fea	movq	0x00080dff(%rip),%rsi
0000000000023ff1	movq	%rax,%rdi
0000000000023ff4	call	*%rbx
0000000000023ff6	movq	%rax,%r12
0000000000023ff9	movq	0x00080ad0(%rip),%rsi
0000000000024000	movq	%r15,%rdi
0000000000024003	call	*%rbx
0000000000024005	leaq	0x0008cc0c(%rip),%rdx
000000000002400c	movq	0x00080ac5(%rip),%rsi
0000000000024013	movq	%rax,%rdi
0000000000024016	call	*%rbx
0000000000024018	movq	0x00080ae9(%rip),%rsi
000000000002401f	movq	%rax,%rdi
0000000000024022	call	*%rbx
0000000000024024	leaq	0x00084335(%rip),%rsi
000000000002402b	leaq	0x0008ba66(%rip),%rdx
0000000000024032	movq	%rax,%rdi
0000000000024035	call	*0x00084325(%rip)
000000000002403b	movb	%al,%r13b
000000000002403e	leaq	0x00081a23(%rip),%rcx
0000000000024045	leaq	0x00081a24(%rip),%rax
000000000002404c	testb	%r13b,%r13b
000000000002404f	cmovneq	%rcx,%rax
0000000000024053	movq	(%rax),%rax
0000000000024056	movq	%rax,0xc8(%rbp)
000000000002405a	je	0x0002410d
0000000000024060	movq	0x00080a69(%rip),%rsi
0000000000024067	movq	0x0006006a(%rip),%r14
000000000002406e	movq	%r15,%rdi
0000000000024071	call	*%r14
0000000000024074	movq	0x00080a5d(%rip),%rsi
000000000002407b	leaq	0x0008cbb6(%rip),%rdx
0000000000024082	movq	%rax,%rdi
0000000000024085	call	*%r14
0000000000024088	movq	0x00080a51(%rip),%rsi
000000000002408f	movq	%rax,%rdi
0000000000024092	call	*%r14
0000000000024095	movq	%rax,%r15
0000000000024098	leaq	0x0008bc99(%rip),%rdx
000000000002409f	movq	0x00080a32(%rip),%rsi
00000000000240a6	movq	%r15,%rdi
00000000000240a9	call	*%r14
00000000000240ac	movq	0x00080a55(%rip),%rsi
00000000000240b3	movq	%rax,%rdi
00000000000240b6	call	*%r14
00000000000240b9	movq	%rax,%rbx
00000000000240bc	leaq	0x0008cb95(%rip),%rdx
00000000000240c3	movq	0x00080a0e(%rip),%rsi
00000000000240ca	movq	%r15,%rdi
00000000000240cd	call	*%r14
00000000000240d0	movq	0x00080a31(%rip),%rsi
00000000000240d7	movq	%rax,%rdi
00000000000240da	call	*%r14
00000000000240dd	leaq	0x0008cb94(%rip),%rdx
00000000000240e4	movq	0x00080a8d(%rip),%rsi
00000000000240eb	movq	0x0008435e(%rip),%rdi
00000000000240f2	movq	%rax,%rcx
00000000000240f5	movq	%rbx,%r8
00000000000240f8	xorb	%al,%al
00000000000240fa	call	*%r14
00000000000240fd	movq	0x00081974(%rip),%rsi
0000000000024104	movq	%r12,%rdi
0000000000024107	movq	%rax,%rdx
000000000002410a	call	*%r14
000000000002410d	cmpb	$0x01,%r13b
0000000000024111	movl	$0x00000001,%edx
0000000000024116	sbbl	$0xff,%edx
0000000000024119	movq	0x00081960(%rip),%rsi
0000000000024120	movq	%r12,%rdi
0000000000024123	call	*0x0005ffaf(%rip)
0000000000024129	movq	0x00081898(%rip),%rsi
0000000000024130	movq	0xd0(%rbp),%rdi
0000000000024134	movq	0xc8(%rbp),%rdx
0000000000024138	movq	0x0005ff99(%rip),%rax
000000000002413f	addq	$0x18,%rsp
0000000000024143	popq	%rbx
0000000000024144	popq	%r12
0000000000024146	popq	%r13
0000000000024148	popq	%r14
000000000002414a	popq	%r15
000000000002414c	popq	%rbp
000000000002414d	jmp	*%rax
000000000002414f	nop
0000000000024150	nop
0000000000024151	nop
0000000000024152	nop
0000000000024153	nop
0000000000024154	nop
0000000000024155	nop
0000000000024156	nop
0000000000024157	nop
0000000000024158	nop
0000000000024159	nop
-[PBXLSProcess setEvaluationSafetyStatus:]:
000000000002415a	pushq	%rbp
000000000002415b	movq	%rsp,%rbp
000000000002415e	movq	0x0008b1e3(%rip),%rax
0000000000024165	movl	%edx,(%rdi,%rax)
0000000000024168	popq	%rbp
0000000000024169	ret
-[PBXGDB_UpdateDataValueSequence safetyCheckSucceeded]:
000000000002416a	pushq	%rbp
000000000002416b	movq	%rsp,%rbp
000000000002416e	pushq	%r15
0000000000024170	pushq	%r14
0000000000024172	pushq	%r13
0000000000024174	pushq	%r12
0000000000024176	pushq	%rbx
0000000000024177	subq	$0x000000e8,%rsp
000000000002417e	movq	%rdi,0xfffffef8(%rbp)
0000000000024185	movq	0x0005ff14(%rip),%rax
000000000002418c	movq	(%rax),%rax
000000000002418f	movq	%rax,0xd0(%rbp)
0000000000024193	xorps	%xmm0,%xmm0
0000000000024196	movaps	%xmm0,0xc0(%rbp)
000000000002419a	movaps	%xmm0,0xb0(%rbp)
000000000002419e	movaps	%xmm0,0xa0(%rbp)
00000000000241a2	movaps	%xmm0,0x90(%rbp)
00000000000241a6	movq	0x0008145b(%rip),%rsi
00000000000241ad	movq	0x0005ff24(%rip),%rbx
00000000000241b4	call	*%rbx
00000000000241b6	movq	0x000814cb(%rip),%rsi
00000000000241bd	movq	%rax,%rdi
00000000000241c0	call	*%rbx
00000000000241c2	movq	%rax,%r12
00000000000241c5	leaq	0x000841b4(%rip),%rsi
00000000000241cc	leaq	0x90(%rbp),%rdx
00000000000241d0	leaq	0xffffff10(%rbp),%rcx
00000000000241d7	movq	%r12,%rdi
00000000000241da	movl	$0x00000010,%r8d
00000000000241e0	call	*0x0008419a(%rip)
00000000000241e6	movq	%rax,%rbx
00000000000241e9	testq	%rbx,%rbx
00000000000241ec	je	0x00024257
00000000000241ee	movq	0xa0(%rbp),%rax
00000000000241f2	movq	(%rax),%r14
00000000000241f5	movq	0x000813e4(%rip),%r15
00000000000241fc	xorl	%r13d,%r13d
00000000000241ff	movq	0xa0(%rbp),%rax
0000000000024203	cmpq	%r14,(%rax)
0000000000024206	je	0x00024210
0000000000024208	movq	%r12,%rdi
000000000002420b	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
0000000000024210	movq	0x98(%rbp),%rax
0000000000024214	movq	(%rax,%r13,8),%rdi
0000000000024218	movq	%r15,%rsi
000000000002421b	movl	$0x00000001,%edx
0000000000024220	call	*0x0005feb2(%rip)
0000000000024226	incq	%r13
0000000000024229	cmpq	%rbx,%r13
000000000002422c	jb	0x000241ff
000000000002422e	movq	%r12,%rdi
0000000000024231	leaq	0x00084148(%rip),%rsi
0000000000024238	leaq	0x90(%rbp),%rdx
000000000002423c	leaq	0xffffff10(%rbp),%rcx
0000000000024243	movl	$0x00000010,%r8d
0000000000024249	call	*0x00084131(%rip)
000000000002424f	movq	%rax,%rbx
0000000000024252	testq	%rbx,%rbx
0000000000024255	jne	0x000241fc
0000000000024257	movq	0xfffffef8(%rbp),%rax
000000000002425e	movq	%rax,0xffffff00(%rbp)
0000000000024265	movq	0x00084b34(%rip),%rax
000000000002426c	movq	%rax,0xffffff08(%rbp)
0000000000024273	movq	0x000817f6(%rip),%rsi
000000000002427a	leaq	0xffffff00(%rbp),%rdi
0000000000024281	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000024286	movq	0x0005fe13(%rip),%rax
000000000002428d	movq	(%rax),%rax
0000000000024290	cmpq	0xd0(%rbp),%rax
0000000000024294	jne	0x000242a8
0000000000024296	addq	$0x000000e8,%rsp
000000000002429d	popq	%rbx
000000000002429e	popq	%r12
00000000000242a0	popq	%r13
00000000000242a2	popq	%r14
00000000000242a4	popq	%r15
00000000000242a6	popq	%rbp
00000000000242a7	ret
00000000000242a8	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
-[PBXGDB_CommandSequence safetyCheckSucceeded]:
00000000000242ad	pushq	%rbp
00000000000242ae	movq	%rsp,%rbp
00000000000242b1	movq	0x0008a558(%rip),%rax
00000000000242b8	cmpb	$0x00,(%rdi,%rax)
00000000000242bc	je	0x000242c0
00000000000242be	popq	%rbp
00000000000242bf	ret
00000000000242c0	movq	0x00081751(%rip),%rsi
00000000000242c7	popq	%rbp
00000000000242c8	jmp	*0x0005fe0a(%rip)
-[PBXGDB_UpdateDataValueSequence execute]:
00000000000242ce	pushq	%rbp
00000000000242cf	movq	%rsp,%rbp
00000000000242d2	pushq	%r15
00000000000242d4	pushq	%r14
00000000000242d6	pushq	%rbx
00000000000242d7	pushq	%rax
00000000000242d8	movq	%rdi,%r14
00000000000242db	movq	0x00081326(%rip),%rsi
00000000000242e2	movq	0x0005fdef(%rip),%rbx
00000000000242e9	call	*%rbx
00000000000242eb	movq	0x000817c6(%rip),%rsi
00000000000242f2	movq	%rax,%rdi
00000000000242f5	call	*%rbx
00000000000242f7	movq	%rax,%rbx
00000000000242fa	leaq	0x0008400f(%rip),%rsi
0000000000024301	movq	%rbx,%rdi
0000000000024304	call	*0x00084006(%rip)
000000000002430a	testq	%rax,%rax
000000000002430d	je	0x000243ae
0000000000024313	movq	0x00081ac6(%rip),%rsi
000000000002431a	movq	0x00081ab7(%rip),%rdx
0000000000024321	movq	0x0005fdb0(%rip),%r15
0000000000024328	movq	%rbx,%rdi
000000000002432b	call	*%r15
000000000002432e	movq	0x000812d3(%rip),%rsi
0000000000024335	movq	%r14,%rdi
0000000000024338	call	*%r15
000000000002433b	movq	%rax,%rbx
000000000002433e	leaq	0x0008402b(%rip),%rsi
0000000000024345	movq	0x0008174c(%rip),%rdx
000000000002434c	movq	%rbx,%rdi
000000000002434f	call	*0x0008401b(%rip)
0000000000024355	cmpb	$0x01,%al
0000000000024357	jne	0x0002437a
0000000000024359	movq	0x000812a8(%rip),%rsi
0000000000024360	movq	0x0005fd71(%rip),%rbx
0000000000024367	movq	%r14,%rdi
000000000002436a	call	*%rbx
000000000002436c	movq	0x00081725(%rip),%rsi
0000000000024373	movq	%rax,%rdi
0000000000024376	call	*%rbx
0000000000024378	jmp	0x00024391
000000000002437a	movq	0x0008117f(%rip),%rsi
0000000000024381	movq	0x000842d8(%rip),%rdi
0000000000024388	movq	%rbx,%rdx
000000000002438b	call	*0x0005fd47(%rip)
0000000000024391	movq	0x00081378(%rip),%rsi
0000000000024398	movq	%r14,%rdi
000000000002439b	movq	%rax,%rdx
000000000002439e	addq	$0x08,%rsp
00000000000243a2	popq	%rbx
00000000000243a3	popq	%r14
00000000000243a5	popq	%r15
00000000000243a7	popq	%rbp
00000000000243a8	jmp	*0x0005fd2a(%rip)
00000000000243ae	movq	0x00080783(%rip),%rsi
00000000000243b5	movq	%r14,%rdi
00000000000243b8	addq	$0x08,%rsp
00000000000243bc	popq	%rbx
00000000000243bd	popq	%r14
00000000000243bf	popq	%r15
00000000000243c1	popq	%rbp
00000000000243c2	jmp	*0x0005fd10(%rip)
-[PBXLSDataValue resetValueChangeStatus]:
00000000000243c8	pushq	%rbp
00000000000243c9	movq	%rsp,%rbp
00000000000243cc	movq	0x0008addd(%rip),%rax
00000000000243d3	movl	$0x00000000,(%rdi,%rax)
00000000000243da	movq	0x00082fcf(%rip),%rsi
00000000000243e1	xorl	%edx,%edx
00000000000243e3	popq	%rbp
00000000000243e4	jmp	*0x0005fcee(%rip)
-[PBXGDB_ContainingDataValue2 topLevelDataValues]:
00000000000243ea	pushq	%rbp
00000000000243eb	movq	%rsp,%rbp
00000000000243ee	pushq	%r15
00000000000243f0	pushq	%r14
00000000000243f2	pushq	%r13
00000000000243f4	pushq	%r12
00000000000243f6	pushq	%rbx
00000000000243f7	pushq	%rax
00000000000243f8	movq	%rdi,%rbx
00000000000243fb	movq	0x0008102e(%rip),%rsi
0000000000024402	movq	0x00084057(%rip),%rdi
0000000000024409	movq	0x0005fcc8(%rip),%r14
0000000000024410	call	*%r14
0000000000024413	movq	%rax,%r12
0000000000024416	movq	0x0008126b(%rip),%rsi
000000000002441d	movq	%rbx,%rdi
0000000000024420	call	*%r14
0000000000024423	movq	%rax,0xd0(%rbp)
0000000000024427	leaq	0x00083ee2(%rip),%rsi
000000000002442e	movq	%rax,%rdi
0000000000024431	call	*0x00083ed9(%rip)
0000000000024437	movq	%rax,%r15
000000000002443a	testq	%r15,%r15
000000000002443d	je	0x000244c8
0000000000024443	xorl	%ebx,%ebx
0000000000024445	movq	0x0005fc8c(%rip),%r14
000000000002444c	movq	0xd0(%rbp),%rdi
0000000000024450	leaq	0x00083ec9(%rip),%rsi
0000000000024457	movq	%rbx,%rdx
000000000002445a	call	*0x00083ec0(%rip)
0000000000024460	movq	%rax,%r13
0000000000024463	movq	0x0008404e(%rip),%rdi
000000000002446a	leaq	0x00083ebf(%rip),%rsi
0000000000024471	call	*0x00083eb9(%rip)
0000000000024477	movq	%r13,%rdi
000000000002447a	leaq	0x00083ebf(%rip),%rsi
0000000000024481	movq	%rax,%rdx
0000000000024484	call	*0x00083eb6(%rip)
000000000002448a	testb	%al,%al
000000000002448c	je	0x000244ad
000000000002448e	movq	%r13,%rdi
0000000000024491	movq	0x000811f0(%rip),%rsi
0000000000024498	call	*%r14
000000000002449b	movq	%r12,%rdi
000000000002449e	movq	0x0008103b(%rip),%rsi
00000000000244a5	movq	%rax,%rdx
00000000000244a8	call	*%r14
00000000000244ab	jmp	0x000244c0
00000000000244ad	movq	%r12,%rdi
00000000000244b0	leaq	0x00083e49(%rip),%rsi
00000000000244b7	movq	%r13,%rdx
00000000000244ba	call	*0x00083e40(%rip)
00000000000244c0	incq	%rbx
00000000000244c3	cmpq	%rbx,%r15
00000000000244c6	jne	0x0002444c
00000000000244c8	movq	%r12,%rax
00000000000244cb	addq	$0x08,%rsp
00000000000244cf	popq	%rbx
00000000000244d0	popq	%r12
00000000000244d2	popq	%r13
00000000000244d4	popq	%r14
00000000000244d6	popq	%r15
00000000000244d8	popq	%rbp
00000000000244d9	ret
-[PBXGDB_BaseDataValueSequence subSequenceUpdateDataValues:]:
00000000000244da	pushq	%rbp
00000000000244db	movq	%rsp,%rbp
00000000000244de	pushq	%r15
00000000000244e0	pushq	%r14
00000000000244e2	pushq	%r13
00000000000244e4	pushq	%r12
00000000000244e6	pushq	%rbx
00000000000244e7	pushq	%rax
00000000000244e8	movq	%rdx,%r15
00000000000244eb	movq	%rdi,0xd0(%rbp)
00000000000244ef	leaq	0x00083e1a(%rip),%rsi
00000000000244f6	movq	%r15,%rdi
00000000000244f9	call	*0x00083e11(%rip)
00000000000244ff	movq	%rax,%r13
0000000000024502	movq	0x00080577(%rip),%rsi
0000000000024509	movq	0x000841b8(%rip),%rdi
0000000000024510	call	*0x0005fbc2(%rip)
0000000000024516	movq	%rax,%r12
0000000000024519	testq	%r13,%r13
000000000002451c	je	0x00024591
000000000002451e	xorl	%ebx,%ebx
0000000000024520	movq	%r15,%rdi
0000000000024523	leaq	0x00083df6(%rip),%rsi
000000000002452a	movq	%rbx,%rdx
000000000002452d	call	*0x00083ded(%rip)
0000000000024533	movq	%rax,%r14
0000000000024536	movq	0x000840c3(%rip),%rdi
000000000002453d	leaq	0x00083dec(%rip),%rsi
0000000000024544	call	*0x00083de6(%rip)
000000000002454a	movq	%r14,%rdi
000000000002454d	leaq	0x00083dec(%rip),%rsi
0000000000024554	movq	%rax,%rdx
0000000000024557	call	*0x00083de3(%rip)
000000000002455d	testb	%al,%al
000000000002455f	je	0x00024589
0000000000024561	movq	%r14,%rdi
0000000000024564	movq	0x0008136d(%rip),%rsi
000000000002456b	call	*0x0005fb67(%rip)
0000000000024571	testq	%rax,%rax
0000000000024574	je	0x00024589
0000000000024576	movq	%r12,%rdi
0000000000024579	movq	0x00081360(%rip),%rsi
0000000000024580	movq	%rax,%rdx
0000000000024583	call	*0x0005fb4f(%rip)
0000000000024589	incq	%rbx
000000000002458c	cmpq	%rbx,%r13
000000000002458f	jne	0x00024520
0000000000024591	movq	0x00081350(%rip),%rsi
0000000000024598	movq	%r12,%rdi
000000000002459b	call	*0x0005fb37(%rip)
00000000000245a1	leaq	0x00083d48(%rip),%rsi
00000000000245a8	movq	%rax,%rdi
00000000000245ab	call	*0x00083d3f(%rip)
00000000000245b1	testq	%rax,%rax
00000000000245b4	movq	0xd0(%rbp),%rbx
00000000000245b8	je	0x00024618
00000000000245ba	movq	0x000804c7(%rip),%rsi
00000000000245c1	movq	%r12,%rdi
00000000000245c4	movq	%rbx,%rdx
00000000000245c7	call	*0x0005fb0b(%rip)
00000000000245cd	movq	0x000804c4(%rip),%rsi
00000000000245d4	movq	0x00081315(%rip),%rdx
00000000000245db	movq	%r12,%rdi
00000000000245de	call	*0x0005faf4(%rip)
00000000000245e4	movq	0x0008130d(%rip),%rsi
00000000000245eb	movq	%r12,%rdi
00000000000245ee	call	*0x0005fae4(%rip)
00000000000245f4	movq	0x00081045(%rip),%rsi
00000000000245fb	movq	%rbx,%rdi
00000000000245fe	movq	%r12,%rdx
0000000000024601	movq	0x0005fad0(%rip),%rax
0000000000024608	addq	$0x08,%rsp
000000000002460c	popq	%rbx
000000000002460d	popq	%r12
000000000002460f	popq	%r13
0000000000024611	popq	%r14
0000000000024613	popq	%r15
0000000000024615	popq	%rbp
0000000000024616	jmp	*%rax
0000000000024618	movq	0x00080519(%rip),%rsi
000000000002461f	movq	%rbx,%rdi
0000000000024622	addq	$0x08,%rsp
0000000000024626	popq	%rbx
0000000000024627	popq	%r12
0000000000024629	popq	%r13
000000000002462b	popq	%r14
000000000002462d	popq	%r15
000000000002462f	popq	%rbp
0000000000024630	jmp	*0x0005faa2(%rip)
-[PBXGDB_VarObjDataValue2 varObjNameArrayWithChildren]:
0000000000024636	pushq	%rbp
0000000000024637	movq	%rsp,%rbp
000000000002463a	movq	0x0008aaef(%rip),%rax
0000000000024641	movq	(%rdi,%rax),%rdx
0000000000024645	testq	%rdx,%rdx
0000000000024648	jne	0x0002464e
000000000002464a	xorl	%eax,%eax
000000000002464c	jmp	0x00024662
000000000002464e	movq	0x00080eab(%rip),%rsi
0000000000024655	movq	0x00083e04(%rip),%rdi
000000000002465c	call	*0x0005fa76(%rip)
0000000000024662	popq	%rbp
0000000000024663	ret
-[PBXGDB_MIUpdateVarObjListCommand appendVarObjNameArray:]:
0000000000024664	pushq	%rbp
0000000000024665	movq	%rsp,%rbp
0000000000024668	pushq	%r15
000000000002466a	pushq	%r14
000000000002466c	pushq	%r13
000000000002466e	pushq	%r12
0000000000024670	pushq	%rbx
0000000000024671	subq	$0x000000c8,%rsp
0000000000024678	movq	%rdx,%r13
000000000002467b	movq	%rdi,%r14
000000000002467e	movq	0x0005fa1b(%rip),%rax
0000000000024685	movq	(%rax),%rax
0000000000024688	movq	%rax,0xd0(%rbp)
000000000002468c	xorps	%xmm0,%xmm0
000000000002468f	movaps	%xmm0,0xc0(%rbp)
0000000000024693	movaps	%xmm0,0xb0(%rbp)
0000000000024697	movaps	%xmm0,0xa0(%rbp)
000000000002469b	movaps	%xmm0,0x90(%rbp)
000000000002469f	leaq	0x00083cda(%rip),%rsi
00000000000246a6	leaq	0x90(%rbp),%rdx
00000000000246aa	leaq	0xffffff10(%rbp),%rcx
00000000000246b1	movq	%r13,%rdi
00000000000246b4	movl	$0x00000010,%r8d
00000000000246ba	call	*0x00083cc0(%rip)
00000000000246c0	movq	%rax,%rbx
00000000000246c3	testq	%rbx,%rbx
00000000000246c6	je	0x0002472c
00000000000246c8	movq	0xa0(%rbp),%rax
00000000000246cc	movq	(%rax),%r12
00000000000246cf	xorl	%r15d,%r15d
00000000000246d2	movq	0xa0(%rbp),%rax
00000000000246d6	cmpq	%r12,(%rax)
00000000000246d9	je	0x000246e3
00000000000246db	movq	%r13,%rdi
00000000000246de	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
00000000000246e3	movq	0x98(%rbp),%rax
00000000000246e7	movq	(%rax,%r15,8),%rdx
00000000000246eb	movq	%r14,%rdi
00000000000246ee	movq	0x0008218b(%rip),%rsi
00000000000246f5	call	*0x0005f9dd(%rip)
00000000000246fb	incq	%r15
00000000000246fe	cmpq	%rbx,%r15
0000000000024701	jb	0x000246d2
0000000000024703	movq	%r13,%rdi
0000000000024706	leaq	0x00083c73(%rip),%rsi
000000000002470d	leaq	0x90(%rbp),%rdx
0000000000024711	leaq	0xffffff10(%rbp),%rcx
0000000000024718	movl	$0x00000010,%r8d
000000000002471e	call	*0x00083c5c(%rip)
0000000000024724	movq	%rax,%rbx
0000000000024727	testq	%rbx,%rbx
000000000002472a	jne	0x000246cf
000000000002472c	movq	0x0005f96d(%rip),%rax
0000000000024733	movq	(%rax),%rax
0000000000024736	cmpq	0xd0(%rbp),%rax
000000000002473a	jne	0x0002474e
000000000002473c	addq	$0x000000c8,%rsp
0000000000024743	popq	%rbx
0000000000024744	popq	%r12
0000000000024746	popq	%r13
0000000000024748	popq	%r14
000000000002474a	popq	%r15
000000000002474c	popq	%rbp
000000000002474d	ret
000000000002474e	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
-[PBXGDB_MIUpdateVarObjListCommand appendVarObjName:]:
0000000000024753	pushq	%rbp
0000000000024754	movq	%rsp,%rbp
0000000000024757	pushq	%rbx
0000000000024758	pushq	%rax
0000000000024759	movq	%rdx,%rbx
000000000002475c	movq	0x00081185(%rip),%rsi
0000000000024763	call	*0x0005f96f(%rip)
0000000000024769	leaq	0x0008f4e8(%rip),%rdx
0000000000024770	movq	0x00080521(%rip),%rsi
0000000000024777	movq	%rax,%rdi
000000000002477a	movq	%rbx,%rcx
000000000002477d	xorb	%al,%al
000000000002477f	movq	0x0005f952(%rip),%r8
0000000000024786	addq	$0x08,%rsp
000000000002478a	popq	%rbx
000000000002478b	popq	%rbp
000000000002478c	jmp	*%r8
-[PBXGDB_MIUpdateVarObjListCommand varObjNameListString]:
000000000002478f	pushq	%rbp
0000000000024790	movq	%rsp,%rbp
0000000000024793	pushq	%rbx
0000000000024794	pushq	%rax
0000000000024795	movq	%rdi,%rbx
0000000000024798	movq	0x0008a749(%rip),%rax
000000000002479f	movq	(%rbx,%rax),%rax
00000000000247a3	testq	%rax,%rax
00000000000247a6	jne	0x000247e9
00000000000247a8	movq	0x00083c89(%rip),%rdi
00000000000247af	leaq	0x00083b2a(%rip),%rsi
00000000000247b6	call	*0x00083b24(%rip)
00000000000247bc	movq	0x000802ad(%rip),%rsi
00000000000247c3	movq	%rax,%rdi
00000000000247c6	call	*0x0005f90c(%rip)
00000000000247cc	movq	0x0008a715(%rip),%rdx
00000000000247d3	movq	%rax,%rdi
00000000000247d6	movq	%rbx,%rsi
00000000000247d9	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000247de	movq	0x0008a703(%rip),%rax
00000000000247e5	movq	(%rbx,%rax),%rax
00000000000247e9	addq	$0x08,%rsp
00000000000247ed	popq	%rbx
00000000000247ee	popq	%rbp
00000000000247ef	ret
-[PBXGDB_MIUpdateVarObjListCommand endList]:
00000000000247f0	pushq	%rbp
00000000000247f1	movq	%rsp,%rbp
00000000000247f4	pushq	%r15
00000000000247f6	pushq	%r14
00000000000247f8	pushq	%rbx
00000000000247f9	pushq	%rax
00000000000247fa	movq	%rdi,%rbx
00000000000247fd	movq	0x00083c4c(%rip),%rdi
0000000000024804	leaq	0x00083ad5(%rip),%rsi
000000000002480b	call	*0x00083acf(%rip)
0000000000024811	movq	%rax,%r14
0000000000024814	movq	0x000810cd(%rip),%rsi
000000000002481b	movq	0x0005f8b6(%rip),%r15
0000000000024822	movq	%rbx,%rdi
0000000000024825	call	*%r15
0000000000024828	leaq	0x0008f449(%rip),%rdx
000000000002482f	movq	0x00080482(%rip),%rsi
0000000000024836	movq	%r14,%rdi
0000000000024839	movq	%rax,%rcx
000000000002483c	xorb	%al,%al
000000000002483e	call	*%r15
0000000000024841	leaq	0x0008a2e8(%rip),%rcx
0000000000024848	movq	(%rcx),%rdx
000000000002484b	movq	%rax,%rdi
000000000002484e	movq	%rbx,%rsi
0000000000024851	addq	$0x08,%rsp
0000000000024855	popq	%rbx
0000000000024856	popq	%r14
0000000000024858	popq	%r15
000000000002485a	popq	%rbp
000000000002485b	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MIUpdateVarObjListCommand didFinishWithResultList:]:
0000000000024860	pushq	%rbp
0000000000024861	movq	%rsp,%rbp
0000000000024864	pushq	%r15
0000000000024866	pushq	%r14
0000000000024868	pushq	%r12
000000000002486a	pushq	%rbx
000000000002486b	subq	$0x10,%rsp
000000000002486f	movq	%rdx,%r14
0000000000024872	movq	%rdi,%rbx
0000000000024875	movq	0x0008025c(%rip),%rsi
000000000002487c	leaq	0x0008b595(%rip),%rdx
0000000000024883	movq	%r14,%rdi
0000000000024886	call	*0x0005f84c(%rip)
000000000002488c	movq	%rax,%r15
000000000002488f	movq	0x0008a622(%rip),%rdx
0000000000024896	xorl	%edi,%edi
0000000000024898	movq	%rbx,%rsi
000000000002489b	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000248a0	movq	0x0008a621(%rip),%rax
00000000000248a7	movq	$0x00000000,(%rbx,%rax)
00000000000248af	movq	0x0008a60a(%rip),%rdx
00000000000248b6	xorl	%edi,%edi
00000000000248b8	movq	%rbx,%rsi
00000000000248bb	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000248c0	testq	%r15,%r15
00000000000248c3	je	0x000248f8
00000000000248c5	movq	0x00080214(%rip),%rsi
00000000000248cc	movq	0x0005f805(%rip),%r12
00000000000248d3	movq	%r15,%rdi
00000000000248d6	call	*%r12
00000000000248d9	movq	0x00080208(%rip),%rsi
00000000000248e0	movq	%rax,%rdi
00000000000248e3	call	*%r12
00000000000248e6	movq	0x0008a5cb(%rip),%rdx
00000000000248ed	movq	%rax,%rdi
00000000000248f0	movq	%rbx,%rsi
00000000000248f3	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000248f8	movq	%rbx,0xd0(%rbp)
00000000000248fc	movq	0x0008462d(%rip),%rax
0000000000024903	movq	%rax,0xd8(%rbp)
0000000000024907	movq	0x000818f2(%rip),%rsi
000000000002490e	leaq	0xd0(%rbp),%rdi
0000000000024912	movq	%r14,%rdx
0000000000024915	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000002491a	addq	$0x10,%rsp
000000000002491e	popq	%rbx
000000000002491f	popq	%r12
0000000000024921	popq	%r14
0000000000024923	popq	%r15
0000000000024925	popq	%rbp
0000000000024926	ret
-[PBXGDB_BaseDataValueSequence _gotResultVarObjUpdated:]:
0000000000024927	pushq	%rbp
0000000000024928	movq	%rsp,%rbp
000000000002492b	pushq	%r15
000000000002492d	pushq	%r14
000000000002492f	pushq	%r13
0000000000024931	pushq	%r12
0000000000024933	pushq	%rbx
0000000000024934	subq	$0x58,%rsp
0000000000024938	movq	%rdx,%rbx
000000000002493b	movq	%rdi,0xd0(%rbp)
000000000002493f	movq	%rsi,0xc8(%rbp)
0000000000024943	movq	0x00083b16(%rip),%rdi
000000000002494a	leaq	0x0008398f(%rip),%rsi
0000000000024951	call	*0x00083989(%rip)
0000000000024957	movq	0x00080112(%rip),%rsi
000000000002495e	movq	%rax,%rdi
0000000000024961	call	*0x0005f771(%rip)
0000000000024967	movq	%rax,%r12
000000000002496a	movq	%r12,0xc0(%rbp)
000000000002496e	testq	%rbx,%rbx
0000000000024971	jne	0x000249df
0000000000024973	movq	0x00083d4e(%rip),%rdi
000000000002497a	leaq	0x000839af(%rip),%rsi
0000000000024981	call	*0x000839a9(%rip)
0000000000024987	movq	%rax,%rdi
000000000002498a	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000002498f	leaq	0xd0(%rbp),%rdi
0000000000024993	leaq	0xc8(%rbp),%rsi
0000000000024997	leaq	0x000391bd(%rip),%rdx
000000000002499e	leaq	0x000390cf(%rip),%rcx
00000000000249a5	leaq	0x0008b00c(%rip),%r9
00000000000249ac	leaq	0x0003914d(%rip),%r8
00000000000249b3	movq	%rbx,%r10
00000000000249b6	leaq	0x00039147(%rip),%rbx
00000000000249bd	movq	%rbx,0x18(%rsp)
00000000000249c2	leaq	0x0008ae6f(%rip),%rbx
00000000000249c9	movq	%rbx,0x10(%rsp)
00000000000249ce	movq	%r10,%rbx
00000000000249d1	movq	%rax,0x08(%rsp)
00000000000249d6	movq	%r8,(%rsp)
00000000000249da	jmp	0x00024a87
00000000000249df	movq	0x00083ce2(%rip),%rdi
00000000000249e6	leaq	0x00083943(%rip),%rsi
00000000000249ed	call	*0x0008393d(%rip)
00000000000249f3	leaq	0x00083946(%rip),%rsi
00000000000249fa	movq	%rbx,%rdi
00000000000249fd	movq	%rax,%rdx
0000000000024a00	call	*0x0008393a(%rip)
0000000000024a06	testb	%al,%al
0000000000024a08	jne	0x00024a94
0000000000024a0e	movq	0x00083cb3(%rip),%rdi
0000000000024a15	leaq	0x00083914(%rip),%rsi
0000000000024a1c	call	*0x0008390e(%rip)
0000000000024a22	movq	%rax,%rdi
0000000000024a25	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000024a2a	movq	%rax,%r14
0000000000024a2d	movq	0x0008022c(%rip),%rsi
0000000000024a34	movq	%rbx,%rdi
0000000000024a37	call	*0x0005f69b(%rip)
0000000000024a3d	leaq	0x0008adf4(%rip),%r8
0000000000024a44	leaq	0x00039149(%rip),%r9
0000000000024a4b	leaq	0xd0(%rbp),%rdi
0000000000024a4f	leaq	0xc8(%rbp),%rsi
0000000000024a53	leaq	0x00039101(%rip),%rdx
0000000000024a5a	leaq	0x00039013(%rip),%rcx
0000000000024a61	movq	%r9,0x20(%rsp)
0000000000024a66	leaq	0x0008af6b(%rip),%r9
0000000000024a6d	movq	%r8,0x18(%rsp)
0000000000024a72	movq	%rax,0x10(%rsp)
0000000000024a77	leaq	0x00039082(%rip),%rax
0000000000024a7e	movq	%r14,0x08(%rsp)
0000000000024a83	movq	%rax,(%rsp)
0000000000024a87	movl	$0x00000166,%r8d
0000000000024a8d	xorb	%al,%al
0000000000024a8f	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000024a94	movq	0x00080da5(%rip),%rsi
0000000000024a9b	movq	%rbx,%rdi
0000000000024a9e	call	*0x0005f634(%rip)
0000000000024aa4	testb	%al,%al
0000000000024aa6	je	0x00024d94
0000000000024aac	movq	0x00080c1d(%rip),%r14
0000000000024ab3	movq	0x0005f61e(%rip),%r15
0000000000024aba	movq	0xd0(%rbp),%rdi
0000000000024abe	movq	0x00080aab(%rip),%rsi
0000000000024ac5	call	*%r15
0000000000024ac8	movq	%rax,%r13
0000000000024acb	movq	%rbx,%rdi
0000000000024ace	movq	0x00080b73(%rip),%rsi
0000000000024ad5	call	*%r15
0000000000024ad8	movq	%r13,%rdi
0000000000024adb	movq	0x00080db6(%rip),%rsi
0000000000024ae2	movq	%rax,%rdx
0000000000024ae5	call	*%r15
0000000000024ae8	movq	%rax,%r13
0000000000024aeb	testq	%r13,%r13
0000000000024aee	je	0x00024d6a
0000000000024af4	movq	%rbx,%r12
0000000000024af7	movq	0x00083b02(%rip),%rdi
0000000000024afe	leaq	0x0008382b(%rip),%rbx
0000000000024b05	movq	%rbx,%rsi
0000000000024b08	call	*0x00083822(%rip)
0000000000024b0e	movq	%r13,%rdi
0000000000024b11	leaq	0x00083828(%rip),%rsi
0000000000024b18	movq	%rax,%rdx
0000000000024b1b	call	*0x0008381f(%rip)
0000000000024b21	testb	%al,%al
0000000000024b23	jne	0x00024bab
0000000000024b29	movq	0x00083ad0(%rip),%rdi
0000000000024b30	movq	%rbx,%rsi
0000000000024b33	call	*0x000837f7(%rip)
0000000000024b39	movq	%rax,%rdi
0000000000024b3c	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000024b41	movq	%rax,%rbx
0000000000024b44	movq	%r13,%rdi
0000000000024b47	movq	0x00080112(%rip),%rsi
0000000000024b4e	call	*0x0005f584(%rip)
0000000000024b54	leaq	0x0003907f(%rip),%rcx
0000000000024b5b	movq	%rcx,0x20(%rsp)
0000000000024b60	leaq	0x0008acd1(%rip),%rcx
0000000000024b67	movq	%rcx,0x18(%rsp)
0000000000024b6c	movq	%rax,0x10(%rsp)
0000000000024b71	movq	%rbx,0x08(%rsp)
0000000000024b76	leaq	0x0003905a(%rip),%rax
0000000000024b7d	movq	%rax,(%rsp)
0000000000024b81	leaq	0xd0(%rbp),%rdi
0000000000024b85	leaq	0xc8(%rbp),%rsi
0000000000024b89	leaq	0x00038fcb(%rip),%rdx
0000000000024b90	leaq	0x00038edd(%rip),%rcx
0000000000024b97	movl	$0x0000016d,%r8d
0000000000024b9d	leaq	0x0008ae34(%rip),%r9
0000000000024ba4	xorb	%al,%al
0000000000024ba6	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000024bab	movq	%r12,%rbx
0000000000024bae	movq	%rbx,%rdi
0000000000024bb1	movq	0x00080c38(%rip),%rsi
0000000000024bb8	call	*0x0005f51a(%rip)
0000000000024bbe	testb	%al,%al
0000000000024bc0	movq	0xc0(%rbp),%r12
0000000000024bc4	je	0x00024d84
0000000000024bca	movq	%rbx,%rdi
0000000000024bcd	movq	0x00080c24(%rip),%rsi
0000000000024bd4	call	*0x0005f4fe(%rip)
0000000000024bda	testb	%al,%al
0000000000024bdc	je	0x00024d84
0000000000024be2	movq	%r13,%rdi
0000000000024be5	movq	%r14,%rsi
0000000000024be8	movl	$0x00000001,%edx
0000000000024bed	call	*%r15
0000000000024bf0	movq	%rbx,%rdi
0000000000024bf3	movq	0x00080ca6(%rip),%rsi
0000000000024bfa	call	*%r15
0000000000024bfd	testb	%al,%al
0000000000024bff	je	0x00024d50
0000000000024c05	movq	%r13,%rdi
0000000000024c08	movq	0x00080c99(%rip),%rsi
0000000000024c0f	call	*%r15
0000000000024c12	movq	%rax,0xb8(%rbp)
0000000000024c16	movq	%rbx,%rdi
0000000000024c19	movq	0x00080c90(%rip),%rsi
0000000000024c20	call	*%r15
0000000000024c23	movq	%rax,%r12
0000000000024c26	movq	%rbx,%r14
0000000000024c29	movq	0xd0(%rbp),%rax
0000000000024c2d	movq	%rax,0xb0(%rbp)
0000000000024c31	movq	%r14,%rdi
0000000000024c34	movq	0x00080c7d(%rip),%rsi
0000000000024c3b	call	*%r15
0000000000024c3e	movq	%rax,%rbx
0000000000024c41	movq	%r14,%rdi
0000000000024c44	movq	0x00080c75(%rip),%rsi
0000000000024c4b	call	*%r15
0000000000024c4e	movq	0xb0(%rbp),%rdi
0000000000024c52	movq	0x00080b8f(%rip),%rsi
0000000000024c59	movq	%r13,%rdx
0000000000024c5c	movq	%rbx,%rcx
0000000000024c5f	movq	%r12,%r8
0000000000024c62	movl	%eax,%r9d
0000000000024c65	call	*%r15
0000000000024c68	testq	%r12,%r12
0000000000024c6b	je	0x00024ca1
0000000000024c6d	movq	%r12,%rdi
0000000000024c70	leaq	0x000836e9(%rip),%rsi
0000000000024c77	leaq	0x0008acba(%rip),%rdx
0000000000024c7e	call	*0x000836dc(%rip)
0000000000024c84	testb	%al,%al
0000000000024c86	je	0x00024ca1
0000000000024c88	cmpq	$0x00,0xb8(%rbp)
0000000000024c8d	je	0x00024ca1
0000000000024c8f	movq	%r13,%rdi
0000000000024c92	movq	0x00080af7(%rip),%rsi
0000000000024c99	xorl	%edx,%edx
0000000000024c9b	call	*0x0005f437(%rip)
0000000000024ca1	movq	%r13,%rdi
0000000000024ca4	movq	0x00080765(%rip),%rsi
0000000000024cab	call	*0x0005f427(%rip)
0000000000024cb1	testq	%rax,%rax
0000000000024cb4	je	0x00024cfe
0000000000024cb6	movq	%r13,%rdi
0000000000024cb9	movq	0x00080570(%rip),%rsi
0000000000024cc0	call	*%r15
0000000000024cc3	movq	%r13,%rdi
0000000000024cc6	movq	0x00080863(%rip),%rsi
0000000000024ccd	call	*%r15
0000000000024cd0	movq	%r13,%rdi
0000000000024cd3	movq	0x00080bee(%rip),%rsi
0000000000024cda	xorl	%edx,%edx
0000000000024cdc	call	*%r15
0000000000024cdf	movq	%r13,%rdi
0000000000024ce2	movq	0x000809ff(%rip),%rsi
0000000000024ce9	movl	$0x00000001,%edx
0000000000024cee	call	*%r15
0000000000024cf1	movq	%r13,%rdi
0000000000024cf4	movq	0x000809f5(%rip),%rsi
0000000000024cfb	call	*%r15
0000000000024cfe	movq	%r14,%rbx
0000000000024d01	movq	%rbx,%rdi
0000000000024d04	movq	0x00080bc5(%rip),%rsi
0000000000024d0b	call	*0x0005f3c7(%rip)
0000000000024d11	testq	%rax,%rax
0000000000024d14	movq	0xc0(%rbp),%r12
0000000000024d18	jle	0x00024d50
0000000000024d1a	movq	%r13,%rdi
0000000000024d1d	movq	0x00080aec(%rip),%rsi
0000000000024d24	movl	$0x00000001,%edx
0000000000024d29	call	*%r15
0000000000024d2c	movq	%r13,%rdi
0000000000024d2f	movq	0x0008085a(%rip),%rsi
0000000000024d36	call	*%r15
0000000000024d39	cmpl	$0x02,%eax
0000000000024d3c	jne	0x00024d50
0000000000024d3e	movq	%r13,%rdi
0000000000024d41	movq	0x00080850(%rip),%rsi
0000000000024d48	xorl	%edx,%edx
0000000000024d4a	call	*0x0005f388(%rip)
0000000000024d50	movq	%r12,%rdi
0000000000024d53	leaq	0x000835a6(%rip),%rsi
0000000000024d5a	movq	%r13,%rdx
0000000000024d5d	call	*0x0008359d(%rip)
0000000000024d63	movq	0x00080966(%rip),%r14
0000000000024d6a	movq	%rbx,%rdi
0000000000024d6d	movq	0x00080acc(%rip),%rsi
0000000000024d74	call	*0x0005f35e(%rip)
0000000000024d7a	testb	%al,%al
0000000000024d7c	jne	0x00024aba
0000000000024d82	jmp	0x00024d94
0000000000024d84	movq	%r13,%rdi
0000000000024d87	movq	%r14,%rsi
0000000000024d8a	xorl	%edx,%edx
0000000000024d8c	call	*0x0005f346(%rip)
0000000000024d92	jmp	0x00024d6a
0000000000024d94	leaq	0x00083575(%rip),%rsi
0000000000024d9b	movq	%r12,%rdi
0000000000024d9e	call	*0x0008356c(%rip)
0000000000024da4	movq	0xd0(%rbp),%rdi
0000000000024da8	testq	%rax,%rax
0000000000024dab	je	0x00024dbf
0000000000024dad	movq	0x00080974(%rip),%rsi
0000000000024db4	movq	%r12,%rdx
0000000000024db7	call	*0x0005f31b(%rip)
0000000000024dbd	jmp	0x00024dcc
0000000000024dbf	movq	0x0007fd72(%rip),%rsi
0000000000024dc6	call	*0x0005f30c(%rip)
0000000000024dcc	addq	$0x58,%rsp
0000000000024dd0	popq	%rbx
0000000000024dd1	popq	%r12
0000000000024dd3	popq	%r13
0000000000024dd5	popq	%r14
0000000000024dd7	popq	%r15
0000000000024dd9	popq	%rbp
0000000000024dda	ret
-[PBXGDB_UpdateDataValueSequence didFinish]:
0000000000024ddb	pushq	%rbp
0000000000024ddc	movq	%rsp,%rbp
0000000000024ddf	pushq	%r14
0000000000024de1	pushq	%rbx
0000000000024de2	subq	$0x10,%rsp
0000000000024de6	movq	%rdi,%rbx
0000000000024de9	movq	0x00080818(%rip),%rsi
0000000000024df0	movq	0x0005f2e1(%rip),%r14
0000000000024df7	call	*%r14
0000000000024dfa	movq	0x000808ef(%rip),%rsi
0000000000024e01	movq	%rax,%rdi
0000000000024e04	call	*%r14
0000000000024e07	movq	%rbx,0xe0(%rbp)
0000000000024e0b	leaq	0xe0(%rbp),%rdi
0000000000024e0f	movq	0x00083f8a(%rip),%rax
0000000000024e16	movq	%rax,0xe8(%rbp)
0000000000024e1a	movq	0x0007fd17(%rip),%rsi
0000000000024e21	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000024e26	addq	$0x10,%rsp
0000000000024e2a	popq	%rbx
0000000000024e2b	popq	%r14
0000000000024e2d	popq	%rbp
0000000000024e2e	ret
-[PBXGDB_GetPathExpressionSequence execute]:
0000000000024e2f	pushq	%rbp
0000000000024e30	movq	%rsp,%rbp
0000000000024e33	pushq	%rbx
0000000000024e34	pushq	%rax
0000000000024e35	movq	%rdi,%rbx
0000000000024e38	movq	0x00080fa9(%rip),%rsi
0000000000024e3f	call	*0x0005f293(%rip)
0000000000024e45	movq	0x0008103c(%rip),%rsi
0000000000024e4c	movq	%rbx,%rdi
0000000000024e4f	movq	%rax,%rdx
0000000000024e52	movq	0x0005f27f(%rip),%rax
0000000000024e59	addq	$0x08,%rsp
0000000000024e5d	popq	%rbx
0000000000024e5e	popq	%rbp
0000000000024e5f	jmp	*%rax
-[PBXGDB_BaseDataValueSequence varObjDataValue]:
0000000000024e61	pushq	%rbp
0000000000024e62	movq	%rsp,%rbp
0000000000024e65	pushq	%rbx
0000000000024e66	pushq	%rax
0000000000024e67	movq	0x0008079a(%rip),%rsi
0000000000024e6e	call	*0x0005f264(%rip)
0000000000024e74	movq	%rax,%rbx
0000000000024e77	movq	0x00083782(%rip),%rdi
0000000000024e7e	leaq	0x000834ab(%rip),%rsi
0000000000024e85	call	*0x000834a5(%rip)
0000000000024e8b	leaq	0x000834ae(%rip),%rsi
0000000000024e92	movq	%rbx,%rdi
0000000000024e95	movq	%rax,%rdx
0000000000024e98	call	*0x000834a2(%rip)
0000000000024e9e	testb	%al,%al
0000000000024ea0	jne	0x00024ea4
0000000000024ea2	xorl	%ebx,%ebx
0000000000024ea4	movq	%rbx,%rax
0000000000024ea7	addq	$0x08,%rsp
0000000000024eab	popq	%rbx
0000000000024eac	popq	%rbp
0000000000024ead	ret
-[PBXGDB_BaseDataValueSequence subSequenceGetPathExpressionForDataValue:]:
0000000000024eae	pushq	%rbp
0000000000024eaf	movq	%rsp,%rbp
0000000000024eb2	pushq	%r15
0000000000024eb4	pushq	%r14
0000000000024eb6	pushq	%rbx
0000000000024eb7	pushq	%rax
0000000000024eb8	movq	%rdx,%r15
0000000000024ebb	movq	%rdi,%r14
0000000000024ebe	movq	0x0007fbbb(%rip),%rsi
0000000000024ec5	movq	0x00083804(%rip),%rdi
0000000000024ecc	call	*0x0005f206(%rip)
0000000000024ed2	movq	%rax,%rbx
0000000000024ed5	movq	0x0008081c(%rip),%rsi
0000000000024edc	movq	%r15,%rdi
0000000000024edf	call	*0x0005f1f3(%rip)
0000000000024ee5	movq	0x0008076c(%rip),%rsi
0000000000024eec	movq	%rbx,%rdi
0000000000024eef	movq	%rax,%rdx
0000000000024ef2	call	*0x0005f1e0(%rip)
0000000000024ef8	movq	0x0007fb89(%rip),%rsi
0000000000024eff	movq	%rbx,%rdi
0000000000024f02	movq	%r14,%rdx
0000000000024f05	call	*0x0005f1cd(%rip)
0000000000024f0b	movq	0x000806ee(%rip),%rsi
0000000000024f12	movq	%rbx,%rdi
0000000000024f15	movq	%r15,%rdx
0000000000024f18	call	*0x0005f1ba(%rip)
0000000000024f1e	movq	0x0007fb73(%rip),%rsi
0000000000024f25	movq	0x000809e4(%rip),%rdx
0000000000024f2c	movq	%rbx,%rdi
0000000000024f2f	call	*0x0005f1a3(%rip)
0000000000024f35	movq	0x00080704(%rip),%rsi
0000000000024f3c	movq	%r14,%rdi
0000000000024f3f	movq	%rbx,%rdx
0000000000024f42	movq	0x0005f18f(%rip),%rax
0000000000024f49	addq	$0x08,%rsp
0000000000024f4d	popq	%rbx
0000000000024f4e	popq	%r14
0000000000024f50	popq	%r15
0000000000024f52	popq	%rbp
0000000000024f53	jmp	*%rax
-[PBXGDB_VarObjDataValue2 varObjName]:
0000000000024f55	pushq	%rbp
0000000000024f56	movq	%rsp,%rbp
0000000000024f59	movq	0x0008a1d0(%rip),%rax
0000000000024f60	movq	(%rdi,%rax),%rax
0000000000024f64	popq	%rbp
0000000000024f65	ret
-[PBXGDB_MIGetPathExpressionOfVarObjCommand setVarObjName:]:
0000000000024f66	pushq	%rbp
0000000000024f67	movq	%rsp,%rbp
0000000000024f6a	pushq	%r14
0000000000024f6c	pushq	%rbx
0000000000024f6d	movq	%rdx,%rbx
0000000000024f70	movq	%rdi,%r14
0000000000024f73	movq	0x000834d6(%rip),%rdi
0000000000024f7a	leaq	0x0008335f(%rip),%rsi
0000000000024f81	call	*0x00083359(%rip)
0000000000024f87	movq	0x0007fd2a(%rip),%rsi
0000000000024f8e	leaq	0x0008ec03(%rip),%rdx
0000000000024f95	movq	%rax,%rdi
0000000000024f98	movq	%rbx,%rcx
0000000000024f9b	xorb	%al,%al
0000000000024f9d	call	*0x0005f135(%rip)
0000000000024fa3	leaq	0x00089b86(%rip),%rcx
0000000000024faa	movq	(%rcx),%rdx
0000000000024fad	movq	%rax,%rdi
0000000000024fb0	movq	%r14,%rsi
0000000000024fb3	popq	%rbx
0000000000024fb4	popq	%r14
0000000000024fb6	popq	%rbp
0000000000024fb7	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MIBaseVarObjCommand setDataValue:]:
0000000000024fbc	pushq	%rbp
0000000000024fbd	movq	%rsp,%rbp
0000000000024fc0	movq	%rdx,%rax
0000000000024fc3	movq	%rdi,%rcx
0000000000024fc6	movq	0x00089ee3(%rip),%rdx
0000000000024fcd	movq	%rax,%rdi
0000000000024fd0	movq	%rcx,%rsi
0000000000024fd3	popq	%rbp
0000000000024fd4	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MIGetPathExpressionOfVarObjCommand didFinishWithResultList:]:
0000000000024fd9	pushq	%rbp
0000000000024fda	movq	%rsp,%rbp
0000000000024fdd	pushq	%r14
0000000000024fdf	pushq	%rbx
0000000000024fe0	subq	$0x10,%rsp
0000000000024fe4	movq	%rdx,%r14
0000000000024fe7	movq	%rdi,%rbx
0000000000024fea	movq	0x0007fae7(%rip),%rsi
0000000000024ff1	leaq	0x0008ebc0(%rip),%rdx
0000000000024ff8	movq	%r14,%rdi
0000000000024ffb	call	*0x0005f0d7(%rip)
0000000000025001	testq	%rax,%rax
0000000000025004	je	0x00025028
0000000000025006	movq	0x0007fafb(%rip),%rsi
000000000002500d	movq	%rax,%rdi
0000000000025010	call	*0x0005f0c2(%rip)
0000000000025016	movq	0x00089ec3(%rip),%rdx
000000000002501d	movq	%rax,%rdi
0000000000025020	movq	%rbx,%rsi
0000000000025023	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000025028	movq	%rbx,0xe0(%rbp)
000000000002502c	movq	0x00083ef5(%rip),%rax
0000000000025033	movq	%rax,0xe8(%rbp)
0000000000025037	movq	0x000811c2(%rip),%rsi
000000000002503e	leaq	0xe0(%rbp),%rdi
0000000000025042	movq	%r14,%rdx
0000000000025045	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000002504a	addq	$0x10,%rsp
000000000002504e	popq	%rbx
000000000002504f	popq	%r14
0000000000025051	popq	%rbp
0000000000025052	ret
-[PBXGDB_BaseDataValueSequence _gotPathExpression:]:
0000000000025053	pushq	%rbp
0000000000025054	movq	%rsp,%rbp
0000000000025057	pushq	%r15
0000000000025059	pushq	%r14
000000000002505b	pushq	%r13
000000000002505d	pushq	%r12
000000000002505f	pushq	%rbx
0000000000025060	subq	$0x48,%rsp
0000000000025064	movq	%rdx,%r14
0000000000025067	movq	%rdi,0xd0(%rbp)
000000000002506b	movq	%rsi,0xc8(%rbp)
000000000002506f	testq	%r14,%r14
0000000000025072	jne	0x000250da
0000000000025074	movq	0x00083655(%rip),%rdi
000000000002507b	leaq	0x000832ae(%rip),%rsi
0000000000025082	call	*0x000832a8(%rip)
0000000000025088	movq	%rax,%rdi
000000000002508b	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000025090	leaq	0xd0(%rbp),%rdi
0000000000025094	leaq	0xc8(%rbp),%rsi
0000000000025098	leaq	0x00038b74(%rip),%rdx
000000000002509f	leaq	0x000389ce(%rip),%rcx
00000000000250a6	leaq	0x0008a90b(%rip),%r9
00000000000250ad	leaq	0x00038a4c(%rip),%r8
00000000000250b4	leaq	0x00038a49(%rip),%rbx
00000000000250bb	movq	%rbx,0x18(%rsp)
00000000000250c0	leaq	0x0008a771(%rip),%rbx
00000000000250c7	movq	%rbx,0x10(%rsp)
00000000000250cc	movq	%rax,0x08(%rsp)
00000000000250d1	movq	%r8,(%rsp)
00000000000250d5	jmp	0x00025182
00000000000250da	movq	0x000835ef(%rip),%rdi
00000000000250e1	leaq	0x00083248(%rip),%rsi
00000000000250e8	call	*0x00083242(%rip)
00000000000250ee	leaq	0x0008324b(%rip),%rsi
00000000000250f5	movq	%r14,%rdi
00000000000250f8	movq	%rax,%rdx
00000000000250fb	call	*0x0008323f(%rip)
0000000000025101	testb	%al,%al
0000000000025103	jne	0x0002518f
0000000000025109	movq	0x000835c0(%rip),%rdi
0000000000025110	leaq	0x00083219(%rip),%rsi
0000000000025117	call	*0x00083213(%rip)
000000000002511d	movq	%rax,%rdi
0000000000025120	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000025125	movq	%rax,%rbx
0000000000025128	movq	0x0007fb31(%rip),%rsi
000000000002512f	movq	%r14,%rdi
0000000000025132	call	*0x0005efa0(%rip)
0000000000025138	leaq	0x0008a6f9(%rip),%r8
000000000002513f	leaq	0x00038b01(%rip),%r9
0000000000025146	leaq	0xd0(%rbp),%rdi
000000000002514a	leaq	0xc8(%rbp),%rsi
000000000002514e	leaq	0x00038abe(%rip),%rdx
0000000000025155	leaq	0x00038918(%rip),%rcx
000000000002515c	movq	%r9,0x20(%rsp)
0000000000025161	leaq	0x0008a870(%rip),%r9
0000000000025168	movq	%r8,0x18(%rsp)
000000000002516d	movq	%rax,0x10(%rsp)
0000000000025172	leaq	0x00038987(%rip),%rax
0000000000025179	movq	%rbx,0x08(%rsp)
000000000002517e	movq	%rax,(%rsp)
0000000000025182	movl	$0x000001ca,%r8d
0000000000025188	xorb	%al,%al
000000000002518a	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000002518f	movq	%r14,0xc0(%rbp)
0000000000025193	movq	0x0008046e(%rip),%rsi
000000000002519a	movq	0x0005ef37(%rip),%rbx
00000000000251a1	movq	%r14,%rdi
00000000000251a4	call	*%rbx
00000000000251a6	movq	%rax,%r15
00000000000251a9	movq	0x000802d8(%rip),%rsi
00000000000251b0	movq	%r14,%rdi
00000000000251b3	call	*%rbx
00000000000251b5	movq	%rax,%r12
00000000000251b8	testq	%r12,%r12
00000000000251bb	je	0x000252a0
00000000000251c1	movq	0x00080110(%rip),%rsi
00000000000251c8	leaq	0x0008b989(%rip),%rdx
00000000000251cf	movq	%r12,%rdi
00000000000251d2	call	*0x0005ef00(%rip)
00000000000251d8	movq	$0x7fffffffffffffff,%rcx
00000000000251e2	cmpq	%rcx,%rax
00000000000251e5	je	0x00025277
00000000000251eb	movq	0x0008032e(%rip),%rsi
00000000000251f2	movq	%r15,%rdi
00000000000251f5	call	*0x0005eedd(%rip)
00000000000251fb	movq	%rax,%rbx
00000000000251fe	movq	0x000833fb(%rip),%rdi
0000000000025205	leaq	0x00083124(%rip),%rsi
000000000002520c	call	*0x0008311e(%rip)
0000000000025212	leaq	0x00083127(%rip),%rsi
0000000000025219	movq	%rbx,%rdi
000000000002521c	movq	%rax,%rdx
000000000002521f	call	*0x0008311b(%rip)
0000000000025225	cmpb	$0x01,%al
0000000000025227	jne	0x00025277
0000000000025229	movq	0x00080240(%rip),%rsi
0000000000025230	movq	0x0005eea1(%rip),%r14
0000000000025237	movq	%rbx,%rdi
000000000002523a	call	*%r14
000000000002523d	movq	%rax,%r13
0000000000025240	movq	0x000804b1(%rip),%rsi
0000000000025247	movq	%rbx,%rdi
000000000002524a	call	*%r14
000000000002524d	movq	%rax,%rbx
0000000000025250	movq	0x000804a1(%rip),%rsi
0000000000025257	movq	%r15,%rdi
000000000002525a	call	*%r14
000000000002525d	movq	0x0008069c(%rip),%rsi
0000000000025264	movq	%rax,%rdi
0000000000025267	movq	%rbx,%rdx
000000000002526a	movq	%r13,%rcx
000000000002526d	call	*%r14
0000000000025270	testq	%rax,%rax
0000000000025273	cmovneq	%rax,%r12
0000000000025277	movq	0x00080442(%rip),%rsi
000000000002527e	movq	0x0005ee53(%rip),%rbx
0000000000025285	movq	%r15,%rdi
0000000000025288	movq	%r12,%rdx
000000000002528b	call	*%rbx
000000000002528d	movq	0x00080434(%rip),%rsi
0000000000025294	movq	%r15,%rdi
0000000000025297	movl	$0x00000002,%edx
000000000002529c	call	*%rbx
000000000002529e	jmp	0x000252b2
00000000000252a0	movq	0x00080421(%rip),%rsi
00000000000252a7	movq	%r15,%rdi
00000000000252aa	xorl	%edx,%edx
00000000000252ac	call	*0x0005ee26(%rip)
00000000000252b2	movq	0x00080347(%rip),%rsi
00000000000252b9	movq	0x0005ee18(%rip),%rbx
00000000000252c0	movq	0xc0(%rbp),%rdi
00000000000252c4	xorl	%edx,%edx
00000000000252c6	call	*%rbx
00000000000252c8	movq	0x00080639(%rip),%rsi
00000000000252cf	movq	0xd0(%rbp),%rdi
00000000000252d3	call	*%rbx
00000000000252d5	addq	$0x48,%rsp
00000000000252d9	popq	%rbx
00000000000252da	popq	%r12
00000000000252dc	popq	%r13
00000000000252de	popq	%r14
00000000000252e0	popq	%r15
00000000000252e2	popq	%rbp
00000000000252e3	ret
-[PBXGDB_MIBaseVarObjCommand dataValue]:
00000000000252e4	pushq	%rbp
00000000000252e5	movq	%rsp,%rbp
00000000000252e8	movq	0x00089bc1(%rip),%rax
00000000000252ef	movq	(%rdi,%rax),%rax
00000000000252f3	popq	%rbp
00000000000252f4	ret
-[PBXGDB_MIGetPathExpressionOfVarObjCommand expressionString]:
00000000000252f5	pushq	%rbp
00000000000252f6	movq	%rsp,%rbp
00000000000252f9	movq	0x00089be0(%rip),%rax
0000000000025300	movq	(%rdi,%rax),%rax
0000000000025304	popq	%rbp
0000000000025305	ret
-[PBXLSDataValue setPathExpressionString:]:
0000000000025306	pushq	%rbp
0000000000025307	movq	%rsp,%rbp
000000000002530a	movq	%rdx,%rax
000000000002530d	movq	%rdi,%rcx
0000000000025310	movq	0x00089ef1(%rip),%rdx
0000000000025317	cmpq	%rax,(%rcx,%rdx)
000000000002531b	jne	0x0002531f
000000000002531d	popq	%rbp
000000000002531e	ret
000000000002531f	addq	%rcx,%rdx
0000000000025322	subq	%rcx,%rdx
0000000000025325	movq	%rax,%rdi
0000000000025328	movq	%rcx,%rsi
000000000002532b	popq	%rbp
000000000002532c	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000025331	nop
-[DBGGDBDataValue blockStartAddress]:
0000000000025332	pushq	%rbp
0000000000025333	movq	%rsp,%rbp
0000000000025336	movq	0x00082c9b(%rip),%rsi
000000000002533d	call	*0x0005ed95(%rip)
0000000000025343	movq	0x0008012e(%rip),%rsi
000000000002534a	movq	%rax,%rdi
000000000002534d	movq	0x0005ed84(%rip),%rax
0000000000025354	popq	%rbp
0000000000025355	jmp	*%rax
0000000000025357	nop
0000000000025358	nop
0000000000025359	nop
000000000002535a	nop
000000000002535b	nop
000000000002535c	nop
000000000002535d	nop
000000000002535e	nop
-[DBGGDBStackFrame requestDataValueForExpression:atBlockStartAddress:onQueue:withResultBlock:]:
000000000002535f	pushq	%rbp
0000000000025360	movq	%rsp,%rbp
0000000000025363	subq	$0x10,%rsp
0000000000025367	movq	%r8,%r10
000000000002536a	movq	%rcx,%rax
000000000002536d	movq	0x00082e24(%rip),%rsi
0000000000025374	movq	%r9,(%rsp)
0000000000025378	xorl	%ecx,%ecx
000000000002537a	movq	%rax,%r8
000000000002537d	movq	%r10,%r9
0000000000025380	call	*0x0005ed52(%rip)
0000000000025386	addq	$0x10,%rsp
000000000002538a	popq	%rbp
000000000002538b	ret
000000000002538c	nop
000000000002538d	nop
000000000002538e	nop
000000000002538f	nop
0000000000025390	nop
0000000000025391	nop
0000000000025392	nop
0000000000025393	nop
0000000000025394	nop
0000000000025395	nop
0000000000025396	nop
-[DBGGDBStackFrame _requestDataValueForExpression:atLocation:orBlockStartAddress:onQueue:withResultBlock:]:
0000000000025397	pushq	%rbp
0000000000025398	movq	%rsp,%rbp
000000000002539b	pushq	%r15
000000000002539d	pushq	%r14
000000000002539f	pushq	%r13
00000000000253a1	pushq	%r12
00000000000253a3	pushq	%rbx
00000000000253a4	subq	$0x000000d8,%rsp
00000000000253ab	movq	%r9,0xffffff10(%rbp)
00000000000253b2	movq	%r8,%r13
00000000000253b5	movq	%rcx,0xffffff30(%rbp)
00000000000253bc	movq	%rdx,%r15
00000000000253bf	movq	%rdi,%rbx
00000000000253c2	movq	0x0007fb17(%rip),%rsi
00000000000253c9	movq	0x0005ed08(%rip),%r14
00000000000253d0	call	*%r14
00000000000253d3	movq	0x000801ee(%rip),%rsi
00000000000253da	movq	%rax,%rdi
00000000000253dd	call	*%r14
00000000000253e0	movq	%rax,%r14
00000000000253e3	leaq	0x00082f66(%rip),%rsi
00000000000253ea	movq	0x0008a29f(%rip),%rax
00000000000253f1	movq	(%rbx,%rax),%rdi
00000000000253f5	movq	%r15,%rdx
00000000000253f8	call	*0x00082f52(%rip)
00000000000253fe	movq	%rax,%r12
0000000000025401	testq	%r12,%r12
0000000000025404	jne	0x000255f8
000000000002540a	movq	0x00082d4f(%rip),%rsi
0000000000025411	movq	%r14,%rdi
0000000000025414	movq	%r14,0xffffff28(%rbp)
000000000002541b	call	*0x0005ecb7(%rip)
0000000000025421	movq	%rax,%r12
0000000000025424	movq	0x0008a265(%rip),%rax
000000000002542b	movq	(%rbx,%rax),%rdi
000000000002542f	testq	%rdi,%rdi
0000000000025432	jne	0x00025465
0000000000025434	movq	0x00082d2d(%rip),%rsi
000000000002543b	movq	0x0008388e(%rip),%rdi
0000000000025442	call	*0x0005ec90(%rip)
0000000000025448	movq	0x0008a241(%rip),%rdx
000000000002544f	movq	%rax,%rdi
0000000000025452	movq	%rbx,%rsi
0000000000025455	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000002545a	movq	0x0008a22f(%rip),%rax
0000000000025461	movq	(%rbx,%rax),%rdi
0000000000025465	movq	%r13,0xffffff20(%rbp)
000000000002546c	movq	0x0007f8bd(%rip),%rsi
0000000000025473	movq	0x0005ec5e(%rip),%r14
000000000002547a	movq	%r12,%rdx
000000000002547d	movq	%r15,%rcx
0000000000025480	call	*%r14
0000000000025483	movq	0x00080156(%rip),%rsi
000000000002548a	movq	%r12,%rdi
000000000002548d	movl	$0x00000001,%edx
0000000000025492	call	*%r14
0000000000025495	movq	0x0007fa44(%rip),%rsi
000000000002549c	movq	%rbx,%rdi
000000000002549f	call	*%r14
00000000000254a2	movq	0x0007fe17(%rip),%rsi
00000000000254a9	movq	%r12,%rdi
00000000000254ac	movq	%rax,%rdx
00000000000254af	call	*%r14
00000000000254b2	movq	%rbx,%rax
00000000000254b5	movq	0xffffff30(%rbp),%rbx
00000000000254bc	testq	%rbx,%rbx
00000000000254bf	je	0x000255b1
00000000000254c5	movq	%r15,0xffffff18(%rbp)
00000000000254cc	movq	%rax,0xffffff38(%rbp)
00000000000254d3	movq	0x00081316(%rip),%rsi
00000000000254da	movq	0x0005ebf7(%rip),%r14
00000000000254e1	movq	%rbx,%rdi
00000000000254e4	call	*%r14
00000000000254e7	movq	0x000828a2(%rip),%rsi
00000000000254ee	movq	%rax,%rdi
00000000000254f1	call	*%r14
00000000000254f4	movq	%rax,%r13
00000000000254f7	movq	0x00082c72(%rip),%rsi
00000000000254fe	movq	%rbx,%rdi
0000000000025501	call	*%r14
0000000000025504	movq	$0x7fffffffffffffff,%rcx
000000000002550e	cmpq	%rcx,%rax
0000000000025511	je	0x00025576
0000000000025513	movq	0x00082c56(%rip),%rsi
000000000002551a	movq	%r12,0xffffff08(%rbp)
0000000000025521	movq	0x0005ebb0(%rip),%r12
0000000000025528	movq	%rbx,%rdi
000000000002552b	call	*%r12
000000000002552e	movq	%rax,%r14
0000000000025531	movq	0x0007fe08(%rip),%rsi
0000000000025538	movq	0xffffff38(%rbp),%rdi
000000000002553f	call	*%r12
0000000000025542	movq	0x0007fd97(%rip),%rsi
0000000000025549	movq	%rax,%rdi
000000000002554c	call	*%r12
000000000002554f	leaq	0x01(%r14),%rcx
0000000000025553	leaq	0x0009129e(%rip),%rdx
000000000002555a	movq	0x00082c17(%rip),%rsi
0000000000025561	movq	%r13,%rdi
0000000000025564	movq	%rax,%r8
0000000000025567	xorb	%al,%al
0000000000025569	call	*%r12
000000000002556c	movq	0xffffff08(%rbp),%r12
0000000000025573	movq	%rax,%r13
0000000000025576	movq	0xffffff18(%rbp),%r15
000000000002557d	movq	0xffffff28(%rbp),%rdi
0000000000025584	movq	%rbx,0xffffff30(%rbp)
000000000002558b	movq	0x00082bee(%rip),%rsi
0000000000025592	movq	%r15,%rdx
0000000000025595	movq	%r12,%rcx
0000000000025598	movq	%r13,%r8
000000000002559b	call	*0x0005eb37(%rip)
00000000000255a1	movq	0xffffff20(%rbp),%r13
00000000000255a8	movq	0xffffff38(%rbp),%rbx
00000000000255af	jmp	0x000255f8
00000000000255b1	movq	%rax,%rbx
00000000000255b4	movq	0xffffff20(%rbp),%r13
00000000000255bb	testq	%r13,%r13
00000000000255be	movq	0xffffff28(%rbp),%rdi
00000000000255c5	je	0x000255df
00000000000255c7	movq	0x00082bba(%rip),%rsi
00000000000255ce	movq	%r15,%rdx
00000000000255d1	movq	%r12,%rcx
00000000000255d4	movq	%r13,%r8
00000000000255d7	call	*0x0005eafb(%rip)
00000000000255dd	jmp	0x000255f8
00000000000255df	movq	0x00082baa(%rip),%rsi
00000000000255e6	movq	%r15,%rdx
00000000000255e9	movq	%r12,%rcx
00000000000255ec	movl	$0x00000001,%r8d
00000000000255f2	call	*0x0005eae0(%rip)
00000000000255f8	movq	%rbx,0xffffff38(%rbp)
00000000000255ff	movq	0x10(%rbp),%rdi
0000000000025603	movq	0x0007f46e(%rip),%rsi
000000000002560a	call	*0x0005eac8(%rip)
0000000000025610	movq	%rbx,%rdi
0000000000025613	movq	%r15,%rbx
0000000000025616	movq	%rax,%r15
0000000000025619	movq	0x0005ea70(%rip),%rax
0000000000025620	movq	%rax,0x88(%rbp)
0000000000025624	movl	$0x42000000,0x90(%rbp)
000000000002562b	movl	$0x00000000,0x94(%rbp)
0000000000025632	leaq	0x000273ba(%rip),%rax
0000000000025639	movq	%rax,0x98(%rbp)
000000000002563d	leaq	0xa8(%rbp),%rsi
0000000000025641	leaq	0x00091d78(%rip),%rax
0000000000025648	movq	%rax,0xa0(%rbp)
000000000002564c	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
0000000000025651	leaq	0xb0(%rbp),%rsi
0000000000025655	movq	%rbx,%rdi
0000000000025658	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
000000000002565d	leaq	0xb8(%rbp),%rsi
0000000000025661	movq	0xffffff30(%rbp),%rdi
0000000000025668	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
000000000002566d	leaq	0xc0(%rbp),%rsi
0000000000025671	movq	%r13,%rdi
0000000000025674	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
0000000000025679	movq	0xffffff10(%rbp),%r13
0000000000025680	testq	%r13,%r13
0000000000025683	cmoveq	0x0005ea1d(%rip),%r13
000000000002568b	leaq	0xd0(%rbp),%rsi
000000000002568f	movq	%r13,0xc8(%rbp)
0000000000025693	movq	%r15,%rdi
0000000000025696	movq	%r15,%r14
0000000000025699	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
000000000002569e	leaq	0x88(%rbp),%rdi
00000000000256a2	movq	0x0007f3cf(%rip),%rsi
00000000000256a9	movq	0x0005ea28(%rip),%r15
00000000000256b0	call	*%r15
00000000000256b3	movq	%rax,0xffffff30(%rbp)
00000000000256ba	leaq	0xffffff60(%rbp),%rsi
00000000000256c1	leaq	0x00091d58(%rip),%rax
00000000000256c8	leaq	0x00027426(%rip),%rcx
00000000000256cf	movq	0x0005e9ba(%rip),%rdx
00000000000256d6	movq	%rdx,0xffffff40(%rbp)
00000000000256dd	movl	$0x42000000,0xffffff48(%rbp)
00000000000256e7	movl	$0x00000000,0xffffff4c(%rbp)
00000000000256f1	movq	%rcx,0xffffff50(%rbp)
00000000000256f8	movq	%rax,0xffffff58(%rbp)
00000000000256ff	movq	0xffffff38(%rbp),%rbx
0000000000025706	movq	%rbx,%rdi
0000000000025709	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
000000000002570e	leaq	0xffffff70(%rbp),%rsi
0000000000025715	movq	%r13,0xffffff68(%rbp)
000000000002571c	movq	%r14,%rdi
000000000002571f	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
0000000000025724	leaq	0xffffff78(%rbp),%rsi
000000000002572b	movq	%r12,%rdi
000000000002572e	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
0000000000025733	leaq	0x80(%rbp),%rsi
0000000000025737	movq	0xffffff30(%rbp),%rdi
000000000002573e	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
0000000000025743	leaq	0x000910ce(%rip),%rcx
000000000002574a	leaq	0xffffff40(%rbp),%r8
0000000000025751	movq	0x00082a60(%rip),%rsi
0000000000025758	movq	%rbx,%rdi
000000000002575b	movq	%r12,%rdx
000000000002575e	call	*%r15
0000000000025761	addq	$0x000000d8,%rsp
0000000000025768	popq	%rbx
0000000000025769	popq	%r12
000000000002576b	popq	%r13
000000000002576d	popq	%r14
000000000002576f	popq	%r15
0000000000025771	popq	%rbp
0000000000025772	ret
-[PBXGDB_Adaptor newFrameContextContainerDataValue]:
0000000000025773	pushq	%rbp
0000000000025774	movq	%rsp,%rbp
0000000000025777	pushq	%rbx
0000000000025778	pushq	%rax
0000000000025779	movq	%rdi,%rbx
000000000002577c	movq	0x00082e6d(%rip),%rdi
0000000000025783	leaq	0x00082b56(%rip),%rsi
000000000002578a	call	*0x00082b50(%rip)
0000000000025790	movq	0x0007f5b9(%rip),%rsi
0000000000025797	movq	%rax,%rdi
000000000002579a	movq	%rbx,%rdx
000000000002579d	addq	$0x08,%rsp
00000000000257a1	popq	%rbx
00000000000257a2	popq	%rbp
00000000000257a3	jmp	*0x0005e92f(%rip)
-[PBXGDB_ContextFrameDataValue initWithDebugger:]:
00000000000257a9	pushq	%rbp
00000000000257aa	movq	%rsp,%rbp
00000000000257ad	pushq	%r14
00000000000257af	pushq	%rbx
00000000000257b0	subq	$0x10,%rsp
00000000000257b4	movq	%rdi,0xe0(%rbp)
00000000000257b8	movq	0x00083589(%rip),%rax
00000000000257bf	movq	%rax,0xe8(%rbp)
00000000000257c3	movq	0x0007f586(%rip),%rsi
00000000000257ca	leaq	0xe0(%rbp),%rdi
00000000000257ce	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000257d3	movq	%rax,%rbx
00000000000257d6	movq	0x0005e8fb(%rip),%r14
00000000000257dd	movq	0x0007feec(%rip),%rsi
00000000000257e4	movq	%rbx,%rdi
00000000000257e7	movl	$0x00000001,%edx
00000000000257ec	call	*%r14
00000000000257ef	movq	0x0008001a(%rip),%rsi
00000000000257f6	movq	%rbx,%rdi
00000000000257f9	movl	$0x00000001,%edx
00000000000257fe	call	*%r14
0000000000025801	movq	0x0007fd90(%rip),%rsi
0000000000025808	movq	%rbx,%rdi
000000000002580b	movl	$0x00000002,%edx
0000000000025810	call	*%r14
0000000000025813	movq	%rbx,%rax
0000000000025816	addq	$0x10,%rsp
000000000002581a	popq	%rbx
000000000002581b	popq	%r14
000000000002581d	popq	%rbp
000000000002581e	ret
-[PBXGDB_Adaptor requestNewDataValueForExpression:addToContainerDataValue:blockStartAddress:]:
000000000002581f	pushq	%rbp
0000000000025820	movq	%rsp,%rbp
0000000000025823	movq	%rdx,%rax
0000000000025826	movq	0x00088e63(%rip),%rdx
000000000002582d	movq	(%rdi,%rdx),%rdi
0000000000025831	movq	0x0007fad8(%rip),%rsi
0000000000025838	movq	%rcx,%rdx
000000000002583b	movq	%rax,%rcx
000000000002583e	popq	%rbp
000000000002583f	jmp	*0x0005e893(%rip)
-[PBXGDB_DataValueController enqueueSequenceForContainerDataValue:createNewDVWithExpression:blockStartAddress:]:
0000000000025845	pushq	%rbp
0000000000025846	movq	%rsp,%rbp
0000000000025849	pushq	%r15
000000000002584b	pushq	%r14
000000000002584d	pushq	%r13
000000000002584f	pushq	%r12
0000000000025851	pushq	%rbx
0000000000025852	pushq	%rax
0000000000025853	movq	%r8,%r15
0000000000025856	movq	%rcx,%r12
0000000000025859	movq	%rdx,%r13
000000000002585c	movq	%rdi,%r14
000000000002585f	movq	0x00082f9a(%rip),%rdi
0000000000025866	leaq	0x00082a73(%rip),%rsi
000000000002586d	call	*0x00082a6d(%rip)
0000000000025873	movq	0x0007f1f6(%rip),%rsi
000000000002587a	movq	%rax,%rdi
000000000002587d	call	*0x0005e855(%rip)
0000000000025883	movq	%rax,%rbx
0000000000025886	movq	0x0007fbcb(%rip),%rsi
000000000002588d	movq	%r14,%rdi
0000000000025890	movq	%rbx,%rdx
0000000000025893	movq	%r13,%rcx
0000000000025896	call	*0x0005e83c(%rip)
000000000002589c	movq	0x000804a5(%rip),%rsi
00000000000258a3	movq	%rbx,%rdi
00000000000258a6	movq	%r12,%rdx
00000000000258a9	movq	%r15,%rcx
00000000000258ac	call	*0x0005e826(%rip)
00000000000258b2	movq	0x0007f1ff(%rip),%rsi
00000000000258b9	movq	%r14,%rdi
00000000000258bc	call	*0x0005e816(%rip)
00000000000258c2	movq	0x0007f507(%rip),%rsi
00000000000258c9	movq	%rax,%rdi
00000000000258cc	call	*0x0005e806(%rip)
00000000000258d2	movq	0x0007f507(%rip),%rsi
00000000000258d9	movq	%rax,%rdi
00000000000258dc	movq	%rbx,%rdx
00000000000258df	movq	0x0005e7f2(%rip),%rax
00000000000258e6	addq	$0x08,%rsp
00000000000258ea	popq	%rbx
00000000000258eb	popq	%r12
00000000000258ed	popq	%r13
00000000000258ef	popq	%r14
00000000000258f1	popq	%r15
00000000000258f3	popq	%rbp
00000000000258f4	jmp	*%rax
-[PBXGDB_SetDataValueForExpressionSequence setExpressionString:withBlockStartAddress:]:
00000000000258f6	pushq	%rbp
00000000000258f7	movq	%rsp,%rbp
00000000000258fa	pushq	%r14
00000000000258fc	pushq	%rbx
00000000000258fd	movq	%rcx,%r14
0000000000025900	movq	%rdi,%rbx
0000000000025903	movq	0x00080546(%rip),%rsi
000000000002590a	call	*0x0005e7c8(%rip)
0000000000025910	leaq	0x00088ed9(%rip),%rcx
0000000000025917	movq	(%rcx),%rdx
000000000002591a	movq	%rax,%rdi
000000000002591d	movq	%rbx,%rsi
0000000000025920	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000025925	movq	0x00089004(%rip),%rdx
000000000002592c	movq	%r14,%rdi
000000000002592f	movq	%rbx,%rsi
0000000000025932	popq	%rbx
0000000000025933	popq	%r14
0000000000025935	popq	%rbp
0000000000025936	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_SetDataValueForExpressionSequence _fixExpressionCast:]:
000000000002593b	pushq	%rbp
000000000002593c	movq	%rsp,%rbp
000000000002593f	pushq	%r14
0000000000025941	pushq	%rbx
0000000000025942	movq	%rdx,%rbx
0000000000025945	movq	0x0007f16c(%rip),%rsi
000000000002594c	movq	0x0005e785(%rip),%r14
0000000000025953	call	*%r14
0000000000025956	movq	0x000804eb(%rip),%rsi
000000000002595d	movq	%rax,%rdi
0000000000025960	call	*%r14
0000000000025963	testb	%al,%al
0000000000025965	jne	0x00025992
0000000000025967	testq	%rbx,%rbx
000000000002596a	je	0x00025992
000000000002596c	movq	0x0007f965(%rip),%rsi
0000000000025973	leaq	0x0008b6de(%rip),%rdx
000000000002597a	movq	%rbx,%rdi
000000000002597d	call	*0x0005e755(%rip)
0000000000025983	movq	$0x7fffffffffffffff,%rcx
000000000002598d	cmpq	%rcx,%rax
0000000000025990	jne	0x0002599a
0000000000025992	movq	%rbx,%rax
0000000000025995	popq	%rbx
0000000000025996	popq	%r14
0000000000025998	popq	%rbp
0000000000025999	ret
000000000002599a	movq	0x0007ff5f(%rip),%rsi
00000000000259a1	leaq	0x0008b6b0(%rip),%rdx
00000000000259a8	leaq	0x0008b6c9(%rip),%rcx
00000000000259af	movq	%rbx,%rdi
00000000000259b2	popq	%rbx
00000000000259b3	popq	%r14
00000000000259b5	popq	%rbp
00000000000259b6	jmp	*0x0005e71c(%rip)
-[PBXGDB_Adaptor supportsUnicharXcode_CFDataFormatters]:
00000000000259bc	pushq	%rbp
00000000000259bd	movq	%rsp,%rbp
00000000000259c0	leaq	0x00089ab1(%rip),%rax
00000000000259c7	movq	(%rax),%rax
00000000000259ca	movsbl	(%rdi,%rax),%eax
00000000000259ce	popq	%rbp
00000000000259cf	ret
-[PBXGDB_BaseDataValueSequence didGetPathExpression]:
00000000000259d0	pushq	%rbp
00000000000259d1	movq	%rsp,%rbp
00000000000259d4	movq	0x0007f15d(%rip),%rsi
00000000000259db	popq	%rbp
00000000000259dc	jmp	*0x0005e6f6(%rip)
-[PBXGDB_GetPathExpressionSequence didFinish]:
00000000000259e2	pushq	%rbp
00000000000259e3	movq	%rsp,%rbp
00000000000259e6	pushq	%r15
00000000000259e8	pushq	%r14
00000000000259ea	pushq	%rbx
00000000000259eb	subq	$0x18,%rsp
00000000000259ef	movq	%rdi,%rbx
00000000000259f2	movq	0x0007fc0f(%rip),%rsi
00000000000259f9	movq	0x0005e6d8(%rip),%r15
0000000000025a00	call	*%r15
0000000000025a03	movq	%rax,%r14
0000000000025a06	movq	0x0007fce3(%rip),%rsi
0000000000025a0d	movq	%r14,%rdi
0000000000025a10	call	*%r15
0000000000025a13	movq	0x00088f36(%rip),%rax
0000000000025a1a	cmpb	$0x01,(%rbx,%rax)
0000000000025a1e	jne	0x00025a30
0000000000025a20	movq	0x0007fbf1(%rip),%rsi
0000000000025a27	movq	%r14,%rdi
0000000000025a2a	call	*0x0005e6a8(%rip)
0000000000025a30	movq	%rbx,0xd8(%rbp)
0000000000025a34	movq	0x00083395(%rip),%rax
0000000000025a3b	movq	%rax,0xe0(%rbp)
0000000000025a3f	movq	0x0007f0f2(%rip),%rsi
0000000000025a46	leaq	0xd8(%rbp),%rdi
0000000000025a4a	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000025a4f	addq	$0x18,%rsp
0000000000025a53	popq	%rbx
0000000000025a54	popq	%r14
0000000000025a56	popq	%r15
0000000000025a58	popq	%rbp
0000000000025a59	ret
-[PBXGDB_Adaptor requestNewDataValueForExpression:addToContainerDataValue:bindToFrame:]:
0000000000025a5a	pushq	%rbp
0000000000025a5b	movq	%rsp,%rbp
0000000000025a5e	movq	%rdx,%rax
0000000000025a61	movq	0x00088c28(%rip),%rdx
0000000000025a68	movq	(%rdi,%rdx),%rdi
0000000000025a6c	movq	0x0007f85d(%rip),%rsi
0000000000025a73	movq	%rcx,%rdx
0000000000025a76	movq	%rax,%rcx
0000000000025a79	popq	%rbp
0000000000025a7a	jmp	*0x0005e658(%rip)
-[PBXGDB_DataValueController enqueueSequenceForContainerDataValue:createNewDVWithExpression:bindToFrame:]:
0000000000025a80	pushq	%rbp
0000000000025a81	movq	%rsp,%rbp
0000000000025a84	pushq	%r15
0000000000025a86	pushq	%r14
0000000000025a88	pushq	%r13
0000000000025a8a	pushq	%r12
0000000000025a8c	pushq	%rbx
0000000000025a8d	pushq	%rax
0000000000025a8e	movl	%r8d,%r15d
0000000000025a91	movq	%rcx,%r12
0000000000025a94	movq	%rdx,%r13
0000000000025a97	movq	%rdi,%r14
0000000000025a9a	movq	0x00082d5f(%rip),%rdi
0000000000025aa1	leaq	0x00082838(%rip),%rsi
0000000000025aa8	call	*0x00082832(%rip)
0000000000025aae	movq	0x0007efbb(%rip),%rsi
0000000000025ab5	movq	%rax,%rdi
0000000000025ab8	call	*0x0005e61a(%rip)
0000000000025abe	movq	%rax,%rbx
0000000000025ac1	movq	0x0007f990(%rip),%rsi
0000000000025ac8	movq	%r14,%rdi
0000000000025acb	movq	%rbx,%rdx
0000000000025ace	movq	%r13,%rcx
0000000000025ad1	call	*0x0005e601(%rip)
0000000000025ad7	movq	0x00080272(%rip),%rsi
0000000000025ade	movq	%rbx,%rdi
0000000000025ae1	movq	%r12,%rdx
0000000000025ae4	movl	%r15d,%ecx
0000000000025ae7	call	*0x0005e5eb(%rip)
0000000000025aed	movq	0x0007efc4(%rip),%rsi
0000000000025af4	movq	%r14,%rdi
0000000000025af7	call	*0x0005e5db(%rip)
0000000000025afd	movq	0x0007f2cc(%rip),%rsi
0000000000025b04	movq	%rax,%rdi
0000000000025b07	call	*0x0005e5cb(%rip)
0000000000025b0d	movq	0x0007f2cc(%rip),%rsi
0000000000025b14	movq	%rax,%rdi
0000000000025b17	movq	%rbx,%rdx
0000000000025b1a	movq	0x0005e5b7(%rip),%rax
0000000000025b21	addq	$0x08,%rsp
0000000000025b25	popq	%rbx
0000000000025b26	popq	%r12
0000000000025b28	popq	%r13
0000000000025b2a	popq	%r14
0000000000025b2c	popq	%r15
0000000000025b2e	popq	%rbp
0000000000025b2f	jmp	*%rax
-[PBXGDB_SetDataValueForExpressionSequence setExpressionString:bindToFrame:]:
0000000000025b31	pushq	%rbp
0000000000025b32	movq	%rsp,%rbp
0000000000025b35	pushq	%r14
0000000000025b37	pushq	%rbx
0000000000025b38	movl	%ecx,%ebx
0000000000025b3a	movq	%rdi,%r14
0000000000025b3d	movq	0x0008030c(%rip),%rsi
0000000000025b44	call	*0x0005e58e(%rip)
0000000000025b4a	leaq	0x00088c9f(%rip),%rcx
0000000000025b51	movq	(%rcx),%rdx
0000000000025b54	movq	%rax,%rdi
0000000000025b57	movq	%r14,%rsi
0000000000025b5a	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000025b5f	movq	0x00088dd2(%rip),%rax
0000000000025b66	movb	%bl,(%r14,%rax)
0000000000025b6a	popq	%rbx
0000000000025b6b	popq	%r14
0000000000025b6d	popq	%rbp
0000000000025b6e	ret
-[PBXGDB_ArrayDataValue varObjName]:
0000000000025b6f	pushq	%rbp
0000000000025b70	movq	%rsp,%rbp
0000000000025b73	leaq	0x000895b6(%rip),%rax
0000000000025b7a	movq	(%rax),%rax
0000000000025b7d	movq	(%rdi,%rax),%rax
0000000000025b81	popq	%rbp
0000000000025b82	ret
-[PBXGDB_SetDataValueForExpressionSequence execute]:
0000000000025b83	pushq	%rbp
0000000000025b84	movq	%rsp,%rbp
0000000000025b87	pushq	%r15
0000000000025b89	pushq	%r14
0000000000025b8b	pushq	%r12
0000000000025b8d	pushq	%rbx
0000000000025b8e	movq	%rdi,%rbx
0000000000025b91	movq	0x0007eee8(%rip),%rsi
0000000000025b98	movq	0x00082af1(%rip),%rdi
0000000000025b9f	movq	0x0005e532(%rip),%r15
0000000000025ba6	call	*%r15
0000000000025ba9	movq	%rax,%r14
0000000000025bac	movq	0x00088d7d(%rip),%rax
0000000000025bb3	movq	(%rbx,%rax),%r12
0000000000025bb7	movq	0x0007f8ca(%rip),%rsi
0000000000025bbe	movq	%rbx,%rdi
0000000000025bc1	call	*%r15
0000000000025bc4	movq	%rax,%rdx
0000000000025bc7	cmpq	$0x00,%r12
0000000000025bcb	je	0x00025bea
0000000000025bcd	movq	0x00088d5c(%rip),%rax
0000000000025bd4	movq	(%rbx,%rax),%rcx
0000000000025bd8	movq	0x00080289(%rip),%rsi
0000000000025bdf	movq	%r14,%rdi
0000000000025be2	call	*0x0005e4f0(%rip)
0000000000025be8	jmp	0x00025c05
0000000000025bea	movq	0x00088d47(%rip),%rax
0000000000025bf1	movsbl	(%rbx,%rax),%ecx
0000000000025bf5	movq	0x0007fa34(%rip),%rsi
0000000000025bfc	movq	%r14,%rdi
0000000000025bff	call	*0x0005e4d3(%rip)
0000000000025c05	movq	0x0007ee7c(%rip),%rsi
0000000000025c0c	movq	%r14,%rdi
0000000000025c0f	movq	%rbx,%rdx
0000000000025c12	call	*0x0005e4c0(%rip)
0000000000025c18	movq	0x0007ee79(%rip),%rsi
0000000000025c1f	movq	0x0008024a(%rip),%rdx
0000000000025c26	movq	%r14,%rdi
0000000000025c29	call	*0x0005e4a9(%rip)
0000000000025c2f	movq	0x0007fa0a(%rip),%rsi
0000000000025c36	movq	%rbx,%rdi
0000000000025c39	movq	%r14,%rdx
0000000000025c3c	movq	0x0005e495(%rip),%rax
0000000000025c43	popq	%rbx
0000000000025c44	popq	%r12
0000000000025c46	popq	%r14
0000000000025c48	popq	%r15
0000000000025c4a	popq	%rbp
0000000000025c4b	jmp	*%rax
-[PBXGDB_SetDataValueForExpressionSequence expressionString]:
0000000000025c4d	pushq	%rbp
0000000000025c4e	movq	%rsp,%rbp
0000000000025c51	leaq	0x00088b98(%rip),%rax
0000000000025c58	movq	(%rax),%rax
0000000000025c5b	movq	(%rdi,%rax),%rax
0000000000025c5f	popq	%rbp
0000000000025c60	ret
-[PBXGDB_MICreateVarObjCommand setExpression:withBlockStartAddress:]:
0000000000025c61	pushq	%rbp
0000000000025c62	movq	%rsp,%rbp
0000000000025c65	pushq	%r15
0000000000025c67	pushq	%r14
0000000000025c69	pushq	%rbx
0000000000025c6a	pushq	%rax
0000000000025c6b	movq	%rcx,%rbx
0000000000025c6e	movq	%rdx,%r15
0000000000025c71	movq	%rdi,%r14
0000000000025c74	movq	0x0007f66d(%rip),%rsi
0000000000025c7b	leaq	0x0008ddb6(%rip),%rdx
0000000000025c82	movq	%rbx,%rdi
0000000000025c85	call	*0x0005e44d(%rip)
0000000000025c8b	movq	0x0007eee6(%rip),%rsi
0000000000025c92	movq	0x000827b7(%rip),%rdi
0000000000025c99	testb	%al,%al
0000000000025c9b	jne	0x00025ca6
0000000000025c9d	leaq	0x0008ddb4(%rip),%rdx
0000000000025ca4	jmp	0x00025cad
0000000000025ca6	leaq	0x0008ddcb(%rip),%rdx
0000000000025cad	movq	%rbx,%rcx
0000000000025cb0	xorb	%al,%al
0000000000025cb2	call	*0x0005e420(%rip)
0000000000025cb8	movq	%rax,%rbx
0000000000025cbb	movq	0x0008278e(%rip),%rdi
0000000000025cc2	leaq	0x00082617(%rip),%rsi
0000000000025cc9	call	*0x00082611(%rip)
0000000000025ccf	movq	0x0007efe2(%rip),%rsi
0000000000025cd6	leaq	0x0008ddbb(%rip),%rdx
0000000000025cdd	movq	%rax,%rdi
0000000000025ce0	movq	%rbx,%rcx
0000000000025ce3	movq	%r15,%r8
0000000000025ce6	xorb	%al,%al
0000000000025ce8	call	*0x0005e3ea(%rip)
0000000000025cee	leaq	0x00088e3b(%rip),%rcx
0000000000025cf5	movq	(%rcx),%rdx
0000000000025cf8	movq	%rax,%rdi
0000000000025cfb	movq	%r14,%rsi
0000000000025cfe	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000025d03	movq	0x000891c6(%rip),%rdx
0000000000025d0a	movq	%r15,%rdi
0000000000025d0d	movq	%r14,%rsi
0000000000025d10	addq	$0x08,%rsp
0000000000025d14	popq	%rbx
0000000000025d15	popq	%r14
0000000000025d17	popq	%r15
0000000000025d19	popq	%rbp
0000000000025d1a	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MICreateVarObjCommand didFinishWithResultList:]:
0000000000025d1f	pushq	%rbp
0000000000025d20	movq	%rsp,%rbp
0000000000025d23	pushq	%r14
0000000000025d25	pushq	%rbx
0000000000025d26	subq	$0x10,%rsp
0000000000025d2a	movq	%rdx,%r14
0000000000025d2d	movq	%rdi,%rbx
0000000000025d30	movq	0x00089181(%rip),%rdx
0000000000025d37	xorl	%edi,%edi
0000000000025d39	movq	%rbx,%rsi
0000000000025d3c	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000025d41	movq	0x00089180(%rip),%rax
0000000000025d48	movq	$0x00000000,(%rbx,%rax)
0000000000025d50	movq	0x00089169(%rip),%rdx
0000000000025d57	movq	%r14,%rdi
0000000000025d5a	movq	%rbx,%rsi
0000000000025d5d	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000025d62	leaq	0xe0(%rbp),%rdi
0000000000025d66	movq	%rbx,0xe0(%rbp)
0000000000025d6a	movq	0x0008319f(%rip),%rax
0000000000025d71	movq	%rax,0xe8(%rbp)
0000000000025d75	movq	0x00080484(%rip),%rsi
0000000000025d7c	movq	%r14,%rdx
0000000000025d7f	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000025d84	addq	$0x10,%rsp
0000000000025d88	popq	%rbx
0000000000025d89	popq	%r14
0000000000025d8b	popq	%rbp
0000000000025d8c	ret
-[PBXGDB_SetDataValueForExpressionSequence _gotResultCreatedVarObj:]:
0000000000025d8d	pushq	%rbp
0000000000025d8e	movq	%rsp,%rbp
0000000000025d91	pushq	%r15
0000000000025d93	pushq	%r14
0000000000025d95	pushq	%r12
0000000000025d97	pushq	%rbx
0000000000025d98	subq	$0x40,%rsp
0000000000025d9c	movq	%rdx,%r15
0000000000025d9f	movq	%rdi,0xd8(%rbp)
0000000000025da3	movq	%rsi,0xd0(%rbp)
0000000000025da7	testq	%r15,%r15
0000000000025daa	jne	0x00025e12
0000000000025dac	movq	0x000828dd(%rip),%rdi
0000000000025db3	leaq	0x00082576(%rip),%rsi
0000000000025dba	call	*0x00082570(%rip)
0000000000025dc0	movq	%rax,%rdi
0000000000025dc3	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000025dc8	leaq	0xd8(%rbp),%rdi
0000000000025dcc	leaq	0xd0(%rbp),%rsi
0000000000025dd0	leaq	0x00038aa4(%rip),%rdx
0000000000025dd7	leaq	0x000385df(%rip),%rcx
0000000000025dde	leaq	0x00089bd3(%rip),%r9
0000000000025de5	leaq	0x00037d14(%rip),%r8
0000000000025dec	leaq	0x00037d11(%rip),%rbx
0000000000025df3	movq	%rbx,0x18(%rsp)
0000000000025df8	leaq	0x00089a39(%rip),%rbx
0000000000025dff	movq	%rbx,0x10(%rsp)
0000000000025e04	movq	%rax,0x08(%rsp)
0000000000025e09	movq	%r8,(%rsp)
0000000000025e0d	jmp	0x00025ebd
0000000000025e12	movq	0x00082877(%rip),%rdi
0000000000025e19	leaq	0x00082510(%rip),%rsi
0000000000025e20	call	*0x0008250a(%rip)
0000000000025e26	leaq	0x00082513(%rip),%rsi
0000000000025e2d	movq	%r15,%rdi
0000000000025e30	movq	%rax,%rdx
0000000000025e33	call	*0x00082507(%rip)
0000000000025e39	testb	%al,%al
0000000000025e3b	movq	%r15,%r14
0000000000025e3e	jne	0x00025ecd
0000000000025e44	movq	0x00082845(%rip),%rdi
0000000000025e4b	leaq	0x000824de(%rip),%rsi
0000000000025e52	call	*0x000824d8(%rip)
0000000000025e58	movq	%rax,%rdi
0000000000025e5b	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000025e60	movq	%rax,%rbx
0000000000025e63	movq	0x0007edf6(%rip),%rsi
0000000000025e6a	movq	%r15,%rdi
0000000000025e6d	call	*0x0005e265(%rip)
0000000000025e73	leaq	0x000899be(%rip),%r8
0000000000025e7a	leaq	0x00038a3f(%rip),%r9
0000000000025e81	leaq	0xd8(%rbp),%rdi
0000000000025e85	leaq	0xd0(%rbp),%rsi
0000000000025e89	leaq	0x000389eb(%rip),%rdx
0000000000025e90	leaq	0x00038526(%rip),%rcx
0000000000025e97	movq	%r9,0x20(%rsp)
0000000000025e9c	leaq	0x00089b35(%rip),%r9
0000000000025ea3	movq	%r8,0x18(%rsp)
0000000000025ea8	movq	%rax,0x10(%rsp)
0000000000025ead	leaq	0x00037c4c(%rip),%rax
0000000000025eb4	movq	%rbx,0x08(%rsp)
0000000000025eb9	movq	%rax,(%rsp)
0000000000025ebd	movl	$0x000002dc,%r8d
0000000000025ec3	xorb	%al,%al
0000000000025ec5	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000025eca	movq	%r15,%r14
0000000000025ecd	movq	0x0007fe9c(%rip),%rsi
0000000000025ed4	movq	%r14,%rdi
0000000000025ed7	call	*0x0005e1fb(%rip)
0000000000025edd	movq	0xd8(%rbp),%rdi
0000000000025ee1	testq	%rax,%rax
0000000000025ee4	je	0x0002606d
0000000000025eea	movq	0x0007ff67(%rip),%rsi
0000000000025ef1	call	*0x0005e1e1(%rip)
0000000000025ef7	movq	0xd8(%rbp),%rbx
0000000000025efb	testq	%rax,%rax
0000000000025efe	jne	0x00025f29
0000000000025f00	movq	0x0007f701(%rip),%rsi
0000000000025f07	movq	0x0005e1ca(%rip),%r12
0000000000025f0e	movq	%rbx,%rdi
0000000000025f11	call	*%r12
0000000000025f14	movq	0x0007fe5d(%rip),%rsi
0000000000025f1b	movq	%rbx,%rdi
0000000000025f1e	movq	%r15,%rdx
0000000000025f21	movq	%rax,%rcx
0000000000025f24	call	*%r12
0000000000025f27	jmp	0x00025f50
0000000000025f29	movq	0x0007ff28(%rip),%rsi
0000000000025f30	movq	0x0005e1a1(%rip),%r12
0000000000025f37	movq	%rbx,%rdi
0000000000025f3a	call	*%r12
0000000000025f3d	movq	0x0007ff1c(%rip),%rsi
0000000000025f44	movq	%rbx,%rdi
0000000000025f47	movq	%rax,%rdx
0000000000025f4a	movq	%r15,%rcx
0000000000025f4d	call	*%r12
0000000000025f50	movq	0x0007eb29(%rip),%rsi
0000000000025f57	movq	0x0008273a(%rip),%rdi
0000000000025f5e	movq	0x0005e173(%rip),%rbx
0000000000025f65	call	*%rbx
0000000000025f67	movq	%rax,%r15
0000000000025f6a	movq	0x0007fee7(%rip),%rsi
0000000000025f71	movq	0xd8(%rbp),%rdi
0000000000025f75	call	*%rbx
0000000000025f77	testq	%rax,%rax
0000000000025f7a	jne	0x00025fed
0000000000025f7c	movq	0x0007f685(%rip),%rsi
0000000000025f83	movq	0xd8(%rbp),%rbx
0000000000025f87	movq	0x0005e14a(%rip),%r12
0000000000025f8e	movq	%rbx,%rdi
0000000000025f91	call	*%r12
0000000000025f94	movq	0x0007f6ed(%rip),%rsi
0000000000025f9b	movq	%rax,%rdi
0000000000025f9e	call	*%r12
0000000000025fa1	movq	0x0007fa40(%rip),%rsi
0000000000025fa8	movq	%rax,%rdi
0000000000025fab	call	*%r12
0000000000025fae	movq	0x0007fe8b(%rip),%rsi
0000000000025fb5	movq	%rbx,%rdi
0000000000025fb8	movq	%rax,%rdx
0000000000025fbb	call	*%r12
0000000000025fbe	movq	0x0007fe93(%rip),%rsi
0000000000025fc5	movq	0xd8(%rbp),%rdi
0000000000025fc9	call	*%r12
0000000000025fcc	movq	%rax,%rbx
0000000000025fcf	movq	0x0007f4b2(%rip),%rsi
0000000000025fd6	movq	0xd8(%rbp),%rdi
0000000000025fda	call	*%r12
0000000000025fdd	movq	0x0007ed74(%rip),%rsi
0000000000025fe4	movq	%rbx,%rdi
0000000000025fe7	movq	%rax,%rdx
0000000000025fea	call	*%r12
0000000000025fed	movq	0x0007fe64(%rip),%rsi
0000000000025ff4	movq	0xd8(%rbp),%rdi
0000000000025ff8	movq	0x0005e0d9(%rip),%rbx
0000000000025fff	call	*%rbx
0000000000026001	movq	0x0007f6f0(%rip),%rsi
0000000000026008	movq	%rax,%rdi
000000000002600b	call	*%rbx
000000000002600d	testq	%rax,%rax
0000000000026010	jne	0x00026022
0000000000026012	movq	0x0007f62f(%rip),%rsi
0000000000026019	movq	%r14,%rdi
000000000002601c	call	*0x0005e0b6(%rip)
0000000000026022	movq	0x0007f62f(%rip),%rsi
0000000000026029	movq	0x0005e0a8(%rip),%rbx
0000000000026030	movq	%r15,%rdi
0000000000026033	movq	%rax,%rdx
0000000000026036	call	*%rbx
0000000000026038	movq	0x0007ea49(%rip),%rsi
000000000002603f	movq	0xd8(%rbp),%rdx
0000000000026043	movq	%r15,%rdi
0000000000026046	call	*%rbx
0000000000026048	movq	0x0007ea49(%rip),%rsi
000000000002604f	movq	0x0007f76a(%rip),%rdx
0000000000026056	movq	%r15,%rdi
0000000000026059	call	*%rbx
000000000002605b	movq	0x0007f5de(%rip),%rsi
0000000000026062	movq	0xd8(%rbp),%rdi
0000000000026066	movq	%r15,%rdx
0000000000026069	call	*%rbx
000000000002606b	jmp	0x0002607a
000000000002606d	movq	0x0007eac4(%rip),%rsi
0000000000026074	call	*0x0005e05e(%rip)
000000000002607a	addq	$0x40,%rsp
000000000002607e	popq	%rbx
000000000002607f	popq	%r12
0000000000026081	popq	%r14
0000000000026083	popq	%r15
0000000000026085	popq	%rbp
0000000000026086	ret
-[PBXGDB_SetDataValueForExpressionSequence targetDV]:
0000000000026087	pushq	%rbp
0000000000026088	movq	%rsp,%rbp
000000000002608b	movq	0x000888ae(%rip),%rax
0000000000026092	movq	(%rdi,%rax),%rax
0000000000026096	popq	%rbp
0000000000026097	ret
-[PBXGDB_MICreateVarObjCommand currentVarObjExpressionString]:
0000000000026098	pushq	%rbp
0000000000026099	movq	%rsp,%rbp
000000000002609c	pushq	%rbx
000000000002609d	pushq	%rax
000000000002609e	movq	%rdi,%rbx
00000000000260a1	movq	0x00080680(%rip),%rsi
00000000000260a8	leaq	0x00089f29(%rip),%rdx
00000000000260af	call	*0x0005e023(%rip)
00000000000260b5	testq	%rax,%rax
00000000000260b8	jne	0x000260c5
00000000000260ba	movq	0x00088e0f(%rip),%rax
00000000000260c1	movq	(%rbx,%rax),%rax
00000000000260c5	addq	$0x08,%rsp
00000000000260c9	popq	%rbx
00000000000260ca	popq	%rbp
00000000000260cb	ret
-[PBXLSTypeDescription summaryDictionary]:
00000000000260cc	pushq	%rbp
00000000000260cd	movq	%rsp,%rbp
00000000000260d0	movq	0x00089379(%rip),%rax
00000000000260d7	movq	(%rdi,%rax),%rax
00000000000260db	popq	%rbp
00000000000260dc	ret
-[PBXGDB_SetDataValueForExpressionSequence setTargetDV:]:
00000000000260dd	pushq	%rbp
00000000000260de	movq	%rsp,%rbp
00000000000260e1	movq	%rdx,%rax
00000000000260e4	movq	%rdi,%rcx
00000000000260e7	movq	0x00088852(%rip),%rdx
00000000000260ee	movq	%rax,%rdi
00000000000260f1	movq	%rcx,%rsi
00000000000260f4	popq	%rbp
00000000000260f5	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MIGetValueVarObjCommand setVarObjName:]:
00000000000260fa	pushq	%rbp
00000000000260fb	movq	%rsp,%rbp
00000000000260fe	pushq	%r14
0000000000026100	pushq	%rbx
0000000000026101	movq	%rdx,%rbx
0000000000026104	movq	%rdi,%r14
0000000000026107	movq	0x00082342(%rip),%rdi
000000000002610e	leaq	0x000821cb(%rip),%rsi
0000000000026115	call	*0x000821c5(%rip)
000000000002611b	movq	0x0007eb96(%rip),%rsi
0000000000026122	leaq	0x0008d9cf(%rip),%rdx
0000000000026129	movq	%rax,%rdi
000000000002612c	movq	%rbx,%rcx
000000000002612f	xorb	%al,%al
0000000000026131	call	*0x0005dfa1(%rip)
0000000000026137	leaq	0x000889f2(%rip),%rcx
000000000002613e	movq	(%rcx),%rdx
0000000000026141	movq	%rax,%rdi
0000000000026144	movq	%r14,%rsi
0000000000026147	popq	%rbx
0000000000026148	popq	%r14
000000000002614a	popq	%rbp
000000000002614b	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MIGetValueVarObjCommand didFinishWithResultList:]:
0000000000026150	pushq	%rbp
0000000000026151	movq	%rsp,%rbp
0000000000026154	pushq	%r14
0000000000026156	pushq	%rbx
0000000000026157	subq	$0x10,%rsp
000000000002615b	movq	%rdx,%r14
000000000002615e	movq	%rdi,%rbx
0000000000026161	movq	0x0007e970(%rip),%rsi
0000000000026168	leaq	0x00089fc9(%rip),%rdx
000000000002616f	movq	%r14,%rdi
0000000000026172	call	*0x0005df60(%rip)
0000000000026178	testq	%rax,%rax
000000000002617b	je	0x0002619f
000000000002617d	movq	0x0007e984(%rip),%rsi
0000000000026184	movq	%rax,%rdi
0000000000026187	call	*0x0005df4b(%rip)
000000000002618d	movq	0x00088d44(%rip),%rdx
0000000000026194	movq	%rax,%rdi
0000000000026197	movq	%rbx,%rsi
000000000002619a	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000002619f	movq	%rbx,0xe0(%rbp)
00000000000261a3	movq	0x00082d6e(%rip),%rax
00000000000261aa	movq	%rax,0xe8(%rbp)
00000000000261ae	movq	0x0008004b(%rip),%rsi
00000000000261b5	leaq	0xe0(%rbp),%rdi
00000000000261b9	movq	%r14,%rdx
00000000000261bc	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000261c1	addq	$0x10,%rsp
00000000000261c5	popq	%rbx
00000000000261c6	popq	%r14
00000000000261c8	popq	%rbp
00000000000261c9	ret
-[PBXGDB_SetDataValueForExpressionSequence _gotResultVarObjValue:]:
00000000000261ca	pushq	%rbp
00000000000261cb	movq	%rsp,%rbp
00000000000261ce	pushq	%r15
00000000000261d0	pushq	%r14
00000000000261d2	pushq	%rbx
00000000000261d3	subq	$0x38,%rsp
00000000000261d7	movq	%rdx,%r14
00000000000261da	movq	%rdi,0xe0(%rbp)
00000000000261de	movq	%rsi,0xd8(%rbp)
00000000000261e2	testq	%r14,%r14
00000000000261e5	jne	0x0002624d
00000000000261e7	movq	0x000824aa(%rip),%rdi
00000000000261ee	leaq	0x0008213b(%rip),%rsi
00000000000261f5	call	*0x00082135(%rip)
00000000000261fb	movq	%rax,%rdi
00000000000261fe	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000026203	leaq	0xe0(%rbp),%rdi
0000000000026207	leaq	0xd8(%rbp),%rsi
000000000002620b	leaq	0x00038626(%rip),%rdx
0000000000026212	leaq	0x000381a4(%rip),%rcx
0000000000026219	leaq	0x00089798(%rip),%r9
0000000000026220	leaq	0x000378d9(%rip),%r8
0000000000026227	leaq	0x000378d6(%rip),%rbx
000000000002622e	movq	%rbx,0x18(%rsp)
0000000000026233	leaq	0x000895fe(%rip),%rbx
000000000002623a	movq	%rbx,0x10(%rsp)
000000000002623f	movq	%rax,0x08(%rsp)
0000000000026244	movq	%r8,(%rsp)
0000000000026248	jmp	0x000262f5
000000000002624d	movq	0x00082444(%rip),%rdi
0000000000026254	leaq	0x000820d5(%rip),%rsi
000000000002625b	call	*0x000820cf(%rip)
0000000000026261	leaq	0x000820d8(%rip),%rsi
0000000000026268	movq	%r14,%rdi
000000000002626b	movq	%rax,%rdx
000000000002626e	call	*0x000820cc(%rip)
0000000000026274	testb	%al,%al
0000000000026276	jne	0x00026302
000000000002627c	movq	0x00082415(%rip),%rdi
0000000000026283	leaq	0x000820a6(%rip),%rsi
000000000002628a	call	*0x000820a0(%rip)
0000000000026290	movq	%rax,%rdi
0000000000026293	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000026298	movq	%rax,%rbx
000000000002629b	movq	0x0007e9be(%rip),%rsi
00000000000262a2	movq	%r14,%rdi
00000000000262a5	call	*0x0005de2d(%rip)
00000000000262ab	leaq	0x00089586(%rip),%r8
00000000000262b2	leaq	0x00037858(%rip),%r9
00000000000262b9	leaq	0xe0(%rbp),%rdi
00000000000262bd	leaq	0xd8(%rbp),%rsi
00000000000262c1	leaq	0x00038570(%rip),%rdx
00000000000262c8	leaq	0x000380ee(%rip),%rcx
00000000000262cf	movq	%r9,0x20(%rsp)
00000000000262d4	leaq	0x000896fd(%rip),%r9
00000000000262db	movq	%r8,0x18(%rsp)
00000000000262e0	movq	%rax,0x10(%rsp)
00000000000262e5	leaq	0x00037814(%rip),%rax
00000000000262ec	movq	%rbx,0x08(%rsp)
00000000000262f1	movq	%rax,(%rsp)
00000000000262f5	movl	$0x000002ce,%r8d
00000000000262fb	xorb	%al,%al
00000000000262fd	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000026302	movq	0x0007fb4f(%rip),%rsi
0000000000026309	movq	0xe0(%rbp),%rdi
000000000002630d	movq	0x0005ddc4(%rip),%r15
0000000000026314	call	*%r15
0000000000026317	movq	%rax,%rbx
000000000002631a	movq	0x0007f347(%rip),%rsi
0000000000026321	movq	%r14,%rdi
0000000000026324	call	*%r15
0000000000026327	movq	0x0007f292(%rip),%rsi
000000000002632e	movq	%rbx,%rdi
0000000000026331	movq	%rax,%rdx
0000000000026334	call	*%r15
0000000000026337	movq	0x0007fb1a(%rip),%rsi
000000000002633e	movq	0xe0(%rbp),%rdi
0000000000026342	call	*%r15
0000000000026345	movq	0x0007f294(%rip),%rsi
000000000002634c	movq	%rax,%rdi
000000000002634f	movl	$0x00000002,%edx
0000000000026354	call	*%r15
0000000000026357	movq	0x0007e7da(%rip),%rsi
000000000002635e	movq	0xe0(%rbp),%rdi
0000000000026362	call	*%r15
0000000000026365	addq	$0x38,%rsp
0000000000026369	popq	%rbx
000000000002636a	popq	%r14
000000000002636c	popq	%r15
000000000002636e	popq	%rbp
000000000002636f	ret
-[PBXGDB_MIGetValueVarObjCommand valueString]:
0000000000026370	pushq	%rbp
0000000000026371	movq	%rsp,%rbp
0000000000026374	movq	0x00088b5d(%rip),%rax
000000000002637b	movq	(%rdi,%rax),%rax
000000000002637f	popq	%rbp
0000000000026380	ret
-[PBXGDB_SetDataValueForExpressionSequence didFinish]:
0000000000026381	pushq	%rbp
0000000000026382	movq	%rsp,%rbp
0000000000026385	pushq	%r15
0000000000026387	pushq	%r14
0000000000026389	pushq	%rbx
000000000002638a	subq	$0x18,%rsp
000000000002638e	movq	%rdi,%r14
0000000000026391	movq	0x0007f270(%rip),%rsi
0000000000026398	call	*0x0005dd3a(%rip)
000000000002639e	movq	%rax,%rbx
00000000000263a1	movq	0x00082308(%rip),%rdi
00000000000263a8	leaq	0x00081f81(%rip),%rsi
00000000000263af	call	*0x00081f7b(%rip)
00000000000263b5	leaq	0x00081f84(%rip),%rsi
00000000000263bc	movq	%rbx,%rdi
00000000000263bf	movq	%rax,%rdx
00000000000263c2	call	*0x00081f78(%rip)
00000000000263c8	testb	%al,%al
00000000000263ca	jne	0x000263ed
00000000000263cc	movq	0x0007f19d(%rip),%rsi
00000000000263d3	movq	0x0005dcfe(%rip),%r15
00000000000263da	movq	%rbx,%rdi
00000000000263dd	call	*%r15
00000000000263e0	movq	0x0007f309(%rip),%rsi
00000000000263e7	movq	%rax,%rdi
00000000000263ea	call	*%r15
00000000000263ed	movq	0x0007f214(%rip),%rsi
00000000000263f4	movq	0x0005dcdd(%rip),%rbx
00000000000263fb	movq	%r14,%rdi
00000000000263fe	call	*%rbx
0000000000026400	movq	0x0007f2e9(%rip),%rsi
0000000000026407	movq	%rax,%rdi
000000000002640a	call	*%rbx
000000000002640c	movq	0x0008852d(%rip),%rax
0000000000026413	movq	(%r14,%rax),%rdi
0000000000026417	movq	0x0007f2d2(%rip),%rsi
000000000002641e	call	*%rbx
0000000000026420	leaq	0xd8(%rbp),%rdi
0000000000026424	movq	%r14,0xd8(%rbp)
0000000000026428	movq	0x00082999(%rip),%rax
000000000002642f	movq	%rax,0xe0(%rbp)
0000000000026433	movq	0x0007e6fe(%rip),%rsi
000000000002643a	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000002643f	addq	$0x18,%rsp
0000000000026443	popq	%rbx
0000000000026444	popq	%r14
0000000000026446	popq	%r15
0000000000026448	popq	%rbp
0000000000026449	ret
-[PBXLSDataValue resetDynamicTypeChangeStatus]:
000000000002644a	pushq	%rbp
000000000002644b	movq	%rsp,%rbp
000000000002644e	movq	0x00080f3b(%rip),%rsi
0000000000026455	xorl	%edx,%edx
0000000000026457	popq	%rbp
0000000000026458	jmp	*0x0005dc7a(%rip)
-[PBXLSDataValue setDynamicTypeChangeStatus:]:
000000000002645e	pushq	%rbp
000000000002645f	movq	%rsp,%rbp
0000000000026462	movq	0x00088d87(%rip),%rax
0000000000026469	movl	%edx,(%rdi,%rax)
000000000002646c	popq	%rbp
000000000002646d	ret
-[PBXGDB_SyntheticDataValue _doStep_BeginSummaryUpdate]:
000000000002646e	pushq	%rbp
000000000002646f	movq	%rsp,%rbp
0000000000026472	pushq	%r15
0000000000026474	pushq	%r14
0000000000026476	pushq	%r12
0000000000026478	pushq	%rbx
0000000000026479	movq	%rdi,%rbx
000000000002647c	movq	0x00080a85(%rip),%rsi
0000000000026483	movq	0x0005dc4e(%rip),%r15
000000000002648a	call	*%r15
000000000002648d	movq	%rax,%r14
0000000000026490	movq	0x00080ad9(%rip),%rsi
0000000000026497	movq	%rbx,%rdi
000000000002649a	call	*%r15
000000000002649d	movq	0x0007ebac(%rip),%rsi
00000000000264a4	movq	%rax,%rdi
00000000000264a7	call	*%r15
00000000000264aa	movq	0x0007e657(%rip),%rsi
00000000000264b1	movq	%rbx,%rdi
00000000000264b4	call	*%r15
00000000000264b7	movq	%rax,%r15
00000000000264ba	testq	%r15,%r15
00000000000264bd	je	0x00026555
00000000000264c3	movq	0x00080aa6(%rip),%rsi
00000000000264ca	movq	%rbx,%rdi
00000000000264cd	call	*0x0005dc05(%rip)
00000000000264d3	movq	%rax,%r12
00000000000264d6	leaq	0x00081e53(%rip),%rsi
00000000000264dd	movq	%rbx,%rdi
00000000000264e0	call	*0x00081e4a(%rip)
00000000000264e6	movq	0x00080b63(%rip),%rsi
00000000000264ed	movq	%rax,%rdi
00000000000264f0	call	*0x0005dbe2(%rip)
00000000000264f6	movq	0x0007e833(%rip),%rsi
00000000000264fd	movq	%r12,%rdi
0000000000026500	movq	%r15,%rdx
0000000000026503	movq	%rax,%rcx
0000000000026506	call	*0x0005dbcc(%rip)
000000000002650c	movq	0x0008238d(%rip),%r15
0000000000026513	movq	0x0007e5ee(%rip),%rsi
000000000002651a	movq	%rbx,%rdi
000000000002651d	call	*0x0005dbb5(%rip)
0000000000026523	movq	0x0007fa8e(%rip),%rsi
000000000002652a	movq	%r15,%rdi
000000000002652d	movq	%rax,%rdx
0000000000026530	movq	%r14,%rcx
0000000000026533	call	*0x0005db9f(%rip)
0000000000026539	movq	0x00080b18(%rip),%rsi
0000000000026540	movq	%rbx,%rdi
0000000000026543	movq	%rax,%rdx
0000000000026546	call	*0x0005db8c(%rip)
000000000002654c	movq	0x00080ae5(%rip),%rsi
0000000000026553	jmp	0x0002656e
0000000000026555	movq	0x00080a44(%rip),%rsi
000000000002655c	movq	%rbx,%rdi
000000000002655f	xorl	%edx,%edx
0000000000026561	call	*0x0005db71(%rip)
0000000000026567	movq	0x00080a3a(%rip),%rsi
000000000002656e	movq	%rbx,%rdi
0000000000026571	movq	0x0005db60(%rip),%rax
0000000000026578	popq	%rbx
0000000000026579	popq	%r12
000000000002657b	popq	%r14
000000000002657d	popq	%r15
000000000002657f	popq	%rbp
0000000000026580	jmp	*%rax
-[PBXGDB_SyntheticDataValue contextDictionary]:
0000000000026582	pushq	%rbp
0000000000026583	movq	%rsp,%rbp
0000000000026586	pushq	%r14
0000000000026588	pushq	%rbx
0000000000026589	movq	%rdi,%rbx
000000000002658c	movq	0x00088af5(%rip),%rax
0000000000026593	movq	(%rbx,%rax),%rax
0000000000026597	testq	%rax,%rax
000000000002659a	jne	0x000265cf
000000000002659c	movq	0x0007e7dd(%rip),%rsi
00000000000265a3	movq	0x00081f06(%rip),%rdi
00000000000265aa	movq	0x0005db27(%rip),%r14
00000000000265b1	call	*%r14
00000000000265b4	movq	0x00080975(%rip),%rsi
00000000000265bb	movq	%rbx,%rdi
00000000000265be	movq	%rax,%rdx
00000000000265c1	call	*%r14
00000000000265c4	movq	0x00088abd(%rip),%rax
00000000000265cb	movq	(%rbx,%rax),%rax
00000000000265cf	popq	%rbx
00000000000265d0	popq	%r14
00000000000265d2	popq	%rbp
00000000000265d3	ret
-[PBXGDB_SyntheticDataValue setContextDictionary:]:
00000000000265d4	pushq	%rbp
00000000000265d5	movq	%rsp,%rbp
00000000000265d8	movq	%rdx,%rax
00000000000265db	movq	%rdi,%rcx
00000000000265de	movq	0x00088aa3(%rip),%rdx
00000000000265e5	cmpq	%rax,(%rcx,%rdx)
00000000000265e9	jne	0x000265ed
00000000000265eb	popq	%rbp
00000000000265ec	ret
00000000000265ed	addq	%rcx,%rdx
00000000000265f0	subq	%rcx,%rdx
00000000000265f3	movq	%rax,%rdi
00000000000265f6	movq	%rcx,%rsi
00000000000265f9	popq	%rbp
00000000000265fa	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
+[PBXGDB_SyntheticDataValue variableValueStringKey]:
00000000000265ff	pushq	%rbp
0000000000026600	movq	%rsp,%rbp
0000000000026603	leaq	0x0008dcee(%rip),%rax
000000000002660a	popq	%rbp
000000000002660b	ret
+[PBXGDB_OpResult resultWithObject:type:]:
000000000002660c	pushq	%rbp
000000000002660d	movq	%rsp,%rbp
0000000000026610	pushq	%r14
0000000000026612	pushq	%rbx
0000000000026613	movq	%rcx,%r14
0000000000026616	movq	%rdx,%rbx
0000000000026619	leaq	0x00081d10(%rip),%rsi
0000000000026620	call	*0x00081d0a(%rip)
0000000000026626	leaq	0x00081cb3(%rip),%rsi
000000000002662d	movq	%rax,%rdi
0000000000026630	call	*0x00081caa(%rip)
0000000000026636	movq	0x000802fb(%rip),%rsi
000000000002663d	movq	%rax,%rdi
0000000000026640	movq	%rbx,%rdx
0000000000026643	movq	%r14,%rcx
0000000000026646	popq	%rbx
0000000000026647	popq	%r14
0000000000026649	popq	%rbp
000000000002664a	jmp	*0x0005da88(%rip)
-[PBXGDB_OpResult initWithObject:type:]:
0000000000026650	pushq	%rbp
0000000000026651	movq	%rsp,%rbp
0000000000026654	pushq	%r15
0000000000026656	pushq	%r14
0000000000026658	pushq	%rbx
0000000000026659	subq	$0x18,%rsp
000000000002665d	movq	%rcx,%r14
0000000000026660	movq	%rdx,%r15
0000000000026663	movq	%rdi,0xd8(%rbp)
0000000000026667	movq	0x000828da(%rip),%rax
000000000002666e	movq	%rax,0xe0(%rbp)
0000000000026672	movq	0x0007e3f7(%rip),%rsi
0000000000026679	leaq	0xd8(%rbp),%rdi
000000000002667d	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000026682	movq	%rax,%rbx
0000000000026685	testq	%rbx,%rbx
0000000000026688	je	0x000266b4
000000000002668a	testq	%r15,%r15
000000000002668d	je	0x000266a1
000000000002668f	movq	0x0008889a(%rip),%rdx
0000000000026696	movq	%r15,%rdi
0000000000026699	movq	%rbx,%rsi
000000000002669c	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000266a1	movq	0x00080298(%rip),%rsi
00000000000266a8	movq	%rbx,%rdi
00000000000266ab	movq	%r14,%rdx
00000000000266ae	call	*0x0005da24(%rip)
00000000000266b4	movq	%rbx,%rax
00000000000266b7	addq	$0x18,%rsp
00000000000266bb	popq	%rbx
00000000000266bc	popq	%r14
00000000000266be	popq	%r15
00000000000266c0	popq	%rbp
00000000000266c1	ret
-[PBXGDB_OpResult setResultType:]:
00000000000266c2	pushq	%rbp
00000000000266c3	movq	%rsp,%rbp
00000000000266c6	movq	%rdx,%rax
00000000000266c9	movq	%rdi,%rcx
00000000000266cc	movq	0x00088865(%rip),%rdx
00000000000266d3	cmpq	%rax,(%rcx,%rdx)
00000000000266d7	jne	0x000266db
00000000000266d9	popq	%rbp
00000000000266da	ret
00000000000266db	addq	%rcx,%rdx
00000000000266de	subq	%rcx,%rdx
00000000000266e1	movq	%rax,%rdi
00000000000266e4	movq	%rcx,%rsi
00000000000266e7	popq	%rbp
00000000000266e8	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_SyntheticDataValue setBaseValueResult:]:
00000000000266ed	pushq	%rbp
00000000000266ee	movq	%rsp,%rbp
00000000000266f1	pushq	%r15
00000000000266f3	pushq	%r14
00000000000266f5	pushq	%rbx
00000000000266f6	pushq	%rax
00000000000266f7	movq	%rdx,%r15
00000000000266fa	movq	%rdi,%rbx
00000000000266fd	movq	0x0008086c(%rip),%rsi
0000000000026704	call	*0x0005d9ce(%rip)
000000000002670a	movq	%rax,%r14
000000000002670d	leaq	0x00081c1c(%rip),%rsi
0000000000026714	movq	%rbx,%rdi
0000000000026717	testq	%r15,%r15
000000000002671a	jne	0x00026752
000000000002671c	call	*0x00081c0e(%rip)
0000000000026722	movq	0x0008084f(%rip),%rsi
0000000000026729	movq	%rax,%rdi
000000000002672c	call	*0x0005d9a6(%rip)
0000000000026732	movq	0x0007ec27(%rip),%rsi
0000000000026739	movq	%r14,%rdi
000000000002673c	movq	%rax,%rdx
000000000002673f	movq	0x0005d992(%rip),%rax
0000000000026746	addq	$0x08,%rsp
000000000002674a	popq	%rbx
000000000002674b	popq	%r14
000000000002674d	popq	%r15
000000000002674f	popq	%rbp
0000000000026750	jmp	*%rax
0000000000026752	call	*0x00081bd8(%rip)
0000000000026758	movq	0x00080819(%rip),%rsi
000000000002675f	movq	%rax,%rdi
0000000000026762	call	*0x0005d970(%rip)
0000000000026768	movq	0x0007e5c1(%rip),%rsi
000000000002676f	movq	%r14,%rdi
0000000000026772	movq	%r15,%rdx
0000000000026775	movq	%rax,%rcx
0000000000026778	movq	0x0005d959(%rip),%rax
000000000002677f	addq	$0x08,%rsp
0000000000026783	popq	%rbx
0000000000026784	popq	%r14
0000000000026786	popq	%r15
0000000000026788	popq	%rbp
0000000000026789	jmp	*%rax
+[PBXGDB_SyntheticDataValue baseValueResultKey]:
000000000002678b	pushq	%rbp
000000000002678c	movq	%rsp,%rbp
000000000002678f	leaq	0x0008dba2(%rip),%rax
0000000000026796	popq	%rbp
0000000000026797	ret
-[PBXLSType canBeDynamic]:
0000000000026798	pushq	%rbp
0000000000026799	movq	%rsp,%rbp
000000000002679c	movq	0x00088c9d(%rip),%rax
00000000000267a3	movsbl	(%rdi,%rax),%eax
00000000000267a7	popq	%rbp
00000000000267a8	ret
-[PBXGDB_SyntheticDataValue _doStep_ContentValueFetch]:
00000000000267a9	pushq	%rbp
00000000000267aa	movq	%rsp,%rbp
00000000000267ad	pushq	%r15
00000000000267af	pushq	%r14
00000000000267b1	pushq	%rbx
00000000000267b2	pushq	%rax
00000000000267b3	movq	%rdi,%r15
00000000000267b6	movq	0x0008086b(%rip),%rsi
00000000000267bd	movq	0x0005d914(%rip),%rbx
00000000000267c4	call	*%rbx
00000000000267c6	movq	%rax,%r14
00000000000267c9	movq	0x0007f7f8(%rip),%rsi
00000000000267d0	movq	%r15,%rdi
00000000000267d3	call	*%rbx
00000000000267d5	testq	%r14,%r14
00000000000267d8	je	0x00026878
00000000000267de	movq	0x0007f7eb(%rip),%rsi
00000000000267e5	movq	%rax,%rdi
00000000000267e8	call	*0x0005d8ea(%rip)
00000000000267ee	movq	%rax,%rbx
00000000000267f1	movq	0x00081c58(%rip),%rdi
00000000000267f8	leaq	0x00081b31(%rip),%rsi
00000000000267ff	call	*0x00081b2b(%rip)
0000000000026805	leaq	0x00081b34(%rip),%rsi
000000000002680c	movq	%rbx,%rdi
000000000002680f	movq	%rax,%rdx
0000000000026812	call	*0x00081b28(%rip)
0000000000026818	testb	%al,%al
000000000002681a	je	0x00026852
000000000002681c	leaq	0x00081b3d(%rip),%rsi
0000000000026823	leaq	0x0008aa8e(%rip),%rdx
000000000002682a	movq	%rbx,%rdi
000000000002682d	call	*0x00081b2d(%rip)
0000000000026833	testb	%al,%al
0000000000026835	jne	0x000268a8
0000000000026837	leaq	0x00081b22(%rip),%rsi
000000000002683e	leaq	0x00089253(%rip),%rdx
0000000000026845	movq	%rbx,%rdi
0000000000026848	call	*0x00081b12(%rip)
000000000002684e	testb	%al,%al
0000000000026850	jne	0x000268a8
0000000000026852	movq	0x000807af(%rip),%rsi
0000000000026859	movq	0x000807d0(%rip),%rcx
0000000000026860	movq	%r14,%rdi
0000000000026863	movq	%r15,%rdx
0000000000026866	call	*0x0005d86c(%rip)
000000000002686c	movq	0x0008079d(%rip),%rsi
0000000000026873	movq	%r14,%rdi
0000000000026876	jmp	0x00026895
0000000000026878	movq	0x00080799(%rip),%rsi
000000000002687f	movq	%r15,%rdi
0000000000026882	movq	%rax,%rdx
0000000000026885	call	*0x0005d84d(%rip)
000000000002688b	movq	0x0008078e(%rip),%rsi
0000000000026892	movq	%r15,%rdi
0000000000026895	movq	0x0005d83c(%rip),%rax
000000000002689c	addq	$0x08,%rsp
00000000000268a0	popq	%rbx
00000000000268a1	popq	%r14
00000000000268a3	popq	%r15
00000000000268a5	popq	%rbp
00000000000268a6	jmp	*%rax
00000000000268a8	movq	0x00080749(%rip),%rsi
00000000000268af	leaq	0x0008db02(%rip),%rdx
00000000000268b6	movq	%r15,%rdi
00000000000268b9	addq	$0x08,%rsp
00000000000268bd	popq	%rbx
00000000000268be	popq	%r14
00000000000268c0	popq	%r15
00000000000268c2	popq	%rbp
00000000000268c3	jmp	*0x0005d80f(%rip)
-[PBXGDB_SyntheticDataValue contentValueFetchOperation]:
00000000000268c9	pushq	%rbp
00000000000268ca	movq	%rsp,%rbp
00000000000268cd	pushq	%r15
00000000000268cf	pushq	%r14
00000000000268d1	pushq	%rbx
00000000000268d2	pushq	%rax
00000000000268d3	movq	%rdi,%rbx
00000000000268d6	movq	0x0007f6eb(%rip),%rsi
00000000000268dd	movq	0x0005d7f4(%rip),%r15
00000000000268e4	call	*%r15
00000000000268e7	movq	0x0008064a(%rip),%rsi
00000000000268ee	movq	%rax,%rdi
00000000000268f1	call	*%r15
00000000000268f4	movq	%rax,%r14
00000000000268f7	movq	0x0008065a(%rip),%rsi
00000000000268fe	movq	0x00081f8b(%rip),%rdi
0000000000026905	call	*%r15
0000000000026908	movq	0x00088799(%rip),%rcx
000000000002690f	movq	(%rbx,%rcx),%r8
0000000000026913	movq	0x00080636(%rip),%rsi
000000000002691a	movq	0x0008063f(%rip),%r9
0000000000026921	movq	%rbx,%rdi
0000000000026924	movq	%r14,%rdx
0000000000026927	movq	%rax,%rcx
000000000002692a	call	*%r15
000000000002692d	movq	0x00088774(%rip),%rax
0000000000026934	movq	(%rbx,%rax),%rax
0000000000026938	addq	$0x08,%rsp
000000000002693c	popq	%rbx
000000000002693d	popq	%r14
000000000002693f	popq	%r15
0000000000026941	popq	%rbp
0000000000026942	ret
-[PBXGDB_SyntheticDataValue baseValueResult]:
0000000000026943	pushq	%rbp
0000000000026944	movq	%rsp,%rbp
0000000000026947	pushq	%r15
0000000000026949	pushq	%r14
000000000002694b	pushq	%rbx
000000000002694c	pushq	%rax
000000000002694d	movq	%rdi,%rbx
0000000000026950	movq	0x00080619(%rip),%rsi
0000000000026957	movq	0x0005d77a(%rip),%r15
000000000002695e	call	*%r15
0000000000026961	movq	%rax,%r14
0000000000026964	leaq	0x000819c5(%rip),%rsi
000000000002696b	movq	%rbx,%rdi
000000000002696e	call	*0x000819bc(%rip)
0000000000026974	movq	0x000805fd(%rip),%rsi
000000000002697b	movq	%rax,%rdi
000000000002697e	call	*%r15
0000000000026981	leaq	0x000819c8(%rip),%rsi
0000000000026988	movq	0x000819c1(%rip),%rcx
000000000002698f	movq	%r14,%rdi
0000000000026992	movq	%rax,%rdx
0000000000026995	addq	$0x08,%rsp
0000000000026999	popq	%rbx
000000000002699a	popq	%r14
000000000002699c	popq	%r15
000000000002699e	popq	%rbp
000000000002699f	jmp	*%rcx
-[PBXGDB_OpResult resultType]:
00000000000269a1	pushq	%rbp
00000000000269a2	movq	%rsp,%rbp
00000000000269a5	movq	0x0008858c(%rip),%rax
00000000000269ac	movq	(%rdi,%rax),%rax
00000000000269b0	popq	%rbp
00000000000269b1	ret
-[PBXGDB_SyntheticDataValue _setupFetchOperationFromType:operationClassNameKey:currentFetchOperation:setterSelector:]:
00000000000269b2	pushq	%rbp
00000000000269b3	movq	%rsp,%rbp
00000000000269b6	pushq	%r15
00000000000269b8	pushq	%r14
00000000000269ba	pushq	%r13
00000000000269bc	pushq	%r12
00000000000269be	pushq	%rbx
00000000000269bf	pushq	%rax
00000000000269c0	movq	%r9,%r14
00000000000269c3	movq	%r8,%r13
00000000000269c6	movq	%rcx,%rbx
00000000000269c9	movq	%rdi,%r12
00000000000269cc	movq	0x0008053d(%rip),%rsi
00000000000269d3	movq	%rdx,%rdi
00000000000269d6	call	*0x0005d6fc(%rip)
00000000000269dc	movq	%rax,%r15
00000000000269df	testq	%r15,%r15
00000000000269e2	je	0x00026a51
00000000000269e4	leaq	0x00081965(%rip),%rsi
00000000000269eb	movq	%r15,%rdi
00000000000269ee	movq	%rbx,%rdx
00000000000269f1	call	*0x00081959(%rip)
00000000000269f7	movq	%rax,%rbx
00000000000269fa	testq	%rbx,%rbx
00000000000269fd	je	0x00026a51
00000000000269ff	testq	%r13,%r13
0000000000026a02	je	0x00026a33
0000000000026a04	leaq	0x00081925(%rip),%rsi
0000000000026a0b	movq	%r13,%rdi
0000000000026a0e	call	*0x0008191c(%rip)
0000000000026a14	movq	%rax,%rdi
0000000000026a17	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000026a1c	leaq	0x0008193d(%rip),%rsi
0000000000026a23	movq	%rax,%rdi
0000000000026a26	movq	%rbx,%rdx
0000000000026a29	call	*0x00081931(%rip)
0000000000026a2f	testb	%al,%al
0000000000026a31	jne	0x00026a74
0000000000026a33	movq	%rbx,%rdi
0000000000026a36	callq	0x0004e5ba	; symbol stub for: _NSClassFromString
0000000000026a3b	testq	%rax,%rax
0000000000026a3e	jne	0x00026a83
0000000000026a40	leaq	0x0008d951(%rip),%rdi
0000000000026a47	movq	%rbx,%rsi
0000000000026a4a	xorb	%al,%al
0000000000026a4c	callq	0x0004e5c0	; symbol stub for: _NSLog
0000000000026a51	movq	0x0007ee38(%rip),%rsi
0000000000026a58	movq	%r12,%rdi
0000000000026a5b	movq	%r14,%rdx
0000000000026a5e	xorl	%ecx,%ecx
0000000000026a60	addq	$0x08,%rsp
0000000000026a64	popq	%rbx
0000000000026a65	popq	%r12
0000000000026a67	popq	%r13
0000000000026a69	popq	%r14
0000000000026a6b	popq	%r15
0000000000026a6d	popq	%rbp
0000000000026a6e	jmp	*0x0005d664(%rip)
0000000000026a74	addq	$0x08,%rsp
0000000000026a78	popq	%rbx
0000000000026a79	popq	%r12
0000000000026a7b	popq	%r13
0000000000026a7d	popq	%r14
0000000000026a7f	popq	%r15
0000000000026a81	popq	%rbp
0000000000026a82	ret
0000000000026a83	leaq	0x00081856(%rip),%rsi
0000000000026a8a	movq	%rax,%rdi
0000000000026a8d	call	*0x0008184d(%rip)
0000000000026a93	movq	0x0007f4e6(%rip),%rsi
0000000000026a9a	movq	%rax,%rdi
0000000000026a9d	movq	%r15,%rdx
0000000000026aa0	movq	%r12,%rcx
0000000000026aa3	call	*0x0005d62f(%rip)
0000000000026aa9	movq	0x0007ede0(%rip),%rsi
0000000000026ab0	movq	%r12,%rdi
0000000000026ab3	movq	%r14,%rdx
0000000000026ab6	movq	%rax,%rcx
0000000000026ab9	movq	0x0005d618(%rip),%rax
0000000000026ac0	addq	$0x08,%rsp
0000000000026ac4	popq	%rbx
0000000000026ac5	popq	%r12
0000000000026ac7	popq	%r13
0000000000026ac9	popq	%r14
0000000000026acb	popq	%r15
0000000000026acd	popq	%rbp
0000000000026ace	jmp	*%rax
-[PBXGDB_SyntheticDataValue setContentValueFetchOperation:]:
0000000000026ad0	pushq	%rbp
0000000000026ad1	movq	%rsp,%rbp
0000000000026ad4	pushq	%r14
0000000000026ad6	pushq	%rbx
0000000000026ad7	movq	%rdx,%r14
0000000000026ada	movq	%rdi,%rbx
0000000000026add	movq	0x000885c4(%rip),%rax
0000000000026ae4	movq	(%rbx,%rax),%rdi
0000000000026ae8	cmpq	%r14,%rdi
0000000000026aeb	jne	0x00026af2
0000000000026aed	popq	%rbx
0000000000026aee	popq	%r14
0000000000026af0	popq	%rbp
0000000000026af1	ret
0000000000026af2	movq	0x0007f427(%rip),%rsi
0000000000026af9	xorl	%edx,%edx
0000000000026afb	call	*0x0005d5d7(%rip)
0000000000026b01	movq	0x000885a0(%rip),%rdx
0000000000026b08	movq	%r14,%rdi
0000000000026b0b	movq	%rbx,%rsi
0000000000026b0e	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000026b13	movq	0x0008858e(%rip),%rax
0000000000026b1a	movq	(%rbx,%rax),%rdi
0000000000026b1e	movq	0x0007f3fb(%rip),%rsi
0000000000026b25	movq	%rbx,%rdx
0000000000026b28	movq	0x0005d5a9(%rip),%rax
0000000000026b2f	popq	%rbx
0000000000026b30	popq	%r14
0000000000026b32	popq	%rbp
0000000000026b33	jmp	*%rax
-[PBXGDB_SyntheticDataValue setContentValueResult:]:
0000000000026b35	pushq	%rbp
0000000000026b36	movq	%rsp,%rbp
0000000000026b39	pushq	%r15
0000000000026b3b	pushq	%r14
0000000000026b3d	pushq	%rbx
0000000000026b3e	pushq	%rax
0000000000026b3f	movq	%rdx,%r15
0000000000026b42	movq	%rdi,%rbx
0000000000026b45	movq	0x00080424(%rip),%rsi
0000000000026b4c	call	*0x0005d586(%rip)
0000000000026b52	movq	%rax,%r14
0000000000026b55	leaq	0x000817d4(%rip),%rsi
0000000000026b5c	movq	%rbx,%rdi
0000000000026b5f	testq	%r15,%r15
0000000000026b62	jne	0x00026b9a
0000000000026b64	call	*0x000817c6(%rip)
0000000000026b6a	movq	0x0008040f(%rip),%rsi
0000000000026b71	movq	%rax,%rdi
0000000000026b74	call	*0x0005d55e(%rip)
0000000000026b7a	movq	0x0007e7df(%rip),%rsi
0000000000026b81	movq	%r14,%rdi
0000000000026b84	movq	%rax,%rdx
0000000000026b87	movq	0x0005d54a(%rip),%rax
0000000000026b8e	addq	$0x08,%rsp
0000000000026b92	popq	%rbx
0000000000026b93	popq	%r14
0000000000026b95	popq	%r15
0000000000026b97	popq	%rbp
0000000000026b98	jmp	*%rax
0000000000026b9a	call	*0x00081790(%rip)
0000000000026ba0	movq	0x000803d9(%rip),%rsi
0000000000026ba7	movq	%rax,%rdi
0000000000026baa	call	*0x0005d528(%rip)
0000000000026bb0	movq	0x0007e179(%rip),%rsi
0000000000026bb7	movq	%r14,%rdi
0000000000026bba	movq	%r15,%rdx
0000000000026bbd	movq	%rax,%rcx
0000000000026bc0	movq	0x0005d511(%rip),%rax
0000000000026bc7	addq	$0x08,%rsp
0000000000026bcb	popq	%rbx
0000000000026bcc	popq	%r14
0000000000026bce	popq	%r15
0000000000026bd0	popq	%rbp
0000000000026bd1	jmp	*%rax
+[PBXGDB_SyntheticDataValue contentValueResultKey]:
0000000000026bd3	pushq	%rbp
0000000000026bd4	movq	%rsp,%rbp
0000000000026bd7	leaq	0x0008d77a(%rip),%rax
0000000000026bde	popq	%rbp
0000000000026bdf	ret
-[PBXGDB_SyntheticDataValue _doStep_ContentSummaryFetch]:
0000000000026be0	pushq	%rbp
0000000000026be1	movq	%rsp,%rbp
0000000000026be4	pushq	%r15
0000000000026be6	pushq	%r14
0000000000026be8	pushq	%rbx
0000000000026be9	pushq	%rax
0000000000026bea	movq	%rdi,%rbx
0000000000026bed	movq	0x000803fc(%rip),%rsi
0000000000026bf4	movq	0x0005d4dd(%rip),%r15
0000000000026bfb	call	*%r15
0000000000026bfe	movq	%rax,%r14
0000000000026c01	movq	0x00080270(%rip),%rsi
0000000000026c08	movq	%rbx,%rdi
0000000000026c0b	call	*%r15
0000000000026c0e	testq	%r14,%r14
0000000000026c11	je	0x00026cb9
0000000000026c17	movq	0x0007f3b2(%rip),%rsi
0000000000026c1e	movq	%rax,%rdi
0000000000026c21	call	*0x0005d4b1(%rip)
0000000000026c27	movq	%rax,%r15
0000000000026c2a	movq	0x0008181f(%rip),%rdi
0000000000026c31	leaq	0x000816f8(%rip),%rsi
0000000000026c38	call	*0x000816f2(%rip)
0000000000026c3e	leaq	0x000816fb(%rip),%rsi
0000000000026c45	movq	%r15,%rdi
0000000000026c48	movq	%rax,%rdx
0000000000026c4b	call	*0x000816ef(%rip)
0000000000026c51	testb	%al,%al
0000000000026c53	je	0x00026c93
0000000000026c55	leaq	0x00081704(%rip),%rsi
0000000000026c5c	leaq	0x0008a655(%rip),%rdx
0000000000026c63	movq	%r15,%rdi
0000000000026c66	call	*0x000816f4(%rip)
0000000000026c6c	testb	%al,%al
0000000000026c6e	jne	0x00026d15
0000000000026c74	leaq	0x000816e5(%rip),%rsi
0000000000026c7b	leaq	0x00088e16(%rip),%rdx
0000000000026c82	movq	%r15,%rdi
0000000000026c85	call	*0x000816d5(%rip)
0000000000026c8b	testb	%al,%al
0000000000026c8d	jne	0x00026d15
0000000000026c93	movq	0x0008036e(%rip),%rsi
0000000000026c9a	movq	0x0008035f(%rip),%rcx
0000000000026ca1	movq	%r14,%rdi
0000000000026ca4	movq	%rbx,%rdx
0000000000026ca7	call	*0x0005d42b(%rip)
0000000000026cad	movq	0x0008035c(%rip),%rsi
0000000000026cb4	movq	%r14,%rdi
0000000000026cb7	jmp	0x00026cdb
0000000000026cb9	movq	0x00080320(%rip),%rsi
0000000000026cc0	movq	%rbx,%rdi
0000000000026cc3	testq	%rax,%rax
0000000000026cc6	je	0x00026cee
0000000000026cc8	movq	%rax,%rdx
0000000000026ccb	call	*0x0005d407(%rip)
0000000000026cd1	movq	0x00080310(%rip),%rsi
0000000000026cd8	movq	%rbx,%rdi
0000000000026cdb	movq	0x0005d3f6(%rip),%rax
0000000000026ce2	addq	$0x08,%rsp
0000000000026ce6	popq	%rbx
0000000000026ce7	popq	%r14
0000000000026ce9	popq	%r15
0000000000026ceb	popq	%rbp
0000000000026cec	jmp	*%rax
0000000000026cee	xorl	%edx,%edx
0000000000026cf0	call	*0x0005d3e2(%rip)
0000000000026cf6	movq	0x000802fb(%rip),%rsi
0000000000026cfd	movq	%rbx,%rdi
0000000000026d00	xorl	%edx,%edx
0000000000026d02	movq	0x0005d3cf(%rip),%rax
0000000000026d09	addq	$0x08,%rsp
0000000000026d0d	popq	%rbx
0000000000026d0e	popq	%r14
0000000000026d10	popq	%r15
0000000000026d12	popq	%rbp
0000000000026d13	jmp	*%rax
0000000000026d15	movq	0x000802dc(%rip),%rsi
0000000000026d1c	leaq	0x0008d695(%rip),%rdx
0000000000026d23	movq	%rbx,%rdi
0000000000026d26	addq	$0x08,%rsp
0000000000026d2a	popq	%rbx
0000000000026d2b	popq	%r14
0000000000026d2d	popq	%r15
0000000000026d2f	popq	%rbp
0000000000026d30	jmp	*0x0005d3a2(%rip)
-[PBXGDB_SyntheticDataValue contentSummaryFetchOperation]:
0000000000026d36	pushq	%rbp
0000000000026d37	movq	%rsp,%rbp
0000000000026d3a	pushq	%r15
0000000000026d3c	pushq	%r14
0000000000026d3e	pushq	%rbx
0000000000026d3f	pushq	%rax
0000000000026d40	movq	%rdi,%r14
0000000000026d43	movq	0x0008012e(%rip),%rsi
0000000000026d4a	movq	0x0005d387(%rip),%rbx
0000000000026d51	call	*%rbx
0000000000026d53	movq	0x000801de(%rip),%rsi
0000000000026d5a	movq	%rax,%rdi
0000000000026d5d	call	*%rbx
0000000000026d5f	movq	%rax,%rbx
0000000000026d62	testq	%rbx,%rbx
0000000000026d65	jne	0x00026d89
0000000000026d67	movq	0x0007f25a(%rip),%rsi
0000000000026d6e	movq	0x0005d363(%rip),%rbx
0000000000026d75	movq	%r14,%rdi
0000000000026d78	call	*%rbx
0000000000026d7a	movq	0x000801b7(%rip),%rsi
0000000000026d81	movq	%rax,%rdi
0000000000026d84	call	*%rbx
0000000000026d86	movq	%rax,%rbx
0000000000026d89	movq	0x000801b0(%rip),%rsi
0000000000026d90	movq	0x00081af9(%rip),%rdi
0000000000026d97	movq	0x0005d33a(%rip),%r15
0000000000026d9e	call	*%r15
0000000000026da1	movq	0x000882f8(%rip),%rcx
0000000000026da8	movq	(%r14,%rcx),%r8
0000000000026dac	movq	0x0008019d(%rip),%rsi
0000000000026db3	movq	0x0008018e(%rip),%r9
0000000000026dba	movq	%r14,%rdi
0000000000026dbd	movq	%rbx,%rdx
0000000000026dc0	movq	%rax,%rcx
0000000000026dc3	call	*%r15
0000000000026dc6	movq	0x000882d3(%rip),%rax
0000000000026dcd	movq	(%r14,%rax),%rax
0000000000026dd1	addq	$0x08,%rsp
0000000000026dd5	popq	%rbx
0000000000026dd6	popq	%r14
0000000000026dd8	popq	%r15
0000000000026dda	popq	%rbp
0000000000026ddb	ret
-[PBXGDB_SyntheticDataValue contentValueResult]:
0000000000026ddc	pushq	%rbp
0000000000026ddd	movq	%rsp,%rbp
0000000000026de0	pushq	%r15
0000000000026de2	pushq	%r14
0000000000026de4	pushq	%rbx
0000000000026de5	pushq	%rax
0000000000026de6	movq	%rdi,%rbx
0000000000026de9	movq	0x00080180(%rip),%rsi
0000000000026df0	movq	0x0005d2e1(%rip),%r15
0000000000026df7	call	*%r15
0000000000026dfa	movq	%rax,%r14
0000000000026dfd	leaq	0x0008152c(%rip),%rsi
0000000000026e04	movq	%rbx,%rdi
0000000000026e07	call	*0x00081523(%rip)
0000000000026e0d	movq	0x0008016c(%rip),%rsi
0000000000026e14	movq	%rax,%rdi
0000000000026e17	call	*%r15
0000000000026e1a	leaq	0x0008152f(%rip),%rsi
0000000000026e21	movq	0x00081528(%rip),%rcx
0000000000026e28	movq	%r14,%rdi
0000000000026e2b	movq	%rax,%rdx
0000000000026e2e	addq	$0x08,%rsp
0000000000026e32	popq	%rbx
0000000000026e33	popq	%r14
0000000000026e35	popq	%r15
0000000000026e37	popq	%rbp
0000000000026e38	jmp	*%rcx
-[PBXGDB_EvalOperation initWithDescription:syntheticDataValue:]:
0000000000026e3a	pushq	%rbp
0000000000026e3b	movq	%rsp,%rbp
0000000000026e3e	pushq	%r14
0000000000026e40	pushq	%rbx
0000000000026e41	subq	$0x10,%rsp
0000000000026e45	movq	%rcx,%r14
0000000000026e48	movq	%rdi,0xe0(%rbp)
0000000000026e4c	movq	0x00081f95(%rip),%rax
0000000000026e53	movq	%rax,0xe8(%rbp)
0000000000026e57	movq	0x0007dc12(%rip),%rsi
0000000000026e5e	leaq	0xe0(%rbp),%rdi
0000000000026e62	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000026e67	movq	%rax,%rbx
0000000000026e6a	testq	%rbx,%rbx
0000000000026e6d	je	0x00026e82
0000000000026e6f	movq	0x0007f0aa(%rip),%rsi
0000000000026e76	movq	%rbx,%rdi
0000000000026e79	movq	%r14,%rdx
0000000000026e7c	call	*0x0005d256(%rip)
0000000000026e82	movq	%rbx,%rax
0000000000026e85	addq	$0x10,%rsp
0000000000026e89	popq	%rbx
0000000000026e8a	popq	%r14
0000000000026e8c	popq	%rbp
0000000000026e8d	ret
-[PBXGDB_EvalOperation setSyntheticDataValue:]:
0000000000026e8e	pushq	%rbp
0000000000026e8f	movq	%rsp,%rbp
0000000000026e92	movq	%rdx,%rax
0000000000026e95	movq	%rdi,%rcx
0000000000026e98	movq	0x00087af9(%rip),%rdx
0000000000026e9f	movq	%rax,%rdi
0000000000026ea2	movq	%rcx,%rsi
0000000000026ea5	popq	%rbp
0000000000026ea6	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_SyntheticDataValue setContentSummaryFetchOperation:]:
0000000000026eab	pushq	%rbp
0000000000026eac	movq	%rsp,%rbp
0000000000026eaf	pushq	%r14
0000000000026eb1	pushq	%rbx
0000000000026eb2	movq	%rdx,%r14
0000000000026eb5	movq	%rdi,%rbx
0000000000026eb8	movq	0x000881e1(%rip),%rax
0000000000026ebf	movq	(%rbx,%rax),%rdi
0000000000026ec3	cmpq	%r14,%rdi
0000000000026ec6	jne	0x00026ecd
0000000000026ec8	popq	%rbx
0000000000026ec9	popq	%r14
0000000000026ecb	popq	%rbp
0000000000026ecc	ret
0000000000026ecd	movq	0x0007f04c(%rip),%rsi
0000000000026ed4	xorl	%edx,%edx
0000000000026ed6	call	*0x0005d1fc(%rip)
0000000000026edc	movq	0x000881bd(%rip),%rdx
0000000000026ee3	movq	%r14,%rdi
0000000000026ee6	movq	%rbx,%rsi
0000000000026ee9	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000026eee	movq	0x000881ab(%rip),%rax
0000000000026ef5	movq	(%rbx,%rax),%rdi
0000000000026ef9	movq	0x0007f020(%rip),%rsi
0000000000026f00	movq	%rbx,%rdx
0000000000026f03	movq	0x0005d1ce(%rip),%rax
0000000000026f0a	popq	%rbx
0000000000026f0b	popq	%r14
0000000000026f0d	popq	%rbp
0000000000026f0e	jmp	*%rax
-[PBXGDB_OpResult resultObject]:
0000000000026f10	pushq	%rbp
0000000000026f11	movq	%rsp,%rbp
0000000000026f14	movq	0x00088015(%rip),%rax
0000000000026f1b	movq	(%rdi,%rax),%rax
0000000000026f1f	popq	%rbp
0000000000026f20	ret
-[PBXGDB_EvalOperation setFinishTarget:action:]:
0000000000026f21	pushq	%rbp
0000000000026f22	movq	%rsp,%rbp
0000000000026f25	pushq	%r14
0000000000026f27	pushq	%rbx
0000000000026f28	movq	%rcx,%r14
0000000000026f2b	movq	%rdx,%rax
0000000000026f2e	movq	%rdi,%rbx
0000000000026f31	movq	0x00087a50(%rip),%rdx
0000000000026f38	movq	%rax,%rdi
0000000000026f3b	movq	%rbx,%rsi
0000000000026f3e	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000026f43	movq	0x00087a46(%rip),%rax
0000000000026f4a	movq	%r14,(%rbx,%rax)
0000000000026f4e	popq	%rbx
0000000000026f4f	popq	%r14
0000000000026f51	popq	%rbp
0000000000026f52	ret
-[PBXGDB_StringFetchOperation perform]:
0000000000026f53	pushq	%rbp
0000000000026f54	movq	%rsp,%rbp
0000000000026f57	pushq	%r15
0000000000026f59	pushq	%r14
0000000000026f5b	pushq	%rbx
0000000000026f5c	pushq	%rax
0000000000026f5d	movq	%rdi,%r15
0000000000026f60	movq	0x0007efd9(%rip),%rsi
0000000000026f67	movq	0x0005d16a(%rip),%rbx
0000000000026f6e	call	*%rbx
0000000000026f70	movq	0x0007ff01(%rip),%rsi
0000000000026f77	movq	%rax,%rdi
0000000000026f7a	call	*%rbx
0000000000026f7c	testq	%rax,%rax
0000000000026f7f	je	0x0002708a
0000000000026f85	movq	0x0007f044(%rip),%rsi
0000000000026f8c	movq	%rax,%rdi
0000000000026f8f	call	*0x0005d143(%rip)
0000000000026f95	movq	%rax,%r14
0000000000026f98	movq	0x000814b1(%rip),%rdi
0000000000026f9f	leaq	0x0008138a(%rip),%rsi
0000000000026fa6	call	*0x00081384(%rip)
0000000000026fac	leaq	0x0008138d(%rip),%rsi
0000000000026fb3	movq	%r14,%rdi
0000000000026fb6	movq	%rax,%rdx
0000000000026fb9	call	*0x00081381(%rip)
0000000000026fbf	testb	%al,%al
0000000000026fc1	je	0x0002708a
0000000000026fc7	movq	0x0007feb2(%rip),%rsi
0000000000026fce	movq	%r15,%rdi
0000000000026fd1	call	*0x0005d101(%rip)
0000000000026fd7	leaq	0x00081302(%rip),%rsi
0000000000026fde	movq	%rax,%rdi
0000000000026fe1	call	*0x000812f9(%rip)
0000000000026fe7	movq	0x0007da82(%rip),%rsi
0000000000026fee	movq	%rax,%rdi
0000000000026ff1	call	*0x0005d0e1(%rip)
0000000000026ff7	movq	%rax,%rbx
0000000000026ffa	movq	0x0007fe87(%rip),%rsi
0000000000027001	movq	0x00081940(%rip),%rdi
0000000000027008	movq	%r14,%rdx
000000000002700b	call	*0x0005d0c7(%rip)
0000000000027011	movq	0x0007eff8(%rip),%rsi
0000000000027018	movq	%rbx,%rdi
000000000002701b	movq	%rax,%rdx
000000000002701e	call	*0x0005d0b4(%rip)
0000000000027024	movq	0x0007f04d(%rip),%rsi
000000000002702b	movq	%r15,%rdi
000000000002702e	call	*0x0005d0a4(%rip)
0000000000027034	movq	0x0007fe55(%rip),%rsi
000000000002703b	movq	%rbx,%rdi
000000000002703e	movq	%rax,%rdx
0000000000027041	call	*0x0005d091(%rip)
0000000000027047	movq	0x0007fe4a(%rip),%rsi
000000000002704e	movq	%r15,%rdi
0000000000027051	call	*0x0005d081(%rip)
0000000000027057	movq	0x0007fe42(%rip),%rsi
000000000002705e	movq	%rbx,%rdi
0000000000027061	movq	%rax,%rdx
0000000000027064	call	*0x0005d06e(%rip)
000000000002706a	movq	0x0007ef6f(%rip),%rsi
0000000000027071	movq	%r15,%rdi
0000000000027074	movq	%rbx,%rdx
0000000000027077	movq	0x0005d05a(%rip),%rax
000000000002707e	addq	$0x08,%rsp
0000000000027082	popq	%rbx
0000000000027083	popq	%r14
0000000000027085	popq	%r15
0000000000027087	popq	%rbp
0000000000027088	jmp	*%rax
000000000002708a	movq	0x0007ef57(%rip),%rsi
0000000000027091	movq	%r15,%rdi
0000000000027094	addq	$0x08,%rsp
0000000000027098	popq	%rbx
0000000000027099	popq	%r14
000000000002709b	popq	%r15
000000000002709d	popq	%rbp
000000000002709e	jmp	*0x0005d034(%rip)
-[PBXGDB_EvalOperation syntheticDataValue]:
00000000000270a4	pushq	%rbp
00000000000270a5	movq	%rsp,%rbp
00000000000270a8	movq	0x000878e9(%rip),%rax
00000000000270af	movq	(%rdi,%rax),%rax
00000000000270b3	popq	%rbp
00000000000270b4	ret
-[PBXGDB_CStringFetchOperation stringFetchSequenceClass]:
00000000000270b5	pushq	%rbp
00000000000270b6	movq	%rsp,%rbp
00000000000270b9	movq	0x00081270(%rip),%rax
00000000000270c0	movq	0x00081989(%rip),%rdi
00000000000270c7	leaq	0x00081262(%rip),%rsi
00000000000270ce	popq	%rbp
00000000000270cf	jmp	*%rax
-[PBXGDB_EvaluationSequence init]:
00000000000270d1	pushq	%rbp
00000000000270d2	movq	%rsp,%rbp
00000000000270d5	subq	$0x10,%rsp
00000000000270d9	movq	%rdi,0xf0(%rbp)
00000000000270dd	movq	0x00081d0c(%rip),%rax
00000000000270e4	movq	%rax,0xf8(%rbp)
00000000000270e8	movq	0x0007d981(%rip),%rsi
00000000000270ef	leaq	0xf0(%rbp),%rdi
00000000000270f3	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000270f8	testq	%rax,%rax
00000000000270fb	je	0x0002710b
00000000000270fd	leaq	0x0008772c(%rip),%rcx
0000000000027104	movq	(%rcx),%rcx
0000000000027107	movb	$0x01,(%rax,%rcx)
000000000002710b	addq	$0x10,%rsp
000000000002710f	popq	%rbp
0000000000027110	ret
+[PBXLSAddressValue addressValueWithString:]:
0000000000027111	pushq	%rbp
0000000000027112	movq	%rsp,%rbp
0000000000027115	pushq	%rbx
0000000000027116	pushq	%rax
0000000000027117	movq	%rdx,%rbx
000000000002711a	movq	0x00081827(%rip),%rdi
0000000000027121	leaq	0x000811b8(%rip),%rsi
0000000000027128	call	*0x000811b2(%rip)
000000000002712e	movq	0x0007f3eb(%rip),%rsi
0000000000027135	movq	%rax,%rdi
0000000000027138	movq	%rbx,%rdx
000000000002713b	addq	$0x08,%rsp
000000000002713f	popq	%rbx
0000000000027140	popq	%rbp
0000000000027141	jmp	*0x0005cf91(%rip)
-[PBXLSAddressValue initWithAddressString:]:
0000000000027147	pushq	%rbp
0000000000027148	movq	%rsp,%rbp
000000000002714b	pushq	%r14
000000000002714d	pushq	%rbx
000000000002714e	subq	$0x10,%rsp
0000000000027152	movq	%rdx,%r14
0000000000027155	movq	%rdi,0xe0(%rbp)
0000000000027159	movq	0x00081e80(%rip),%rax
0000000000027160	movq	%rax,0xe8(%rbp)
0000000000027164	movq	0x0007d905(%rip),%rsi
000000000002716b	leaq	0xe0(%rbp),%rdi
000000000002716f	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000027174	movq	%rax,%rbx
0000000000027177	movq	0x0007d9b2(%rip),%rsi
000000000002717e	movq	%r14,%rdi
0000000000027181	call	*0x0005cf51(%rip)
0000000000027187	movq	%rax,%rdi
000000000002718a	xorl	%esi,%esi
000000000002718c	xorl	%edx,%edx
000000000002718e	callq	0x0004e71c	; symbol stub for: _strtoull
0000000000027193	movq	0x00087fc6(%rip),%rcx
000000000002719a	movq	%rax,(%rbx,%rcx)
000000000002719e	movq	(%rbx,%rcx),%rdi
00000000000271a2	callq	_xcodePBXLSAddressAddressString
00000000000271a7	movq	0x00087fba(%rip),%rdx
00000000000271ae	movq	%rax,%rdi
00000000000271b1	movq	%rbx,%rsi
00000000000271b4	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000271b9	movq	%rbx,%rax
00000000000271bc	addq	$0x10,%rsp
00000000000271c0	popq	%rbx
00000000000271c1	popq	%r14
00000000000271c3	popq	%rbp
00000000000271c4	ret
-[PBXGDB_FetchStringSequence setBaseAddress:]:
00000000000271c5	pushq	%rbp
00000000000271c6	movq	%rsp,%rbp
00000000000271c9	movq	%rdx,%rax
00000000000271cc	movq	%rdi,%rcx
00000000000271cf	movq	0x0008780a(%rip),%rdx
00000000000271d6	cmpq	%rax,(%rcx,%rdx)
00000000000271da	jne	0x000271de
00000000000271dc	popq	%rbp
00000000000271dd	ret
00000000000271de	addq	%rcx,%rdx
00000000000271e1	subq	%rcx,%rdx
00000000000271e4	movq	%rax,%rdi
00000000000271e7	movq	%rcx,%rsi
00000000000271ea	popq	%rbp
00000000000271eb	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_StringFetchOperation bytesPerCharacter]:
00000000000271f0	pushq	%rbp
00000000000271f1	movq	%rsp,%rbp
00000000000271f4	movl	$0x00000001,%eax
00000000000271f9	popq	%rbp
00000000000271fa	ret
-[PBXGDB_FetchStringSequence setBytesPerCharacter:]:
00000000000271fb	pushq	%rbp
00000000000271fc	movq	%rsp,%rbp
00000000000271ff	movq	0x000877e2(%rip),%rax
0000000000027206	movq	%rdx,(%rdi,%rax)
000000000002720a	popq	%rbp
000000000002720b	ret
-[PBXGDB_StringFetchOperation charactersToRead]:
000000000002720c	pushq	%rbp
000000000002720d	movq	%rsp,%rbp
0000000000027210	movl	$0x00000064,%eax
0000000000027215	popq	%rbp
0000000000027216	ret
-[PBXGDB_FetchStringSequence setNumberOfCharacters:]:
0000000000027217	pushq	%rbp
0000000000027218	movq	%rsp,%rbp
000000000002721b	movq	0x000877ce(%rip),%rax
0000000000027222	movq	%rdx,(%rdi,%rax)
0000000000027226	popq	%rbp
0000000000027227	ret
-[PBXGDB_EvalOperation enqueueSequence:]:
0000000000027228	pushq	%rbp
0000000000027229	movq	%rsp,%rbp
000000000002722c	pushq	%r14
000000000002722e	pushq	%rbx
000000000002722f	movq	%rdx,%r14
0000000000027232	movq	%rdi,%rbx
0000000000027235	movq	0x0007d87c(%rip),%rsi
000000000002723c	call	*0x0005ce96(%rip)
0000000000027242	movq	0x0007db87(%rip),%rsi
0000000000027249	movq	%rax,%rdi
000000000002724c	call	*0x0005ce86(%rip)
0000000000027252	movq	0x0007db7f(%rip),%rsi
0000000000027259	movq	%r14,%rdi
000000000002725c	movq	%rax,%rdx
000000000002725f	call	*0x0005ce73(%rip)
0000000000027265	movq	0x0007ecdc(%rip),%rsi
000000000002726c	movq	%r14,%rdi
000000000002726f	movq	%rbx,%rdx
0000000000027272	call	*0x0005ce60(%rip)
0000000000027278	movq	0x0007d839(%rip),%rsi
000000000002727f	movq	%rbx,%rdi
0000000000027282	call	*0x0005ce50(%rip)
0000000000027288	movq	0x0007db41(%rip),%rsi
000000000002728f	movq	%rax,%rdi
0000000000027292	call	*0x0005ce40(%rip)
0000000000027298	movq	0x0007db41(%rip),%rsi
000000000002729f	movq	%rax,%rdi
00000000000272a2	movq	%r14,%rdx
00000000000272a5	movq	0x0005ce2c(%rip),%rax
00000000000272ac	popq	%rbx
00000000000272ad	popq	%r14
00000000000272af	popq	%rbp
00000000000272b0	jmp	*%rax
-[PBXGDB_EvalOperation gdbAdaptor]:
00000000000272b2	pushq	%rbp
00000000000272b3	movq	%rsp,%rbp
00000000000272b6	movq	0x0007ec83(%rip),%rsi
00000000000272bd	call	*0x0005ce15(%rip)
00000000000272c3	movq	0x0007d7ee(%rip),%rsi
00000000000272ca	movq	%rax,%rdi
00000000000272cd	movq	0x0005ce04(%rip),%rax
00000000000272d4	popq	%rbp
00000000000272d5	jmp	*%rax
-[PBXGDB_EvaluationSequence setOperation:]:
00000000000272d7	pushq	%rbp
00000000000272d8	movq	%rsp,%rbp
00000000000272db	movq	%rdx,%rax
00000000000272de	movq	%rdi,%rcx
00000000000272e1	movq	0x000876d0(%rip),%rdx
00000000000272e8	movq	%rax,%rdi
00000000000272eb	movq	%rcx,%rsi
00000000000272ee	popq	%rbp
00000000000272ef	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MICreateVarObjCommand setExpression:bindToFrame:]:
00000000000272f4	pushq	%rbp
00000000000272f5	movq	%rsp,%rbp
00000000000272f8	pushq	%r15
00000000000272fa	pushq	%r14
00000000000272fc	pushq	%rbx
00000000000272fd	pushq	%rax
00000000000272fe	movl	%ecx,%ebx
0000000000027300	movq	%rdx,%r15
0000000000027303	movq	%rdi,%r14
0000000000027306	movq	0x00081143(%rip),%rdi
000000000002730d	leaq	0x00080fcc(%rip),%rsi
0000000000027314	call	*0x00080fc6(%rip)
000000000002731a	leaq	0x0008c797(%rip),%rdx
0000000000027321	leaq	0x0008c7b0(%rip),%rcx
0000000000027328	testb	%bl,%bl
000000000002732a	cmoveq	%rdx,%rcx
000000000002732e	movq	0x0007d983(%rip),%rsi
0000000000027335	leaq	0x0008c75c(%rip),%rdx
000000000002733c	movq	%rax,%rdi
000000000002733f	movq	%r15,%r8
0000000000027342	xorb	%al,%al
0000000000027344	call	*0x0005cd8e(%rip)
000000000002734a	leaq	0x000877df(%rip),%rcx
0000000000027351	movq	(%rcx),%rdx
0000000000027354	movq	%rax,%rdi
0000000000027357	movq	%r14,%rsi
000000000002735a	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000002735f	movq	0x00087b6a(%rip),%rdx
0000000000027366	movq	%r15,%rdi
0000000000027369	movq	%r14,%rsi
000000000002736c	addq	$0x08,%rsp
0000000000027370	popq	%rbx
0000000000027371	popq	%r14
0000000000027373	popq	%r15
0000000000027375	popq	%rbp
0000000000027376	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_UnicharStringFetchOperation stringFetchSequenceClass]:
000000000002737b	pushq	%rbp
000000000002737c	movq	%rsp,%rbp
000000000002737f	movq	0x00080faa(%rip),%rax
0000000000027386	movq	0x000816c3(%rip),%rdi
000000000002738d	leaq	0x00080f9c(%rip),%rsi
0000000000027394	popq	%rbp
0000000000027395	jmp	*%rax
-[PBXGDB_UnicharStringFetchOperation bytesPerCharacter]:
0000000000027397	pushq	%rbp
0000000000027398	movq	%rsp,%rbp
000000000002739b	movl	$0x00000002,%eax
00000000000273a0	popq	%rbp
00000000000273a1	ret
-[PBXLSType isBOOLOrBooleanType]:
00000000000273a2	pushq	%rbp
00000000000273a3	movq	%rsp,%rbp
00000000000273a6	pushq	%rbx
00000000000273a7	pushq	%rax
00000000000273a8	movq	%rdi,%rbx
00000000000273ab	movq	0x0008807e(%rip),%rax
00000000000273b2	movq	(%rbx,%rax),%rdi
00000000000273b6	leaq	0x00080fa3(%rip),%rsi
00000000000273bd	leaq	0x0008c554(%rip),%rdx
00000000000273c4	call	*0x00080f96(%rip)
00000000000273ca	movb	$0x01,%cl
00000000000273cc	testb	%al,%al
00000000000273ce	jne	0x000273f4
00000000000273d0	movq	0x00088059(%rip),%rax
00000000000273d7	movq	(%rbx,%rax),%rdi
00000000000273db	leaq	0x00080f7e(%rip),%rsi
00000000000273e2	leaq	0x0008e50f(%rip),%rdx
00000000000273e9	call	*0x00080f71(%rip)
00000000000273ef	testb	%al,%al
00000000000273f1	setne	%cl
00000000000273f4	movzbl	%cl,%eax
00000000000273f7	addq	$0x08,%rsp
00000000000273fb	popq	%rbx
00000000000273fc	popq	%rbp
00000000000273fd	ret
-[PBXGDB_FetchStringSequence execute]:
00000000000273fe	pushq	%rbp
00000000000273ff	movq	%rsp,%rbp
0000000000027402	movq	0x0007e537(%rip),%rsi
0000000000027409	popq	%rbp
000000000002740a	jmp	*0x0005ccc8(%rip)
-[PBXGDB_FetchStringSequence fetchStringBuffer]:
0000000000027410	pushq	%rbp
0000000000027411	movq	%rsp,%rbp
0000000000027414	pushq	%r15
0000000000027416	pushq	%r14
0000000000027418	pushq	%r13
000000000002741a	pushq	%r12
000000000002741c	pushq	%rbx
000000000002741d	subq	$0x18,%rsp
0000000000027421	movq	%rdi,%r13
0000000000027424	movq	0x0007ec1d(%rip),%rsi
000000000002742b	call	*0x0005cca7(%rip)
0000000000027431	movq	%rax,%r14
0000000000027434	testq	%r14,%r14
0000000000027437	je	0x000275ab
000000000002743d	movq	0x0007ec0c(%rip),%rsi
0000000000027444	movq	0x0005cc8d(%rip),%r15
000000000002744b	movq	%r13,%rdi
000000000002744e	call	*%r15
0000000000027451	movq	0x0007ec00(%rip),%rsi
0000000000027458	movq	%rax,%rdi
000000000002745b	call	*%r15
000000000002745e	movq	%rax,%r12
0000000000027461	movq	0x0007ebe8(%rip),%rsi
0000000000027468	movq	%r13,%rdi
000000000002746b	call	*%r15
000000000002746e	movq	0x0007e4db(%rip),%rsi
0000000000027475	movq	%rax,%rdi
0000000000027478	call	*%r15
000000000002747b	movq	%rax,0xd0(%rbp)
000000000002747f	movq	0x0007d632(%rip),%rsi
0000000000027486	movq	%r13,%rdi
0000000000027489	call	*%r15
000000000002748c	movl	$0x00000400,%ecx
0000000000027491	movq	0x00087550(%rip),%rdx
0000000000027498	movq	0x00(%r13,%rdx),%rbx
000000000002749d	imulq	%r14,%rbx
00000000000274a1	cmpq	$0x00000400,%rbx
00000000000274a8	cmovaq	%rcx,%rbx
00000000000274ac	movq	0x0007ebad(%rip),%rsi
00000000000274b3	movq	%rax,%rdi
00000000000274b6	movq	%r12,%rdx
00000000000274b9	movq	%rbx,%rcx
00000000000274bc	call	*%r15
00000000000274bf	testq	%rax,%rax
00000000000274c2	je	0x00027502
00000000000274c4	movq	0x0007eb9d(%rip),%rsi
00000000000274cb	movq	0x00080fae(%rip),%rdi
00000000000274d2	movq	%rax,%rdx
00000000000274d5	movq	%rbx,%rcx
00000000000274d8	call	*0x0005cbfa(%rip)
00000000000274de	movq	0x0007eb5b(%rip),%rsi
00000000000274e5	movq	%r13,%rdi
00000000000274e8	movq	%rax,%rdx
00000000000274eb	movq	0x0005cbe6(%rip),%rax
00000000000274f2	addq	$0x18,%rsp
00000000000274f6	popq	%rbx
00000000000274f7	popq	%r12
00000000000274f9	popq	%r13
00000000000274fb	popq	%r14
00000000000274fd	popq	%r15
00000000000274ff	popq	%rbp
0000000000027500	jmp	*%rax
0000000000027502	movq	0x0007d577(%rip),%rsi
0000000000027509	movq	0x00081398(%rip),%rdi
0000000000027510	call	*0x0005cbc2(%rip)
0000000000027516	movq	%rax,%r12
0000000000027519	movq	0x0007d568(%rip),%rsi
0000000000027520	movq	%r12,%rdi
0000000000027523	movq	%r13,%rdx
0000000000027526	call	*0x0005cbac(%rip)
000000000002752c	movq	0x0007d565(%rip),%rsi
0000000000027533	movq	0x0007eb36(%rip),%rdx
000000000002753a	movq	%r12,%rdi
000000000002753d	call	*0x0005cb95(%rip)
0000000000027543	movq	0x0007eb2e(%rip),%rsi
000000000002754a	movq	%r13,%rdi
000000000002754d	call	*0x0005cb85(%rip)
0000000000027553	movq	0x0007eb26(%rip),%rsi
000000000002755a	movq	%r14,(%rsp)
000000000002755e	movq	%r12,%rdi
0000000000027561	movq	0xd0(%rbp),%rdx
0000000000027565	movl	$0x00000001,%ecx
000000000002756a	movq	%rax,%r8
000000000002756d	movl	$0x00000001,%r9d
0000000000027573	call	*0x0005cb5f(%rip)
0000000000027579	movq	0x0007d538(%rip),%rsi
0000000000027580	movq	%r13,%rdi
0000000000027583	call	*0x0005cb4f(%rip)
0000000000027589	movq	0x0007d530(%rip),%rsi
0000000000027590	movq	%rax,%rdi
0000000000027593	call	*0x0005cb3f(%rip)
0000000000027599	movq	0x0007d528(%rip),%rsi
00000000000275a0	movq	%rax,%rdi
00000000000275a3	movq	%r12,%rdx
00000000000275a6	jmp	0x000274eb
00000000000275ab	movq	0x0007e3ee(%rip),%rsi
00000000000275b2	movq	%r13,%rdi
00000000000275b5	addq	$0x18,%rsp
00000000000275b9	popq	%rbx
00000000000275ba	popq	%r12
00000000000275bc	popq	%r13
00000000000275be	popq	%r14
00000000000275c0	popq	%r15
00000000000275c2	popq	%rbp
00000000000275c3	jmp	*0x0005cb0f(%rip)
-[PBXGDB_FetchStringSequence numberOfCharactersForStringBuffer]:
00000000000275c9	pushq	%rbp
00000000000275ca	movq	%rsp,%rbp
00000000000275cd	movq	0x0007ea44(%rip),%rsi
00000000000275d4	popq	%rbp
00000000000275d5	jmp	*0x0005cafd(%rip)
-[PBXGDB_FetchStringSequence numberOfCharacters]:
00000000000275db	pushq	%rbp
00000000000275dc	movq	%rsp,%rbp
00000000000275df	movq	0x0008740a(%rip),%rax
00000000000275e6	movq	(%rdi,%rax),%rax
00000000000275ea	popq	%rbp
00000000000275eb	ret
-[PBXGDB_FetchStringSequence stringBufferAddressValue]:
00000000000275ec	pushq	%rbp
00000000000275ed	movq	%rsp,%rbp
00000000000275f0	movq	0x0007e351(%rip),%rsi
00000000000275f7	popq	%rbp
00000000000275f8	jmp	*0x0005cada(%rip)
-[PBXGDB_FetchStringSequence baseAddressValue]:
00000000000275fe	pushq	%rbp
00000000000275ff	movq	%rsp,%rbp
0000000000027602	movq	0x000873d7(%rip),%rax
0000000000027609	movq	(%rdi,%rax),%rax
000000000002760d	popq	%rbp
000000000002760e	ret
-[PBXLSAddressValue location]:
000000000002760f	pushq	%rbp
0000000000027610	movq	%rsp,%rbp
0000000000027613	movq	0x00087b46(%rip),%rax
000000000002761a	movq	(%rdi,%rax),%rax
000000000002761e	popq	%rbp
000000000002761f	ret
-[PBXLSAddressValue hexStringValue]:
0000000000027620	pushq	%rbp
0000000000027621	movq	%rsp,%rbp
0000000000027624	movq	0x00087b3d(%rip),%rax
000000000002762b	movq	(%rdi,%rax),%rax
000000000002762f	popq	%rbp
0000000000027630	ret
-[PBXGDB_Adaptor mappedBufferFromInferior:length:]:
0000000000027631	pushq	%rbp
0000000000027632	movq	%rsp,%rbp
0000000000027635	xorl	%eax,%eax
0000000000027637	popq	%rbp
0000000000027638	ret
-[PBXGDB_FetchStringSequence bytesPerCharacter]:
0000000000027639	pushq	%rbp
000000000002763a	movq	%rsp,%rbp
000000000002763d	movq	0x000873a4(%rip),%rax
0000000000027644	movq	(%rdi,%rax),%rax
0000000000027648	popq	%rbp
0000000000027649	ret
000000000002764a	nop
000000000002764b	nop
-[PBXGDB_MIReadMemoryCommand setBaseAddressString:format:bytesPerWord:rows:wordsPerRow:]:
000000000002764c	pushq	%rbp
000000000002764d	movq	%rsp,%rbp
0000000000027650	pushq	%r15
0000000000027652	pushq	%r14
0000000000027654	pushq	%r13
0000000000027656	pushq	%r12
0000000000027658	pushq	%rbx
0000000000027659	subq	$0x18,%rsp
000000000002765d	movl	%ecx,%r12d
0000000000027660	movq	%rdx,%r14
0000000000027663	movq	%rdi,%rbx
0000000000027666	movq	0x000875fb(%rip),%rax
000000000002766d	movq	%r9,(%rbx,%rax)
0000000000027671	movq	0x10(%rbp),%rax
0000000000027675	movq	0x000875f4(%rip),%rcx
000000000002767c	movq	%rax,(%rbx,%rcx)
0000000000027680	movq	0x000875f1(%rip),%rax
0000000000027687	movq	%r8,(%rbx,%rax)
000000000002768b	leaq	0x00080c4e(%rip),%rsi
0000000000027692	movq	0x00080db7(%rip),%rdi
0000000000027699	call	*0x00080c41(%rip)
000000000002769f	movq	%rax,%r15
00000000000276a2	movq	0x0005ca2f(%rip),%r13
00000000000276a9	movq	0x0007ee68(%rip),%rsi
00000000000276b0	movq	0x00081289(%rip),%rdi
00000000000276b7	movl	%r12d,%edx
00000000000276ba	call	*%r13
00000000000276bd	movq	0x000875b4(%rip),%rcx
00000000000276c4	movq	(%rbx,%rcx),%r9
00000000000276c8	movq	0x00087599(%rip),%rcx
00000000000276cf	movq	(%rbx,%rcx),%rcx
00000000000276d3	movq	0x00087596(%rip),%rdx
00000000000276da	movq	(%rbx,%rdx),%rdi
00000000000276de	movq	0x0007d5d3(%rip),%rsi
00000000000276e5	leaq	0x0008ab8c(%rip),%rdx
00000000000276ec	movq	%rdi,0x08(%rsp)
00000000000276f1	movq	%rcx,(%rsp)
00000000000276f5	movq	%r15,%rdi
00000000000276f8	movq	%r14,%rcx
00000000000276fb	movq	%rax,%r8
00000000000276fe	xorb	%al,%al
0000000000027700	call	*%r13
0000000000027703	leaq	0x00087426(%rip),%rcx
000000000002770a	movq	(%rcx),%rdx
000000000002770d	movq	%rax,%rdi
0000000000027710	movq	%rbx,%rsi
0000000000027713	addq	$0x18,%rsp
0000000000027717	popq	%rbx
0000000000027718	popq	%r12
000000000002771a	popq	%r13
000000000002771c	popq	%r14
000000000002771e	popq	%r15
0000000000027720	popq	%rbp
0000000000027721	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000027726	nop
0000000000027727	nop
+[PBXGDB_MITypes specifierCharacterForFormat:]:
0000000000027728	pushq	%rbp
0000000000027729	movq	%rsp,%rbp
000000000002772c	decl	%edx
000000000002772e	cmpl	$0x05,%edx
0000000000027731	ja	0x0002776e
0000000000027733	leaq	0x0008bcde(%rip),%rax
000000000002773a	leaq	0x00000037(%rip),%rsi
0000000000027741	movslq	(%rsi,%rdx,4),%rcx
0000000000027745	addq	%rsi,%rcx
0000000000027748	jmp	*%rcx
000000000002774a	leaq	0x0008bce7(%rip),%rax
0000000000027751	jmp	0x00027775
0000000000027753	leaq	0x0008bcfe(%rip),%rax
000000000002775a	jmp	0x00027775
000000000002775c	leaq	0x0008bd15(%rip),%rax
0000000000027763	jmp	0x00027775
0000000000027765	leaq	0x0008bd2c(%rip),%rax
000000000002776c	jmp	0x00027775
000000000002776e	leaq	0x0008bd43(%rip),%rax
0000000000027775	popq	%rbp
0000000000027776	ret
0000000000027777	nop
0000000000027778	inb	$0xff,%al
000000000002777a	.byte 0xff, 0xff #bad opcode
000000000002777c	sarb	%cl,%bh
000000000002777e	.byte 0xff, 0xff #bad opcode
0000000000027780	std
0000000000027781	.byte 0xff, 0xff #bad opcode
0000000000027783	pushq	%rsi
0000000000027785	.byte 0xff, 0xff #bad opcode
0000000000027787	ljmpl	*%ebp
0000000000027789	.byte 0xff, 0xff #bad opcode
000000000002778b	lcalll	*%ebx
000000000002778d	.byte 0xff, 0xff #bad opcode
000000000002778f	call	*0x90909090(%rax)
0000000000027795	nop
0000000000027796	nop
0000000000027797	nop
0000000000027798	nop
0000000000027799	nop
000000000002779a	nop
000000000002779b	nop
000000000002779c	nop
000000000002779d	nop
-[DBGGDBDataValue setContainsFunctionExpressions:]:
000000000002779e	pushq	%rbp
000000000002779f	movq	%rsp,%rbp
00000000000277a2	movq	0x00087ef7(%rip),%rax
00000000000277a9	movq	(%rdi,%rax),%rdi
00000000000277ad	movq	0x00080aec(%rip),%rsi
00000000000277b4	popq	%rbp
00000000000277b5	jmp	*0x0005c91d(%rip)
-[PBXLSDataValue setContainsFunctionExpressions:]:
00000000000277bb	pushq	%rbp
00000000000277bc	movq	%rsp,%rbp
00000000000277bf	movq	0x00087ac2(%rip),%rax
00000000000277c6	movb	%dl,(%rdi,%rax)
00000000000277c9	popq	%rbp
00000000000277ca	ret
-[DBGGDBDataType isUnknownType]:
00000000000277cb	pushq	%rbp
00000000000277cc	movq	%rsp,%rbp
00000000000277cf	movq	0x0007faaa(%rip),%rsi
00000000000277d6	call	*0x0005c8fc(%rip)
00000000000277dc	testl	%eax,%eax
00000000000277de	sete	%al
00000000000277e1	movzbl	%al,%eax
00000000000277e4	popq	%rbp
00000000000277e5	ret
-[DBGGDBDataType typeCode]:
00000000000277e6	pushq	%rbp
00000000000277e7	movq	%rsp,%rbp
00000000000277ea	movq	0x00087edf(%rip),%rax
00000000000277f1	movl	(%rdi,%rax),%eax
00000000000277f4	popq	%rbp
00000000000277f5	ret
00000000000277f6	nop
00000000000277f7	nop
00000000000277f8	nop
00000000000277f9	nop
00000000000277fa	nop
00000000000277fb	nop
00000000000277fc	nop
00000000000277fd	nop
00000000000277fe	nop
00000000000277ff	nop
0000000000027800	nop
0000000000027801	nop
0000000000027802	nop
+[DBGGDBDataValue keyPathsForValuesAffectingValueValidity]:
0000000000027803	pushq	%rbp
0000000000027804	movq	%rsp,%rbp
0000000000027807	movq	0x0008094a(%rip),%rsi
000000000002780e	movq	0x00080e5b(%rip),%rdi
0000000000027815	leaq	0x0008f11c(%rip),%rdx
000000000002781c	popq	%rbp
000000000002781d	jmp	*0x0005c8b5(%rip)
0000000000027823	nop
0000000000027824	nop
0000000000027825	nop
0000000000027826	nop
0000000000027827	nop
0000000000027828	nop
0000000000027829	nop
000000000002782a	nop
000000000002782b	nop
000000000002782c	nop
000000000002782d	nop
-[DBGGDBDataValue valueValidity]:
000000000002782e	pushq	%rbp
000000000002782f	movq	%rsp,%rbp
0000000000027832	movq	0x0008079f(%rip),%rsi
0000000000027839	call	*0x0005c899(%rip)
000000000002783f	movq	0x0007dd92(%rip),%rsi
0000000000027846	movq	%rax,%rdi
0000000000027849	movq	0x0005c888(%rip),%rax
0000000000027850	popq	%rbp
0000000000027851	jmp	*%rax
0000000000027853	nop
0000000000027854	nop
0000000000027855	nop
-[PBXGDB_MIReadMemoryCommand didFinishWithResultList:]:
0000000000027856	pushq	%rbp
0000000000027857	movq	%rsp,%rbp
000000000002785a	pushq	%r14
000000000002785c	pushq	%rbx
000000000002785d	subq	$0x10,%rsp
0000000000027861	movq	%rdx,%r14
0000000000027864	movq	%rdi,%rbx
0000000000027867	movq	0x00087412(%rip),%rdx
000000000002786e	xorl	%edi,%edi
0000000000027870	movq	%rbx,%rsi
0000000000027873	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000027878	movq	0x00087409(%rip),%rax
000000000002787f	movq	$0x00000000,(%rbx,%rax)
0000000000027887	movq	0x00087402(%rip),%rdx
000000000002788e	xorl	%edi,%edi
0000000000027890	movq	%rbx,%rsi
0000000000027893	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000027898	leaq	0xe0(%rbp),%rdi
000000000002789c	movq	$0x7fffffffffffffff,%rax
00000000000278a6	movq	0x000873eb(%rip),%rcx
00000000000278ad	movq	%rax,(%rbx,%rcx)
00000000000278b1	movq	%rbx,0xe0(%rbp)
00000000000278b5	movq	0x000815c4(%rip),%rax
00000000000278bc	movq	%rax,0xe8(%rbp)
00000000000278c0	movq	0x0007e939(%rip),%rsi
00000000000278c7	movq	%r14,%rdx
00000000000278ca	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000278cf	addq	$0x10,%rsp
00000000000278d3	popq	%rbx
00000000000278d4	popq	%r14
00000000000278d6	popq	%rbp
00000000000278d7	ret
-[PBXGDB_FetchStringSequence gotStringMemory:]:
00000000000278d8	pushq	%rbp
00000000000278d9	movq	%rsp,%rbp
00000000000278dc	pushq	%r14
00000000000278de	pushq	%rbx
00000000000278df	subq	$0x40,%rsp
00000000000278e3	movq	%rdx,%r14
00000000000278e6	movq	%rdi,0xe8(%rbp)
00000000000278ea	movq	%rsi,0xe0(%rbp)
00000000000278ee	testq	%r14,%r14
00000000000278f1	jne	0x00027959
00000000000278f3	movq	0x00080fae(%rip),%rdi
00000000000278fa	leaq	0x00080a2f(%rip),%rsi
0000000000027901	call	*0x00080a29(%rip)
0000000000027907	movq	%rax,%rdi
000000000002790a	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000002790f	leaq	0xe8(%rbp),%rdi
0000000000027913	leaq	0xe0(%rbp),%rsi
0000000000027917	leaq	0x00037313(%rip),%rdx
000000000002791e	leaq	0x0003733b(%rip),%rcx
0000000000027925	leaq	0x0008808c(%rip),%r9
000000000002792c	leaq	0x000361cd(%rip),%r8
0000000000027933	leaq	0x000361ca(%rip),%rbx
000000000002793a	movq	%rbx,0x18(%rsp)
000000000002793f	leaq	0x00087ef2(%rip),%rbx
0000000000027946	movq	%rbx,0x10(%rsp)
000000000002794b	movq	%rax,0x08(%rsp)
0000000000027950	movq	%r8,(%rsp)
0000000000027954	jmp	0x00027a01
0000000000027959	movq	0x00080f48(%rip),%rdi
0000000000027960	leaq	0x000809c9(%rip),%rsi
0000000000027967	call	*0x000809c3(%rip)
000000000002796d	leaq	0x000809cc(%rip),%rsi
0000000000027974	movq	%r14,%rdi
0000000000027977	movq	%rax,%rdx
000000000002797a	call	*0x000809c0(%rip)
0000000000027980	testb	%al,%al
0000000000027982	jne	0x00027a0e
0000000000027988	movq	0x00080f19(%rip),%rdi
000000000002798f	leaq	0x0008099a(%rip),%rsi
0000000000027996	call	*0x00080994(%rip)
000000000002799c	movq	%rax,%rdi
000000000002799f	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
00000000000279a4	movq	%rax,%rbx
00000000000279a7	movq	0x0007d2b2(%rip),%rsi
00000000000279ae	movq	%r14,%rdi
00000000000279b1	call	*0x0005c721(%rip)
00000000000279b7	leaq	0x00087e7a(%rip),%r8
00000000000279be	leaq	0x00037325(%rip),%r9
00000000000279c5	leaq	0xe8(%rbp),%rdi
00000000000279c9	leaq	0xe0(%rbp),%rsi
00000000000279cd	leaq	0x0003725d(%rip),%rdx
00000000000279d4	leaq	0x00037285(%rip),%rcx
00000000000279db	movq	%r9,0x20(%rsp)
00000000000279e0	leaq	0x00087ff1(%rip),%r9
00000000000279e7	movq	%r8,0x18(%rsp)
00000000000279ec	movq	%rax,0x10(%rsp)
00000000000279f1	leaq	0x00036108(%rip),%rax
00000000000279f8	movq	%rbx,0x08(%rsp)
00000000000279fd	movq	%rax,(%rsp)
0000000000027a01	movl	$0x0000007b,%r8d
0000000000027a07	xorb	%al,%al
0000000000027a09	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000027a0e	movq	0x0007e613(%rip),%rsi
0000000000027a15	movq	%r14,%rdi
0000000000027a18	call	*0x0005c6ba(%rip)
0000000000027a1e	testb	%al,%al
0000000000027a20	je	0x00027a93
0000000000027a22	movq	0x0007e607(%rip),%rsi
0000000000027a29	leaq	0xdf(%rbp),%rdx
0000000000027a2d	movq	%r14,%rdi
0000000000027a30	call	*0x0005c6a2(%rip)
0000000000027a36	movq	%rax,%rbx
0000000000027a39	movq	0xe8(%rbp),%rdi
0000000000027a3d	movq	0x00086fc4(%rip),%rax
0000000000027a44	cmpb	$0x00,(%rdi,%rax)
0000000000027a48	je	0x00027a81
0000000000027a4a	movq	0x0007e5e7(%rip),%rsi
0000000000027a51	movq	0x0005c680(%rip),%r14
0000000000027a58	movq	%rbx,%rdi
0000000000027a5b	call	*%r14
0000000000027a5e	movq	%rax,%rbx
0000000000027a61	movw	$0x2026,0xdc(%rbp)
0000000000027a67	movq	0x0007d0b2(%rip),%rsi
0000000000027a6e	leaq	0xdc(%rbp),%rdx
0000000000027a72	movq	%rbx,%rdi
0000000000027a75	movl	$0x00000002,%ecx
0000000000027a7a	call	*%r14
0000000000027a7d	movq	0xe8(%rbp),%rdi
0000000000027a81	movq	0x0007e5b8(%rip),%rsi
0000000000027a88	movq	%rbx,%rdx
0000000000027a8b	call	*0x0005c647(%rip)
0000000000027a91	jmp	0x00027aa4
0000000000027a93	movq	0x0007df06(%rip),%rsi
0000000000027a9a	movq	0xe8(%rbp),%rdi
0000000000027a9e	call	*0x0005c634(%rip)
0000000000027aa4	addq	$0x40,%rsp
0000000000027aa8	popq	%rbx
0000000000027aa9	popq	%r14
0000000000027aab	popq	%rbp
0000000000027aac	ret
0000000000027aad	nop
0000000000027aae	nop
-[PBXGDB_MIReadMemoryCommand nextRow]:
0000000000027aaf	pushq	%rbp
0000000000027ab0	movq	%rsp,%rbp
0000000000027ab3	pushq	%r14
0000000000027ab5	pushq	%rbx
0000000000027ab6	movq	%rdi,%rbx
0000000000027ab9	movq	0x000871c0(%rip),%rax
0000000000027ac0	cmpq	$0x00,(%rbx,%rax)
0000000000027ac5	jne	0x00027b19
0000000000027ac7	leaq	0x0008705a(%rip),%rax
0000000000027ace	movq	(%rax),%rax
0000000000027ad1	movq	(%rbx,%rax),%rdi
0000000000027ad5	movq	0x0007cffc(%rip),%rsi
0000000000027adc	leaq	0x00087c15(%rip),%rdx
0000000000027ae3	movq	0x0005c5ee(%rip),%r14
0000000000027aea	call	*%r14
0000000000027aed	movq	0x0007cfec(%rip),%rsi
0000000000027af4	movq	%rax,%rdi
0000000000027af7	call	*%r14
0000000000027afa	movq	0x0007cfe7(%rip),%rsi
0000000000027b01	movq	%rax,%rdi
0000000000027b04	call	*%r14
0000000000027b07	movq	0x00087172(%rip),%rdx
0000000000027b0e	movq	%rax,%rdi
0000000000027b11	movq	%rbx,%rsi
0000000000027b14	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000027b19	movq	0x00087168(%rip),%rax
0000000000027b20	movq	(%rbx,%rax),%rcx
0000000000027b24	testq	%rcx,%rcx
0000000000027b27	jne	0x00027b39
0000000000027b29	xorl	%edx,%edx
0000000000027b2b	movq	0x0008715e(%rip),%rsi
0000000000027b32	cmpq	$0x00,(%rbx,%rsi)
0000000000027b37	je	0x00027b4b
0000000000027b39	incq	%rcx
0000000000027b3c	movq	%rcx,(%rbx,%rax)
0000000000027b40	movq	0x00087141(%rip),%rax
0000000000027b47	movq	(%rbx,%rax),%rdx
0000000000027b4b	xorb	%al,%al
0000000000027b4d	movq	0x00087114(%rip),%rcx
0000000000027b54	cmpq	(%rbx,%rcx),%rdx
0000000000027b58	jae	0x00027bab
0000000000027b5a	movq	0x0008711f(%rip),%rax
0000000000027b61	movq	(%rbx,%rax),%rdi
0000000000027b65	leaq	0x000807b4(%rip),%rsi
0000000000027b6c	call	*0x000807ae(%rip)
0000000000027b72	movq	0x0007cf67(%rip),%rsi
0000000000027b79	movq	%rax,%rdi
0000000000027b7c	call	*0x0005c556(%rip)
0000000000027b82	movq	0x00087107(%rip),%rdx
0000000000027b89	movq	%rax,%rdi
0000000000027b8c	movq	%rbx,%rsi
0000000000027b8f	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000027b94	movb	$0x01,%al
0000000000027b96	movq	$0x7fffffffffffffff,%rcx
0000000000027ba0	movq	0x000870f1(%rip),%rdx
0000000000027ba7	movq	%rcx,(%rbx,%rdx)
0000000000027bab	movzbl	%al,%eax
0000000000027bae	popq	%rbx
0000000000027baf	popq	%r14
0000000000027bb1	popq	%rbp
0000000000027bb2	ret
0000000000027bb3	nop
0000000000027bb4	nop
0000000000027bb5	nop
-[PBXGDB_MIReadMemoryCommand rowValuesAsDataResultStatus:]:
0000000000027bb6	pushq	%rbp
0000000000027bb7	movq	%rsp,%rbp
0000000000027bba	pushq	%r15
0000000000027bbc	pushq	%r14
0000000000027bbe	pushq	%r13
0000000000027bc0	pushq	%r12
0000000000027bc2	pushq	%rbx
0000000000027bc3	subq	$0x28,%rsp
0000000000027bc7	movq	%rdx,0xc0(%rbp)
0000000000027bcb	movq	%rdi,%r14
0000000000027bce	movq	0x0008086b(%rip),%rdi
0000000000027bd5	leaq	0x00080704(%rip),%rsi
0000000000027bdc	call	*0x000806fe(%rip)
0000000000027be2	movq	0x0007ce87(%rip),%rsi
0000000000027be9	movq	%rax,%rdi
0000000000027bec	call	*0x0005c4e6(%rip)
0000000000027bf2	movq	%rax,%r15
0000000000027bf5	movq	0x0007cf24(%rip),%rbx
0000000000027bfc	movq	0x0005c4d5(%rip),%r13
0000000000027c03	jmp	0x00027c1a
0000000000027c05	movq	%r15,%rdi
0000000000027c08	movq	%rbx,%rsi
0000000000027c0b	leaq	0xd0(%rbp),%rdx
0000000000027c0f	movl	$0x00000008,%ecx
0000000000027c14	call	*0x0005c4be(%rip)
0000000000027c1a	movq	%r15,%r12
0000000000027c1d	movq	%r14,%rdi
0000000000027c20	movq	0x0007e909(%rip),%rsi
0000000000027c27	call	*0x0005c4ab(%rip)
0000000000027c2d	movb	$0x01,%cl
0000000000027c2f	testb	%al,%al
0000000000027c31	movq	%r14,%r15
0000000000027c34	je	0x00027d17
0000000000027c3a	movq	%r15,%rdi
0000000000027c3d	movq	0x0007e8f4(%rip),%rsi
0000000000027c44	call	*%r13
0000000000027c47	movq	%rax,%r14
0000000000027c4a	movq	$0x00000000,0xd0(%rbp)
0000000000027c52	movq	%r14,%rdi
0000000000027c55	movq	0x0007e8e4(%rip),%rsi
0000000000027c5c	leaq	0x0008a6d5(%rip),%rdx
0000000000027c63	call	*%r13
0000000000027c66	xorb	%cl,%cl
0000000000027c68	testq	%rax,%rax
0000000000027c6b	je	0x00027d17
0000000000027c71	movq	%r14,%rdi
0000000000027c74	movq	0x0007ceb5(%rip),%rsi
0000000000027c7b	call	*0x0005c457(%rip)
0000000000027c81	movq	%rax,%rdi
0000000000027c84	xorl	%esi,%esi
0000000000027c86	xorl	%edx,%edx
0000000000027c88	callq	0x0004e716	; symbol stub for: _strtol
0000000000027c8d	movq	%rax,0xd0(%rbp)
0000000000027c91	movq	0x00086fe0(%rip),%rcx
0000000000027c98	movq	(%r15,%rcx),%rcx
0000000000027c9c	decq	%rcx
0000000000027c9f	cmpq	$0x07,%rcx
0000000000027ca3	movq	%r15,%r14
0000000000027ca6	movq	%r12,%r15
0000000000027ca9	ja	0x00027c1a
0000000000027caf	leaq	0x0000007a(%rip),%rdx
0000000000027cb6	movslq	(%rdx,%rcx,4),%rcx
0000000000027cba	addq	%rdx,%rcx
0000000000027cbd	jmp	*%rcx
0000000000027cbf	movb	%al,0xcf(%rbp)
0000000000027cc2	movq	%r15,%rdi
0000000000027cc5	movq	%rbx,%rsi
0000000000027cc8	leaq	0xcf(%rbp),%rdx
0000000000027ccc	movl	$0x00000001,%ecx
0000000000027cd1	call	*0x0005c401(%rip)
0000000000027cd7	jmp	0x00027c1a
0000000000027cdc	movw	%ax,0xcc(%rbp)
0000000000027ce0	movq	%r15,%rdi
0000000000027ce3	movq	%rbx,%rsi
0000000000027ce6	leaq	0xcc(%rbp),%rdx
0000000000027cea	movl	$0x00000002,%ecx
0000000000027cef	call	*0x0005c3e3(%rip)
0000000000027cf5	jmp	0x00027c1a
0000000000027cfa	movl	%eax,0xc8(%rbp)
0000000000027cfd	movq	%r15,%rdi
0000000000027d00	movq	%rbx,%rsi
0000000000027d03	leaq	0xc8(%rbp),%rdx
0000000000027d07	movl	$0x00000004,%ecx
0000000000027d0c	call	*0x0005c3c6(%rip)
0000000000027d12	jmp	0x00027c1a
0000000000027d17	movq	0xc0(%rbp),%rax
0000000000027d1b	movb	%cl,(%rax)
0000000000027d1d	movq	%r12,%rax
0000000000027d20	addq	$0x28,%rsp
0000000000027d24	popq	%rbx
0000000000027d25	popq	%r12
0000000000027d27	popq	%r13
0000000000027d29	popq	%r14
0000000000027d2b	popq	%r15
0000000000027d2d	popq	%rbp
0000000000027d2e	ret
0000000000027d2f	nop
0000000000027d30	popq	%rdi
0000000000027d32	.byte 0xff, 0xff #bad opcode
0000000000027d34	lodsb	(%esi),%al
0000000000027d35	.byte 0xff, 0xff #bad opcode
0000000000027d37	ljmpl	*%edx
0000000000027d39	.byte 0xfe, 0xff #bad opcode
0000000000027d3b	decl	%edx
0000000000027d3d	.byte 0xff, 0xff #bad opcode
0000000000027d3f	ljmpl	*%edx
0000000000027d41	.byte 0xfe, 0xff #bad opcode
0000000000027d43	ljmpl	*%edx
0000000000027d45	.byte 0xfe, 0xff #bad opcode
0000000000027d47	ljmpl	*%edx
0000000000027d49	.byte 0xfe, 0xff #bad opcode
0000000000027d4b	call	*%rbp
0000000000027d4d	.byte 0xfe, 0xff #bad opcode
0000000000027d4f	call	*0x48559090(%rax)
0000000000027d55	movl	%esp,%ebp
0000000000027d57	movq	0x00086f3a(%rip),%rax
0000000000027d5e	movq	(%rdi,%rax),%rdx
0000000000027d62	xorl	%ecx,%ecx
0000000000027d64	movq	$0x7fffffffffffffff,%rsi
0000000000027d6e	cmpq	%rsi,%rdx
0000000000027d71	leaq	0x01(%rdx),%rdx
0000000000027d75	cmoveq	%rcx,%rdx
0000000000027d79	movq	%rdx,(%rdi,%rax)
0000000000027d7d	movq	0x00086f14(%rip),%rax
0000000000027d84	movq	(%rdi,%rax),%rax
0000000000027d88	movq	0x00086ee1(%rip),%rcx
0000000000027d8f	cmpq	(%rdi,%rcx),%rax
0000000000027d93	jae	0x00027da9
0000000000027d95	movq	0x00086ef4(%rip),%rax
0000000000027d9c	cmpq	$0x00,(%rdi,%rax)
0000000000027da1	setne	%al
0000000000027da4	movzbl	%al,%eax
0000000000027da7	popq	%rbp
0000000000027da8	ret
0000000000027da9	xorl	%eax,%eax
0000000000027dab	popq	%rbp
0000000000027dac	ret
-[PBXGDB_MIReadMemoryCommand wordStringValue]:
0000000000027dad	pushq	%rbp
0000000000027dae	movq	%rsp,%rbp
0000000000027db1	pushq	%r14
0000000000027db3	pushq	%rbx
0000000000027db4	movq	%rdi,%rbx
0000000000027db7	movq	0x00086ed2(%rip),%rax
0000000000027dbe	movq	(%rbx,%rax),%rdi
0000000000027dc2	testq	%rdi,%rdi
0000000000027dc5	je	0x00027df1
0000000000027dc7	movq	0x0007cd0a(%rip),%rsi
0000000000027dce	leaq	0x00087963(%rip),%rdx
0000000000027dd5	movq	0x0005c2fc(%rip),%r14
0000000000027ddc	call	*%r14
0000000000027ddf	movq	0x0007ccfa(%rip),%rsi
0000000000027de6	movq	%rax,%rdi
0000000000027de9	call	*%r14
0000000000027dec	testq	%rax,%rax
0000000000027def	jne	0x00027df8
0000000000027df1	xorl	%eax,%eax
0000000000027df3	popq	%rbx
0000000000027df4	popq	%r14
0000000000027df6	popq	%rbp
0000000000027df7	ret
0000000000027df8	movq	0x0007cce9(%rip),%rsi
0000000000027dff	movq	%rax,%rdi
0000000000027e02	call	*0x0005c2d0(%rip)
0000000000027e08	movq	0x00086e89(%rip),%rcx
0000000000027e0f	movq	(%rbx,%rcx),%rdx
0000000000027e13	leaq	0x00080506(%rip),%rsi
0000000000027e1a	movq	%rax,%rdi
0000000000027e1d	call	*0x000804fd(%rip)
0000000000027e23	movq	0x0007ccde(%rip),%rsi
0000000000027e2a	movq	%rax,%rdi
0000000000027e2d	movq	0x0005c2a4(%rip),%rax
0000000000027e34	popq	%rbx
0000000000027e35	popq	%r14
0000000000027e37	popq	%rbp
0000000000027e38	jmp	*%rax
-[PBXGDB_FetchStringSequence didFinishWithData:]:
0000000000027e3a	pushq	%rbp
0000000000027e3b	movq	%rsp,%rbp
0000000000027e3e	pushq	%rbx
0000000000027e3f	pushq	%rax
0000000000027e40	movq	%rdi,%rbx
0000000000027e43	movq	0x0007db36(%rip),%rsi
0000000000027e4a	call	*0x0005c288(%rip)
0000000000027e50	movq	0x0007db31(%rip),%rsi
0000000000027e57	movq	%rbx,%rdi
0000000000027e5a	movl	$0x00000001,%edx
0000000000027e5f	call	*0x0005c273(%rip)
0000000000027e65	movq	0x0007cccc(%rip),%rsi
0000000000027e6c	movq	%rbx,%rdi
0000000000027e6f	movq	0x0005c262(%rip),%rax
0000000000027e76	addq	$0x08,%rsp
0000000000027e7a	popq	%rbx
0000000000027e7b	popq	%rbp
0000000000027e7c	jmp	*%rax
-[PBXGDB_FetchStringSequence setResultMemoryData:]:
0000000000027e7e	pushq	%rbp
0000000000027e7f	movq	%rsp,%rbp
0000000000027e82	pushq	%rbx
0000000000027e83	pushq	%rax
0000000000027e84	movq	%rdi,%rbx
0000000000027e87	movq	0x00086b6a(%rip),%rax
0000000000027e8e	cmpq	%rdx,(%rbx,%rax)
0000000000027e92	jne	0x00027e9b
0000000000027e94	addq	$0x08,%rsp
0000000000027e98	popq	%rbx
0000000000027e99	popq	%rbp
0000000000027e9a	ret
0000000000027e9b	movq	0x0007cbd6(%rip),%rsi
0000000000027ea2	movq	%rdx,%rdi
0000000000027ea5	call	*0x0005c22d(%rip)
0000000000027eab	movq	0x00086b46(%rip),%rdx
0000000000027eb2	movq	%rax,%rdi
0000000000027eb5	movq	%rbx,%rsi
0000000000027eb8	addq	$0x08,%rsp
0000000000027ebc	popq	%rbx
0000000000027ebd	popq	%rbp
0000000000027ebe	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_FetchStringSequence setResultStatus:]:
0000000000027ec3	pushq	%rbp
0000000000027ec4	movq	%rsp,%rbp
0000000000027ec7	movq	0x00086b32(%rip),%rax
0000000000027ece	movb	%dl,(%rdi,%rax)
0000000000027ed1	popq	%rbp
0000000000027ed2	ret
-[PBXGDB_EvaluationSequence didFinish]:
0000000000027ed3	pushq	%rbp
0000000000027ed4	movq	%rsp,%rbp
0000000000027ed7	pushq	%rbx
0000000000027ed8	subq	$0x18,%rsp
0000000000027edc	movq	%rdi,%rbx
0000000000027edf	movq	0x0007e082(%rip),%rsi
0000000000027ee6	call	*0x0005c1ec(%rip)
0000000000027eec	testq	%rax,%rax
0000000000027eef	je	0x00027f04
0000000000027ef1	movq	0x0007e060(%rip),%rsi
0000000000027ef8	movq	%rax,%rdi
0000000000027efb	movq	%rbx,%rdx
0000000000027efe	call	*0x0005c1d4(%rip)
0000000000027f04	movq	%rbx,0xe8(%rbp)
0000000000027f08	movq	0x00080ee1(%rip),%rax
0000000000027f0f	movq	%rax,0xf0(%rbp)
0000000000027f13	movq	0x0007cc1e(%rip),%rsi
0000000000027f1a	leaq	0xe8(%rbp),%rdi
0000000000027f1e	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000027f23	addq	$0x18,%rsp
0000000000027f27	popq	%rbx
0000000000027f28	popq	%rbp
0000000000027f29	ret
-[PBXGDB_EvaluationSequence operation]:
0000000000027f2a	pushq	%rbp
0000000000027f2b	movq	%rsp,%rbp
0000000000027f2e	movq	0x00086a83(%rip),%rax
0000000000027f35	movq	(%rdi,%rax),%rax
0000000000027f39	popq	%rbp
0000000000027f3a	ret
-[PBXGDB_StringFetchOperation sequenceDidFinish:]:
0000000000027f3b	pushq	%rbp
0000000000027f3c	movq	%rsp,%rbp
0000000000027f3f	pushq	%r15
0000000000027f41	pushq	%r14
0000000000027f43	pushq	%r12
0000000000027f45	pushq	%rbx
0000000000027f46	subq	$0x50,%rsp
0000000000027f4a	movq	%rdx,%r14
0000000000027f4d	movq	%rdi,0xd8(%rbp)
0000000000027f51	movq	%rsi,0xd0(%rbp)
0000000000027f55	testq	%r14,%r14
0000000000027f58	jne	0x00027fc0
0000000000027f5a	movq	0x00080aef(%rip),%rdi
0000000000027f61	leaq	0x000803c8(%rip),%rsi
0000000000027f68	call	*0x000803c2(%rip)
0000000000027f6e	movq	%rax,%rdi
0000000000027f71	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000027f76	leaq	0xd8(%rbp),%rdi
0000000000027f7a	leaq	0xd0(%rbp),%rsi
0000000000027f7e	leaq	0x00039a0b(%rip),%rdx
0000000000027f85	leaq	0x00039a36(%rip),%rcx
0000000000027f8c	leaq	0x00087a25(%rip),%r9
0000000000027f93	leaq	0x00036b2f(%rip),%r8
0000000000027f9a	leaq	0x00036b35(%rip),%rbx
0000000000027fa1	movq	%rbx,0x18(%rsp)
0000000000027fa6	leaq	0x0008788b(%rip),%rbx
0000000000027fad	movq	%rbx,0x10(%rsp)
0000000000027fb2	movq	%rax,0x08(%rsp)
0000000000027fb7	movq	%r8,(%rsp)
0000000000027fbb	jmp	0x0002806b
0000000000027fc0	movq	0x00080a89(%rip),%rdi
0000000000027fc7	leaq	0x00080362(%rip),%rsi
0000000000027fce	call	*0x0008035c(%rip)
0000000000027fd4	leaq	0x00080365(%rip),%rsi
0000000000027fdb	movq	%r14,%rdi
0000000000027fde	movq	%rax,%rdx
0000000000027fe1	call	*0x00080359(%rip)
0000000000027fe7	testb	%al,%al
0000000000027fe9	movq	%r14,%rbx
0000000000027fec	jne	0x0002807b
0000000000027ff2	movq	0x00080a57(%rip),%rdi
0000000000027ff9	leaq	0x00080330(%rip),%rsi
0000000000028000	call	*0x0008032a(%rip)
0000000000028006	movq	%rax,%rdi
0000000000028009	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000002800e	movq	%rax,%rbx
0000000000028011	movq	0x0007cc48(%rip),%rsi
0000000000028018	movq	%r14,%rdi
000000000002801b	call	*0x0005c0b7(%rip)
0000000000028021	leaq	0x00087810(%rip),%r8
0000000000028028	leaq	0x00039a1f(%rip),%r9
000000000002802f	leaq	0xd8(%rbp),%rdi
0000000000028033	leaq	0xd0(%rbp),%rsi
0000000000028037	leaq	0x00039952(%rip),%rdx
000000000002803e	leaq	0x0003997d(%rip),%rcx
0000000000028045	movq	%r9,0x20(%rsp)
000000000002804a	leaq	0x00087987(%rip),%r9
0000000000028051	movq	%r8,0x18(%rsp)
0000000000028056	movq	%rax,0x10(%rsp)
000000000002805b	leaq	0x00036a67(%rip),%rax
0000000000028062	movq	%rbx,0x08(%rsp)
0000000000028067	movq	%rax,(%rsp)
000000000002806b	movl	$0x0000001f,%r8d
0000000000028071	xorb	%al,%al
0000000000028073	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000028078	movq	%r14,%rbx
000000000002807b	movq	0x0007edd6(%rip),%rsi
0000000000028082	movq	0x0005c04f(%rip),%r12
0000000000028089	movq	%rbx,%rdi
000000000002808c	call	*%r12
000000000002808f	movq	%rax,%r15
0000000000028092	movq	0x0007edc7(%rip),%rsi
0000000000028099	movq	0xd8(%rbp),%rdi
000000000002809d	call	*%r12
00000000000280a0	movq	0x0007df11(%rip),%rsi
00000000000280a7	movq	%rax,%rdi
00000000000280aa	movq	%r15,%rdx
00000000000280ad	xorl	%ecx,%ecx
00000000000280af	call	*%r12
00000000000280b2	movq	%rax,%r15
00000000000280b5	movq	0x0007edac(%rip),%rsi
00000000000280bc	movq	%rbx,%rdi
00000000000280bf	call	*%r12
00000000000280c2	movsbl	%al,%edx
00000000000280c5	movq	0x0007eda4(%rip),%rsi
00000000000280cc	movq	%r15,%rdi
00000000000280cf	call	*%r12
00000000000280d2	movq	0x0007de5f(%rip),%rsi
00000000000280d9	movq	0xd8(%rbp),%rdi
00000000000280dd	movq	%r15,%rdx
00000000000280e0	call	*%r12
00000000000280e3	leaq	0xc0(%rbp),%rdi
00000000000280e7	movq	0xd8(%rbp),%rax
00000000000280eb	movq	%rax,0xc0(%rbp)
00000000000280ef	movq	0x00080e7a(%rip),%rax
00000000000280f6	movq	%rax,0xc8(%rbp)
00000000000280fa	movq	0x0007de57(%rip),%rsi
0000000000028101	movq	%r14,%rdx
0000000000028104	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000028109	addq	$0x50,%rsp
000000000002810d	popq	%rbx
000000000002810e	popq	%r12
0000000000028110	popq	%r14
0000000000028112	popq	%r15
0000000000028114	popq	%rbp
0000000000028115	ret
-[PBXGDB_FetchStringSequence resultMemoryData]:
0000000000028116	pushq	%rbp
0000000000028117	movq	%rsp,%rbp
000000000002811a	movq	0x000868d7(%rip),%rax
0000000000028121	movq	(%rdi,%rax),%rax
0000000000028125	popq	%rbp
0000000000028126	ret
-[PBXGDB_CStringFetchOperation fetchResultSequenceClass]:
0000000000028127	pushq	%rbp
0000000000028128	movq	%rsp,%rbp
000000000002812b	movq	0x000801fe(%rip),%rax
0000000000028132	movq	0x0008091f(%rip),%rdi
0000000000028139	leaq	0x000801f0(%rip),%rsi
0000000000028140	popq	%rbp
0000000000028141	jmp	*%rax
-[PBXGDB_FetchStringSequence resultStatus]:
0000000000028143	pushq	%rbp
0000000000028144	movq	%rsp,%rbp
0000000000028147	movq	0x000868b2(%rip),%rax
000000000002814e	movsbl	(%rdi,%rax),%eax
0000000000028152	popq	%rbp
0000000000028153	ret
-[PBXGDB_StringFetchResult setReadAllData:]:
0000000000028154	pushq	%rbp
0000000000028155	movq	%rsp,%rbp
0000000000028158	movq	0x00086f19(%rip),%rax
000000000002815f	movb	%dl,(%rdi,%rax)
0000000000028162	popq	%rbp
0000000000028163	ret
-[PBXGDB_EvalOperation setResult:]:
0000000000028164	pushq	%rbp
0000000000028165	movq	%rsp,%rbp
0000000000028168	pushq	%r14
000000000002816a	pushq	%rbx
000000000002816b	movq	%rdx,%rax
000000000002816e	movq	%rdi,%rbx
0000000000028171	movq	0x00086838(%rip),%rdx
0000000000028178	movq	%rax,%rdi
000000000002817b	movq	%rbx,%rsi
000000000002817e	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000028183	movq	0x00086826(%rip),%rax
000000000002818a	movq	(%rbx,%rax),%r14
000000000002818e	movq	0x0007ddcb(%rip),%rsi
0000000000028195	movq	%rbx,%rdi
0000000000028198	call	*0x0005bf3a(%rip)
000000000002819e	movq	0x0007ccb3(%rip),%rsi
00000000000281a5	movq	%r14,%rdi
00000000000281a8	movq	%rax,%rdx
00000000000281ab	movq	0x0005bf26(%rip),%rax
00000000000281b2	popq	%rbx
00000000000281b3	popq	%r14
00000000000281b5	popq	%rbp
00000000000281b6	jmp	*%rax
-[PBXGDB_EvalOperation resultName]:
00000000000281b8	pushq	%rbp
00000000000281b9	movq	%rsp,%rbp
00000000000281bc	movq	0x000867e5(%rip),%rax
00000000000281c3	movq	(%rdi,%rax),%rax
00000000000281c7	popq	%rbp
00000000000281c8	ret
-[PBXGDB_OpResult setName:]:
00000000000281c9	pushq	%rbp
00000000000281ca	movq	%rsp,%rbp
00000000000281cd	movq	%rdx,%rax
00000000000281d0	movq	%rdi,%rcx
00000000000281d3	movq	0x00086d66(%rip),%rdx
00000000000281da	cmpq	%rax,(%rcx,%rdx)
00000000000281de	jne	0x000281e2
00000000000281e0	popq	%rbp
00000000000281e1	ret
00000000000281e2	addq	%rcx,%rdx
00000000000281e5	subq	%rcx,%rdx
00000000000281e8	movq	%rax,%rdi
00000000000281eb	movq	%rcx,%rsi
00000000000281ee	popq	%rbp
00000000000281ef	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_EvalOperation sequenceDidFinish:]:
00000000000281f4	pushq	%rbp
00000000000281f5	movq	%rsp,%rbp
00000000000281f8	pushq	%r14
00000000000281fa	pushq	%rbx
00000000000281fb	movq	%rdi,%rbx
00000000000281fe	movq	0x0007dd4b(%rip),%rsi
0000000000028205	call	*0x0005becd(%rip)
000000000002820b	movq	%rax,%r14
000000000002820e	testq	%r14,%r14
0000000000028211	je	0x00028232
0000000000028213	movq	0x00086776(%rip),%rax
000000000002821a	movq	(%rbx,%rax),%rdx
000000000002821e	leaq	0x0008014b(%rip),%rsi
0000000000028225	movq	%r14,%rdi
0000000000028228	call	*0x00080142(%rip)
000000000002822e	testb	%al,%al
0000000000028230	jne	0x00028237
0000000000028232	popq	%rbx
0000000000028233	popq	%r14
0000000000028235	popq	%rbp
0000000000028236	ret
0000000000028237	movq	0x00086752(%rip),%rax
000000000002823e	movq	(%rbx,%rax),%rdx
0000000000028242	movq	0x0007d647(%rip),%rsi
0000000000028249	movq	%r14,%rdi
000000000002824c	movq	%rbx,%rcx
000000000002824f	popq	%rbx
0000000000028250	popq	%r14
0000000000028252	popq	%rbp
0000000000028253	jmp	*0x0005be7f(%rip)
-[PBXGDB_EvalOperation finishTarget]:
0000000000028259	pushq	%rbp
000000000002825a	movq	%rsp,%rbp
000000000002825d	movq	0x00086724(%rip),%rax
0000000000028264	movq	(%rdi,%rax),%rax
0000000000028268	popq	%rbp
0000000000028269	ret
-[PBXGDB_SyntheticDataValue _contentSummaryFetchOpDidFinish:]:
000000000002826a	pushq	%rbp
000000000002826b	movq	%rsp,%rbp
000000000002826e	pushq	%rbx
000000000002826f	pushq	%rax
0000000000028270	movq	%rdi,%rbx
0000000000028273	movq	0x0007ed5e(%rip),%rsi
000000000002827a	movq	%rdx,%rdi
000000000002827d	call	*0x0005be55(%rip)
0000000000028283	movq	0x0007ed56(%rip),%rsi
000000000002828a	movq	%rbx,%rdi
000000000002828d	movq	%rax,%rdx
0000000000028290	call	*0x0005be42(%rip)
0000000000028296	movq	0x0007ed4b(%rip),%rsi
000000000002829d	movq	%rbx,%rdi
00000000000282a0	movq	0x0005be31(%rip),%rax
00000000000282a7	addq	$0x08,%rsp
00000000000282ab	popq	%rbx
00000000000282ac	popq	%rbp
00000000000282ad	jmp	*%rax
-[PBXGDB_EvalOperation result]:
00000000000282af	pushq	%rbp
00000000000282b0	movq	%rsp,%rbp
00000000000282b3	movq	0x000866f6(%rip),%rax
00000000000282ba	movq	(%rdi,%rax),%rax
00000000000282be	popq	%rbp
00000000000282bf	ret
-[PBXGDB_SyntheticDataValue setContentSummaryResult:]:
00000000000282c0	pushq	%rbp
00000000000282c1	movq	%rsp,%rbp
00000000000282c4	pushq	%r15
00000000000282c6	pushq	%r14
00000000000282c8	pushq	%rbx
00000000000282c9	pushq	%rax
00000000000282ca	movq	%rdx,%r15
00000000000282cd	movq	%rdi,%rbx
00000000000282d0	movq	0x0007ec99(%rip),%rsi
00000000000282d7	call	*0x0005bdfb(%rip)
00000000000282dd	movq	%rax,%r14
00000000000282e0	leaq	0x00080049(%rip),%rsi
00000000000282e7	movq	%rbx,%rdi
00000000000282ea	testq	%r15,%r15
00000000000282ed	jne	0x00028325
00000000000282ef	call	*0x0008003b(%rip)
00000000000282f5	movq	0x0007ec8c(%rip),%rsi
00000000000282fc	movq	%rax,%rdi
00000000000282ff	call	*0x0005bdd3(%rip)
0000000000028305	movq	0x0007d054(%rip),%rsi
000000000002830c	movq	%r14,%rdi
000000000002830f	movq	%rax,%rdx
0000000000028312	movq	0x0005bdbf(%rip),%rax
0000000000028319	addq	$0x08,%rsp
000000000002831d	popq	%rbx
000000000002831e	popq	%r14
0000000000028320	popq	%r15
0000000000028322	popq	%rbp
0000000000028323	jmp	*%rax
0000000000028325	call	*0x00080005(%rip)
000000000002832b	movq	0x0007ec56(%rip),%rsi
0000000000028332	movq	%rax,%rdi
0000000000028335	call	*0x0005bd9d(%rip)
000000000002833b	movq	0x0007c9ee(%rip),%rsi
0000000000028342	movq	%r14,%rdi
0000000000028345	movq	%r15,%rdx
0000000000028348	movq	%rax,%rcx
000000000002834b	movq	0x0005bd86(%rip),%rax
0000000000028352	addq	$0x08,%rsp
0000000000028356	popq	%rbx
0000000000028357	popq	%r14
0000000000028359	popq	%r15
000000000002835b	popq	%rbp
000000000002835c	jmp	*%rax
+[PBXGDB_SyntheticDataValue contentSummaryResultKey]:
000000000002835e	pushq	%rbp
000000000002835f	movq	%rsp,%rbp
0000000000028362	leaq	0x0008c00f(%rip),%rax
0000000000028369	popq	%rbp
000000000002836a	ret
-[PBXGDB_SyntheticDataValue _doStep_UpdateFromContentSummaryResultAndFinish]:
000000000002836b	pushq	%rbp
000000000002836c	movq	%rsp,%rbp
000000000002836f	pushq	%r15
0000000000028371	pushq	%r14
0000000000028373	pushq	%r12
0000000000028375	pushq	%rbx
0000000000028376	movq	%rdi,%r15
0000000000028379	movq	0x0007ec30(%rip),%rsi
0000000000028380	movq	0x0005bd51(%rip),%r14
0000000000028387	call	*%r14
000000000002838a	movq	%rax,%rbx
000000000002838d	movq	0x0007dc3c(%rip),%rsi
0000000000028394	movq	%rbx,%rdi
0000000000028397	call	*%r14
000000000002839a	movq	%rax,%r14
000000000002839d	leaq	0x0007ff8c(%rip),%rsi
00000000000283a4	movq	0x000806ed(%rip),%rdi
00000000000283ab	call	*0x0007ff7f(%rip)
00000000000283b1	leaq	0x0007ff88(%rip),%rsi
00000000000283b8	movq	%rbx,%rdi
00000000000283bb	movq	%rax,%rdx
00000000000283be	call	*0x0007ff7c(%rip)
00000000000283c4	testb	%al,%al
00000000000283c6	je	0x00028426
00000000000283c8	movq	0x0007ebf1(%rip),%rsi
00000000000283cf	movq	0x0005bd02(%rip),%r14
00000000000283d6	movq	%rbx,%rdi
00000000000283d9	call	*%r14
00000000000283dc	movq	0x0007c8ad(%rip),%rsi
00000000000283e3	movq	%rax,%rdi
00000000000283e6	call	*%r14
00000000000283e9	movq	%rax,%rbx
00000000000283ec	movq	0x0007ebd5(%rip),%rsi
00000000000283f3	movq	%r15,%rdi
00000000000283f6	call	*%r14
00000000000283f9	leaq	0x0007ff60(%rip),%rsi
0000000000028400	movq	%rax,%rdi
0000000000028403	movq	%rbx,%rdx
0000000000028406	call	*0x0007ff54(%rip)
000000000002840c	testb	%al,%al
000000000002840e	jne	0x000284cc
0000000000028414	movq	0x0007eb85(%rip),%rsi
000000000002841b	movq	%r15,%rdi
000000000002841e	movq	%rbx,%rdx
0000000000028421	jmp	0x000284c6
0000000000028426	movq	0x00080023(%rip),%rdi
000000000002842d	leaq	0x0007fefc(%rip),%rsi
0000000000028434	call	*0x0007fef6(%rip)
000000000002843a	leaq	0x0007feff(%rip),%rsi
0000000000028441	movq	%r14,%rdi
0000000000028444	movq	%rax,%rdx
0000000000028447	call	*0x0007fef3(%rip)
000000000002844d	testb	%al,%al
000000000002844f	je	0x000284ba
0000000000028451	movq	0x0007eb78(%rip),%rsi
0000000000028458	movq	%r15,%rdi
000000000002845b	call	*0x0005bc77(%rip)
0000000000028461	movq	%rax,%rbx
0000000000028464	testq	%rbx,%rbx
0000000000028467	je	0x000284ab
0000000000028469	movq	0x0007ffe0(%rip),%rdi
0000000000028470	leaq	0x0007fe69(%rip),%rsi
0000000000028477	call	*0x0007fe63(%rip)
000000000002847d	movq	0x0007c834(%rip),%rsi
0000000000028484	movq	0x0005bc4d(%rip),%r12
000000000002848b	movq	%rax,%rdi
000000000002848e	movq	%rbx,%rdx
0000000000028491	movq	%r14,%rcx
0000000000028494	xorb	%al,%al
0000000000028496	call	*%r12
0000000000028499	movq	0x0007eb00(%rip),%rsi
00000000000284a0	movq	%r15,%rdi
00000000000284a3	movq	%rax,%rdx
00000000000284a6	call	*%r12
00000000000284a9	jmp	0x000284cc
00000000000284ab	movq	0x0007eaee(%rip),%rsi
00000000000284b2	movq	%r15,%rdi
00000000000284b5	movq	%r14,%rdx
00000000000284b8	jmp	0x000284c6
00000000000284ba	movq	0x0007eadf(%rip),%rsi
00000000000284c1	movq	%r15,%rdi
00000000000284c4	xorl	%edx,%edx
00000000000284c6	call	*0x0005bc0c(%rip)
00000000000284cc	movq	0x0007ead5(%rip),%rsi
00000000000284d3	movq	%r15,%rdi
00000000000284d6	popq	%rbx
00000000000284d7	popq	%r12
00000000000284d9	popq	%r14
00000000000284db	popq	%r15
00000000000284dd	popq	%rbp
00000000000284de	jmp	*0x0005bbf4(%rip)
-[PBXGDB_SyntheticDataValue contentSummaryResult]:
00000000000284e4	pushq	%rbp
00000000000284e5	movq	%rsp,%rbp
00000000000284e8	pushq	%r15
00000000000284ea	pushq	%r14
00000000000284ec	pushq	%rbx
00000000000284ed	pushq	%rax
00000000000284ee	movq	%rdi,%rbx
00000000000284f1	movq	0x0007ea78(%rip),%rsi
00000000000284f8	movq	0x0005bbd9(%rip),%r15
00000000000284ff	call	*%r15
0000000000028502	movq	%rax,%r14
0000000000028505	leaq	0x0007fe24(%rip),%rsi
000000000002850c	movq	%rbx,%rdi
000000000002850f	call	*0x0007fe1b(%rip)
0000000000028515	movq	0x0007ea6c(%rip),%rsi
000000000002851c	movq	%rax,%rdi
000000000002851f	call	*%r15
0000000000028522	leaq	0x0007fe27(%rip),%rsi
0000000000028529	movq	0x0007fe20(%rip),%rcx
0000000000028530	movq	%r14,%rdi
0000000000028533	movq	%rax,%rdx
0000000000028536	addq	$0x08,%rsp
000000000002853a	popq	%rbx
000000000002853b	popq	%r14
000000000002853d	popq	%r15
000000000002853f	popq	%rbp
0000000000028540	jmp	*%rcx
-[PBXGDB_StringFetchResult escapedRepresentationOfString]:
0000000000028542	pushq	%rbp
0000000000028543	movq	%rsp,%rbp
0000000000028546	pushq	%r15
0000000000028548	pushq	%r14
000000000002854a	pushq	%rbx
000000000002854b	pushq	%rax
000000000002854c	movq	%rdi,%rbx
000000000002854f	movq	0x0007d7c2(%rip),%rsi
0000000000028556	call	*0x0005bb7c(%rip)
000000000002855c	leaq	0x0007fd8d(%rip),%rsi
0000000000028563	movq	%rax,%rdi
0000000000028566	call	*0x0007fd84(%rip)
000000000002856c	testq	%rax,%rax
000000000002856f	je	0x000285b9
0000000000028571	movq	0x0007d7a8(%rip),%rsi
0000000000028578	movq	0x0005bb59(%rip),%r15
000000000002857f	movq	%rbx,%rdi
0000000000028582	call	*%r15
0000000000028585	movq	%rax,%r14
0000000000028588	movq	0x0007d781(%rip),%rsi
000000000002858f	leaq	0x000873a2(%rip),%rdx
0000000000028596	movq	%rbx,%rdi
0000000000028599	call	*%r15
000000000002859c	movq	0x0007e94d(%rip),%rsi
00000000000285a3	movq	%r14,%rdi
00000000000285a6	movq	%rax,%rdx
00000000000285a9	call	*%r15
00000000000285ac	movq	0x0007e945(%rip),%rsi
00000000000285b3	movq	%rbx,%rdi
00000000000285b6	call	*%r15
00000000000285b9	movq	0x0007e940(%rip),%rsi
00000000000285c0	movq	%rbx,%rdi
00000000000285c3	call	*0x0005bb0f(%rip)
00000000000285c9	testb	%al,%al
00000000000285cb	jne	0x00028608
00000000000285cd	movq	0x0007d74c(%rip),%rsi
00000000000285d4	movq	0x0005bafd(%rip),%r15
00000000000285db	movq	%rbx,%rdi
00000000000285de	call	*%r15
00000000000285e1	movq	%rax,%r14
00000000000285e4	movq	0x0007d715(%rip),%rsi
00000000000285eb	leaq	0x0008bce6(%rip),%rdx
00000000000285f2	movq	%rbx,%rdi
00000000000285f5	call	*%r15
00000000000285f8	movq	0x0007d709(%rip),%rsi
00000000000285ff	movq	%r14,%rdi
0000000000028602	movq	%rax,%rdx
0000000000028605	call	*%r15
0000000000028608	movq	0x0007d711(%rip),%rsi
000000000002860f	movq	%rbx,%rdi
0000000000028612	addq	$0x08,%rsp
0000000000028616	popq	%rbx
0000000000028617	popq	%r14
0000000000028619	popq	%r15
000000000002861b	popq	%rbp
000000000002861c	jmp	*0x0005bab6(%rip)
-[PBXGDB_StringFetchResult stringData]:
0000000000028622	pushq	%rbp
0000000000028623	movq	%rsp,%rbp
0000000000028626	movq	0x0007d9a3(%rip),%rsi
000000000002862d	popq	%rbp
000000000002862e	jmp	*0x0005baa4(%rip)
-[PBXGDB_StringFetchResult attributedStringForStringData]:
0000000000028634	pushq	%rbp
0000000000028635	movq	%rsp,%rbp
0000000000028638	pushq	%r14
000000000002863a	pushq	%rbx
000000000002863b	movq	%rdi,%rbx
000000000002863e	movq	0x00086a2b(%rip),%rax
0000000000028645	movq	(%rbx,%rax),%rax
0000000000028649	testq	%rax,%rax
000000000002864c	jne	0x00028691
000000000002864e	movq	0x00080213(%rip),%rdi
0000000000028655	leaq	0x0007fc84(%rip),%rsi
000000000002865c	call	*0x0007fc7e(%rip)
0000000000028662	movq	0x0007c407(%rip),%rsi
0000000000028669	movq	0x0005ba68(%rip),%r14
0000000000028670	movq	%rax,%rdi
0000000000028673	call	*%r14
0000000000028676	movq	0x0007e853(%rip),%rsi
000000000002867d	movq	%rbx,%rdi
0000000000028680	movq	%rax,%rdx
0000000000028683	call	*%r14
0000000000028686	movq	0x000869e3(%rip),%rax
000000000002868d	movq	(%rbx,%rax),%rax
0000000000028691	popq	%rbx
0000000000028692	popq	%r14
0000000000028694	popq	%rbp
0000000000028695	ret
-[PBXGDB_StringFetchResult setAttributedStringForStringData:]:
0000000000028696	pushq	%rbp
0000000000028697	movq	%rsp,%rbp
000000000002869a	movq	%rdx,%rax
000000000002869d	movq	%rdi,%rcx
00000000000286a0	movq	0x000869c9(%rip),%rdx
00000000000286a7	cmpq	%rax,(%rcx,%rdx)
00000000000286ab	jne	0x000286af
00000000000286ad	popq	%rbp
00000000000286ae	ret
00000000000286af	addq	%rcx,%rdx
00000000000286b2	subq	%rcx,%rdx
00000000000286b5	movq	%rax,%rdi
00000000000286b8	movq	%rcx,%rsi
00000000000286bb	popq	%rbp
00000000000286bc	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_StringFetchResult alternateStringForString:]:
00000000000286c1	pushq	%rbp
00000000000286c2	movq	%rsp,%rbp
00000000000286c5	pushq	%r15
00000000000286c7	pushq	%r14
00000000000286c9	pushq	%r12
00000000000286cb	pushq	%rbx
00000000000286cc	movq	%rdx,%r14
00000000000286cf	movq	%rdi,%rbx
00000000000286d2	leaq	0x0007fc57(%rip),%r12
00000000000286d9	movq	%r12,%rsi
00000000000286dc	call	*0x0007fc4e(%rip)
00000000000286e2	movq	%rax,%r15
00000000000286e5	movq	%rbx,%rdi
00000000000286e8	movq	%r12,%rsi
00000000000286eb	call	*0x0007fc3f(%rip)
00000000000286f1	movq	0x0007e7e0(%rip),%rsi
00000000000286f8	movq	%rax,%rdi
00000000000286fb	call	*0x0005b9d7(%rip)
0000000000028701	movq	0x0007e7d8(%rip),%rsi
0000000000028708	movq	%r15,%rdi
000000000002870b	movq	%r14,%rdx
000000000002870e	movq	%rax,%rcx
0000000000028711	movq	0x0005b9c0(%rip),%rax
0000000000028718	popq	%rbx
0000000000028719	popq	%r12
000000000002871b	popq	%r14
000000000002871d	popq	%r15
000000000002871f	popq	%rbp
0000000000028720	jmp	*%rax
+[PBXGDB_StringFetchResult alternateAttributedStringsCache]:
0000000000028722	pushq	%rbp
0000000000028723	movq	%rsp,%rbp
0000000000028726	pushq	%r15
0000000000028728	pushq	%r14
000000000002872a	pushq	%r12
000000000002872c	pushq	%rbx
000000000002872d	movq	%rdi,%r15
0000000000028730	movq	0x0008ef79(%rip),%rax
0000000000028737	testq	%rax,%rax
000000000002873a	jne	0x000287cc
0000000000028740	movq	0x0007e771(%rip),%rsi
0000000000028747	leaq	0x0008bb2a(%rip),%rdx
000000000002874e	movq	0x0005b983(%rip),%r12
0000000000028755	movq	%r15,%rdi
0000000000028758	call	*%r12
000000000002875b	movq	%rax,%r14
000000000002875e	movq	0x0007fd4b(%rip),%rdi
0000000000028765	leaq	0x0007fb74(%rip),%rsi
000000000002876c	call	*0x0007fb6e(%rip)
0000000000028772	movq	0x0007c2f7(%rip),%rsi
0000000000028779	movq	%rax,%rdi
000000000002877c	call	*%r12
000000000002877f	leaq	0x0008ef2a(%rip),%rsi
0000000000028786	movq	%rax,%rdi
0000000000028789	callq	0x0004e602	; symbol stub for: _objc_assign_global
000000000002878e	leaq	0x0007fb9b(%rip),%rsi
0000000000028795	movq	0x0008ef14(%rip),%rbx
000000000002879c	movq	%r15,%rdi
000000000002879f	call	*0x0007fb8b(%rip)
00000000000287a5	movq	0x0007e714(%rip),%rsi
00000000000287ac	movq	%rax,%rdi
00000000000287af	call	*%r12
00000000000287b2	movq	0x0007c577(%rip),%rsi
00000000000287b9	movq	%rbx,%rdi
00000000000287bc	movq	%r14,%rdx
00000000000287bf	movq	%rax,%rcx
00000000000287c2	call	*%r12
00000000000287c5	movq	0x0008eee4(%rip),%rax
00000000000287cc	popq	%rbx
00000000000287cd	popq	%r12
00000000000287cf	popq	%r14
00000000000287d1	popq	%r15
00000000000287d3	popq	%rbp
00000000000287d4	ret
+[PBXGDB_StringFetchResult attributeDictionaryWithAttributeKey:]:
00000000000287d5	pushq	%rbp
00000000000287d6	movq	%rsp,%rbp
00000000000287d9	movq	%rdx,%rax
00000000000287dc	movq	0x0007cd25(%rip),%rsi
00000000000287e3	movq	0x0007fe8e(%rip),%rdi
00000000000287ea	leaq	0x000893a7(%rip),%rdx
00000000000287f1	movq	%rax,%rcx
00000000000287f4	xorl	%r8d,%r8d
00000000000287f7	xorb	%al,%al
00000000000287f9	popq	%rbp
00000000000287fa	jmp	*0x0005b8d8(%rip)
+[PBXGDB_StringFetchResult attributeDictionaryKeyInCache]:
0000000000028800	pushq	%rbp
0000000000028801	movq	%rsp,%rbp
0000000000028804	leaq	0x0008baad(%rip),%rax
000000000002880b	popq	%rbp
000000000002880c	ret
+[PBXGDB_StringFetchResult attributedStringForString:inCache:]:
000000000002880d	pushq	%rbp
000000000002880e	movq	%rsp,%rbp
0000000000028811	pushq	%r15
0000000000028813	pushq	%r14
0000000000028815	pushq	%r12
0000000000028817	pushq	%rbx
0000000000028818	movq	%rcx,%r15
000000000002881b	movq	%rdx,%r14
000000000002881e	movq	%rdi,%r12
0000000000028821	leaq	0x0007fb28(%rip),%rsi
0000000000028828	movq	%r15,%rdi
000000000002882b	call	*0x0007fb1f(%rip)
0000000000028831	movq	%rax,%rbx
0000000000028834	testq	%rbx,%rbx
0000000000028837	jne	0x000288b0
0000000000028839	leaq	0x0007faf0(%rip),%rsi
0000000000028840	movq	%r12,%rdi
0000000000028843	call	*0x0007fae7(%rip)
0000000000028849	movq	0x0007e670(%rip),%rsi
0000000000028850	movq	0x0005b881(%rip),%r12
0000000000028857	movq	%rax,%rdi
000000000002885a	call	*%r12
000000000002885d	leaq	0x0007faec(%rip),%rsi
0000000000028864	movq	%r15,%rdi
0000000000028867	movq	%rax,%rdx
000000000002886a	call	*0x0007fae0(%rip)
0000000000028870	movq	%rax,%rbx
0000000000028873	leaq	0x0007fa66(%rip),%rsi
000000000002887a	movq	0x0007ffef(%rip),%rdi
0000000000028881	call	*0x0007fa59(%rip)
0000000000028887	movq	0x0007e63a(%rip),%rsi
000000000002888e	movq	%rax,%rdi
0000000000028891	movq	%r14,%rdx
0000000000028894	movq	%rbx,%rcx
0000000000028897	call	*%r12
000000000002889a	movq	%rax,%rbx
000000000002889d	movq	0x0007c48c(%rip),%rsi
00000000000288a4	movq	%r15,%rdi
00000000000288a7	movq	%rbx,%rdx
00000000000288aa	movq	%r14,%rcx
00000000000288ad	call	*%r12
00000000000288b0	movq	%rbx,%rax
00000000000288b3	popq	%rbx
00000000000288b4	popq	%r12
00000000000288b6	popq	%r14
00000000000288b8	popq	%r15
00000000000288ba	popq	%rbp
00000000000288bb	ret
-[PBXGDB_CStringFetchResult processStringData]:
00000000000288bc	pushq	%rbp
00000000000288bd	movq	%rsp,%rbp
00000000000288c0	pushq	%r15
00000000000288c2	pushq	%r14
00000000000288c4	pushq	%rbx
00000000000288c5	pushq	%rax
00000000000288c6	movq	%rdi,%rbx
00000000000288c9	movq	0x0007d448(%rip),%rsi
00000000000288d0	call	*0x0005b802(%rip)
00000000000288d6	movq	0x0007c333(%rip),%rsi
00000000000288dd	movq	%rax,%rdi
00000000000288e0	call	*0x0005b7f2(%rip)
00000000000288e6	movq	%rax,%r14
00000000000288e9	movq	0x0007d428(%rip),%rsi
00000000000288f0	movq	%rbx,%rdi
00000000000288f3	call	*0x0005b7df(%rip)
00000000000288f9	leaq	0x0007f9f0(%rip),%rsi
0000000000028900	movq	%rax,%rdi
0000000000028903	call	*0x0007f9e7(%rip)
0000000000028909	movq	%rax,%r15
000000000002890c	movq	0x0007d40d(%rip),%rsi
0000000000028913	movq	%rbx,%rdi
0000000000028916	call	*0x0005b7bc(%rip)
000000000002891c	movq	0x0007d405(%rip),%rsi
0000000000028923	movq	%rbx,%rdi
0000000000028926	movq	%r14,%rdx
0000000000028929	movl	$0x00000001,%ecx
000000000002892e	movq	%r15,%r8
0000000000028931	movq	%rax,%r9
0000000000028934	movq	0x0005b79d(%rip),%rax
000000000002893b	addq	$0x08,%rsp
000000000002893f	popq	%rbx
0000000000028940	popq	%r14
0000000000028942	popq	%r15
0000000000028944	popq	%rbp
0000000000028945	jmp	*%rax
0000000000028947	nop
-[PBXGDB_CStringFetchResult makeASCIIRepresentationOfBytes:stopAtNull:stopAtLength:resultString:]:
0000000000028948	pushq	%rbp
0000000000028949	movq	%rsp,%rbp
000000000002894c	pushq	%r15
000000000002894e	pushq	%r14
0000000000028950	pushq	%r13
0000000000028952	pushq	%r12
0000000000028954	pushq	%rbx
0000000000028955	subq	$0x38,%rsp
0000000000028959	movq	%r9,%r13
000000000002895c	movq	%r8,0xc0(%rbp)
0000000000028960	movl	%ecx,0xbc(%rbp)
0000000000028963	movq	%rdx,0xb0(%rbp)
0000000000028967	movq	%rdi,%rbx
000000000002896a	movq	0x0007fadf(%rip),%rdi
0000000000028971	leaq	0x0007f968(%rip),%rsi
0000000000028978	call	*0x0007f962(%rip)
000000000002897e	movq	0x0007d373(%rip),%rsi
0000000000028985	leaq	0xd6(%rbp),%rdx
0000000000028989	movq	%rax,%rdi
000000000002898c	movl	$0x00000001,%ecx
0000000000028991	xorl	%r8d,%r8d
0000000000028994	call	*0x0005b73e(%rip)
000000000002899a	movq	%rax,0xa8(%rbp)
000000000002899e	xorl	%eax,%eax
00000000000289a0	movq	0x0007d361(%rip),%r15
00000000000289a7	movq	0x0005b72a(%rip),%r12
00000000000289ae	jmp	0x000289f0
00000000000289b0	movq	0x0007fa99(%rip),%rdi
00000000000289b7	movq	0x0007c1ba(%rip),%rsi
00000000000289be	leaq	0x00088553(%rip),%rdx
00000000000289c5	movq	%r14,%rcx
00000000000289c8	xorb	%al,%al
00000000000289ca	call	*%r12
00000000000289cd	movq	%rbx,%rdi
00000000000289d0	movq	0x0007d339(%rip),%rsi
00000000000289d7	movq	%rax,%rdx
00000000000289da	call	*%r12
00000000000289dd	movq	%r13,%rdi
00000000000289e0	movq	%r15,%rsi
00000000000289e3	movq	%rax,%rdx
00000000000289e6	call	*%r12
00000000000289e9	movq	0xc8(%rbp),%rax
00000000000289ed	incq	%rax
00000000000289f0	movq	%rax,0xc8(%rbp)
00000000000289f4	cmpq	0xc0(%rbp),%rax
00000000000289f8	jge	0x00028b7b
00000000000289fe	movq	0xb0(%rbp),%rax
0000000000028a02	movq	0xc8(%rbp),%rcx
0000000000028a06	movzbl	(%rax,%rcx),%r14d
0000000000028a0b	testb	%r14b,%r14b
0000000000028a0e	js	0x00028a24
0000000000028a10	movq	0x0005b671(%rip),%rax
0000000000028a17	movl	0x3c(%rax,%r14,4),%eax
0000000000028a1c	shrl	$0x12,%eax
0000000000028a1f	andl	$0x01,%eax
0000000000028a22	jmp	0x00028a39
0000000000028a24	movl	%r14d,%edi
0000000000028a27	movl	$0x00040000,%esi
0000000000028a2c	callq	0x0004e680	; symbol stub for: ___maskrune
0000000000028a31	testl	%eax,%eax
0000000000028a33	setne	%al
0000000000028a36	movzbl	%al,%eax
0000000000028a39	testl	%eax,%eax
0000000000028a3b	je	0x00028a52
0000000000028a3d	movw	%r14d,0xd6(%rbp)
0000000000028a42	movq	%rbx,%rdi
0000000000028a45	movq	0x0007d2b4(%rip),%rsi
0000000000028a4c	movq	0xa8(%rbp),%rdx
0000000000028a50	jmp	0x000289da
0000000000028a52	cmpb	$0x5b,%r14b
0000000000028a56	jg	0x00028b1e
0000000000028a5c	cmpb	$0x26,%r14b
0000000000028a60	jg	0x00028b3e
0000000000028a66	cmpb	$0x0d,%r14b
0000000000028a6a	ja	0x000289b0
0000000000028a70	movzbl	%dh,%eax
0000000000028a74	leaq	0x00000111(%rip),%rcx
0000000000028a7b	movslq	(%rcx,%rax,4),%rax
0000000000028a7f	addq	%rcx,%rax
0000000000028a82	jmp	*%rax
0000000000028a84	movq	%rbx,%rdi
0000000000028a87	movq	0x0007d282(%rip),%rsi
0000000000028a8e	leaq	0x00088343(%rip),%rdx
0000000000028a95	jmp	0x000289da
0000000000028a9a	movq	%rbx,%rdi
0000000000028a9d	movq	0x0007d26c(%rip),%rsi
0000000000028aa4	leaq	0x0008834d(%rip),%rdx
0000000000028aab	jmp	0x000289da
0000000000028ab0	movq	%rbx,%rdi
0000000000028ab3	movq	0x0007d256(%rip),%rsi
0000000000028aba	leaq	0x00088357(%rip),%rdx
0000000000028ac1	jmp	0x000289da
0000000000028ac6	movq	%rbx,%rdi
0000000000028ac9	movq	0x0007d240(%rip),%rsi
0000000000028ad0	leaq	0x00088361(%rip),%rdx
0000000000028ad7	jmp	0x000289da
0000000000028adc	movq	%rbx,%rdi
0000000000028adf	movq	0x0007d22a(%rip),%rsi
0000000000028ae6	leaq	0x0008836b(%rip),%rdx
0000000000028aed	jmp	0x000289da
0000000000028af2	movq	%rbx,%rdi
0000000000028af5	movq	0x0007d214(%rip),%rsi
0000000000028afc	leaq	0x00088375(%rip),%rdx
0000000000028b03	jmp	0x000289da
0000000000028b08	movq	%rbx,%rdi
0000000000028b0b	movq	0x0007d1fe(%rip),%rsi
0000000000028b12	leaq	0x0008837f(%rip),%rdx
0000000000028b19	jmp	0x000289da
0000000000028b1e	cmpb	$0x5c,%r14b
0000000000028b22	jne	0x000289b0
0000000000028b28	movq	%rbx,%rdi
0000000000028b2b	movq	0x0007d1de(%rip),%rsi
0000000000028b32	leaq	0x0008837f(%rip),%rdx
0000000000028b39	jmp	0x000289da
0000000000028b3e	cmpb	$0x27,%r14b
0000000000028b42	jne	0x000289b0
0000000000028b48	movq	%rbx,%rdi
0000000000028b4b	movq	0x0007d1be(%rip),%rsi
0000000000028b52	leaq	0x0008837f(%rip),%rdx
0000000000028b59	jmp	0x000289da
0000000000028b5e	movl	0xbc(%rbp),%eax
0000000000028b61	testb	%al,%al
0000000000028b63	jne	0x00028b7b
0000000000028b65	movq	%rbx,%rdi
0000000000028b68	movq	0x0007d1a1(%rip),%rsi
0000000000028b6f	leaq	0x00088382(%rip),%rdx
0000000000028b76	jmp	0x000289da
0000000000028b7b	addq	$0x38,%rsp
0000000000028b7f	popq	%rbx
0000000000028b80	popq	%r12
0000000000028b82	popq	%r13
0000000000028b84	popq	%r14
0000000000028b86	popq	%r15
0000000000028b88	popq	%rbp
0000000000028b89	ret
0000000000028b8a	nop
0000000000028b8c	sarb	%cl,%bh
0000000000028b8e	.byte 0xff, 0xff #bad opcode
0000000000028b90	andb	$0xfe,%al
0000000000028b92	.byte 0xff, 0xff #bad opcode
0000000000028b94	andb	$0xfe,%al
0000000000028b96	.byte 0xff, 0xff #bad opcode
0000000000028b98	andb	$0xfe,%al
0000000000028b9a	.byte 0xff, 0xff #bad opcode
0000000000028b9c	andb	$0xfe,%al
0000000000028b9e	.byte 0xff, 0xff #bad opcode
0000000000028ba0	andb	$0xfe,%al
0000000000028ba2	.byte 0xff, 0xff #bad opcode
0000000000028ba4	andb	$0xfe,%al
0000000000028ba6	.byte 0xff, 0xff #bad opcode
0000000000028ba8	clc
0000000000028ba9	.byte 0xfe, 0xff #bad opcode
0000000000028bab	decl	(%rsi)
0000000000028bad	.byte 0xff, 0xff #bad opcode
0000000000028baf	jmp	*0xff(%rsi)
0000000000028bb2	.byte 0xff, 0xff #bad opcode
0000000000028bb4	cmpb	%bh,%bh
0000000000028bb6	.byte 0xff, 0xff #bad opcode
0000000000028bb8	jl	0x00028bb9
0000000000028bba	.byte 0xff, 0xff #bad opcode
0000000000028bbc	andb	$0xff,%al
0000000000028bbe	.byte 0xff, 0xff #bad opcode
0000000000028bc0	pushq	%rax
0000000000028bc1	.byte 0xff, 0xff #bad opcode
0000000000028bc3	call	*0x48(%rbp)
0000000000028bc6	movl	%esp,%ebp
0000000000028bc8	pushq	%r15
0000000000028bca	pushq	%r14
0000000000028bcc	pushq	%r12
0000000000028bce	pushq	%rbx
0000000000028bcf	movq	%rdx,%r14
0000000000028bd2	movq	%rdi,%rbx
0000000000028bd5	leaq	0x0007f754(%rip),%r12
0000000000028bdc	movq	%r12,%rsi
0000000000028bdf	call	*0x0007f74b(%rip)
0000000000028be5	movq	%rax,%r15
0000000000028be8	movq	%rbx,%rdi
0000000000028beb	movq	%r12,%rsi
0000000000028bee	call	*0x0007f73c(%rip)
0000000000028bf4	movq	0x0007e2ed(%rip),%rsi
0000000000028bfb	movq	%rax,%rdi
0000000000028bfe	call	*0x0005b4d4(%rip)
0000000000028c04	movq	0x0007e2d5(%rip),%rsi
0000000000028c0b	movq	%r15,%rdi
0000000000028c0e	movq	%r14,%rdx
0000000000028c11	movq	%rax,%rcx
0000000000028c14	movq	0x0005b4bd(%rip),%rax
0000000000028c1b	popq	%rbx
0000000000028c1c	popq	%r12
0000000000028c1e	popq	%r14
0000000000028c20	popq	%r15
0000000000028c22	popq	%rbp
0000000000028c23	jmp	*%rax
+[PBXGDB_StringFetchResult standardAttributedStringsCache]:
0000000000028c25	pushq	%rbp
0000000000028c26	movq	%rsp,%rbp
0000000000028c29	pushq	%r15
0000000000028c2b	pushq	%r14
0000000000028c2d	pushq	%r12
0000000000028c2f	pushq	%rbx
0000000000028c30	movq	%rdi,%r15
0000000000028c33	movq	0x0008ea7e(%rip),%rax
0000000000028c3a	testq	%rax,%rax
0000000000028c3d	jne	0x00028ccf
0000000000028c43	movq	0x0007e26e(%rip),%rsi
0000000000028c4a	leaq	0x0008b647(%rip),%rdx
0000000000028c51	movq	0x0005b480(%rip),%r12
0000000000028c58	movq	%r15,%rdi
0000000000028c5b	call	*%r12
0000000000028c5e	movq	%rax,%r14
0000000000028c61	movq	0x0007f848(%rip),%rdi
0000000000028c68	leaq	0x0007f671(%rip),%rsi
0000000000028c6f	call	*0x0007f66b(%rip)
0000000000028c75	movq	0x0007bdf4(%rip),%rsi
0000000000028c7c	movq	%rax,%rdi
0000000000028c7f	call	*%r12
0000000000028c82	leaq	0x0008ea2f(%rip),%rsi
0000000000028c89	movq	%rax,%rdi
0000000000028c8c	callq	0x0004e602	; symbol stub for: _objc_assign_global
0000000000028c91	leaq	0x0007f698(%rip),%rsi
0000000000028c98	movq	0x0008ea19(%rip),%rbx
0000000000028c9f	movq	%r15,%rdi
0000000000028ca2	call	*0x0007f688(%rip)
0000000000028ca8	movq	0x0007e211(%rip),%rsi
0000000000028caf	movq	%rax,%rdi
0000000000028cb2	call	*%r12
0000000000028cb5	movq	0x0007c074(%rip),%rsi
0000000000028cbc	movq	%rbx,%rdi
0000000000028cbf	movq	%r14,%rdx
0000000000028cc2	movq	%rax,%rcx
0000000000028cc5	call	*%r12
0000000000028cc8	movq	0x0008e9e9(%rip),%rax
0000000000028ccf	popq	%rbx
0000000000028cd0	popq	%r12
0000000000028cd2	popq	%r14
0000000000028cd4	popq	%r15
0000000000028cd6	popq	%rbp
0000000000028cd7	ret
-[PBXGDB_StringFetchResult readAllData]:
0000000000028cd8	pushq	%rbp
0000000000028cd9	movq	%rsp,%rbp
0000000000028cdc	movq	0x00086395(%rip),%rax
0000000000028ce3	movsbl	(%rdi,%rax),%eax
0000000000028ce7	popq	%rbp
0000000000028ce8	ret
-[PBXLSDVValue setSummary:]:
0000000000028ce9	pushq	%rbp
0000000000028cea	movq	%rsp,%rbp
0000000000028ced	movq	%rdx,%rax
0000000000028cf0	movq	%rdi,%rcx
0000000000028cf3	movq	0x0008659e(%rip),%rdx
0000000000028cfa	cmpq	%rax,(%rcx,%rdx)
0000000000028cfe	jne	0x00028d02
0000000000028d00	popq	%rbp
0000000000028d01	ret
0000000000028d02	addq	%rcx,%rdx
0000000000028d05	subq	%rcx,%rdx
0000000000028d08	movq	%rax,%rdi
0000000000028d0b	movq	%rcx,%rsi
0000000000028d0e	popq	%rbp
0000000000028d0f	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_UnicharStringFetchOperation fetchResultSequenceClass]:
0000000000028d14	pushq	%rbp
0000000000028d15	movq	%rsp,%rbp
0000000000028d18	movq	0x0007f611(%rip),%rax
0000000000028d1f	movq	0x0007fd52(%rip),%rdi
0000000000028d26	leaq	0x0007f603(%rip),%rsi
0000000000028d2d	popq	%rbp
0000000000028d2e	jmp	*%rax
-[PBXGDB_UnicharFetchResult processStringData]:
0000000000028d30	pushq	%rbp
0000000000028d31	movq	%rsp,%rbp
0000000000028d34	pushq	%r15
0000000000028d36	pushq	%r14
0000000000028d38	pushq	%r13
0000000000028d3a	pushq	%r12
0000000000028d3c	pushq	%rbx
0000000000028d3d	pushq	%rax
0000000000028d3e	movq	%rdi,%r15
0000000000028d41	movq	0x0007cfd0(%rip),%rsi
0000000000028d48	call	*0x0005b38a(%rip)
0000000000028d4e	movq	%rax,%r12
0000000000028d51	leaq	0x0007f598(%rip),%r14
0000000000028d58	movq	%r12,%rdi
0000000000028d5b	movq	%r14,%rsi
0000000000028d5e	call	*0x0007f58c(%rip)
0000000000028d64	movq	%rax,%rbx
0000000000028d67	movq	0x0007f6e2(%rip),%rdi
0000000000028d6e	leaq	0x0007f56b(%rip),%rsi
0000000000028d75	call	*0x0007f565(%rip)
0000000000028d7b	movq	%rax,%r13
0000000000028d7e	movq	0x0007be8b(%rip),%rsi
0000000000028d85	movq	%r12,%rdi
0000000000028d88	call	*0x0005b34a(%rip)
0000000000028d8e	shrq	%rbx
0000000000028d91	movq	0x0007cf60(%rip),%rsi
0000000000028d98	movq	%r13,%rdi
0000000000028d9b	movq	%rax,%rdx
0000000000028d9e	movq	%rbx,%rcx
0000000000028da1	xorl	%r8d,%r8d
0000000000028da4	call	*0x0005b32e(%rip)
0000000000028daa	movq	%rax,%rbx
0000000000028dad	movq	%rbx,%rdi
0000000000028db0	movq	%r14,%rsi
0000000000028db3	call	*0x0007f537(%rip)
0000000000028db9	leaq	0xff(%rax),%rdx
0000000000028dbd	movq	0x0007e41c(%rip),%rsi
0000000000028dc4	movq	%rbx,%rdi
0000000000028dc7	call	*0x0005b30b(%rip)
0000000000028dcd	leaq	(%rdx,%rax),%rcx
0000000000028dd1	movq	0x0007bd80(%rip),%rsi
0000000000028dd8	movq	%rbx,%rdi
0000000000028ddb	xorl	%edx,%edx
0000000000028ddd	call	*0x0005b2f5(%rip)
0000000000028de3	movq	%rax,%rbx
0000000000028de6	movq	0x0007cf33(%rip),%rsi
0000000000028ded	movq	%r15,%rdi
0000000000028df0	call	*0x0005b2e2(%rip)
0000000000028df6	movq	0x0007e3eb(%rip),%rsi
0000000000028dfd	movq	%r15,%rdi
0000000000028e00	movq	%rbx,%rdx
0000000000028e03	movl	$0x00000001,%ecx
0000000000028e08	xorl	%r8d,%r8d
0000000000028e0b	movq	%rax,%r9
0000000000028e0e	movq	0x0005b2c3(%rip),%rax
0000000000028e15	addq	$0x08,%rsp
0000000000028e19	popq	%rbx
0000000000028e1a	popq	%r12
0000000000028e1c	popq	%r13
0000000000028e1e	popq	%r14
0000000000028e20	popq	%r15
0000000000028e22	popq	%rbp
0000000000028e23	jmp	*%rax
0000000000028e25	nop
0000000000028e26	nop
0000000000028e27	nop
-[PBXGDB_UnicharFetchResult makeRepresentationOfNSString:stopAtNull:stopAtDoubleNull:resultString:]:
0000000000028e28	pushq	%rbp
0000000000028e29	movq	%rsp,%rbp
0000000000028e2c	pushq	%r15
0000000000028e2e	pushq	%r14
0000000000028e30	pushq	%r13
0000000000028e32	pushq	%r12
0000000000028e34	pushq	%rbx
0000000000028e35	subq	$0x38,%rsp
0000000000028e39	movq	%r9,%r13
0000000000028e3c	movl	%r8d,0xd0(%rbp)
0000000000028e40	movl	%ecx,0xcc(%rbp)
0000000000028e43	movq	%rdx,%r14
0000000000028e46	movq	%r14,0xc0(%rbp)
0000000000028e4a	movq	%rdi,%rbx
0000000000028e4d	movq	0x0007f5fc(%rip),%rdi
0000000000028e54	leaq	0x0007f485(%rip),%rsi
0000000000028e5b	call	*0x0007f47f(%rip)
0000000000028e61	movq	0x0007ce90(%rip),%rsi
0000000000028e68	leaq	0xd6(%rbp),%rdx
0000000000028e6c	movq	%rax,%rdi
0000000000028e6f	movl	$0x00000001,%ecx
0000000000028e74	xorl	%r8d,%r8d
0000000000028e77	call	*0x0005b25b(%rip)
0000000000028e7d	movq	%rax,0xb8(%rbp)
0000000000028e81	leaq	0x0007f468(%rip),%rsi
0000000000028e88	movq	%r14,%rdi
0000000000028e8b	call	*0x0007f45f(%rip)
0000000000028e91	movq	%rax,0xb0(%rbp)
0000000000028e95	movw	$0x002a,%r15d
0000000000028e9a	xorl	%r12d,%r12d
0000000000028e9d	movq	0x0005b234(%rip),%r14
0000000000028ea4	jmp	0x00028f23
0000000000028ea6	movl	0xcc(%rbp),%eax
0000000000028ea9	testb	%al,%al
0000000000028eab	jne	0x00029009
0000000000028eb1	movq	%rbx,%rdi
0000000000028eb4	movq	0x0007ce55(%rip),%rsi
0000000000028ebb	leaq	0x00088036(%rip),%rdx
0000000000028ec2	jmp	0x00028f05
0000000000028ec4	cmpw	$0x1f,%ax
0000000000028ec8	ja	0x00028ef3
0000000000028eca	movq	0x0007f57f(%rip),%rdi
0000000000028ed1	movq	0x0007bca0(%rip),%rsi
0000000000028ed8	leaq	0x00088039(%rip),%rdx
0000000000028edf	xorb	%al,%al
0000000000028ee1	call	*%r14
0000000000028ee4	movq	%rbx,%rdi
0000000000028ee7	movq	0x0007ce22(%rip),%rsi
0000000000028eee	movq	%rax,%rdx
0000000000028ef1	jmp	0x00028f05
0000000000028ef3	movw	%ax,0xd6(%rbp)
0000000000028ef7	movq	%rbx,%rdi
0000000000028efa	movq	0x0007cdff(%rip),%rsi
0000000000028f01	movq	0xb8(%rbp),%rdx
0000000000028f05	call	*%r14
0000000000028f08	movq	%r13,%rdi
0000000000028f0b	movq	0x0007cdf6(%rip),%rsi
0000000000028f12	movq	%rax,%rdx
0000000000028f15	call	*%r14
0000000000028f18	movzwl	0xd6(%rbp),%eax
0000000000028f1c	incq	%r12
0000000000028f1f	movw	%eax,%r15d
0000000000028f23	cmpq	0xb0(%rbp),%r12
0000000000028f27	jge	0x00029009
0000000000028f2d	movq	0xc0(%rbp),%rdi
0000000000028f31	movq	0x0007c320(%rip),%rsi
0000000000028f38	movq	%r12,%rdx
0000000000028f3b	call	*0x0005b197(%rip)
0000000000028f41	movzwl	%ax,%ecx
0000000000028f44	cmpw	$0x0d,%cx
0000000000028f48	ja	0x00028ec4
0000000000028f4e	leaq	0x000000c3(%rip),%rsi
0000000000028f55	movslq	(%rsi,%rcx,4),%rdx
0000000000028f59	addq	%rsi,%rdx
0000000000028f5c	jmp	*%rdx
0000000000028f5e	movq	%rbx,%rdi
0000000000028f61	movq	0x0007cda8(%rip),%rsi
0000000000028f68	leaq	0x00087e69(%rip),%rdx
0000000000028f6f	jmp	0x00028f05
0000000000028f71	movq	%rbx,%rdi
0000000000028f74	movq	0x0007cd95(%rip),%rsi
0000000000028f7b	leaq	0x00087e76(%rip),%rdx
0000000000028f82	jmp	0x00028f05
0000000000028f84	movq	%rbx,%rdi
0000000000028f87	movq	0x0007cd82(%rip),%rsi
0000000000028f8e	leaq	0x00087e83(%rip),%rdx
0000000000028f95	jmp	0x00028f05
0000000000028f9a	movq	%rbx,%rdi
0000000000028f9d	movq	0x0007cd6c(%rip),%rsi
0000000000028fa4	leaq	0x00087e8d(%rip),%rdx
0000000000028fab	jmp	0x00028f05
0000000000028fb0	movq	%rbx,%rdi
0000000000028fb3	movq	0x0007cd56(%rip),%rsi
0000000000028fba	leaq	0x00087e97(%rip),%rdx
0000000000028fc1	jmp	0x00028f05
0000000000028fc6	movq	%rbx,%rdi
0000000000028fc9	movq	0x0007cd40(%rip),%rsi
0000000000028fd0	leaq	0x00087ea1(%rip),%rdx
0000000000028fd7	jmp	0x00028f05
0000000000028fdc	movq	%rbx,%rdi
0000000000028fdf	movq	0x0007cd2a(%rip),%rsi
0000000000028fe6	leaq	0x00087eab(%rip),%rdx
0000000000028fed	jmp	0x00028f05
0000000000028ff2	movl	0xd0(%rbp),%eax
0000000000028ff5	cmpb	$0x01,%al
0000000000028ff7	jne	0x00028ea6
0000000000028ffd	xorl	%eax,%eax
0000000000028fff	testw	%r15d,%r15d
0000000000029003	jne	0x00028f1c
0000000000029009	addq	$0x38,%rsp
000000000002900d	popq	%rbx
000000000002900e	popq	%r12
0000000000029010	popq	%r13
0000000000029012	popq	%r14
0000000000029014	popq	%r15
0000000000029016	popq	%rbp
0000000000029017	ret
0000000000029018	.byte 0xda, 0xff #bad opcode
000000000002901a	.byte 0xff, 0xff #bad opcode
000000000002901c	lodsb	(%esi),%al
000000000002901d	.byte 0xfe, 0xff #bad opcode
000000000002901f	ljmpl	*0xfeacffff(%rsi,%rdi,8)
0000000000029026	.byte 0xff, 0xff #bad opcode
0000000000029028	lodsb	(%esi),%al
0000000000029029	.byte 0xfe, 0xff #bad opcode
000000000002902b	ljmpl	*0xfeacffff(%rsi,%rdi,8)
0000000000029032	.byte 0xff, 0xff #bad opcode
0000000000029034	.byte 0x46, 0xff, 0xff #bad opcode
0000000000029037	lcalll	*0xff(%rcx)
000000000002903a	.byte 0xff, 0xff #bad opcode
000000000002903c	scasb	%al,(%edi)
000000000002903d	.byte 0xff, 0xff #bad opcode
000000000002903f	incl	0xc4ffffff(%rdx)
0000000000029045	.byte 0xff, 0xff #bad opcode
0000000000029047	ljmpl	*0xff(%rdi,%rdi,8)
000000000002904b	lcalll	*0x90ffffff(%rax)
0000000000029051	nop
0000000000029052	nop
0000000000029053	nop
0000000000029054	nop
0000000000029055	nop
0000000000029056	nop
0000000000029057	nop
0000000000029058	nop
0000000000029059	nop
000000000002905a	nop
+[DBGGDBDataValue keyPathsForValuesAffectingChildValuesCountValid]:
000000000002905b	pushq	%rbp
000000000002905c	movq	%rsp,%rbp
000000000002905f	movq	0x0007f0f2(%rip),%rsi
0000000000029066	movq	0x0007f603(%rip),%rdi
000000000002906d	leaq	0x0008d904(%rip),%rdx
0000000000029074	popq	%rbp
0000000000029075	jmp	*0x0005b05d(%rip)
000000000002907b	nop
000000000002907c	nop
000000000002907d	nop
000000000002907e	nop
000000000002907f	nop
0000000000029080	nop
0000000000029081	nop
0000000000029082	nop
0000000000029083	nop
0000000000029084	nop
0000000000029085	nop
0000000000029086	nop
0000000000029087	nop
0000000000029088	nop
-[DBGGDBDataValue childValuesCountValid]:
0000000000029089	pushq	%rbp
000000000002908a	movq	%rsp,%rbp
000000000002908d	pushq	%rbx
000000000002908e	pushq	%rax
000000000002908f	movq	0x0007ef42(%rip),%rsi
0000000000029096	movq	0x0005b03b(%rip),%rbx
000000000002909d	call	*%rbx
000000000002909f	movq	0x0007c4ea(%rip),%rsi
00000000000290a6	movq	%rax,%rdi
00000000000290a9	call	*%rbx
00000000000290ab	cmpl	$0x02,%eax
00000000000290ae	sete	%al
00000000000290b1	movzbl	%al,%eax
00000000000290b4	addq	$0x08,%rsp
00000000000290b8	popq	%rbx
00000000000290b9	popq	%rbp
00000000000290ba	ret
00000000000290bb	nop
00000000000290bc	nop
00000000000290bd	nop
00000000000290be	nop
00000000000290bf	nop
00000000000290c0	nop
00000000000290c1	nop
00000000000290c2	nop
-[DBGGDBDataValue childValues]:
00000000000290c3	pushq	%rbp
00000000000290c4	movq	%rsp,%rbp
00000000000290c7	pushq	%r14
00000000000290c9	pushq	%rbx
00000000000290ca	movq	%rdi,%rbx
00000000000290cd	movq	0x000865dc(%rip),%rax
00000000000290d4	cmpq	$0x00,(%rbx,%rax)
00000000000290d9	jne	0x00029178
00000000000290df	movq	0x0007f162(%rip),%rsi
00000000000290e6	movq	0x0007fbf3(%rip),%rdi
00000000000290ed	movq	0x0005afe4(%rip),%r14
00000000000290f4	call	*%r14
00000000000290f7	movq	0x000865b2(%rip),%rdx
00000000000290fe	movq	%rax,%rdi
0000000000029101	movq	%rbx,%rsi
0000000000029104	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000029109	movq	0x0007eec8(%rip),%rsi
0000000000029110	movq	%rbx,%rdi
0000000000029113	call	*%r14
0000000000029116	movq	0x0007c473(%rip),%rsi
000000000002911d	movq	%rax,%rdi
0000000000029120	call	*%r14
0000000000029123	testl	%eax,%eax
0000000000029125	jne	0x00029178
0000000000029127	movq	0x0007f122(%rip),%rsi
000000000002912e	movq	%rbx,%rdi
0000000000029131	call	*0x0005afa1(%rip)
0000000000029137	testq	%rax,%rax
000000000002913a	jne	0x0002915f
000000000002913c	movq	0x0007ee95(%rip),%rsi
0000000000029143	movq	0x0005af8e(%rip),%r14
000000000002914a	movq	%rbx,%rdi
000000000002914d	call	*%r14
0000000000029150	movq	0x0007e101(%rip),%rsi
0000000000029157	movq	%rax,%rdi
000000000002915a	call	*%r14
000000000002915d	jmp	0x00029178
000000000002915f	movq	0x0007f0ea(%rip),%rsi
0000000000029166	movq	%rbx,%rdi
0000000000029169	call	*0x0005af69(%rip)
000000000002916f	movq	%rax,%rdi
0000000000029172	movq	%rbx,%rsi
0000000000029175	call	*0x10(%rax)
0000000000029178	movq	0x0007ef69(%rip),%rsi
000000000002917f	leaq	0x0008d7d2(%rip),%rdx
0000000000029186	movq	%rbx,%rdi
0000000000029189	popq	%rbx
000000000002918a	popq	%r14
000000000002918c	popq	%rbp
000000000002918d	jmp	*0x0005af45(%rip)
0000000000029193	nop
0000000000029194	nop
0000000000029195	nop
0000000000029196	nop
0000000000029197	nop
0000000000029198	nop
0000000000029199	nop
-[DBGGDBDataValue childLoadBlock]:
000000000002919a	pushq	%rbp
000000000002919b	movq	%rsp,%rbp
000000000002919e	movq	0x00086523(%rip),%rdx
00000000000291a5	movl	$0x00000001,%ecx
00000000000291aa	popq	%rbp
00000000000291ab	jmp	0x0004e632	; symbol stub for: _objc_getProperty
-[PBXGDB_VarObjDataValue2 requestGetChildren]:
00000000000291b0	pushq	%rbp
00000000000291b1	movq	%rsp,%rbp
00000000000291b4	pushq	%r14
00000000000291b6	pushq	%rbx
00000000000291b7	subq	$0x10,%rsp
00000000000291bb	movq	%rdi,%rbx
00000000000291be	movq	0x0007c3cb(%rip),%rsi
00000000000291c5	call	*0x0005af0d(%rip)
00000000000291cb	testl	%eax,%eax
00000000000291cd	jne	0x0002921f
00000000000291cf	movq	%rbx,0xe0(%rbp)
00000000000291d3	movq	0x0007fdb6(%rip),%rax
00000000000291da	movq	%rax,0xe8(%rbp)
00000000000291de	movq	0x0007e073(%rip),%rsi
00000000000291e5	leaq	0xe0(%rbp),%rdi
00000000000291e9	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000291ee	movq	0x0005aee3(%rip),%r14
00000000000291f5	movq	0x0007b8bc(%rip),%rsi
00000000000291fc	movq	%rbx,%rdi
00000000000291ff	call	*%r14
0000000000029202	movq	0x0007c23f(%rip),%rsi
0000000000029209	movq	%rax,%rdi
000000000002920c	call	*%r14
000000000002920f	movq	0x0007e04a(%rip),%rsi
0000000000029216	movq	%rax,%rdi
0000000000029219	movq	%rbx,%rdx
000000000002921c	call	*%r14
000000000002921f	addq	$0x10,%rsp
0000000000029223	popq	%rbx
0000000000029224	popq	%r14
0000000000029226	popq	%rbp
0000000000029227	ret
-[PBXLSDataValue requestGetChildren]:
0000000000029228	pushq	%rbp
0000000000029229	movq	%rsp,%rbp
000000000002922c	movq	0x0007c365(%rip),%rsi
0000000000029233	movl	$0x00000001,%edx
0000000000029238	popq	%rbp
0000000000029239	jmp	*0x0005ae99(%rip)
-[PBXGDB_DataValueController enqueueGetChildrenSequenceForDataValue:]:
000000000002923f	pushq	%rbp
0000000000029240	movq	%rsp,%rbp
0000000000029243	pushq	%r15
0000000000029245	pushq	%r14
0000000000029247	pushq	%rbx
0000000000029248	pushq	%rax
0000000000029249	movq	%rdx,%r15
000000000002924c	movq	%rdi,%r14
000000000002924f	movq	0x0007f58a(%rip),%rdi
0000000000029256	leaq	0x0007f083(%rip),%rsi
000000000002925d	call	*0x0007f07d(%rip)
0000000000029263	movq	0x0007b806(%rip),%rsi
000000000002926a	movq	%rax,%rdi
000000000002926d	call	*0x0005ae65(%rip)
0000000000029273	movq	%rax,%rbx
0000000000029276	movq	0x0007c1db(%rip),%rsi
000000000002927d	movq	%r14,%rdi
0000000000029280	movq	%rbx,%rdx
0000000000029283	movq	%r15,%rcx
0000000000029286	call	*0x0005ae4c(%rip)
000000000002928c	movq	0x0007b825(%rip),%rsi
0000000000029293	movq	%r14,%rdi
0000000000029296	call	*0x0005ae3c(%rip)
000000000002929c	movq	0x0007bb2d(%rip),%rsi
00000000000292a3	movq	%rax,%rdi
00000000000292a6	call	*0x0005ae2c(%rip)
00000000000292ac	movq	0x0007bb2d(%rip),%rsi
00000000000292b3	movq	%rax,%rdi
00000000000292b6	movq	%rbx,%rdx
00000000000292b9	movq	0x0005ae18(%rip),%rax
00000000000292c0	addq	$0x08,%rsp
00000000000292c4	popq	%rbx
00000000000292c5	popq	%r14
00000000000292c7	popq	%r15
00000000000292c9	popq	%rbp
00000000000292ca	jmp	*%rax
-[PBXGDB_GetDataValueChildrenSequence execute]:
00000000000292cc	pushq	%rbp
00000000000292cd	movq	%rsp,%rbp
00000000000292d0	pushq	%r14
00000000000292d2	pushq	%rbx
00000000000292d3	movq	%rdi,%r14
00000000000292d6	movq	0x0007cb0b(%rip),%rsi
00000000000292dd	movq	0x0005adf4(%rip),%rbx
00000000000292e4	call	*%rbx
00000000000292e6	movq	0x0007c4c3(%rip),%rsi
00000000000292ed	movq	%rax,%rdi
00000000000292f0	call	*%rbx
00000000000292f2	testb	%al,%al
00000000000292f4	je	0x00029319
00000000000292f6	movq	0x0007caeb(%rip),%rsi
00000000000292fd	movq	0x0005add4(%rip),%rbx
0000000000029304	movq	%r14,%rdi
0000000000029307	call	*%rbx
0000000000029309	movq	0x0007cae0(%rip),%rsi
0000000000029310	movq	%rax,%rdi
0000000000029313	call	*%rbx
0000000000029315	cmpb	$0x01,%al
0000000000029317	jne	0x0002932d
0000000000029319	movq	0x0007b818(%rip),%rsi
0000000000029320	movq	%r14,%rdi
0000000000029323	popq	%rbx
0000000000029324	popq	%r14
0000000000029326	popq	%rbp
0000000000029327	jmp	*0x0005adab(%rip)
000000000002932d	movq	0x0007b74c(%rip),%rsi
0000000000029334	movq	0x0007f4fd(%rip),%rdi
000000000002933b	call	*0x0005ad97(%rip)
0000000000029341	movq	%rax,%rbx
0000000000029344	movq	0x0007b73d(%rip),%rsi
000000000002934b	movq	%rbx,%rdi
000000000002934e	movq	%r14,%rdx
0000000000029351	call	*0x0005ad81(%rip)
0000000000029357	movq	0x0007b73a(%rip),%rsi
000000000002935e	movq	0x0007ca93(%rip),%rdx
0000000000029365	movq	%rbx,%rdi
0000000000029368	call	*0x0005ad6a(%rip)
000000000002936e	movq	0x0007ca73(%rip),%rsi
0000000000029375	movq	%r14,%rdi
0000000000029378	call	*0x0005ad5a(%rip)
000000000002937e	movq	0x0007c373(%rip),%rsi
0000000000029385	movq	%rax,%rdi
0000000000029388	call	*0x0005ad4a(%rip)
000000000002938e	movq	0x0007c2c3(%rip),%rsi
0000000000029395	movq	%rbx,%rdi
0000000000029398	movq	%rax,%rdx
000000000002939b	call	*0x0005ad37(%rip)
00000000000293a1	movq	0x0007c298(%rip),%rsi
00000000000293a8	movq	%r14,%rdi
00000000000293ab	movq	%rbx,%rdx
00000000000293ae	movq	0x0005ad23(%rip),%rax
00000000000293b5	popq	%rbx
00000000000293b6	popq	%r14
00000000000293b8	popq	%rbp
00000000000293b9	jmp	*%rax
-[PBXLSDataValue usesSyntheticChildren]:
00000000000293bb	pushq	%rbp
00000000000293bc	movq	%rsp,%rbp
00000000000293bf	xorl	%eax,%eax
00000000000293c1	popq	%rbp
00000000000293c2	ret
-[PBXGDB_MIGetChildrenVarObjCommand setVarObjName:]:
00000000000293c3	pushq	%rbp
00000000000293c4	movq	%rsp,%rbp
00000000000293c7	pushq	%r14
00000000000293c9	pushq	%rbx
00000000000293ca	movq	%rdx,%rbx
00000000000293cd	movq	%rdi,%r14
00000000000293d0	movq	0x0007f079(%rip),%rdi
00000000000293d7	leaq	0x0007ef02(%rip),%rsi
00000000000293de	call	*0x0007eefc(%rip)
00000000000293e4	movq	0x0007b8cd(%rip),%rsi
00000000000293eb	leaq	0x0008a726(%rip),%rdx
00000000000293f2	movq	%rax,%rdi
00000000000293f5	movq	%rbx,%rcx
00000000000293f8	xorb	%al,%al
00000000000293fa	call	*0x0005acd8(%rip)
0000000000029400	leaq	0x00085729(%rip),%rcx
0000000000029407	movq	(%rcx),%rdx
000000000002940a	movq	%rax,%rdi
000000000002940d	movq	%r14,%rsi
0000000000029410	popq	%rbx
0000000000029411	popq	%r14
0000000000029413	popq	%rbp
0000000000029414	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000029419	nop
000000000002941a	nop
000000000002941b	nop
000000000002941c	nop
000000000002941d	nop
000000000002941e	nop
000000000002941f	nop
0000000000029420	nop
0000000000029421	nop
0000000000029422	nop
-[DBGGDBDataValue countOfChildrenProxyValues]:
0000000000029423	pushq	%rbp
0000000000029424	movq	%rsp,%rbp
0000000000029427	movq	0x00086282(%rip),%rax
000000000002942e	movq	(%rdi,%rax),%rdi
0000000000029432	movq	0x0007eed7(%rip),%rax
0000000000029439	leaq	0x0007eed0(%rip),%rsi
0000000000029440	popq	%rbp
0000000000029441	jmp	*%rax
-[PBXGDB_MIGetChildrenVarObjCommand didFinishWithResultList:]:
0000000000029443	pushq	%rbp
0000000000029444	movq	%rsp,%rbp
0000000000029447	pushq	%r15
0000000000029449	pushq	%r14
000000000002944b	pushq	%r12
000000000002944d	pushq	%rbx
000000000002944e	subq	$0x10,%rsp
0000000000029452	movq	%rdx,%r14
0000000000029455	movq	%rdi,%rbx
0000000000029458	movq	0x0007b679(%rip),%rsi
000000000002945f	leaq	0x0008a6d2(%rip),%rdx
0000000000029466	movq	%r14,%rdi
0000000000029469	call	*0x0005ac69(%rip)
000000000002946f	movq	%rax,%r15
0000000000029472	movq	0x00085a3f(%rip),%rdx
0000000000029479	xorl	%edi,%edi
000000000002947b	movq	%rbx,%rsi
000000000002947e	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000029483	movq	0x00085a3e(%rip),%rax
000000000002948a	movq	$0x00000000,(%rbx,%rax)
0000000000029492	movq	0x00085a27(%rip),%rdx
0000000000029499	xorl	%edi,%edi
000000000002949b	movq	%rbx,%rsi
000000000002949e	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000294a3	testq	%r15,%r15
00000000000294a6	je	0x000294db
00000000000294a8	movq	0x0007b631(%rip),%rsi
00000000000294af	movq	0x0005ac22(%rip),%r12
00000000000294b6	movq	%r15,%rdi
00000000000294b9	call	*%r12
00000000000294bc	movq	0x0007b625(%rip),%rsi
00000000000294c3	movq	%rax,%rdi
00000000000294c6	call	*%r12
00000000000294c9	movq	0x000859e8(%rip),%rdx
00000000000294d0	movq	%rax,%rdi
00000000000294d3	movq	%rbx,%rsi
00000000000294d6	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000294db	movq	%rbx,0xd0(%rbp)
00000000000294df	movq	0x0007fa3a(%rip),%rax
00000000000294e6	movq	%rax,0xd8(%rbp)
00000000000294ea	movq	0x0007cd0f(%rip),%rsi
00000000000294f1	leaq	0xd0(%rbp),%rdi
00000000000294f5	movq	%r14,%rdx
00000000000294f8	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000294fd	addq	$0x10,%rsp
0000000000029501	popq	%rbx
0000000000029502	popq	%r12
0000000000029504	popq	%r14
0000000000029506	popq	%r15
0000000000029508	popq	%rbp
0000000000029509	ret
-[PBXGDB_GetDataValueChildrenSequence _gotResultChildrenOfVarObj:]:
000000000002950a	pushq	%rbp
000000000002950b	movq	%rsp,%rbp
000000000002950e	pushq	%r15
0000000000029510	pushq	%r14
0000000000029512	pushq	%r13
0000000000029514	pushq	%r12
0000000000029516	pushq	%rbx
0000000000029517	subq	$0x00000118,%rsp
000000000002951e	movq	%rdx,%r15
0000000000029521	movq	0x0005ab78(%rip),%rax
0000000000029528	movq	(%rax),%rax
000000000002952b	movq	%rax,0xd0(%rbp)
000000000002952f	movq	%rdi,0xc8(%rbp)
0000000000029533	movq	%rsi,0xc0(%rbp)
0000000000029537	testq	%r15,%r15
000000000002953a	jne	0x000295a2
000000000002953c	movq	0x0007f2f5(%rip),%rdi
0000000000029543	leaq	0x0007ede6(%rip),%rsi
000000000002954a	call	*0x0007ede0(%rip)
0000000000029550	movq	%rax,%rdi
0000000000029553	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000029558	leaq	0xc8(%rbp),%rdi
000000000002955c	leaq	0xc0(%rbp),%rsi
0000000000029560	leaq	0x0003512a(%rip),%rdx
0000000000029567	leaq	0x00034e4f(%rip),%rcx
000000000002956e	leaq	0x00086443(%rip),%r9
0000000000029575	leaq	0x00034584(%rip),%r8
000000000002957c	leaq	0x00034581(%rip),%rbx
0000000000029583	movq	%rbx,0x18(%rsp)
0000000000029588	leaq	0x000862a9(%rip),%rbx
000000000002958f	movq	%rbx,0x10(%rsp)
0000000000029594	movq	%rax,0x08(%rsp)
0000000000029599	movq	%r8,(%rsp)
000000000002959d	jmp	0x0002964d
00000000000295a2	movq	0x0007f28f(%rip),%rdi
00000000000295a9	leaq	0x0007ed80(%rip),%rsi
00000000000295b0	call	*0x0007ed7a(%rip)
00000000000295b6	leaq	0x0007ed83(%rip),%rsi
00000000000295bd	movq	%r15,%rdi
00000000000295c0	movq	%rax,%rdx
00000000000295c3	call	*0x0007ed77(%rip)
00000000000295c9	testb	%al,%al
00000000000295cb	movq	%r15,%rdi
00000000000295ce	jne	0x0002965d
00000000000295d4	movq	0x0007f25d(%rip),%rdi
00000000000295db	leaq	0x0007ed4e(%rip),%rsi
00000000000295e2	call	*0x0007ed48(%rip)
00000000000295e8	movq	%rax,%rdi
00000000000295eb	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
00000000000295f0	movq	%rax,%r14
00000000000295f3	movq	0x0007b666(%rip),%rsi
00000000000295fa	movq	%r15,%rdi
00000000000295fd	call	*0x0005aad5(%rip)
0000000000029603	leaq	0x0008622e(%rip),%r8
000000000002960a	leaq	0x000350c3(%rip),%rbx
0000000000029611	leaq	0xc8(%rbp),%rdi
0000000000029615	leaq	0xc0(%rbp),%rsi
0000000000029619	leaq	0x00035071(%rip),%rdx
0000000000029620	leaq	0x00034d96(%rip),%rcx
0000000000029627	movq	%rbx,0x20(%rsp)
000000000002962c	leaq	0x000863a5(%rip),%r9
0000000000029633	movq	%r8,0x18(%rsp)
0000000000029638	movq	%rax,0x10(%rsp)
000000000002963d	leaq	0x000344bc(%rip),%rax
0000000000029644	movq	%r14,0x08(%rsp)
0000000000029649	movq	%rax,(%rsp)
000000000002964d	movl	$0x00000194,%r8d
0000000000029653	xorb	%al,%al
0000000000029655	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000002965a	movq	%r15,%rdi
000000000002965d	movq	0x0007c70c(%rip),%rsi
0000000000029664	call	*0x0005aa6e(%rip)
000000000002966a	testq	%rax,%rax
000000000002966d	je	0x00029803
0000000000029673	movq	0x0007bf8e(%rip),%rsi
000000000002967a	movq	0xc8(%rbp),%rdi
000000000002967e	movq	0x0005aa53(%rip),%r14
0000000000029685	call	*%r14
0000000000029688	movq	%rax,%rbx
000000000002968b	movq	0x0007c6e6(%rip),%rsi
0000000000029692	movq	0xc8(%rbp),%rdi
0000000000029696	movq	%r15,%rdx
0000000000029699	movq	%rbx,%rcx
000000000002969c	call	*%r14
000000000002969f	xorps	%xmm0,%xmm0
00000000000296a2	movaps	%xmm0,0xb0(%rbp)
00000000000296a6	movaps	%xmm0,0xa0(%rbp)
00000000000296aa	movaps	%xmm0,0x90(%rbp)
00000000000296ae	movaps	%xmm0,0x80(%rbp)
00000000000296b2	movq	0x0007bfcf(%rip),%rsi
00000000000296b9	movq	%rbx,%rdi
00000000000296bc	call	*%r14
00000000000296bf	movq	%rax,0xfffffef8(%rbp)
00000000000296c6	leaq	0x0007ecb3(%rip),%rsi
00000000000296cd	leaq	0x80(%rbp),%rdx
00000000000296d1	leaq	0xffffff00(%rbp),%rcx
00000000000296d8	movq	%rax,%rdi
00000000000296db	movl	$0x00000010,%r8d
00000000000296e1	call	*0x0007ec99(%rip)
00000000000296e7	movq	%rax,%rbx
00000000000296ea	testq	%rbx,%rbx
00000000000296ed	je	0x00029803
00000000000296f3	leaq	0x000850ee(%rip),%rax
00000000000296fa	movq	(%rax),%rax
00000000000296fd	movq	%rax,0xfffffef0(%rbp)
0000000000029704	movq	0x90(%rbp),%rax
0000000000029708	movq	(%rax),%rax
000000000002970b	movq	%rax,0xfffffee8(%rbp)
0000000000029712	movq	0x0005a9bf(%rip),%r15
0000000000029719	xorl	%r12d,%r12d
000000000002971c	movq	0x90(%rbp),%rax
0000000000029720	movq	0xfffffee8(%rbp),%rcx
0000000000029727	cmpq	%rcx,(%rax)
000000000002972a	je	0x00029738
000000000002972c	movq	0xfffffef8(%rbp),%rdi
0000000000029733	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
0000000000029738	movq	0x88(%rbp),%rax
000000000002973c	movq	(%rax,%r12,8),%r14
0000000000029740	movq	0x0007ef89(%rip),%rdi
0000000000029747	movq	0x0007b332(%rip),%rsi
000000000002974e	call	*%r15
0000000000029751	movq	%rax,%r13
0000000000029754	movq	%r14,%rdi
0000000000029757	movq	0x0007bf9a(%rip),%rsi
000000000002975e	call	*%r15
0000000000029761	movq	%r13,%rdi
0000000000029764	movq	0x0007beed(%rip),%rsi
000000000002976b	movq	%rax,%rdx
000000000002976e	call	*%r15
0000000000029771	movq	0xc8(%rbp),%rdx
0000000000029775	movq	%r13,%rdi
0000000000029778	movq	0x0007b309(%rip),%rsi
000000000002977f	call	*%r15
0000000000029782	movq	%r13,%rdi
0000000000029785	movq	0x0007be74(%rip),%rsi
000000000002978c	movq	%r14,%rdx
000000000002978f	call	*%r15
0000000000029792	movq	%r13,%rdi
0000000000029795	movq	0x0007b2fc(%rip),%rsi
000000000002979c	movq	0x0007c16d(%rip),%rdx
00000000000297a3	call	*%r15
00000000000297a6	movq	0xc8(%rbp),%rax
00000000000297aa	movq	0xfffffef0(%rbp),%rcx
00000000000297b1	incq	(%rax,%rcx)
00000000000297b5	movq	0xc8(%rbp),%rdi
00000000000297b9	movq	0x0007be80(%rip),%rsi
00000000000297c0	movq	%r13,%rdx
00000000000297c3	call	*%r15
00000000000297c6	incq	%r12
00000000000297c9	cmpq	%rbx,%r12
00000000000297cc	jb	0x0002971c
00000000000297d2	movq	0xfffffef8(%rbp),%rdi
00000000000297d9	leaq	0x0007eba0(%rip),%rsi
00000000000297e0	leaq	0x80(%rbp),%rdx
00000000000297e4	leaq	0xffffff00(%rbp),%rcx
00000000000297eb	movl	$0x00000010,%r8d
00000000000297f1	call	*0x0007eb89(%rip)
00000000000297f7	movq	%rax,%rbx
00000000000297fa	testq	%rbx,%rbx
00000000000297fd	jne	0x00029719
0000000000029803	leaq	0x00084fde(%rip),%rax
000000000002980a	movq	(%rax),%rax
000000000002980d	movq	0xc8(%rbp),%rdi
0000000000029811	cmpq	$0x00,(%rdi,%rax)
0000000000029816	jne	0x00029825
0000000000029818	movq	0x0007b319(%rip),%rsi
000000000002981f	call	*0x0005a8b3(%rip)
0000000000029825	movq	0x0005a874(%rip),%rax
000000000002982c	movq	(%rax),%rax
000000000002982f	cmpq	0xd0(%rbp),%rax
0000000000029833	jne	0x00029847
0000000000029835	addq	$0x00000118,%rsp
000000000002983c	popq	%rbx
000000000002983d	popq	%r12
000000000002983f	popq	%r13
0000000000029841	popq	%r14
0000000000029843	popq	%r15
0000000000029845	popq	%rbp
0000000000029846	ret
0000000000029847	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
-[PBXGDB_GetDataValueChildrenSequence didGetPathExpression]:
000000000002984c	pushq	%rbp
000000000002984d	movq	%rsp,%rbp
0000000000029850	leaq	0x00084f91(%rip),%rax
0000000000029857	movq	(%rax),%rax
000000000002985a	decq	(%rdi,%rax)
000000000002985e	cmpq	$0x00,(%rdi,%rax)
0000000000029863	je	0x00029867
0000000000029865	popq	%rbp
0000000000029866	ret
0000000000029867	movq	0x0007b2ca(%rip),%rsi
000000000002986e	popq	%rbp
000000000002986f	jmp	*0x0005a863(%rip)
-[PBXGDB_GetDataValueChildrenSequence didFinish]:
0000000000029875	pushq	%rbp
0000000000029876	movq	%rsp,%rbp
0000000000029879	pushq	%r14
000000000002987b	pushq	%rbx
000000000002987c	subq	$0x10,%rsp
0000000000029880	movq	%rdi,%rbx
0000000000029883	movq	0x0007bd7e(%rip),%rsi
000000000002988a	movq	0x0005a847(%rip),%r14
0000000000029891	call	*%r14
0000000000029894	movq	0x0007c525(%rip),%rsi
000000000002989b	movq	%rax,%rdi
000000000002989e	call	*%r14
00000000000298a1	movq	%rbx,0xe0(%rbp)
00000000000298a5	leaq	0xe0(%rbp),%rdi
00000000000298a9	movq	0x0007f4f8(%rip),%rax
00000000000298b0	movq	%rax,0xe8(%rbp)
00000000000298b4	movq	0x0007b27d(%rip),%rsi
00000000000298bb	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000298c0	addq	$0x10,%rsp
00000000000298c4	popq	%rbx
00000000000298c5	popq	%r14
00000000000298c7	popq	%rbp
00000000000298c8	ret
-[PBXGDB_SyntheticDataValue didGetChildren]:
00000000000298c9	pushq	%rbp
00000000000298ca	movq	%rsp,%rbp
00000000000298cd	pushq	%r15
00000000000298cf	pushq	%r14
00000000000298d1	pushq	%r13
00000000000298d3	pushq	%r12
00000000000298d5	pushq	%rbx
00000000000298d6	subq	$0x28,%rsp
00000000000298da	movq	%rdi,0xb8(%rbp)
00000000000298de	movq	0x0007bda3(%rip),%rsi
00000000000298e5	movq	0x0005a7ec(%rip),%rbx
00000000000298ec	call	*%rbx
00000000000298ee	movq	%rax,0xc0(%rbp)
00000000000298f2	leaq	0x0007ea17(%rip),%rsi
00000000000298f9	movq	%rax,%rdi
00000000000298fc	call	*0x0007ea0e(%rip)
0000000000029902	movq	%rax,%r12
0000000000029905	movq	0x0007eb54(%rip),%rdi
000000000002990c	leaq	0x0007e9cd(%rip),%rsi
0000000000029913	call	*0x0007e9c7(%rip)
0000000000029919	movq	0x0007b150(%rip),%rsi
0000000000029920	movq	%rax,%rdi
0000000000029923	call	*%rbx
0000000000029925	movq	%rax,%r15
0000000000029928	leaq	0x0007ea01(%rip),%rsi
000000000002992f	movq	0x0007ed82(%rip),%rdi
0000000000029936	call	*0x0007e9f4(%rip)
000000000002993c	movq	%rax,%r13
000000000002993f	testq	%r12,%r12
0000000000029942	je	0x000299a4
0000000000029944	xorl	%r14d,%r14d
0000000000029947	movq	0xc0(%rbp),%rdi
000000000002994b	leaq	0x0007e9ce(%rip),%rsi
0000000000029952	movq	%r14,%rdx
0000000000029955	call	*0x0007e9c5(%rip)
000000000002995b	movq	%rax,%rbx
000000000002995e	movq	%rbx,%rdi
0000000000029961	movq	0x0007c170(%rip),%rsi
0000000000029968	call	*0x0005a76a(%rip)
000000000002996e	testb	%al,%al
0000000000029970	je	0x0002999c
0000000000029972	movq	%rbx,%rdi
0000000000029975	leaq	0x0007e9c4(%rip),%rsi
000000000002997c	movq	%r13,%rdx
000000000002997f	call	*0x0007e9bb(%rip)
0000000000029985	testb	%al,%al
0000000000029987	jne	0x0002999c
0000000000029989	movq	%r15,%rdi
000000000002998c	leaq	0x0007e96d(%rip),%rsi
0000000000029993	movq	%rbx,%rdx
0000000000029996	call	*0x0007e964(%rip)
000000000002999c	incq	%r14
000000000002999f	cmpq	%r14,%r12
00000000000299a2	jne	0x00029947
00000000000299a4	leaq	0x0007e965(%rip),%rsi
00000000000299ab	movq	%r15,%r13
00000000000299ae	movq	%r13,%rdi
00000000000299b1	call	*0x0007e959(%rip)
00000000000299b7	movq	%rax,0xc0(%rbp)
00000000000299bb	movq	0x000856f6(%rip),%rcx
00000000000299c2	testq	%rax,%rax
00000000000299c5	je	0x00029a34
00000000000299c7	movq	0xb8(%rbp),%r15
00000000000299cb	movq	0xc0(%rbp),%rax
00000000000299cf	movq	%rax,(%r15,%rcx)
00000000000299d3	xorl	%ebx,%ebx
00000000000299d5	movq	0x0005a6fc(%rip),%r12
00000000000299dc	movq	%r13,%rdi
00000000000299df	leaq	0x0007e93a(%rip),%rsi
00000000000299e6	movq	%rbx,%rdx
00000000000299e9	call	*0x0007e931(%rip)
00000000000299ef	movq	%r13,%r14
00000000000299f2	movq	%rax,%r13
00000000000299f5	movq	%r13,%rdi
00000000000299f8	movq	0x0007c0e9(%rip),%rsi
00000000000299ff	movq	%r15,%rdx
0000000000029a02	call	*%r12
0000000000029a05	movq	%r13,%rdi
0000000000029a08	movq	0x0007c0e9(%rip),%rsi
0000000000029a0f	movq	0x0007d65a(%rip),%rdx
0000000000029a16	call	*%r12
0000000000029a19	movq	%r13,%rdi
0000000000029a1c	movq	%r14,%r13
0000000000029a1f	movq	0x0007bb62(%rip),%rsi
0000000000029a26	call	*%r12
0000000000029a29	incq	%rbx
0000000000029a2c	cmpq	%rbx,0xc0(%rbp)
0000000000029a30	jne	0x000299dc
0000000000029a32	jmp	0x00029a5f
0000000000029a34	movq	0xb8(%rbp),%r15
0000000000029a38	movq	$0x00000000,(%r15,%rcx)
0000000000029a40	movq	%r15,0xc8(%rbp)
0000000000029a44	movq	0x0007f52d(%rip),%rax
0000000000029a4b	movq	%rax,0xd0(%rbp)
0000000000029a4f	movq	0x0007c36a(%rip),%rsi
0000000000029a56	leaq	0xc8(%rbp),%rdi
0000000000029a5a	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000029a5f	addq	$0x28,%rsp
0000000000029a63	popq	%rbx
0000000000029a64	popq	%r12
0000000000029a66	popq	%r13
0000000000029a68	popq	%r14
0000000000029a6a	popq	%r15
0000000000029a6c	popq	%rbp
0000000000029a6d	ret
0000000000029a6e	nop
0000000000029a6f	nop
0000000000029a70	nop
0000000000029a71	nop
0000000000029a72	nop
0000000000029a73	nop
0000000000029a74	nop
-[DBGGDBSession requestStepOverLine:]:
0000000000029a75	pushq	%rbp
0000000000029a76	movq	%rsp,%rbp
0000000000029a79	pushq	%r14
0000000000029a7b	pushq	%rbx
0000000000029a7c	subq	$0x10,%rsp
0000000000029a80	movq	%rdi,%rbx
0000000000029a83	movq	%rbx,0xe0(%rbp)
0000000000029a87	movq	0x0007f62a(%rip),%rax
0000000000029a8e	movq	%rax,0xe8(%rbp)
0000000000029a92	movq	0x0007e477(%rip),%rsi
0000000000029a99	leaq	0xe0(%rbp),%rdi
0000000000029a9d	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000029aa2	movq	0x0005a62f(%rip),%r14
0000000000029aa9	movq	0x0007e450(%rip),%rsi
0000000000029ab0	movq	%rbx,%rdi
0000000000029ab3	call	*%r14
0000000000029ab6	movq	0x0007e45b(%rip),%rsi
0000000000029abd	movq	%rax,%rdi
0000000000029ac0	call	*%r14
0000000000029ac3	addq	$0x10,%rsp
0000000000029ac7	popq	%rbx
0000000000029ac8	popq	%r14
0000000000029aca	popq	%rbp
0000000000029acb	ret
0000000000029acc	nop
0000000000029acd	nop
0000000000029ace	nop
0000000000029acf	nop
0000000000029ad0	nop
0000000000029ad1	nop
0000000000029ad2	nop
0000000000029ad3	nop
0000000000029ad4	nop
0000000000029ad5	nop
0000000000029ad6	nop
0000000000029ad7	nop
0000000000029ad8	nop
0000000000029ad9	nop
0000000000029ada	nop
-[DBGGDBSession PBXThreadForCurrentThread]:
0000000000029adb	pushq	%rbp
0000000000029adc	movq	%rsp,%rbp
0000000000029adf	movq	0x0007b3da(%rip),%rsi
0000000000029ae6	call	*0x0005a5ec(%rip)
0000000000029aec	movq	0x0007b3d5(%rip),%rsi
0000000000029af3	movq	%rax,%rdi
0000000000029af6	call	*0x0005a5dc(%rip)
0000000000029afc	movq	0x0007b3d5(%rip),%rsi
0000000000029b03	movq	%rax,%rdi
0000000000029b06	movq	0x0005a5cb(%rip),%rax
0000000000029b0d	popq	%rbp
0000000000029b0e	jmp	*%rax
-[PBXLSThread requestStepOver]:
0000000000029b10	pushq	%rbp
0000000000029b11	movq	%rsp,%rbp
0000000000029b14	pushq	%rbx
0000000000029b15	pushq	%rax
0000000000029b16	movq	%rdi,%rbx
0000000000029b19	movq	0x0007baa8(%rip),%rsi
0000000000029b20	call	*0x0005a5b2(%rip)
0000000000029b26	movq	0x0007dbb3(%rip),%rsi
0000000000029b2d	movq	%rax,%rdi
0000000000029b30	movq	%rbx,%rdx
0000000000029b33	movq	0x0005a59e(%rip),%rax
0000000000029b3a	addq	$0x08,%rsp
0000000000029b3e	popq	%rbx
0000000000029b3f	popq	%rbp
0000000000029b40	jmp	*%rax
-[PBXGDB_Adaptor threadRequestStepOver:]:
0000000000029b42	pushq	%rbp
0000000000029b43	movq	%rsp,%rbp
0000000000029b46	pushq	%rbx
0000000000029b47	pushq	%rax
0000000000029b48	leaq	0x00085949(%rip),%rax
0000000000029b4f	movq	(%rax),%rax
0000000000029b52	incq	(%rdi,%rax)
0000000000029b56	movq	0x00084b23(%rip),%rax
0000000000029b5d	movq	(%rdi,%rax),%rbx
0000000000029b61	movq	0x0007b588(%rip),%rsi
0000000000029b68	movq	%rdx,%rdi
0000000000029b6b	call	*0x0005a567(%rip)
0000000000029b71	movq	0x0007b5a0(%rip),%rsi
0000000000029b78	movq	%rbx,%rdi
0000000000029b7b	movq	%rax,%rdx
0000000000029b7e	movq	0x0005a553(%rip),%rax
0000000000029b85	addq	$0x08,%rsp
0000000000029b89	popq	%rbx
0000000000029b8a	popq	%rbp
0000000000029b8b	jmp	*%rax
-[PBXGDB_ThreadController enqueueStepOverSequenceForThreadHandle:]:
0000000000029b8d	pushq	%rbp
0000000000029b8e	movq	%rsp,%rbp
0000000000029b91	movq	%rdx,%rax
0000000000029b94	movq	0x0007d615(%rip),%rsi
0000000000029b9b	xorl	%edx,%edx
0000000000029b9d	movq	%rax,%rcx
0000000000029ba0	popq	%rbp
0000000000029ba1	jmp	*0x0005a531(%rip)
-[PBXGDB_ThreadController _enqueueStepSequence:forThreadHandle:]:
0000000000029ba7	pushq	%rbp
0000000000029ba8	movq	%rsp,%rbp
0000000000029bab	pushq	%r15
0000000000029bad	pushq	%r14
0000000000029baf	pushq	%r12
0000000000029bb1	pushq	%rbx
0000000000029bb2	movq	%rcx,%r12
0000000000029bb5	movl	%edx,%r15d
0000000000029bb8	movq	%rdi,%r14
0000000000029bbb	movq	0x0007ef16(%rip),%rdi
0000000000029bc2	leaq	0x0007e717(%rip),%rsi
0000000000029bc9	call	*0x0007e711(%rip)
0000000000029bcf	movq	0x0007ae9a(%rip),%rsi
0000000000029bd6	movq	%rax,%rdi
0000000000029bd9	call	*0x0005a4f9(%rip)
0000000000029bdf	movq	%rax,%rbx
0000000000029be2	movq	0x0007d597(%rip),%rsi
0000000000029be9	movq	%r14,%rdi
0000000000029bec	movq	%rbx,%rdx
0000000000029bef	movq	%r12,%rcx
0000000000029bf2	call	*0x0005a4e0(%rip)
0000000000029bf8	movq	0x0007d5a9(%rip),%rsi
0000000000029bff	movq	%rbx,%rdi
0000000000029c02	movl	%r15d,%edx
0000000000029c05	call	*0x0005a4cd(%rip)
0000000000029c0b	movq	0x0007aea6(%rip),%rsi
0000000000029c12	movq	%r14,%rdi
0000000000029c15	call	*0x0005a4bd(%rip)
0000000000029c1b	movq	0x0007b1ae(%rip),%rsi
0000000000029c22	movq	%rax,%rdi
0000000000029c25	call	*0x0005a4ad(%rip)
0000000000029c2b	movq	0x0007b5a6(%rip),%rsi
0000000000029c32	movq	%rax,%rdi
0000000000029c35	movq	%rbx,%rdx
0000000000029c38	movq	0x0005a499(%rip),%rax
0000000000029c3f	popq	%rbx
0000000000029c40	popq	%r12
0000000000029c42	popq	%r14
0000000000029c44	popq	%r15
0000000000029c46	popq	%rbp
0000000000029c47	jmp	*%rax
0000000000029c49	nop
-[PBXGDB_StepControlSequence setStepSequenceType:]:
0000000000029c4a	pushq	%rbp
0000000000029c4b	movq	%rsp,%rbp
0000000000029c4e	movq	0x00084c33(%rip),%rax
0000000000029c55	movl	%edx,(%rdi,%rax)
0000000000029c58	popq	%rbp
0000000000029c59	ret
0000000000029c5a	nop
-[PBXGDB_StepControlSequence execute]:
0000000000029c5b	pushq	%rbp
0000000000029c5c	movq	%rsp,%rbp
0000000000029c5f	pushq	%r14
0000000000029c61	pushq	%rbx
0000000000029c62	movq	%rdi,%r14
0000000000029c65	movq	0x00084c1c(%rip),%rax
0000000000029c6c	movl	(%r14,%rax),%eax
0000000000029c70	addl	$0xfa,%eax
0000000000029c73	cmpl	$0x01,%eax
0000000000029c76	ja	0x00029d2f
0000000000029c7c	movq	0x0007adfd(%rip),%rsi
0000000000029c83	movq	0x0007ea86(%rip),%rdi
0000000000029c8a	call	*0x0005a448(%rip)
0000000000029c90	movq	%rax,%rbx
0000000000029c93	movq	0x0007bd8e(%rip),%rsi
0000000000029c9a	movq	%rbx,%rdi
0000000000029c9d	movl	$0x00000001,%edx
0000000000029ca2	call	*0x0005a430(%rip)
0000000000029ca8	movq	0x0007add9(%rip),%rsi
0000000000029caf	movq	%rbx,%rdi
0000000000029cb2	movq	%r14,%rdx
0000000000029cb5	call	*0x0005a41d(%rip)
0000000000029cbb	movq	0x0007be96(%rip),%rsi
0000000000029cc2	movq	%r14,%rdi
0000000000029cc5	call	*0x0005a40d(%rip)
0000000000029ccb	movq	0x0007add6(%rip),%rsi
0000000000029cd2	movq	%rbx,%rdi
0000000000029cd5	movq	%rax,%rdx
0000000000029cd8	call	*0x0005a3fa(%rip)
0000000000029cde	movq	0x0007adb3(%rip),%rsi
0000000000029ce5	movq	0x0007be74(%rip),%rdx
0000000000029cec	movq	%rbx,%rdi
0000000000029cef	call	*0x0005a3e3(%rip)
0000000000029cf5	movq	0x0007adbc(%rip),%rsi
0000000000029cfc	movq	%r14,%rdi
0000000000029cff	call	*0x0005a3d3(%rip)
0000000000029d05	movq	0x0007adb4(%rip),%rsi
0000000000029d0c	movq	%rax,%rdi
0000000000029d0f	call	*0x0005a3c3(%rip)
0000000000029d15	movq	0x0007adac(%rip),%rsi
0000000000029d1c	movq	%rax,%rdi
0000000000029d1f	movq	%rbx,%rdx
0000000000029d22	movq	0x0005a3af(%rip),%rax
0000000000029d29	popq	%rbx
0000000000029d2a	popq	%r14
0000000000029d2c	popq	%rbp
0000000000029d2d	jmp	*%rax
0000000000029d2f	movq	0x0007be2a(%rip),%rsi
0000000000029d36	movq	%r14,%rdi
0000000000029d39	popq	%rbx
0000000000029d3a	popq	%r14
0000000000029d3c	popq	%rbp
0000000000029d3d	jmp	*0x0005a395(%rip)
-[PBXGDB_StepControlSequence _doExecute]:
0000000000029d43	pushq	%rbp
0000000000029d44	movq	%rsp,%rbp
0000000000029d47	pushq	%r15
0000000000029d49	pushq	%r14
0000000000029d4b	pushq	%rbx
0000000000029d4c	pushq	%rax
0000000000029d4d	movq	%rdi,%r14
0000000000029d50	movq	0x00084b31(%rip),%rax
0000000000029d57	movl	(%r14,%rax),%eax
0000000000029d5b	cmpq	$0x07,%rax
0000000000029d5f	ja	0x00029e5a
0000000000029d65	leaq	0x00000188(%rip),%rcx
0000000000029d6c	movslq	(%rcx,%rax,4),%rax
0000000000029d70	addq	%rcx,%rax
0000000000029d73	jmp	*%rax
0000000000029d75	movq	0x0007ad04(%rip),%rsi
0000000000029d7c	movq	0x0007e9b5(%rip),%rdi
0000000000029d83	jmp	0x00029e4c
0000000000029d88	movq	0x0007acf1(%rip),%rsi
0000000000029d8f	movq	0x0007e9aa(%rip),%rdi
0000000000029d96	jmp	0x00029e4c
0000000000029d9b	movq	0x0007acde(%rip),%rsi
0000000000029da2	movq	0x0007e99f(%rip),%rdi
0000000000029da9	movq	0x0005a328(%rip),%r15
0000000000029db0	call	*%r15
0000000000029db3	movq	%rax,%rbx
0000000000029db6	leaq	0x0008520b(%rip),%rax
0000000000029dbd	movq	(%rax),%rax
0000000000029dc0	movq	(%r14,%rax),%rdi
0000000000029dc4	movq	0x0007aced(%rip),%rsi
0000000000029dcb	call	*%r15
0000000000029dce	movq	0x0007af13(%rip),%rsi
0000000000029dd5	movq	%rax,%rdi
0000000000029dd8	call	*%r15
0000000000029ddb	movq	0x0007b00e(%rip),%rsi
0000000000029de2	movq	%rax,%rdi
0000000000029de5	call	*%r15
0000000000029de8	movq	0x0007bd79(%rip),%rsi
0000000000029def	movq	%rax,%rdi
0000000000029df2	call	*%r15
0000000000029df5	movq	0x0007b0d4(%rip),%rsi
0000000000029dfc	movq	%rax,%rdi
0000000000029dff	call	*%r15
0000000000029e02	movq	0x0007b537(%rip),%rsi
0000000000029e09	movq	%rax,%rdi
0000000000029e0c	call	*%r15
0000000000029e0f	movq	0x0007b4ca(%rip),%rsi
0000000000029e16	movq	%rax,%rdi
0000000000029e19	call	*%r15
0000000000029e1c	movq	0x0007ac8d(%rip),%rsi
0000000000029e23	movq	%rbx,%rdi
0000000000029e26	movq	%rax,%rdx
0000000000029e29	call	*%r15
0000000000029e2c	jmp	0x00029e55
0000000000029e2e	movq	0x0007ac4b(%rip),%rsi
0000000000029e35	movq	0x0007e914(%rip),%rdi
0000000000029e3c	jmp	0x00029e4c
0000000000029e3e	movq	0x0007ac3b(%rip),%rsi
0000000000029e45	movq	0x0007e90c(%rip),%rdi
0000000000029e4c	call	*0x0005a286(%rip)
0000000000029e52	movq	%rax,%rbx
0000000000029e55	testq	%rbx,%rbx
0000000000029e58	jne	0x00029e65
0000000000029e5a	addq	$0x08,%rsp
0000000000029e5e	popq	%rbx
0000000000029e5f	popq	%r14
0000000000029e61	popq	%r15
0000000000029e63	popq	%rbp
0000000000029e64	ret
0000000000029e65	movq	0x0007ac1c(%rip),%rsi
0000000000029e6c	movq	%rbx,%rdi
0000000000029e6f	movq	%r14,%rdx
0000000000029e72	call	*0x0005a260(%rip)
0000000000029e78	movq	0x0007bcd9(%rip),%rsi
0000000000029e7f	movq	%r14,%rdi
0000000000029e82	call	*0x0005a250(%rip)
0000000000029e88	movq	0x0007ac19(%rip),%rsi
0000000000029e8f	movq	%rbx,%rdi
0000000000029e92	movq	%rax,%rdx
0000000000029e95	call	*0x0005a23d(%rip)
0000000000029e9b	movq	0x0007bc7e(%rip),%rsi
0000000000029ea2	movq	0x0007bcc7(%rip),%rdx
0000000000029ea9	movq	%rbx,%rdi
0000000000029eac	call	*0x0005a226(%rip)
0000000000029eb2	movq	0x0007abff(%rip),%rsi
0000000000029eb9	movq	%r14,%rdi
0000000000029ebc	call	*0x0005a216(%rip)
0000000000029ec2	movq	0x0007abf7(%rip),%rsi
0000000000029ec9	movq	%rax,%rdi
0000000000029ecc	call	*0x0005a206(%rip)
0000000000029ed2	movq	0x0007b87f(%rip),%rsi
0000000000029ed9	movq	%rax,%rdi
0000000000029edc	movq	%rbx,%rdx
0000000000029edf	movq	0x0005a1f2(%rip),%rax
0000000000029ee6	addq	$0x08,%rsp
0000000000029eea	popq	%rbx
0000000000029eeb	popq	%r14
0000000000029eed	popq	%r15
0000000000029eef	popq	%rbp
0000000000029ef0	jmp	*%rax
0000000000029ef2	nop
0000000000029ef4	cmpl	$0xfe94ffff,%esi
0000000000029efa	.byte 0xff, 0xff #bad opcode
0000000000029efc	cmpsl	(%esi),(%edi)
0000000000029efd	.byte 0xfe, 0xff #bad opcode
0000000000029eff	jmp	*0xff(%rsi)
0000000000029f02	.byte 0xff, 0xff #bad opcode
0000000000029f04	.byte 0x4a, 0xff, 0xff #bad opcode
0000000000029f07	.byte 0xff, 0x3a #bad opcode
0000000000029f09	.byte 0xff, 0xff #bad opcode
0000000000029f0b	incl	0x94fffffe(%rcx)
0000000000029f11	.byte 0xfe, 0xff #bad opcode
0000000000029f13	call	*0x48(%rbp)
0000000000029f16	movl	%esp,%ebp
0000000000029f18	pushq	%r14
0000000000029f1a	pushq	%rbx
0000000000029f1b	movq	%rdi,%r14
0000000000029f1e	leaq	0x00084be3(%rip),%rax
0000000000029f25	movq	(%rax),%rbx
0000000000029f28	movq	(%r14,%rbx),%rdi
0000000000029f2c	movq	0x0007c34d(%rip),%rsi
0000000000029f33	xorl	%edx,%edx
0000000000029f35	call	*0x0005a19d(%rip)
0000000000029f3b	movq	(%r14,%rbx),%rdi
0000000000029f3f	movq	0x0007ab72(%rip),%rsi
0000000000029f46	call	*0x0005a18c(%rip)
0000000000029f4c	movq	%rax,%rbx
0000000000029f4f	movq	0x0007c332(%rip),%rsi
0000000000029f56	movq	0x0007e77b(%rip),%rdi
0000000000029f5d	call	*0x0005a175(%rip)
0000000000029f63	movq	0x0007b9be(%rip),%rsi
0000000000029f6a	movq	%rbx,%rdi
0000000000029f6d	movq	%rax,%rdx
0000000000029f70	xorl	%ecx,%ecx
0000000000029f72	movq	0x0005a15f(%rip),%rax
0000000000029f79	popq	%rbx
0000000000029f7a	popq	%r14
0000000000029f7c	popq	%rbp
0000000000029f7d	jmp	*%rax
0000000000029f7f	nop
0000000000029f80	nop
0000000000029f81	nop
+[PBXLSDebuggingSystem localizedStringForStateSteppingOver]:
0000000000029f82	pushq	%rbp
0000000000029f83	movq	%rsp,%rbp
0000000000029f86	movq	0x0007d47b(%rip),%rsi
0000000000029f8d	call	*0x0005a145(%rip)
0000000000029f93	leaq	0x0008bbfe(%rip),%rdx
0000000000029f9a	leaq	0x00085997(%rip),%rcx
0000000000029fa1	leaq	0x0008b1b0(%rip),%r8
0000000000029fa8	movq	0x0007d461(%rip),%rsi
0000000000029faf	movq	%rax,%rdi
0000000000029fb2	movq	0x0005a11f(%rip),%rax
0000000000029fb9	popq	%rbp
0000000000029fba	jmp	*%rax
-[PBXGDB_MIStepOverCommand GDBCommandString]:
0000000000029fbc	pushq	%rbp
0000000000029fbd	movq	%rsp,%rbp
0000000000029fc0	leaq	0x00087971(%rip),%rax
0000000000029fc7	popq	%rbp
0000000000029fc8	ret
0000000000029fc9	nop
0000000000029fca	nop
0000000000029fcb	nop
-[PBXGDB_StepControlSequence _resultAllThreadsStepping:]:
0000000000029fcc	pushq	%rbp
0000000000029fcd	movq	%rsp,%rbp
0000000000029fd0	pushq	%rbx
0000000000029fd1	pushq	%rax
0000000000029fd2	movq	%rdi,%rbx
0000000000029fd5	movq	0x0007b1dc(%rip),%rsi
0000000000029fdc	call	*0x0005a0f6(%rip)
0000000000029fe2	movq	0x0007bb67(%rip),%rsi
0000000000029fe9	movq	%rax,%rdi
0000000000029fec	call	*0x0005a0e6(%rip)
0000000000029ff2	movq	0x0007ab3f(%rip),%rsi
0000000000029ff9	movq	%rbx,%rdi
0000000000029ffc	movq	0x0005a0d5(%rip),%rax
000000000002a003	addq	$0x08,%rsp
000000000002a007	popq	%rbx
000000000002a008	popq	%rbp
000000000002a009	jmp	*%rax
-[PBXGDB_ThreadController setAllThreadsStateToStepping]:
000000000002a00b	pushq	%rbp
000000000002a00c	movq	%rsp,%rbp
000000000002a00f	pushq	%rbx
000000000002a010	pushq	%rax
000000000002a011	movq	%rdi,%rbx
000000000002a014	movq	0x0007cb6d(%rip),%rsi
000000000002a01b	movq	$0x00000000,(%rsp)
000000000002a023	movl	$0x00000001,%edx
000000000002a028	movl	$0x00000001,%ecx
000000000002a02d	movq	$0xffffffff,%r8
000000000002a034	movl	$0x00000001,%r9d
000000000002a03a	call	*0x0005a098(%rip)
000000000002a040	movq	0x0005a079(%rip),%rax
000000000002a047	movsd	(%rax),%xmm0
000000000002a04b	movq	0x0007ab9e(%rip),%rsi
000000000002a052	movq	0x0007bb27(%rip),%rdx
000000000002a059	movq	%rbx,%rdi
000000000002a05c	xorl	%ecx,%ecx
000000000002a05e	movq	0x0005a073(%rip),%rax
000000000002a065	addq	$0x08,%rsp
000000000002a069	popq	%rbx
000000000002a06a	popq	%rbp
000000000002a06b	jmp	*%rax
-[PBXLSThread clearDidTransitionToSuspended]:
000000000002a06d	pushq	%rbp
000000000002a06e	movq	%rsp,%rbp
000000000002a071	movq	0x00085380(%rip),%rax
000000000002a078	movb	$0x00,(%rdi,%rax)
000000000002a07c	popq	%rbp
000000000002a07d	ret
000000000002a07e	nop
-[PBXLSThread invalidateFrameDataValues]:
000000000002a07f	pushq	%rbp
000000000002a080	movq	%rsp,%rbp
000000000002a083	movq	0x0007b1de(%rip),%rsi
000000000002a08a	call	*0x0005a048(%rip)
000000000002a090	movq	0x0007bd49(%rip),%rsi
000000000002a097	movq	0x0007d5d2(%rip),%rdx
000000000002a09e	movq	%rax,%rdi
000000000002a0a1	movq	0x0005a030(%rip),%rax
000000000002a0a8	popq	%rbp
000000000002a0a9	jmp	*%rax
-[PBXLSStackFrame invalidateDataValues]:
000000000002a0ab	pushq	%rbp
000000000002a0ac	movq	%rsp,%rbp
000000000002a0af	movq	0x000852d2(%rip),%rax
000000000002a0b6	movq	(%rdi,%rax),%rdi
000000000002a0ba	testq	%rdi,%rdi
000000000002a0bd	jne	0x0002a0c1
000000000002a0bf	popq	%rbp
000000000002a0c0	ret
000000000002a0c1	movq	0x0007b518(%rip),%rsi
000000000002a0c8	xorl	%edx,%edx
000000000002a0ca	popq	%rbp
000000000002a0cb	jmp	*0x0005a007(%rip)
+[PBXLSDebuggingSystem localizedStringForStateStepCompleted]:
000000000002a0d1	pushq	%rbp
000000000002a0d2	movq	%rsp,%rbp
000000000002a0d5	movq	0x0007d32c(%rip),%rsi
000000000002a0dc	call	*0x00059ff6(%rip)
000000000002a0e2	leaq	0x0008bc4f(%rip),%rdx
000000000002a0e9	leaq	0x00085848(%rip),%rcx
000000000002a0f0	leaq	0x0008b061(%rip),%r8
000000000002a0f7	movq	0x0007d312(%rip),%rsi
000000000002a0fe	movq	%rax,%rdi
000000000002a101	movq	0x00059fd0(%rip),%rax
000000000002a108	popq	%rbp
000000000002a109	jmp	*%rax
000000000002a10b	nop
000000000002a10c	nop
000000000002a10d	nop
000000000002a10e	nop
-[PBXLSStackFrame instructionPointerAddress]:
000000000002a10f	pushq	%rbp
000000000002a110	movq	%rsp,%rbp
000000000002a113	movq	0x00085276(%rip),%rax
000000000002a11a	movq	(%rdi,%rax),%rax
000000000002a11e	popq	%rbp
000000000002a11f	ret
000000000002a120	nop
000000000002a121	nop
000000000002a122	nop
000000000002a123	nop
000000000002a124	nop
000000000002a125	nop
-[PBXLSStackFrame liteFramePointerIdentifer]:
000000000002a126	pushq	%rbp
000000000002a127	movq	%rsp,%rbp
000000000002a12a	movq	0x00085267(%rip),%rax
000000000002a131	movq	(%rdi,%rax),%rax
000000000002a135	popq	%rbp
000000000002a136	ret
-[PBXLSDebuggerAdaptor destroyThreadWithThreadHandle:]:
000000000002a137	pushq	%rbp
000000000002a138	movq	%rsp,%rbp
000000000002a13b	pushq	%r15
000000000002a13d	pushq	%r14
000000000002a13f	pushq	%r13
000000000002a141	pushq	%r12
000000000002a143	pushq	%rbx
000000000002a144	pushq	%rax
000000000002a145	movq	%rdx,%rbx
000000000002a148	movq	%rdi,%r14
000000000002a14b	movq	0x0007ac9e(%rip),%rsi
000000000002a152	movq	0x00059f7f(%rip),%r15
000000000002a159	call	*%r15
000000000002a15c	movq	0x0007badd(%rip),%rsi
000000000002a163	movq	%rax,%rdi
000000000002a166	movq	%rbx,%rdx
000000000002a169	call	*%r15
000000000002a16c	movq	%rax,%rbx
000000000002a16f	testq	%rbx,%rbx
000000000002a172	je	0x0002a23d
000000000002a178	movq	0x0007b0b1(%rip),%rsi
000000000002a17f	movq	0x00059f52(%rip),%r15
000000000002a186	movq	%rbx,%rdi
000000000002a189	call	*%r15
000000000002a18c	movq	0x0007d5cd(%rip),%rsi
000000000002a193	movq	%rbx,%rdi
000000000002a196	movq	%r14,%rdx
000000000002a199	call	*%r15
000000000002a19c	movq	0x0007ac4d(%rip),%rsi
000000000002a1a3	movq	%r14,%rdi
000000000002a1a6	call	*%r15
000000000002a1a9	movq	0x0007d3f8(%rip),%rsi
000000000002a1b0	movq	%rax,%rdi
000000000002a1b3	call	*%r15
000000000002a1b6	movq	0x0007d5ab(%rip),%rsi
000000000002a1bd	movq	0x0007e49c(%rip),%rdi
000000000002a1c4	movq	%rax,%rdx
000000000002a1c7	call	*%r15
000000000002a1ca	movq	%rax,%r15
000000000002a1cd	leaq	0x0007e13c(%rip),%rsi
000000000002a1d4	movq	%r15,%rdi
000000000002a1d7	call	*0x0007e133(%rip)
000000000002a1dd	movq	%rax,%r12
000000000002a1e0	testq	%r12,%r12
000000000002a1e3	je	0x0002a23d
000000000002a1e5	xorl	%ebx,%ebx
000000000002a1e7	movq	%r15,%rdi
000000000002a1ea	leaq	0x0007e12f(%rip),%rsi
000000000002a1f1	movq	%rbx,%rdx
000000000002a1f4	call	*0x0007e126(%rip)
000000000002a1fa	movq	%rax,%r13
000000000002a1fd	movq	%r13,%rdi
000000000002a200	movq	0x0007bf01(%rip),%rsi
000000000002a207	call	*0x00059ecb(%rip)
000000000002a20d	movq	%rax,%rdi
000000000002a210	leaq	0x0007e0f9(%rip),%rsi
000000000002a217	call	*0x0007e0f3(%rip)
000000000002a21d	testq	%rax,%rax
000000000002a220	jne	0x0002a235
000000000002a222	movq	%r13,%rdi
000000000002a225	movq	0x0007d534(%rip),%rsi
000000000002a22c	movq	%r14,%rdx
000000000002a22f	call	*0x00059ea3(%rip)
000000000002a235	incq	%rbx
000000000002a238	cmpq	%rbx,%r12
000000000002a23b	jne	0x0002a1e7
000000000002a23d	addq	$0x08,%rsp
000000000002a241	popq	%rbx
000000000002a242	popq	%r12
000000000002a244	popq	%r13
000000000002a246	popq	%r14
000000000002a248	popq	%r15
000000000002a24a	popq	%rbp
000000000002a24b	ret
000000000002a24c	nop
000000000002a24d	nop
-[PBXLSThread debuggerDelete:]:
000000000002a24e	pushq	%rbp
000000000002a24f	movq	%rsp,%rbp
000000000002a252	pushq	%r14
000000000002a254	pushq	%rbx
000000000002a255	movq	%rdx,%r14
000000000002a258	movq	%rdi,%rbx
000000000002a25b	movq	0x0007d3fe(%rip),%rsi
000000000002a262	call	*0x00059e70(%rip)
000000000002a268	movq	0x0007d3f9(%rip),%rsi
000000000002a26f	movq	%rax,%rdi
000000000002a272	movq	%r14,%rdx
000000000002a275	movq	%rbx,%rcx
000000000002a278	movq	0x00059e59(%rip),%rax
000000000002a27f	popq	%rbx
000000000002a280	popq	%r14
000000000002a282	popq	%rbp
000000000002a283	jmp	*%rax
000000000002a285	nop
000000000002a286	nop
000000000002a287	nop
-[PBXLSThread parentThreadGroup]:
000000000002a288	pushq	%rbp
000000000002a289	movq	%rsp,%rbp
000000000002a28c	movq	0x0007d0e5(%rip),%rsi
000000000002a293	popq	%rbp
000000000002a294	jmp	*0x00059e3e(%rip)
-[PBXLSThreadGroup debugger:removeThread:]:
000000000002a29a	pushq	%rbp
000000000002a29b	movq	%rsp,%rbp
000000000002a29e	movq	0x0007b283(%rip),%rsi
000000000002a2a5	movq	%rcx,%rdx
000000000002a2a8	popq	%rbp
000000000002a2a9	jmp	*0x00059e29(%rip)
000000000002a2af	nop
-[PBXLSModel removeChild:]:
000000000002a2b0	pushq	%rbp
000000000002a2b1	movq	%rsp,%rbp
000000000002a2b4	pushq	%r15
000000000002a2b6	pushq	%r14
000000000002a2b8	pushq	%rbx
000000000002a2b9	pushq	%rax
000000000002a2ba	movq	%rdx,%rbx
000000000002a2bd	movq	%rdi,%r14
000000000002a2c0	movq	0x0007b3c1(%rip),%rsi
000000000002a2c7	movq	0x00059e0a(%rip),%r15
000000000002a2ce	call	*%r15
000000000002a2d1	movq	0x0007af98(%rip),%rsi
000000000002a2d8	movq	%rax,%rdi
000000000002a2db	movq	%rbx,%rdx
000000000002a2de	call	*%r15
000000000002a2e1	movq	$0x7fffffffffffffff,%rcx
000000000002a2eb	cmpq	%rcx,%rax
000000000002a2ee	jne	0x0002a2fb
000000000002a2f0	addq	$0x08,%rsp
000000000002a2f4	popq	%rbx
000000000002a2f5	popq	%r14
000000000002a2f7	popq	%r15
000000000002a2f9	popq	%rbp
000000000002a2fa	ret
000000000002a2fb	movq	0x0007d07e(%rip),%rsi
000000000002a302	movq	%rbx,%rdi
000000000002a305	xorl	%edx,%edx
000000000002a307	call	*0x00059dcb(%rip)
000000000002a30d	movq	0x0007d1f4(%rip),%rsi
000000000002a314	movq	%r14,%rdi
000000000002a317	call	*0x00059dbb(%rip)
000000000002a31d	movq	0x0007a9fc(%rip),%rsi
000000000002a324	movq	%rax,%rdi
000000000002a327	movq	%rbx,%rdx
000000000002a32a	movq	0x00059da7(%rip),%rax
000000000002a331	addq	$0x08,%rsp
000000000002a335	popq	%rbx
000000000002a336	popq	%r14
000000000002a338	popq	%r15
000000000002a33a	popq	%rbp
000000000002a33b	jmp	*%rax
-[PBXGDB_Adaptor requestNewDataValueForExpression:addToContainerDataValue:locationSpecifier:]:
000000000002a33d	pushq	%rbp
000000000002a33e	movq	%rsp,%rbp
000000000002a341	pushq	%r15
000000000002a343	pushq	%r14
000000000002a345	pushq	%r13
000000000002a347	pushq	%r12
000000000002a349	pushq	%rbx
000000000002a34a	subq	$0x18,%rsp
000000000002a34e	movq	%r8,%rbx
000000000002a351	movq	%rcx,0xd0(%rbp)
000000000002a355	movq	%rdx,%r14
000000000002a358	movq	%rdi,%r12
000000000002a35b	testq	%rbx,%rbx
000000000002a35e	je	0x0002a492
000000000002a364	movq	0x0007af6d(%rip),%rsi
000000000002a36b	leaq	0x000863e6(%rip),%rdx
000000000002a372	movq	%rbx,%rdi
000000000002a375	call	*0x00059d5d(%rip)
000000000002a37b	movq	%rax,%r13
000000000002a37e	movq	$0x7fffffffffffffff,%rax
000000000002a388	cmpq	%rax,%r13
000000000002a38b	je	0x0002a439
000000000002a391	movq	%r14,0xc8(%rbp)
000000000002a395	movq	0x0007a78c(%rip),%rsi
000000000002a39c	leaq	0x01(%r13),%rdx
000000000002a3a0	movq	0x00059d31(%rip),%r15
000000000002a3a7	movq	%rbx,%rdi
000000000002a3aa	call	*%r15
000000000002a3ad	movq	0x0007af2c(%rip),%rsi
000000000002a3b4	movq	%rax,%rdi
000000000002a3b7	call	*%r15
000000000002a3ba	movq	0x0007a6ef(%rip),%rsi
000000000002a3c1	movq	0xd0(%rbp),%rdi
000000000002a3c5	movq	%rax,%rdx
000000000002a3c8	call	*%r15
000000000002a3cb	movq	0x0007e07e(%rip),%r14
000000000002a3d2	movq	0x0007ae87(%rip),%rsi
000000000002a3d9	movq	%rbx,%rdi
000000000002a3dc	movq	%r13,%rdx
000000000002a3df	call	*%r15
000000000002a3e2	leaq	0x000853ef(%rip),%rdx
000000000002a3e9	movq	0x0007a788(%rip),%rsi
000000000002a3f0	movq	%r14,%rdi
000000000002a3f3	movq	%rax,%rcx
000000000002a3f6	xorb	%al,%al
000000000002a3f8	call	*%r15
000000000002a3fb	movq	%rax,%rbx
000000000002a3fe	leaq	0x00086373(%rip),%rdx
000000000002a405	movq	0x0007aedc(%rip),%rsi
000000000002a40c	movq	%rbx,%rdi
000000000002a40f	call	*%r15
000000000002a412	cmpb	$0x01,%al
000000000002a414	jne	0x0002a430
000000000002a416	movq	0x0007aed3(%rip),%rsi
000000000002a41d	leaq	0x00086354(%rip),%rdx
000000000002a424	movq	%rbx,%rdi
000000000002a427	call	*0x00059cab(%rip)
000000000002a42d	movq	%rax,%rbx
000000000002a430	testq	%rbx,%rbx
000000000002a433	movq	0xc8(%rbp),%r14
000000000002a437	je	0x0002a492
000000000002a439	movq	0x0007aeb8(%rip),%rsi
000000000002a440	movq	%r12,%rdi
000000000002a443	call	*0x00059c8f(%rip)
000000000002a449	testq	%rax,%rax
000000000002a44c	je	0x0002a492
000000000002a44e	movq	0x0007aeab(%rip),%rsi
000000000002a455	movq	%r12,%rdi
000000000002a458	call	*0x00059c7a(%rip)
000000000002a45e	testb	%al,%al
000000000002a460	je	0x0002a492
000000000002a462	movq	0x00084227(%rip),%rax
000000000002a469	movq	(%r12,%rax),%rdi
000000000002a46d	movq	0x0007ae94(%rip),%rsi
000000000002a474	movq	0xd0(%rbp),%rdx
000000000002a478	movq	%r14,%rcx
000000000002a47b	movq	%rbx,%r8
000000000002a47e	addq	$0x18,%rsp
000000000002a482	popq	%rbx
000000000002a483	popq	%r12
000000000002a485	popq	%r13
000000000002a487	popq	%r14
000000000002a489	popq	%r15
000000000002a48b	popq	%rbp
000000000002a48c	jmp	*0x00059c46(%rip)
000000000002a492	movq	0x000841f7(%rip),%rax
000000000002a499	movq	(%r12,%rax),%rdi
000000000002a49d	movq	0x0007ae2c(%rip),%rsi
000000000002a4a4	movq	0xd0(%rbp),%rdx
000000000002a4a8	movq	%r14,%rcx
000000000002a4ab	movl	$0x00000001,%r8d
000000000002a4b1	addq	$0x18,%rsp
000000000002a4b5	popq	%rbx
000000000002a4b6	popq	%r12
000000000002a4b8	popq	%r13
000000000002a4ba	popq	%r14
000000000002a4bc	popq	%r15
000000000002a4be	popq	%rbp
000000000002a4bf	jmp	*0x00059c13(%rip)
-[PBXGDB_DataValue2 setFrameIndexContext:]:
000000000002a4c5	pushq	%rbp
000000000002a4c6	movq	%rsp,%rbp
000000000002a4c9	movq	0x00084420(%rip),%rax
000000000002a4d0	movq	%rdx,(%rdi,%rax)
000000000002a4d4	popq	%rbp
000000000002a4d5	ret
-[PBXGDB_Adaptor gdbVersion]:
000000000002a4d6	pushq	%rbp
000000000002a4d7	movq	%rsp,%rbp
000000000002a4da	movq	0x000842bf(%rip),%rax
000000000002a4e1	movq	(%rdi,%rax),%rax
000000000002a4e5	popq	%rbp
000000000002a4e6	ret
-[PBXGDB_Adaptor _useFileLineRequest]:
000000000002a4e7	pushq	%rbp
000000000002a4e8	movq	%rsp,%rbp
000000000002a4eb	movb	0x0008d190(%rip),%al
000000000002a4f1	cmpb	$0x01,%al
000000000002a4f3	jne	0x0002a4fd
000000000002a4f5	movb	0x0008d185(%rip),%al
000000000002a4fb	jmp	0x0002a50d
000000000002a4fd	movb	$0x01,0x0008d17c(%rip)
000000000002a504	movb	$0x01,0x0008d176(%rip)
000000000002a50b	movb	$0x01,%al
000000000002a50d	movzbl	%al,%eax
000000000002a510	andl	$0x01,%eax
000000000002a513	popq	%rbp
000000000002a514	ret
-[PBXGDB_DataValueController enqueueSequenceForContainerDataValue:createNewDVWithExpression:locationSpecifier:]:
000000000002a515	pushq	%rbp
000000000002a516	movq	%rsp,%rbp
000000000002a519	pushq	%r15
000000000002a51b	pushq	%r14
000000000002a51d	pushq	%r13
000000000002a51f	pushq	%r12
000000000002a521	pushq	%rbx
000000000002a522	pushq	%rax
000000000002a523	movq	%r8,%r15
000000000002a526	movq	%rcx,%r12
000000000002a529	movq	%rdx,%r13
000000000002a52c	movq	%rdi,%r14
000000000002a52f	movq	0x0007e2ca(%rip),%rdi
000000000002a536	leaq	0x0007dda3(%rip),%rsi
000000000002a53d	call	*0x0007dd9d(%rip)
000000000002a543	movq	0x0007a526(%rip),%rsi
000000000002a54a	movq	%rax,%rdi
000000000002a54d	call	*0x00059b85(%rip)
000000000002a553	movq	%rax,%rbx
000000000002a556	movq	0x0007aefb(%rip),%rsi
000000000002a55d	movq	%r14,%rdi
000000000002a560	movq	%rbx,%rdx
000000000002a563	movq	%r13,%rcx
000000000002a566	call	*0x00059b6c(%rip)
000000000002a56c	movq	0x0007b7d5(%rip),%rsi
000000000002a573	movq	%rbx,%rdi
000000000002a576	movq	%r12,%rdx
000000000002a579	movq	%r15,%rcx
000000000002a57c	call	*0x00059b56(%rip)
000000000002a582	movq	0x0007a52f(%rip),%rsi
000000000002a589	movq	%r14,%rdi
000000000002a58c	call	*0x00059b46(%rip)
000000000002a592	movq	0x0007a837(%rip),%rsi
000000000002a599	movq	%rax,%rdi
000000000002a59c	call	*0x00059b36(%rip)
000000000002a5a2	movq	0x0007a837(%rip),%rsi
000000000002a5a9	movq	%rax,%rdi
000000000002a5ac	movq	%rbx,%rdx
000000000002a5af	movq	0x00059b22(%rip),%rax
000000000002a5b6	addq	$0x08,%rsp
000000000002a5ba	popq	%rbx
000000000002a5bb	popq	%r12
000000000002a5bd	popq	%r13
000000000002a5bf	popq	%r14
000000000002a5c1	popq	%r15
000000000002a5c3	popq	%rbp
000000000002a5c4	jmp	*%rax
-[PBXGDB_MICommand setErrorMessage:]:
000000000002a5c6	pushq	%rbp
000000000002a5c7	movq	%rsp,%rbp
000000000002a5ca	movq	%rdx,%rax
000000000002a5cd	movq	%rdi,%rcx
000000000002a5d0	movq	0x00084569(%rip),%rdx
000000000002a5d7	movq	%rax,%rdi
000000000002a5da	movq	%rcx,%rsi
000000000002a5dd	popq	%rbp
000000000002a5de	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MICommand setParseResults:]:
000000000002a5e3	pushq	%rbp
000000000002a5e4	movq	%rsp,%rbp
000000000002a5e7	movq	%rdx,%rax
000000000002a5ea	movq	%rdi,%rcx
000000000002a5ed	movq	0x00084534(%rip),%rdx
000000000002a5f4	movq	%rax,%rdi
000000000002a5f7	movq	%rcx,%rsi
000000000002a5fa	popq	%rbp
000000000002a5fb	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_SetDataValueForExpressionSequence handleErrorForMICommand:]:
000000000002a600	pushq	%rbp
000000000002a601	movq	%rsp,%rbp
000000000002a604	pushq	%r14
000000000002a606	pushq	%rbx
000000000002a607	subq	$0x10,%rsp
000000000002a60b	movq	%rdi,%rbx
000000000002a60e	movq	0x0007aff3(%rip),%rsi
000000000002a615	movq	0x00059abc(%rip),%r14
000000000002a61c	call	*%r14
000000000002a61f	movq	0x0007afba(%rip),%rsi
000000000002a626	movq	%rax,%rdi
000000000002a629	movl	$0x00000003,%edx
000000000002a62e	call	*%r14
000000000002a631	movq	%rbx,0xe0(%rbp)
000000000002a635	leaq	0xe0(%rbp),%rdi
000000000002a639	movq	0x0007e788(%rip),%rax
000000000002a640	movq	%rax,0xe8(%rbp)
000000000002a644	movq	0x0007a4ed(%rip),%rsi
000000000002a64b	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000002a650	movl	$0x00000001,%eax
000000000002a655	addq	$0x10,%rsp
000000000002a659	popq	%rbx
000000000002a65a	popq	%r14
000000000002a65c	popq	%rbp
000000000002a65d	ret
000000000002a65e	nop
000000000002a65f	nop
-[DBGGDBSession requestStepIn:]:
000000000002a660	pushq	%rbp
000000000002a661	movq	%rsp,%rbp
000000000002a664	movq	0x0007d895(%rip),%rsi
000000000002a66b	call	*0x00059a67(%rip)
000000000002a671	movq	0x0007d890(%rip),%rsi
000000000002a678	movq	%rax,%rdi
000000000002a67b	movq	0x00059a56(%rip),%rax
000000000002a682	popq	%rbp
000000000002a683	jmp	*%rax
000000000002a685	nop
-[PBXLSThread requestStepInto]:
000000000002a686	pushq	%rbp
000000000002a687	movq	%rsp,%rbp
000000000002a68a	pushq	%rbx
000000000002a68b	pushq	%rax
000000000002a68c	movq	%rdi,%rbx
000000000002a68f	movq	0x0007af32(%rip),%rsi
000000000002a696	call	*0x00059a3c(%rip)
000000000002a69c	movq	0x0007d035(%rip),%rsi
000000000002a6a3	movq	%rax,%rdi
000000000002a6a6	movq	%rbx,%rdx
000000000002a6a9	movq	0x00059a28(%rip),%rax
000000000002a6b0	addq	$0x08,%rsp
000000000002a6b4	popq	%rbx
000000000002a6b5	popq	%rbp
000000000002a6b6	jmp	*%rax
-[PBXGDB_Adaptor threadRequestStepInto:]:
000000000002a6b8	pushq	%rbp
000000000002a6b9	movq	%rsp,%rbp
000000000002a6bc	pushq	%rbx
000000000002a6bd	pushq	%rax
000000000002a6be	leaq	0x00084dd3(%rip),%rax
000000000002a6c5	movq	(%rax),%rax
000000000002a6c8	incq	(%rdi,%rax)
000000000002a6cc	movq	0x00083fad(%rip),%rax
000000000002a6d3	movq	(%rdi,%rax),%rbx
000000000002a6d7	movq	0x0007aa12(%rip),%rsi
000000000002a6de	movq	%rdx,%rdi
000000000002a6e1	call	*0x000599f1(%rip)
000000000002a6e7	movq	0x0007aa22(%rip),%rsi
000000000002a6ee	movq	%rbx,%rdi
000000000002a6f1	movq	%rax,%rdx
000000000002a6f4	movq	0x000599dd(%rip),%rax
000000000002a6fb	addq	$0x08,%rsp
000000000002a6ff	popq	%rbx
000000000002a700	popq	%rbp
000000000002a701	jmp	*%rax
000000000002a703	nop
000000000002a704	nop
-[PBXGDB_ThreadController enqueueStepIntoSequenceForThreadHandle:]:
000000000002a705	pushq	%rbp
000000000002a706	movq	%rsp,%rbp
000000000002a709	movq	%rdx,%rax
000000000002a70c	movq	0x0007ca9d(%rip),%rsi
000000000002a713	movl	$0x00000001,%edx
000000000002a718	movq	%rax,%rcx
000000000002a71b	popq	%rbp
000000000002a71c	jmp	*0x000599b6(%rip)
-[PBXGDB_MIStepIntoCommand willExecute]:
000000000002a722	pushq	%rbp
000000000002a723	movq	%rsp,%rbp
000000000002a726	pushq	%r14
000000000002a728	pushq	%rbx
000000000002a729	movq	%rdi,%r14
000000000002a72c	leaq	0x000843d5(%rip),%rax
000000000002a733	movq	(%rax),%rbx
000000000002a736	movq	(%r14,%rbx),%rdi
000000000002a73a	movq	0x0007bb3f(%rip),%rsi
000000000002a741	xorl	%edx,%edx
000000000002a743	call	*0x0005998f(%rip)
000000000002a749	movq	(%r14,%rbx),%rdi
000000000002a74d	movq	0x0007a364(%rip),%rsi
000000000002a754	call	*0x0005997e(%rip)
000000000002a75a	movq	%rax,%rbx
000000000002a75d	movq	0x0007bb2c(%rip),%rsi
000000000002a764	movq	0x0007df6d(%rip),%rdi
000000000002a76b	call	*0x00059967(%rip)
000000000002a771	movq	0x0007b1b0(%rip),%rsi
000000000002a778	movq	%rbx,%rdi
000000000002a77b	movq	%rax,%rdx
000000000002a77e	xorl	%ecx,%ecx
000000000002a780	movq	0x00059951(%rip),%rax
000000000002a787	popq	%rbx
000000000002a788	popq	%r14
000000000002a78a	popq	%rbp
000000000002a78b	jmp	*%rax
000000000002a78d	nop
000000000002a78e	nop
000000000002a78f	nop
+[PBXLSDebuggingSystem localizedStringForStateSteppingInto]:
000000000002a790	pushq	%rbp
000000000002a791	movq	%rsp,%rbp
000000000002a794	movq	0x0007cc6d(%rip),%rsi
000000000002a79b	call	*0x00059937(%rip)
000000000002a7a1	leaq	0x0008b450(%rip),%rdx
000000000002a7a8	leaq	0x00085189(%rip),%rcx
000000000002a7af	leaq	0x0008a9a2(%rip),%r8
000000000002a7b6	movq	0x0007cc53(%rip),%rsi
000000000002a7bd	movq	%rax,%rdi
000000000002a7c0	movq	0x00059911(%rip),%rax
000000000002a7c7	popq	%rbp
000000000002a7c8	jmp	*%rax
-[PBXGDB_MIStepIntoCommand GDBCommandString]:
000000000002a7ca	pushq	%rbp
000000000002a7cb	movq	%rsp,%rbp
000000000002a7ce	leaq	0x00087183(%rip),%rax
000000000002a7d5	popq	%rbp
000000000002a7d6	ret
000000000002a7d7	nop
-[PBXLSModel removeChildrenInRange:withKVO:]:
000000000002a7d8	pushq	%rbp
000000000002a7d9	movq	%rsp,%rbp
000000000002a7dc	pushq	%r15
000000000002a7de	pushq	%r14
000000000002a7e0	pushq	%r13
000000000002a7e2	pushq	%r12
000000000002a7e4	pushq	%rbx
000000000002a7e5	pushq	%rax
000000000002a7e6	movl	%r8d,0xd4(%rbp)
000000000002a7ea	movq	%rdi,%r14
000000000002a7ed	movq	0x0007c45c(%rip),%rsi
000000000002a7f4	movq	0x0007e235(%rip),%rdi
000000000002a7fb	movq	0x000598d6(%rip),%r15
000000000002a802	call	*%r15
000000000002a805	movq	%rax,%r12
000000000002a808	movq	0x0007cd09(%rip),%rsi
000000000002a80f	movq	%r12,%rdi
000000000002a812	call	*%r15
000000000002a815	movq	%rax,%rbx
000000000002a818	movq	0x0007cd01(%rip),%rsi
000000000002a81f	movq	%r12,%rdi
000000000002a822	call	*%r15
000000000002a825	cmpq	%rax,%rbx
000000000002a828	ja	0x0002a878
000000000002a82a	movq	0x000598a7(%rip),%r13
000000000002a831	leaq	0x0007dae8(%rip),%r15
000000000002a838	movq	%r14,%rdi
000000000002a83b	movq	0x0007ae46(%rip),%rsi
000000000002a842	call	*%r13
000000000002a845	movq	%rax,%rdi
000000000002a848	movq	%r15,%rsi
000000000002a84b	movq	%rbx,%rdx
000000000002a84e	call	*0x0007dacc(%rip)
000000000002a854	movq	%rax,%rdi
000000000002a857	movq	0x0007cb22(%rip),%rsi
000000000002a85e	xorl	%edx,%edx
000000000002a860	call	*%r13
000000000002a863	movq	%r12,%rdi
000000000002a866	movq	0x0007ccb3(%rip),%rsi
000000000002a86d	call	*%r13
000000000002a870	incq	%rbx
000000000002a873	cmpq	%rax,%rbx
000000000002a876	jbe	0x0002a838
000000000002a878	movl	0xd4(%rbp),%eax
000000000002a87b	testb	%al,%al
000000000002a87d	je	0x0002a894
000000000002a87f	movq	0x0007cc82(%rip),%rsi
000000000002a886	movq	%r14,%rdi
000000000002a889	call	*0x00059849(%rip)
000000000002a88f	movq	%rax,%rdi
000000000002a892	jmp	0x0002a89f
000000000002a894	movq	0x00084a6d(%rip),%rax
000000000002a89b	movq	(%r14,%rax),%rdi
000000000002a89f	movq	0x0007cc82(%rip),%rsi
000000000002a8a6	movq	%r12,%rdx
000000000002a8a9	addq	$0x08,%rsp
000000000002a8ad	popq	%rbx
000000000002a8ae	popq	%r12
000000000002a8b0	popq	%r13
000000000002a8b2	popq	%r14
000000000002a8b4	popq	%r15
000000000002a8b6	popq	%rbp
000000000002a8b7	jmp	*0x0005981b(%rip)
000000000002a8bd	nop
000000000002a8be	nop
000000000002a8bf	nop
000000000002a8c0	nop
000000000002a8c1	nop
000000000002a8c2	nop
000000000002a8c3	nop
000000000002a8c4	nop
000000000002a8c5	nop
000000000002a8c6	nop
000000000002a8c7	nop
000000000002a8c8	nop
000000000002a8c9	nop
000000000002a8ca	nop
000000000002a8cb	nop
-[DBGGDBSession requestStepOut:]:
000000000002a8cc	pushq	%rbp
000000000002a8cd	movq	%rsp,%rbp
000000000002a8d0	pushq	%r14
000000000002a8d2	pushq	%rbx
000000000002a8d3	subq	$0x10,%rsp
000000000002a8d7	movq	%rdi,%rbx
000000000002a8da	movq	%rbx,0xe0(%rbp)
000000000002a8de	movq	0x0007e7d3(%rip),%rax
000000000002a8e5	movq	%rax,0xe8(%rbp)
000000000002a8e9	movq	0x0007d630(%rip),%rsi
000000000002a8f0	leaq	0xe0(%rbp),%rdi
000000000002a8f4	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000002a8f9	movq	0x000597d8(%rip),%r14
000000000002a900	movq	0x0007d5f9(%rip),%rsi
000000000002a907	movq	%rbx,%rdi
000000000002a90a	call	*%r14
000000000002a90d	movq	0x0007d614(%rip),%rsi
000000000002a914	movq	%rax,%rdi
000000000002a917	call	*%r14
000000000002a91a	addq	$0x10,%rsp
000000000002a91e	popq	%rbx
000000000002a91f	popq	%r14
000000000002a921	popq	%rbp
000000000002a922	ret
000000000002a923	nop
000000000002a924	nop
000000000002a925	nop
-[PBXLSThread requestStepOut]:
000000000002a926	pushq	%rbp
000000000002a927	movq	%rsp,%rbp
000000000002a92a	pushq	%rbx
000000000002a92b	pushq	%rax
000000000002a92c	movq	%rdi,%rbx
000000000002a92f	movq	0x0007ac92(%rip),%rsi
000000000002a936	call	*0x0005979c(%rip)
000000000002a93c	movq	0x0007cda5(%rip),%rsi
000000000002a943	movq	%rax,%rdi
000000000002a946	movq	%rbx,%rdx
000000000002a949	movq	0x00059788(%rip),%rax
000000000002a950	addq	$0x08,%rsp
000000000002a954	popq	%rbx
000000000002a955	popq	%rbp
000000000002a956	jmp	*%rax
-[PBXGDB_Adaptor threadRequestStepOut:]:
000000000002a958	pushq	%rbp
000000000002a959	movq	%rsp,%rbp
000000000002a95c	pushq	%rbx
000000000002a95d	pushq	%rax
000000000002a95e	leaq	0x00084b33(%rip),%rax
000000000002a965	movq	(%rax),%rax
000000000002a968	incq	(%rdi,%rax)
000000000002a96c	movq	0x00083d0d(%rip),%rax
000000000002a973	movq	(%rdi,%rax),%rbx
000000000002a977	movq	0x0007a772(%rip),%rsi
000000000002a97e	movq	%rdx,%rdi
000000000002a981	call	*0x00059751(%rip)
000000000002a987	movq	0x0007a792(%rip),%rsi
000000000002a98e	movq	%rbx,%rdi
000000000002a991	movq	%rax,%rdx
000000000002a994	movq	0x0005973d(%rip),%rax
000000000002a99b	addq	$0x08,%rsp
000000000002a99f	popq	%rbx
000000000002a9a0	popq	%rbp
000000000002a9a1	jmp	*%rax
000000000002a9a3	nop
000000000002a9a4	nop
000000000002a9a5	nop
-[PBXGDB_ThreadController enqueueStepOutSequenceForThreadHandle:]:
000000000002a9a6	pushq	%rbp
000000000002a9a7	movq	%rsp,%rbp
000000000002a9aa	movq	%rdx,%rax
000000000002a9ad	movq	0x0007c7fc(%rip),%rsi
000000000002a9b4	movl	$0x00000002,%edx
000000000002a9b9	movq	%rax,%rcx
000000000002a9bc	popq	%rbp
000000000002a9bd	jmp	*0x00059715(%rip)
-[PBXGDB_MIStepOutCommand willExecute]:
000000000002a9c3	pushq	%rbp
000000000002a9c4	movq	%rsp,%rbp
000000000002a9c7	pushq	%r14
000000000002a9c9	pushq	%rbx
000000000002a9ca	movq	%rdi,%r14
000000000002a9cd	leaq	0x00084134(%rip),%rax
000000000002a9d4	movq	(%rax),%rbx
000000000002a9d7	movq	(%r14,%rbx),%rdi
000000000002a9db	movq	0x0007b89e(%rip),%rsi
000000000002a9e2	xorl	%edx,%edx
000000000002a9e4	call	*0x000596ee(%rip)
000000000002a9ea	movq	(%r14,%rbx),%rdi
000000000002a9ee	movq	0x0007a0c3(%rip),%rsi
000000000002a9f5	call	*0x000596dd(%rip)
000000000002a9fb	movq	%rax,%rbx
000000000002a9fe	movq	0x0007b8a3(%rip),%rsi
000000000002aa05	movq	0x0007dccc(%rip),%rdi
000000000002aa0c	call	*0x000596c6(%rip)
000000000002aa12	movq	0x0007af0f(%rip),%rsi
000000000002aa19	movq	%rbx,%rdi
000000000002aa1c	movq	%rax,%rdx
000000000002aa1f	xorl	%ecx,%ecx
000000000002aa21	movq	0x000596b0(%rip),%rax
000000000002aa28	popq	%rbx
000000000002aa29	popq	%r14
000000000002aa2b	popq	%rbp
000000000002aa2c	jmp	*%rax
+[PBXLSDebuggingSystem localizedStringForStateSteppingOut]:
000000000002aa2e	pushq	%rbp
000000000002aa2f	movq	%rsp,%rbp
000000000002aa32	movq	0x0007c9cf(%rip),%rsi
000000000002aa39	call	*0x00059699(%rip)
000000000002aa3f	leaq	0x0008b1d2(%rip),%rdx
000000000002aa46	leaq	0x00084eeb(%rip),%rcx
000000000002aa4d	leaq	0x0008a704(%rip),%r8
000000000002aa54	movq	0x0007c9b5(%rip),%rsi
000000000002aa5b	movq	%rax,%rdi
000000000002aa5e	movq	0x00059673(%rip),%rax
000000000002aa65	popq	%rbp
000000000002aa66	jmp	*%rax
-[PBXGDB_MIStepOutCommand GDBCommandString]:
000000000002aa68	pushq	%rbp
000000000002aa69	movq	%rsp,%rbp
000000000002aa6c	leaq	0x00086f45(%rip),%rax
000000000002aa73	popq	%rbp
000000000002aa74	ret
000000000002aa75	nop
000000000002aa76	nop
000000000002aa77	nop
000000000002aa78	nop
000000000002aa79	nop
000000000002aa7a	nop
000000000002aa7b	nop
000000000002aa7c	nop
000000000002aa7d	nop
000000000002aa7e	nop
000000000002aa7f	nop
000000000002aa80	nop
000000000002aa81	nop
000000000002aa82	nop
-[DBGGDBLauncher terminate]:
000000000002aa83	pushq	%rbp
000000000002aa84	movq	%rsp,%rbp
000000000002aa87	subq	$0x30,%rsp
000000000002aa8b	movq	0x000595fe(%rip),%rax
000000000002aa92	movq	%rax,0xd8(%rbp)
000000000002aa96	movl	$0x42000000,0xe0(%rbp)
000000000002aa9d	movl	$0x00000000,0xe4(%rbp)
000000000002aaa4	leaq	0x0000002e(%rip),%rax
000000000002aaab	movq	%rax,0xe8(%rbp)
000000000002aaaf	leaq	0x0008c84a(%rip),%rax
000000000002aab6	movq	%rax,0xf0(%rbp)
000000000002aaba	leaq	0xf8(%rbp),%rsi
000000000002aabe	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
000000000002aac3	movq	0x000595de(%rip),%rdi
000000000002aaca	leaq	0xd8(%rbp),%rsi
000000000002aace	callq	0x0004e5a8	; symbol stub for: _DVTAsyncPerformBlock
000000000002aad3	addq	$0x30,%rsp
000000000002aad7	popq	%rbp
000000000002aad8	ret
___27-[DBGGDBLauncher terminate]_block_invoke_0:
000000000002aad9	pushq	%rbp
000000000002aada	movq	%rsp,%rbp
000000000002aadd	pushq	%rbx
000000000002aade	pushq	%rax
000000000002aadf	movq	%rdi,%rbx
000000000002aae2	movq	0x20(%rbx),%rax
000000000002aae6	movq	0x00084a23(%rip),%rcx
000000000002aaed	movq	(%rax,%rcx),%rdi
000000000002aaf1	movq	0x0007d070(%rip),%rsi
000000000002aaf8	call	*0x000595da(%rip)
000000000002aafe	testb	%al,%al
000000000002ab00	je	0x0002ab3e
000000000002ab02	movq	0x20(%rbx),%rax
000000000002ab06	movq	0x000849fb(%rip),%rcx
000000000002ab0d	movq	(%rax,%rcx),%rdi
000000000002ab11	movq	0x0007d058(%rip),%rsi
000000000002ab18	call	*0x000595ba(%rip)
000000000002ab1e	testb	%al,%al
000000000002ab20	je	0x0002ab3e
000000000002ab22	movq	0x20(%rbx),%rax
000000000002ab26	movq	0x000849db(%rip),%rcx
000000000002ab2d	movq	(%rax,%rcx),%rdi
000000000002ab31	movq	0x0007d040(%rip),%rsi
000000000002ab38	call	*0x0005959a(%rip)
000000000002ab3e	movq	0x20(%rbx),%rax
000000000002ab42	movq	0x000849cf(%rip),%rcx
000000000002ab49	movb	$0x01,(%rax,%rcx)
000000000002ab4d	addq	$0x08,%rsp
000000000002ab51	popq	%rbx
000000000002ab52	popq	%rbp
000000000002ab53	ret
000000000002ab54	nopw	%cs:0x00000000(%rax,%rax)
-[PBXGDB_Adaptor supportsCleanQuit]:
000000000002ab60	pushq	%rbp
000000000002ab61	movq	%rsp,%rbp
000000000002ab64	movl	$0x00000001,%eax
000000000002ab69	popq	%rbp
000000000002ab6a	ret
-[PBXGDB_Adaptor requestDebuggerQuit]:
000000000002ab6b	pushq	%rbp
000000000002ab6c	movq	%rsp,%rbp
000000000002ab6f	pushq	%r14
000000000002ab71	pushq	%rbx
000000000002ab72	movq	%rdi,%rbx
000000000002ab75	movq	0x0007a254(%rip),%rsi
000000000002ab7c	movq	0x00059555(%rip),%r14
000000000002ab83	call	*%r14
000000000002ab86	movq	0x0007a673(%rip),%rsi
000000000002ab8d	movq	%rax,%rdi
000000000002ab90	call	*%r14
000000000002ab93	movq	0x00083ade(%rip),%rax
000000000002ab9a	movq	(%rbx,%rax),%rdi
000000000002ab9e	movq	0x0007a663(%rip),%rsi
000000000002aba5	call	*%r14
000000000002aba8	movq	0x0007a221(%rip),%rsi
000000000002abaf	movq	%rbx,%rdi
000000000002abb2	call	*%r14
000000000002abb5	movq	0x0007a654(%rip),%rsi
000000000002abbc	movq	%rax,%rdi
000000000002abbf	call	*%r14
000000000002abc2	movq	0x00083b8f(%rip),%rax
000000000002abc9	cmpq	$0x00,(%rbx,%rax)
000000000002abce	jne	0x0002ac0e
000000000002abd0	movq	0x0007a649(%rip),%rsi
000000000002abd7	movq	0x0007a63a(%rip),%rcx
000000000002abde	movq	0x0007d9db(%rip),%rdi
000000000002abe5	movsd	0x00023f03(%rip),%xmm0
000000000002abed	movq	%rbx,%rdx
000000000002abf0	xorl	%r8d,%r8d
000000000002abf3	xorl	%r9d,%r9d
000000000002abf6	call	*0x000594dc(%rip)
000000000002abfc	movq	0x00083b55(%rip),%rdx
000000000002ac03	movq	%rax,%rdi
000000000002ac06	movq	%rbx,%rsi
000000000002ac09	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000002ac0e	movq	0x0007d9b3(%rip),%rdi
000000000002ac15	leaq	0x0007d6c4(%rip),%rsi
000000000002ac1c	call	*0x0007d6be(%rip)
000000000002ac22	movq	0x00079e47(%rip),%rsi
000000000002ac29	movq	%rax,%rdi
000000000002ac2c	call	*0x000594a6(%rip)
000000000002ac32	movq	%rax,%r14
000000000002ac35	movq	0x0007a194(%rip),%rsi
000000000002ac3c	movq	%rbx,%rdi
000000000002ac3f	call	*0x00059493(%rip)
000000000002ac45	movq	0x0007a18c(%rip),%rsi
000000000002ac4c	movq	%r14,%rdi
000000000002ac4f	movq	%rax,%rdx
000000000002ac52	call	*0x00059480(%rip)
000000000002ac58	movq	0x0007a171(%rip),%rsi
000000000002ac5f	movq	%rbx,%rdi
000000000002ac62	call	*0x00059470(%rip)
000000000002ac68	movq	0x0007a171(%rip),%rsi
000000000002ac6f	movq	%rax,%rdi
000000000002ac72	movq	%r14,%rdx
000000000002ac75	movq	0x0005945c(%rip),%rax
000000000002ac7c	popq	%rbx
000000000002ac7d	popq	%r14
000000000002ac7f	popq	%rbp
000000000002ac80	jmp	*%rax
000000000002ac82	nop
000000000002ac83	nop
000000000002ac84	nop
000000000002ac85	nop
000000000002ac86	nop
000000000002ac87	nop
000000000002ac88	nop
000000000002ac89	nop
000000000002ac8a	nop
000000000002ac8b	nop
000000000002ac8c	nop
-[PBXGDB_SequenceController purgeAllQueues]:
000000000002ac8d	pushq	%rbp
000000000002ac8e	movq	%rsp,%rbp
000000000002ac91	pushq	%rbx
000000000002ac92	pushq	%rax
000000000002ac93	movq	%rdi,%rbx
000000000002ac96	movq	0x000842bb(%rip),%rax
000000000002ac9d	movq	(%rbx,%rax),%rdi
000000000002aca1	movq	0x0007a3a8(%rip),%rsi
000000000002aca8	call	*0x0005942a(%rip)
000000000002acae	movq	0x000842ab(%rip),%rax
000000000002acb5	movq	(%rbx,%rax),%rdi
000000000002acb9	movq	0x0007a390(%rip),%rsi
000000000002acc0	call	*0x00059412(%rip)
000000000002acc6	movq	0x000842a3(%rip),%rax
000000000002accd	movq	(%rbx,%rax),%rdi
000000000002acd1	movq	0x0007a378(%rip),%rsi
000000000002acd8	call	*0x000593fa(%rip)
000000000002acde	movq	0x00084283(%rip),%rax
000000000002ace5	movq	(%rbx,%rax),%rdi
000000000002ace9	movq	0x0007a360(%rip),%rsi
000000000002acf0	movq	0x000593e1(%rip),%rax
000000000002acf7	addq	$0x08,%rsp
000000000002acfb	popq	%rbx
000000000002acfc	popq	%rbp
000000000002acfd	jmp	*%rax
000000000002acff	nop
000000000002ad00	nop
000000000002ad01	nop
000000000002ad02	nop
000000000002ad03	nop
-[PBXGDB_MIController purgeOutstandingCommands]:
000000000002ad04	pushq	%rbp
000000000002ad05	movq	%rsp,%rbp
000000000002ad08	movq	0x00083ed9(%rip),%rax
000000000002ad0f	movq	(%rdi,%rax),%rdi
000000000002ad13	movq	0x0007a336(%rip),%rsi
000000000002ad1a	popq	%rbp
000000000002ad1b	jmp	*0x000593b7(%rip)
000000000002ad21	nop
000000000002ad22	nop
000000000002ad23	nop
000000000002ad24	nop
000000000002ad25	nop
000000000002ad26	nop
000000000002ad27	nop
000000000002ad28	nop
-[PBXGDB_SequenceController clearExecutingSequence]:
000000000002ad29	pushq	%rbp
000000000002ad2a	movq	%rsp,%rbp
000000000002ad2d	movq	0x0007bc74(%rip),%rsi
000000000002ad34	xorl	%edx,%edx
000000000002ad36	popq	%rbp
000000000002ad37	jmp	*0x0005939b(%rip)
000000000002ad3d	nop
000000000002ad3e	nop
-[PBXGDB_QuitSequence init]:
000000000002ad3f	pushq	%rbp
000000000002ad40	movq	%rsp,%rbp
000000000002ad43	subq	$0x10,%rsp
000000000002ad47	movq	%rdi,0xf0(%rbp)
000000000002ad4b	movq	0x0007e026(%rip),%rax
000000000002ad52	movq	%rax,0xf8(%rbp)
000000000002ad56	movq	0x00079d13(%rip),%rsi
000000000002ad5d	leaq	0xf0(%rbp),%rdi
000000000002ad61	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000002ad66	testq	%rax,%rax
000000000002ad69	je	0x0002ad79
000000000002ad6b	leaq	0x00083ac6(%rip),%rcx
000000000002ad72	movq	(%rcx),%rcx
000000000002ad75	movb	$0x01,(%rax,%rcx)
000000000002ad79	addq	$0x10,%rsp
000000000002ad7d	popq	%rbp
000000000002ad7e	ret
000000000002ad7f	nop
000000000002ad80	nop
000000000002ad81	nop
-[PBXGDB_QuitSequence execute]:
000000000002ad82	pushq	%rbp
000000000002ad83	movq	%rsp,%rbp
000000000002ad86	pushq	%r14
000000000002ad88	pushq	%rbx
000000000002ad89	movq	%rdi,%r14
000000000002ad8c	movq	0x00079ced(%rip),%rsi
000000000002ad93	movq	0x0007d9fe(%rip),%rdi
000000000002ad9a	call	*0x00059338(%rip)
000000000002ada0	movq	%rax,%rbx
000000000002ada3	movq	0x00079cde(%rip),%rsi
000000000002adaa	movq	%rbx,%rdi
000000000002adad	movq	%r14,%rdx
000000000002adb0	call	*0x00059322(%rip)
000000000002adb6	movq	0x00079cdb(%rip),%rsi
000000000002adbd	movq	0x0007aedc(%rip),%rdx
000000000002adc4	movq	%rbx,%rdi
000000000002adc7	call	*0x0005930b(%rip)
000000000002adcd	movq	0x00079ce4(%rip),%rsi
000000000002add4	movq	%r14,%rdi
000000000002add7	call	*0x000592fb(%rip)
000000000002addd	movq	0x00079cdc(%rip),%rsi
000000000002ade4	movq	%rax,%rdi
000000000002ade7	call	*0x000592eb(%rip)
000000000002aded	movq	0x00079cd4(%rip),%rsi
000000000002adf4	movq	%rax,%rdi
000000000002adf7	movq	%rbx,%rdx
000000000002adfa	movq	0x000592d7(%rip),%rax
000000000002ae01	popq	%rbx
000000000002ae02	popq	%r14
000000000002ae04	popq	%rbp
000000000002ae05	jmp	*%rax
-[PBXGDB_MIKillCommand initWithSequenceNumber:]:
000000000002ae07	pushq	%rbp
000000000002ae08	movq	%rsp,%rbp
000000000002ae0b	subq	$0x10,%rsp
000000000002ae0f	movq	%rdi,0xf0(%rbp)
000000000002ae13	movq	0x0007e03e(%rip),%rax
000000000002ae1a	movq	%rax,0xf8(%rbp)
000000000002ae1e	movq	0x0007b40b(%rip),%rsi
000000000002ae25	leaq	0xf0(%rbp),%rdi
000000000002ae29	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000002ae2e	leaq	0x00083ccb(%rip),%rcx
000000000002ae35	leaq	0x00083cbc(%rip),%rdx
000000000002ae3c	movq	(%rdx),%rdx
000000000002ae3f	movq	$0xfffffffe,(%rax,%rdx)
000000000002ae47	movq	(%rcx),%rcx
000000000002ae4a	movq	$0xfffffffe,(%rax,%rcx)
000000000002ae52	addq	$0x10,%rsp
000000000002ae56	popq	%rbp
000000000002ae57	ret
-[PBXGDB_MIKillCommand GDBCommandString]:
000000000002ae58	pushq	%rbp
000000000002ae59	movq	%rsp,%rbp
000000000002ae5c	leaq	0x00086c15(%rip),%rax
000000000002ae63	popq	%rbp
000000000002ae64	ret
000000000002ae65	nop
000000000002ae66	nop
-[PBXGDB_QuitSequence sentKill:]:
000000000002ae67	pushq	%rbp
000000000002ae68	movq	%rsp,%rbp
000000000002ae6b	pushq	%r14
000000000002ae6d	pushq	%rbx
000000000002ae6e	movq	%rdi,%r14
000000000002ae71	movq	0x00083a50(%rip),%rax
000000000002ae78	movb	$0x01,(%r14,%rax)
000000000002ae7d	movq	0x00079bfc(%rip),%rsi
000000000002ae84	movq	0x0007d915(%rip),%rdi
000000000002ae8b	call	*0x00059247(%rip)
000000000002ae91	movq	%rax,%rbx
000000000002ae94	movq	0x00079bed(%rip),%rsi
000000000002ae9b	movq	%rbx,%rdi
000000000002ae9e	movq	%r14,%rdx
000000000002aea1	call	*0x00059231(%rip)
000000000002aea7	movq	0x00079bea(%rip),%rsi
000000000002aeae	movq	0x0007adf3(%rip),%rdx
000000000002aeb5	movq	%rbx,%rdi
000000000002aeb8	call	*0x0005921a(%rip)
000000000002aebe	movq	0x00079bf3(%rip),%rsi
000000000002aec5	movq	%r14,%rdi
000000000002aec8	call	*0x0005920a(%rip)
000000000002aece	movq	0x00079beb(%rip),%rsi
000000000002aed5	movq	%rax,%rdi
000000000002aed8	call	*0x000591fa(%rip)
000000000002aede	movq	0x00079be3(%rip),%rsi
000000000002aee5	movq	%rax,%rdi
000000000002aee8	movq	%rbx,%rdx
000000000002aeeb	call	*0x000591e7(%rip)
000000000002aef1	movq	0x00079c40(%rip),%rsi
000000000002aef8	movq	%r14,%rdi
000000000002aefb	movq	0x000591d6(%rip),%rax
000000000002af02	popq	%rbx
000000000002af03	popq	%r14
000000000002af05	popq	%rbp
000000000002af06	jmp	*%rax
-[PBXGDB_MIQuitCommand initWithSequenceNumber:]:
000000000002af08	pushq	%rbp
000000000002af09	movq	%rsp,%rbp
000000000002af0c	subq	$0x10,%rsp
000000000002af10	movq	%rdi,0xf0(%rbp)
000000000002af14	movq	0x0007df35(%rip),%rax
000000000002af1b	movq	%rax,0xf8(%rbp)
000000000002af1f	movq	0x0007b30a(%rip),%rsi
000000000002af26	leaq	0xf0(%rbp),%rdi
000000000002af2a	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000002af2f	leaq	0x00083bca(%rip),%rcx
000000000002af36	leaq	0x00083bbb(%rip),%rdx
000000000002af3d	movq	(%rdx),%rdx
000000000002af40	movq	$0xfffffffe,(%rax,%rdx)
000000000002af48	movq	(%rcx),%rcx
000000000002af4b	movq	$0xfffffffe,(%rax,%rcx)
000000000002af53	addq	$0x10,%rsp
000000000002af57	popq	%rbp
000000000002af58	ret
-[PBXGDB_MIQuitCommand GDBCommandString]:
000000000002af59	pushq	%rbp
000000000002af5a	movq	%rsp,%rbp
000000000002af5d	leaq	0x00086af4(%rip),%rax
000000000002af64	popq	%rbp
000000000002af65	ret
-[PBXGDB_QuitSequence didFinish]:
000000000002af66	pushq	%rbp
000000000002af67	movq	%rsp,%rbp
000000000002af6a	pushq	%r14
000000000002af6c	pushq	%rbx
000000000002af6d	subq	$0x10,%rsp
000000000002af71	movq	%rdi,%rbx
000000000002af74	movq	0x00079b3d(%rip),%rsi
000000000002af7b	movq	0x00059156(%rip),%r14
000000000002af82	call	*%r14
000000000002af85	movq	0x00079f1c(%rip),%rsi
000000000002af8c	movq	%rax,%rdi
000000000002af8f	call	*%r14
000000000002af92	movq	%rbx,0xe0(%rbp)
000000000002af96	leaq	0xe0(%rbp),%rdi
000000000002af9a	movq	0x0007ddd7(%rip),%rax
000000000002afa1	movq	%rax,0xe8(%rbp)
000000000002afa5	movq	0x00079b8c(%rip),%rsi
000000000002afac	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000002afb1	addq	$0x10,%rsp
000000000002afb5	popq	%rbx
000000000002afb6	popq	%r14
000000000002afb8	popq	%rbp
000000000002afb9	ret
-[PBXGDB_Adaptor invalidateForceQuit]:
000000000002afba	pushq	%rbp
000000000002afbb	movq	%rsp,%rbp
000000000002afbe	pushq	%rbx
000000000002afbf	pushq	%rax
000000000002afc0	movq	%rdi,%rbx
000000000002afc3	movq	0x0008378e(%rip),%rax
000000000002afca	movq	(%rbx,%rax),%rdi
000000000002afce	movq	0x0007a213(%rip),%rsi
000000000002afd5	call	*0x000590fd(%rip)
000000000002afdb	movq	0x00083776(%rip),%rdx
000000000002afe2	xorl	%edi,%edi
000000000002afe4	movq	%rbx,%rsi
000000000002afe7	addq	$0x08,%rsp
000000000002afeb	popq	%rbx
000000000002afec	popq	%rbp
000000000002afed	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000002aff2	nop
000000000002aff3	nop
000000000002aff4	nop
000000000002aff5	nop
000000000002aff6	nop
000000000002aff7	nop
000000000002aff8	nop
000000000002aff9	nop
000000000002affa	nop
000000000002affb	nop
000000000002affc	nop
000000000002affd	nop
000000000002affe	nop
000000000002afff	nop
-[DBGGDBLauncher _taskDidTerminate:]:
000000000002b000	pushq	%rbp
000000000002b001	movq	%rsp,%rbp
000000000002b004	pushq	%r14
000000000002b006	pushq	%rbx
000000000002b007	movq	%rdi,%r14
000000000002b00a	movq	0x00084507(%rip),%rax
000000000002b011	cmpb	$0x00,(%r14,%rax)
000000000002b016	jne	0x0002b056
000000000002b018	movq	0x0007c9e1(%rip),%rsi
000000000002b01f	movq	0x000590b2(%rip),%rbx
000000000002b026	movq	%r14,%rdi
000000000002b029	call	*%rbx
000000000002b02b	movq	0x0007c9d6(%rip),%rsi
000000000002b032	movq	%rax,%rdi
000000000002b035	movl	$0x00000004,%edx
000000000002b03a	call	*%rbx
000000000002b03c	movq	0x0007c9bd(%rip),%rsi
000000000002b043	movq	%r14,%rdi
000000000002b046	call	*%rbx
000000000002b048	movq	0x0007c9e1(%rip),%rsi
000000000002b04f	movq	%rax,%rdi
000000000002b052	call	*%rbx
000000000002b054	jmp	0x0002b088
000000000002b056	movq	0x0007c99b(%rip),%rsi
000000000002b05d	movq	0x00059074(%rip),%rbx
000000000002b064	movq	%r14,%rdi
000000000002b067	xorl	%edx,%edx
000000000002b069	call	*%rbx
000000000002b06b	movq	0x0007c98e(%rip),%rsi
000000000002b072	movq	%r14,%rdi
000000000002b075	call	*%rbx
000000000002b077	movq	0x0007c98a(%rip),%rsi
000000000002b07e	movq	%rax,%rdi
000000000002b081	movl	$0x00000005,%edx
000000000002b086	call	*%rbx
000000000002b088	movq	0x00084479(%rip),%rax
000000000002b08f	movq	(%r14,%rax),%rdi
000000000002b093	movq	0x0007c99e(%rip),%rsi
000000000002b09a	call	*0x00059038(%rip)
000000000002b0a0	movq	0x0007c999(%rip),%rsi
000000000002b0a7	movq	%r14,%rdi
000000000002b0aa	call	*0x00059028(%rip)
000000000002b0b0	movq	0x0007c991(%rip),%rsi
000000000002b0b7	movq	%r14,%rdi
000000000002b0ba	call	*0x00059018(%rip)
000000000002b0c0	movq	0x00079df9(%rip),%rsi
000000000002b0c7	movq	%r14,%rdi
000000000002b0ca	call	*0x00059008(%rip)
000000000002b0d0	movq	%rax,%rbx
000000000002b0d3	movq	0x0007c976(%rip),%rsi
000000000002b0da	movq	%rbx,%rdi
000000000002b0dd	xorl	%edx,%edx
000000000002b0df	call	*0x00058ff3(%rip)
000000000002b0e5	movq	0x0007c454(%rip),%rsi
000000000002b0ec	movq	%rbx,%rdi
000000000002b0ef	xorl	%edx,%edx
000000000002b0f1	call	*0x00058fe1(%rip)
000000000002b0f7	movq	0x0007ab62(%rip),%rsi
000000000002b0fe	movq	%rbx,%rdi
000000000002b101	xorl	%edx,%edx
000000000002b103	call	*0x00058fcf(%rip)
000000000002b109	movq	0x0007c4c8(%rip),%rsi
000000000002b110	movq	%rbx,%rdi
000000000002b113	xorl	%edx,%edx
000000000002b115	call	*0x00058fbd(%rip)
000000000002b11b	movq	0x00079c86(%rip),%rsi
000000000002b122	movq	%r14,%rdi
000000000002b125	call	*0x00058fad(%rip)
000000000002b12b	movq	0x0007c826(%rip),%rsi
000000000002b132	movq	%rax,%rdi
000000000002b135	call	*0x00058f9d(%rip)
000000000002b13b	movq	0x000843be(%rip),%rcx
000000000002b142	movq	(%r14,%rcx),%rdx
000000000002b146	movq	0x00079bd3(%rip),%rsi
000000000002b14d	movq	%rax,%rdi
000000000002b150	call	*0x00058f82(%rip)
000000000002b156	movq	0x0007c8fb(%rip),%rsi
000000000002b15d	movq	%r14,%rdi
000000000002b160	call	*0x00058f72(%rip)
000000000002b166	movq	0x0007c8f3(%rip),%rsi
000000000002b16d	movq	%rax,%rdi
000000000002b170	movq	%r14,%rdx
000000000002b173	xorl	%ecx,%ecx
000000000002b175	movq	0x00058f5c(%rip),%rax
000000000002b17c	popq	%rbx
000000000002b17d	popq	%r14
000000000002b17f	popq	%rbp
000000000002b180	jmp	*%rax
000000000002b182	nop
000000000002b183	nop
000000000002b184	nop
000000000002b185	nop
000000000002b186	nop
000000000002b187	nop
000000000002b188	nop
000000000002b189	nop
-[PBXLSProcess debugger:setHasExitedWithStatus:]:
000000000002b18a	pushq	%rbp
000000000002b18b	movq	%rsp,%rbp
000000000002b18e	pushq	%r14
000000000002b190	pushq	%rbx
000000000002b191	movl	%ecx,%r14d
000000000002b194	movq	%rdi,%rbx
000000000002b197	movq	0x00079d12(%rip),%rsi
000000000002b19e	call	*0x00058f34(%rip)
000000000002b1a4	movq	0x0007c39d(%rip),%rsi
000000000002b1ab	movq	%rbx,%rdi
000000000002b1ae	movl	$0x00000001,%edx
000000000002b1b3	call	*0x00058f1f(%rip)
000000000002b1b9	movq	0x0007c390(%rip),%rsi
000000000002b1c0	movq	%rbx,%rdi
000000000002b1c3	movl	%r14d,%edx
000000000002b1c6	call	*0x00058f0c(%rip)
000000000002b1cc	movq	0x0007a995(%rip),%rsi
000000000002b1d3	movq	%rbx,%rdi
000000000002b1d6	call	*0x00058efc(%rip)
000000000002b1dc	movq	0x0007c375(%rip),%rsi
000000000002b1e3	movq	%rax,%rdi
000000000002b1e6	call	*0x00058eec(%rip)
000000000002b1ec	movslq	%r14d,%rdx
000000000002b1ef	movq	0x0007c36a(%rip),%rsi
000000000002b1f6	movq	%rax,%rdi
000000000002b1f9	call	*0x00058ed9(%rip)
000000000002b1ff	movq	0x0007a962(%rip),%rsi
000000000002b206	movq	%rbx,%rdi
000000000002b209	call	*0x00058ec9(%rip)
000000000002b20f	movq	0x0007c342(%rip),%rsi
000000000002b216	movq	%rax,%rdi
000000000002b219	call	*0x00058eb9(%rip)
000000000002b21f	movq	0x0007c342(%rip),%rsi
000000000002b226	movq	%rax,%rdi
000000000002b229	movl	$0x00000001,%edx
000000000002b22e	movq	0x00058ea3(%rip),%rax
000000000002b235	popq	%rbx
000000000002b236	popq	%r14
000000000002b238	popq	%rbp
000000000002b239	jmp	*%rax
000000000002b23b	nop
000000000002b23c	nop
000000000002b23d	nop
000000000002b23e	nop
000000000002b23f	nop
000000000002b240	nop
000000000002b241	nop
000000000002b242	nop
000000000002b243	nop
000000000002b244	nop
000000000002b245	nop
000000000002b246	nop
000000000002b247	nop
000000000002b248	nop
000000000002b249	nop
-[PBXLSProcess unconfigureDynamicLinkerImageController]:
000000000002b24a	pushq	%rbp
000000000002b24b	movq	%rsp,%rbp
000000000002b24e	pushq	%r14
000000000002b250	pushq	%rbx
000000000002b251	movq	%rdi,%rbx
000000000002b254	movq	0x000840cd(%rip),%rax
000000000002b25b	movq	(%rbx,%rax),%rdi
000000000002b25f	movq	0x00079fca(%rip),%rsi
000000000002b266	movq	0x00058e6b(%rip),%r14
000000000002b26d	call	*%r14
000000000002b270	movq	0x000840b1(%rip),%rax
000000000002b277	movq	(%rbx,%rax),%rdi
000000000002b27b	movq	0x00079e3e(%rip),%rsi
000000000002b282	call	*%r14
000000000002b285	movq	0x0008409c(%rip),%rdx
000000000002b28c	xorl	%edi,%edi
000000000002b28e	movq	%rbx,%rsi
000000000002b291	popq	%rbx
000000000002b292	popq	%r14
000000000002b294	popq	%rbp
000000000002b295	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXLSDynamicLinkerImageController removeImages]:
000000000002b29a	pushq	%rbp
000000000002b29b	movq	%rsp,%rbp
000000000002b29e	movq	0x0008404b(%rip),%rax
000000000002b2a5	movq	(%rdi,%rax),%rdi
000000000002b2a9	movq	0x00079da0(%rip),%rsi
000000000002b2b0	popq	%rbp
000000000002b2b1	jmp	*0x00058e21(%rip)
000000000002b2b7	nop
000000000002b2b8	nop
000000000002b2b9	nop
-[PBXLSProcess setHasExited:]:
000000000002b2ba	pushq	%rbp
000000000002b2bb	movq	%rsp,%rbp
000000000002b2be	movq	0x00084093(%rip),%rax
000000000002b2c5	movb	%dl,(%rdi,%rax)
000000000002b2c8	popq	%rbp
000000000002b2c9	ret
-[PBXLSProcess setExitStatus:]:
000000000002b2ca	pushq	%rbp
000000000002b2cb	movq	%rsp,%rbp
000000000002b2ce	movq	0x0008408b(%rip),%rax
000000000002b2d5	movl	%edx,(%rdi,%rax)
000000000002b2d8	popq	%rbp
000000000002b2d9	ret
+[PBXGDB_Adaptor unRegisterActiveAdaptor:]:
000000000002b2da	pushq	%rbp
000000000002b2db	movq	%rsp,%rbp
000000000002b2de	movq	0x00079a3b(%rip),%rsi
000000000002b2e5	movq	0x0008c374(%rip),%rdi
000000000002b2ec	popq	%rbp
000000000002b2ed	jmp	*0x00058de5(%rip)
-[PBXGDB_Adaptor executableDidFinish]:
000000000002b2f3	pushq	%rbp
000000000002b2f4	movq	%rsp,%rbp
000000000002b2f7	movq	0x00079dba(%rip),%rsi
000000000002b2fe	popq	%rbp
000000000002b2ff	jmp	*0x00058dd3(%rip)
000000000002b305	nop
-[DBGGDBLauncher _cleanUp]:
000000000002b306	pushq	%rbp
000000000002b307	movq	%rsp,%rbp
000000000002b30a	pushq	%r15
000000000002b30c	pushq	%r14
000000000002b30e	pushq	%rbx
000000000002b30f	subq	$0x28,%rsp
000000000002b313	movq	%rsi,%rbx
000000000002b316	movq	%rdi,0xe0(%rbp)
000000000002b31a	movq	%rbx,0xd8(%rbp)
000000000002b31e	movq	0x00079ba3(%rip),%rsi
000000000002b325	movq	0x0007d13c(%rip),%rdi
000000000002b32c	movq	0x00058da5(%rip),%r15
000000000002b333	call	*%r15
000000000002b336	movq	%rax,%r14
000000000002b339	movq	0x0007c698(%rip),%rsi
000000000002b340	movq	0x0007d121(%rip),%rdi
000000000002b347	call	*%r15
000000000002b34a	cmpq	%rax,%r14
000000000002b34d	je	0x0002b39d
000000000002b34f	movq	%rbx,%rdi
000000000002b352	callq	0x0004e5cc	; symbol stub for: _NSStringFromSelector
000000000002b357	leaq	0x000844da(%rip),%rcx
000000000002b35e	leaq	0x00038edd(%rip),%rdx
000000000002b365	movq	%rdx,0x10(%rsp)
000000000002b36a	movq	%rcx,0x08(%rsp)
000000000002b36f	movq	%rax,(%rsp)
000000000002b373	leaq	0xe0(%rbp),%rdi
000000000002b377	leaq	0xd8(%rbp),%rsi
000000000002b37b	leaq	0x00038e2d(%rip),%rdx
000000000002b382	leaq	0x00038e41(%rip),%rcx
000000000002b389	leaq	0x0008adc8(%rip),%r9
000000000002b390	movl	$0x000000c5,%r8d
000000000002b396	xorb	%al,%al
000000000002b398	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000002b39d	movq	0x000799e4(%rip),%rsi
000000000002b3a4	movq	0x0007d11d(%rip),%rdi
000000000002b3ab	movq	0x00058d26(%rip),%rbx
000000000002b3b2	call	*%rbx
000000000002b3b4	movq	0x00084155(%rip),%rcx
000000000002b3bb	movq	0xe0(%rbp),%rdx
000000000002b3bf	movq	(%rdx,%rcx),%r8
000000000002b3c3	movq	0x0007c616(%rip),%rsi
000000000002b3ca	movq	0x00058c6f(%rip),%rcx
000000000002b3d1	movq	(%rcx),%rcx
000000000002b3d4	movq	%rax,%rdi
000000000002b3d7	call	*%rbx
000000000002b3d9	movq	0x00084130(%rip),%rdx
000000000002b3e0	movq	0xe0(%rbp),%rsi
000000000002b3e4	xorl	%edi,%edi
000000000002b3e6	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000002b3eb	movq	0x0008410e(%rip),%rax
000000000002b3f2	movq	0xe0(%rbp),%rcx
000000000002b3f6	movq	(%rcx,%rax),%rdi
000000000002b3fa	movq	0x0007c5e7(%rip),%rsi
000000000002b401	call	*%rbx
000000000002b403	addq	$0x28,%rsp
000000000002b407	popq	%rbx
000000000002b408	popq	%r14
000000000002b40a	popq	%r15
000000000002b40c	popq	%rbp
000000000002b40d	ret
000000000002b40e	nop
000000000002b40f	nop
000000000002b410	nop
000000000002b411	nop
000000000002b412	nop
000000000002b413	nop
000000000002b414	nop
000000000002b415	nop
-[DBGGDBSession cleanUp]:
000000000002b416	pushq	%rbp
000000000002b417	movq	%rsp,%rbp
000000000002b41a	pushq	%rbx
000000000002b41b	subq	$0x18,%rsp
000000000002b41f	movq	%rdi,%rbx
000000000002b422	movq	%rbx,0xe8(%rbp)
000000000002b426	movq	0x0007dc8b(%rip),%rax
000000000002b42d	movq	%rax,0xf0(%rbp)
000000000002b431	movq	0x0007c5b0(%rip),%rsi
000000000002b438	leaq	0xe8(%rbp),%rdi
000000000002b43c	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000002b441	movq	0x00084200(%rip),%rdx
000000000002b448	xorl	%edi,%edi
000000000002b44a	movq	%rbx,%rsi
000000000002b44d	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000002b452	addq	$0x18,%rsp
000000000002b456	popq	%rbx
000000000002b457	popq	%rbp
000000000002b458	ret
000000000002b459	nop
000000000002b45a	nop
000000000002b45b	nop
000000000002b45c	nop
000000000002b45d	nop
000000000002b45e	nop
000000000002b45f	nop
000000000002b460	nop
000000000002b461	nop
000000000002b462	nop
000000000002b463	nop
000000000002b464	nop
000000000002b465	nop
000000000002b466	nop
000000000002b467	nop
-[DBGGDBLauncher _adaptorUnconfigure]:
000000000002b468	pushq	%rbp
000000000002b469	movq	%rsp,%rbp
000000000002b46c	pushq	%rbx
000000000002b46d	pushq	%rax
000000000002b46e	movq	%rdi,%rbx
000000000002b471	movq	0x00084090(%rip),%rax
000000000002b478	movq	(%rbx,%rax),%rdi
000000000002b47c	movq	0x0007c5a5(%rip),%rsi
000000000002b483	call	*0x00058c4f(%rip)
000000000002b489	movq	0x00084078(%rip),%rdx
000000000002b490	xorl	%edi,%edi
000000000002b492	movq	%rbx,%rsi
000000000002b495	addq	$0x08,%rsp
000000000002b499	popq	%rbx
000000000002b49a	popq	%rbp
000000000002b49b	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_Adaptor unconfigureUI]:
000000000002b4a0	pushq	%rbp
000000000002b4a1	movq	%rsp,%rbp
000000000002b4a4	pushq	%r14
000000000002b4a6	pushq	%rbx
000000000002b4a7	movq	%rdi,%rbx
000000000002b4aa	movq	0x000799f7(%rip),%rsi
000000000002b4b1	movq	0x00058c20(%rip),%r14
000000000002b4b8	call	*%r14
000000000002b4bb	movq	0x0007992e(%rip),%rsi
000000000002b4c2	movq	%rbx,%rdi
000000000002b4c5	call	*%r14
000000000002b4c8	movq	0x000799e1(%rip),%rsi
000000000002b4cf	movq	%rax,%rdi
000000000002b4d2	call	*%r14
000000000002b4d5	movq	0x00083204(%rip),%rax
000000000002b4dc	movq	(%rbx,%rax),%rdi
000000000002b4e0	testq	%rdi,%rdi
000000000002b4e3	je	0x0002b503
000000000002b4e5	movq	0x000798ac(%rip),%rsi
000000000002b4ec	call	*0x00058be6(%rip)
000000000002b4f2	movq	0x000831e7(%rip),%rdx
000000000002b4f9	xorl	%edi,%edi
000000000002b4fb	movq	%rbx,%rsi
000000000002b4fe	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000002b503	movq	%rbx,%rsi
000000000002b506	movq	%rbx,%rax
000000000002b509	movq	0x000831f0(%rip),%rdx
000000000002b510	addq	%rbx,%rdx
000000000002b513	subq	%rax,%rdx
000000000002b516	xorl	%edi,%edi
000000000002b518	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000002b51d	movq	0x00079994(%rip),%rsi
000000000002b524	movq	0x0007cfbd(%rip),%rdi
000000000002b52b	movq	%rbx,%rdx
000000000002b52e	popq	%rbx
000000000002b52f	popq	%r14
000000000002b531	popq	%rbp
000000000002b532	jmp	*0x00058ba0(%rip)
-[DBGGDBPTYDeviceByteStream closePTY]:
000000000002b538	pushq	%rbp
000000000002b539	movq	%rsp,%rbp
000000000002b53c	movq	0x0008309d(%rip),%rax
000000000002b543	cmpb	$0x00,(%rdi,%rax)
000000000002b547	je	0x0002b54b
000000000002b549	popq	%rbp
000000000002b54a	ret
000000000002b54b	movq	0x000796b6(%rip),%rsi
000000000002b552	popq	%rbp
000000000002b553	jmp	*0x00058b7f(%rip)
-[DBGGDBPTYDeviceByteStream finalize]:
000000000002b559	pushq	%rbp
000000000002b55a	movq	%rsp,%rbp
000000000002b55d	pushq	%rbx
000000000002b55e	subq	$0x18,%rsp
000000000002b562	movq	%rdi,%rbx
000000000002b565	movq	0x0008304c(%rip),%rax
000000000002b56c	movl	(%rbx,%rax),%edi
000000000002b56f	cmpl	$0xff,%edi
000000000002b572	je	0x0002b579
000000000002b574	callq	0x0004e698	; symbol stub for: _close
000000000002b579	movq	0x00083040(%rip),%rax
000000000002b580	movl	(%rbx,%rax),%edi
000000000002b583	cmpl	$0xff,%edi
000000000002b586	je	0x0002b58d
000000000002b588	callq	0x0004e698	; symbol stub for: _close
000000000002b58d	movq	0x00083034(%rip),%rax
000000000002b594	movl	(%rbx,%rax),%edi
000000000002b597	cmpl	$0xff,%edi
000000000002b59a	je	0x0002b5a1
000000000002b59c	callq	0x0004e698	; symbol stub for: _close
000000000002b5a1	movq	0x00083028(%rip),%rax
000000000002b5a8	movl	(%rbx,%rax),%edi
000000000002b5ab	cmpl	$0xff,%edi
000000000002b5ae	je	0x0002b5b5
000000000002b5b0	callq	0x0004e698	; symbol stub for: _close
000000000002b5b5	movq	%rbx,0xe8(%rbp)
000000000002b5b9	movq	0x0007d740(%rip),%rax
000000000002b5c0	movq	%rax,0xf0(%rbp)
000000000002b5c4	movq	0x000795cd(%rip),%rsi
000000000002b5cb	leaq	0xe8(%rbp),%rdi
000000000002b5cf	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000002b5d4	addq	$0x18,%rsp
000000000002b5d8	popq	%rbx
000000000002b5d9	popq	%rbp
000000000002b5da	ret
-[PBXGDB_FetchMemoryForViewerSequence initWithAddress:numberOfBytes:resultHandler:]:
000000000002b5db	pushq	%rbp
000000000002b5dc	movq	%rsp,%rbp
000000000002b5df	pushq	%r15
000000000002b5e1	pushq	%r14
000000000002b5e3	pushq	%r13
000000000002b5e5	pushq	%r12
000000000002b5e7	pushq	%rbx
000000000002b5e8	subq	$0x28,%rsp
000000000002b5ec	movq	%r8,%r12
000000000002b5ef	movq	%rcx,%rbx
000000000002b5f2	movq	%rdx,%r14
000000000002b5f5	movq	%rdi,0xc8(%rbp)
000000000002b5f9	movq	0x0007d6f0(%rip),%rax
000000000002b600	movq	%rax,0xd0(%rbp)
000000000002b604	movq	0x00079465(%rip),%rsi
000000000002b60b	leaq	0xc8(%rbp),%rdi
000000000002b60f	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000002b614	movq	%rax,%r15
000000000002b617	testq	%r15,%r15
000000000002b61a	je	0x0002b723
000000000002b620	movq	0x00079451(%rip),%rsi
000000000002b627	movq	0x00058aaa(%rip),%r13
000000000002b62e	movq	%r12,%rdi
000000000002b631	call	*%r13
000000000002b634	movq	0x00082f55(%rip),%rdx
000000000002b63b	movq	%rax,%rdi
000000000002b63e	movq	%r15,%rsi
000000000002b641	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000002b646	movq	0x00079433(%rip),%rsi
000000000002b64d	movq	0x0007cddc(%rip),%rdi
000000000002b654	call	*%r13
000000000002b657	movq	0x00082f3a(%rip),%rdx
000000000002b65e	movq	%rax,%rdi
000000000002b661	movq	%r15,%rsi
000000000002b664	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000002b669	movq	0x00082f28(%rip),%rax
000000000002b670	movq	(%r15,%rax),%rdi
000000000002b674	movq	0x0007940d(%rip),%rsi
000000000002b67b	movq	%r15,%rdx
000000000002b67e	call	*%r13
000000000002b681	movq	0x00082f10(%rip),%rax
000000000002b688	movq	(%r15,%rax),%rdi
000000000002b68c	movq	0x00079405(%rip),%rsi
000000000002b693	movq	0x000793f6(%rip),%rdx
000000000002b69a	call	*%r13
000000000002b69d	testq	%rbx,%rbx
000000000002b6a0	jns	0x0002b6ba
000000000002b6a2	movq	%rbx,%rax
000000000002b6a5	shrq	%rax
000000000002b6a8	andq	$0x01,%rbx
000000000002b6ac	orq	%rax,%rbx
000000000002b6af	cvtsi2ss	%rbx,%xmm0
000000000002b6b4	addss	%xmm0,%xmm0
000000000002b6b8	jmp	0x0002b6bf
000000000002b6ba	cvtsi2ss	%rbx,%xmm0
000000000002b6bf	movss	0x00023409(%rip),%xmm1
000000000002b6c7	movaps	%xmm0,%xmm2
000000000002b6ca	subss	%xmm1,%xmm2
000000000002b6ce	movq	$0x8000000000000000,%rdx
000000000002b6d8	leaq	0x00083ff9(%rip),%rax
000000000002b6df	cvttss2si	%xmm2,%rcx
000000000002b6e4	xorq	%rdx,%rcx
000000000002b6e7	cvttss2si	%xmm0,%r9
000000000002b6ec	ucomiss	%xmm1,%xmm0
000000000002b6ef	cmovaeq	%rcx,%r9
000000000002b6f3	movq	0x00082e9e(%rip),%rcx
000000000002b6fa	movq	(%r15,%rcx),%rdi
000000000002b6fe	movq	0x0007939b(%rip),%rsi
000000000002b705	movq	%rax,0x08(%rsp)
000000000002b70a	movq	$0x00000001,(%rsp)
000000000002b712	movq	%r14,%rdx
000000000002b715	movl	$0x00000001,%ecx
000000000002b71a	movl	$0x00000001,%r8d
000000000002b720	call	*%r13
000000000002b723	movq	%r15,%rax
000000000002b726	addq	$0x28,%rsp
000000000002b72a	popq	%rbx
000000000002b72b	popq	%r12
000000000002b72d	popq	%r13
000000000002b72f	popq	%r14
000000000002b731	popq	%r15
000000000002b733	popq	%rbp
000000000002b734	ret
-[PBXGDB_FetchMemoryForViewerSequence setThreadContext:andStackFrameContext:]:
000000000002b735	pushq	%rbp
000000000002b736	movq	%rsp,%rbp
000000000002b739	pushq	%r14
000000000002b73b	pushq	%rbx
000000000002b73c	movq	%rcx,%r14
000000000002b73f	movq	%rdi,%rbx
000000000002b742	movq	0x00082e4f(%rip),%rax
000000000002b749	movq	(%rbx,%rax),%rdi
000000000002b74d	movq	0x00079354(%rip),%rsi
000000000002b754	call	*0x0005897e(%rip)
000000000002b75a	movq	0x00082e37(%rip),%rax
000000000002b761	movq	(%rbx,%rax),%rdi
000000000002b765	movq	0x00079344(%rip),%rsi
000000000002b76c	movq	%r14,%rdx
000000000002b76f	movq	0x00058962(%rip),%rax
000000000002b776	popq	%rbx
000000000002b777	popq	%r14
000000000002b779	popq	%rbp
000000000002b77a	jmp	*%rax
-[PBXGDB_FetchMemoryForViewerSequence interruptIfNeeded]:
000000000002b77c	pushq	%rbp
000000000002b77d	movq	%rsp,%rbp
000000000002b780	movl	$0x00000001,%eax
000000000002b785	popq	%rbp
000000000002b786	ret
-[PBXGDB_FetchMemoryForViewerSequence execute]:
000000000002b787	pushq	%rbp
000000000002b788	movq	%rsp,%rbp
000000000002b78b	pushq	%r14
000000000002b78d	pushq	%rbx
000000000002b78e	movq	%rdi,%rbx
000000000002b791	movq	0x00079320(%rip),%rsi
000000000002b798	movq	0x00058939(%rip),%r14
000000000002b79f	call	*%r14
000000000002b7a2	movq	0x00079317(%rip),%rsi
000000000002b7a9	movq	%rax,%rdi
000000000002b7ac	call	*%r14
000000000002b7af	movq	0x00082de2(%rip),%rcx
000000000002b7b6	movq	(%rbx,%rcx),%rdx
000000000002b7ba	movq	0x00079307(%rip),%rsi
000000000002b7c1	movq	%rax,%rdi
000000000002b7c4	call	*%r14
000000000002b7c7	movq	0x00082dca(%rip),%rdx
000000000002b7ce	xorl	%edi,%edi
000000000002b7d0	movq	%rbx,%rsi
000000000002b7d3	popq	%rbx
000000000002b7d4	popq	%r14
000000000002b7d6	popq	%rbp
000000000002b7d7	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_FetchMemoryForViewerSequence gotMemory:]:
000000000002b7dc	pushq	%rbp
000000000002b7dd	movq	%rsp,%rbp
000000000002b7e0	pushq	%r15
000000000002b7e2	pushq	%r14
000000000002b7e4	pushq	%r13
000000000002b7e6	pushq	%r12
000000000002b7e8	pushq	%rbx
000000000002b7e9	subq	$0x00000088,%rsp
000000000002b7f0	movq	%rdx,%r15
000000000002b7f3	movq	%rdi,0xffffff70(%rbp)
000000000002b7fa	movq	0x0007cc37(%rip),%rdi
000000000002b801	leaq	0x0007cad8(%rip),%r14
000000000002b808	movq	%r14,%rsi
000000000002b80b	call	*0x0007cacf(%rip)
000000000002b811	movq	0x00079258(%rip),%rsi
000000000002b818	movq	0x000588b9(%rip),%r12
000000000002b81f	movq	%rax,%rdi
000000000002b822	call	*%r12
000000000002b825	movq	%rax,0xb8(%rbp)
000000000002b829	movq	0x0007cc08(%rip),%rdi
000000000002b830	movq	%r14,%rsi
000000000002b833	call	*0x0007caa7(%rip)
000000000002b839	movq	0x00079230(%rip),%rsi
000000000002b840	movq	%rax,%rdi
000000000002b843	call	*%r12
000000000002b846	movq	%rax,%rdi
000000000002b849	movq	%rdi,0x90(%rbp)
000000000002b84d	movq	0x0007cbe4(%rip),%rdi
000000000002b854	movq	%r14,%rsi
000000000002b857	call	*0x0007ca83(%rip)
000000000002b85d	movq	0x0007920c(%rip),%rsi
000000000002b864	movq	%rax,%rdi
000000000002b867	call	*%r12
000000000002b86a	movq	%rax,0x88(%rbp)
000000000002b86e	movq	0x0007925b(%rip),%rsi
000000000002b875	movq	%r15,%rdi
000000000002b878	call	*%r12
000000000002b87b	movq	%rax,0xffffff68(%rbp)
000000000002b882	leaq	0x00083e6f(%rip),%rdx
000000000002b889	movq	0x00079248(%rip),%rsi
000000000002b890	movq	%rax,%rdi
000000000002b893	call	*%r12
000000000002b896	movq	0x00079243(%rip),%rsi
000000000002b89d	movq	%rax,%rdi
000000000002b8a0	call	*%r12
000000000002b8a3	movq	0x0007923e(%rip),%rsi
000000000002b8aa	movq	%rax,%rdi
000000000002b8ad	call	*%r12
000000000002b8b0	movq	%rax,%r15
000000000002b8b3	movq	0x0007cb86(%rip),%rdi
000000000002b8ba	movq	%r14,%rsi
000000000002b8bd	call	*0x0007ca1d(%rip)
000000000002b8c3	movq	0x000791a6(%rip),%rsi
000000000002b8ca	movq	%rax,%rdi
000000000002b8cd	call	*%r12
000000000002b8d0	movq	%rax,0xa0(%rbp)
000000000002b8d4	movq	0x00079215(%rip),%rsi
000000000002b8db	movq	%r15,%rdi
000000000002b8de	call	*%r12
000000000002b8e1	movq	%rax,0xffffff78(%rbp)
000000000002b8e8	movq	0x00079209(%rip),%rsi
000000000002b8ef	movq	%rax,%rdi
000000000002b8f2	call	*%r12
000000000002b8f5	movq	%rax,0x98(%rbp)
000000000002b8f9	testq	%rax,%rax
000000000002b8fc	je	0x0002bb12
000000000002b902	xorb	%r15b,%r15b
000000000002b905	movq	0x000791f4(%rip),%r12
000000000002b90c	movq	0x000791f5(%rip),%r14
000000000002b913	movq	0x000587be(%rip),%r13
000000000002b91a	movb	$0x01,%al
000000000002b91c	testb	%r15b,%r15b
000000000002b91f	je	0x0002b952
000000000002b921	movq	0xb8(%rbp),%rdi
000000000002b925	movq	%r12,%rsi
000000000002b928	leaq	0x00083de9(%rip),%rbx
000000000002b92f	movq	%rbx,%rdx
000000000002b932	call	*%r13
000000000002b935	movq	0x90(%rbp),%rdi
000000000002b939	movq	%r12,%rsi
000000000002b93c	movq	%rbx,%rdx
000000000002b93f	call	*%r13
000000000002b942	movq	0x88(%rbp),%rdi
000000000002b946	movq	%r12,%rsi
000000000002b949	movq	%rbx,%rdx
000000000002b94c	call	*%r13
000000000002b94f	movb	%r15b,%al
000000000002b952	movb	%al,0x87(%rbp)
000000000002b955	movq	0x98(%rbp),%rdi
000000000002b959	movq	0x00079180(%rip),%rbx
000000000002b960	movq	%rbx,%rsi
000000000002b963	call	*%r13
000000000002b966	movq	%rax,%rdi
000000000002b969	movq	0x00079168(%rip),%rsi
000000000002b970	leaq	0x00083dc1(%rip),%rdx
000000000002b977	call	*%r13
000000000002b97a	movq	%rax,%rdi
000000000002b97d	movq	%rbx,%rsi
000000000002b980	call	*%r13
000000000002b983	movq	%rax,%rdi
000000000002b986	movq	0x0007915b(%rip),%rsi
000000000002b98d	call	*%r13
000000000002b990	movq	%rax,%rdi
000000000002b993	movq	0x00079156(%rip),%rsi
000000000002b99a	call	*%r13
000000000002b99d	movq	%rax,0xa8(%rbp)
000000000002b9a1	movq	%rax,%rdi
000000000002b9a4	movq	0x0007914d(%rip),%rsi
000000000002b9ab	call	*%r13
000000000002b9ae	movq	%r13,%r15
000000000002b9b1	movq	%rax,%r13
000000000002b9b4	testq	%r13,%r13
000000000002b9b7	je	0x0002ba7c
000000000002b9bd	xorb	%bl,%bl
000000000002b9bf	movb	$0x01,%al
000000000002b9c1	testb	%bl,%bl
000000000002b9c3	movq	%r12,%rsi
000000000002b9c6	je	0x0002b9db
000000000002b9c8	movq	0xb8(%rbp),%rdi
000000000002b9cc	leaq	0x00083d85(%rip),%rdx
000000000002b9d3	call	*0x000586ff(%rip)
000000000002b9d9	movb	%bl,%al
000000000002b9db	movb	%al,0xb0(%rbp)
000000000002b9de	movq	0x0007ca63(%rip),%r12
000000000002b9e5	movq	%r13,%rdi
000000000002b9e8	movq	%r14,%rsi
000000000002b9eb	movq	%r15,%rbx
000000000002b9ee	call	*%rbx
000000000002b9f0	movq	%r12,%rdi
000000000002b9f3	movq	0x00079116(%rip),%rsi
000000000002b9fa	movq	%rax,%rdx
000000000002b9fd	call	*%rbx
000000000002b9ff	movl	$0x00000000,0xd4(%rbp)
000000000002ba06	movq	%rax,%rdi
000000000002ba09	movq	0x00079108(%rip),%rsi
000000000002ba10	leaq	0xd4(%rbp),%r15
000000000002ba14	movq	%r15,%rdx
000000000002ba17	call	*%rbx
000000000002ba19	movq	0xa0(%rbp),%rdi
000000000002ba1d	movq	0x000790fc(%rip),%rsi
000000000002ba24	movq	%r15,%rdx
000000000002ba27	movl	$0x00000001,%ecx
000000000002ba2c	call	*%rbx
000000000002ba2e	movq	%r13,%rdi
000000000002ba31	movq	%r14,%rsi
000000000002ba34	call	*%rbx
000000000002ba36	movq	%rax,%rdi
000000000002ba39	movq	0x000790e8(%rip),%rsi
000000000002ba40	movl	$0x00000002,%edx
000000000002ba45	call	*%rbx
000000000002ba47	movq	0xb8(%rbp),%rdi
000000000002ba4b	movq	0x000790ae(%rip),%rcx
000000000002ba52	movq	%rcx,%rsi
000000000002ba55	movq	%rcx,%r12
000000000002ba58	movq	%rax,%rdx
000000000002ba5b	call	*%rbx
000000000002ba5d	movq	0xa8(%rbp),%rdi
000000000002ba61	movq	0x00079090(%rip),%rsi
000000000002ba68	call	*%rbx
000000000002ba6a	movq	%rbx,%r15
000000000002ba6d	movq	%rax,%r13
000000000002ba70	testq	%r13,%r13
000000000002ba73	movb	0xb0(%rbp),%bl
000000000002ba76	jne	0x0002b9bf
000000000002ba7c	movq	0x98(%rbp),%rdi
000000000002ba80	movq	0x00079059(%rip),%rax
000000000002ba87	movq	%rax,%rbx
000000000002ba8a	movq	%rbx,%rsi
000000000002ba8d	call	*%r15
000000000002ba90	movq	%rax,%rdi
000000000002ba93	movq	0x0007903e(%rip),%r13
000000000002ba9a	movq	%r13,%rsi
000000000002ba9d	leaq	0x00083cd4(%rip),%rdx
000000000002baa4	call	*%r15
000000000002baa7	movq	%rax,%rdi
000000000002baaa	movq	%r14,%rsi
000000000002baad	call	*%r15
000000000002bab0	movq	0x90(%rbp),%rdi
000000000002bab4	movq	%r12,%rsi
000000000002bab7	movq	%rax,%rdx
000000000002baba	call	*%r15
000000000002babd	movq	0x98(%rbp),%rdi
000000000002bac1	movq	%rbx,%rsi
000000000002bac4	call	*%r15
000000000002bac7	movq	%rax,%rdi
000000000002baca	movq	%r13,%rsi
000000000002bacd	movq	%r15,%r13
000000000002bad0	leaq	0x00083cc1(%rip),%rdx
000000000002bad7	call	*%r13
000000000002bada	movq	%rax,%rdi
000000000002badd	movq	%r14,%rsi
000000000002bae0	call	*%r13
000000000002bae3	movq	0x88(%rbp),%rdi
000000000002bae7	movq	%r12,%rsi
000000000002baea	movq	%rax,%rdx
000000000002baed	call	*%r13
000000000002baf0	movq	0xffffff78(%rbp),%rdi
000000000002baf7	movq	0x00078ffa(%rip),%rsi
000000000002bafe	call	*%r13
000000000002bb01	movq	%rax,0x98(%rbp)
000000000002bb05	testq	%rax,%rax
000000000002bb08	movb	0x87(%rbp),%r15b
000000000002bb0c	jne	0x0002b91a
000000000002bb12	movq	0x00078fbf(%rip),%rsi
000000000002bb19	leaq	0x00083c78(%rip),%rdx
000000000002bb20	movq	0x000585b1(%rip),%rbx
000000000002bb27	movq	0xffffff68(%rbp),%rdi
000000000002bb2e	call	*%rbx
000000000002bb30	movq	0x00078fd1(%rip),%rsi
000000000002bb37	movq	%rax,%rdi
000000000002bb3a	call	*%rbx
000000000002bb3c	movq	0x00078fed(%rip),%rsi
000000000002bb43	movq	%rax,%rdi
000000000002bb46	call	*%rbx
000000000002bb48	movq	%rax,%rdi
000000000002bb4b	xorl	%esi,%esi
000000000002bb4d	xorl	%edx,%edx
000000000002bb4f	callq	0x0004e71c	; symbol stub for: _strtoull
000000000002bb54	movq	0x00082a35(%rip),%rcx
000000000002bb5b	movq	0xffffff70(%rbp),%rbx
000000000002bb62	movq	(%rbx,%rcx),%rcx
000000000002bb66	movq	%rcx,%rdi
000000000002bb69	movq	%rax,%rsi
000000000002bb6c	movq	0xa0(%rbp),%rdx
000000000002bb70	call	*0x10(%rcx)
000000000002bb73	leaq	0xc0(%rbp),%rdi
000000000002bb77	movq	%rbx,0xc0(%rbp)
000000000002bb7b	movq	0x0007d16e(%rip),%rax
000000000002bb82	movq	%rax,0xc8(%rbp)
000000000002bb86	movq	0x00078fab(%rip),%rsi
000000000002bb8d	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000002bb92	addq	$0x00000088,%rsp
000000000002bb99	popq	%rbx
000000000002bb9a	popq	%r12
000000000002bb9c	popq	%r13
000000000002bb9e	popq	%r14
000000000002bba0	popq	%r15
000000000002bba2	popq	%rbp
000000000002bba3	ret
-[PBXGDB_FetchMemoryForViewerSequence handleErrorForMICommand:]:
000000000002bba4	pushq	%rbp
000000000002bba5	movq	%rsp,%rbp
000000000002bba8	movq	0x00078f89(%rip),%rsi
000000000002bbaf	call	*0x00058523(%rip)
000000000002bbb5	movl	$0x00000001,%eax
000000000002bbba	popq	%rbp
000000000002bbbb	ret
-[DBGGDBLineBufferFilter init]:
000000000002bbbc	pushq	%rbp
000000000002bbbd	movq	%rsp,%rbp
000000000002bbc0	pushq	%rbx
000000000002bbc1	subq	$0x18,%rsp
000000000002bbc5	movq	%rdi,0xe8(%rbp)
000000000002bbc9	movq	0x0007d128(%rip),%rax
000000000002bbd0	movq	%rax,0xf0(%rbp)
000000000002bbd4	movq	0x00078e95(%rip),%rsi
000000000002bbdb	leaq	0xe8(%rbp),%rdi
000000000002bbdf	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000002bbe4	movq	%rax,%rbx
000000000002bbe7	testq	%rbx,%rbx
000000000002bbea	je	0x0002bc2d
000000000002bbec	movq	0x0007c845(%rip),%rdi
000000000002bbf3	leaq	0x0007c6e6(%rip),%rsi
000000000002bbfa	call	*0x0007c6e0(%rip)
000000000002bc00	movq	0x00078e69(%rip),%rsi
000000000002bc07	movq	%rax,%rdi
000000000002bc0a	call	*0x000584c8(%rip)
000000000002bc10	movq	0x00082991(%rip),%rdx
000000000002bc17	movq	%rax,%rdi
000000000002bc1a	movq	%rbx,%rsi
000000000002bc1d	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000002bc22	movq	0x00082987(%rip),%rax
000000000002bc29	movb	$0x00,(%rbx,%rax)
000000000002bc2d	movq	%rbx,%rax
000000000002bc30	addq	$0x18,%rsp
000000000002bc34	popq	%rbx
000000000002bc35	popq	%rbp
000000000002bc36	ret
-[DBGGDBLineBufferFilter coalescesCompleteLines]:
000000000002bc37	pushq	%rbp
000000000002bc38	movq	%rsp,%rbp
000000000002bc3b	movq	0x0008296e(%rip),%rax
000000000002bc42	movsbl	(%rdi,%rax),%eax
000000000002bc46	popq	%rbp
000000000002bc47	ret
-[DBGGDBLineBufferFilter setCoalescesCompleteLines:]:
000000000002bc48	pushq	%rbp
000000000002bc49	movq	%rsp,%rbp
000000000002bc4c	movq	0x0008295d(%rip),%rax
000000000002bc53	movb	%dl,(%rdi,%rax)
000000000002bc56	popq	%rbp
000000000002bc57	ret
-[DBGGDBLineBufferFilter streamDidEnd:]:
000000000002bc58	pushq	%rbp
000000000002bc59	movq	%rsp,%rbp
000000000002bc5c	pushq	%r14
000000000002bc5e	pushq	%rbx
000000000002bc5f	movq	%rdx,%r14
000000000002bc62	movq	%rdi,%rbx
000000000002bc65	movq	0x0008293c(%rip),%rax
000000000002bc6c	movq	(%rbx,%rax),%rdi
000000000002bc70	leaq	0x0007c679(%rip),%rsi
000000000002bc77	call	*0x0007c673(%rip)
000000000002bc7d	testq	%rax,%rax
000000000002bc80	je	0x0002bc9c
000000000002bc82	movq	0x00078eb7(%rip),%rsi
000000000002bc89	leaq	0x00083a88(%rip),%rcx
000000000002bc90	movq	%rbx,%rdi
000000000002bc93	movq	%r14,%rdx
000000000002bc96	call	*0x0005843c(%rip)
000000000002bc9c	movq	0x00078ea5(%rip),%rsi
000000000002bca3	movq	%rbx,%rdi
000000000002bca6	popq	%rbx
000000000002bca7	popq	%r14
000000000002bca9	popq	%rbp
000000000002bcaa	jmp	*0x00058428(%rip)
-[DBGGDBLineBufferFilter stream:processCharacters:]:
000000000002bcb0	pushq	%rbp
000000000002bcb1	movq	%rsp,%rbp
000000000002bcb4	pushq	%r15
000000000002bcb6	pushq	%r14
000000000002bcb8	pushq	%r13
000000000002bcba	pushq	%r12
000000000002bcbc	pushq	%rbx
000000000002bcbd	subq	$0x68,%rsp
000000000002bcc1	movq	%rcx,%rbx
000000000002bcc4	movq	%rdi,%r15
000000000002bcc7	movq	0x000828da(%rip),%rax
000000000002bcce	movq	(%r15,%rax),%rdi
000000000002bcd2	leaq	0x0007c617(%rip),%rsi
000000000002bcd9	call	*0x0007c611(%rip)
000000000002bcdf	testq	%rax,%rax
000000000002bce2	movq	%rbx,%r12
000000000002bce5	je	0x0002bd0d
000000000002bce7	movq	0x000828ba(%rip),%rax
000000000002bcee	movq	(%r15,%rax),%rdi
000000000002bcf2	movq	0x00078e07(%rip),%rsi
000000000002bcf9	movq	%rbx,%rdx
000000000002bcfc	call	*0x000583d6(%rip)
000000000002bd02	movq	0x0008289f(%rip),%rax
000000000002bd09	movq	(%r15,%rax),%r12
000000000002bd0d	movq	%rbx,0x88(%rbp)
000000000002bd11	leaq	0x0007c5d8(%rip),%rsi
000000000002bd18	movq	%r12,%rdi
000000000002bd1b	call	*0x0007c5cf(%rip)
000000000002bd21	movq	%rax,%r13
000000000002bd24	movq	0x00082885(%rip),%rax
000000000002bd2b	cmpb	$0x00,(%r15,%rax)
000000000002bd30	jne	0x0002bdc0
000000000002bd36	movq	%r15,0x90(%rbp)
000000000002bd3a	movq	0x00058397(%rip),%r15
000000000002bd41	xorl	%ebx,%ebx
000000000002bd43	jmp	0x0002bdb6
000000000002bd45	movq	%rbx,0x98(%rbp)
000000000002bd49	movq	$0x00000000,0xa0(%rbp)
000000000002bd51	movq	0x98(%rbp),%rax
000000000002bd55	movq	0xa0(%rbp),%rcx
000000000002bd59	movq	%rcx,0x08(%rsp)
000000000002bd5e	movq	%rax,(%rsp)
000000000002bd62	movq	%r12,%rdi
000000000002bd65	movq	0x00078de4(%rip),%rsi
000000000002bd6c	leaq	0xb8(%rbp),%rdx
000000000002bd70	leaq	0xb0(%rbp),%rcx
000000000002bd74	leaq	0xa8(%rbp),%r8
000000000002bd78	call	*0x0005835a(%rip)
000000000002bd7e	movq	0xb0(%rbp),%r14
000000000002bd82	cmpq	0xa8(%rbp),%r14
000000000002bd86	je	0x0002be03
000000000002bd88	movq	0xb8(%rbp),%rdx
000000000002bd8c	subq	%rdx,%r14
000000000002bd8f	movq	%r12,%rdi
000000000002bd92	movq	0x00078dbf(%rip),%rsi
000000000002bd99	movq	%r14,%rcx
000000000002bd9c	call	*%r15
000000000002bd9f	movq	0x90(%rbp),%rdi
000000000002bda3	movq	0x00078db6(%rip),%rsi
000000000002bdaa	movq	%rax,%rdx
000000000002bdad	call	*%r15
000000000002bdb0	subq	%r14,%r13
000000000002bdb3	addq	%r14,%rbx
000000000002bdb6	testq	%r13,%r13
000000000002bdb9	jne	0x0002bd45
000000000002bdbb	xorl	%r13d,%r13d
000000000002bdbe	jmp	0x0002be03
000000000002bdc0	movq	%r13,0xc0(%rbp)
000000000002bdc4	movq	$0x00000000,0xc8(%rbp)
000000000002bdcc	movq	0x00078d7d(%rip),%rsi
000000000002bdd3	movq	0xc0(%rbp),%rax
000000000002bdd7	movq	0xc8(%rbp),%rcx
000000000002bddb	movq	%rcx,0x08(%rsp)
000000000002bde0	movq	%rax,(%rsp)
000000000002bde4	leaq	0xd0(%rbp),%rdx
000000000002bde8	movq	%r12,%rdi
000000000002bdeb	xorl	%ecx,%ecx
000000000002bded	xorl	%r8d,%r8d
000000000002bdf0	call	*0x000582e2(%rip)
000000000002bdf6	movq	0xd0(%rbp),%rbx
000000000002bdfa	testq	%rbx,%rbx
000000000002bdfd	jne	0x0002be09
000000000002bdff	xorl	%ebx,%ebx
000000000002be01	jmp	0x0002be35
000000000002be03	movq	0x90(%rbp),%r15
000000000002be07	jmp	0x0002be35
000000000002be09	movq	0x00078d48(%rip),%rsi
000000000002be10	movq	0x000582c1(%rip),%r14
000000000002be17	movq	%r12,%rdi
000000000002be1a	xorl	%edx,%edx
000000000002be1c	movq	%rbx,%rcx
000000000002be1f	call	*%r14
000000000002be22	movq	0x00078d37(%rip),%rsi
000000000002be29	movq	%r15,%rdi
000000000002be2c	movq	%rax,%rdx
000000000002be2f	call	*%r14
000000000002be32	subq	%rbx,%r13
000000000002be35	movq	0x0008276c(%rip),%rax
000000000002be3c	movq	(%r15,%rax),%rdi
000000000002be40	cmpq	%rdi,%r12
000000000002be43	jne	0x0002be5e
000000000002be45	testq	%rbx,%rbx
000000000002be48	je	0x0002be96
000000000002be4a	movq	0x00078d17(%rip),%rsi
000000000002be51	xorl	%edx,%edx
000000000002be53	movq	%rbx,%rcx
000000000002be56	call	*0x0005827c(%rip)
000000000002be5c	jmp	0x0002be96
000000000002be5e	testq	%r13,%r13
000000000002be61	je	0x0002be96
000000000002be63	movq	0x00078cee(%rip),%rsi
000000000002be6a	movq	0x00058267(%rip),%r14
000000000002be71	movq	0x88(%rbp),%rdi
000000000002be75	movq	%rbx,%rdx
000000000002be78	movq	%r13,%rcx
000000000002be7b	call	*%r14
000000000002be7e	movq	0x00082723(%rip),%rcx
000000000002be85	movq	(%r15,%rcx),%rdi
000000000002be89	movq	0x00078c70(%rip),%rsi
000000000002be90	movq	%rax,%rdx
000000000002be93	call	*%r14
000000000002be96	addq	$0x68,%rsp
000000000002be9a	popq	%rbx
000000000002be9b	popq	%r12
000000000002be9d	popq	%r13
000000000002be9f	popq	%r14
000000000002bea1	popq	%r15
000000000002bea3	popq	%rbp
000000000002bea4	ret
-[DBGGDBPTYDeviceByteStream dealloc]:
000000000002bea5	pushq	%rbp
000000000002bea6	movq	%rsp,%rbp
000000000002bea9	pushq	%rbx
000000000002beaa	pushq	%rax
000000000002beab	movq	%rdi,%rbx
000000000002beae	movq	0x00082703(%rip),%rax
000000000002beb5	movl	(%rbx,%rax),%edi
000000000002beb8	cmpl	$0xff,%edi
000000000002bebb	je	0x0002bec2
000000000002bebd	callq	0x0004e698	; symbol stub for: _close
000000000002bec2	movq	0x000826f7(%rip),%rax
000000000002bec9	movl	(%rbx,%rax),%edi
000000000002becc	cmpl	$0xff,%edi
000000000002becf	je	0x0002bed6
000000000002bed1	callq	0x0004e698	; symbol stub for: _close
000000000002bed6	movq	0x000826eb(%rip),%rax
000000000002bedd	movl	(%rbx,%rax),%edi
000000000002bee0	cmpl	$0xff,%edi
000000000002bee3	je	0x0002beea
000000000002bee5	callq	0x0004e698	; symbol stub for: _close
000000000002beea	movq	0x000826df(%rip),%rax
000000000002bef1	movl	(%rbx,%rax),%edi
000000000002bef4	addq	$0x08,%rsp
000000000002bef8	cmpl	$0xff,%edi
000000000002befb	jne	0x0002bf00
000000000002befd	popq	%rbx
000000000002befe	popq	%rbp
000000000002beff	ret
000000000002bf00	popq	%rbx
000000000002bf01	popq	%rbp
000000000002bf02	jmp	0x0004e698	; symbol stub for: _close
-[DBGGDBPTYDeviceByteStream _setupPTYWatcherThread]:
000000000002bf07	pushq	%rbp
000000000002bf08	movq	%rsp,%rbp
000000000002bf0b	pushq	%rbx
000000000002bf0c	subq	$0x18,%rsp
000000000002bf10	movq	%rdi,%rbx
000000000002bf13	movq	0x00058186(%rip),%rax
000000000002bf1a	movq	(%rax),%rax
000000000002bf1d	movq	%rax,0xf0(%rbp)
000000000002bf21	leaq	0xe8(%rbp),%rdi
000000000002bf25	callq	0x0004e6d4	; symbol stub for: _pipe
000000000002bf2a	testl	%eax,%eax
000000000002bf2c	jns	0x0002bf3c
000000000002bf2e	leaq	0x00030d11(%rip),%rdi
000000000002bf35	callq	0x0004e6ce	; symbol stub for: _perror
000000000002bf3a	jmp	0x0002bf82
000000000002bf3c	movq	0x00082685(%rip),%rax
000000000002bf43	movl	0xe8(%rbp),%ecx
000000000002bf46	movl	%ecx,(%rbx,%rax)
000000000002bf49	movq	0x00082680(%rip),%rax
000000000002bf50	movl	0xec(%rbp),%ecx
000000000002bf53	movl	%ecx,(%rbx,%rax)
000000000002bf56	movq	0x000826a3(%rip),%rax
000000000002bf5d	movb	$0x01,(%rbx,%rax)
000000000002bf61	movq	0x00078c40(%rip),%rsi
000000000002bf68	movq	0x00078c31(%rip),%rdx
000000000002bf6f	movq	0x0007c4f2(%rip),%rdi
000000000002bf76	movq	%rbx,%rcx
000000000002bf79	xorl	%r8d,%r8d
000000000002bf7c	call	*0x00058156(%rip)
000000000002bf82	movq	0x00058117(%rip),%rax
000000000002bf89	movq	(%rax),%rax
000000000002bf8c	cmpq	0xf0(%rbp),%rax
000000000002bf90	jne	0x0002bf99
000000000002bf92	addq	$0x18,%rsp
000000000002bf96	popq	%rbx
000000000002bf97	popq	%rbp
000000000002bf98	ret
000000000002bf99	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
-[DBGGDBPTYDeviceByteStream _watchPTY]:
000000000002bf9e	pushq	%rbp
000000000002bf9f	movq	%rsp,%rbp
000000000002bfa2	pushq	%r15
000000000002bfa4	pushq	%r14
000000000002bfa6	pushq	%r13
000000000002bfa8	pushq	%r12
000000000002bfaa	pushq	%rbx
000000000002bfab	subq	$0x000020b8,%rsp
000000000002bfb2	movq	%rdi,%r14
000000000002bfb5	movq	0x000580e4(%rip),%rax
000000000002bfbc	movq	(%rax),%rax
000000000002bfbf	movq	%rax,0xd0(%rbp)
000000000002bfc3	movq	0x000825ee(%rip),%rbx
000000000002bfca	movl	(%r14,%rbx),%edx
000000000002bfce	movq	0x000825f3(%rip),%r13
000000000002bfd5	movl	(%r14,%r13),%eax
000000000002bfd9	cmpl	%edx,%eax
000000000002bfdb	movl	%edx,%ecx
000000000002bfdd	cmovgel	%eax,%ecx
000000000002bfe0	movq	0x00082621(%rip),%rsi
000000000002bfe7	incl	%ecx
000000000002bfe9	movl	%ecx,0xffffdf3c(%rbp)
000000000002bfef	leaq	(%r14,%rsi),%rcx
000000000002bff3	movq	%rcx,0xffffdf40(%rbp)
000000000002bffa	jmp	0x0002c1bf
000000000002bfff	testl	%ecx,%ecx
000000000002c001	movq	0x000825b0(%rip),%rbx
000000000002c008	je	0x0002c19a
000000000002c00e	cmpl	$0x01,%ecx
000000000002c011	jne	0x0002c1bb
000000000002c017	jmp	0x0002c26a
000000000002c01c	movslq	(%r14,%rbx),%rdi
000000000002c020	movq	%rdi,%rax
000000000002c023	shrq	$0x05,%rax
000000000002c027	movl	0xffffdf50(%rbp,%rax,4),%eax
000000000002c02e	movl	$0x00000002,%ecx
000000000002c033	btl	%edi,%eax
000000000002c036	jae	0x0002c17a
000000000002c03c	leaq	0xffffdfd0(%rbp),%rsi
000000000002c043	movl	$0x00002000,%edx
000000000002c048	callq	0x0004e6da	; symbol stub for: _read
000000000002c04d	movq	%rax,%r15
000000000002c050	movl	$0x00000001,%ecx
000000000002c055	testq	%r15,%r15
000000000002c058	jle	0x0002c17a
000000000002c05e	movq	0x00082583(%rip),%rax
000000000002c065	movq	(%r14,%rax),%rdi
000000000002c069	movq	0x00078b40(%rip),%rsi
000000000002c070	movl	$0x00000001,%edx
000000000002c075	call	*0x0005805d(%rip)
000000000002c07b	movq	0xffffdf40(%rbp),%rax
000000000002c082	movq	(%rax),%rdi
000000000002c085	testq	%rdi,%rdi
000000000002c088	je	0x0002c0da
000000000002c08a	leaq	0x0007c25f(%rip),%rsi
000000000002c091	call	*0x0007c259(%rip)
000000000002c097	addq	%r15,%rax
000000000002c09a	cmpq	$0x00001001,%eax
000000000002c0a0	jb	0x0002c115
000000000002c0a2	movq	0xffffdf40(%rbp),%rax
000000000002c0a9	movq	(%rax),%rdx
000000000002c0ac	testq	%rdx,%rdx
000000000002c0af	je	0x0002c0da
000000000002c0b1	movq	0x00082538(%rip),%rax
000000000002c0b8	movq	(%r14,%rax),%rdi
000000000002c0bc	leaq	0x0007c23d(%rip),%rsi
000000000002c0c3	call	*0x0007c237(%rip)
000000000002c0c9	xorl	%edi,%edi
000000000002c0cb	movq	%r14,%rsi
000000000002c0ce	movq	0x00082533(%rip),%rdx
000000000002c0d5	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000002c0da	movq	0x0007c35f(%rip),%rdi
000000000002c0e1	leaq	0x0007c1f8(%rip),%rsi
000000000002c0e8	call	*0x0007c1f2(%rip)
000000000002c0ee	movq	%rax,%rdi
000000000002c0f1	movq	0x00078ac0(%rip),%rsi
000000000002c0f8	movl	$0x00001000,%edx
000000000002c0fd	call	*0x00057fd5(%rip)
000000000002c103	movq	%rax,%rdi
000000000002c106	movq	%r14,%rsi
000000000002c109	movq	0x000824f8(%rip),%rdx
000000000002c110	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000002c115	movq	0xffffdf40(%rbp),%rax
000000000002c11c	movq	(%rax),%rdi
000000000002c11f	movq	0x000789fa(%rip),%rsi
000000000002c126	leaq	0xffffdfd0(%rbp),%rdx
000000000002c12d	movq	%r15,%rcx
000000000002c130	movq	0x00057fa1(%rip),%rbx
000000000002c137	call	*%rbx
000000000002c139	movq	0x000824d0(%rip),%rax
000000000002c140	movq	(%r14,%rax),%r12
000000000002c144	addq	%r12,%r15
000000000002c147	movq	%r15,(%r14,%rax)
000000000002c14b	movq	0x00082496(%rip),%rax
000000000002c152	movq	(%r14,%rax),%rdi
000000000002c156	cmpq	$0x00008000,%r15
000000000002c15d	seta	%al
000000000002c160	movzbl	%al,%edx
000000000002c163	incq	%rdx
000000000002c166	movq	0x00078a53(%rip),%rsi
000000000002c16d	call	*%rbx
000000000002c16f	testq	%r12,%r12
000000000002c172	setne	%al
000000000002c175	movzbl	%al,%ecx
000000000002c178	addl	%ecx,%ecx
000000000002c17a	movslq	(%r14,%r13),%rax
000000000002c17e	movq	%rax,%rdx
000000000002c181	shrq	$0x05,%rdx
000000000002c185	movl	0xffffdf50(%rbp,%rdx,4),%edx
000000000002c18c	btl	%eax,%edx
000000000002c18f	jae	0x0002bfff
000000000002c195	jmp	0x0002c257
000000000002c19a	movq	%r14,%rdi
000000000002c19d	movq	0x00078a2c(%rip),%rsi
000000000002c1a4	movq	0x00078a2d(%rip),%rdx
000000000002c1ab	movq	%r14,%rcx
000000000002c1ae	xorl	%r8d,%r8d
000000000002c1b1	call	*0x00057f21(%rip)
000000000002c1b7	movl	(%r14,%r13),%eax
000000000002c1bb	movl	(%r14,%rbx),%edx
000000000002c1bf	xorps	%xmm0,%xmm0
000000000002c1c2	movaps	%xmm0,0xffffdfc0(%rbp)
000000000002c1c9	movaps	%xmm0,0xffffdfb0(%rbp)
000000000002c1d0	movaps	%xmm0,0xffffdfa0(%rbp)
000000000002c1d7	movaps	%xmm0,0xffffdf90(%rbp)
000000000002c1de	movaps	%xmm0,0xffffdf80(%rbp)
000000000002c1e5	movaps	%xmm0,0xffffdf70(%rbp)
000000000002c1ec	movaps	%xmm0,0xffffdf60(%rbp)
000000000002c1f3	movaps	%xmm0,0xffffdf50(%rbp)
000000000002c1fa	movb	%dl,%cl
000000000002c1fc	movl	$0x00000001,%esi
000000000002c201	shll	%cl,%esi
000000000002c203	movslq	%edx,%rcx
000000000002c206	shrq	$0x05,%rcx
000000000002c20a	orl	%esi,0xffffdf50(%rbp,%rcx,4)
000000000002c211	movb	%al,%cl
000000000002c213	movl	$0x00000001,%edx
000000000002c218	shll	%cl,%edx
000000000002c21a	movslq	%eax,%rax
000000000002c21d	shrq	$0x05,%rax
000000000002c221	orl	%edx,0xffffdf50(%rbp,%rax,4)
000000000002c228	movl	0xffffdf3c(%rbp),%edi
000000000002c22e	leaq	0xffffdf50(%rbp),%rsi
000000000002c235	xorl	%edx,%edx
000000000002c237	xorl	%ecx,%ecx
000000000002c239	xorl	%r8d,%r8d
000000000002c23c	callq	0x0004e6e6	; symbol stub for: _select$1050
000000000002c241	testl	%eax,%eax
000000000002c243	jns	0x0002c01c
000000000002c249	leaq	0x00030a23(%rip),%rdi
000000000002c250	callq	0x0004e6ce	; symbol stub for: _perror
000000000002c255	jmp	0x0002c26a
000000000002c257	leaq	0xffffdf4f(%rbp),%rsi
000000000002c25e	movl	%eax,%edi
000000000002c260	movl	$0x00000001,%edx
000000000002c265	callq	0x0004e6da	; symbol stub for: _read
000000000002c26a	movq	0x0007895f(%rip),%rsi
000000000002c271	movq	0x00078950(%rip),%rdx
000000000002c278	movq	0x00057e59(%rip),%rbx
000000000002c27f	movq	%r14,%rdi
000000000002c282	movq	%r14,%rcx
000000000002c285	xorl	%r8d,%r8d
000000000002c288	call	*%rbx
000000000002c28a	movq	0x0008236f(%rip),%rax
000000000002c291	movb	$0x00,(%r14,%rax)
000000000002c296	movq	0x0008234b(%rip),%rax
000000000002c29d	movq	(%r14,%rax),%rdi
000000000002c2a1	movq	0x00078938(%rip),%rsi
000000000002c2a8	call	*%rbx
000000000002c2aa	movq	0x00082337(%rip),%rax
000000000002c2b1	movq	(%r14,%rax),%rdi
000000000002c2b5	movq	0x00078904(%rip),%rsi
000000000002c2bc	movl	$0x00000002,%edx
000000000002c2c1	call	*%rbx
000000000002c2c3	movq	0x00057dd6(%rip),%rax
000000000002c2ca	movq	(%rax),%rax
000000000002c2cd	cmpq	0xd0(%rbp),%rax
000000000002c2d1	jne	0x0002c2e5
000000000002c2d3	addq	$0x000020b8,%rsp
000000000002c2da	popq	%rbx
000000000002c2db	popq	%r12
000000000002c2dd	popq	%r13
000000000002c2df	popq	%r14
000000000002c2e1	popq	%r15
000000000002c2e3	popq	%rbp
000000000002c2e4	ret
000000000002c2e5	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
-[DBGGDBPTYDeviceByteStream _processPtyData]:
000000000002c2ea	pushq	%rbp
000000000002c2eb	movq	%rsp,%rbp
000000000002c2ee	pushq	%r15
000000000002c2f0	pushq	%r14
000000000002c2f2	pushq	%rbx
000000000002c2f3	pushq	%rax
000000000002c2f4	movq	%rdi,%rbx
000000000002c2f7	movq	0x000822ea(%rip),%rax
000000000002c2fe	movq	(%rbx,%rax),%rdi
000000000002c302	movq	0x000788d7(%rip),%rsi
000000000002c309	call	*0x00057dc9(%rip)
000000000002c30f	movq	0x000822da(%rip),%rax
000000000002c316	movq	(%rbx,%rax),%rdi
000000000002c31a	leaq	0x0007bfef(%rip),%rsi
000000000002c321	call	*0x0007bfe9(%rip)
000000000002c327	testq	%rax,%rax
000000000002c32a	je	0x0002c365
000000000002c32c	movq	0x000822bd(%rip),%rax
000000000002c333	movq	(%rbx,%rax),%rdi
000000000002c337	leaq	0x0007bfe2(%rip),%rsi
000000000002c33e	xorl	%edx,%edx
000000000002c340	call	*0x0007bfda(%rip)
000000000002c346	movq	%rax,%r14
000000000002c349	movq	0x000822a0(%rip),%rax
000000000002c350	movq	(%rbx,%rax),%rdi
000000000002c354	movq	0x0007888d(%rip),%rsi
000000000002c35b	xorl	%edx,%edx
000000000002c35d	call	*0x00057d75(%rip)
000000000002c363	jmp	0x0002c38b
000000000002c365	movq	0x0008229c(%rip),%rdx
000000000002c36c	movq	(%rbx,%rdx),%r15
000000000002c370	xorl	%r14d,%r14d
000000000002c373	testq	%r15,%r15
000000000002c376	je	0x0002c38b
000000000002c378	addq	%rbx,%rdx
000000000002c37b	subq	%rbx,%rdx
000000000002c37e	xorl	%edi,%edi
000000000002c380	movq	%rbx,%rsi
000000000002c383	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000002c388	movq	%r15,%r14
000000000002c38b	leaq	0x0007bf5e(%rip),%rsi
000000000002c392	movq	%r14,%rdi
000000000002c395	call	*0x0007bf55(%rip)
000000000002c39b	movq	0x0008226e(%rip),%rcx
000000000002c3a2	subq	%rax,(%rbx,%rcx)
000000000002c3a6	movl	$0x00000001,%edx
000000000002c3ab	cmpq	$0x00,(%rbx,%rcx)
000000000002c3b0	je	0x0002c3e6
000000000002c3b2	movq	0x00078837(%rip),%rsi
000000000002c3b9	movq	0x00078818(%rip),%rdx
000000000002c3c0	movq	%rbx,%rdi
000000000002c3c3	xorl	%ecx,%ecx
000000000002c3c5	xorps	%xmm0,%xmm0
000000000002c3c8	call	*0x00057d0a(%rip)
000000000002c3ce	movq	0x0008223b(%rip),%rax
000000000002c3d5	cmpq	$0x00008000,(%rbx,%rax)
000000000002c3dd	seta	%al
000000000002c3e0	movzbl	%al,%edx
000000000002c3e3	incq	%rdx
000000000002c3e6	movq	0x000821fb(%rip),%rax
000000000002c3ed	movq	(%rbx,%rax),%rdi
000000000002c3f1	movq	0x000787c8(%rip),%rsi
000000000002c3f8	call	*0x00057cda(%rip)
000000000002c3fe	movq	0x000787f3(%rip),%rsi
000000000002c405	movq	%rbx,%rdi
000000000002c408	movq	%r14,%rdx
000000000002c40b	movq	0x00057cc6(%rip),%rax
000000000002c412	addq	$0x08,%rsp
000000000002c416	popq	%rbx
000000000002c417	popq	%r14
000000000002c419	popq	%r15
000000000002c41b	popq	%rbp
000000000002c41c	jmp	*%rax
-[DBGGDBPTYDeviceByteStream _ptyWatcherThreadDidExit]:
000000000002c41e	pushq	%rbp
000000000002c41f	movq	%rsp,%rbp
000000000002c422	movq	0x000821cf(%rip),%rax
000000000002c429	movb	$0x01,(%rdi,%rax)
000000000002c42d	movq	0x000787a4(%rip),%rsi
000000000002c434	popq	%rbp
000000000002c435	jmp	*0x00057c9d(%rip)
-[DBGGDBPTYDeviceByteStream _stopPTYWatcherThread]:
000000000002c43b	pushq	%rbp
000000000002c43c	movq	%rsp,%rbp
000000000002c43f	pushq	%r15
000000000002c441	pushq	%r14
000000000002c443	pushq	%r13
000000000002c445	pushq	%r12
000000000002c447	pushq	%rbx
000000000002c448	pushq	%rax
000000000002c449	movq	%rdi,%rbx
000000000002c44c	movq	0x00082195(%rip),%rax
000000000002c453	movq	(%rbx,%rax),%rdi
000000000002c457	movq	0x00078782(%rip),%rsi
000000000002c45e	call	*0x00057c74(%rip)
000000000002c464	movq	0x00082195(%rip),%rax
000000000002c46b	cmpb	$0x00,(%rbx,%rax)
000000000002c46f	je	0x0002c4d8
000000000002c471	movb	$0x58,0xd7(%rbp)
000000000002c475	movq	0x00082154(%rip),%rax
000000000002c47c	movl	(%rbx,%rax),%edi
000000000002c47f	leaq	0xd7(%rbp),%rsi
000000000002c483	movl	$0x00000001,%edx
000000000002c488	callq	0x0004e73a	; symbol stub for: _write
000000000002c48d	testl	%eax,%eax
000000000002c48f	js	0x0002c4ff
000000000002c491	movq	0x00078718(%rip),%r14
000000000002c498	movq	0x00078721(%rip),%r15
000000000002c49f	movq	0x00082142(%rip),%r13
000000000002c4a6	movq	0x00057c2b(%rip),%r12
000000000002c4ad	movq	(%rbx,%r13),%rdi
000000000002c4b1	movq	%r15,%rsi
000000000002c4b4	movl	$0x00000001,%edx
000000000002c4b9	call	*%r12
000000000002c4bc	movq	(%rbx,%r13),%rdi
000000000002c4c0	movq	%r14,%rsi
000000000002c4c3	movl	$0x00000002,%edx
000000000002c4c8	call	*%r12
000000000002c4cb	movq	0x0008212e(%rip),%rax
000000000002c4d2	cmpb	$0x00,(%rbx,%rax)
000000000002c4d6	jne	0x0002c4ad
000000000002c4d8	movq	0x00082109(%rip),%rax
000000000002c4df	movq	(%rbx,%rax),%rdi
000000000002c4e3	movq	0x00078716(%rip),%rsi
000000000002c4ea	call	*0x00057be8(%rip)
000000000002c4f0	addq	$0x08,%rsp
000000000002c4f4	popq	%rbx
000000000002c4f5	popq	%r12
000000000002c4f7	popq	%r13
000000000002c4f9	popq	%r14
000000000002c4fb	popq	%r15
000000000002c4fd	popq	%rbp
000000000002c4fe	ret
000000000002c4ff	leaq	0x00030792(%rip),%rdi
000000000002c506	callq	0x0004e6ce	; symbol stub for: _perror
000000000002c50b	jmp	0x0002c4d8
-[DBGGDBPTYDeviceByteStream sendStreamDidEnd]:
000000000002c50d	pushq	%rbp
000000000002c50e	movq	%rsp,%rbp
000000000002c511	pushq	%r15
000000000002c513	pushq	%r14
000000000002c515	pushq	%r13
000000000002c517	pushq	%r12
000000000002c519	pushq	%rbx
000000000002c51a	subq	$0x28,%rsp
000000000002c51e	movq	%rdi,%rbx
000000000002c521	leaq	0xd0(%rbp),%rdi
000000000002c525	callq	0x0004e72e	; symbol stub for: _time
000000000002c52a	movq	0xd0(%rbp),%rax
000000000002c52e	movq	%rax,0xc8(%rbp)
000000000002c532	movq	0x000820cf(%rip),%r13
000000000002c539	movq	0x000820b0(%rip),%r14
000000000002c540	leaq	0x0007bdc9(%rip),%r15
000000000002c547	leaq	0xc8(%rbp),%r12
000000000002c54b	jmp	0x0002c565
000000000002c54d	movq	%rbx,%rdi
000000000002c550	movq	0x00078681(%rip),%rsi
000000000002c557	call	*0x00057b7b(%rip)
000000000002c55d	movq	%r12,%rdi
000000000002c560	callq	0x0004e72e	; symbol stub for: _time
000000000002c565	movq	(%rbx,%r14),%rdi
000000000002c569	movq	%r15,%rsi
000000000002c56c	call	*0x0007bd9e(%rip)
000000000002c572	testq	%rax,%rax
000000000002c575	jne	0x0002c57e
000000000002c577	cmpq	$0x00,(%rbx,%r13)
000000000002c57c	je	0x0002c58c
000000000002c57e	movq	0xc8(%rbp),%rax
000000000002c582	subq	0xd0(%rbp),%rax
000000000002c586	cmpq	$0x01,%rax
000000000002c58a	jle	0x0002c54d
000000000002c58c	movq	%rbx,0xb8(%rbp)
000000000002c590	movq	0x0007c769(%rip),%rax
000000000002c597	movq	%rax,0xc0(%rbp)
000000000002c59b	movq	0x000785a6(%rip),%rsi
000000000002c5a2	leaq	0xb8(%rbp),%rdi
000000000002c5a6	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000002c5ab	addq	$0x28,%rsp
000000000002c5af	popq	%rbx
000000000002c5b0	popq	%r12
000000000002c5b2	popq	%r13
000000000002c5b4	popq	%r14
000000000002c5b6	popq	%r15
000000000002c5b8	popq	%rbp
000000000002c5b9	ret
-[DBGGDBPTYDeviceByteStream streamDidEnd:]:
000000000002c5ba	pushq	%rbp
000000000002c5bb	movq	%rsp,%rbp
000000000002c5be	popq	%rbp
000000000002c5bf	ret
-[DBGGDBPTYDeviceByteStream stream:processBytes:]:
000000000002c5c0	pushq	%rbp
000000000002c5c1	movq	%rsp,%rbp
000000000002c5c4	pushq	%r15
000000000002c5c6	pushq	%r14
000000000002c5c8	pushq	%rbx
000000000002c5c9	pushq	%rax
000000000002c5ca	movq	%rcx,%rbx
000000000002c5cd	movq	%rdi,%r14
000000000002c5d0	leaq	0x0007bd19(%rip),%rsi
000000000002c5d7	movq	%rbx,%rdi
000000000002c5da	call	*0x0007bd10(%rip)
000000000002c5e0	movq	%rax,%r15
000000000002c5e3	movq	0x00078626(%rip),%rsi
000000000002c5ea	movq	%rbx,%rdi
000000000002c5ed	call	*0x00057ae5(%rip)
000000000002c5f3	movq	0x00081fbe(%rip),%rcx
000000000002c5fa	movl	(%r14,%rcx),%edi
000000000002c5fe	movq	%rax,%rsi
000000000002c601	movq	%r15,%rdx
000000000002c604	callq	0x0004e73a	; symbol stub for: _write
000000000002c609	cmpq	%r15,%rax
000000000002c60c	je	0x0002c631
000000000002c60e	testq	%rax,%rax
000000000002c611	js	0x0002c63c
000000000002c613	leaq	0x000831de(%rip),%rdi
000000000002c61a	movq	%r15,%rsi
000000000002c61d	movq	%rax,%rdx
000000000002c620	xorb	%al,%al
000000000002c622	addq	$0x08,%rsp
000000000002c626	popq	%rbx
000000000002c627	popq	%r14
000000000002c629	popq	%r15
000000000002c62b	popq	%rbp
000000000002c62c	jmp	0x0004e5c0	; symbol stub for: _NSLog
000000000002c631	addq	$0x08,%rsp
000000000002c635	popq	%rbx
000000000002c636	popq	%r14
000000000002c638	popq	%r15
000000000002c63a	popq	%rbp
000000000002c63b	ret
000000000002c63c	leaq	0x0003068b(%rip),%rdi
000000000002c643	addq	$0x08,%rsp
000000000002c647	popq	%rbx
000000000002c648	popq	%r14
000000000002c64a	popq	%r15
000000000002c64c	popq	%rbp
000000000002c64d	jmp	0x0004e6ce	; symbol stub for: _perror
-[DBGGDBPTYDeviceByteStream fileHandleForSlaveDevice]:
000000000002c652	pushq	%rbp
000000000002c653	movq	%rsp,%rbp
000000000002c656	pushq	%rbx
000000000002c657	pushq	%rax
000000000002c658	movq	%rdi,%rbx
000000000002c65b	xorl	%eax,%eax
000000000002c65d	movq	0x00081f5c(%rip),%rcx
000000000002c664	cmpl	$0xff,(%rbx,%rcx)
000000000002c668	je	0x0002c6c7
000000000002c66a	movq	0x00081fa7(%rip),%rax
000000000002c671	movq	(%rbx,%rax),%rax
000000000002c675	testq	%rax,%rax
000000000002c678	jne	0x0002c6c7
000000000002c67a	movq	0x0007bdef(%rip),%rdi
000000000002c681	leaq	0x0007bc58(%rip),%rsi
000000000002c688	call	*0x0007bc52(%rip)
000000000002c68e	movq	0x00081f2b(%rip),%rcx
000000000002c695	movl	(%rbx,%rcx),%edx
000000000002c698	movq	0x00078579(%rip),%rsi
000000000002c69f	movq	%rax,%rdi
000000000002c6a2	xorl	%ecx,%ecx
000000000002c6a4	call	*0x00057a2e(%rip)
000000000002c6aa	movq	0x00081f67(%rip),%rdx
000000000002c6b1	movq	%rax,%rdi
000000000002c6b4	movq	%rbx,%rsi
000000000002c6b7	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000002c6bc	movq	0x00081f55(%rip),%rax
000000000002c6c3	movq	(%rbx,%rax),%rax
000000000002c6c7	addq	$0x08,%rsp
000000000002c6cb	popq	%rbx
000000000002c6cc	popq	%rbp
000000000002c6cd	ret
-[DBGGDBPTYDeviceByteStream masterDeviceFD]:
000000000002c6ce	pushq	%rbp
000000000002c6cf	movq	%rsp,%rbp
000000000002c6d2	movq	0x00081edf(%rip),%rax
000000000002c6d9	movl	(%rdi,%rax),%eax
000000000002c6dc	popq	%rbp
000000000002c6dd	ret
+[DBGGDBStream stream]:
000000000002c6de	pushq	%rbp
000000000002c6df	movq	%rsp,%rbp
000000000002c6e2	leaq	0x0007bc47(%rip),%rsi
000000000002c6e9	call	*0x0007bc41(%rip)
000000000002c6ef	leaq	0x0007bbea(%rip),%rsi
000000000002c6f6	movq	%rax,%rdi
000000000002c6f9	call	*0x0007bbe1(%rip)
000000000002c6ff	movq	0x0007836a(%rip),%rsi
000000000002c706	movq	%rax,%rdi
000000000002c709	popq	%rbp
000000000002c70a	jmp	*0x000579c8(%rip)
-[DBGGDBStream dealloc]:
000000000002c710	pushq	%rbp
000000000002c711	movq	%rsp,%rbp
000000000002c714	pushq	%rbx
000000000002c715	pushq	%rax
000000000002c716	movq	%rdi,%rbx
000000000002c719	movq	0x00081f20(%rip),%rax
000000000002c720	movq	(%rbx,%rax),%rdi
000000000002c724	testq	%rdi,%rdi
000000000002c727	je	0x0002c738
000000000002c729	movq	0x000784f0(%rip),%rsi
000000000002c730	xorl	%edx,%edx
000000000002c732	call	*0x000579a0(%rip)
000000000002c738	movq	0x00081f09(%rip),%rax
000000000002c73f	movq	(%rbx,%rax),%rdi
000000000002c743	testq	%rdi,%rdi
000000000002c746	je	0x0002c78b
000000000002c748	movq	0x00081ee9(%rip),%rax
000000000002c74f	movl	(%rbx,%rax),%eax
000000000002c752	testb	$0x02,%al
000000000002c754	je	0x0002c76f
000000000002c756	movq	0x000784cb(%rip),%rsi
000000000002c75d	xorl	%edx,%edx
000000000002c75f	call	*0x00057973(%rip)
000000000002c765	movq	0x00081ecc(%rip),%rax
000000000002c76c	movl	(%rbx,%rax),%eax
000000000002c76f	testb	$0x01,%al
000000000002c771	je	0x0002c78b
000000000002c773	movq	0x00081ece(%rip),%rax
000000000002c77a	movq	(%rbx,%rax),%rdi
000000000002c77e	movq	0x000784ab(%rip),%rsi
000000000002c785	call	*0x0005794d(%rip)
000000000002c78b	movq	0x00081eb6(%rip),%rdx
000000000002c792	xorl	%edi,%edi
000000000002c794	movq	%rbx,%rsi
000000000002c797	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000002c79c	movq	0x00081e9d(%rip),%rdx
000000000002c7a3	xorl	%edi,%edi
000000000002c7a5	movq	%rbx,%rsi
000000000002c7a8	addq	$0x08,%rsp
000000000002c7ac	popq	%rbx
000000000002c7ad	popq	%rbp
000000000002c7ae	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[DBGGDBStream name]:
000000000002c7b3	pushq	%rbp
000000000002c7b4	movq	%rsp,%rbp
000000000002c7b7	movq	0x00081e92(%rip),%rax
000000000002c7be	movq	(%rdi,%rax),%rax
000000000002c7c2	popq	%rbp
000000000002c7c3	ret
-[DBGGDBStream setStreamConsumer:]:
000000000002c7c4	pushq	%rbp
000000000002c7c5	movq	%rsp,%rbp
000000000002c7c8	pushq	%r14
000000000002c7ca	pushq	%rbx
000000000002c7cb	movq	%rdx,%r14
000000000002c7ce	movq	%rdi,%rbx
000000000002c7d1	movq	0x00081e70(%rip),%rax
000000000002c7d8	movq	(%rbx,%rax),%rdi
000000000002c7dc	cmpq	%r14,%rdi
000000000002c7df	je	0x0002c913
000000000002c7e5	testq	%rdi,%rdi
000000000002c7e8	je	0x0002c82d
000000000002c7ea	movq	0x00081e47(%rip),%rax
000000000002c7f1	movl	(%rbx,%rax),%eax
000000000002c7f4	testb	$0x02,%al
000000000002c7f6	je	0x0002c811
000000000002c7f8	movq	0x00078429(%rip),%rsi
000000000002c7ff	xorl	%edx,%edx
000000000002c801	call	*0x000578d1(%rip)
000000000002c807	movq	0x00081e2a(%rip),%rax
000000000002c80e	movl	(%rbx,%rax),%eax
000000000002c811	testb	$0x01,%al
000000000002c813	je	0x0002c82d
000000000002c815	movq	0x00081e2c(%rip),%rax
000000000002c81c	movq	(%rbx,%rax),%rdi
000000000002c820	movq	0x00078409(%rip),%rsi
000000000002c827	call	*0x000578ab(%rip)
000000000002c82d	testq	%r14,%r14
000000000002c830	je	0x0002c8fe
000000000002c836	movq	0x000783fb(%rip),%rsi
000000000002c83d	movq	0x0007bbac(%rip),%rdx
000000000002c844	movq	%r14,%rdi
000000000002c847	call	*0x0005788b(%rip)
000000000002c84d	movzbl	%al,%eax
000000000002c850	andl	$0x01,%eax
000000000002c853	movq	0x00081dde(%rip),%rcx
000000000002c85a	movl	(%rbx,%rcx),%edx
000000000002c85d	andl	$0xfe,%edx
000000000002c860	orl	%eax,%edx
000000000002c862	movl	%edx,(%rbx,%rcx)
000000000002c865	testb	$0x01,(%rbx,%rcx)
000000000002c869	je	0x0002c87b
000000000002c86b	movq	0x000783ce(%rip),%rsi
000000000002c872	movq	%r14,%rdi
000000000002c875	call	*0x0005785d(%rip)
000000000002c87b	movq	0x00081dc6(%rip),%rdx
000000000002c882	movq	%r14,%rdi
000000000002c885	movq	%rbx,%rsi
000000000002c888	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000002c88d	movq	0x00081db4(%rip),%rax
000000000002c894	movq	(%rbx,%rax),%r14
000000000002c898	movq	0x0007bbd9(%rip),%rdi
000000000002c89f	leaq	0x0007ba8a(%rip),%rsi
000000000002c8a6	call	*0x0007ba84(%rip)
000000000002c8ac	leaq	0x0007ba8d(%rip),%rsi
000000000002c8b3	movq	%r14,%rdi
000000000002c8b6	movq	%rax,%rdx
000000000002c8b9	call	*0x0007ba81(%rip)
000000000002c8bf	addb	%al,%al
000000000002c8c1	movzbl	%al,%eax
000000000002c8c4	andl	$0x02,%eax
000000000002c8c7	movq	0x00081d6a(%rip),%rcx
000000000002c8ce	movl	(%rbx,%rcx),%edx
000000000002c8d1	andl	$0xfd,%edx
000000000002c8d4	orl	%eax,%edx
000000000002c8d6	movl	%edx,(%rbx,%rcx)
000000000002c8d9	testb	$0x02,(%rbx,%rcx)
000000000002c8dd	je	0x0002c913
000000000002c8df	movq	0x00081d62(%rip),%rax
000000000002c8e6	movq	(%rbx,%rax),%rdi
000000000002c8ea	movq	0x00078337(%rip),%rsi
000000000002c8f1	movq	%rbx,%rdx
000000000002c8f4	popq	%rbx
000000000002c8f5	popq	%r14
000000000002c8f7	popq	%rbp
000000000002c8f8	jmp	*0x000577da(%rip)
000000000002c8fe	movq	0x00081d43(%rip),%rdx
000000000002c905	xorl	%edi,%edi
000000000002c907	movq	%rbx,%rsi
000000000002c90a	popq	%rbx
000000000002c90b	popq	%r14
000000000002c90d	popq	%rbp
000000000002c90e	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000002c913	popq	%rbx
000000000002c914	popq	%r14
000000000002c916	popq	%rbp
000000000002c917	ret
-[DBGGDBStream streamConsumer]:
000000000002c918	pushq	%rbp
000000000002c919	movq	%rsp,%rbp
000000000002c91c	movq	0x00081d25(%rip),%rax
000000000002c923	movq	(%rdi,%rax),%rax
000000000002c927	popq	%rbp
000000000002c928	ret
-[DBGGDBStream setUpstreamStream:]:
000000000002c929	pushq	%rbp
000000000002c92a	movq	%rsp,%rbp
000000000002c92d	movq	%rdx,%rax
000000000002c930	movq	%rdi,%rcx
000000000002c933	movq	0x00081d06(%rip),%rdx
000000000002c93a	movq	%rax,%rdi
000000000002c93d	movq	%rcx,%rsi
000000000002c940	popq	%rbp
000000000002c941	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[DBGGDBStream upstreamStream]:
000000000002c946	pushq	%rbp
000000000002c947	movq	%rsp,%rbp
000000000002c94a	movq	0x00081cef(%rip),%rax
000000000002c951	movq	(%rdi,%rax),%rax
000000000002c955	popq	%rbp
000000000002c956	ret
-[DBGGDBStream sourceStream]:
000000000002c957	pushq	%rbp
000000000002c958	movq	%rsp,%rbp
000000000002c95b	pushq	%r14
000000000002c95d	pushq	%rbx
000000000002c95e	movq	%rdi,%rax
000000000002c961	movq	0x000782e0(%rip),%r14
000000000002c968	movq	%rax,%rbx
000000000002c96b	movq	%rbx,%rdi
000000000002c96e	movq	%r14,%rsi
000000000002c971	call	*0x00057761(%rip)
000000000002c977	testq	%rax,%rax
000000000002c97a	jne	0x0002c968
000000000002c97c	movq	%rbx,%rax
000000000002c97f	popq	%rbx
000000000002c980	popq	%r14
000000000002c982	popq	%rbp
000000000002c983	ret
-[DBGGDBStream sendStreamDidEnd]:
000000000002c984	pushq	%rbp
000000000002c985	movq	%rsp,%rbp
000000000002c988	pushq	%rbx
000000000002c989	pushq	%rax
000000000002c98a	movq	%rdi,%rbx
000000000002c98d	movq	0x000782bc(%rip),%rsi
000000000002c994	call	*0x0005773e(%rip)
000000000002c99a	movq	0x000782b7(%rip),%rsi
000000000002c9a1	movq	%rax,%rdi
000000000002c9a4	movq	%rbx,%rdx
000000000002c9a7	movq	0x0005772a(%rip),%rax
000000000002c9ae	addq	$0x08,%rsp
000000000002c9b2	popq	%rbx
000000000002c9b3	popq	%rbp
000000000002c9b4	jmp	*%rax
-[DBGGDBByteStream setByteStreamConsumer:]:
000000000002c9b6	pushq	%rbp
000000000002c9b7	movq	%rsp,%rbp
000000000002c9ba	pushq	%r14
000000000002c9bc	pushq	%rbx
000000000002c9bd	subq	$0x40,%rsp
000000000002c9c1	movq	%rdx,%r14
000000000002c9c4	movq	%rdi,%rbx
000000000002c9c7	movq	%rbx,0xe8(%rbp)
000000000002c9cb	movq	%rsi,0xe0(%rbp)
000000000002c9cf	testq	%r14,%r14
000000000002c9d2	je	0x0002ca65
000000000002c9d8	movq	0x00078259(%rip),%rsi
000000000002c9df	movq	0x0007ba12(%rip),%rdx
000000000002c9e6	movq	%r14,%rdi
000000000002c9e9	call	*0x000576e9(%rip)
000000000002c9ef	testb	%al,%al
000000000002c9f1	jne	0x0002ca65
000000000002c9f3	movq	0x00078266(%rip),%rsi
000000000002c9fa	movq	%r14,%rdi
000000000002c9fd	call	*0x000576d5(%rip)
000000000002ca03	leaq	0x000303cc(%rip),%rcx
000000000002ca0a	leaq	0x000303ce(%rip),%rdx
000000000002ca11	leaq	0x00082e20(%rip),%rsi
000000000002ca18	leaq	0x000303fa(%rip),%rdi
000000000002ca1f	movq	%rdi,0x20(%rsp)
000000000002ca24	movq	%rsi,0x18(%rsp)
000000000002ca29	movq	%rax,0x10(%rsp)
000000000002ca2e	movq	%rdx,0x08(%rsp)
000000000002ca33	movq	%rcx,(%rsp)
000000000002ca37	leaq	0xe8(%rbp),%rdi
000000000002ca3b	leaq	0xe0(%rbp),%rsi
000000000002ca3f	leaq	0x000302c5(%rip),%rdx
000000000002ca46	leaq	0x000302e9(%rip),%rcx
000000000002ca4d	leaq	0x00082dc4(%rip),%r9
000000000002ca54	movl	$0x00000091,%r8d
000000000002ca5a	xorb	%al,%al
000000000002ca5c	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000002ca61	movq	0xe8(%rbp),%rbx
000000000002ca65	movq	0x000781b4(%rip),%rsi
000000000002ca6c	movq	%rbx,%rdi
000000000002ca6f	movq	%r14,%rdx
000000000002ca72	call	*0x00057660(%rip)
000000000002ca78	addq	$0x40,%rsp
000000000002ca7c	popq	%rbx
000000000002ca7d	popq	%r14
000000000002ca7f	popq	%rbp
000000000002ca80	ret
-[DBGGDBByteStream byteStreamConsumer]:
000000000002ca81	pushq	%rbp
000000000002ca82	movq	%rsp,%rbp
000000000002ca85	movq	0x000781c4(%rip),%rsi
000000000002ca8c	popq	%rbp
000000000002ca8d	jmp	*0x00057645(%rip)
-[DBGGDBByteStream sendBytes:]:
000000000002ca93	pushq	%rbp
000000000002ca94	movq	%rsp,%rbp
000000000002ca97	pushq	%r14
000000000002ca99	pushq	%rbx
000000000002ca9a	movq	%rdx,%r14
000000000002ca9d	movq	%rdi,%rbx
000000000002caa0	movq	0x000781c1(%rip),%rsi
000000000002caa7	call	*0x0005762b(%rip)
000000000002caad	movq	0x000781bc(%rip),%rsi
000000000002cab4	movq	%rax,%rdi
000000000002cab7	movq	%rbx,%rdx
000000000002caba	movq	%r14,%rcx
000000000002cabd	movq	0x00057614(%rip),%rax
000000000002cac4	popq	%rbx
000000000002cac5	popq	%r14
000000000002cac7	popq	%rbp
000000000002cac8	jmp	*%rax
-[DBGGDBCharacterStream setCharacterStreamConsumer:]:
000000000002caca	pushq	%rbp
000000000002cacb	movq	%rsp,%rbp
000000000002cace	pushq	%r14
000000000002cad0	pushq	%rbx
000000000002cad1	subq	$0x40,%rsp
000000000002cad5	movq	%rdx,%r14
000000000002cad8	movq	%rdi,%rbx
000000000002cadb	movq	%rbx,0xe8(%rbp)
000000000002cadf	movq	%rsi,0xe0(%rbp)
000000000002cae3	testq	%r14,%r14
000000000002cae6	je	0x0002cb79
000000000002caec	movq	0x00078145(%rip),%rsi
000000000002caf3	movq	0x0007b906(%rip),%rdx
000000000002cafa	movq	%r14,%rdi
000000000002cafd	call	*0x000575d5(%rip)
000000000002cb03	testb	%al,%al
000000000002cb05	jne	0x0002cb79
000000000002cb07	movq	0x00078152(%rip),%rsi
000000000002cb0e	movq	%r14,%rdi
000000000002cb11	call	*0x000575c1(%rip)
000000000002cb17	leaq	0x000302b8(%rip),%rcx
000000000002cb1e	leaq	0x00030387(%rip),%rdx
000000000002cb25	leaq	0x00082d0c(%rip),%rsi
000000000002cb2c	leaq	0x000303a3(%rip),%rdi
000000000002cb33	movq	%rdi,0x20(%rsp)
000000000002cb38	movq	%rsi,0x18(%rsp)
000000000002cb3d	movq	%rax,0x10(%rsp)
000000000002cb42	movq	%rdx,0x08(%rsp)
000000000002cb47	movq	%rcx,(%rsp)
000000000002cb4b	leaq	0xe8(%rbp),%rdi
000000000002cb4f	leaq	0xe0(%rbp),%rsi
000000000002cb53	leaq	0x0003031d(%rip),%rdx
000000000002cb5a	leaq	0x000301d5(%rip),%rcx
000000000002cb61	leaq	0x00082cb0(%rip),%r9
000000000002cb68	movl	$0x000000a6,%r8d
000000000002cb6e	xorb	%al,%al
000000000002cb70	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000002cb75	movq	0xe8(%rbp),%rbx
000000000002cb79	movq	0x000780a0(%rip),%rsi
000000000002cb80	movq	%rbx,%rdi
000000000002cb83	movq	%r14,%rdx
000000000002cb86	call	*0x0005754c(%rip)
000000000002cb8c	addq	$0x40,%rsp
000000000002cb90	popq	%rbx
000000000002cb91	popq	%r14
000000000002cb93	popq	%rbp
000000000002cb94	ret
-[DBGGDBCharacterStream characterStreamConsumer]:
000000000002cb95	pushq	%rbp
000000000002cb96	movq	%rsp,%rbp
000000000002cb99	movq	0x000780b0(%rip),%rsi
000000000002cba0	popq	%rbp
000000000002cba1	jmp	*0x00057531(%rip)
-[DBGGDBCharacterStream sendCharacters:]:
000000000002cba7	pushq	%rbp
000000000002cba8	movq	%rsp,%rbp
000000000002cbab	pushq	%r14
000000000002cbad	pushq	%rbx
000000000002cbae	movq	%rdx,%r14
000000000002cbb1	movq	%rdi,%rbx
000000000002cbb4	movq	0x000780bd(%rip),%rsi
000000000002cbbb	call	*0x00057517(%rip)
000000000002cbc1	movq	0x00077f78(%rip),%rsi
000000000002cbc8	movq	%rax,%rdi
000000000002cbcb	movq	%rbx,%rdx
000000000002cbce	movq	%r14,%rcx
000000000002cbd1	movq	0x00057500(%rip),%rax
000000000002cbd8	popq	%rbx
000000000002cbd9	popq	%r14
000000000002cbdb	popq	%rbp
000000000002cbdc	jmp	*%rax
-[DBGGDBLineStream setLineStreamConsumer:]:
000000000002cbde	pushq	%rbp
000000000002cbdf	movq	%rsp,%rbp
000000000002cbe2	pushq	%r14
000000000002cbe4	pushq	%rbx
000000000002cbe5	subq	$0x40,%rsp
000000000002cbe9	movq	%rdx,%r14
000000000002cbec	movq	%rdi,%rbx
000000000002cbef	movq	%rbx,0xe8(%rbp)
000000000002cbf3	movq	%rsi,0xe0(%rbp)
000000000002cbf7	testq	%r14,%r14
000000000002cbfa	je	0x0002cc8d
000000000002cc00	movq	0x00078031(%rip),%rsi
000000000002cc07	movq	0x0007b7fa(%rip),%rdx
000000000002cc0e	movq	%r14,%rdi
000000000002cc11	call	*0x000574c1(%rip)
000000000002cc17	testb	%al,%al
000000000002cc19	jne	0x0002cc8d
000000000002cc1b	movq	0x0007803e(%rip),%rsi
000000000002cc22	movq	%r14,%rdi
000000000002cc25	call	*0x000574ad(%rip)
000000000002cc2b	leaq	0x000301a4(%rip),%rcx
000000000002cc32	leaq	0x0003032b(%rip),%rdx
000000000002cc39	leaq	0x00082bf8(%rip),%rsi
000000000002cc40	leaq	0x00030342(%rip),%rdi
000000000002cc47	movq	%rdi,0x20(%rsp)
000000000002cc4c	movq	%rsi,0x18(%rsp)
000000000002cc51	movq	%rax,0x10(%rsp)
000000000002cc56	movq	%rdx,0x08(%rsp)
000000000002cc5b	movq	%rcx,(%rsp)
000000000002cc5f	leaq	0xe8(%rbp),%rdi
000000000002cc63	leaq	0xe0(%rbp),%rsi
000000000002cc67	leaq	0x000302cb(%rip),%rdx
000000000002cc6e	leaq	0x000300c1(%rip),%rcx
000000000002cc75	leaq	0x00082b9c(%rip),%r9
000000000002cc7c	movl	$0x000000bb,%r8d
000000000002cc82	xorb	%al,%al
000000000002cc84	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000002cc89	movq	0xe8(%rbp),%rbx
000000000002cc8d	movq	0x00077f8c(%rip),%rsi
000000000002cc94	movq	%rbx,%rdi
000000000002cc97	movq	%r14,%rdx
000000000002cc9a	call	*0x00057438(%rip)
000000000002cca0	addq	$0x40,%rsp
000000000002cca4	popq	%rbx
000000000002cca5	popq	%r14
000000000002cca7	popq	%rbp
000000000002cca8	ret
-[DBGGDBLineStream lineStreamConsumer]:
000000000002cca9	pushq	%rbp
000000000002ccaa	movq	%rsp,%rbp
000000000002ccad	movq	0x00077f9c(%rip),%rsi
000000000002ccb4	popq	%rbp
000000000002ccb5	jmp	*0x0005741d(%rip)
-[DBGGDBLineStream sendLine:]:
000000000002ccbb	pushq	%rbp
000000000002ccbc	movq	%rsp,%rbp
000000000002ccbf	pushq	%r14
000000000002ccc1	pushq	%rbx
000000000002ccc2	movq	%rdx,%r14
000000000002ccc5	movq	%rdi,%rbx
000000000002ccc8	movq	0x00077fb1(%rip),%rsi
000000000002cccf	call	*0x00057403(%rip)
000000000002ccd5	movq	0x00077fac(%rip),%rsi
000000000002ccdc	movq	%rax,%rdi
000000000002ccdf	movq	%rbx,%rdx
000000000002cce2	movq	%r14,%rcx
000000000002cce5	movq	0x000573ec(%rip),%rax
000000000002ccec	popq	%rbx
000000000002cced	popq	%r14
000000000002ccef	popq	%rbp
000000000002ccf0	jmp	*%rax
-[DBGGDBStreamLogger _logMessage:forStream:]:
000000000002ccf2	pushq	%rbp
000000000002ccf3	movq	%rsp,%rbp
000000000002ccf6	pushq	%r15
000000000002ccf8	pushq	%r14
000000000002ccfa	pushq	%r12
000000000002ccfc	pushq	%rbx
000000000002ccfd	movq	%rcx,%r15
000000000002cd00	movq	%rdx,%r14
000000000002cd03	movq	0x00077f86(%rip),%rsi
000000000002cd0a	movq	0x0007b727(%rip),%rdi
000000000002cd11	movq	0x000573c0(%rip),%rbx
000000000002cd18	call	*%rbx
000000000002cd1a	movq	%rax,%r12
000000000002cd1d	movq	0x0008a92c(%rip),%rcx
000000000002cd24	leaq	0x01(%rcx),%rax
000000000002cd28	movq	%rax,0x0008a921(%rip)
000000000002cd2f	leaq	0x00082b22(%rip),%rdx
000000000002cd36	movq	0x00077f5b(%rip),%rsi
000000000002cd3d	movq	%r12,%rdi
000000000002cd40	movq	%r15,%r8
000000000002cd43	xorb	%al,%al
000000000002cd45	call	*%rbx
000000000002cd47	movq	0x00077f52(%rip),%rsi
000000000002cd4e	movq	%r15,%rdi
000000000002cd51	call	*%rbx
000000000002cd53	movq	%rax,%rbx
000000000002cd56	testq	%rbx,%rbx
000000000002cd59	je	0x0002cd8c
000000000002cd5b	leaq	0x0007b58e(%rip),%rsi
000000000002cd62	movq	%rbx,%rdi
000000000002cd65	call	*0x0007b585(%rip)
000000000002cd6b	testq	%rax,%rax
000000000002cd6e	je	0x0002cd8c
000000000002cd70	movq	0x00077f21(%rip),%rsi
000000000002cd77	leaq	0x00082afa(%rip),%rdx
000000000002cd7e	movq	%r12,%rdi
000000000002cd81	movq	%rbx,%rcx
000000000002cd84	xorb	%al,%al
000000000002cd86	call	*0x0005734c(%rip)
000000000002cd8c	movq	0x00077f15(%rip),%rsi
000000000002cd93	movq	0x0005733e(%rip),%rbx
000000000002cd9a	movq	%r15,%rdi
000000000002cd9d	call	*%rbx
000000000002cd9f	movq	0x00077ef2(%rip),%rsi
000000000002cda6	leaq	0x00082aeb(%rip),%rdx
000000000002cdad	movq	%r12,%rdi
000000000002cdb0	movq	%rax,%rcx
000000000002cdb3	xorb	%al,%al
000000000002cdb5	call	*%rbx
000000000002cdb7	movq	0x00077eea(%rip),%rsi
000000000002cdbe	movq	%r15,%rdi
000000000002cdc1	call	*%rbx
000000000002cdc3	movq	0x00077ed6(%rip),%rsi
000000000002cdca	movq	%rax,%rdi
000000000002cdcd	call	*%rbx
000000000002cdcf	movq	%rax,%rbx
000000000002cdd2	testq	%rbx,%rbx
000000000002cdd5	je	0x0002ce08
000000000002cdd7	leaq	0x0007b512(%rip),%rsi
000000000002cdde	movq	%rbx,%rdi
000000000002cde1	call	*0x0007b509(%rip)
000000000002cde7	testq	%rax,%rax
000000000002cdea	je	0x0002ce08
000000000002cdec	movq	0x00077ea5(%rip),%rsi
000000000002cdf3	leaq	0x00082a7e(%rip),%rdx
000000000002cdfa	movq	%r12,%rdi
000000000002cdfd	movq	%rbx,%rcx
000000000002ce00	xorb	%al,%al
000000000002ce02	call	*0x000572d0(%rip)
000000000002ce08	movq	0x00077e89(%rip),%rsi
000000000002ce0f	leaq	0x00082aa2(%rip),%rdx
000000000002ce16	movq	%r12,%rdi
000000000002ce19	movq	%r14,%rcx
000000000002ce1c	xorb	%al,%al
000000000002ce1e	call	*0x000572b4(%rip)
000000000002ce24	leaq	0x000829ad(%rip),%rdi
000000000002ce2b	movq	%r12,%rsi
000000000002ce2e	xorb	%al,%al
000000000002ce30	popq	%rbx
000000000002ce31	popq	%r12
000000000002ce33	popq	%r14
000000000002ce35	popq	%r15
000000000002ce37	popq	%rbp
000000000002ce38	jmp	0x0004e5c0	; symbol stub for: _NSLog
-[DBGGDBStreamLogger streamDidEnd:]:
000000000002ce3d	pushq	%rbp
000000000002ce3e	movq	%rsp,%rbp
000000000002ce41	movq	%rdx,%rax
000000000002ce44	movq	0x00077e65(%rip),%rsi
000000000002ce4b	leaq	0x00082a86(%rip),%rdx
000000000002ce52	movq	%rax,%rcx
000000000002ce55	popq	%rbp
000000000002ce56	jmp	*0x0005727c(%rip)
-[DBGGDBStreamLogger stream:processBytes:]:
000000000002ce5c	pushq	%rbp
000000000002ce5d	movq	%rsp,%rbp
000000000002ce60	pushq	%r15
000000000002ce62	pushq	%r14
000000000002ce64	pushq	%r13
000000000002ce66	pushq	%r12
000000000002ce68	pushq	%rbx
000000000002ce69	subq	$0x18,%rsp
000000000002ce6d	movq	%rcx,%r14
000000000002ce70	movq	%rdx,0xd0(%rbp)
000000000002ce74	movq	%rdi,0xc8(%rbp)
000000000002ce78	movq	0x0007b5b9(%rip),%rdi
000000000002ce7f	leaq	0x0007b45a(%rip),%rsi
000000000002ce86	call	*0x0007b454(%rip)
000000000002ce8c	movq	0x00077bdd(%rip),%rsi
000000000002ce93	movq	0x0005723e(%rip),%r15
000000000002ce9a	movq	%rax,%rdi
000000000002ce9d	call	*%r15
000000000002cea0	movq	%rax,%rbx
000000000002cea3	leaq	0x0007b446(%rip),%rsi
000000000002ceaa	movq	%r14,%rdi
000000000002cead	call	*0x0007b43d(%rip)
000000000002ceb3	movq	%rax,%r12
000000000002ceb6	movq	0x00077d53(%rip),%rsi
000000000002cebd	movq	%r14,%rdi
000000000002cec0	call	*%r15
000000000002cec3	movq	%rax,%r13
000000000002cec6	testq	%r12,%r12
000000000002cec9	je	0x0002cf60
000000000002cecf	xorl	%r14d,%r14d
000000000002ced2	movq	0x00077dbf(%rip),%r15
000000000002ced9	testq	%r14,%r14
000000000002cedc	je	0x0002ceea
000000000002cede	movq	%r14,%rax
000000000002cee1	andq	$0x0f,%rax
000000000002cee5	testq	%rax,%rax
000000000002cee8	jne	0x0002cf17
000000000002ceea	testq	%r14,%r14
000000000002ceed	leaq	0x00082a44(%rip),%rcx
000000000002cef4	leaq	0x0008281d(%rip),%rax
000000000002cefb	cmovneq	%rax,%rcx
000000000002ceff	movq	%rbx,%rdi
000000000002cf02	movq	%r15,%rsi
000000000002cf05	leaq	0x00082a0c(%rip),%rdx
000000000002cf0c	movq	%r14,%r8
000000000002cf0f	xorb	%al,%al
000000000002cf11	call	*0x000571c1(%rip)
000000000002cf17	movzbl	0x00(%rbp,%rsi),%ecx
000000000002cf1d	movq	%rbx,%rdi
000000000002cf20	movq	%r15,%rsi
000000000002cf23	leaq	0x00082a2e(%rip),%rdx
000000000002cf2a	xorb	%al,%al
000000000002cf2c	call	*0x000571a6(%rip)
000000000002cf32	incq	%r14
000000000002cf35	cmpq	%r14,%r12
000000000002cf38	jne	0x0002ced9
000000000002cf3a	movq	0x00077d6f(%rip),%rsi
000000000002cf41	movq	0xc8(%rbp),%rdi
000000000002cf45	movq	%rbx,%rdx
000000000002cf48	movq	0xd0(%rbp),%rcx
000000000002cf4c	addq	$0x18,%rsp
000000000002cf50	popq	%rbx
000000000002cf51	popq	%r12
000000000002cf53	popq	%r13
000000000002cf55	popq	%r14
000000000002cf57	popq	%r15
000000000002cf59	popq	%rbp
000000000002cf5a	jmp	*0x00057178(%rip)
000000000002cf60	movq	0x00077b99(%rip),%rsi
000000000002cf67	leaq	0x0008298a(%rip),%rdx
000000000002cf6e	movq	%rbx,%rdi
000000000002cf71	call	*0x00057161(%rip)
000000000002cf77	jmp	0x0002cf3a
-[DBGGDBStreamLogger stream:processCharacters:]:
000000000002cf79	pushq	%rbp
000000000002cf7a	movq	%rsp,%rbp
000000000002cf7d	pushq	%r15
000000000002cf7f	pushq	%r14
000000000002cf81	pushq	%rbx
000000000002cf82	pushq	%rax
000000000002cf83	movq	%rcx,%rbx
000000000002cf86	movq	%rdx,%r14
000000000002cf89	movq	%rdi,%r15
000000000002cf8c	movq	0x0007b4bd(%rip),%rdi
000000000002cf93	leaq	0x0007b346(%rip),%rsi
000000000002cf9a	call	*0x0007b340(%rip)
000000000002cfa0	movq	0x00077d11(%rip),%rsi
000000000002cfa7	leaq	0x000829ca(%rip),%rdx
000000000002cfae	movq	%rax,%rdi
000000000002cfb1	movq	%rbx,%rcx
000000000002cfb4	xorb	%al,%al
000000000002cfb6	call	*0x0005711c(%rip)
000000000002cfbc	movq	0x00077ced(%rip),%rsi
000000000002cfc3	movq	%r15,%rdi
000000000002cfc6	movq	%rax,%rdx
000000000002cfc9	movq	%r14,%rcx
000000000002cfcc	movq	0x00057105(%rip),%rax
000000000002cfd3	addq	$0x08,%rsp
000000000002cfd7	popq	%rbx
000000000002cfd8	popq	%r14
000000000002cfda	popq	%r15
000000000002cfdc	popq	%rbp
000000000002cfdd	jmp	*%rax
-[DBGGDBStreamLogger stream:processLine:]:
000000000002cfdf	pushq	%rbp
000000000002cfe0	movq	%rsp,%rbp
000000000002cfe3	pushq	%r15
000000000002cfe5	pushq	%r14
000000000002cfe7	pushq	%rbx
000000000002cfe8	pushq	%rax
000000000002cfe9	movq	%rcx,%rbx
000000000002cfec	movq	%rdx,%r14
000000000002cfef	movq	%rdi,%r15
000000000002cff2	movq	0x0007b457(%rip),%rdi
000000000002cff9	leaq	0x0007b2e0(%rip),%rsi
000000000002d000	call	*0x0007b2da(%rip)
000000000002d006	movq	0x00077cab(%rip),%rsi
000000000002d00d	leaq	0x00082984(%rip),%rdx
000000000002d014	movq	%rax,%rdi
000000000002d017	movq	%rbx,%rcx
000000000002d01a	xorb	%al,%al
000000000002d01c	call	*0x000570b6(%rip)
000000000002d022	movq	0x00077c87(%rip),%rsi
000000000002d029	movq	%r15,%rdi
000000000002d02c	movq	%rax,%rdx
000000000002d02f	movq	%r14,%rcx
000000000002d032	movq	0x0005709f(%rip),%rax
000000000002d039	addq	$0x08,%rsp
000000000002d03d	popq	%rbx
000000000002d03e	popq	%r14
000000000002d040	popq	%r15
000000000002d042	popq	%rbp
000000000002d043	jmp	*%rax
+[DBGGDBStreamSink streamSink]:
000000000002d045	pushq	%rbp
000000000002d046	movq	%rsp,%rbp
000000000002d049	movq	0x0008a608(%rip),%rax
000000000002d050	testq	%rax,%rax
000000000002d053	jne	0x0002d098
000000000002d055	leaq	0x0007b2d4(%rip),%rsi
000000000002d05c	call	*0x0007b2ce(%rip)
000000000002d062	leaq	0x0007b277(%rip),%rsi
000000000002d069	movq	%rax,%rdi
000000000002d06c	call	*0x0007b26e(%rip)
000000000002d072	movq	0x000779f7(%rip),%rsi
000000000002d079	movq	%rax,%rdi
000000000002d07c	call	*0x00057056(%rip)
000000000002d082	leaq	0x0008a5cf(%rip),%rsi
000000000002d089	movq	%rax,%rdi
000000000002d08c	callq	0x0004e602	; symbol stub for: _objc_assign_global
000000000002d091	movq	0x0008a5c0(%rip),%rax
000000000002d098	popq	%rbp
000000000002d099	ret
-[DBGGDBStreamSink streamDidEnd:]:
000000000002d09a	pushq	%rbp
000000000002d09b	movq	%rsp,%rbp
000000000002d09e	popq	%rbp
000000000002d09f	ret
-[DBGGDBStreamSink stream:processBytes:]:
000000000002d0a0	pushq	%rbp
000000000002d0a1	movq	%rsp,%rbp
000000000002d0a4	popq	%rbp
000000000002d0a5	ret
-[DBGGDBStreamSink stream:processCharacters:]:
000000000002d0a6	pushq	%rbp
000000000002d0a7	movq	%rsp,%rbp
000000000002d0aa	popq	%rbp
000000000002d0ab	ret
-[DBGGDBStreamSink stream:processLine:]:
000000000002d0ac	pushq	%rbp
000000000002d0ad	movq	%rsp,%rbp
000000000002d0b0	popq	%rbp
000000000002d0b1	ret
-[DBGGDBUTF8BufferFilter streamDidEnd:]:
000000000002d0b2	pushq	%rbp
000000000002d0b3	movq	%rsp,%rbp
000000000002d0b6	movq	0x0008159b(%rip),%rax
000000000002d0bd	movq	$0x00000000,(%rdi,%rax)
000000000002d0c5	movq	0x00077a7c(%rip),%rsi
000000000002d0cc	popq	%rbp
000000000002d0cd	jmp	*0x00057005(%rip)
-[DBGGDBUTF8BufferFilter stream:processBytes:]:
000000000002d0d3	pushq	%rbp
000000000002d0d4	movq	%rsp,%rbp
000000000002d0d7	pushq	%r15
000000000002d0d9	pushq	%r14
000000000002d0db	pushq	%r13
000000000002d0dd	pushq	%r12
000000000002d0df	pushq	%rbx
000000000002d0e0	pushq	%rax
000000000002d0e1	movq	%rcx,%r15
000000000002d0e4	movq	%rdi,%r13
000000000002d0e7	movq	0x0008156a(%rip),%rax
000000000002d0ee	cmpq	$0x00,0x00(%r13,%rax)
000000000002d0f4	jne	0x0002d0fe
000000000002d0f6	movq	%r15,%r14
000000000002d0f9	jmp	0x0002d18e
000000000002d0fe	movq	0x0007b33b(%rip),%rdi
000000000002d105	leaq	0x0007b1d4(%rip),%rsi
000000000002d10c	call	*0x0007b1ce(%rip)
000000000002d112	movq	%rax,%r12
000000000002d115	movq	0x0008153c(%rip),%rax
000000000002d11c	movq	0x00(%r13,%rax),%r14
000000000002d121	leaq	0x0007b1c8(%rip),%rsi
000000000002d128	movq	%r15,%rdi
000000000002d12b	call	*0x0007b1bf(%rip)
000000000002d131	movq	0x00056fa0(%rip),%rbx
000000000002d138	addq	%rax,%r14
000000000002d13b	movq	0x00077a76(%rip),%rsi
000000000002d142	movq	%r12,%rdi
000000000002d145	movq	%r14,%rdx
000000000002d148	call	*%rbx
000000000002d14a	movq	%rax,%r14
000000000002d14d	movq	0x00081504(%rip),%rax
000000000002d154	movq	0x00(%r13,%rax),%rcx
000000000002d159	movq	0x00081500(%rip),%rdx
000000000002d160	addq	%r13,%rdx
000000000002d163	movq	0x000779b6(%rip),%rsi
000000000002d16a	movq	%r14,%rdi
000000000002d16d	call	*%rbx
000000000002d16f	movq	0x00077b4a(%rip),%rsi
000000000002d176	movq	%r14,%rdi
000000000002d179	movq	%r15,%rdx
000000000002d17c	call	*%rbx
000000000002d17e	movq	0x000814d3(%rip),%rax
000000000002d185	movq	$0x00000000,0x00(%r13,%rax)
000000000002d18e	leaq	0x0007b15b(%rip),%rsi
000000000002d195	movq	%r14,%rdi
000000000002d198	call	*0x0007b152(%rip)
000000000002d19e	movq	%rax,%r15
000000000002d1a1	testq	%r15,%r15
000000000002d1a4	je	0x0002d2b3
000000000002d1aa	cmpq	$0x04,%r15
000000000002d1ae	movl	$0x00000004,%ebx
000000000002d1b3	cmovbq	%r15,%rbx
000000000002d1b7	movq	0x00077a52(%rip),%rsi
000000000002d1be	movq	%r14,%rdi
000000000002d1c1	call	*0x00056f11(%rip)
000000000002d1c7	testq	%rbx,%rbx
000000000002d1ca	je	0x0002d2a2
000000000002d1d0	movq	%r15,%rdx
000000000002d1d3	notq	%rdx
000000000002d1d6	cmpq	$0xfb,%rdx
000000000002d1da	movq	$0xfffffffb,%r11
000000000002d1e1	cmovaq	%rdx,%r11
000000000002d1e5	incq	%r11
000000000002d1e8	addq	%r15,%rax
000000000002d1eb	xorl	%ebx,%ebx
000000000002d1ed	movq	0x0008146c(%rip),%r9
000000000002d1f4	movq	0x0008145d(%rip),%r10
000000000002d1fb	movl	$0x00000001,%r8d
000000000002d201	movb	(%rax,%r11),%dl
000000000002d205	testb	$0x80,%dl
000000000002d208	je	0x0002d299
000000000002d20e	testb	$0x40,%dl
000000000002d211	je	0x0002d26b
000000000002d213	movzbl	%dl,%ecx
000000000002d216	movl	%ecx,%esi
000000000002d218	andl	$0x000000f8,%esi
000000000002d21e	movl	$0x00000003,%edi
000000000002d223	cmpl	$0x000000f0,%esi
000000000002d229	je	0x0002d258
000000000002d22b	movl	%ecx,%esi
000000000002d22d	andl	$0x000000f0,%esi
000000000002d233	movl	$0x00000002,%edi
000000000002d238	cmpl	$0x000000e0,%esi
000000000002d23e	je	0x0002d258
000000000002d240	andl	$0x000000e0,%ecx
000000000002d246	cmpl	$0x000000c0,%ecx
000000000002d24c	cmoveq	%r8,%rbx
000000000002d250	testq	%rbx,%rbx
000000000002d253	movq	%rbx,%rdi
000000000002d256	jle	0x0002d299
000000000002d258	movq	$0x00000001,0x00(%r13,%r10)
000000000002d261	movb	%dl,0x00(%r13,%r9)
000000000002d266	movq	%rdi,%rbx
000000000002d269	jmp	0x0002d299
000000000002d26b	testq	%rbx,%rbx
000000000002d26e	jle	0x0002d299
000000000002d270	decq	%rbx
000000000002d273	testq	%rbx,%rbx
000000000002d276	jle	0x0002d290
000000000002d278	movq	0x00(%r13,%r10),%rsi
000000000002d27d	leaq	0x01(%rsi),%rcx
000000000002d281	movq	%rcx,0x00(%r13,%r10)
000000000002d286	addq	%r9,%rsi
000000000002d289	movb	%dl,0x00(%r13,%rsi)
000000000002d28e	jmp	0x0002d299
000000000002d290	movq	$0x00000000,0x00(%r13,%r10)
000000000002d299	incq	%r11
000000000002d29c	jne	0x0002d201
000000000002d2a2	movq	0x000813af(%rip),%rax
000000000002d2a9	movq	0x00(%r13,%rax),%rax
000000000002d2ae	cmpq	%rax,%r15
000000000002d2b1	jne	0x0002d2c2
000000000002d2b3	addq	$0x08,%rsp
000000000002d2b7	popq	%rbx
000000000002d2b8	popq	%r12
000000000002d2ba	popq	%r13
000000000002d2bc	popq	%r14
000000000002d2be	popq	%r15
000000000002d2c0	popq	%rbp
000000000002d2c1	ret
000000000002d2c2	subq	%rax,%r15
000000000002d2c5	movq	0x000779fc(%rip),%rsi
000000000002d2cc	movq	%r14,%rdi
000000000002d2cf	xorl	%edx,%edx
000000000002d2d1	movq	%r15,%rcx
000000000002d2d4	call	*0x00056dfe(%rip)
000000000002d2da	movq	0x00077917(%rip),%rsi
000000000002d2e1	movq	%r13,%rdi
000000000002d2e4	movq	%rax,%rdx
000000000002d2e7	movq	0x00056dea(%rip),%rax
000000000002d2ee	addq	$0x08,%rsp
000000000002d2f2	popq	%rbx
000000000002d2f3	popq	%r12
000000000002d2f5	popq	%r13
000000000002d2f7	popq	%r14
000000000002d2f9	popq	%r15
000000000002d2fb	popq	%rbp
000000000002d2fc	jmp	*%rax
-[DBGGDBUTF8DecoderFilter stream:processBytes:]:
000000000002d2fe	pushq	%rbp
000000000002d2ff	movq	%rsp,%rbp
000000000002d302	pushq	%r15
000000000002d304	pushq	%r14
000000000002d306	pushq	%r12
000000000002d308	pushq	%rbx
000000000002d309	subq	$0x40,%rsp
000000000002d30d	movq	%rcx,%r14
000000000002d310	movq	%rdx,%rbx
000000000002d313	movq	%rdi,0xd8(%rbp)
000000000002d317	movq	%rsi,0xd0(%rbp)
000000000002d31b	testq	%rbx,%rbx
000000000002d31e	jne	0x0002d386
000000000002d320	movq	0x0007b151(%rip),%rdi
000000000002d327	leaq	0x0007b002(%rip),%rsi
000000000002d32e	call	*0x0007affc(%rip)
000000000002d334	movq	%rax,%rdi
000000000002d337	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000002d33c	leaq	0xd8(%rbp),%rdi
000000000002d340	leaq	0xd0(%rbp),%rsi
000000000002d344	leaq	0x0002fd13(%rip),%rdx
000000000002d34b	leaq	0x0002fd3c(%rip),%rcx
000000000002d352	leaq	0x0008265f(%rip),%r9
000000000002d359	leaq	0x0002fde3(%rip),%r8
000000000002d360	leaq	0x0002fde3(%rip),%rbx
000000000002d367	movq	%rbx,0x18(%rsp)
000000000002d36c	leaq	0x000824c5(%rip),%rbx
000000000002d373	movq	%rbx,0x10(%rsp)
000000000002d378	movq	%rax,0x08(%rsp)
000000000002d37d	movq	%r8,(%rsp)
000000000002d381	jmp	0x0002d42e
000000000002d386	movq	0x0007b0eb(%rip),%rdi
000000000002d38d	leaq	0x0007af9c(%rip),%rsi
000000000002d394	call	*0x0007af96(%rip)
000000000002d39a	leaq	0x0007af9f(%rip),%rsi
000000000002d3a1	movq	%rbx,%rdi
000000000002d3a4	movq	%rax,%rdx
000000000002d3a7	call	*0x0007af93(%rip)
000000000002d3ad	testb	%al,%al
000000000002d3af	jne	0x0002d43b
000000000002d3b5	movq	0x0007b0bc(%rip),%rdi
000000000002d3bc	leaq	0x0007af6d(%rip),%rsi
000000000002d3c3	call	*0x0007af67(%rip)
000000000002d3c9	movq	%rax,%rdi
000000000002d3cc	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000002d3d1	movq	%rax,%r15
000000000002d3d4	movq	0x00077885(%rip),%rsi
000000000002d3db	movq	%rbx,%rdi
000000000002d3de	call	*0x00056cf4(%rip)
000000000002d3e4	leaq	0x0002fda9(%rip),%rbx
000000000002d3eb	leaq	0xd8(%rbp),%rdi
000000000002d3ef	leaq	0xd0(%rbp),%rsi
000000000002d3f3	leaq	0x0002fc64(%rip),%rdx
000000000002d3fa	leaq	0x0002fc8d(%rip),%rcx
000000000002d401	leaq	0x000825d0(%rip),%r9
000000000002d408	movq	%rbx,0x20(%rsp)
000000000002d40d	leaq	0x00082424(%rip),%rbx
000000000002d414	movq	%rbx,0x18(%rsp)
000000000002d419	leaq	0x0002fd23(%rip),%rbx
000000000002d420	movq	%rax,0x10(%rsp)
000000000002d425	movq	%r15,0x08(%rsp)
000000000002d42a	movq	%rbx,(%rsp)
000000000002d42e	movl	$0x00000016,%r8d
000000000002d434	xorb	%al,%al
000000000002d436	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000002d43b	testq	%r14,%r14
000000000002d43e	jne	0x0002d4a2
000000000002d440	movq	0x0007b039(%rip),%rdi
000000000002d447	leaq	0x0007aee2(%rip),%rsi
000000000002d44e	call	*0x0007aedc(%rip)
000000000002d454	movq	%rax,%rdi
000000000002d457	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000002d45c	leaq	0xd8(%rbp),%rdi
000000000002d460	leaq	0xd0(%rbp),%rsi
000000000002d464	leaq	0x0002fbf3(%rip),%rdx
000000000002d46b	leaq	0x0002fc1c(%rip),%rcx
000000000002d472	leaq	0x0008253f(%rip),%r9
000000000002d479	leaq	0x0002fd46(%rip),%r8
000000000002d480	leaq	0x0002fd48(%rip),%rbx
000000000002d487	movq	%rbx,0x18(%rsp)
000000000002d48c	leaq	0x000823a5(%rip),%rbx
000000000002d493	movq	%rbx,0x10(%rsp)
000000000002d498	movq	%rax,0x08(%rsp)
000000000002d49d	jmp	0x0002d546
000000000002d4a2	movq	0x0007afd7(%rip),%rdi
000000000002d4a9	leaq	0x0007ae80(%rip),%rsi
000000000002d4b0	call	*0x0007ae7a(%rip)
000000000002d4b6	leaq	0x0007ae83(%rip),%rsi
000000000002d4bd	movq	%r14,%rdi
000000000002d4c0	movq	%rax,%rdx
000000000002d4c3	call	*0x0007ae77(%rip)
000000000002d4c9	testb	%al,%al
000000000002d4cb	jne	0x0002d557
000000000002d4d1	movq	0x0007afa8(%rip),%rdi
000000000002d4d8	leaq	0x0007ae51(%rip),%rsi
000000000002d4df	call	*0x0007ae4b(%rip)
000000000002d4e5	movq	%rax,%rdi
000000000002d4e8	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000002d4ed	movq	%rax,%r15
000000000002d4f0	movq	0x00077769(%rip),%rsi
000000000002d4f7	movq	%r14,%rdi
000000000002d4fa	call	*0x00056bd8(%rip)
000000000002d500	leaq	0x0002fcda(%rip),%r8
000000000002d507	leaq	0xd8(%rbp),%rdi
000000000002d50b	leaq	0xd0(%rbp),%rsi
000000000002d50f	leaq	0x0002fb48(%rip),%rdx
000000000002d516	leaq	0x0002fb71(%rip),%rcx
000000000002d51d	leaq	0x000824b4(%rip),%r9
000000000002d524	movq	%r8,0x20(%rsp)
000000000002d529	leaq	0x00082308(%rip),%rbx
000000000002d530	movq	%rbx,0x18(%rsp)
000000000002d535	leaq	0x0002fc8a(%rip),%r8
000000000002d53c	movq	%rax,0x10(%rsp)
000000000002d541	movq	%r15,0x08(%rsp)
000000000002d546	movq	%r8,(%rsp)
000000000002d54a	movl	$0x00000017,%r8d
000000000002d550	xorb	%al,%al
000000000002d552	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000002d557	movq	0x0008110a(%rip),%rax
000000000002d55e	movq	0xd8(%rbp),%rcx
000000000002d562	cmpq	$0x00,(%rcx,%rax)
000000000002d567	je	0x0002d609
000000000002d56d	movq	0x0007aecc(%rip),%rdi
000000000002d574	leaq	0x0007ad65(%rip),%rsi
000000000002d57b	call	*0x0007ad5f(%rip)
000000000002d581	movq	%rax,%r15
000000000002d584	movq	0x000810dd(%rip),%rax
000000000002d58b	movq	0xd8(%rbp),%rcx
000000000002d58f	movq	(%rcx,%rax),%rbx
000000000002d593	leaq	0x0007ad56(%rip),%rsi
000000000002d59a	movq	%r14,%rdi
000000000002d59d	call	*0x0007ad4d(%rip)
000000000002d5a3	movq	0x00056b2e(%rip),%r12
000000000002d5aa	addq	%rax,%rbx
000000000002d5ad	movq	0x00077604(%rip),%rsi
000000000002d5b4	movq	%r15,%rdi
000000000002d5b7	movq	%rbx,%rdx
000000000002d5ba	call	*%r12
000000000002d5bd	movq	%rax,%rbx
000000000002d5c0	movq	0x000810a1(%rip),%rax
000000000002d5c7	movq	0xd8(%rbp),%rdx
000000000002d5cb	movq	(%rdx,%rax),%rcx
000000000002d5cf	addq	0x0008109a(%rip),%rdx
000000000002d5d6	movq	0x00077543(%rip),%rsi
000000000002d5dd	movq	%rbx,%rdi
000000000002d5e0	call	*%r12
000000000002d5e3	movq	0x000776d6(%rip),%rsi
000000000002d5ea	movq	%rbx,%rdi
000000000002d5ed	movq	%r14,%rdx
000000000002d5f0	call	*%r12
000000000002d5f3	movq	0x0008106e(%rip),%rax
000000000002d5fa	movq	0xd8(%rbp),%rcx
000000000002d5fe	movq	$0x00000000,(%rcx,%rax)
000000000002d606	movq	%rbx,%r14
000000000002d609	movq	0x00077600(%rip),%rsi
000000000002d610	movq	0x00056ac1(%rip),%r12
000000000002d617	movq	%r14,%rdi
000000000002d61a	call	*%r12
000000000002d61d	movq	%rax,%r15
000000000002d620	leaq	0x0007acc9(%rip),%rsi
000000000002d627	movq	%r14,%rdi
000000000002d62a	call	*0x0007acc0(%rip)
000000000002d630	movq	%rax,%rbx
000000000002d633	movq	0x0007ae16(%rip),%rdi
000000000002d63a	leaq	0x0007ac9f(%rip),%rsi
000000000002d641	call	*0x0007ac99(%rip)
000000000002d647	movq	0x00077682(%rip),%rsi
000000000002d64e	movq	%rax,%rdi
000000000002d651	movq	%r15,%rdx
000000000002d654	movq	%rbx,%rcx
000000000002d657	movl	$0x00000004,%r8d
000000000002d65d	xorl	%r9d,%r9d
000000000002d660	call	*%r12
000000000002d663	movq	%rax,%r14
000000000002d666	testq	%r14,%r14
000000000002d669	jne	0x0002d6cd
000000000002d66b	movq	0x0007adde(%rip),%rdi
000000000002d672	leaq	0x0007acb7(%rip),%rsi
000000000002d679	call	*0x0007acb1(%rip)
000000000002d67f	movq	%rax,%rdi
000000000002d682	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000002d687	leaq	0xd8(%rbp),%rdi
000000000002d68b	leaq	0xd0(%rbp),%rsi
000000000002d68f	leaq	0x0002f9c8(%rip),%rdx
000000000002d696	leaq	0x0002f9f1(%rip),%rcx
000000000002d69d	leaq	0x00082314(%rip),%r9
000000000002d6a4	leaq	0x0002fb64(%rip),%r8
000000000002d6ab	leaq	0x0002fb64(%rip),%rbx
000000000002d6b2	movq	%rbx,0x18(%rsp)
000000000002d6b7	leaq	0x0008217a(%rip),%rbx
000000000002d6be	movq	%rbx,0x10(%rsp)
000000000002d6c3	movq	%rax,0x08(%rsp)
000000000002d6c8	jmp	0x0002d771
000000000002d6cd	movq	0x0007ad7c(%rip),%rdi
000000000002d6d4	leaq	0x0007ac55(%rip),%rsi
000000000002d6db	call	*0x0007ac4f(%rip)
000000000002d6e1	leaq	0x0007ac58(%rip),%rsi
000000000002d6e8	movq	%r14,%rdi
000000000002d6eb	movq	%rax,%rdx
000000000002d6ee	call	*0x0007ac4c(%rip)
000000000002d6f4	testb	%al,%al
000000000002d6f6	jne	0x0002d782
000000000002d6fc	movq	0x0007ad4d(%rip),%rdi
000000000002d703	leaq	0x0007ac26(%rip),%rsi
000000000002d70a	call	*0x0007ac20(%rip)
000000000002d710	movq	%rax,%rdi
000000000002d713	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000002d718	movq	%rax,%r15
000000000002d71b	movq	0x0007753e(%rip),%rsi
000000000002d722	movq	%r14,%rdi
000000000002d725	call	*0x000569ad(%rip)
000000000002d72b	leaq	0x0002faf4(%rip),%r8
000000000002d732	leaq	0xd8(%rbp),%rdi
000000000002d736	leaq	0xd0(%rbp),%rsi
000000000002d73a	leaq	0x0002f91d(%rip),%rdx
000000000002d741	leaq	0x0002f946(%rip),%rcx
000000000002d748	leaq	0x00082289(%rip),%r9
000000000002d74f	movq	%r8,0x20(%rsp)
000000000002d754	leaq	0x000820dd(%rip),%rbx
000000000002d75b	movq	%rbx,0x18(%rsp)
000000000002d760	leaq	0x0002faa8(%rip),%r8
000000000002d767	movq	%rax,0x10(%rsp)
000000000002d76c	movq	%r15,0x08(%rsp)
000000000002d771	movq	%r8,(%rsp)
000000000002d775	movl	$0x00000028,%r8d
000000000002d77b	xorb	%al,%al
000000000002d77d	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000002d782	movq	0x0007754f(%rip),%rsi
000000000002d789	movq	0xd8(%rbp),%rdi
000000000002d78d	movq	%r14,%rdx
000000000002d790	call	*0x00056942(%rip)
000000000002d796	addq	$0x40,%rsp
000000000002d79a	popq	%rbx
000000000002d79b	popq	%r12
000000000002d79d	popq	%r14
000000000002d79f	popq	%r15
000000000002d7a1	popq	%rbp
000000000002d7a2	ret
-[DBGGDBUTF8DecoderFilter streamDidEnd:]:
000000000002d7a3	pushq	%rbp
000000000002d7a4	movq	%rsp,%rbp
000000000002d7a7	pushq	%r15
000000000002d7a9	pushq	%r14
000000000002d7ab	pushq	%rbx
000000000002d7ac	subq	$0x38,%rsp
000000000002d7b0	movq	%rdi,%rbx
000000000002d7b3	movq	%rbx,0xe0(%rbp)
000000000002d7b7	movq	%rsi,0xd8(%rbp)
000000000002d7bb	movq	0x00080ea6(%rip),%rax
000000000002d7c2	cmpq	$0x00,(%rbx,%rax)
000000000002d7c7	je	0x0002d946
000000000002d7cd	movq	0x0007ac7c(%rip),%rdi
000000000002d7d4	leaq	0x0007ab05(%rip),%rsi
000000000002d7db	call	*0x0007aaff(%rip)
000000000002d7e1	movq	0x00080e80(%rip),%rcx
000000000002d7e8	movq	(%rbx,%rcx),%rcx
000000000002d7ec	addq	0x00080e7d(%rip),%rbx
000000000002d7f3	movq	0x000774d6(%rip),%rsi
000000000002d7fa	movq	%rax,%rdi
000000000002d7fd	movq	%rbx,%rdx
000000000002d800	movl	$0x00000004,%r8d
000000000002d806	xorl	%r9d,%r9d
000000000002d809	call	*0x000568c9(%rip)
000000000002d80f	movq	%rax,%r14
000000000002d812	testq	%r14,%r14
000000000002d815	jne	0x0002d879
000000000002d817	movq	0x0007ac32(%rip),%rdi
000000000002d81e	leaq	0x0007ab0b(%rip),%rsi
000000000002d825	call	*0x0007ab05(%rip)
000000000002d82b	movq	%rax,%rdi
000000000002d82e	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000002d833	leaq	0xe0(%rbp),%rdi
000000000002d837	leaq	0xd8(%rbp),%rsi
000000000002d83b	leaq	0x0002fa12(%rip),%rdx
000000000002d842	leaq	0x0002f845(%rip),%rcx
000000000002d849	leaq	0x00082168(%rip),%r9
000000000002d850	leaq	0x0002f9b8(%rip),%r8
000000000002d857	leaq	0x0002f9b8(%rip),%rbx
000000000002d85e	movq	%rbx,0x18(%rsp)
000000000002d863	leaq	0x00081fce(%rip),%rbx
000000000002d86a	movq	%rbx,0x10(%rsp)
000000000002d86f	movq	%rax,0x08(%rsp)
000000000002d874	jmp	0x0002d91d
000000000002d879	movq	0x0007abd0(%rip),%rdi
000000000002d880	leaq	0x0007aaa9(%rip),%rsi
000000000002d887	call	*0x0007aaa3(%rip)
000000000002d88d	leaq	0x0007aaac(%rip),%rsi
000000000002d894	movq	%r14,%rdi
000000000002d897	movq	%rax,%rdx
000000000002d89a	call	*0x0007aaa0(%rip)
000000000002d8a0	testb	%al,%al
000000000002d8a2	jne	0x0002d92e
000000000002d8a8	movq	0x0007aba1(%rip),%rdi
000000000002d8af	leaq	0x0007aa7a(%rip),%rsi
000000000002d8b6	call	*0x0007aa74(%rip)
000000000002d8bc	movq	%rax,%rdi
000000000002d8bf	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000002d8c4	movq	%rax,%r15
000000000002d8c7	movq	0x00077392(%rip),%rsi
000000000002d8ce	movq	%r14,%rdi
000000000002d8d1	call	*0x00056801(%rip)
000000000002d8d7	leaq	0x0002f948(%rip),%r8
000000000002d8de	leaq	0xe0(%rbp),%rdi
000000000002d8e2	leaq	0xd8(%rbp),%rsi
000000000002d8e6	leaq	0x0002f967(%rip),%rdx
000000000002d8ed	leaq	0x0002f79a(%rip),%rcx
000000000002d8f4	leaq	0x000820dd(%rip),%r9
000000000002d8fb	movq	%r8,0x20(%rsp)
000000000002d900	leaq	0x00081f31(%rip),%rbx
000000000002d907	movq	%rbx,0x18(%rsp)
000000000002d90c	leaq	0x0002f8fc(%rip),%r8
000000000002d913	movq	%rax,0x10(%rsp)
000000000002d918	movq	%r15,0x08(%rsp)
000000000002d91d	movq	%r8,(%rsp)
000000000002d921	movl	$0x0000003c,%r8d
000000000002d927	xorb	%al,%al
000000000002d929	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000002d92e	movq	0x000773a3(%rip),%rsi
000000000002d935	movq	0xe0(%rbp),%rdi
000000000002d939	movq	%r14,%rdx
000000000002d93c	call	*0x00056796(%rip)
000000000002d942	movq	0xe0(%rbp),%rbx
000000000002d946	movq	0x000771fb(%rip),%rsi
000000000002d94d	movq	%rbx,%rdi
000000000002d950	call	*0x00056782(%rip)
000000000002d956	addq	$0x38,%rsp
000000000002d95a	popq	%rbx
000000000002d95b	popq	%r14
000000000002d95d	popq	%r15
000000000002d95f	popq	%rbp
000000000002d960	ret
-[DBGGDBUTF8EncoderFilter streamDidEnd:]:
000000000002d961	pushq	%rbp
000000000002d962	movq	%rsp,%rbp
000000000002d965	movq	0x000771dc(%rip),%rsi
000000000002d96c	popq	%rbp
000000000002d96d	jmp	*0x00056765(%rip)
-[DBGGDBUTF8EncoderFilter stream:processCharacters:]:
000000000002d973	pushq	%rbp
000000000002d974	movq	%rsp,%rbp
000000000002d977	pushq	%rbx
000000000002d978	pushq	%rax
000000000002d979	movq	%rdi,%rbx
000000000002d97c	movq	0x0007735d(%rip),%rsi
000000000002d983	movq	%rcx,%rdi
000000000002d986	movl	$0x00000004,%edx
000000000002d98b	call	*0x00056747(%rip)
000000000002d991	movq	0x00077260(%rip),%rsi
000000000002d998	movq	%rbx,%rdi
000000000002d99b	movq	%rax,%rdx
000000000002d99e	movq	0x00056733(%rip),%rax
000000000002d9a5	addq	$0x08,%rsp
000000000002d9a9	popq	%rbx
000000000002d9aa	popq	%rbp
000000000002d9ab	jmp	*%rax
-[PBXGDB_Adaptor(TraceLogging) logString:]:
000000000002d9ad	pushq	%rbp
000000000002d9ae	movq	%rsp,%rbp
000000000002d9b1	movq	0x00077360(%rip),%rsi
000000000002d9b8	movl	$0x00000001,%ecx
000000000002d9bd	popq	%rbp
000000000002d9be	jmp	*0x00056714(%rip)
-[PBXGDB_Adaptor(TraceLogging) logMessage:]:
000000000002d9c4	pushq	%rbp
000000000002d9c5	movq	%rsp,%rbp
000000000002d9c8	movq	0x00077349(%rip),%rsi
000000000002d9cf	movl	$0x00000001,%ecx
000000000002d9d4	popq	%rbp
000000000002d9d5	jmp	*0x000566fd(%rip)
+[PBXGDB_Adaptor name]:
000000000002d9db	pushq	%rbp
000000000002d9dc	movq	%rsp,%rbp
000000000002d9df	leaq	0x00082092(%rip),%rax
000000000002d9e6	popq	%rbp
000000000002d9e7	ret
-[PBXGDB_Adaptor dealloc]:
000000000002d9e8	pushq	%rbp
000000000002d9e9	movq	%rsp,%rbp
000000000002d9ec	pushq	%r14
000000000002d9ee	pushq	%rbx
000000000002d9ef	movq	%rdi,%rbx
000000000002d9f2	movq	0x0007738f(%rip),%rsi
000000000002d9f9	movq	0x0007aac8(%rip),%rdi
000000000002da00	movq	0x000566d1(%rip),%r14
000000000002da07	call	*%r14
000000000002da0a	movq	0x0007737f(%rip),%rsi
000000000002da11	movq	%rax,%rdi
000000000002da14	movq	%rbx,%rdx
000000000002da17	call	*%r14
000000000002da1a	movq	0x00080c77(%rip),%rax
000000000002da21	movq	(%rbx,%rax),%rdi
000000000002da25	movq	0x000772fc(%rip),%rsi
000000000002da2c	xorl	%edx,%edx
000000000002da2e	call	*%r14
000000000002da31	movq	0x00080ca8(%rip),%rax
000000000002da38	movq	(%rbx,%rax),%rdi
000000000002da3c	testq	%rdi,%rdi
000000000002da3f	je	0x0002da4e
000000000002da41	movq	0x00077350(%rip),%rsi
000000000002da48	call	*0x0005668a(%rip)
000000000002da4e	movq	0x0007734b(%rip),%rsi
000000000002da55	movq	%rbx,%rdi
000000000002da58	xorl	%edx,%edx
000000000002da5a	popq	%rbx
000000000002da5b	popq	%r14
000000000002da5d	popq	%rbp
000000000002da5e	jmp	*0x00056674(%rip)
-[PBXGDB_Adaptor gdbTask]:
000000000002da64	pushq	%rbp
000000000002da65	movq	%rsp,%rbp
000000000002da68	movq	0x00077391(%rip),%rsi
000000000002da6f	call	*0x00056663(%rip)
000000000002da75	movq	0x0007738c(%rip),%rsi
000000000002da7c	movq	%rax,%rdi
000000000002da7f	movq	0x00056652(%rip),%rax
000000000002da86	popq	%rbp
000000000002da87	jmp	*%rax
-[PBXGDB_Adaptor errorToDebuggerConsole:]:
000000000002da89	pushq	%rbp
000000000002da8a	movq	%rsp,%rbp
000000000002da8d	popq	%rbp
000000000002da8e	ret
-[PBXGDB_Adaptor errorForMICommand:errorMessage:]:
000000000002da8f	pushq	%rbp
000000000002da90	movq	%rsp,%rbp
000000000002da93	pushq	%r15
000000000002da95	pushq	%r14
000000000002da97	pushq	%rbx
000000000002da98	pushq	%rax
000000000002da99	movq	%rdx,%r15
000000000002da9c	movq	%rdi,%r14
000000000002da9f	leaq	0x00082992(%rip),%rbx
000000000002daa6	testq	%rcx,%rcx
000000000002daa9	cmovneq	%rcx,%rbx
000000000002daad	testq	%r15,%r15
000000000002dab0	je	0x0002daf7
000000000002dab2	movq	0x0007aa27(%rip),%rdi
000000000002dab9	leaq	0x0007a870(%rip),%rsi
000000000002dac0	call	*0x0007a86a(%rip)
000000000002dac6	leaq	0x0007a873(%rip),%rsi
000000000002dacd	movq	%r15,%rdi
000000000002dad0	movq	%rax,%rdx
000000000002dad3	call	*0x0007a867(%rip)
000000000002dad9	testb	%al,%al
000000000002dadb	je	0x0002daf7
000000000002dadd	movq	0x00077344(%rip),%rsi
000000000002dae4	movq	%r14,%rdi
000000000002dae7	addq	$0x08,%rsp
000000000002daeb	popq	%rbx
000000000002daec	popq	%r14
000000000002daee	popq	%r15
000000000002daf0	popq	%rbp
000000000002daf1	jmp	*0x000565e1(%rip)
000000000002daf7	movq	0x00077332(%rip),%rsi
000000000002dafe	movq	%r14,%rdi
000000000002db01	movq	%rbx,%rdx
000000000002db04	addq	$0x08,%rsp
000000000002db08	popq	%rbx
000000000002db09	popq	%r14
000000000002db0b	popq	%r15
000000000002db0d	popq	%rbp
000000000002db0e	jmp	*0x000565c4(%rip)
-[PBXGDB_Adaptor uniqueFDPath:]:
000000000002db14	pushq	%rbp
000000000002db15	movq	%rsp,%rbp
000000000002db18	pushq	%r15
000000000002db1a	pushq	%r14
000000000002db1c	pushq	%r13
000000000002db1e	pushq	%r12
000000000002db20	pushq	%rbx
000000000002db21	pushq	%rax
000000000002db22	movq	%rdx,%rbx
000000000002db25	callq	0x0004e6aa	; symbol stub for: _getpid
000000000002db2a	movq	0x00077047(%rip),%rsi
000000000002db31	movq	0x0007a918(%rip),%rdi
000000000002db38	leaq	0x00082af9(%rip),%rdx
000000000002db3f	movq	0x00056592(%rip),%r15
000000000002db46	movl	%eax,%ecx
000000000002db48	movq	%rbx,%r8
000000000002db4b	xorb	%al,%al
000000000002db4d	call	*%r15
000000000002db50	movq	%rax,%r12
000000000002db53	movq	0x0007742e(%rip),%rsi
000000000002db5a	movq	0x0007a9cf(%rip),%rdi
000000000002db61	call	*%r15
000000000002db64	movq	%rax,%r14
000000000002db67	movq	0x00077422(%rip),%rsi
000000000002db6e	movq	%r14,%rdi
000000000002db71	movq	%r12,%rdx
000000000002db74	call	*%r15
000000000002db77	testb	%al,%al
000000000002db79	je	0x0002dbcb
000000000002db7b	movq	%r12,%r15
000000000002db7e	movl	$0x00000002,%ebx
000000000002db83	movq	0x0005654e(%rip),%r13
000000000002db8a	movq	0x0007a8bf(%rip),%rdi
000000000002db91	movq	0x00076fe0(%rip),%rsi
000000000002db98	leaq	0x00082ab9(%rip),%rdx
000000000002db9f	movq	%r15,%rcx
000000000002dba2	movq	%rbx,%r8
000000000002dba5	xorb	%al,%al
000000000002dba7	call	*%r13
000000000002dbaa	movq	%rax,%r12
000000000002dbad	movq	%r14,%rdi
000000000002dbb0	movq	0x000773d9(%rip),%rsi
000000000002dbb7	movq	%r12,%rdx
000000000002dbba	call	*%r13
000000000002dbbd	testb	%al,%al
000000000002dbbf	je	0x0002dbcb
000000000002dbc1	cmpq	$0x64,%rbx
000000000002dbc5	leaq	0x01(%rbx),%rbx
000000000002dbc9	jb	0x0002db8a
000000000002dbcb	movq	%r12,%rax
000000000002dbce	addq	$0x08,%rsp
000000000002dbd2	popq	%rbx
000000000002dbd3	popq	%r12
000000000002dbd5	popq	%r13
000000000002dbd7	popq	%r14
000000000002dbd9	popq	%r15
000000000002dbdb	popq	%rbp
000000000002dbdc	ret
-[PBXGDB_Adaptor startFDPassingService:]:
000000000002dbdd	pushq	%rbp
000000000002dbde	movq	%rsp,%rbp
000000000002dbe1	pushq	%r15
000000000002dbe3	pushq	%r14
000000000002dbe5	pushq	%r12
000000000002dbe7	pushq	%rbx
000000000002dbe8	subq	$0x000000b0,%rsp
000000000002dbef	movq	%rdi,%r15
000000000002dbf2	movl	%edx,0xdc(%rbp)
000000000002dbf5	leaq	0xdc(%rbp),%rdx
000000000002dbf9	xorl	%edi,%edi
000000000002dbfb	movl	$0x00000009,%esi
000000000002dc00	callq	0x0004e74c	; symbol stub for: _CFNumberCreate
000000000002dc05	movq	%rax,%r14
000000000002dc08	movq	$0x00000000,0xb0(%rbp)
000000000002dc10	movq	%r14,0xb8(%rbp)
000000000002dc14	movq	$0x00000000,0xd0(%rbp)
000000000002dc1c	movq	$0x00000000,0xc8(%rbp)
000000000002dc24	movq	$0x00000000,0xc0(%rbp)
000000000002dc2c	leaq	0x00000188(%rip),%r9
000000000002dc33	leaq	0xb0(%rbp),%rax
000000000002dc37	movq	%rax,(%rsp)
000000000002dc3b	xorl	%edi,%edi
000000000002dc3d	movl	$0x00000001,%esi
000000000002dc42	xorl	%edx,%edx
000000000002dc44	xorl	%ecx,%ecx
000000000002dc46	movl	$0x00000002,%r8d
000000000002dc4c	callq	0x0004e76a	; symbol stub for: _CFSocketCreate
000000000002dc51	movq	%rax,%r12
000000000002dc54	testq	%r12,%r12
000000000002dc57	jne	0x0002dc61
000000000002dc59	movq	%r14,%rdi
000000000002dc5c	jmp	0x0002dda6
000000000002dc61	movq	%r12,%rdi
000000000002dc64	callq	0x0004e776	; symbol stub for: _CFSocketGetNative
000000000002dc69	movl	$0x00000001,0xac(%rbp)
000000000002dc70	leaq	0xac(%rbp),%rcx
000000000002dc74	movl	%eax,%edi
000000000002dc76	movl	$0x0000ffff,%esi
000000000002dc7b	movl	$0x00000004,%edx
000000000002dc80	movl	$0x00000004,%r8d
000000000002dc86	callq	0x0004e6f2	; symbol stub for: _setsockopt
000000000002dc8b	xorps	%xmm0,%xmm0
000000000002dc8e	movaps	%xmm0,0x90(%rbp)
000000000002dc92	movaps	%xmm0,0x80(%rbp)
000000000002dc96	movaps	%xmm0,0xffffff70(%rbp)
000000000002dc9d	movaps	%xmm0,0xffffff60(%rbp)
000000000002dca4	movaps	%xmm0,0xffffff50(%rbp)
000000000002dcab	movaps	%xmm0,0xffffff40(%rbp)
000000000002dcb2	movw	$0x0000,0xa8(%rbp)
000000000002dcb8	movq	$0x00000000,0xa0(%rbp)
000000000002dcc0	movb	$0x01,0xffffff41(%rbp)
000000000002dcc7	movq	0x0005640a(%rip),%rbx
000000000002dcce	movq	0x0007731b(%rip),%rsi
000000000002dcd5	movslq	0xdc(%rbp),%rdx
000000000002dcd9	movq	%r15,%rdi
000000000002dcdc	call	*%rbx
000000000002dcde	movq	0x00080a2b(%rip),%rdx
000000000002dce5	movq	%rax,%rdi
000000000002dce8	movq	%r15,%rsi
000000000002dceb	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000002dcf0	movq	0x00080a19(%rip),%rax
000000000002dcf7	movq	(%r15,%rax),%rdi
000000000002dcfb	movq	0x00076e2e(%rip),%rsi
000000000002dd02	call	*%rbx
000000000002dd04	leaq	0xffffff42(%rbp),%rbx
000000000002dd0b	movq	%rbx,%rdi
000000000002dd0e	movq	%rax,%rsi
000000000002dd11	movl	$0x00000068,%edx
000000000002dd16	callq	0x0004e70a	; symbol stub for: _strlcpy
000000000002dd1b	movq	%rbx,%rdi
000000000002dd1e	callq	0x0004e710	; symbol stub for: _strlen
000000000002dd23	movq	0x00056386(%rip),%rcx
000000000002dd2a	movq	(%rcx),%rdi
000000000002dd2d	leaq	0xffffff40(%rbp),%rsi
000000000002dd34	addl	$0x02,%eax
000000000002dd37	movb	%al,0xffffff40(%rbp)
000000000002dd3d	movl	$0x0000006a,%edx
000000000002dd42	callq	0x0004e740	; symbol stub for: _CFDataCreate
000000000002dd47	movq	%rax,%rbx
000000000002dd4a	movq	%r12,%rdi
000000000002dd4d	movq	%rbx,%rsi
000000000002dd50	callq	0x0004e782	; symbol stub for: _CFSocketSetAddress
000000000002dd55	movq	%rax,%r15
000000000002dd58	movq	%rbx,%rdi
000000000002dd5b	callq	0x0004e758	; symbol stub for: _CFRelease
000000000002dd60	testq	%r15,%r15
000000000002dd63	je	0x0002dd72
000000000002dd65	movq	%r14,%rdi
000000000002dd68	callq	0x0004e758	; symbol stub for: _CFRelease
000000000002dd6d	movq	%r12,%rdi
000000000002dd70	jmp	0x0002dda6
000000000002dd72	xorl	%edi,%edi
000000000002dd74	movq	%r12,%rsi
000000000002dd77	xorl	%edx,%edx
000000000002dd79	callq	0x0004e770	; symbol stub for: _CFSocketCreateRunLoopSource
000000000002dd7e	movq	%rax,%rbx
000000000002dd81	movq	%r12,%rdi
000000000002dd84	callq	0x0004e758	; symbol stub for: _CFRelease
000000000002dd89	callq	0x0004e764	; symbol stub for: _CFRunLoopGetMain
000000000002dd8e	movq	0x00056323(%rip),%rcx
000000000002dd95	movq	(%rcx),%rdx
000000000002dd98	movq	%rax,%rdi
000000000002dd9b	movq	%rbx,%rsi
000000000002dd9e	callq	0x0004e75e	; symbol stub for: _CFRunLoopAddSource
000000000002dda3	movq	%rbx,%rdi
000000000002dda6	callq	0x0004e758	; symbol stub for: _CFRelease
000000000002ddab	addq	$0x000000b0,%rsp
000000000002ddb2	popq	%rbx
000000000002ddb3	popq	%r12
000000000002ddb5	popq	%r14
000000000002ddb7	popq	%r15
000000000002ddb9	popq	%rbp
000000000002ddba	ret
_RelayDebuggerFD:
000000000002ddbb	pushq	%rbp
000000000002ddbc	movq	%rsp,%rbp
000000000002ddbf	pushq	%r15
000000000002ddc1	pushq	%r14
000000000002ddc3	pushq	%r12
000000000002ddc5	pushq	%rbx
000000000002ddc6	subq	$0x00000170,%rsp
000000000002ddcd	movq	%r8,%r15
000000000002ddd0	movq	%rdi,%r14
000000000002ddd3	movq	0x000562c6(%rip),%rax
000000000002ddda	movq	(%rax),%rax
000000000002dddd	movq	%rax,0xd8(%rbp)
000000000002dde1	cmpq	$0x02,%rsi
000000000002dde5	jne	0x0002df23
000000000002ddeb	testq	%rcx,%rcx
000000000002ddee	je	0x0002df38
000000000002ddf4	movl	(%rcx),%r12d
000000000002ddf7	cmpl	$0xff,%r12d
000000000002ddfb	je	0x0002df38
000000000002de01	movl	$0x000000ff,0xfffffecc(%rbp)
000000000002de0b	leaq	0xfffffed0(%rbp),%rsi
000000000002de12	leaq	0xfffffecc(%rbp),%rdx
000000000002de19	movl	%r12d,%edi
000000000002de1c	callq	0x0004e6a4	; symbol stub for: _getpeername
000000000002de21	movl	$0x00000010,%edi
000000000002de26	callq	0x0004e6bc	; symbol stub for: _malloc
000000000002de2b	movq	%rax,%rbx
000000000002de2e	movq	$0x00000000,0xfffffe98(%rbp)
000000000002de39	movl	$0x00000000,0xfffffea0(%rbp)
000000000002de43	leaq	0xfffffe7c(%rbp),%rdx
000000000002de4a	leaq	0xfffffe96(%rbp),%rax
000000000002de51	leaq	0xfffffe80(%rbp),%rcx
000000000002de58	movq	%rbx,0xfffffeb8(%rbp)
000000000002de5f	movl	$0x00000010,0xfffffec0(%rbp)
000000000002de69	movw	$0x0000,0xfffffe96(%rbp)
000000000002de72	movq	%rcx,0xfffffea8(%rbp)
000000000002de79	movl	$0x00000001,0xfffffeb0(%rbp)
000000000002de83	movq	%rax,0xfffffe80(%rbp)
000000000002de8a	movq	$0x00000002,0xfffffe88(%rbp)
000000000002de95	movl	$0x00000010,(%rbx)
000000000002de9b	movl	$0x0000ffff,0x04(%rbx)
000000000002dea2	movl	$0x00000001,0x08(%rbx)
000000000002dea9	movq	%r15,%rdi
000000000002deac	movl	$0x00000009,%esi
000000000002deb1	callq	0x0004e752	; symbol stub for: _CFNumberGetValue
000000000002deb6	movq	%r15,%rdi
000000000002deb9	callq	0x0004e758	; symbol stub for: _CFRelease
000000000002debe	movl	0xfffffe7c(%rbp),%eax
000000000002dec4	testl	%eax,%eax
000000000002dec6	je	0x0002df23
000000000002dec8	movl	%eax,0x0c(%rbx)
000000000002decb	leaq	0xfffffe98(%rbp),%rsi
000000000002ded2	movl	%r12d,%edi
000000000002ded5	xorl	%edx,%edx
000000000002ded7	callq	0x0004e6ec	; symbol stub for: _sendmsg
000000000002dedc	cmpq	$0x02,%rax
000000000002dee0	je	0x0002def6
000000000002dee2	movl	0xfffffe7c(%rbp),%esi
000000000002dee8	leaq	0x00082a89(%rip),%rdi
000000000002deef	xorb	%al,%al
000000000002def1	callq	0x0004e5c0	; symbol stub for: _NSLog
000000000002def6	movl	%r12d,%edi
000000000002def9	callq	0x0004e698	; symbol stub for: _close
000000000002defe	cmpl	$0xff,%eax
000000000002df01	jne	0x0002df1b
000000000002df03	callq	0x0004e67a	; symbol stub for: ___error
000000000002df08	movl	(%rax),%edx
000000000002df0a	leaq	0x00082a87(%rip),%rdi
000000000002df11	movl	%r12d,%esi
000000000002df14	xorb	%al,%al
000000000002df16	callq	0x0004e5c0	; symbol stub for: _NSLog
000000000002df1b	movq	%r14,%rdi
000000000002df1e	callq	0x0004e77c	; symbol stub for: _CFSocketInvalidate
000000000002df23	movq	0x00056176(%rip),%rax
000000000002df2a	movq	(%rax),%rax
000000000002df2d	cmpq	0xd8(%rbp),%rax
000000000002df31	je	0x0002df57
000000000002df33	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
000000000002df38	leaq	0x0002f919(%rip),%rdi
000000000002df3f	leaq	0x0002f922(%rip),%rsi
000000000002df46	leaq	0x0002f999(%rip),%rcx
000000000002df4d	movl	$0x00000042,%edx
000000000002df52	callq	0x0004e674	; symbol stub for: ___assert_rtn
000000000002df57	addq	$0x00000170,%rsp
000000000002df5e	popq	%rbx
000000000002df5f	popq	%r12
000000000002df61	popq	%r14
000000000002df63	popq	%r15
000000000002df65	popq	%rbp
000000000002df66	ret
-[PBXGDB_Adaptor debugServiceFDPath]:
000000000002df67	pushq	%rbp
000000000002df68	movq	%rsp,%rbp
000000000002df6b	pushq	%r14
000000000002df6d	pushq	%rbx
000000000002df6e	movq	%rdi,%rbx
000000000002df71	xorl	%eax,%eax
000000000002df73	movq	0x00080796(%rip),%rcx
000000000002df7a	cmpq	$0x00,(%rbx,%rcx)
000000000002df7f	jne	0x0002dfc7
000000000002df81	movq	0x00076dd8(%rip),%rsi
000000000002df88	movq	0x00056149(%rip),%r14
000000000002df8f	movq	%rbx,%rdi
000000000002df92	call	*%r14
000000000002df95	movq	0x0007705c(%rip),%rsi
000000000002df9c	movq	%rax,%rdi
000000000002df9f	call	*%r14
000000000002dfa2	movl	%eax,%ecx
000000000002dfa4	xorl	%eax,%eax
000000000002dfa6	testl	%ecx,%ecx
000000000002dfa8	js	0x0002dfc7
000000000002dfaa	movq	0x0007704f(%rip),%rsi
000000000002dfb1	movq	%rbx,%rdi
000000000002dfb4	movl	%ecx,%edx
000000000002dfb6	call	*0x0005611c(%rip)
000000000002dfbc	movq	0x0008074d(%rip),%rax
000000000002dfc3	movq	(%rbx,%rax),%rax
000000000002dfc7	popq	%rbx
000000000002dfc8	popq	%r14
000000000002dfca	popq	%rbp
000000000002dfcb	ret
-[PBXGDB_Adaptor cleanupFilePassingFile]:
000000000002dfcc	pushq	%rbp
000000000002dfcd	movq	%rsp,%rbp
000000000002dfd0	pushq	%r14
000000000002dfd2	pushq	%rbx
000000000002dfd3	movq	%rdi,%rax
000000000002dfd6	movq	0x00080733(%rip),%rdx
000000000002dfdd	movq	(%rax,%rdx),%rbx
000000000002dfe1	testq	%rbx,%rbx
000000000002dfe4	je	0x0002e04c
000000000002dfe6	addq	%rax,%rdx
000000000002dfe9	subq	%rax,%rdx
000000000002dfec	xorl	%edi,%edi
000000000002dfee	movq	%rax,%rsi
000000000002dff1	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000002dff6	movq	0x00076f8b(%rip),%rsi
000000000002dffd	movq	0x0007a52c(%rip),%rdi
000000000002e004	movq	0x000560cd(%rip),%r14
000000000002e00b	call	*%r14
000000000002e00e	movq	0x00076f7b(%rip),%rsi
000000000002e015	movq	%rax,%rdi
000000000002e018	movq	%rbx,%rdx
000000000002e01b	call	*%r14
000000000002e01e	testb	%al,%al
000000000002e020	je	0x0002e04c
000000000002e022	movq	0x00076f5f(%rip),%rsi
000000000002e029	movq	0x0007a500(%rip),%rdi
000000000002e030	movq	0x000560a1(%rip),%r14
000000000002e037	call	*%r14
000000000002e03a	movq	0x00076fc7(%rip),%rsi
000000000002e041	movq	%rax,%rdi
000000000002e044	movq	%rbx,%rdx
000000000002e047	xorl	%ecx,%ecx
000000000002e049	call	*%r14
000000000002e04c	popq	%rbx
000000000002e04d	popq	%r14
000000000002e04f	popq	%rbp
000000000002e050	ret
-[PBXGDB_Adaptor _connectToGDBRemote]:
000000000002e051	pushq	%rbp
000000000002e052	movq	%rsp,%rbp
000000000002e055	pushq	%r14
000000000002e057	pushq	%rbx
000000000002e058	movq	%rdi,%r14
000000000002e05b	movq	0x00076a1e(%rip),%rsi
000000000002e062	movq	0x0007a4ff(%rip),%rdi
000000000002e069	call	*0x00056069(%rip)
000000000002e06f	movq	%rax,%rbx
000000000002e072	movq	0x00076ce7(%rip),%rsi
000000000002e079	movq	%r14,%rdi
000000000002e07c	call	*0x00056056(%rip)
000000000002e082	movq	0x00076cdf(%rip),%rsi
000000000002e089	movq	%rax,%rdi
000000000002e08c	call	*0x00056046(%rip)
000000000002e092	movsbl	%al,%edx
000000000002e095	movq	0x00076f74(%rip),%rsi
000000000002e09c	movq	%rbx,%rdi
000000000002e09f	call	*0x00056033(%rip)
000000000002e0a5	movq	0x00076f6c(%rip),%rsi
000000000002e0ac	movq	%r14,%rdi
000000000002e0af	call	*0x00056023(%rip)
000000000002e0b5	movq	0x00076f64(%rip),%rsi
000000000002e0bc	movq	%rbx,%rdi
000000000002e0bf	movq	%rax,%rdx
000000000002e0c2	call	*0x00056010(%rip)
000000000002e0c8	movq	0x00076ce9(%rip),%rsi
000000000002e0cf	movq	%r14,%rdi
000000000002e0d2	movq	%rbx,%rdx
000000000002e0d5	movq	0x00055ffc(%rip),%rax
000000000002e0dc	popq	%rbx
000000000002e0dd	popq	%r14
000000000002e0df	popq	%rbp
000000000002e0e0	jmp	*%rax
-[PBXGDB_Adaptor _remoteGDBSetupStageOne]:
000000000002e0e2	pushq	%rbp
000000000002e0e3	movq	%rsp,%rbp
000000000002e0e6	pushq	%r15
000000000002e0e8	pushq	%r14
000000000002e0ea	pushq	%rbx
000000000002e0eb	pushq	%rax
000000000002e0ec	movq	%rdi,%r15
000000000002e0ef	movq	0x000805ca(%rip),%rax
000000000002e0f6	cmpb	$0x01,(%r15,%rax)
000000000002e0fb	jne	0x0002e175
000000000002e0fd	movq	0x0007697c(%rip),%rsi
000000000002e104	movq	0x0007a40d(%rip),%rdi
000000000002e10b	movq	0x00055fc6(%rip),%rbx
000000000002e112	call	*%rbx
000000000002e114	movq	%rax,%r14
000000000002e117	movq	0x00076c42(%rip),%rsi
000000000002e11e	movq	%r15,%rdi
000000000002e121	call	*%rbx
000000000002e123	movq	0x00076e2e(%rip),%rsi
000000000002e12a	movq	%rax,%rdi
000000000002e12d	call	*%rbx
000000000002e12f	testq	%rax,%rax
000000000002e132	je	0x0002e175
000000000002e134	movq	0x00076a3d(%rip),%rsi
000000000002e13b	movq	0x0007a30e(%rip),%rdi
000000000002e142	leaq	0x0008252f(%rip),%rdx
000000000002e149	movq	0x00055f88(%rip),%rbx
000000000002e150	movq	%rax,%rcx
000000000002e153	xorb	%al,%al
000000000002e155	call	*%rbx
000000000002e157	movq	0x00076de2(%rip),%rsi
000000000002e15e	movq	%r14,%rdi
000000000002e161	movq	%rax,%rdx
000000000002e164	call	*%rbx
000000000002e166	movq	0x00076c4b(%rip),%rsi
000000000002e16d	movq	%r15,%rdi
000000000002e170	movq	%r14,%rdx
000000000002e173	call	*%rbx
000000000002e175	movq	0x00080554(%rip),%rax
000000000002e17c	cmpb	$0x00,(%r15,%rax)
000000000002e181	jne	0x0002e1c2
000000000002e183	movq	0x000768f6(%rip),%rsi
000000000002e18a	movq	0x0007a387(%rip),%rdi
000000000002e191	movq	0x00055f40(%rip),%r14
000000000002e198	call	*%r14
000000000002e19b	movq	%rax,%rbx
000000000002e19e	movq	0x00076d9b(%rip),%rsi
000000000002e1a5	leaq	0x000824ec(%rip),%rdx
000000000002e1ac	movq	%rbx,%rdi
000000000002e1af	call	*%r14
000000000002e1b2	movq	0x00076bff(%rip),%rsi
000000000002e1b9	movq	%r15,%rdi
000000000002e1bc	movq	%rbx,%rdx
000000000002e1bf	call	*%r14
000000000002e1c2	movq	0x000768b7(%rip),%rsi
000000000002e1c9	movq	0x0007a348(%rip),%rdi
000000000002e1d0	movq	0x00055f01(%rip),%r14
000000000002e1d7	call	*%r14
000000000002e1da	movq	%rax,%rbx
000000000002e1dd	movq	0x00076d5c(%rip),%rsi
000000000002e1e4	leaq	0x000824cd(%rip),%rdx
000000000002e1eb	movq	%rbx,%rdi
000000000002e1ee	call	*%r14
000000000002e1f1	movq	0x00076bc0(%rip),%rsi
000000000002e1f8	movq	%r15,%rdi
000000000002e1fb	movq	%rbx,%rdx
000000000002e1fe	call	*%r14
000000000002e201	movq	0x00076e28(%rip),%rsi
000000000002e208	movq	%r15,%rdi
000000000002e20b	call	*%r14
000000000002e20e	movq	0x000804b3(%rip),%rax
000000000002e215	cmpb	$0x00,(%r15,%rax)
000000000002e21a	je	0x0002e227
000000000002e21c	addq	$0x08,%rsp
000000000002e220	popq	%rbx
000000000002e221	popq	%r14
000000000002e223	popq	%r15
000000000002e225	popq	%rbp
000000000002e226	ret
000000000002e227	movq	0x00076852(%rip),%rsi
000000000002e22e	movq	0x0007a303(%rip),%rdi
000000000002e235	call	*0x00055e9d(%rip)
000000000002e23b	movq	%rax,%rbx
000000000002e23e	movq	0x00076d53(%rip),%rsi
000000000002e245	leaq	0x0008248c(%rip),%rdx
000000000002e24c	movq	%rbx,%rdi
000000000002e24f	call	*0x00055e83(%rip)
000000000002e255	movq	0x00076b5c(%rip),%rsi
000000000002e25c	movq	%r15,%rdi
000000000002e25f	movq	%rbx,%rdx
000000000002e262	call	*0x00055e70(%rip)
000000000002e268	movq	0x00076811(%rip),%rsi
000000000002e26f	movq	0x0007a2c2(%rip),%rdi
000000000002e276	call	*0x00055e5c(%rip)
000000000002e27c	movq	%rax,%rbx
000000000002e27f	leaq	0x00082472(%rip),%rdx
000000000002e286	movq	0x00076d0b(%rip),%rsi
000000000002e28d	movq	%rbx,%rdi
000000000002e290	call	*0x00055e42(%rip)
000000000002e296	movq	0x00076b1b(%rip),%rsi
000000000002e29d	movq	%r15,%rdi
000000000002e2a0	movq	%rbx,%rdx
000000000002e2a3	call	*0x00055e2f(%rip)
000000000002e2a9	movq	0x000767d0(%rip),%rsi
000000000002e2b0	movq	0x0007a281(%rip),%rdi
000000000002e2b7	call	*0x00055e1b(%rip)
000000000002e2bd	movq	%rax,%rbx
000000000002e2c0	leaq	0x00082451(%rip),%rdx
000000000002e2c7	movq	0x00076cca(%rip),%rsi
000000000002e2ce	movq	%rbx,%rdi
000000000002e2d1	call	*0x00055e01(%rip)
000000000002e2d7	movq	0x00076ada(%rip),%rsi
000000000002e2de	movq	%r15,%rdi
000000000002e2e1	movq	%rbx,%rdx
000000000002e2e4	movq	0x00055ded(%rip),%rax
000000000002e2eb	addq	$0x08,%rsp
000000000002e2ef	popq	%rbx
000000000002e2f0	popq	%r14
000000000002e2f2	popq	%r15
000000000002e2f4	popq	%rbp
000000000002e2f5	jmp	*%rax
-[PBXGDB_Adaptor requestRestartExecutable]:
000000000002e2f7	pushq	%rbp
000000000002e2f8	movq	%rsp,%rbp
000000000002e2fb	pushq	%r14
000000000002e2fd	pushq	%rbx
000000000002e2fe	movq	%rdi,%rbx
000000000002e301	leaq	0x00081190(%rip),%rax
000000000002e308	movq	(%rax),%rax
000000000002e30b	incq	(%rbx,%rax)
000000000002e30f	movq	0x000803f2(%rip),%rax
000000000002e316	movb	$0x01,(%rbx,%rax)
000000000002e31a	movq	0x00076a7f(%rip),%rsi
000000000002e321	xorl	%edx,%edx
000000000002e323	call	*0x00055daf(%rip)
000000000002e329	movq	0x00076ac8(%rip),%rsi
000000000002e330	movq	%rbx,%rdi
000000000002e333	call	*0x00055d9f(%rip)
000000000002e339	movq	0x00076d80(%rip),%rsi
000000000002e340	movq	%rax,%rdi
000000000002e343	call	*0x00055d8f(%rip)
000000000002e349	leaq	0x00079f90(%rip),%rsi
000000000002e350	movq	0x0007a231(%rip),%rdi
000000000002e357	call	*0x00079f83(%rip)
000000000002e35d	movq	0x0007670c(%rip),%rsi
000000000002e364	movq	%rax,%rdi
000000000002e367	call	*0x00055d6b(%rip)
000000000002e36d	movq	%rax,%r14
000000000002e370	movq	0x00076a59(%rip),%rsi
000000000002e377	movq	%rbx,%rdi
000000000002e37a	call	*0x00055d58(%rip)
000000000002e380	movq	0x00076a51(%rip),%rsi
000000000002e387	movq	%r14,%rdi
000000000002e38a	movq	%rax,%rdx
000000000002e38d	call	*0x00055d45(%rip)
000000000002e393	movq	0x00076a36(%rip),%rsi
000000000002e39a	movq	%rbx,%rdi
000000000002e39d	call	*0x00055d35(%rip)
000000000002e3a3	movq	0x00076a36(%rip),%rsi
000000000002e3aa	movq	%rax,%rdi
000000000002e3ad	movq	%r14,%rdx
000000000002e3b0	movq	0x00055d21(%rip),%rax
000000000002e3b7	popq	%rbx
000000000002e3b8	popq	%r14
000000000002e3ba	popq	%rbp
000000000002e3bb	jmp	*%rax
-[PBXGDB_Adaptor runTarget]:
000000000002e3bd	pushq	%rbp
000000000002e3be	movq	%rsp,%rbp
000000000002e3c1	leaq	0x000810d0(%rip),%rax
000000000002e3c8	movq	(%rax),%rax
000000000002e3cb	incq	(%rdi,%rax)
000000000002e3cf	movq	0x00076cda(%rip),%rsi
000000000002e3d6	popq	%rbp
000000000002e3d7	jmp	*0x00055cfb(%rip)
-[PBXGDB_Adaptor processAsynchronousResultList:]:
000000000002e3dd	pushq	%rbp
000000000002e3de	movq	%rsp,%rbp
000000000002e3e1	popq	%rbp
000000000002e3e2	ret
-[PBXGDB_Adaptor processInferiorOutput:]:
000000000002e3e3	pushq	%rbp
000000000002e3e4	movq	%rsp,%rbp
000000000002e3e7	movq	0x00080312(%rip),%rax
000000000002e3ee	movq	(%rdi,%rax),%rdi
000000000002e3f2	movq	0x00076ccf(%rip),%rsi
000000000002e3f9	popq	%rbp
000000000002e3fa	jmp	*0x00055cd8(%rip)
-[PBXGDB_Adaptor processOutputText:]:
000000000002e400	pushq	%rbp
000000000002e401	movq	%rsp,%rbp
000000000002e404	popq	%rbp
000000000002e405	ret
-[PBXGDB_Adaptor streamDidEnd:]:
000000000002e406	pushq	%rbp
000000000002e407	movq	%rsp,%rbp
000000000002e40a	popq	%rbp
000000000002e40b	ret
-[PBXGDB_Adaptor threadRequestStepInstruction:]:
000000000002e40c	pushq	%rbp
000000000002e40d	movq	%rsp,%rbp
000000000002e410	pushq	%rbx
000000000002e411	pushq	%rax
000000000002e412	leaq	0x0008107f(%rip),%rax
000000000002e419	movq	(%rax),%rax
000000000002e41c	incq	(%rdi,%rax)
000000000002e420	movq	0x00080259(%rip),%rax
000000000002e427	movq	(%rdi,%rax),%rbx
000000000002e42b	movq	0x00076cbe(%rip),%rsi
000000000002e432	movq	%rdx,%rdi
000000000002e435	call	*0x00055c9d(%rip)
000000000002e43b	movq	0x00076cbe(%rip),%rsi
000000000002e442	movq	%rbx,%rdi
000000000002e445	movq	%rax,%rdx
000000000002e448	movq	0x00055c89(%rip),%rax
000000000002e44f	addq	$0x08,%rsp
000000000002e453	popq	%rbx
000000000002e454	popq	%rbp
000000000002e455	jmp	*%rax
-[PBXGDB_Adaptor threadRequestNextInstruction:]:
000000000002e457	pushq	%rbp
000000000002e458	movq	%rsp,%rbp
000000000002e45b	pushq	%rbx
000000000002e45c	pushq	%rax
000000000002e45d	leaq	0x00081034(%rip),%rax
000000000002e464	movq	(%rax),%rax
000000000002e467	incq	(%rdi,%rax)
000000000002e46b	movq	0x0008020e(%rip),%rax
000000000002e472	movq	(%rdi,%rax),%rbx
000000000002e476	movq	0x00076c73(%rip),%rsi
000000000002e47d	movq	%rdx,%rdi
000000000002e480	call	*0x00055c52(%rip)
000000000002e486	movq	0x00076c7b(%rip),%rsi
000000000002e48d	movq	%rbx,%rdi
000000000002e490	movq	%rax,%rdx
000000000002e493	movq	0x00055c3e(%rip),%rax
000000000002e49a	addq	$0x08,%rsp
000000000002e49e	popq	%rbx
000000000002e49f	popq	%rbp
000000000002e4a0	jmp	*%rax
-[PBXGDB_Adaptor threadRequest:stepUntilLineNumber:]:
000000000002e4a2	pushq	%rbp
000000000002e4a3	movq	%rsp,%rbp
000000000002e4a6	pushq	%r14
000000000002e4a8	pushq	%rbx
000000000002e4a9	movq	%rcx,%r14
000000000002e4ac	leaq	0x00080fe5(%rip),%rax
000000000002e4b3	movq	(%rax),%rax
000000000002e4b6	incq	(%rdi,%rax)
000000000002e4ba	movq	0x000801bf(%rip),%rax
000000000002e4c1	movq	(%rdi,%rax),%rbx
000000000002e4c5	movq	0x00076c24(%rip),%rsi
000000000002e4cc	movq	%rdx,%rdi
000000000002e4cf	call	*0x00055c03(%rip)
000000000002e4d5	movq	0x00076c4c(%rip),%rsi
000000000002e4dc	movq	%rbx,%rdi
000000000002e4df	movq	%rax,%rdx
000000000002e4e2	movq	%r14,%rcx
000000000002e4e5	movq	0x00055bec(%rip),%rax
000000000002e4ec	popq	%rbx
000000000002e4ed	popq	%r14
000000000002e4ef	popq	%rbp
000000000002e4f0	jmp	*%rax
-[PBXGDB_Adaptor threadRequestStepInSuspendOtherThreads:]:
000000000002e4f2	pushq	%rbp
000000000002e4f3	movq	%rsp,%rbp
000000000002e4f6	pushq	%rbx
000000000002e4f7	pushq	%rax
000000000002e4f8	leaq	0x00080f99(%rip),%rax
000000000002e4ff	movq	(%rax),%rax
000000000002e502	incq	(%rdi,%rax)
000000000002e506	movq	0x00080173(%rip),%rax
000000000002e50d	movq	(%rdi,%rax),%rbx
000000000002e511	movq	0x00076bd8(%rip),%rsi
000000000002e518	movq	%rdx,%rdi
000000000002e51b	call	*0x00055bb7(%rip)
000000000002e521	movq	0x00076c08(%rip),%rsi
000000000002e528	movq	%rbx,%rdi
000000000002e52b	movq	%rax,%rdx
000000000002e52e	movq	0x00055ba3(%rip),%rax
000000000002e535	addq	$0x08,%rsp
000000000002e539	popq	%rbx
000000000002e53a	popq	%rbp
000000000002e53b	jmp	*%rax
-[PBXGDB_Adaptor threadRequestStepOverSuspendOtherThreads:]:
000000000002e53d	pushq	%rbp
000000000002e53e	movq	%rsp,%rbp
000000000002e541	pushq	%rbx
000000000002e542	pushq	%rax
000000000002e543	leaq	0x00080f4e(%rip),%rax
000000000002e54a	movq	(%rax),%rax
000000000002e54d	incq	(%rdi,%rax)
000000000002e551	movq	0x00080128(%rip),%rax
000000000002e558	movq	(%rdi,%rax),%rbx
000000000002e55c	movq	0x00076b8d(%rip),%rsi
000000000002e563	movq	%rdx,%rdi
000000000002e566	call	*0x00055b6c(%rip)
000000000002e56c	movq	0x00076bc5(%rip),%rsi
000000000002e573	movq	%rbx,%rdi
000000000002e576	movq	%rax,%rdx
000000000002e579	movq	0x00055b58(%rip),%rax
000000000002e580	addq	$0x08,%rsp
000000000002e584	popq	%rbx
000000000002e585	popq	%rbp
000000000002e586	jmp	*%rax
-[PBXGDB_Adaptor threadRequestContinue:]:
000000000002e588	pushq	%rbp
000000000002e589	movq	%rsp,%rbp
000000000002e58c	pushq	%rbx
000000000002e58d	pushq	%rax
000000000002e58e	leaq	0x00080f03(%rip),%rax
000000000002e595	movq	(%rax),%rax
000000000002e598	incq	(%rdi,%rax)
000000000002e59c	movq	0x000800dd(%rip),%rax
000000000002e5a3	movq	(%rdi,%rax),%rbx
000000000002e5a7	movq	0x00076b42(%rip),%rsi
000000000002e5ae	movq	%rdx,%rdi
000000000002e5b1	call	*0x00055b21(%rip)
000000000002e5b7	movq	0x00076ac2(%rip),%rsi
000000000002e5be	movq	%rbx,%rdi
000000000002e5c1	movq	%rax,%rdx
000000000002e5c4	movq	0x00055b0d(%rip),%rax
000000000002e5cb	addq	$0x08,%rsp
000000000002e5cf	popq	%rbx
000000000002e5d0	popq	%rbp
000000000002e5d1	jmp	*%rax
-[PBXGDB_Adaptor threadRequestUnsuspend:]:
000000000002e5d3	pushq	%rbp
000000000002e5d4	movq	%rsp,%rbp
000000000002e5d7	pushq	%rbx
000000000002e5d8	pushq	%rax
000000000002e5d9	leaq	0x00080eb8(%rip),%rax
000000000002e5e0	movq	(%rax),%rax
000000000002e5e3	incq	(%rdi,%rax)
000000000002e5e7	movq	0x00080092(%rip),%rax
000000000002e5ee	movq	(%rdi,%rax),%rbx
000000000002e5f2	movq	0x00076af7(%rip),%rsi
000000000002e5f9	movq	%rdx,%rdi
000000000002e5fc	call	*0x00055ad6(%rip)
000000000002e602	movq	0x00076b37(%rip),%rsi
000000000002e609	movq	%rbx,%rdi
000000000002e60c	movq	%rax,%rdx
000000000002e60f	movq	0x00055ac2(%rip),%rax
000000000002e616	addq	$0x08,%rsp
000000000002e61a	popq	%rbx
000000000002e61b	popq	%rbp
000000000002e61c	jmp	*%rax
-[PBXGDB_Adaptor threadRequestSuspend:]:
000000000002e61e	pushq	%rbp
000000000002e61f	movq	%rsp,%rbp
000000000002e622	pushq	%rbx
000000000002e623	pushq	%rax
000000000002e624	leaq	0x00080e6d(%rip),%rax
000000000002e62b	movq	(%rax),%rax
000000000002e62e	incq	(%rdi,%rax)
000000000002e632	movq	0x00080047(%rip),%rax
000000000002e639	movq	(%rdi,%rax),%rbx
000000000002e63d	movq	0x00076aac(%rip),%rsi
000000000002e644	movq	%rdx,%rdi
000000000002e647	call	*0x00055a8b(%rip)
000000000002e64d	movq	0x00076af4(%rip),%rsi
000000000002e654	movq	%rbx,%rdi
000000000002e657	movq	%rax,%rdx
000000000002e65a	movq	0x00055a77(%rip),%rax
000000000002e661	addq	$0x08,%rsp
000000000002e665	popq	%rbx
000000000002e666	popq	%rbp
000000000002e667	jmp	*%rax
-[PBXGDB_Adaptor requestResetBreakpointsInFile:]:
000000000002e669	pushq	%rbp
000000000002e66a	movq	%rsp,%rbp
000000000002e66d	popq	%rbp
000000000002e66e	ret
-[PBXGDB_Adaptor sendSIGINT]:
000000000002e66f	pushq	%rbp
000000000002e670	movq	%rsp,%rbp
000000000002e673	movq	0x000800d6(%rip),%rax
000000000002e67a	movl	(%rdi,%rax),%edi
000000000002e67d	testl	%edi,%edi
000000000002e67f	jg	0x0002e683
000000000002e681	popq	%rbp
000000000002e682	ret
000000000002e683	movl	$0x00000002,%esi
000000000002e688	popq	%rbp
000000000002e689	jmp	0x0004e6b6	; symbol stub for: _kill
-[PBXGDB_Adaptor requestSuspendAllThreads]:
000000000002e68e	pushq	%rbp
000000000002e68f	movq	%rsp,%rbp
000000000002e692	leaq	0x00080dff(%rip),%rax
000000000002e699	movq	(%rax),%rax
000000000002e69c	incq	(%rdi,%rax)
000000000002e6a0	movq	0x0007ffd1(%rip),%rax
000000000002e6a7	movq	(%rdi,%rax),%rdi
000000000002e6ab	movq	0x00076a9e(%rip),%rsi
000000000002e6b2	popq	%rbp
000000000002e6b3	jmp	*0x00055a1f(%rip)
-[PBXGDB_Adaptor requestEnableDisableBreakpoint:]:
000000000002e6b9	pushq	%rbp
000000000002e6ba	movq	%rsp,%rbp
000000000002e6bd	movq	0x0007ffc4(%rip),%rax
000000000002e6c4	movq	(%rdi,%rax),%rdi
000000000002e6c8	movq	0x00076a99(%rip),%rsi
000000000002e6cf	popq	%rbp
000000000002e6d0	jmp	*0x00055a02(%rip)
-[PBXGDB_Adaptor requestBreakpointCondition:]:
000000000002e6d6	pushq	%rbp
000000000002e6d7	movq	%rsp,%rbp
000000000002e6da	movq	0x0007ffa7(%rip),%rax
000000000002e6e1	movq	(%rdi,%rax),%rdi
000000000002e6e5	movq	0x00076a84(%rip),%rsi
000000000002e6ec	popq	%rbp
000000000002e6ed	jmp	*0x000559e5(%rip)
-[PBXGDB_Adaptor requestBreakpointIgnoreCount:]:
000000000002e6f3	pushq	%rbp
000000000002e6f4	movq	%rsp,%rbp
000000000002e6f7	movq	0x0007ff8a(%rip),%rax
000000000002e6fe	movq	(%rdi,%rax),%rdi
000000000002e702	movq	0x00076a6f(%rip),%rsi
000000000002e709	popq	%rbp
000000000002e70a	jmp	*0x000559c8(%rip)
-[PBXGDB_Adaptor requestDebuggerTurnBreakpointsOff]:
000000000002e710	pushq	%rbp
000000000002e711	movq	%rsp,%rbp
000000000002e714	movq	0x0007ff6d(%rip),%rax
000000000002e71b	movq	(%rdi,%rax),%rdi
000000000002e71f	movq	0x00076a72(%rip),%rsi
000000000002e726	xorl	%edx,%edx
000000000002e728	popq	%rbp
000000000002e729	jmp	*0x000559a9(%rip)
-[PBXGDB_Adaptor requestDebuggerMovePCToCurrentPosition]:
000000000002e72f	pushq	%rbp
000000000002e730	movq	%rsp,%rbp
000000000002e733	popq	%rbp
000000000002e734	ret
-[PBXGDB_Adaptor requestDebuggerCompleteString:resultHandler:]:
000000000002e735	pushq	%rbp
000000000002e736	movq	%rsp,%rbp
000000000002e739	pushq	%r15
000000000002e73b	pushq	%r14
000000000002e73d	pushq	%r12
000000000002e73f	pushq	%rbx
000000000002e740	movq	%rcx,%r15
000000000002e743	movq	%rdx,%r12
000000000002e746	movq	%rdi,%r14
000000000002e749	movq	0x00079e40(%rip),%rdi
000000000002e750	leaq	0x00079b89(%rip),%rsi
000000000002e757	call	*0x00079b83(%rip)
000000000002e75d	movq	0x0007630c(%rip),%rsi
000000000002e764	movq	%rax,%rdi
000000000002e767	call	*0x0005596b(%rip)
000000000002e76d	movq	%rax,%rbx
000000000002e770	movq	0x00076a29(%rip),%rsi
000000000002e777	movq	%rbx,%rdi
000000000002e77a	movq	%r12,%rdx
000000000002e77d	movq	%r15,%rcx
000000000002e780	call	*0x00055952(%rip)
000000000002e786	movq	0x00076643(%rip),%rsi
000000000002e78d	movq	%r14,%rdi
000000000002e790	call	*0x00055942(%rip)
000000000002e796	movq	0x00076643(%rip),%rsi
000000000002e79d	movq	%rax,%rdi
000000000002e7a0	movq	%rbx,%rdx
000000000002e7a3	movq	0x0005592e(%rip),%rax
000000000002e7aa	popq	%rbx
000000000002e7ab	popq	%r12
000000000002e7ad	popq	%r14
000000000002e7af	popq	%r15
000000000002e7b1	popq	%rbp
000000000002e7b2	jmp	*%rax
-[PBXGDB_Adaptor requestDebuggerCreateWatchpoint:]:
000000000002e7b4	pushq	%rbp
000000000002e7b5	movq	%rsp,%rbp
000000000002e7b8	pushq	%r14
000000000002e7ba	pushq	%rbx
000000000002e7bb	movq	%rdi,%r14
000000000002e7be	movq	0x000769e3(%rip),%rsi
000000000002e7c5	movq	0x00079dcc(%rip),%rdi
000000000002e7cc	call	*0x00055906(%rip)
000000000002e7d2	movq	%rax,%rbx
000000000002e7d5	movq	0x000765f4(%rip),%rsi
000000000002e7dc	movq	%r14,%rdi
000000000002e7df	call	*0x000558f3(%rip)
000000000002e7e5	movq	0x000765ec(%rip),%rsi
000000000002e7ec	movq	%rbx,%rdi
000000000002e7ef	movq	%rax,%rdx
000000000002e7f2	call	*0x000558e0(%rip)
000000000002e7f8	movq	0x000765d1(%rip),%rsi
000000000002e7ff	movq	%r14,%rdi
000000000002e802	call	*0x000558d0(%rip)
000000000002e808	movq	0x000765d1(%rip),%rsi
000000000002e80f	movq	%rax,%rdi
000000000002e812	movq	%rbx,%rdx
000000000002e815	movq	0x000558bc(%rip),%rax
000000000002e81c	popq	%rbx
000000000002e81d	popq	%r14
000000000002e81f	popq	%rbp
000000000002e820	jmp	*%rax
-[PBXGDB_Adaptor requestDebuggerContinueToFile:lineNumber:]:
000000000002e822	pushq	%rbp
000000000002e823	movq	%rsp,%rbp
000000000002e826	pushq	%r15
000000000002e828	pushq	%r14
000000000002e82a	pushq	%rbx
000000000002e82b	pushq	%rax
000000000002e82c	movq	%rdi,%r14
000000000002e82f	movq	0x0007697a(%rip),%rsi
000000000002e836	movq	0x00079d63(%rip),%rdi
000000000002e83d	call	*0x00055895(%rip)
000000000002e843	movq	%rax,%rbx
000000000002e846	movq	0x0007696b(%rip),%rsi
000000000002e84d	movq	%r14,%rdi
000000000002e850	call	*0x00055882(%rip)
000000000002e856	movq	0x00076963(%rip),%rsi
000000000002e85d	movq	%rbx,%rdi
000000000002e860	movq	%rax,%rdx
000000000002e863	call	*0x0005586f(%rip)
000000000002e869	movq	0x00076210(%rip),%rsi
000000000002e870	movq	%rbx,%rdi
000000000002e873	call	*0x0005585f(%rip)
000000000002e879	movq	%rax,%r15
000000000002e87c	movq	0x0007623d(%rip),%rsi
000000000002e883	movq	%r14,%rdi
000000000002e886	call	*0x0005584c(%rip)
000000000002e88c	movq	0x00076935(%rip),%rsi
000000000002e893	movq	%rax,%rdi
000000000002e896	call	*0x0005583c(%rip)
000000000002e89c	movq	0x00076205(%rip),%rsi
000000000002e8a3	movq	%r15,%rdi
000000000002e8a6	movq	%rax,%rdx
000000000002e8a9	call	*0x00055829(%rip)
000000000002e8af	movq	0x0007651a(%rip),%rsi
000000000002e8b6	movq	%r14,%rdi
000000000002e8b9	call	*0x00055819(%rip)
000000000002e8bf	movq	0x00076512(%rip),%rsi
000000000002e8c6	movq	%rbx,%rdi
000000000002e8c9	movq	%rax,%rdx
000000000002e8cc	call	*0x00055806(%rip)
000000000002e8d2	movq	0x000764f7(%rip),%rsi
000000000002e8d9	movq	%r14,%rdi
000000000002e8dc	call	*0x000557f6(%rip)
000000000002e8e2	movq	0x000764f7(%rip),%rsi
000000000002e8e9	movq	%rax,%rdi
000000000002e8ec	movq	%rbx,%rdx
000000000002e8ef	movq	0x000557e2(%rip),%rax
000000000002e8f6	addq	$0x08,%rsp
000000000002e8fa	popq	%rbx
000000000002e8fb	popq	%r14
000000000002e8fd	popq	%r15
000000000002e8ff	popq	%rbp
000000000002e900	jmp	*%rax
-[PBXGDB_Adaptor requestDebuggerContinueToCallSymbol:inFile:lineNumber:]:
000000000002e902	pushq	%rbp
000000000002e903	movq	%rsp,%rbp
000000000002e906	pushq	%r15
000000000002e908	pushq	%r14
000000000002e90a	pushq	%rbx
000000000002e90b	pushq	%rax
000000000002e90c	movq	%rdi,%r14
000000000002e90f	movq	0x000768ba(%rip),%rsi
000000000002e916	movq	0x00079c8b(%rip),%rdi
000000000002e91d	call	*0x000557b5(%rip)
000000000002e923	movq	%rax,%rbx
000000000002e926	movq	0x0007688b(%rip),%rsi
000000000002e92d	movq	%r14,%rdi
000000000002e930	call	*0x000557a2(%rip)
000000000002e936	movq	0x00076883(%rip),%rsi
000000000002e93d	movq	%rbx,%rdi
000000000002e940	movq	%rax,%rdx
000000000002e943	call	*0x0005578f(%rip)
000000000002e949	movq	0x00076130(%rip),%rsi
000000000002e950	movq	%rbx,%rdi
000000000002e953	call	*0x0005577f(%rip)
000000000002e959	movq	%rax,%r15
000000000002e95c	movq	0x0007615d(%rip),%rsi
000000000002e963	movq	%r14,%rdi
000000000002e966	call	*0x0005576c(%rip)
000000000002e96c	movq	0x00076855(%rip),%rsi
000000000002e973	movq	%rax,%rdi
000000000002e976	call	*0x0005575c(%rip)
000000000002e97c	movq	0x00076125(%rip),%rsi
000000000002e983	movq	%r15,%rdi
000000000002e986	movq	%rax,%rdx
000000000002e989	call	*0x00055749(%rip)
000000000002e98f	movq	0x0007643a(%rip),%rsi
000000000002e996	movq	%r14,%rdi
000000000002e999	call	*0x00055739(%rip)
000000000002e99f	movq	0x00076432(%rip),%rsi
000000000002e9a6	movq	%rbx,%rdi
000000000002e9a9	movq	%rax,%rdx
000000000002e9ac	call	*0x00055726(%rip)
000000000002e9b2	movq	0x00076417(%rip),%rsi
000000000002e9b9	movq	%r14,%rdi
000000000002e9bc	call	*0x00055716(%rip)
000000000002e9c2	movq	0x0007680f(%rip),%rsi
000000000002e9c9	movq	%rax,%rdi
000000000002e9cc	movq	%rbx,%rdx
000000000002e9cf	movq	0x00055702(%rip),%rax
000000000002e9d6	addq	$0x08,%rsp
000000000002e9da	popq	%rbx
000000000002e9db	popq	%r14
000000000002e9dd	popq	%r15
000000000002e9df	popq	%rbp
000000000002e9e0	jmp	*%rax
-[PBXGDB_Adaptor requestDebuggerExecUntilToFile:lineNumber:]:
000000000002e9e2	pushq	%rbp
000000000002e9e3	movq	%rsp,%rbp
000000000002e9e6	pushq	%r15
000000000002e9e8	pushq	%r14
000000000002e9ea	pushq	%rbx
000000000002e9eb	pushq	%rax
000000000002e9ec	movq	%rdi,%r14
000000000002e9ef	movq	0x000767ba(%rip),%rsi
000000000002e9f6	movq	0x00079bb3(%rip),%rdi
000000000002e9fd	call	*0x000556d5(%rip)
000000000002ea03	movq	%rax,%rbx
000000000002ea06	movq	0x000767ab(%rip),%rsi
000000000002ea0d	movq	%r14,%rdi
000000000002ea10	call	*0x000556c2(%rip)
000000000002ea16	movq	0x000767a3(%rip),%rsi
000000000002ea1d	movq	%rbx,%rdi
000000000002ea20	movq	%rax,%rdx
000000000002ea23	call	*0x000556af(%rip)
000000000002ea29	movq	0x00076050(%rip),%rsi
000000000002ea30	movq	%rbx,%rdi
000000000002ea33	call	*0x0005569f(%rip)
000000000002ea39	movq	%rax,%r15
000000000002ea3c	movq	0x0007607d(%rip),%rsi
000000000002ea43	movq	%r14,%rdi
000000000002ea46	call	*0x0005568c(%rip)
000000000002ea4c	movq	0x00076775(%rip),%rsi
000000000002ea53	movq	%rax,%rdi
000000000002ea56	call	*0x0005567c(%rip)
000000000002ea5c	movq	0x00076045(%rip),%rsi
000000000002ea63	movq	%r15,%rdi
000000000002ea66	movq	%rax,%rdx
000000000002ea69	call	*0x00055669(%rip)
000000000002ea6f	movq	0x0007635a(%rip),%rsi
000000000002ea76	movq	%r14,%rdi
000000000002ea79	call	*0x00055659(%rip)
000000000002ea7f	movq	0x00076352(%rip),%rsi
000000000002ea86	movq	%rbx,%rdi
000000000002ea89	movq	%rax,%rdx
000000000002ea8c	call	*0x00055646(%rip)
000000000002ea92	movq	0x00076337(%rip),%rsi
000000000002ea99	movq	%r14,%rdi
000000000002ea9c	call	*0x00055636(%rip)
000000000002eaa2	movq	0x00076337(%rip),%rsi
000000000002eaa9	movq	%rax,%rdi
000000000002eaac	movq	%rbx,%rdx
000000000002eaaf	movq	0x00055622(%rip),%rax
000000000002eab6	addq	$0x08,%rsp
000000000002eaba	popq	%rbx
000000000002eabb	popq	%r14
000000000002eabd	popq	%r15
000000000002eabf	popq	%rbp
000000000002eac0	jmp	*%rax
-[PBXGDB_Adaptor requestDebuggerMovePCInThread:fileSpec:]:
000000000002eac2	pushq	%rbp
000000000002eac3	movq	%rsp,%rbp
000000000002eac6	pushq	%r14
000000000002eac8	pushq	%rbx
000000000002eac9	movq	%rdi,%rbx
000000000002eacc	leaq	0x000809c5(%rip),%rax
000000000002ead3	movq	(%rax),%rax
000000000002ead6	incq	(%rbx,%rax)
000000000002eada	movq	0x000766ff(%rip),%rsi
000000000002eae1	movq	0x00079ad0(%rip),%rdi
000000000002eae8	call	*0x000555ea(%rip)
000000000002eaee	movq	%rax,%r14
000000000002eaf1	movq	0x000762d8(%rip),%rsi
000000000002eaf8	movq	%rbx,%rdi
000000000002eafb	call	*0x000555d7(%rip)
000000000002eb01	movq	0x000762d0(%rip),%rsi
000000000002eb08	movq	%r14,%rdi
000000000002eb0b	movq	%rax,%rdx
000000000002eb0e	call	*0x000555c4(%rip)
000000000002eb14	movq	0x000762b5(%rip),%rsi
000000000002eb1b	movq	%rbx,%rdi
000000000002eb1e	call	*0x000555b4(%rip)
000000000002eb24	movq	0x000762b5(%rip),%rsi
000000000002eb2b	movq	%rax,%rdi
000000000002eb2e	movq	%r14,%rdx
000000000002eb31	movq	0x000555a0(%rip),%rax
000000000002eb38	popq	%rbx
000000000002eb39	popq	%r14
000000000002eb3b	popq	%rbp
000000000002eb3c	jmp	*%rax
-[PBXGDB_Adaptor _forceQuitGDB:]:
000000000002eb3e	pushq	%rbp
000000000002eb3f	movq	%rsp,%rbp
000000000002eb42	pushq	%r14
000000000002eb44	pushq	%rbx
000000000002eb45	movq	%rdi,%rbx
000000000002eb48	movq	0x00076359(%rip),%rsi
000000000002eb4f	call	*0x00055583(%rip)
000000000002eb55	movq	0x0007fbf4(%rip),%rax
000000000002eb5c	movl	(%rbx,%rax),%edi
000000000002eb5f	testl	%edi,%edi
000000000002eb61	je	0x0002eb6d
000000000002eb63	movl	$0x0000000f,%esi
000000000002eb68	callq	0x0004e6b6	; symbol stub for: _kill
000000000002eb6d	movq	0x00076294(%rip),%rsi
000000000002eb74	movq	0x0005555d(%rip),%r14
000000000002eb7b	movq	%rbx,%rdi
000000000002eb7e	call	*%r14
000000000002eb81	movq	0x00076668(%rip),%rsi
000000000002eb88	movq	%rax,%rdi
000000000002eb8b	call	*%r14
000000000002eb8e	movl	%eax,%r14d
000000000002eb91	testl	%r14d,%r14d
000000000002eb94	jg	0x0002eb9b
000000000002eb96	popq	%rbx
000000000002eb97	popq	%r14
000000000002eb99	popq	%rbp
000000000002eb9a	ret
000000000002eb9b	movq	0x00076656(%rip),%rsi
000000000002eba2	movq	%rbx,%rdi
000000000002eba5	movl	$0x00000001,%edx
000000000002ebaa	call	*0x00055528(%rip)
000000000002ebb0	movl	$0x000003e8,%edi
000000000002ebb5	callq	0x0004e734	; symbol stub for: _usleep
000000000002ebba	movl	%r14d,%edi
000000000002ebbd	movl	$0x0000000f,%esi
000000000002ebc2	popq	%rbx
000000000002ebc3	popq	%r14
000000000002ebc5	popq	%rbp
000000000002ebc6	jmp	0x0004e6b6	; symbol stub for: _kill
-[PBXGDB_Adaptor requestDebuggerStatus]:
000000000002ebcb	pushq	%rbp
000000000002ebcc	movq	%rsp,%rbp
000000000002ebcf	pushq	%r14
000000000002ebd1	pushq	%rbx
000000000002ebd2	movq	%rdi,%rbx
000000000002ebd5	movq	0x00076214(%rip),%rsi
000000000002ebdc	call	*0x000554f6(%rip)
000000000002ebe2	movq	%rax,%r14
000000000002ebe5	movq	0x0007620c(%rip),%rsi
000000000002ebec	movq	%rbx,%rdi
000000000002ebef	call	*0x000554e3(%rip)
000000000002ebf5	movq	0x0007662c(%rip),%rsi
000000000002ebfc	movq	%rax,%rdi
000000000002ebff	call	*0x000554d3(%rip)
000000000002ec05	movq	0x00076624(%rip),%rsi
000000000002ec0c	movq	%r14,%rdi
000000000002ec0f	call	*0x000554c3(%rip)
000000000002ec15	leaq	0x0008087c(%rip),%rax
000000000002ec1c	movq	(%rax),%rax
000000000002ec1f	incq	(%rbx,%rax)
000000000002ec23	movq	0x0007fa4e(%rip),%rax
000000000002ec2a	movq	(%rbx,%rax),%rdi
000000000002ec2e	movq	0x000765d3(%rip),%rsi
000000000002ec35	call	*0x0005549d(%rip)
000000000002ec3b	movq	0x0007618e(%rip),%rsi
000000000002ec42	movq	%rbx,%rdi
000000000002ec45	call	*0x0005548d(%rip)
000000000002ec4b	movq	0x000765be(%rip),%rsi
000000000002ec52	movq	%rax,%rdi
000000000002ec55	call	*0x0005547d(%rip)
000000000002ec5b	leaq	0x0007967e(%rip),%rsi
000000000002ec62	movq	0x00079967(%rip),%rdi
000000000002ec69	call	*0x00079671(%rip)
000000000002ec6f	movq	0x00075dfa(%rip),%rsi
000000000002ec76	movq	%rax,%rdi
000000000002ec79	call	*0x00055459(%rip)
000000000002ec7f	movq	%rax,%r14
000000000002ec82	movq	0x00076147(%rip),%rsi
000000000002ec89	movq	%rbx,%rdi
000000000002ec8c	call	*0x00055446(%rip)
000000000002ec92	movq	0x0007613f(%rip),%rsi
000000000002ec99	movq	%r14,%rdi
000000000002ec9c	movq	%rax,%rdx
000000000002ec9f	call	*0x00055433(%rip)
000000000002eca5	movq	0x00076124(%rip),%rsi
000000000002ecac	movq	%rbx,%rdi
000000000002ecaf	call	*0x00055423(%rip)
000000000002ecb5	movq	0x0007657c(%rip),%rsi
000000000002ecbc	movq	%rax,%rdi
000000000002ecbf	movq	%r14,%rdx
000000000002ecc2	movq	0x0005540f(%rip),%rax
000000000002ecc9	popq	%rbx
000000000002ecca	popq	%r14
000000000002eccc	popq	%rbp
000000000002eccd	jmp	*%rax
-[PBXGDB_Adaptor newGlobalContainerDataValue]:
000000000002eccf	pushq	%rbp
000000000002ecd0	movq	%rsp,%rbp
000000000002ecd3	pushq	%r14
000000000002ecd5	pushq	%rbx
000000000002ecd6	movq	%rdi,%rbx
000000000002ecd9	movq	0x00079910(%rip),%rdi
000000000002ece0	leaq	0x000795f9(%rip),%rsi
000000000002ece7	call	*0x000795f3(%rip)
000000000002eced	movq	0x0007605c(%rip),%rsi
000000000002ecf4	movq	0x000553dd(%rip),%r14
000000000002ecfb	movq	%rax,%rdi
000000000002ecfe	movq	%rbx,%rdx
000000000002ed01	call	*%r14
000000000002ed04	movq	%rax,%rbx
000000000002ed07	movq	0x000765ba(%rip),%rsi
000000000002ed0e	movq	0x000798e3(%rip),%rdi
000000000002ed15	call	*%r14
000000000002ed18	movq	0x000765a1(%rip),%rsi
000000000002ed1f	movq	%rbx,%rdi
000000000002ed22	movq	%rax,%rdx
000000000002ed25	call	*%r14
000000000002ed28	movq	%rbx,%rax
000000000002ed2b	popq	%rbx
000000000002ed2c	popq	%r14
000000000002ed2e	popq	%rbp
000000000002ed2f	ret
-[PBXGDB_Adaptor canCloneDataValue:]:
000000000002ed30	pushq	%rbp
000000000002ed31	movq	%rsp,%rbp
000000000002ed34	pushq	%rbx
000000000002ed35	pushq	%rax
000000000002ed36	movq	%rdx,%rbx
000000000002ed39	movq	0x000798c0(%rip),%rdi
000000000002ed40	leaq	0x000795e9(%rip),%rsi
000000000002ed47	call	*0x000795e3(%rip)
000000000002ed4d	leaq	0x000795ec(%rip),%rsi
000000000002ed54	movq	%rbx,%rdi
000000000002ed57	movq	%rax,%rdx
000000000002ed5a	call	*0x000795e0(%rip)
000000000002ed60	testb	%al,%al
000000000002ed62	setne	%al
000000000002ed65	movzbl	%al,%eax
000000000002ed68	addq	$0x08,%rsp
000000000002ed6c	popq	%rbx
000000000002ed6d	popq	%rbp
000000000002ed6e	ret
-[PBXGDB_Adaptor requestCloneDataValueByPathExpression:addToContainerDataValue:]:
000000000002ed6f	pushq	%rbp
000000000002ed70	movq	%rsp,%rbp
000000000002ed73	pushq	%r15
000000000002ed75	pushq	%r14
000000000002ed77	pushq	%rbx
000000000002ed78	pushq	%rax
000000000002ed79	movq	%rcx,%r14
000000000002ed7c	movq	%rdx,%rbx
000000000002ed7f	movq	%rdi,%r15
000000000002ed82	movq	0x00079877(%rip),%rdi
000000000002ed89	leaq	0x000795a0(%rip),%rsi
000000000002ed90	call	*0x0007959a(%rip)
000000000002ed96	leaq	0x000795a3(%rip),%rsi
000000000002ed9d	movq	%rbx,%rdi
000000000002eda0	movq	%rax,%rdx
000000000002eda3	call	*0x00079597(%rip)
000000000002eda9	testb	%al,%al
000000000002edab	jne	0x0002edb8
000000000002edad	addq	$0x08,%rsp
000000000002edb1	popq	%rbx
000000000002edb2	popq	%r14
000000000002edb4	popq	%r15
000000000002edb6	popq	%rbp
000000000002edb7	ret
000000000002edb8	movq	0x0007f8d1(%rip),%rax
000000000002edbf	movq	(%r15,%rax),%rdi
000000000002edc3	movq	0x0007654e(%rip),%rsi
000000000002edca	movq	%r14,%rdx
000000000002edcd	movq	%rbx,%rcx
000000000002edd0	addq	$0x08,%rsp
000000000002edd4	popq	%rbx
000000000002edd5	popq	%r14
000000000002edd7	popq	%r15
000000000002edd9	popq	%rbp
000000000002edda	jmp	*0x000552f8(%rip)
-[PBXGDB_Adaptor requestCloneDataValueByContent:viewAsExpression:addToContainerDataValue:]:
000000000002ede0	pushq	%rbp
000000000002ede1	movq	%rsp,%rbp
000000000002ede4	pushq	%r15
000000000002ede6	pushq	%r14
000000000002ede8	pushq	%r13
000000000002edea	pushq	%r12
000000000002edec	pushq	%rbx
000000000002eded	pushq	%rax
000000000002edee	movq	%r8,%r14
000000000002edf1	movq	%rcx,%rbx
000000000002edf4	movq	%rdx,%r13
000000000002edf7	movq	%rdi,%r15
000000000002edfa	movq	0x00075d07(%rip),%rsi
000000000002ee01	movq	%r13,%rdi
000000000002ee04	call	*0x000552ce(%rip)
000000000002ee0a	movq	%rax,%r12
000000000002ee0d	testq	%r12,%r12
000000000002ee10	je	0x0002eebc
000000000002ee16	leaq	0x000794d3(%rip),%rsi
000000000002ee1d	movq	%r12,%rdi
000000000002ee20	call	*0x000794ca(%rip)
000000000002ee26	testq	%rax,%rax
000000000002ee29	je	0x0002eebc
000000000002ee2f	movq	0x00076422(%rip),%rsi
000000000002ee36	movq	%r12,%rdi
000000000002ee39	xorl	%edx,%edx
000000000002ee3b	call	*0x00055297(%rip)
000000000002ee41	cmpw	$0x22,%ax
000000000002ee45	je	0x0002eebc
000000000002ee47	cmpw	$0x27,%ax
000000000002ee4b	je	0x0002eebc
000000000002ee4d	testq	%rbx,%rbx
000000000002ee50	je	0x0002ee67
000000000002ee52	leaq	0x00079497(%rip),%rsi
000000000002ee59	movq	%rbx,%rdi
000000000002ee5c	call	*0x0007948e(%rip)
000000000002ee62	testq	%rax,%rax
000000000002ee65	jne	0x0002ee7f
000000000002ee67	movq	0x000764b2(%rip),%rsi
000000000002ee6e	movq	%r13,%rdi
000000000002ee71	call	*0x00055261(%rip)
000000000002ee77	movq	%rax,%rbx
000000000002ee7a	testq	%rbx,%rbx
000000000002ee7d	je	0x0002eebc
000000000002ee7f	leaq	0x0007946a(%rip),%rsi
000000000002ee86	movq	%rbx,%rdi
000000000002ee89	call	*0x00079461(%rip)
000000000002ee8f	testq	%rax,%rax
000000000002ee92	je	0x0002eebc
000000000002ee94	movq	0x00075cdd(%rip),%rsi
000000000002ee9b	movq	0x000795ae(%rip),%rdi
000000000002eea2	leaq	0x000818ef(%rip),%rdx
000000000002eea9	movq	%rbx,%rcx
000000000002eeac	movq	%r12,%r8
000000000002eeaf	xorb	%al,%al
000000000002eeb1	call	*0x00055221(%rip)
000000000002eeb7	testq	%rax,%rax
000000000002eeba	jne	0x0002eecb
000000000002eebc	addq	$0x08,%rsp
000000000002eec0	popq	%rbx
000000000002eec1	popq	%r12
000000000002eec3	popq	%r13
000000000002eec5	popq	%r14
000000000002eec7	popq	%r15
000000000002eec9	popq	%rbp
000000000002eeca	ret
000000000002eecb	movq	0x0007f7be(%rip),%rcx
000000000002eed2	movq	(%r15,%rcx),%rdi
000000000002eed6	movq	0x000763f3(%rip),%rsi
000000000002eedd	movq	%r14,%rdx
000000000002eee0	movq	%rax,%rcx
000000000002eee3	xorl	%r8d,%r8d
000000000002eee6	addq	$0x08,%rsp
000000000002eeea	popq	%rbx
000000000002eeeb	popq	%r12
000000000002eeed	popq	%r13
000000000002eeef	popq	%r14
000000000002eef1	popq	%r15
000000000002eef3	popq	%rbp
000000000002eef4	jmp	*0x000551de(%rip)
-[PBXGDB_Adaptor requestDynamicLinkerImageControllerUpdate]:
000000000002eefa	pushq	%rbp
000000000002eefb	movq	%rsp,%rbp
000000000002eefe	movq	0x000762b3(%rip),%rsi
000000000002ef05	call	*0x000551cd(%rip)
000000000002ef0b	movq	0x00076416(%rip),%rsi
000000000002ef12	movq	%rax,%rdi
000000000002ef15	xorl	%edx,%edx
000000000002ef17	movq	0x000551ba(%rip),%rax
000000000002ef1e	popq	%rbp
000000000002ef1f	jmp	*%rax
-[PBXGDB_Adaptor rawMemoryDataForAddressExpression:numberOfBytes:resultHandler:]:
000000000002ef21	pushq	%rbp
000000000002ef22	movq	%rsp,%rbp
000000000002ef25	pushq	%r15
000000000002ef27	pushq	%r14
000000000002ef29	pushq	%r13
000000000002ef2b	pushq	%r12
000000000002ef2d	pushq	%rbx
000000000002ef2e	pushq	%rax
000000000002ef2f	movq	%r8,%r15
000000000002ef32	movq	%rcx,%r12
000000000002ef35	movq	%rdx,%rbx
000000000002ef38	movq	%rdi,%r14
000000000002ef3b	movq	0x000796c6(%rip),%rdi
000000000002ef42	leaq	0x00079397(%rip),%rsi
000000000002ef49	call	*0x00079391(%rip)
000000000002ef4f	movq	0x000763da(%rip),%rsi
000000000002ef56	movq	%rax,%rdi
000000000002ef59	movq	%rbx,%rdx
000000000002ef5c	movq	%r12,%rcx
000000000002ef5f	movq	%r15,%r8
000000000002ef62	call	*0x00055170(%rip)
000000000002ef68	movq	%rax,%r15
000000000002ef6b	movq	0x00075d76(%rip),%rsi
000000000002ef72	movq	%r14,%rdi
000000000002ef75	call	*0x0005515d(%rip)
000000000002ef7b	movq	0x00075d6e(%rip),%rsi
000000000002ef82	movq	%rax,%rdi
000000000002ef85	call	*0x0005514d(%rip)
000000000002ef8b	movq	0x00075f2e(%rip),%rsi
000000000002ef92	movq	%rax,%rdi
000000000002ef95	call	*0x0005513d(%rip)
000000000002ef9b	movq	%rax,%rbx
000000000002ef9e	movq	0x00075f23(%rip),%rsi
000000000002efa5	movq	%rbx,%rdi
000000000002efa8	call	*0x0005512a(%rip)
000000000002efae	movq	%rax,%r12
000000000002efb1	movq	0x00075f18(%rip),%rsi
000000000002efb8	movq	%rbx,%rdi
000000000002efbb	call	*0x00055117(%rip)
000000000002efc1	movq	%rax,%r13
000000000002efc4	movq	0x0007636d(%rip),%rsi
000000000002efcb	movq	%r12,%rdi
000000000002efce	call	*0x00055104(%rip)
000000000002efd4	movq	0x00076305(%rip),%rsi
000000000002efdb	movq	%rax,%rdi
000000000002efde	call	*0x000550f4(%rip)
000000000002efe4	movq	%rax,%r12
000000000002efe7	movq	0x00076352(%rip),%rsi
000000000002efee	movq	%r13,%rdi
000000000002eff1	call	*0x000550e1(%rip)
000000000002eff7	movq	0x000762e2(%rip),%rsi
000000000002effe	movq	%rax,%rdi
000000000002f001	call	*0x000550d1(%rip)
000000000002f007	movq	0x0007633a(%rip),%rsi
000000000002f00e	movq	%r15,%rdi
000000000002f011	movq	%r12,%rdx
000000000002f014	movq	%rax,%rcx
000000000002f017	call	*0x000550bb(%rip)
000000000002f01d	movq	0x00075dac(%rip),%rsi
000000000002f024	movq	%r14,%rdi
000000000002f027	call	*0x000550ab(%rip)
000000000002f02d	movq	0x00075dac(%rip),%rsi
000000000002f034	movq	%rax,%rdi
000000000002f037	movq	%r15,%rdx
000000000002f03a	movq	0x00055097(%rip),%rax
000000000002f041	addq	$0x08,%rsp
000000000002f045	popq	%rbx
000000000002f046	popq	%r12
000000000002f048	popq	%r13
000000000002f04a	popq	%r14
000000000002f04c	popq	%r15
000000000002f04e	popq	%rbp
000000000002f04f	jmp	*%rax
-[PBXGDB_Adaptor requestStackFramesForThread:numberOfStackFrames:resultHandler:]:
000000000002f051	pushq	%rbp
000000000002f052	movq	%rsp,%rbp
000000000002f055	pushq	%r15
000000000002f057	pushq	%r14
000000000002f059	pushq	%rbx
000000000002f05a	pushq	%rax
000000000002f05b	movq	%r8,%r14
000000000002f05e	movq	%rcx,%r15
000000000002f061	movq	%rdi,%rbx
000000000002f064	movq	0x00076085(%rip),%rsi
000000000002f06b	movq	%rdx,%rdi
000000000002f06e	call	*0x00055064(%rip)
000000000002f074	movq	0x0007f605(%rip),%rcx
000000000002f07b	movq	(%rbx,%rcx),%rdi
000000000002f07f	movq	0x000762ca(%rip),%rsi
000000000002f086	movq	%rax,%rdx
000000000002f089	movq	%r15,%rcx
000000000002f08c	movq	%r14,%r8
000000000002f08f	movq	0x00055042(%rip),%rax
000000000002f096	addq	$0x08,%rsp
000000000002f09a	popq	%rbx
000000000002f09b	popq	%r14
000000000002f09d	popq	%r15
000000000002f09f	popq	%rbp
000000000002f0a0	jmp	*%rax
-[PBXGDB_Adaptor requestGlobalsBrowserUpdate]:
000000000002f0a2	pushq	%rbp
000000000002f0a3	movq	%rsp,%rbp
000000000002f0a6	pushq	%r14
000000000002f0a8	pushq	%rbx
000000000002f0a9	movq	%rdi,%r14
000000000002f0ac	movq	0x0007955d(%rip),%rdi
000000000002f0b3	leaq	0x00079226(%rip),%rsi
000000000002f0ba	call	*0x00079220(%rip)
000000000002f0c0	movq	0x000759a9(%rip),%rsi
000000000002f0c7	movq	%rax,%rdi
000000000002f0ca	call	*0x00055008(%rip)
000000000002f0d0	movq	%rax,%rbx
000000000002f0d3	movq	0x00075cf6(%rip),%rsi
000000000002f0da	movq	%r14,%rdi
000000000002f0dd	call	*0x00054ff5(%rip)
000000000002f0e3	movq	0x00075cee(%rip),%rsi
000000000002f0ea	movq	%rbx,%rdi
000000000002f0ed	movq	%rax,%rdx
000000000002f0f0	call	*0x00054fe2(%rip)
000000000002f0f6	movq	0x0007625b(%rip),%rsi
000000000002f0fd	movq	%rbx,%rdi
000000000002f100	xorl	%edx,%edx
000000000002f102	call	*0x00054fd0(%rip)
000000000002f108	movq	0x00075cc1(%rip),%rsi
000000000002f10f	movq	%r14,%rdi
000000000002f112	call	*0x00054fc0(%rip)
000000000002f118	movq	0x00075cc1(%rip),%rsi
000000000002f11f	movq	%rax,%rdi
000000000002f122	movq	%rbx,%rdx
000000000002f125	movq	0x00054fac(%rip),%rax
000000000002f12c	popq	%rbx
000000000002f12d	popq	%r14
000000000002f12f	popq	%rbp
000000000002f130	jmp	*%rax
-[PBXGDB_Adaptor supportsRunInDebugger]:
000000000002f132	pushq	%rbp
000000000002f133	movq	%rsp,%rbp
000000000002f136	movl	$0x00000001,%eax
000000000002f13b	popq	%rbp
000000000002f13c	ret
-[PBXGDB_Adaptor supportsFixAndContinue]:
000000000002f13d	pushq	%rbp
000000000002f13e	movq	%rsp,%rbp
000000000002f141	movq	0x0007f560(%rip),%rax
000000000002f148	movsbl	(%rdi,%rax),%eax
000000000002f14c	popq	%rbp
000000000002f14d	ret
-[PBXGDB_Adaptor supportsWatchpoints]:
000000000002f14e	pushq	%rbp
000000000002f14f	movq	%rsp,%rbp
000000000002f152	movl	$0x00000001,%eax
000000000002f157	popq	%rbp
000000000002f158	ret
-[PBXGDB_Adaptor supportsContinueToHere]:
000000000002f159	pushq	%rbp
000000000002f15a	movq	%rsp,%rbp
000000000002f15d	movl	$0x00000001,%eax
000000000002f162	popq	%rbp
000000000002f163	ret
-[PBXGDB_Adaptor setSupportsFixAndContinue:]:
000000000002f164	pushq	%rbp
000000000002f165	movq	%rsp,%rbp
000000000002f168	movq	0x0007f539(%rip),%rax
000000000002f16f	movb	%dl,(%rdi,%rax)
000000000002f172	popq	%rbp
000000000002f173	ret
-[PBXGDB_Adaptor globalVariableDVAddDataValue:forGlobalDict:]:
000000000002f174	pushq	%rbp
000000000002f175	movq	%rsp,%rbp
000000000002f178	popq	%rbp
000000000002f179	ret
-[PBXGDB_Adaptor globalVariableDVRemoveDataValueForDict:]:
000000000002f17a	pushq	%rbp
000000000002f17b	movq	%rsp,%rbp
000000000002f17e	popq	%rbp
000000000002f17f	ret
-[PBXGDB_Adaptor requestLoadGlobalsInDict:]:
000000000002f180	pushq	%rbp
000000000002f181	movq	%rsp,%rbp
000000000002f184	pushq	%r15
000000000002f186	pushq	%r14
000000000002f188	pushq	%r13
000000000002f18a	pushq	%r12
000000000002f18c	pushq	%rbx
000000000002f18d	subq	$0x38,%rsp
000000000002f191	movq	%rdx,0xb8(%rbp)
000000000002f195	movq	%rdi,%r12
000000000002f198	movq	0x000758d9(%rip),%rsi
000000000002f19f	movq	0x00054f32(%rip),%r14
000000000002f1a6	movq	%rdx,%rdi
000000000002f1a9	call	*%r14
000000000002f1ac	movq	%rax,0xb0(%rbp)
000000000002f1b0	movq	0x00075d59(%rip),%rsi
000000000002f1b7	movq	%rax,%rdi
000000000002f1ba	call	*%r14
000000000002f1bd	movq	%rax,0xa8(%rbp)
000000000002f1c1	movq	0x00075930(%rip),%rsi
000000000002f1c8	movq	%rax,%rdi
000000000002f1cb	call	*%r14
000000000002f1ce	movq	%rax,%r14
000000000002f1d1	testq	%r14,%r14
000000000002f1d4	je	0x0002f383
000000000002f1da	leaq	0x0007916f(%rip),%rbx
000000000002f1e1	leaq	0x00079138(%rip),%r13
000000000002f1e8	jmp	0x0002f207
000000000002f1ea	movq	0xa8(%rbp),%rdi
000000000002f1ee	movq	0x00075903(%rip),%rsi
000000000002f1f5	call	*0x00054edd(%rip)
000000000002f1fb	movq	%rax,%r14
000000000002f1fe	testq	%r14,%r14
000000000002f201	je	0x0002f383
000000000002f207	movq	%r14,0xc0(%rbp)
000000000002f20b	movq	0xb0(%rbp),%rdi
000000000002f20f	movq	%rbx,%rsi
000000000002f212	movq	%r14,%rdx
000000000002f215	call	*0x00079135(%rip)
000000000002f21b	movq	%rax,%r15
000000000002f21e	movq	%r15,0xd0(%rbp)
000000000002f222	movq	0xb8(%rbp),%rdi
000000000002f226	movq	0x00076133(%rip),%rsi
000000000002f22d	movq	%r14,%rdx
000000000002f230	call	*0x00054ea2(%rip)
000000000002f236	movq	%r15,%rdi
000000000002f239	leaq	0x000790d0(%rip),%rsi
000000000002f240	call	*0x000790ca(%rip)
000000000002f246	movq	%rax,%r14
000000000002f249	testq	%r14,%r14
000000000002f24c	jle	0x0002f1ea
000000000002f24e	jmp	0x0002f267
000000000002f250	movq	0xd0(%rbp),%r15
000000000002f254	testq	%r14,%r14
000000000002f257	leaq	0x000790f2(%rip),%rbx
000000000002f25e	leaq	0x000790bb(%rip),%r13
000000000002f265	jle	0x0002f1ea
000000000002f267	decq	%r14
000000000002f26a	movq	%r15,%rdi
000000000002f26d	movq	%r13,%rsi
000000000002f270	movq	%r14,%rdx
000000000002f273	call	*0x000790a7(%rip)
000000000002f279	movq	%rax,%rdi
000000000002f27c	movq	%rbx,%rsi
000000000002f27f	leaq	0x00080e72(%rip),%rdx
000000000002f286	call	*0x000790c4(%rip)
000000000002f28c	movq	%rax,0xc8(%rbp)
000000000002f290	testq	%rax,%rax
000000000002f293	je	0x0002f250
000000000002f295	movq	%r12,%rdi
000000000002f298	movq	0x00075b59(%rip),%rsi
000000000002f29f	movq	0x00054e32(%rip),%rbx
000000000002f2a6	call	*%rbx
000000000002f2a8	movq	%rax,%rdi
000000000002f2ab	movq	0x000760b6(%rip),%rsi
000000000002f2b2	movq	0xc0(%rbp),%rdx
000000000002f2b6	call	*%rbx
000000000002f2b8	movq	%rax,%r15
000000000002f2bb	movq	0x00079356(%rip),%rdi
000000000002f2c2	leaq	0x00079017(%rip),%rsi
000000000002f2c9	call	*0x00079011(%rip)
000000000002f2cf	movq	%rax,%rdi
000000000002f2d2	movq	0x00075797(%rip),%rsi
000000000002f2d9	call	*%rbx
000000000002f2db	movq	%rax,%r13
000000000002f2de	movq	0xd0(%rbp),%rdi
000000000002f2e2	leaq	0x00079037(%rip),%rsi
000000000002f2e9	movq	%r14,%rdx
000000000002f2ec	call	*0x0007902e(%rip)
000000000002f2f2	movq	%rax,%rdi
000000000002f2f5	leaq	0x00079054(%rip),%rsi
000000000002f2fc	leaq	0x000814b5(%rip),%rdx
000000000002f303	call	*0x00079047(%rip)
000000000002f309	movq	%r13,%rdi
000000000002f30c	movq	0x0007605d(%rip),%rsi
000000000002f313	movq	%rax,%rdx
000000000002f316	call	*%rbx
000000000002f318	movq	%r13,%rdi
000000000002f31b	movq	0x00076056(%rip),%rsi
000000000002f322	movq	%r15,%rdx
000000000002f325	call	*%rbx
000000000002f327	movq	%r15,%rdi
000000000002f32a	movq	0x0007604f(%rip),%rsi
000000000002f331	call	*%rbx
000000000002f333	movq	%r13,%rdi
000000000002f336	movq	0x0007604b(%rip),%rsi
000000000002f33d	movq	%rax,%rdx
000000000002f340	call	*%rbx
000000000002f342	movq	%r13,%rdi
000000000002f345	movq	0x00076044(%rip),%rsi
000000000002f34c	movl	$0x00000001,%edx
000000000002f351	call	*%rbx
000000000002f353	movq	%r13,%rdi
000000000002f356	movq	0x0007603b(%rip),%rsi
000000000002f35d	movq	0xc8(%rbp),%rdx
000000000002f361	call	*%rbx
000000000002f363	movq	%r12,%rdi
000000000002f366	movq	0x00075a63(%rip),%rsi
000000000002f36d	call	*%rbx
000000000002f36f	movq	%rax,%rdi
000000000002f372	movq	0x00075a67(%rip),%rsi
000000000002f379	movq	%r13,%rdx
000000000002f37c	call	*%rbx
000000000002f37e	jmp	0x0002f250
000000000002f383	addq	$0x38,%rsp
000000000002f387	popq	%rbx
000000000002f388	popq	%r12
000000000002f38a	popq	%r13
000000000002f38c	popq	%r14
000000000002f38e	popq	%r15
000000000002f390	popq	%rbp
000000000002f391	ret
-[PBXGDB_Adaptor requestFetchGlobalsForLibrary:]:
000000000002f392	pushq	%rbp
000000000002f393	movq	%rsp,%rbp
000000000002f396	pushq	%r15
000000000002f398	pushq	%r14
000000000002f39a	pushq	%rbx
000000000002f39b	pushq	%rax
000000000002f39c	movq	%rdx,%r15
000000000002f39f	movq	%rdi,%r14
000000000002f3a2	movq	0x0007926f(%rip),%rdi
000000000002f3a9	leaq	0x00078f30(%rip),%rsi
000000000002f3b0	call	*0x00078f2a(%rip)
000000000002f3b6	movq	0x000756b3(%rip),%rsi
000000000002f3bd	movq	%rax,%rdi
000000000002f3c0	call	*0x00054d12(%rip)
000000000002f3c6	movq	%rax,%rbx
000000000002f3c9	movq	0x00075fa8(%rip),%rsi
000000000002f3d0	movq	%rbx,%rdi
000000000002f3d3	movq	%r15,%rdx
000000000002f3d6	call	*0x00054cfc(%rip)
000000000002f3dc	movq	0x000759ed(%rip),%rsi
000000000002f3e3	movq	%r14,%rdi
000000000002f3e6	call	*0x00054cec(%rip)
000000000002f3ec	movq	0x000759ed(%rip),%rsi
000000000002f3f3	movq	%rax,%rdi
000000000002f3f6	movq	%rbx,%rdx
000000000002f3f9	movq	0x00054cd8(%rip),%rax
000000000002f400	addq	$0x08,%rsp
000000000002f404	popq	%rbx
000000000002f405	popq	%r14
000000000002f407	popq	%r15
000000000002f409	popq	%rbp
000000000002f40a	jmp	*%rax
-[PBXGDB_Adaptor requestDebuggerUndoToCheckpoint]:
000000000002f40c	pushq	%rbp
000000000002f40d	movq	%rsp,%rbp
000000000002f410	pushq	%r14
000000000002f412	pushq	%rbx
000000000002f413	movq	%rdi,%r14
000000000002f416	movq	0x00079203(%rip),%rdi
000000000002f41d	leaq	0x00078ebc(%rip),%rsi
000000000002f424	call	*0x00078eb6(%rip)
000000000002f42a	movq	0x0007563f(%rip),%rsi
000000000002f431	movq	%rax,%rdi
000000000002f434	call	*0x00054c9e(%rip)
000000000002f43a	movq	%rax,%rbx
000000000002f43d	movq	0x0007598c(%rip),%rsi
000000000002f444	movq	%r14,%rdi
000000000002f447	call	*0x00054c8b(%rip)
000000000002f44d	movq	0x0007598c(%rip),%rsi
000000000002f454	movq	%rax,%rdi
000000000002f457	movq	%rbx,%rdx
000000000002f45a	movq	0x00054c77(%rip),%rax
000000000002f461	popq	%rbx
000000000002f462	popq	%r14
000000000002f464	popq	%rbp
000000000002f465	jmp	*%rax
-[PBXGDB_Adaptor requestFixAndContinueFile:patch:object:shlib:]:
000000000002f467	pushq	%rbp
000000000002f468	movq	%rsp,%rbp
000000000002f46b	pushq	%r15
000000000002f46d	pushq	%r14
000000000002f46f	pushq	%r13
000000000002f471	pushq	%r12
000000000002f473	pushq	%rbx
000000000002f474	pushq	%rax
000000000002f475	movq	%r9,%r14
000000000002f478	movq	%r8,%r15
000000000002f47b	movq	%rcx,%r12
000000000002f47e	movq	%rdx,%r13
000000000002f481	movq	%rdi,%rbx
000000000002f484	movq	0x00075cf5(%rip),%rsi
000000000002f48b	call	*0x00054c47(%rip)
000000000002f491	movq	0x00075f10(%rip),%rsi
000000000002f498	movq	0x00079189(%rip),%rdi
000000000002f49f	movq	%r12,%rdx
000000000002f4a2	movq	%r13,%rcx
000000000002f4a5	movq	%r15,%r8
000000000002f4a8	movq	%r14,%r9
000000000002f4ab	call	*0x00054c27(%rip)
000000000002f4b1	movq	%rax,%r14
000000000002f4b4	movq	0x000755cd(%rip),%rsi
000000000002f4bb	movq	%r14,%rdi
000000000002f4be	movq	%rbx,%rdx
000000000002f4c1	call	*0x00054c11(%rip)
000000000002f4c7	movq	0x00075902(%rip),%rsi
000000000002f4ce	movq	%rbx,%rdi
000000000002f4d1	call	*0x00054c01(%rip)
000000000002f4d7	movq	0x00075902(%rip),%rsi
000000000002f4de	movq	%rax,%rdi
000000000002f4e1	movq	%r14,%rdx
000000000002f4e4	movq	0x00054bed(%rip),%rax
000000000002f4eb	addq	$0x08,%rsp
000000000002f4ef	popq	%rbx
000000000002f4f0	popq	%r12
000000000002f4f2	popq	%r13
000000000002f4f4	popq	%r14
000000000002f4f6	popq	%r15
000000000002f4f8	popq	%rbp
000000000002f4f9	jmp	*%rax
-[PBXGDB_Adaptor didFixAndContinue:pass:]:
000000000002f4fb	pushq	%rbp
000000000002f4fc	movq	%rsp,%rbp
000000000002f4ff	popq	%rbp
000000000002f500	ret
-[PBXGDB_Adaptor requestDisassemblyOfFrame:mixedMode:resultHandler:]:
000000000002f501	pushq	%rbp
000000000002f502	movq	%rsp,%rbp
000000000002f505	pushq	%r14
000000000002f507	pushq	%rbx
000000000002f508	movq	%rdi,%r14
000000000002f50b	movq	0x00075e9e(%rip),%rsi
000000000002f512	movq	0x00079117(%rip),%rdi
000000000002f519	call	*0x00054bb9(%rip)
000000000002f51f	movq	%rax,%rbx
000000000002f522	movq	0x000758a7(%rip),%rsi
000000000002f529	movq	%r14,%rdi
000000000002f52c	call	*0x00054ba6(%rip)
000000000002f532	movq	0x000758a7(%rip),%rsi
000000000002f539	movq	%rax,%rdi
000000000002f53c	movq	%rbx,%rdx
000000000002f53f	movq	0x00054b92(%rip),%rax
000000000002f546	popq	%rbx
000000000002f547	popq	%r14
000000000002f549	popq	%rbp
000000000002f54a	jmp	*%rax
-[PBXGDB_Adaptor requestLoadInferiorPlugin:]:
000000000002f54c	pushq	%rbp
000000000002f54d	movq	%rsp,%rbp
000000000002f550	pushq	%r15
000000000002f552	pushq	%r14
000000000002f554	pushq	%rbx
000000000002f555	pushq	%rax
000000000002f556	movq	%rdx,%r14
000000000002f559	movq	%rdi,%r15
000000000002f55c	movq	0x0007f1c5(%rip),%rax
000000000002f563	movq	(%r15,%rax),%rdi
000000000002f567	testq	%rdi,%rdi
000000000002f56a	jne	0x0002f5ad
000000000002f56c	movq	0x00078eed(%rip),%rdi
000000000002f573	leaq	0x00078d66(%rip),%rsi
000000000002f57a	call	*0x00078d60(%rip)
000000000002f580	movq	0x000754e9(%rip),%rsi
000000000002f587	movq	%rax,%rdi
000000000002f58a	call	*0x00054b48(%rip)
000000000002f590	movq	0x0007f191(%rip),%rdx
000000000002f597	movq	%rax,%rdi
000000000002f59a	movq	%r15,%rsi
000000000002f59d	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000002f5a2	movq	0x0007f17f(%rip),%rax
000000000002f5a9	movq	(%r15,%rax),%rdi
000000000002f5ad	movq	0x00075e04(%rip),%rsi
000000000002f5b4	movq	%r14,%rdx
000000000002f5b7	call	*0x00054b1b(%rip)
000000000002f5bd	testb	%al,%al
000000000002f5bf	jne	0x0002f5cf
000000000002f5c1	movq	0x0007f158(%rip),%rax
000000000002f5c8	cmpb	$0x01,(%r15,%rax)
000000000002f5cd	je	0x0002f5da
000000000002f5cf	addq	$0x08,%rsp
000000000002f5d3	popq	%rbx
000000000002f5d4	popq	%r14
000000000002f5d6	popq	%r15
000000000002f5d8	popq	%rbp
000000000002f5d9	ret
000000000002f5da	movq	0x0007f147(%rip),%rax
000000000002f5e1	movq	(%r15,%rax),%rdi
000000000002f5e5	leaq	0x00078d14(%rip),%rsi
000000000002f5ec	movq	%r14,%rdx
000000000002f5ef	call	*0x00078d0b(%rip)
000000000002f5f5	movq	0x0007903c(%rip),%rdi
000000000002f5fc	leaq	0x00078cdd(%rip),%rsi
000000000002f603	call	*0x00078cd7(%rip)
000000000002f609	movq	0x00075460(%rip),%rsi
000000000002f610	movq	%rax,%rdi
000000000002f613	call	*0x00054abf(%rip)
000000000002f619	movq	%rax,%rbx
000000000002f61c	movq	0x00075d9d(%rip),%rsi
000000000002f623	movq	%rbx,%rdi
000000000002f626	movq	%r14,%rdx
000000000002f629	call	*0x00054aa9(%rip)
000000000002f62f	movq	0x0007579a(%rip),%rsi
000000000002f636	movq	%r15,%rdi
000000000002f639	call	*0x00054a99(%rip)
000000000002f63f	movq	0x0007579a(%rip),%rsi
000000000002f646	movq	%rax,%rdi
000000000002f649	movq	%rbx,%rdx
000000000002f64c	movq	0x00054a85(%rip),%rax
000000000002f653	addq	$0x08,%rsp
000000000002f657	popq	%rbx
000000000002f658	popq	%r14
000000000002f65a	popq	%r15
000000000002f65c	popq	%rbp
000000000002f65d	jmp	*%rax
-[PBXGDB_Adaptor customizedDataDisplayEnabledChanged:]:
000000000002f65f	pushq	%rbp
000000000002f660	movq	%rsp,%rbp
000000000002f663	pushq	%r15
000000000002f665	pushq	%r14
000000000002f667	pushq	%r12
000000000002f669	pushq	%rbx
000000000002f66a	movq	%rdx,%rbx
000000000002f66d	movq	%rdi,%r14
000000000002f670	movq	0x00075d51(%rip),%rsi
000000000002f677	movq	0x00054a5a(%rip),%r12
000000000002f67e	movq	%rbx,%rdi
000000000002f681	call	*%r12
000000000002f684	movq	%rax,%r15
000000000002f687	movq	0x00075612(%rip),%rsi
000000000002f68e	movq	%rbx,%rdi
000000000002f691	call	*%r12
000000000002f694	leaq	0x00078cb5(%rip),%rsi
000000000002f69b	movq	%r15,%rdi
000000000002f69e	movq	%rax,%rdx
000000000002f6a1	call	*0x00078ca9(%rip)
000000000002f6a7	testq	%rax,%rax
000000000002f6aa	je	0x0002f6ce
000000000002f6ac	movq	0x00075d1d(%rip),%rsi
000000000002f6b3	movq	%rax,%rdi
000000000002f6b6	call	*0x00054a1c(%rip)
000000000002f6bc	cmpb	$0x01,%al
000000000002f6be	jne	0x0002f6ce
000000000002f6c0	movq	0x0007f059(%rip),%rax
000000000002f6c7	cmpb	$0x00,(%r14,%rax)
000000000002f6cc	je	0x0002f6d7
000000000002f6ce	popq	%rbx
000000000002f6cf	popq	%r12
000000000002f6d1	popq	%r14
000000000002f6d3	popq	%r15
000000000002f6d5	popq	%rbp
000000000002f6d6	ret
000000000002f6d7	movq	0x0007f092(%rip),%rax
000000000002f6de	movb	$0x00,(%r14,%rax)
000000000002f6e3	movq	0x00075cee(%rip),%rsi
000000000002f6ea	movq	%r14,%rdi
000000000002f6ed	popq	%rbx
000000000002f6ee	popq	%r12
000000000002f6f0	popq	%r14
000000000002f6f2	popq	%r15
000000000002f6f4	popq	%rbp
000000000002f6f5	jmp	*0x000549dd(%rip)
-[PBXGDB_Adaptor setFatalIntrospectionLibraryError:]:
000000000002f6fb	pushq	%rbp
000000000002f6fc	movq	%rsp,%rbp
000000000002f6ff	movq	0x0007f012(%rip),%rax
000000000002f706	movb	%dl,(%rdi,%rax)
000000000002f709	popq	%rbp
000000000002f70a	ret
-[PBXGDB_Adaptor releaseInferiorResources]:
000000000002f70b	pushq	%rbp
000000000002f70c	movq	%rsp,%rbp
000000000002f70f	pushq	%r15
000000000002f711	pushq	%r14
000000000002f713	pushq	%r13
000000000002f715	pushq	%r12
000000000002f717	pushq	%rbx
000000000002f718	subq	$0x28,%rsp
000000000002f71c	movq	%rdi,%rbx
000000000002f71f	leaq	0x0007fd5a(%rip),%rax
000000000002f726	movq	(%rax),%rax
000000000002f729	movq	(%rbx,%rax),%rdi
000000000002f72d	leaq	0x00078bdc(%rip),%rsi
000000000002f734	call	*0x00078bd6(%rip)
000000000002f73a	movq	%rax,%r12
000000000002f73d	testq	%r12,%r12
000000000002f740	jle	0x0002f82b
000000000002f746	movq	0x0007542b(%rip),%rsi
000000000002f74d	movq	0x00078ce4(%rip),%rdi
000000000002f754	leaq	0x000810bd(%rip),%rdx
000000000002f75b	movq	%r12,%rcx
000000000002f75e	xorb	%al,%al
000000000002f760	call	*0x00054972(%rip)
000000000002f766	movq	%rbx,0xb8(%rbp)
000000000002f76a	movq	%rax,%r15
000000000002f76d	leaq	0x0007fd0c(%rip),%rax
000000000002f774	movq	(%rax),%r13
000000000002f777	xorl	%ebx,%ebx
000000000002f779	movq	0x00054958(%rip),%r14
000000000002f780	movq	0xb8(%rbp),%rax
000000000002f784	movq	(%rax,%r13),%rdi
000000000002f788	leaq	0x00078b91(%rip),%rsi
000000000002f78f	movq	%rbx,%rdx
000000000002f792	call	*0x00078b88(%rip)
000000000002f798	movq	%rax,%rdi
000000000002f79b	movq	0x00075c46(%rip),%rsi
000000000002f7a2	leaq	0xd0(%rbp),%rdx
000000000002f7a6	call	*%r14
000000000002f7a9	movq	0xd0(%rbp),%rcx
000000000002f7ad	movq	%r15,%rdi
000000000002f7b0	movq	0x000754e1(%rip),%rsi
000000000002f7b7	leaq	0x0008107a(%rip),%rdx
000000000002f7be	xorb	%al,%al
000000000002f7c0	call	*%r14
000000000002f7c3	incq	%rbx
000000000002f7c6	cmpq	%rbx,%r12
000000000002f7c9	jne	0x0002f780
000000000002f7cb	movq	0x0007532e(%rip),%rsi
000000000002f7d2	leaq	0x0008107f(%rip),%rdx
000000000002f7d9	movq	0x000548f8(%rip),%r14
000000000002f7e0	movq	%r15,%rdi
000000000002f7e3	call	*%r14
000000000002f7e6	movq	0x00075293(%rip),%rsi
000000000002f7ed	movq	0x00078e4c(%rip),%rdi
000000000002f7f4	call	*%r14
000000000002f7f7	movq	%rax,%r12
000000000002f7fa	movq	0x00075bef(%rip),%rsi
000000000002f801	movq	%r12,%rdi
000000000002f804	movq	%r15,%rdx
000000000002f807	call	*%r14
000000000002f80a	movq	0x000752af(%rip),%rsi
000000000002f811	movq	0xb8(%rbp),%rbx
000000000002f815	movq	%rbx,%rdi
000000000002f818	call	*%r14
000000000002f81b	movq	0x000752a6(%rip),%rsi
000000000002f822	movq	%rax,%rdi
000000000002f825	movq	%r12,%rdx
000000000002f828	call	*%r14
000000000002f82b	movq	%rbx,0xc0(%rbp)
000000000002f82f	movq	0x000794da(%rip),%rax
000000000002f836	movq	%rax,0xc8(%rbp)
000000000002f83a	movq	0x00075bb7(%rip),%rsi
000000000002f841	leaq	0xc0(%rbp),%rdi
000000000002f845	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000002f84a	addq	$0x28,%rsp
000000000002f84e	popq	%rbx
000000000002f84f	popq	%r12
000000000002f851	popq	%r13
000000000002f853	popq	%r14
000000000002f855	popq	%r15
000000000002f857	popq	%rbp
000000000002f858	ret
-[PBXGDB_Adaptor cacheObjcClassName:atAddress:]:
000000000002f859	pushq	%rbp
000000000002f85a	movq	%rsp,%rbp
000000000002f85d	pushq	%r15
000000000002f85f	pushq	%r14
000000000002f861	pushq	%rbx
000000000002f862	pushq	%rax
000000000002f863	movq	%rcx,%r14
000000000002f866	movq	%rdx,%r15
000000000002f869	movq	%rdi,%rbx
000000000002f86c	movq	0x0007ef05(%rip),%rax
000000000002f873	movq	(%rbx,%rax),%rdi
000000000002f877	testq	%rdi,%rdi
000000000002f87a	jne	0x0002f8bd
000000000002f87c	movq	0x00078c2d(%rip),%rdi
000000000002f883	leaq	0x00078a56(%rip),%rsi
000000000002f88a	call	*0x00078a50(%rip)
000000000002f890	movq	0x000751d9(%rip),%rsi
000000000002f897	movq	%rax,%rdi
000000000002f89a	call	*0x00054838(%rip)
000000000002f8a0	movq	0x0007eed1(%rip),%rdx
000000000002f8a7	movq	%rax,%rdi
000000000002f8aa	movq	%rbx,%rsi
000000000002f8ad	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000002f8b2	movq	0x0007eebf(%rip),%rax
000000000002f8b9	movq	(%rbx,%rax),%rdi
000000000002f8bd	movq	0x0007546c(%rip),%rsi
000000000002f8c4	movq	%r15,%rdx
000000000002f8c7	movq	%r14,%rcx
000000000002f8ca	addq	$0x08,%rsp
000000000002f8ce	popq	%rbx
000000000002f8cf	popq	%r14
000000000002f8d1	popq	%r15
000000000002f8d3	popq	%rbp
000000000002f8d4	jmp	*0x000547fe(%rip)
-[PBXGDB_Adaptor objCClassNameAtAddress:]:
000000000002f8da	pushq	%rbp
000000000002f8db	movq	%rsp,%rbp
000000000002f8de	movq	0x0007ee93(%rip),%rax
000000000002f8e5	movq	(%rdi,%rax),%rdi
000000000002f8e9	movq	0x00078a60(%rip),%rax
000000000002f8f0	leaq	0x00078a59(%rip),%rsi
000000000002f8f7	popq	%rbp
000000000002f8f8	jmp	*%rax
-[PBXGDB_Adaptor isRemoteDebugging]:
000000000002f8fa	pushq	%rbp
000000000002f8fb	movq	%rsp,%rbp
000000000002f8fe	movb	$0x01,%al
000000000002f900	movq	0x0007ee79(%rip),%rcx
000000000002f907	cmpb	$0x00,(%rdi,%rcx)
000000000002f90b	jne	0x0002f91b
000000000002f90d	movq	0x0007eddc(%rip),%rax
000000000002f914	cmpb	$0x00,(%rdi,%rax)
000000000002f918	setne	%al
000000000002f91b	movzbl	%al,%eax
000000000002f91e	popq	%rbp
000000000002f91f	ret
-[PBXGDB_Adaptor setIsSSHRemote:]:
000000000002f920	pushq	%rbp
000000000002f921	movq	%rsp,%rbp
000000000002f924	movq	0x0007ee55(%rip),%rax
000000000002f92b	movb	%dl,(%rdi,%rax)
000000000002f92e	popq	%rbp
000000000002f92f	ret
-[PBXGDB_Adaptor expressionsDescriptionDV]:
000000000002f930	pushq	%rbp
000000000002f931	movq	%rsp,%rbp
000000000002f934	movq	0x0007ed75(%rip),%rax
000000000002f93b	movq	(%rdi,%rax),%rax
000000000002f93f	popq	%rbp
000000000002f940	ret
-[PBXGDB_Adaptor createNewExpressionsDescriptionDV]:
000000000002f941	pushq	%rbp
000000000002f942	movq	%rsp,%rbp
000000000002f945	pushq	%rbx
000000000002f946	pushq	%rax
000000000002f947	movq	%rdi,%rbx
000000000002f94a	movq	0x00078b67(%rip),%rdi
000000000002f951	leaq	0x00078988(%rip),%rsi
000000000002f958	call	*0x00078982(%rip)
000000000002f95e	movq	0x000753eb(%rip),%rsi
000000000002f965	movq	%rax,%rdi
000000000002f968	movq	%rbx,%rdx
000000000002f96b	addq	$0x08,%rsp
000000000002f96f	popq	%rbx
000000000002f970	popq	%rbp
000000000002f971	jmp	*0x00054761(%rip)
-[PBXGDB_Adaptor showGlobalsModuleIfEmpty:]:
000000000002f977	pushq	%rbp
000000000002f978	movq	%rsp,%rbp
000000000002f97b	pushq	%rbx
000000000002f97c	pushq	%rax
000000000002f97d	movq	%rdx,%rbx
000000000002f980	movq	0x00078cc1(%rip),%rdi
000000000002f987	leaq	0x000789a2(%rip),%rsi
000000000002f98e	call	*0x0007899c(%rip)
000000000002f994	leaq	0x000789a5(%rip),%rsi
000000000002f99b	movq	%rbx,%rdi
000000000002f99e	movq	%rax,%rdx
000000000002f9a1	call	*0x00078999(%rip)
000000000002f9a7	cmpb	$0x01,%al
000000000002f9a9	jne	0x0002f9c0
000000000002f9ab	movq	0x00075a5e(%rip),%rsi
000000000002f9b2	movq	%rbx,%rdi
000000000002f9b5	call	*0x0005471d(%rip)
000000000002f9bb	testq	%rax,%rax
000000000002f9be	je	0x0002f9c7
000000000002f9c0	addq	$0x08,%rsp
000000000002f9c4	popq	%rbx
000000000002f9c5	popq	%rbp
000000000002f9c6	ret
000000000002f9c7	movq	0x00075a52(%rip),%rsi
000000000002f9ce	movq	0x00075a43(%rip),%rdx
000000000002f9d5	movq	%rbx,%rdi
000000000002f9d8	addq	$0x08,%rsp
000000000002f9dc	popq	%rbx
000000000002f9dd	popq	%rbp
000000000002f9de	jmp	*0x000546f4(%rip)
-[PBXGDB_Adaptor descriptionDVForActiveRegisters]:
000000000002f9e4	pushq	%rbp
000000000002f9e5	movq	%rsp,%rbp
000000000002f9e8	pushq	%r15
000000000002f9ea	pushq	%r14
000000000002f9ec	pushq	%r13
000000000002f9ee	pushq	%r12
000000000002f9f0	pushq	%rbx
000000000002f9f1	subq	$0x18,%rsp
000000000002f9f5	movq	%rdi,%r14
000000000002f9f8	movq	%r14,0xd0(%rbp)
000000000002f9fc	movq	0x00075a2d(%rip),%rsi
000000000002fa03	movq	0x00078a56(%rip),%rdi
000000000002fa0a	call	*0x000546c8(%rip)
000000000002fa10	movq	%rax,%r15
000000000002fa13	movq	0x0007ed6e(%rip),%rax
000000000002fa1a	movq	(%r14,%rax),%rdi
000000000002fa1e	leaq	0x0007892b(%rip),%rsi
000000000002fa25	leaq	0x00080e6c(%rip),%rdx
000000000002fa2c	call	*0x0007891e(%rip)
000000000002fa32	movq	%rax,%r12
000000000002fa35	movq	%r12,0xc0(%rbp)
000000000002fa39	leaq	0x000788d0(%rip),%rsi
000000000002fa40	movq	%r12,%rdi
000000000002fa43	call	*0x000788c7(%rip)
000000000002fa49	movq	%rax,0xc8(%rbp)
000000000002fa4d	testq	%rax,%rax
000000000002fa50	je	0x0002fb03
000000000002fa56	xorl	%ebx,%ebx
000000000002fa58	movq	0x00054679(%rip),%r13
000000000002fa5f	movq	%r12,%rdi
000000000002fa62	leaq	0x000788b7(%rip),%rsi
000000000002fa69	movq	%rbx,%rdx
000000000002fa6c	call	*0x000788ae(%rip)
000000000002fa72	movq	%r15,%r12
000000000002fa75	movq	%rax,%r15
000000000002fa78	movq	0x00078a39(%rip),%rdi
000000000002fa7f	leaq	0x0007885a(%rip),%rsi
000000000002fa86	call	*0x00078854(%rip)
000000000002fa8c	movq	%rax,%rdi
000000000002fa8f	movq	0x000752ba(%rip),%rsi
000000000002fa96	movq	%r14,%rdx
000000000002fa99	call	*%r13
000000000002fa9c	movq	%rax,%r14
000000000002fa9f	movq	%r14,%rdi
000000000002faa2	movq	0x000752af(%rip),%rsi
000000000002faa9	movq	%r15,%rdx
000000000002faac	movq	%r12,%r15
000000000002faaf	movq	0xc0(%rbp),%r12
000000000002fab3	call	*%r13
000000000002fab6	movq	%r14,%rdi
000000000002fab9	movq	0x00075978(%rip),%rsi
000000000002fac0	movl	$0x00000001,%edx
000000000002fac5	call	*%r13
000000000002fac8	movq	%r14,%rdi
000000000002facb	movq	0x0007594e(%rip),%rsi
000000000002fad2	movq	0x00075967(%rip),%rdx
000000000002fad9	call	*%r13
000000000002fadc	movq	%r15,%rdi
000000000002fadf	leaq	0x0007881a(%rip),%rsi
000000000002fae6	movq	%r14,%rdx
000000000002fae9	movq	0xd0(%rbp),%r14
000000000002faed	call	*0x0007880d(%rip)
000000000002faf3	movq	0xc8(%rbp),%rax
000000000002faf7	incq	%rbx
000000000002fafa	cmpq	%rbx,%rax
000000000002fafd	jne	0x0002fa5f
000000000002fb03	movq	%r15,%rax
000000000002fb06	addq	$0x18,%rsp
000000000002fb0a	popq	%rbx
000000000002fb0b	popq	%r12
000000000002fb0d	popq	%r13
000000000002fb0f	popq	%r14
000000000002fb11	popq	%r15
000000000002fb13	popq	%rbp
000000000002fb14	ret
-[PBXGDB_Adaptor registersDescriptionDVExpressionsWindow]:
000000000002fb15	pushq	%rbp
000000000002fb16	movq	%rsp,%rbp
000000000002fb19	movq	0x0007ec70(%rip),%rax
000000000002fb20	movq	(%rdi,%rax),%rax
000000000002fb24	popq	%rbp
000000000002fb25	ret
-[PBXGDB_Adaptor fetchRegistersForDV:]:
000000000002fb26	pushq	%rbp
000000000002fb27	movq	%rsp,%rbp
000000000002fb2a	pushq	%r14
000000000002fb2c	pushq	%rbx
000000000002fb2d	movq	%rdx,%rbx
000000000002fb30	movq	%rdi,%r14
000000000002fb33	movq	0x00078b0e(%rip),%rdi
000000000002fb3a	leaq	0x000787ef(%rip),%rsi
000000000002fb41	call	*0x000787e9(%rip)
000000000002fb47	leaq	0x000787f2(%rip),%rsi
000000000002fb4e	movq	%rbx,%rdi
000000000002fb51	movq	%rax,%rdx
000000000002fb54	call	*0x000787e6(%rip)
000000000002fb5a	cmpb	$0x01,%al
000000000002fb5c	jne	0x0002fb73
000000000002fb5e	movq	0x000758ab(%rip),%rsi
000000000002fb65	movq	%rbx,%rdi
000000000002fb68	call	*0x0005456a(%rip)
000000000002fb6e	testq	%rax,%rax
000000000002fb71	je	0x0002fb78
000000000002fb73	popq	%rbx
000000000002fb74	popq	%r14
000000000002fb76	popq	%rbp
000000000002fb77	ret
000000000002fb78	movq	0x000758c9(%rip),%rsi
000000000002fb7f	movq	%r14,%rdi
000000000002fb82	call	*0x00054550(%rip)
000000000002fb88	movq	0x000758c1(%rip),%rsi
000000000002fb8f	movq	%rax,%rdi
000000000002fb92	movq	%rbx,%rdx
000000000002fb95	movq	0x0005453c(%rip),%rax
000000000002fb9c	popq	%rbx
000000000002fb9d	popq	%r14
000000000002fb9f	popq	%rbp
000000000002fba0	jmp	*%rax
-[PBXGDB_Adaptor shouldContinueAfterAttach]:
000000000002fba2	pushq	%rbp
000000000002fba3	movq	%rsp,%rbp
000000000002fba6	movl	$0x00000001,%eax
000000000002fbab	popq	%rbp
000000000002fbac	ret
-[PBXGDB_Adaptor setVariableFormat:forDataValue:]:
000000000002fbad	pushq	%rbp
000000000002fbae	movq	%rsp,%rbp
000000000002fbb1	pushq	%r15
000000000002fbb3	pushq	%r14
000000000002fbb5	pushq	%r12
000000000002fbb7	pushq	%rbx
000000000002fbb8	movq	%rcx,%rbx
000000000002fbbb	movl	%edx,%r14d
000000000002fbbe	movq	%rdi,%r12
000000000002fbc1	movq	0x000758c8(%rip),%rsi
000000000002fbc8	movq	0x00078919(%rip),%rdi
000000000002fbcf	movq	%rbx,%rdx
000000000002fbd2	call	*0x00054500(%rip)
000000000002fbd8	movq	%rax,%r15
000000000002fbdb	testq	%rbx,%rbx
000000000002fbde	je	0x0002fc3e
000000000002fbe0	testq	%r15,%r15
000000000002fbe3	je	0x0002fc3e
000000000002fbe5	movq	0x0007587c(%rip),%rsi
000000000002fbec	movq	%r12,%rdi
000000000002fbef	call	*0x000544e3(%rip)
000000000002fbf5	movq	%rax,%rbx
000000000002fbf8	testl	%r14d,%r14d
000000000002fbfb	je	0x0002fc47
000000000002fbfd	movq	0x00074f74(%rip),%rsi
000000000002fc04	movq	0x00078845(%rip),%rdi
000000000002fc0b	movl	%r14d,%ecx
000000000002fc0e	leaq	0x00080ce3(%rip),%rdx
000000000002fc15	xorb	%al,%al
000000000002fc17	call	*0x000544bb(%rip)
000000000002fc1d	movq	0x0007510c(%rip),%rsi
000000000002fc24	movq	%rbx,%rdi
000000000002fc27	movq	%rax,%rdx
000000000002fc2a	movq	%r15,%rcx
000000000002fc2d	movq	0x000544a4(%rip),%rax
000000000002fc34	popq	%rbx
000000000002fc35	popq	%r12
000000000002fc37	popq	%r14
000000000002fc39	popq	%r15
000000000002fc3b	popq	%rbp
000000000002fc3c	jmp	*%rax
000000000002fc3e	popq	%rbx
000000000002fc3f	popq	%r12
000000000002fc41	popq	%r14
000000000002fc43	popq	%r15
000000000002fc45	popq	%rbp
000000000002fc46	ret
000000000002fc47	movq	0x00075712(%rip),%rsi
000000000002fc4e	movq	%rbx,%rdi
000000000002fc51	movq	%r15,%rdx
000000000002fc54	popq	%rbx
000000000002fc55	popq	%r12
000000000002fc57	popq	%r14
000000000002fc59	popq	%r15
000000000002fc5b	popq	%rbp
000000000002fc5c	jmp	*0x00054476(%rip)
-[PBXGDB_Adaptor registerSetDefinitions]:
000000000002fc62	pushq	%rbp
000000000002fc63	movq	%rsp,%rbp
000000000002fc66	pushq	%r15
000000000002fc68	pushq	%r14
000000000002fc6a	pushq	%r13
000000000002fc6c	pushq	%r12
000000000002fc6e	pushq	%rbx
000000000002fc6f	subq	$0x18,%rsp
000000000002fc73	movq	%rdi,%rbx
000000000002fc76	movq	0x0007eb2b(%rip),%rax
000000000002fc7d	movq	(%rbx,%rax),%rax
000000000002fc81	testq	%rax,%rax
000000000002fc84	jne	0x0002fe09
000000000002fc8a	movq	0x000789c7(%rip),%r15
000000000002fc91	movq	0x00078850(%rip),%rdi
000000000002fc98	leaq	0x00078691(%rip),%rsi
000000000002fc9f	call	*0x0007868b(%rip)
000000000002fca5	movq	0x00075814(%rip),%rsi
000000000002fcac	movq	0x00054425(%rip),%r14
000000000002fcb3	movq	%r15,%rdi
000000000002fcb6	movq	%rax,%rdx
000000000002fcb9	call	*%r14
000000000002fcbc	movq	0x00075805(%rip),%rsi
000000000002fcc3	movq	%rax,%rdi
000000000002fcc6	call	*%r14
000000000002fcc9	leaq	0x00080c48(%rip),%rdx
000000000002fcd0	movq	0x000752a1(%rip),%rsi
000000000002fcd7	movq	%rax,%rdi
000000000002fcda	call	*%r14
000000000002fcdd	movq	0x000757ec(%rip),%rsi
000000000002fce4	movq	0x00078975(%rip),%rdi
000000000002fceb	movq	%rax,%rdx
000000000002fcee	call	*%r14
000000000002fcf1	movq	0x0007eab0(%rip),%rdx
000000000002fcf8	movq	%rax,%rdi
000000000002fcfb	movq	%rbx,%rsi
000000000002fcfe	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000002fd03	movq	0x0007ea9e(%rip),%rax
000000000002fd0a	movq	(%rbx,%rax),%rdi
000000000002fd0e	movq	%rbx,0xc8(%rbp)
000000000002fd12	movq	0x00074dd7(%rip),%rsi
000000000002fd19	call	*%r14
000000000002fd1c	movq	%rax,0xd0(%rbp)
000000000002fd20	movq	0x00074dd1(%rip),%rsi
000000000002fd27	movq	%rax,%rdi
000000000002fd2a	call	*%r14
000000000002fd2d	jmp	0x0002fdee
000000000002fd32	movq	%r12,%rdi
000000000002fd35	leaq	0x00078614(%rip),%rsi
000000000002fd3c	leaq	0x00080b55(%rip),%rdx
000000000002fd43	call	*0x00078607(%rip)
000000000002fd49	movq	%rax,%r15
000000000002fd4c	movq	%r15,%rdi
000000000002fd4f	leaq	0x000785ba(%rip),%rsi
000000000002fd56	call	*0x000785b4(%rip)
000000000002fd5c	movq	%rax,%rbx
000000000002fd5f	movq	0x00078902(%rip),%rdi
000000000002fd66	movq	0x0007576b(%rip),%rsi
000000000002fd6d	call	*0x00054365(%rip)
000000000002fd73	movq	%rax,%r14
000000000002fd76	testq	%rbx,%rbx
000000000002fd79	je	0x0002fdc4
000000000002fd7b	xorl	%r13d,%r13d
000000000002fd7e	movq	%r15,%rdi
000000000002fd81	leaq	0x00078598(%rip),%rsi
000000000002fd88	movq	%r13,%rdx
000000000002fd8b	call	*0x0007858f(%rip)
000000000002fd91	movq	%r12,%rdi
000000000002fd94	leaq	0x000785b5(%rip),%rsi
000000000002fd9b	movq	%rax,%rdx
000000000002fd9e	call	*0x000785ac(%rip)
000000000002fda4	testq	%rax,%rax
000000000002fda7	je	0x0002fdbc
000000000002fda9	movq	%r14,%rdi
000000000002fdac	movq	0x0007572d(%rip),%rsi
000000000002fdb3	movq	%rax,%rdx
000000000002fdb6	call	*0x0005431c(%rip)
000000000002fdbc	incq	%r13
000000000002fdbf	cmpq	%r13,%rbx
000000000002fdc2	jne	0x0002fd7e
000000000002fdc4	movq	%r12,%rdi
000000000002fdc7	movq	0x00074f62(%rip),%rsi
000000000002fdce	movq	%r14,%rdx
000000000002fdd1	leaq	0x00080b60(%rip),%rcx
000000000002fdd8	movq	0x000542f9(%rip),%rbx
000000000002fddf	call	*%rbx
000000000002fde1	movq	0xd0(%rbp),%rdi
000000000002fde5	movq	0x00074d0c(%rip),%rsi
000000000002fdec	call	*%rbx
000000000002fdee	movq	%rax,%r12
000000000002fdf1	testq	%r12,%r12
000000000002fdf4	jne	0x0002fd32
000000000002fdfa	movq	0x0007e9a7(%rip),%rax
000000000002fe01	movq	0xc8(%rbp),%rcx
000000000002fe05	movq	(%rcx,%rax),%rax
000000000002fe09	addq	$0x18,%rsp
000000000002fe0d	popq	%rbx
000000000002fe0e	popq	%r12
000000000002fe10	popq	%r13
000000000002fe12	popq	%r14
000000000002fe14	popq	%r15
000000000002fe16	popq	%rbp
000000000002fe17	ret
-[PBXGDB_Adaptor selectRegisterSet:]:
000000000002fe18	pushq	%rbp
000000000002fe19	movq	%rsp,%rbp
000000000002fe1c	pushq	%r15
000000000002fe1e	pushq	%r14
000000000002fe20	pushq	%r13
000000000002fe22	pushq	%r12
000000000002fe24	pushq	%rbx
000000000002fe25	subq	$0x28,%rsp
000000000002fe29	movq	%rdx,0xd0(%rbp)
000000000002fe2d	movq	%rdi,%r15
000000000002fe30	movq	0x000756b1(%rip),%rsi
000000000002fe37	movq	0x00078832(%rip),%rdi
000000000002fe3e	movq	0x00054293(%rip),%rbx
000000000002fe45	call	*%rbx
000000000002fe47	movq	%rax,%r12
000000000002fe4a	movq	0x0007569f(%rip),%rsi
000000000002fe51	movq	%r15,%rdi
000000000002fe54	call	*%rbx
000000000002fe56	movq	0x00074c93(%rip),%rsi
000000000002fe5d	movq	%rax,%rdi
000000000002fe60	call	*%rbx
000000000002fe62	movq	%rax,%rbx
000000000002fe65	leaq	0x00080acc(%rip),%r13
000000000002fe6c	jmp	0x0002fe9c
000000000002fe6e	movq	%r14,%rdi
000000000002fe71	leaq	0x000784d8(%rip),%rsi
000000000002fe78	movq	%r13,%rdx
000000000002fe7b	call	*0x000784cf(%rip)
000000000002fe81	movq	%r12,%rdi
000000000002fe84	movq	0x0007566d(%rip),%rsi
000000000002fe8b	movq	%rax,%rdx
000000000002fe8e	call	*0x00054244(%rip)
000000000002fe94	cmpb	$0x01,%al
000000000002fe96	je	0x0002ff1f
000000000002fe9c	movq	%rbx,%rdi
000000000002fe9f	movq	0x00074c52(%rip),%rsi
000000000002fea6	call	*0x0005422c(%rip)
000000000002feac	movq	%rax,%r14
000000000002feaf	testq	%r14,%r14
000000000002feb2	jne	0x0002fe6e
000000000002feb4	movq	0x000787bd(%rip),%rbx
000000000002febb	movq	0x0007563e(%rip),%rsi
000000000002fec2	movq	0x00078797(%rip),%rdi
000000000002fec9	leaq	0x00080a88(%rip),%r14
000000000002fed0	movq	%r15,%r13
000000000002fed3	movq	0x000541fe(%rip),%r15
000000000002feda	movq	%r14,%rdx
000000000002fedd	call	*%r15
000000000002fee0	movq	0x00075621(%rip),%rsi
000000000002fee7	leaq	0x000809aa(%rip),%rcx
000000000002feee	movq	%rcx,0x08(%rsp)
000000000002fef3	movq	%rax,(%rsp)
000000000002fef7	movq	$0x00000000,0x10(%rsp)
000000000002ff00	leaq	0x00080a31(%rip),%rcx
000000000002ff07	movq	%rbx,%rdi
000000000002ff0a	movq	%r12,%rdx
000000000002ff0d	movq	0xd0(%rbp),%r8
000000000002ff11	movq	%r14,%r9
000000000002ff14	xorb	%al,%al
000000000002ff16	call	*%r15
000000000002ff19	movq	%r13,%r15
000000000002ff1c	movq	%rax,%r14
000000000002ff1f	movq	0x0007e862(%rip),%rdx
000000000002ff26	movq	%r14,%rdi
000000000002ff29	movq	%r15,%rsi
000000000002ff2c	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000002ff31	movq	0x000755d8(%rip),%rsi
000000000002ff38	movq	%r15,%rdi
000000000002ff3b	call	*0x00054197(%rip)
000000000002ff41	movq	0x0007e850(%rip),%rdx
000000000002ff48	movq	%rax,%rdi
000000000002ff4b	movq	%r15,%rsi
000000000002ff4e	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000002ff53	movq	0x0007e836(%rip),%rax
000000000002ff5a	movq	(%r15,%rax),%rdi
000000000002ff5e	testq	%rdi,%rdi
000000000002ff61	je	0x0002ffe9
000000000002ff67	leaq	0x000783a2(%rip),%rsi
000000000002ff6e	call	*0x0007839c(%rip)
000000000002ff74	movq	%rax,%r14
000000000002ff77	movq	0x0007559a(%rip),%rsi
000000000002ff7e	movq	0x00054153(%rip),%rbx
000000000002ff85	movq	%r15,%rdi
000000000002ff88	call	*%rbx
000000000002ff8a	movq	0x0007558f(%rip),%rsi
000000000002ff91	movq	%rax,%rdi
000000000002ff94	call	*%rbx
000000000002ff96	movq	%rax,%r12
000000000002ff99	testq	%r14,%r14
000000000002ff9c	je	0x0002ffd9
000000000002ff9e	xorl	%ebx,%ebx
000000000002ffa0	leaq	0x00078379(%rip),%r13
000000000002ffa7	movq	0x0007e7e2(%rip),%rax
000000000002ffae	movq	(%r15,%rax),%rdi
000000000002ffb2	movq	%r13,%rsi
000000000002ffb5	movq	%rbx,%rdx
000000000002ffb8	call	*0x00078362(%rip)
000000000002ffbe	movq	%r12,%rdi
000000000002ffc1	movq	0x00075560(%rip),%rsi
000000000002ffc8	movq	%rax,%rdx
000000000002ffcb	call	*0x00054107(%rip)
000000000002ffd1	incq	%rbx
000000000002ffd4	cmpq	%rbx,%r14
000000000002ffd7	jne	0x0002ffa7
000000000002ffd9	movq	0x00075550(%rip),%rsi
000000000002ffe0	movq	%r12,%rdi
000000000002ffe3	call	*0x000540ef(%rip)
000000000002ffe9	movq	0x00075520(%rip),%rsi
000000000002fff0	movq	0x000540e1(%rip),%rbx
000000000002fff7	movq	%r15,%rdi
000000000002fffa	call	*%rbx
000000000002fffc	movq	0x0007e78d(%rip),%rdx
0000000000030003	movq	%rax,%rdi
0000000000030006	movq	%r15,%rsi
0000000000030009	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000003000e	leaq	0x000782fb(%rip),%rsi
0000000000030015	movq	0x0007e774(%rip),%rax
000000000003001c	movq	(%r15,%rax),%rdi
0000000000030020	call	*0x000782ea(%rip)
0000000000030026	movq	%rax,%r14
0000000000030029	movq	0x000754e8(%rip),%rsi
0000000000030030	movq	%r15,%rdi
0000000000030033	call	*%rbx
0000000000030035	movq	0x000754e4(%rip),%rsi
000000000003003c	movq	%rax,%rdi
000000000003003f	call	*%rbx
0000000000030041	movq	%rax,%r12
0000000000030044	testq	%r14,%r14
0000000000030047	je	0x00030084
0000000000030049	xorl	%ebx,%ebx
000000000003004b	leaq	0x000782ce(%rip),%r13
0000000000030052	movq	0x0007e737(%rip),%rax
0000000000030059	movq	(%r15,%rax),%rdi
000000000003005d	movq	%r13,%rsi
0000000000030060	movq	%rbx,%rdx
0000000000030063	call	*0x000782b7(%rip)
0000000000030069	movq	%r12,%rdi
000000000003006c	movq	0x000754c5(%rip),%rsi
0000000000030073	movq	%rax,%rdx
0000000000030076	call	*0x0005405c(%rip)
000000000003007c	incq	%rbx
000000000003007f	cmpq	%rbx,%r14
0000000000030082	jne	0x00030052
0000000000030084	addq	$0x28,%rsp
0000000000030088	popq	%rbx
0000000000030089	popq	%r12
000000000003008b	popq	%r13
000000000003008d	popq	%r14
000000000003008f	popq	%r15
0000000000030091	popq	%rbp
0000000000030092	ret
-[PBXGDB_Adaptor registerArrayForParentNamed:]:
0000000000030093	pushq	%rbp
0000000000030094	movq	%rsp,%rbp
0000000000030097	movq	0x0007e6ea(%rip),%rax
000000000003009e	movq	(%rdi,%rax),%rdi
00000000000300a2	movq	0x000782a7(%rip),%rax
00000000000300a9	leaq	0x000782a0(%rip),%rsi
00000000000300b0	popq	%rbp
00000000000300b1	jmp	*%rax
-[PBXGDB_Adaptor activeRegisterSet]:
00000000000300b3	pushq	%rbp
00000000000300b4	movq	%rsp,%rbp
00000000000300b7	movq	0x0007e6ca(%rip),%rax
00000000000300be	movq	(%rdi,%rax),%rax
00000000000300c2	popq	%rbp
00000000000300c3	ret
-[PBXGDB_Adaptor requestUpdateUnboundDataValuesForStackFrame:]:
00000000000300c4	pushq	%rbp
00000000000300c5	movq	%rsp,%rbp
00000000000300c8	pushq	%r15
00000000000300ca	pushq	%r14
00000000000300cc	pushq	%r13
00000000000300ce	pushq	%r12
00000000000300d0	pushq	%rbx
00000000000300d1	subq	$0x18,%rsp
00000000000300d5	movq	%rdx,%r15
00000000000300d8	movq	%rdi,0xc0(%rbp)
00000000000300dc	movq	0x0007545d(%rip),%rsi
00000000000300e3	movq	0x00053fee(%rip),%r14
00000000000300ea	call	*%r14
00000000000300ed	movq	%rax,%rbx
00000000000300f0	leaq	0x00078219(%rip),%rsi
00000000000300f7	movq	%rbx,%rdi
00000000000300fa	call	*0x00078210(%rip)
0000000000030100	movq	%rax,%r12
0000000000030103	movq	0x0007543e(%rip),%rsi
000000000003010a	movq	%r15,%rdi
000000000003010d	call	*%r14
0000000000030110	movq	%rax,0xd0(%rbp)
0000000000030114	movq	0x00075435(%rip),%rsi
000000000003011b	movq	%rax,%rdi
000000000003011e	call	*%r14
0000000000030121	movq	%rax,0xc8(%rbp)
0000000000030125	movq	%r12,%rax
0000000000030128	testq	%rax,%rax
000000000003012b	je	0x0003017d
000000000003012d	xorl	%r14d,%r14d
0000000000030130	movq	0x00053fa1(%rip),%r12
0000000000030137	movq	%rbx,%rdi
000000000003013a	leaq	0x000781df(%rip),%rsi
0000000000030141	movq	%r14,%rdx
0000000000030144	movq	%rax,%r13
0000000000030147	call	*0x000781d3(%rip)
000000000003014d	movq	%rax,%r15
0000000000030150	movq	%r15,%rdi
0000000000030153	movq	0x00075166(%rip),%rsi
000000000003015a	movq	0xc8(%rbp),%rdx
000000000003015e	call	*%r12
0000000000030161	movq	0xd0(%rbp),%rdi
0000000000030165	movq	0x000753ec(%rip),%rsi
000000000003016c	movq	%r15,%rdx
000000000003016f	call	*%r12
0000000000030172	movq	%r13,%rax
0000000000030175	incq	%r14
0000000000030178	cmpq	%r14,%rax
000000000003017b	jne	0x00030137
000000000003017d	movq	0x000752c4(%rip),%rsi
0000000000030184	movq	0xc0(%rbp),%rdi
0000000000030188	call	*0x00053f4a(%rip)
000000000003018e	movq	0x000753cb(%rip),%rsi
0000000000030195	movq	%rax,%rdi
0000000000030198	movq	0xd0(%rbp),%rdx
000000000003019c	movq	0x00053f35(%rip),%rax
00000000000301a3	addq	$0x18,%rsp
00000000000301a7	popq	%rbx
00000000000301a8	popq	%r12
00000000000301aa	popq	%r13
00000000000301ac	popq	%r14
00000000000301ae	popq	%r15
00000000000301b0	popq	%rbp
00000000000301b1	jmp	*%rax
-[PBXGDB_Adaptor undoSupported]:
00000000000301b3	pushq	%rbp
00000000000301b4	movq	%rsp,%rbp
00000000000301b7	movq	0x0007e5f2(%rip),%rax
00000000000301be	movsbl	(%rdi,%rax),%eax
00000000000301c2	popq	%rbp
00000000000301c3	ret
-[PBXGDB_Adaptor setUndoSupported:]:
00000000000301c4	pushq	%rbp
00000000000301c5	movq	%rsp,%rbp
00000000000301c8	movq	0x0007e5e1(%rip),%rax
00000000000301cf	movb	%dl,(%rdi,%rax)
00000000000301d2	popq	%rbp
00000000000301d3	ret
-[PBXGDB_Adaptor setGDBForcedToQuit:]:
00000000000301d4	pushq	%rbp
00000000000301d5	movq	%rsp,%rbp
00000000000301d8	movq	0x0007e5d9(%rip),%rax
00000000000301df	movb	%dl,(%rdi,%rax)
00000000000301e2	popq	%rbp
00000000000301e3	ret
-[PBXGDB_Adaptor unicharBufferAddressRange]:
00000000000301e4	pushq	%rbp
00000000000301e5	movq	%rsp,%rbp
00000000000301e8	movq	0x0007e5d1(%rip),%rax
00000000000301ef	movq	(%rdi,%rax),%rax
00000000000301f3	popq	%rbp
00000000000301f4	ret
-[PBXGDB_Adaptor setUnicharBufferAddressRange:]:
00000000000301f5	pushq	%rbp
00000000000301f6	movq	%rsp,%rbp
00000000000301f9	movq	%rdx,%rax
00000000000301fc	movq	%rdi,%rcx
00000000000301ff	movq	0x0007e5ba(%rip),%rdx
0000000000030206	movq	%rax,%rdi
0000000000030209	movq	%rcx,%rsi
000000000003020c	popq	%rbp
000000000003020d	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_ArrayDataValue containerIsInitialized]:
0000000000030212	pushq	%rbp
0000000000030213	movq	%rsp,%rbp
0000000000030216	leaq	0x0007f03b(%rip),%rax
000000000003021d	movq	(%rax),%rax
0000000000030220	cmpq	$0x00,(%rdi,%rax)
0000000000030225	setne	%al
0000000000030228	movzbl	%al,%eax
000000000003022b	popq	%rbp
000000000003022c	ret
-[PBXGDB_ArrayDataValue containerNeedsUpdate]:
000000000003022d	pushq	%rbp
000000000003022e	movq	%rsp,%rbp
0000000000030231	leaq	0x0007ef58(%rip),%rax
0000000000030238	movq	(%rax),%rax
000000000003023b	movq	(%rdi,%rax),%rax
000000000003023f	leaq	0x0007ef42(%rip),%rcx
0000000000030246	movq	(%rcx),%rcx
0000000000030249	cmpq	(%rdi,%rcx),%rax
000000000003024d	setne	%al
0000000000030250	movzbl	%al,%eax
0000000000030253	popq	%rbp
0000000000030254	ret
-[PBXGDB_ArrayDataValue requestNewContainer]:
0000000000030255	pushq	%rbp
0000000000030256	movq	%rsp,%rbp
0000000000030259	pushq	%r14
000000000003025b	pushq	%rbx
000000000003025c	movq	%rdi,%rbx
000000000003025f	leaq	0x0007efda(%rip),%rax
0000000000030266	movq	(%rax),%rax
0000000000030269	cmpl	$0x00,(%rbx,%rax)
000000000003026d	jne	0x00030283
000000000003026f	movq	0x000752f2(%rip),%rsi
0000000000030276	movq	%rbx,%rdi
0000000000030279	call	*0x00053e59(%rip)
000000000003027f	testb	%al,%al
0000000000030281	je	0x00030288
0000000000030283	popq	%rbx
0000000000030284	popq	%r14
0000000000030286	popq	%rbp
0000000000030287	ret
0000000000030288	leaq	0x0007efb1(%rip),%rax
000000000003028f	movq	(%rax),%rax
0000000000030292	movl	$0x00000001,(%rbx,%rax)
0000000000030299	movq	0x000783e0(%rip),%r14
00000000000302a0	movq	0x000752c9(%rip),%rsi
00000000000302a7	movq	%rbx,%rdi
00000000000302aa	call	*0x00053e28(%rip)
00000000000302b0	movq	0x000752c1(%rip),%rsi
00000000000302b7	movq	%r14,%rdi
00000000000302ba	movq	%rax,%rdx
00000000000302bd	movq	%rbx,%rcx
00000000000302c0	call	*0x00053e12(%rip)
00000000000302c6	movq	%rax,%r14
00000000000302c9	movq	0x000747e8(%rip),%rsi
00000000000302d0	movq	%rbx,%rdi
00000000000302d3	call	*0x00053dff(%rip)
00000000000302d9	movq	0x00075168(%rip),%rsi
00000000000302e0	movq	%rax,%rdi
00000000000302e3	call	*0x00053def(%rip)
00000000000302e9	movq	0x00075168(%rip),%rsi
00000000000302f0	movq	%rax,%rdi
00000000000302f3	movq	%r14,%rdx
00000000000302f6	movq	%rbx,%rcx
00000000000302f9	call	*0x00053dd9(%rip)
00000000000302ff	movq	0x000747b2(%rip),%rsi
0000000000030306	movq	%rbx,%rdi
0000000000030309	call	*0x00053dc9(%rip)
000000000003030f	movq	0x00074aba(%rip),%rsi
0000000000030316	movq	%rax,%rdi
0000000000030319	call	*0x00053db9(%rip)
000000000003031f	movq	0x00074aba(%rip),%rsi
0000000000030326	movq	%rax,%rdi
0000000000030329	movq	%r14,%rdx
000000000003032c	movq	0x00053da5(%rip),%rax
0000000000030333	popq	%rbx
0000000000030334	popq	%r14
0000000000030336	popq	%rbp
0000000000030337	jmp	*%rax
-[PBXGDB_ArrayDataValue usesSyntheticChildren]:
0000000000030339	pushq	%rbp
000000000003033a	movq	%rsp,%rbp
000000000003033d	movl	$0x00000001,%eax
0000000000030342	popq	%rbp
0000000000030343	ret
-[PBXGDB_ArrayDataValue alwaysUpdate]:
0000000000030344	pushq	%rbp
0000000000030345	movq	%rsp,%rbp
0000000000030348	movl	$0x00000001,%eax
000000000003034d	popq	%rbp
000000000003034e	ret
-[PBXGDB_ArrayDataValue requestGetChildren]:
000000000003034f	pushq	%rbp
0000000000030350	movq	%rsp,%rbp
0000000000030353	pushq	%r14
0000000000030355	pushq	%rbx
0000000000030356	movq	%rdi,%rbx
0000000000030359	movq	0x00075230(%rip),%rsi
0000000000030360	call	*0x00053d72(%rip)
0000000000030366	testl	%eax,%eax
0000000000030368	jne	0x000303b1
000000000003036a	movq	0x00075227(%rip),%rsi
0000000000030371	movq	0x00053d60(%rip),%r14
0000000000030378	movq	%rbx,%rdi
000000000003037b	movl	$0x00000001,%edx
0000000000030380	call	*%r14
0000000000030383	movq	0x000751de(%rip),%rsi
000000000003038a	movq	%rbx,%rdi
000000000003038d	call	*%r14
0000000000030390	testb	%al,%al
0000000000030392	jne	0x000303a8
0000000000030394	movq	0x00075205(%rip),%rsi
000000000003039b	movq	%rbx,%rdi
000000000003039e	popq	%rbx
000000000003039f	popq	%r14
00000000000303a1	popq	%rbp
00000000000303a2	jmp	*0x00053d30(%rip)
00000000000303a8	movq	0x000751d1(%rip),%rsi
00000000000303af	jmp	0x0003039b
00000000000303b1	popq	%rbx
00000000000303b2	popq	%r14
00000000000303b4	popq	%rbp
00000000000303b5	ret
-[PBXGDB_ArrayDataValue reset]:
00000000000303b6	pushq	%rbp
00000000000303b7	movq	%rsp,%rbp
00000000000303ba	pushq	%r14
00000000000303bc	pushq	%rbx
00000000000303bd	movq	%rdi,%rbx
00000000000303c0	leaq	0x0007ee79(%rip),%rax
00000000000303c7	movq	(%rax),%rax
00000000000303ca	movl	$0x00000000,(%rbx,%rax)
00000000000303d1	leaq	0x0007ee80(%rip),%rax
00000000000303d8	movq	(%rax),%rdx
00000000000303db	xorl	%edi,%edi
00000000000303dd	movq	%rbx,%rsi
00000000000303e0	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000303e5	leaq	0x0007ed9c(%rip),%rax
00000000000303ec	movq	(%rax),%rax
00000000000303ef	movq	0x00053ce2(%rip),%r14
00000000000303f6	leaq	0x0007ed93(%rip),%rcx
00000000000303fd	movq	$0xffffffff,(%rbx,%rax)
0000000000030405	movq	(%rcx),%rax
0000000000030408	movq	$0xffffffff,(%rbx,%rax)
0000000000030410	movq	0x000751b1(%rip),%rsi
0000000000030417	movq	%rbx,%rdi
000000000003041a	call	*%r14
000000000003041d	movq	0x000751ac(%rip),%rsi
0000000000030424	movq	%rax,%rdi
0000000000030427	call	*%r14
000000000003042a	leaq	0x0007ed4f(%rip),%rcx
0000000000030431	movq	(%rcx),%rcx
0000000000030434	movl	%eax,(%rbx,%rcx)
0000000000030437	popq	%rbx
0000000000030438	popq	%r14
000000000003043a	popq	%rbp
000000000003043b	ret
-[PBXGDB_ArrayItemDataValue initWithDebugger:indexInParentArray:]:
000000000003043c	pushq	%rbp
000000000003043d	movq	%rsp,%rbp
0000000000030440	pushq	%rbx
0000000000030441	subq	$0x18,%rsp
0000000000030445	movq	%rcx,%rbx
0000000000030448	movq	%rdi,0xe8(%rbp)
000000000003044c	movq	0x000788cd(%rip),%rax
0000000000030453	movq	%rax,0xf0(%rbp)
0000000000030457	movq	0x000748f2(%rip),%rsi
000000000003045e	leaq	0xe8(%rbp),%rdi
0000000000030462	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000030467	testq	%rax,%rax
000000000003046a	je	0x00030477
000000000003046c	movq	0x0007e355(%rip),%rcx
0000000000030473	movq	%rbx,(%rax,%rcx)
0000000000030477	addq	$0x18,%rsp
000000000003047b	popq	%rbx
000000000003047c	popq	%rbp
000000000003047d	ret
-[PBXGDB_ArrayItemDataValue stringValue]:
000000000003047e	pushq	%rbp
000000000003047f	movq	%rsp,%rbp
0000000000030482	pushq	%r15
0000000000030484	pushq	%r14
0000000000030486	pushq	%rbx
0000000000030487	subq	$0x18,%rsp
000000000003048b	movq	%rdi,%rbx
000000000003048e	movq	0x00075143(%rip),%rsi
0000000000030495	call	*0x00053c3d(%rip)
000000000003049b	testl	%eax,%eax
000000000003049d	jne	0x0003054b
00000000000304a3	movq	0x00075136(%rip),%rsi
00000000000304aa	movq	0x00053c27(%rip),%r15
00000000000304b1	movq	%rbx,%rdi
00000000000304b4	movl	$0x00000001,%edx
00000000000304b9	call	*%r15
00000000000304bc	movq	0x000781c5(%rip),%rdi
00000000000304c3	leaq	0x00077e16(%rip),%rsi
00000000000304ca	call	*0x00077e10(%rip)
00000000000304d0	movq	0x0007e2f1(%rip),%rcx
00000000000304d7	movq	(%rbx,%rcx),%rdx
00000000000304db	movq	0x00075106(%rip),%rsi
00000000000304e2	movq	%rax,%rdi
00000000000304e5	call	*%r15
00000000000304e8	movq	%rax,%r14
00000000000304eb	movq	0x000745c6(%rip),%rsi
00000000000304f2	movq	%rbx,%rdi
00000000000304f5	call	*%r15
00000000000304f8	movq	0x00074f49(%rip),%rsi
00000000000304ff	movq	%rax,%rdi
0000000000030502	call	*%r15
0000000000030505	movq	0x00074f4c(%rip),%rsi
000000000003050c	movq	%rax,%rdi
000000000003050f	movq	%r14,%rdx
0000000000030512	movq	%rbx,%rcx
0000000000030515	call	*%r15
0000000000030518	movq	0x00074599(%rip),%rsi
000000000003051f	movq	%rbx,%rdi
0000000000030522	call	*%r15
0000000000030525	movq	0x000748a4(%rip),%rsi
000000000003052c	movq	%rax,%rdi
000000000003052f	call	*%r15
0000000000030532	movq	0x000748a7(%rip),%rsi
0000000000030539	movq	%rax,%rdi
000000000003053c	movq	%r14,%rdx
000000000003053f	call	*%r15
0000000000030542	leaq	0x0008048f(%rip),%rax
0000000000030549	jmp	0x0003056a
000000000003054b	movq	%rbx,0xd8(%rbp)
000000000003054f	movq	0x000787ca(%rip),%rax
0000000000030556	movq	%rax,0xe0(%rbp)
000000000003055a	movq	0x000745a7(%rip),%rsi
0000000000030561	leaq	0xd8(%rbp),%rdi
0000000000030565	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000003056a	addq	$0x18,%rsp
000000000003056e	popq	%rbx
000000000003056f	popq	%r14
0000000000030571	popq	%r15
0000000000030573	popq	%rbp
0000000000030574	ret
-[PBXGDB_ArrayItemDataValue setValidityStatus:]:
0000000000030575	pushq	%rbp
0000000000030576	movq	%rsp,%rbp
0000000000030579	pushq	%r15
000000000003057b	pushq	%r14
000000000003057d	pushq	%rbx
000000000003057e	subq	$0x18,%rsp
0000000000030582	movq	%rdi,%rbx
0000000000030585	movq	%rbx,0xd8(%rbp)
0000000000030589	movq	0x00078790(%rip),%rax
0000000000030590	movq	%rax,0xe0(%rbp)
0000000000030594	movq	0x00075045(%rip),%rsi
000000000003059b	leaq	0xd8(%rbp),%rdi
000000000003059f	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000305a4	movq	0x0007502d(%rip),%rsi
00000000000305ab	movq	%rbx,%rdi
00000000000305ae	call	*0x00053b24(%rip)
00000000000305b4	testl	%eax,%eax
00000000000305b6	jne	0x000305e6
00000000000305b8	movq	0x00075031(%rip),%rsi
00000000000305bf	leaq	0x00080432(%rip),%r14
00000000000305c6	movq	0x00053b0b(%rip),%r15
00000000000305cd	movq	%rbx,%rdi
00000000000305d0	movq	%r14,%rdx
00000000000305d3	call	*%r15
00000000000305d6	movq	0x0007501b(%rip),%rsi
00000000000305dd	movq	%rbx,%rdi
00000000000305e0	movq	%r14,%rdx
00000000000305e3	call	*%r15
00000000000305e6	addq	$0x18,%rsp
00000000000305ea	popq	%rbx
00000000000305eb	popq	%r14
00000000000305ed	popq	%r15
00000000000305ef	popq	%rbp
00000000000305f0	ret
+[PBXGDB_ArrayDataValueSequence sequenceWithContainerDV:dataValue:]:
00000000000305f1	pushq	%rbp
00000000000305f2	movq	%rsp,%rbp
00000000000305f5	pushq	%r14
00000000000305f7	pushq	%rbx
00000000000305f8	movq	%rcx,%r14
00000000000305fb	leaq	0x00077d2e(%rip),%rsi
0000000000030602	call	*0x00077d28(%rip)
0000000000030608	leaq	0x00077cd1(%rip),%rsi
000000000003060f	movq	%rax,%rdi
0000000000030612	call	*0x00077cc8(%rip)
0000000000030618	movq	0x00074451(%rip),%rsi
000000000003061f	movq	%rax,%rdi
0000000000030622	call	*0x00053ab0(%rip)
0000000000030628	movq	%rax,%rbx
000000000003062b	testq	%rbx,%rbx
000000000003062e	je	0x00030643
0000000000030630	movq	0x00074fc9(%rip),%rsi
0000000000030637	movq	%rbx,%rdi
000000000003063a	movq	%r14,%rdx
000000000003063d	call	*0x00053a95(%rip)
0000000000030643	movq	%rbx,%rax
0000000000030646	popq	%rbx
0000000000030647	popq	%r14
0000000000030649	popq	%rbp
000000000003064a	ret
-[PBXGDB_ArrayDataValueSequence timeOutPeriod]:
000000000003064b	pushq	%rbp
000000000003064c	movq	%rsp,%rbp
000000000003064f	xorps	%xmm0,%xmm0
0000000000030652	popq	%rbp
0000000000030653	ret
-[PBXGDB_ArrayDataValueSequence needsEvaluationSafetyCheck]:
0000000000030654	pushq	%rbp
0000000000030655	movq	%rsp,%rbp
0000000000030658	pushq	%r14
000000000003065a	pushq	%rbx
000000000003065b	movq	0x00074fa6(%rip),%rsi
0000000000030662	movq	0x00053a6f(%rip),%r14
0000000000030669	call	*%r14
000000000003066c	movq	%rax,%rbx
000000000003066f	movq	0x00074f3a(%rip),%rsi
0000000000030676	movq	%rbx,%rdi
0000000000030679	call	*%r14
000000000003067c	xorb	%cl,%cl
000000000003067e	testb	%al,%al
0000000000030680	jne	0x00030697
0000000000030682	movq	0x00074f2f(%rip),%rsi
0000000000030689	movq	%rbx,%rdi
000000000003068c	call	*0x00053a46(%rip)
0000000000030692	testb	%al,%al
0000000000030694	sete	%cl
0000000000030697	movzbl	%cl,%eax
000000000003069a	popq	%rbx
000000000003069b	popq	%r14
000000000003069d	popq	%rbp
000000000003069e	ret
-[PBXGDB_ArrayDataValueSequence handleErrorForMICommand:]:
000000000003069f	pushq	%rbp
00000000000306a0	movq	%rsp,%rbp
00000000000306a3	leaq	0x0007e13e(%rip),%rax
00000000000306aa	movq	(%rax),%rax
00000000000306ad	decq	(%rdi,%rax)
00000000000306b1	cmpq	$0x00,(%rdi,%rax)
00000000000306b6	jg	0x000306c5
00000000000306b8	movq	0x00074479(%rip),%rsi
00000000000306bf	call	*0x00053a13(%rip)
00000000000306c5	movl	$0x00000001,%eax
00000000000306ca	popq	%rbp
00000000000306cb	ret
-[PBXGDB_ArrayDataValueSequence sizeExpression]:
00000000000306cc	pushq	%rbp
00000000000306cd	movq	%rsp,%rbp
00000000000306d0	pushq	%r15
00000000000306d2	pushq	%r14
00000000000306d4	pushq	%rbx
00000000000306d5	pushq	%rax
00000000000306d6	movq	0x00074f2b(%rip),%rsi
00000000000306dd	movq	0x000539f4(%rip),%r14
00000000000306e4	call	*%r14
00000000000306e7	movq	%rax,%rbx
00000000000306ea	movq	0x00074f1f(%rip),%rsi
00000000000306f1	movq	%rbx,%rdi
00000000000306f4	call	*%r14
00000000000306f7	movq	%rax,%r14
00000000000306fa	testq	%r14,%r14
00000000000306fd	je	0x00030713
00000000000306ff	movq	0x00074f12(%rip),%rsi
0000000000030706	movq	%rbx,%rdi
0000000000030709	call	*0x000539c9(%rip)
000000000003070f	testl	%eax,%eax
0000000000030711	jne	0x00030726
0000000000030713	movq	0x00074d56(%rip),%rsi
000000000003071a	movq	%rbx,%rdi
000000000003071d	call	*0x000539b5(%rip)
0000000000030723	movq	%rax,%r14
0000000000030726	movq	0x00074e83(%rip),%rsi
000000000003072d	movq	%rbx,%rdi
0000000000030730	call	*0x000539a2(%rip)
0000000000030736	testb	%al,%al
0000000000030738	je	0x0003075f
000000000003073a	movq	0x00074437(%rip),%rsi
0000000000030741	movq	0x00077d08(%rip),%rdi
0000000000030748	leaq	0x000802c9(%rip),%rdx
000000000003074f	movq	%r14,%rcx
0000000000030752	movq	%r14,%r8
0000000000030755	xorb	%al,%al
0000000000030757	call	*0x0005397b(%rip)
000000000003075d	jmp	0x000307c5
000000000003075f	movq	0x00074e52(%rip),%rsi
0000000000030766	movq	%rbx,%rdi
0000000000030769	call	*0x00053969(%rip)
000000000003076f	movq	0x00077cda(%rip),%r15
0000000000030776	testb	%al,%al
0000000000030778	je	0x000307a9
000000000003077a	movq	0x00074e9f(%rip),%rsi
0000000000030781	movq	0x00053950(%rip),%r14
0000000000030788	movq	%rbx,%rdi
000000000003078b	call	*%r14
000000000003078e	movq	0x000743e3(%rip),%rsi
0000000000030795	leaq	0x0008029c(%rip),%rdx
000000000003079c	movq	%r15,%rdi
000000000003079f	movq	%rax,%rcx
00000000000307a2	xorb	%al,%al
00000000000307a4	call	*%r14
00000000000307a7	jmp	0x000307c5
00000000000307a9	movq	0x000743c8(%rip),%rsi
00000000000307b0	leaq	0x000802a1(%rip),%rdx
00000000000307b7	movq	%r15,%rdi
00000000000307ba	movq	%r14,%rcx
00000000000307bd	xorb	%al,%al
00000000000307bf	call	*0x00053913(%rip)
00000000000307c5	addq	$0x08,%rsp
00000000000307c9	popq	%rbx
00000000000307ca	popq	%r14
00000000000307cc	popq	%r15
00000000000307ce	popq	%rbp
00000000000307cf	ret
-[PBXGDB_ArrayDataValueSequence containerExpressionForIndex:]:
00000000000307d0	pushq	%rbp
00000000000307d1	movq	%rsp,%rbp
00000000000307d4	pushq	%r15
00000000000307d6	pushq	%r14
00000000000307d8	pushq	%rbx
00000000000307d9	pushq	%rax
00000000000307da	movq	%rdx,%r14
00000000000307dd	movq	0x00074e24(%rip),%rsi
00000000000307e4	movq	0x000538ed(%rip),%r15
00000000000307eb	call	*%r15
00000000000307ee	movq	%rax,%rbx
00000000000307f1	movq	0x00074e18(%rip),%rsi
00000000000307f8	movq	%rbx,%rdi
00000000000307fb	call	*%r15
00000000000307fe	movq	%rax,%r15
0000000000030801	testq	%r15,%r15
0000000000030804	je	0x0003081a
0000000000030806	movq	0x00074e0b(%rip),%rsi
000000000003080d	movq	%rbx,%rdi
0000000000030810	call	*0x000538c2(%rip)
0000000000030816	testl	%eax,%eax
0000000000030818	jne	0x0003082d
000000000003081a	movq	0x00074c4f(%rip),%rsi
0000000000030821	movq	%rbx,%rdi
0000000000030824	call	*0x000538ae(%rip)
000000000003082a	movq	%rax,%r15
000000000003082d	movq	0x00074d7c(%rip),%rsi
0000000000030834	movq	%rbx,%rdi
0000000000030837	call	*0x0005389b(%rip)
000000000003083d	testb	%al,%al
000000000003083f	je	0x00030858
0000000000030841	movq	0x00074330(%rip),%rsi
0000000000030848	movq	0x00077c01(%rip),%rdi
000000000003084f	leaq	0x00080222(%rip),%rdx
0000000000030856	jmp	0x0003088a
0000000000030858	movq	0x00074d59(%rip),%rsi
000000000003085f	movq	%rbx,%rdi
0000000000030862	call	*0x00053870(%rip)
0000000000030868	movq	0x00074309(%rip),%rsi
000000000003086f	movq	0x00077bda(%rip),%rdi
0000000000030876	testb	%al,%al
0000000000030878	je	0x00030883
000000000003087a	leaq	0x00080217(%rip),%rdx
0000000000030881	jmp	0x0003088a
0000000000030883	leaq	0x0008022e(%rip),%rdx
000000000003088a	movq	%r15,%rcx
000000000003088d	movq	%r14,%r8
0000000000030890	xorb	%al,%al
0000000000030892	call	*0x00053840(%rip)
0000000000030898	addq	$0x08,%rsp
000000000003089c	popq	%rbx
000000000003089d	popq	%r14
000000000003089f	popq	%r15
00000000000308a1	popq	%rbp
00000000000308a2	ret
-[PBXGDB_ArrayDataValueSequence execute]:
00000000000308a3	pushq	%rbp
00000000000308a4	movq	%rsp,%rbp
00000000000308a7	pushq	%r15
00000000000308a9	pushq	%r14
00000000000308ab	pushq	%r13
00000000000308ad	pushq	%r12
00000000000308af	pushq	%rbx
00000000000308b0	pushq	%rax
00000000000308b1	movq	%rdi,%r14
00000000000308b4	movq	0x00074d4d(%rip),%rsi
00000000000308bb	call	*0x00053817(%rip)
00000000000308c1	movq	%rax,%r15
00000000000308c4	movq	0x00074ca5(%rip),%rsi
00000000000308cb	movq	%r15,%rdi
00000000000308ce	call	*0x00053804(%rip)
00000000000308d4	movq	%rax,%r12
00000000000308d7	movq	0x000741da(%rip),%rsi
00000000000308de	movq	%r14,%rdi
00000000000308e1	call	*0x000537f1(%rip)
00000000000308e7	movq	0x00074c2a(%rip),%rsi
00000000000308ee	movq	%rax,%rdi
00000000000308f1	call	*0x000537e1(%rip)
00000000000308f7	movq	0x00074c72(%rip),%rsi
00000000000308fe	movq	%rax,%rdi
0000000000030901	call	*0x000537d1(%rip)
0000000000030907	movq	%rax,%r13
000000000003090a	movq	0x0007416f(%rip),%rsi
0000000000030911	movq	0x00077d78(%rip),%rdi
0000000000030918	call	*0x000537ba(%rip)
000000000003091e	movq	%rax,%rbx
0000000000030921	movq	0x00074cd8(%rip),%rsi
0000000000030928	movq	%rbx,%rdi
000000000003092b	movq	%r15,%rdx
000000000003092e	call	*0x000537a4(%rip)
0000000000030934	cmpq	%r13,%r12
0000000000030937	setne	%r15b
000000000003093b	movq	0x00074ce6(%rip),%rsi
0000000000030942	movq	%r14,%rdi
0000000000030945	call	*0x0005378d(%rip)
000000000003094b	movzbl	%bh,%ecx
000000000003094f	movq	0x00074cda(%rip),%rsi
0000000000030956	movq	%rbx,%rdi
0000000000030959	movq	%rax,%rdx
000000000003095c	call	*0x00053776(%rip)
0000000000030962	movq	0x0007411f(%rip),%rsi
0000000000030969	movq	%rbx,%rdi
000000000003096c	movq	%r14,%rdx
000000000003096f	call	*0x00053763(%rip)
0000000000030975	movq	0x0007411c(%rip),%rsi
000000000003097c	movq	0x00074cb5(%rip),%rdx
0000000000030983	movq	%rbx,%rdi
0000000000030986	call	*0x0005374c(%rip)
000000000003098c	movq	0x00074cad(%rip),%rsi
0000000000030993	movq	%r14,%rdi
0000000000030996	movq	%rbx,%rdx
0000000000030999	movq	0x00053738(%rip),%rax
00000000000309a0	addq	$0x08,%rsp
00000000000309a4	popq	%rbx
00000000000309a5	popq	%r12
00000000000309a7	popq	%r13
00000000000309a9	popq	%r14
00000000000309ab	popq	%r15
00000000000309ad	popq	%rbp
00000000000309ae	jmp	*%rax
-[PBXGDB_ArrayDataValueSequence _gotSTLContainerDVSizeVarObj:]:
00000000000309b0	pushq	%rbp
00000000000309b1	movq	%rsp,%rbp
00000000000309b4	pushq	%r15
00000000000309b6	pushq	%r14
00000000000309b8	pushq	%r12
00000000000309ba	pushq	%rbx
00000000000309bb	movq	%rdi,%r14
00000000000309be	movq	0x00074c83(%rip),%rsi
00000000000309c5	movq	%rdx,%rdi
00000000000309c8	call	*0x0005370a(%rip)
00000000000309ce	movq	%rax,%r12
00000000000309d1	movq	0x00074c30(%rip),%rsi
00000000000309d8	movq	%r14,%rdi
00000000000309db	call	*0x000536f7(%rip)
00000000000309e1	movq	%rax,%r15
00000000000309e4	movq	0x00074c65(%rip),%rsi
00000000000309eb	movq	%r15,%rdi
00000000000309ee	movq	%r12,%rdx
00000000000309f1	call	*0x000536e1(%rip)
00000000000309f7	movq	0x00074082(%rip),%rsi
00000000000309fe	movq	0x00077c93(%rip),%rdi
0000000000030a05	call	*0x000536cd(%rip)
0000000000030a0b	movq	%rax,%rbx
0000000000030a0e	movq	0x00074c43(%rip),%rsi
0000000000030a15	movq	%rbx,%rdi
0000000000030a18	movq	%r12,%rdx
0000000000030a1b	call	*0x000536b7(%rip)
0000000000030a21	movq	0x00074bd8(%rip),%rsi
0000000000030a28	movq	%rbx,%rdi
0000000000030a2b	movq	%r15,%rdx
0000000000030a2e	call	*0x000536a4(%rip)
0000000000030a34	movq	0x0007404d(%rip),%rsi
0000000000030a3b	movq	%rbx,%rdi
0000000000030a3e	movq	%r14,%rdx
0000000000030a41	call	*0x00053691(%rip)
0000000000030a47	movq	0x0007404a(%rip),%rsi
0000000000030a4e	movq	0x00074c0b(%rip),%rdx
0000000000030a55	movq	%rbx,%rdi
0000000000030a58	call	*0x0005367a(%rip)
0000000000030a5e	movq	0x00074bdb(%rip),%rsi
0000000000030a65	movq	%r14,%rdi
0000000000030a68	movq	%rbx,%rdx
0000000000030a6b	movq	0x00053666(%rip),%rax
0000000000030a72	popq	%rbx
0000000000030a73	popq	%r12
0000000000030a75	popq	%r14
0000000000030a77	popq	%r15
0000000000030a79	popq	%rbp
0000000000030a7a	jmp	*%rax
-[PBXGDB_ArrayDataValueSequence _gotSTLContainerDVSizeValue:]:
0000000000030a7c	pushq	%rbp
0000000000030a7d	movq	%rsp,%rbp
0000000000030a80	pushq	%r15
0000000000030a82	pushq	%r14
0000000000030a84	pushq	%r13
0000000000030a86	pushq	%r12
0000000000030a88	pushq	%rbx
0000000000030a89	pushq	%rax
0000000000030a8a	movq	%rdi,%rbx
0000000000030a8d	movq	0x00074bd4(%rip),%rsi
0000000000030a94	movq	0x0005363d(%rip),%r14
0000000000030a9b	movq	%rdx,%rdi
0000000000030a9e	call	*%r14
0000000000030aa1	movq	0x00074bc8(%rip),%rsi
0000000000030aa8	movq	%rax,%rdi
0000000000030aab	call	*%r14
0000000000030aae	movq	%rax,%r13
0000000000030ab1	movq	0x00074b50(%rip),%rsi
0000000000030ab8	movq	%rbx,%rdi
0000000000030abb	call	*%r14
0000000000030abe	movq	%rax,%r15
0000000000030ac1	movq	0x00074bb0(%rip),%rsi
0000000000030ac8	movq	%r15,%rdi
0000000000030acb	call	*%r14
0000000000030ace	xorl	%eax,%eax
0000000000030ad0	testq	%r13,%r13
0000000000030ad3	cmovsq	%rax,%r13
0000000000030ad7	cmpq	$0x0007a120,%r13
0000000000030ade	cmovaq	%rax,%r13
0000000000030ae2	movq	0x00074b97(%rip),%rsi
0000000000030ae9	movq	%r15,%rdi
0000000000030aec	movq	%r13,%rdx
0000000000030aef	call	*%r14
0000000000030af2	movq	0x00074b8f(%rip),%rsi
0000000000030af9	movq	%r15,%rdi
0000000000030afc	call	*%r14
0000000000030aff	leaq	0x0007780a(%rip),%rsi
0000000000030b06	movq	%rax,%rdi
0000000000030b09	call	*0x00077801(%rip)
0000000000030b0f	movq	%rax,%r12
0000000000030b12	cmpq	%r12,%r13
0000000000030b15	jae	0x00030b30
0000000000030b17	movq	%rbx,0xd0(%rbp)
0000000000030b1b	movq	%r12,%rcx
0000000000030b1e	subq	%r13,%rcx
0000000000030b21	movq	0x00074b68(%rip),%rsi
0000000000030b28	movq	%r15,%rdi
0000000000030b2b	movq	%r13,%rdx
0000000000030b2e	jmp	0x00030b47
0000000000030b30	movq	%r13,%rcx
0000000000030b33	subq	%r12,%rcx
0000000000030b36	movq	0x00074b5b(%rip),%rsi
0000000000030b3d	movq	%rbx,%rdi
0000000000030b40	movq	%rbx,0xd0(%rbp)
0000000000030b44	movq	%r12,%rdx
0000000000030b47	call	*0x0005358b(%rip)
0000000000030b4d	cmpq	%r12,%r13
0000000000030b50	movq	%r12,%rax
0000000000030b53	cmovbq	%r13,%rax
0000000000030b57	testq	%rax,%rax
0000000000030b5a	je	0x00030baf
0000000000030b5c	notq	%r12
0000000000030b5f	notq	%r13
0000000000030b62	cmpq	%r12,%r13
0000000000030b65	cmovbeq	%r12,%r13
0000000000030b69	notq	%r13
0000000000030b6c	xorl	%ebx,%ebx
0000000000030b6e	movq	0x00053563(%rip),%r14
0000000000030b75	leaq	0x000777a4(%rip),%r12
0000000000030b7c	movq	%r15,%rdi
0000000000030b7f	movq	0x00074b02(%rip),%rsi
0000000000030b86	call	*%r14
0000000000030b89	movq	%rax,%rdi
0000000000030b8c	movq	%r12,%rsi
0000000000030b8f	movq	%rbx,%rdx
0000000000030b92	call	*0x00077788(%rip)
0000000000030b98	movq	%rax,%rdi
0000000000030b9b	movq	0x00074a3e(%rip),%rsi
0000000000030ba2	xorl	%edx,%edx
0000000000030ba4	call	*%r14
0000000000030ba7	incq	%rbx
0000000000030baa	cmpq	%rbx,%r13
0000000000030bad	jne	0x00030b7c
0000000000030baf	movq	0x00073f82(%rip),%rsi
0000000000030bb6	movq	0xd0(%rbp),%rdi
0000000000030bba	addq	$0x08,%rsp
0000000000030bbe	popq	%rbx
0000000000030bbf	popq	%r12
0000000000030bc1	popq	%r13
0000000000030bc3	popq	%r14
0000000000030bc5	popq	%r15
0000000000030bc7	popq	%rbp
0000000000030bc8	jmp	*0x0005350a(%rip)
-[PBXGDB_ArrayDataValueSequence _addArrayItemChildrenFrom:count:]:
0000000000030bce	pushq	%rbp
0000000000030bcf	movq	%rsp,%rbp
0000000000030bd2	pushq	%r15
0000000000030bd4	pushq	%r14
0000000000030bd6	pushq	%r13
0000000000030bd8	pushq	%r12
0000000000030bda	pushq	%rbx
0000000000030bdb	subq	$0x28,%rsp
0000000000030bdf	movq	%rcx,%r13
0000000000030be2	movq	%rdx,%rbx
0000000000030be5	movq	%rdi,%r14
0000000000030be8	movq	0x00074ab1(%rip),%rsi
0000000000030bef	movq	0x0007786a(%rip),%rdi
0000000000030bf6	movq	0x000534db(%rip),%r12
0000000000030bfd	movq	%r13,%rdx
0000000000030c00	call	*%r12
0000000000030c03	movq	%rax,0xc0(%rbp)
0000000000030c07	movq	0x000749fa(%rip),%rsi
0000000000030c0e	movq	%r14,%rdi
0000000000030c11	call	*%r12
0000000000030c14	movq	0x00074a8d(%rip),%rsi
0000000000030c1b	movq	%rax,%rdi
0000000000030c1e	call	*%r12
0000000000030c21	leaq	0x00(%r13,%rbx),%rcx
0000000000030c26	cmpq	%rbx,%rcx
0000000000030c29	jbe	0x00030d76
0000000000030c2f	movq	0x00073f42(%rip),%r12
0000000000030c36	movq	0x0005349b(%rip),%r15
0000000000030c3d	movsbl	%al,%eax
0000000000030c40	movl	%eax,0xbc(%rbp)
0000000000030c43	movq	%rbx,0xd0(%rbp)
0000000000030c47	movq	%r13,0xc8(%rbp)
0000000000030c4b	movq	0x00077a4e(%rip),%rdi
0000000000030c52	leaq	0x00077687(%rip),%rsi
0000000000030c59	call	*0x00077681(%rip)
0000000000030c5f	movq	%rax,%r13
0000000000030c62	movq	%r14,%rdi
0000000000030c65	movq	0x00073e4c(%rip),%rsi
0000000000030c6c	call	*%r15
0000000000030c6f	movq	%r13,%rdi
0000000000030c72	movq	0x00074a37(%rip),%rsi
0000000000030c79	movq	%rax,%rdx
0000000000030c7c	movq	0xd0(%rbp),%rcx
0000000000030c80	call	*%r15
0000000000030c83	movq	%rax,%r13
0000000000030c86	movq	0x000777c3(%rip),%rdi
0000000000030c8d	movq	%r12,%rsi
0000000000030c90	leaq	0x0007fe41(%rip),%rdx
0000000000030c97	movq	0xd0(%rbp),%rcx
0000000000030c9b	xorb	%al,%al
0000000000030c9d	call	*%r15
0000000000030ca0	movq	%r13,%rdi
0000000000030ca3	movq	0x000740ae(%rip),%rsi
0000000000030caa	movq	%rax,%rdx
0000000000030cad	call	*%r15
0000000000030cb0	movq	%r14,%rbx
0000000000030cb3	movq	0x00077796(%rip),%r14
0000000000030cba	movq	%rbx,%rdi
0000000000030cbd	movq	0x000749f4(%rip),%rsi
0000000000030cc4	movq	0xd0(%rbp),%rdx
0000000000030cc8	call	*%r15
0000000000030ccb	movq	%r14,%rdi
0000000000030cce	movq	%rbx,%r14
0000000000030cd1	movq	%r12,%rsi
0000000000030cd4	leaq	0x0007eb9d(%rip),%rdx
0000000000030cdb	movq	%rax,%rcx
0000000000030cde	xorb	%al,%al
0000000000030ce0	call	*%r15
0000000000030ce3	movq	%r13,%rdi
0000000000030ce6	movq	0x000749d3(%rip),%rsi
0000000000030ced	movq	%rax,%rdx
0000000000030cf0	call	*%r15
0000000000030cf3	movq	%r13,%rdi
0000000000030cf6	movq	0x000749cb(%rip),%rsi
0000000000030cfd	movl	$0x00000002,%edx
0000000000030d02	call	*%r15
0000000000030d05	movq	%r13,%rdi
0000000000030d08	movq	0x000748d1(%rip),%rsi
0000000000030d0f	xorl	%edx,%edx
0000000000030d11	call	*%r15
0000000000030d14	movq	%r14,%rdi
0000000000030d17	movq	0x000748ea(%rip),%rsi
0000000000030d1e	call	*%r15
0000000000030d21	movq	%rax,%rdi
0000000000030d24	movq	0x00074825(%rip),%rsi
0000000000030d2b	call	*%r15
0000000000030d2e	movq	%r13,%rdi
0000000000030d31	movq	0x00074588(%rip),%rsi
0000000000030d38	movq	%rax,%rdx
0000000000030d3b	call	*%r15
0000000000030d3e	movq	%r13,%rdi
0000000000030d41	movq	0x00074988(%rip),%rsi
0000000000030d48	movl	0xbc(%rbp),%edx
0000000000030d4b	call	*%r15
0000000000030d4e	movq	0xc0(%rbp),%rdi
0000000000030d52	leaq	0x000775a7(%rip),%rsi
0000000000030d59	movq	%r13,%rdx
0000000000030d5c	movq	0xd0(%rbp),%rbx
0000000000030d60	movq	0xc8(%rbp),%r13
0000000000030d64	call	*0x00077596(%rip)
0000000000030d6a	incq	%rbx
0000000000030d6d	decq	%r13
0000000000030d70	jne	0x00030c43
0000000000030d76	leaq	0x00077593(%rip),%rsi
0000000000030d7d	movq	0xc0(%rbp),%rbx
0000000000030d81	movq	%rbx,%rdi
0000000000030d84	call	*0x00077586(%rip)
0000000000030d8a	testq	%rax,%rax
0000000000030d8d	jne	0x00030d9e
0000000000030d8f	addq	$0x28,%rsp
0000000000030d93	popq	%rbx
0000000000030d94	popq	%r12
0000000000030d96	popq	%r13
0000000000030d98	popq	%r14
0000000000030d9a	popq	%r15
0000000000030d9c	popq	%rbp
0000000000030d9d	ret
0000000000030d9e	movq	0x00074863(%rip),%rsi
0000000000030da5	movq	%r14,%rdi
0000000000030da8	call	*0x0005332a(%rip)
0000000000030dae	movq	0x00074923(%rip),%rsi
0000000000030db5	movq	%rax,%rdi
0000000000030db8	movq	%rbx,%rdx
0000000000030dbb	movq	0x00053316(%rip),%rax
0000000000030dc2	addq	$0x28,%rsp
0000000000030dc6	popq	%rbx
0000000000030dc7	popq	%r12
0000000000030dc9	popq	%r13
0000000000030dcb	popq	%r14
0000000000030dcd	popq	%r15
0000000000030dcf	popq	%rbp
0000000000030dd0	jmp	*%rax
-[PBXGDB_ArrayDataValueSequence didFinish]:
0000000000030dd2	pushq	%rbp
0000000000030dd3	movq	%rsp,%rbp
0000000000030dd6	pushq	%r15
0000000000030dd8	pushq	%r14
0000000000030dda	pushq	%rbx
0000000000030ddb	subq	$0x18,%rsp
0000000000030ddf	movq	%rdi,%r14
0000000000030de2	movq	0x0007481f(%rip),%rsi
0000000000030de9	movq	0x000532e8(%rip),%r15
0000000000030df0	call	*%r15
0000000000030df3	movq	%rax,%rbx
0000000000030df6	movq	0x0007479b(%rip),%rsi
0000000000030dfd	movq	%rbx,%rdi
0000000000030e00	movl	$0x00000002,%edx
0000000000030e05	call	*%r15
0000000000030e08	movq	0x000748d1(%rip),%rsi
0000000000030e0f	movq	%rbx,%rdi
0000000000030e12	movl	$0x00000002,%edx
0000000000030e17	call	*%r15
0000000000030e1a	movq	0x000748c7(%rip),%rsi
0000000000030e21	movq	%rbx,%rdi
0000000000030e24	movl	$0x00000001,%edx
0000000000030e29	call	*%r15
0000000000030e2c	movq	0x000748bd(%rip),%rsi
0000000000030e33	movq	%rbx,%rdi
0000000000030e36	call	*%r15
0000000000030e39	leaq	0xd8(%rbp),%rdi
0000000000030e3d	movq	%r14,0xd8(%rbp)
0000000000030e41	movq	0x00077ee0(%rip),%rax
0000000000030e48	movq	%rax,0xe0(%rbp)
0000000000030e4c	movq	0x00073ce5(%rip),%rsi
0000000000030e53	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000030e58	addq	$0x18,%rsp
0000000000030e5c	popq	%rbx
0000000000030e5d	popq	%r14
0000000000030e5f	popq	%r15
0000000000030e61	popq	%rbp
0000000000030e62	ret
-[PBXGDB_ArrayItemDataValueSequence needsEvaluationSafetyCheck]:
0000000000030e63	pushq	%rbp
0000000000030e64	movq	%rsp,%rbp
0000000000030e67	pushq	%r14
0000000000030e69	pushq	%rbx
0000000000030e6a	movq	0x00074797(%rip),%rsi
0000000000030e71	movq	0x00053260(%rip),%r14
0000000000030e78	call	*%r14
0000000000030e7b	movq	%rax,%rbx
0000000000030e7e	movq	0x0007472b(%rip),%rsi
0000000000030e85	movq	%rbx,%rdi
0000000000030e88	call	*%r14
0000000000030e8b	xorb	%cl,%cl
0000000000030e8d	testb	%al,%al
0000000000030e8f	jne	0x00030ea6
0000000000030e91	movq	0x00074720(%rip),%rsi
0000000000030e98	movq	%rbx,%rdi
0000000000030e9b	call	*0x00053237(%rip)
0000000000030ea1	testb	%al,%al
0000000000030ea3	sete	%cl
0000000000030ea6	movzbl	%cl,%eax
0000000000030ea9	popq	%rbx
0000000000030eaa	popq	%r14
0000000000030eac	popq	%rbp
0000000000030ead	ret
-[PBXGDB_ArrayItemDataValueSequence initWithIndex:]:
0000000000030eae	pushq	%rbp
0000000000030eaf	movq	%rsp,%rbp
0000000000030eb2	pushq	%rbx
0000000000030eb3	subq	$0x18,%rsp
0000000000030eb7	movq	%rdx,%rbx
0000000000030eba	movq	%rdi,0xe8(%rbp)
0000000000030ebe	movq	0x00077e6b(%rip),%rax
0000000000030ec5	movq	%rax,0xf0(%rbp)
0000000000030ec9	movq	0x00073ba0(%rip),%rsi
0000000000030ed0	leaq	0xe8(%rbp),%rdi
0000000000030ed4	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000030ed9	testq	%rax,%rax
0000000000030edc	je	0x00030ee9
0000000000030ede	movq	0x0007d8f3(%rip),%rcx
0000000000030ee5	movq	%rbx,(%rax,%rcx)
0000000000030ee9	addq	$0x18,%rsp
0000000000030eed	popq	%rbx
0000000000030eee	popq	%rbp
0000000000030eef	ret
-[PBXGDB_ArrayItemDataValueSequence execute]:
0000000000030ef0	pushq	%rbp
0000000000030ef1	movq	%rsp,%rbp
0000000000030ef4	pushq	%r15
0000000000030ef6	pushq	%r14
0000000000030ef8	pushq	%rbx
0000000000030ef9	pushq	%rax
0000000000030efa	movq	%rdi,%r14
0000000000030efd	movq	0x00074704(%rip),%rsi
0000000000030f04	movq	0x000531cd(%rip),%r15
0000000000030f0b	call	*%r15
0000000000030f0e	movq	%rax,%rbx
0000000000030f11	movq	0x000747e0(%rip),%rsi
0000000000030f18	movq	%rbx,%rdi
0000000000030f1b	call	*%r15
0000000000030f1e	testq	%rax,%rax
0000000000030f21	je	0x00030f40
0000000000030f23	movq	0x000747d6(%rip),%rsi
0000000000030f2a	movq	%r14,%rdi
0000000000030f2d	movq	%rbx,%rdx
0000000000030f30	addq	$0x08,%rsp
0000000000030f34	popq	%rbx
0000000000030f35	popq	%r14
0000000000030f37	popq	%r15
0000000000030f39	popq	%rbp
0000000000030f3a	jmp	*0x00053198(%rip)
0000000000030f40	movq	0x000747c1(%rip),%rsi
0000000000030f47	jmp	0x00030f2a
-[PBXGDB_ArrayItemDataValueSequence _updateDataValue:]:
0000000000030f49	pushq	%rbp
0000000000030f4a	movq	%rsp,%rbp
0000000000030f4d	pushq	%rbx
0000000000030f4e	pushq	%rax
0000000000030f4f	movq	%rdi,%rbx
0000000000030f52	movq	0x000745a7(%rip),%rsi
0000000000030f59	movq	0x00077700(%rip),%rdi
0000000000030f60	call	*0x00053172(%rip)
0000000000030f66	movq	0x000747a3(%rip),%rsi
0000000000030f6d	movq	%rbx,%rdi
0000000000030f70	movq	%rax,%rdx
0000000000030f73	movq	0x0005315e(%rip),%rax
0000000000030f7a	addq	$0x08,%rsp
0000000000030f7e	popq	%rbx
0000000000030f7f	popq	%rbp
0000000000030f80	jmp	*%rax
-[PBXGDB_ArrayItemDataValueSequence _createVarForDataValue:]:
0000000000030f82	pushq	%rbp
0000000000030f83	movq	%rsp,%rbp
0000000000030f86	pushq	%r15
0000000000030f88	pushq	%r14
0000000000030f8a	pushq	%r13
0000000000030f8c	pushq	%r12
0000000000030f8e	pushq	%rbx
0000000000030f8f	pushq	%rax
0000000000030f90	movq	%rdx,%r15
0000000000030f93	movq	%rdi,%r12
0000000000030f96	movq	0x0007466b(%rip),%rsi
0000000000030f9d	call	*0x00053135(%rip)
0000000000030fa3	movq	0x00074576(%rip),%rsi
0000000000030faa	movq	%rax,%rdi
0000000000030fad	call	*0x00053125(%rip)
0000000000030fb3	movq	%rax,%r14
0000000000030fb6	movq	0x000745b3(%rip),%rsi
0000000000030fbd	movq	%r14,%rdi
0000000000030fc0	call	*0x00053112(%rip)
0000000000030fc6	movq	%rax,%rbx
0000000000030fc9	movq	0x00073ae8(%rip),%rsi
0000000000030fd0	movq	%r12,%rdi
0000000000030fd3	call	*0x000530ff(%rip)
0000000000030fd9	movq	0x00074538(%rip),%rsi
0000000000030fe0	movq	%rax,%rdi
0000000000030fe3	call	*0x000530ef(%rip)
0000000000030fe9	movq	0x00074580(%rip),%rsi
0000000000030ff0	movq	%rax,%rdi
0000000000030ff3	call	*0x000530df(%rip)
0000000000030ff9	leaq	0x0007d7e8(%rip),%rcx
0000000000031000	movq	(%rcx),%rcx
0000000000031003	incq	(%r12,%rcx)
0000000000031007	movq	0x00074602(%rip),%rsi
000000000003100e	cmpq	%rax,%rbx
0000000000031011	setne	%r13b
0000000000031015	movq	%r15,%rdi
0000000000031018	call	*0x000530ba(%rip)
000000000003101e	movq	%rax,%r15
0000000000031021	movq	0x00073a58(%rip),%rsi
0000000000031028	movq	0x00077661(%rip),%rdi
000000000003102f	call	*0x000530a3(%rip)
0000000000031035	movq	%rax,%rbx
0000000000031038	movzbl	%ch,%ecx
000000000003103c	movq	0x000745ed(%rip),%rsi
0000000000031043	movq	%rbx,%rdi
0000000000031046	movq	%r15,%rdx
0000000000031049	call	*0x00053089(%rip)
000000000003104f	movq	0x000745aa(%rip),%rsi
0000000000031056	movq	%rbx,%rdi
0000000000031059	movq	%r14,%rdx
000000000003105c	call	*0x00053076(%rip)
0000000000031062	movq	0x00073a1f(%rip),%rsi
0000000000031069	movq	%rbx,%rdi
000000000003106c	movq	%r12,%rdx
000000000003106f	call	*0x00053063(%rip)
0000000000031075	movq	0x00073a1c(%rip),%rsi
000000000003107c	movq	0x00074695(%rip),%rdx
0000000000031083	movq	%rbx,%rdi
0000000000031086	call	*0x0005304c(%rip)
000000000003108c	movq	0x000745ad(%rip),%rsi
0000000000031093	movq	%r12,%rdi
0000000000031096	movq	%rbx,%rdx
0000000000031099	movq	0x00053038(%rip),%rax
00000000000310a0	addq	$0x08,%rsp
00000000000310a4	popq	%rbx
00000000000310a5	popq	%r12
00000000000310a7	popq	%r13
00000000000310a9	popq	%r14
00000000000310ab	popq	%r15
00000000000310ad	popq	%rbp
00000000000310ae	jmp	*%rax
-[PBXGDB_ArrayItemDataValueSequence _gotContainerArrayElement:]:
00000000000310b0	pushq	%rbp
00000000000310b1	movq	%rsp,%rbp
00000000000310b4	pushq	%r15
00000000000310b6	pushq	%r14
00000000000310b8	pushq	%r13
00000000000310ba	pushq	%r12
00000000000310bc	pushq	%rbx
00000000000310bd	pushq	%rax
00000000000310be	movq	%rdx,%r13
00000000000310c1	movq	%rdi,%r15
00000000000310c4	leaq	0x0007d71d(%rip),%rax
00000000000310cb	movq	(%rax),%rax
00000000000310ce	decq	(%r15,%rax)
00000000000310d2	movq	0x0007452f(%rip),%rsi
00000000000310d9	movq	0x00052ff8(%rip),%rbx
00000000000310e0	call	*%rbx
00000000000310e2	movq	%rax,%r12
00000000000310e5	movq	0x00074434(%rip),%rsi
00000000000310ec	movq	%r12,%rdi
00000000000310ef	call	*%rbx
00000000000310f1	movq	%rax,%r14
00000000000310f4	movq	0x00074625(%rip),%rsi
00000000000310fb	movq	%r15,%rdi
00000000000310fe	movq	%r13,%rdx
0000000000031101	movq	%r14,%rcx
0000000000031104	xorl	%r8d,%r8d
0000000000031107	xorl	%r9d,%r9d
000000000003110a	call	*%rbx
000000000003110c	movq	%rax,%rbx
000000000003110f	leaq	0x000771fa(%rip),%rsi
0000000000031116	movq	%rbx,%rdi
0000000000031119	call	*0x000771f1(%rip)
000000000003111f	testq	%rax,%rax
0000000000031122	je	0x000311f4
0000000000031128	leaq	0x000771f1(%rip),%rsi
000000000003112f	movq	%rbx,%rdi
0000000000031132	xorl	%edx,%edx
0000000000031134	call	*0x000771e6(%rip)
000000000003113a	movq	%rax,%rbx
000000000003113d	movq	0x0007d694(%rip),%rax
0000000000031144	movq	(%r15,%rax),%rcx
0000000000031148	movq	0x00073a29(%rip),%rsi
000000000003114f	movq	0x000772fa(%rip),%rdi
0000000000031156	leaq	0x0007f79b(%rip),%rdx
000000000003115d	movq	0x00052f74(%rip),%r13
0000000000031164	xorb	%al,%al
0000000000031166	call	*%r13
0000000000031169	movq	0x00073be8(%rip),%rsi
0000000000031170	movq	%rbx,%rdi
0000000000031173	movq	%rax,%rdx
0000000000031176	call	*%r13
0000000000031179	movq	0x00074490(%rip),%rsi
0000000000031180	movq	%r12,%rdi
0000000000031183	call	*%r13
0000000000031186	movq	0x00074533(%rip),%rsi
000000000003118d	movq	%rbx,%rdi
0000000000031190	movq	%rax,%rdx
0000000000031193	call	*%r13
0000000000031196	movq	0x0007452b(%rip),%rsi
000000000003119d	movq	%rbx,%rdi
00000000000311a0	movl	$0x00000002,%edx
00000000000311a5	call	*%r13
00000000000311a8	movq	0x00074351(%rip),%rsi
00000000000311af	movq	0x000774aa(%rip),%rdi
00000000000311b6	movq	%rbx,%rdx
00000000000311b9	call	*%r13
00000000000311bc	movq	0x00074565(%rip),%rsi
00000000000311c3	movq	%r15,%rdi
00000000000311c6	movq	%rax,%rdx
00000000000311c9	call	*%r13
00000000000311cc	movq	0x0007d605(%rip),%rax
00000000000311d3	movq	(%r15,%rax),%rdx
00000000000311d7	movq	0x00074552(%rip),%rsi
00000000000311de	movq	%r14,%rdi
00000000000311e1	movq	%rbx,%rcx
00000000000311e4	call	*%r13
00000000000311e7	movq	0x00074502(%rip),%rsi
00000000000311ee	movq	%rbx,%rdi
00000000000311f1	call	*%r13
00000000000311f4	movq	0x0007393d(%rip),%rsi
00000000000311fb	movq	%r15,%rdi
00000000000311fe	addq	$0x08,%rsp
0000000000031202	popq	%rbx
0000000000031203	popq	%r12
0000000000031205	popq	%r13
0000000000031207	popq	%r14
0000000000031209	popq	%r15
000000000003120b	popq	%rbp
000000000003120c	jmp	*0x00052ec6(%rip)
-[PBXGDB_ArrayItemDataValueSequence createVarObjDataValue]:
0000000000031212	pushq	%rbp
0000000000031213	movq	%rsp,%rbp
0000000000031216	pushq	%r14
0000000000031218	pushq	%rbx
0000000000031219	movq	%rdi,%r14
000000000003121c	movq	0x0007747d(%rip),%rdi
0000000000031223	leaq	0x000770b6(%rip),%rsi
000000000003122a	call	*0x000770b0(%rip)
0000000000031230	movq	%rax,%rbx
0000000000031233	movq	0x0007387e(%rip),%rsi
000000000003123a	movq	%r14,%rdi
000000000003123d	call	*0x00052e95(%rip)
0000000000031243	movq	0x00073b06(%rip),%rsi
000000000003124a	movq	%rbx,%rdi
000000000003124d	movq	%rax,%rdx
0000000000031250	movq	0x00052e81(%rip),%rax
0000000000031257	popq	%rbx
0000000000031258	popq	%r14
000000000003125a	popq	%rbp
000000000003125b	jmp	*%rax
-[PBXGDB_ArrayItemDataValueSequence handleErrorForMICommand:]:
000000000003125d	pushq	%rbp
000000000003125e	movq	%rsp,%rbp
0000000000031261	leaq	0x0007d580(%rip),%rax
0000000000031268	movq	(%rax),%rax
000000000003126b	decq	(%rdi,%rax)
000000000003126f	cmpq	$0x00,(%rdi,%rax)
0000000000031274	jg	0x00031283
0000000000031276	movq	0x000738bb(%rip),%rsi
000000000003127d	call	*0x00052e55(%rip)
0000000000031283	movl	$0x00000001,%eax
0000000000031288	popq	%rbp
0000000000031289	ret
-[PBXGDB_BaseDataValueSequence dealloc]:
000000000003128a	pushq	%rbp
000000000003128b	movq	%rsp,%rbp
000000000003128e	movq	0x0007436b(%rip),%rsi
0000000000031295	xorl	%edx,%edx
0000000000031297	popq	%rbp
0000000000031298	jmp	*0x00052e3a(%rip)
-[PBXGDB_BaseDataValueSequence _gotResultVarObjValue:]:
000000000003129e	pushq	%rbp
000000000003129f	movq	%rsp,%rbp
00000000000312a2	pushq	%r15
00000000000312a4	pushq	%r14
00000000000312a6	pushq	%rbx
00000000000312a7	subq	$0x38,%rsp
00000000000312ab	movq	%rdx,%r14
00000000000312ae	movq	%rdi,0xe0(%rbp)
00000000000312b2	movq	%rsi,0xd8(%rbp)
00000000000312b6	testq	%r14,%r14
00000000000312b9	jne	0x00031321
00000000000312bb	movq	0x000773d6(%rip),%rdi
00000000000312c2	leaq	0x00077067(%rip),%rsi
00000000000312c9	call	*0x00077061(%rip)
00000000000312cf	movq	%rax,%rdi
00000000000312d2	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
00000000000312d7	leaq	0xe0(%rbp),%rdi
00000000000312db	leaq	0xd8(%rbp),%rsi
00000000000312df	leaq	0x0002c757(%rip),%rdx
00000000000312e6	leaq	0x0002c787(%rip),%rcx
00000000000312ed	leaq	0x0007e6c4(%rip),%r9
00000000000312f4	leaq	0x0002c805(%rip),%r8
00000000000312fb	leaq	0x0002c802(%rip),%rbx
0000000000031302	movq	%rbx,0x18(%rsp)
0000000000031307	leaq	0x0007e52a(%rip),%rbx
000000000003130e	movq	%rbx,0x10(%rsp)
0000000000031313	movq	%rax,0x08(%rsp)
0000000000031318	movq	%r8,(%rsp)
000000000003131c	jmp	0x000313c9
0000000000031321	movq	0x00077370(%rip),%rdi
0000000000031328	leaq	0x00077001(%rip),%rsi
000000000003132f	call	*0x00076ffb(%rip)
0000000000031335	leaq	0x00077004(%rip),%rsi
000000000003133c	movq	%r14,%rdi
000000000003133f	movq	%rax,%rdx
0000000000031342	call	*0x00076ff8(%rip)
0000000000031348	testb	%al,%al
000000000003134a	jne	0x000313d6
0000000000031350	movq	0x00077341(%rip),%rdi
0000000000031357	leaq	0x00076fd2(%rip),%rsi
000000000003135e	call	*0x00076fcc(%rip)
0000000000031364	movq	%rax,%rdi
0000000000031367	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000003136c	movq	%rax,%rbx
000000000003136f	movq	0x000738ea(%rip),%rsi
0000000000031376	movq	%r14,%rdi
0000000000031379	call	*0x00052d59(%rip)
000000000003137f	leaq	0x0007e4b2(%rip),%r8
0000000000031386	leaq	0x0002c784(%rip),%r9
000000000003138d	leaq	0xe0(%rbp),%rdi
0000000000031391	leaq	0xd8(%rbp),%rsi
0000000000031395	leaq	0x0002c6a1(%rip),%rdx
000000000003139c	leaq	0x0002c6d1(%rip),%rcx
00000000000313a3	movq	%r9,0x20(%rsp)
00000000000313a8	leaq	0x0007e629(%rip),%r9
00000000000313af	movq	%r8,0x18(%rsp)
00000000000313b4	movq	%rax,0x10(%rsp)
00000000000313b9	leaq	0x0002c740(%rip),%rax
00000000000313c0	movq	%rbx,0x08(%rsp)
00000000000313c5	movq	%rax,(%rsp)
00000000000313c9	movl	$0x000000a1,%r8d
00000000000313cf	xorb	%al,%al
00000000000313d1	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
00000000000313d6	movq	0x0007422b(%rip),%rsi
00000000000313dd	movq	0x00052cf4(%rip),%r15
00000000000313e4	movq	%r14,%rdi
00000000000313e7	call	*%r15
00000000000313ea	movq	%rax,%rbx
00000000000313ed	movq	0x00074274(%rip),%rsi
00000000000313f4	movq	%r14,%rdi
00000000000313f7	call	*%r15
00000000000313fa	movq	0x000741bf(%rip),%rsi
0000000000031401	movq	%rbx,%rdi
0000000000031404	movq	%rax,%rdx
0000000000031407	call	*%r15
000000000003140a	movq	0x000741cf(%rip),%rsi
0000000000031411	movq	%rbx,%rdi
0000000000031414	movl	$0x00000002,%edx
0000000000031419	call	*%r15
000000000003141c	movq	0x00074385(%rip),%rsi
0000000000031423	movq	%rbx,%rdi
0000000000031426	call	*%r15
0000000000031429	cmpl	$0x01,%eax
000000000003142c	jne	0x00031468
000000000003142e	movq	0x0007437b(%rip),%rsi
0000000000031435	movq	%rbx,%rdi
0000000000031438	call	*0x00052c9a(%rip)
000000000003143e	cmpb	$0x01,%al
0000000000031440	jne	0x00031468
0000000000031442	movq	0x0007429f(%rip),%rsi
0000000000031449	movq	0x00052c88(%rip),%r14
0000000000031450	movq	%rbx,%rdi
0000000000031453	movl	$0x00000001,%edx
0000000000031458	call	*%r14
000000000003145b	movq	0x0007428e(%rip),%rsi
0000000000031462	movq	%rbx,%rdi
0000000000031465	call	*%r14
0000000000031468	movq	0x00073649(%rip),%rsi
000000000003146f	movq	0xe0(%rbp),%rdi
0000000000031473	movq	0x00052c5e(%rip),%r14
000000000003147a	call	*%r14
000000000003147d	movq	0x00074334(%rip),%rsi
0000000000031484	movq	%rax,%rdi
0000000000031487	movq	%rbx,%rdx
000000000003148a	call	*%r14
000000000003148d	movq	0x0007d354(%rip),%rax
0000000000031494	movq	0xe0(%rbp),%rdx
0000000000031498	movq	(%rdx,%rax),%rcx
000000000003149c	decq	%rcx
000000000003149f	movq	%rcx,(%rdx,%rax)
00000000000314a3	testq	%rcx,%rcx
00000000000314a6	jg	0x000314b9
00000000000314a8	movq	0x00073689(%rip),%rsi
00000000000314af	movq	0xe0(%rbp),%rdi
00000000000314b3	call	*0x00052c1f(%rip)
00000000000314b9	addq	$0x38,%rsp
00000000000314bd	popq	%rbx
00000000000314be	popq	%r14
00000000000314c0	popq	%r15
00000000000314c2	popq	%rbp
00000000000314c3	ret
-[PBXGDB_BaseDataValueSequence subSequenceGetValuesForDataValues:]:
00000000000314c4	pushq	%rbp
00000000000314c5	movq	%rsp,%rbp
00000000000314c8	pushq	%r15
00000000000314ca	pushq	%r14
00000000000314cc	pushq	%r13
00000000000314ce	pushq	%r12
00000000000314d0	pushq	%rbx
00000000000314d1	subq	$0x28,%rsp
00000000000314d5	movq	%rdx,0xc0(%rbp)
00000000000314d9	movq	%rdi,0xc8(%rbp)
00000000000314dd	leaq	0x00076e2c(%rip),%rsi
00000000000314e4	movq	%rdx,%rdi
00000000000314e7	call	*0x00076e23(%rip)
00000000000314ed	movq	%rax,0xb8(%rbp)
00000000000314f1	testq	%rax,%rax
00000000000314f4	je	0x000315e7
00000000000314fa	xorl	%ebx,%ebx
00000000000314fc	movq	0x00052bd5(%rip),%r15
0000000000031503	movq	0xc8(%rbp),%r12
0000000000031507	movq	0xc0(%rbp),%rdi
000000000003150b	leaq	0x00076e0e(%rip),%rsi
0000000000031512	movq	%rbx,%rdx
0000000000031515	call	*0x00076e05(%rip)
000000000003151b	movq	%rax,%r13
000000000003151e	movq	0x000770db(%rip),%rdi
0000000000031525	leaq	0x00076e04(%rip),%rsi
000000000003152c	call	*0x00076dfe(%rip)
0000000000031532	movq	%r13,%rdi
0000000000031535	leaq	0x00076e04(%rip),%rsi
000000000003153c	movq	%rax,%rdx
000000000003153f	call	*0x00076dfb(%rip)
0000000000031545	testb	%al,%al
0000000000031547	je	0x000315da
000000000003154d	movq	%r13,%rdi
0000000000031550	movq	0x000741a1(%rip),%rsi
0000000000031557	call	*0x00052b7b(%rip)
000000000003155d	movq	%rax,0xd0(%rbp)
0000000000031561	testq	%rax,%rax
0000000000031564	je	0x000315da
0000000000031566	movq	0x0007712b(%rip),%rdi
000000000003156d	movq	0x0007350c(%rip),%rsi
0000000000031574	call	*%r15
0000000000031577	movq	%rax,%r14
000000000003157a	movq	%r14,%rdi
000000000003157d	movq	0x00073504(%rip),%rsi
0000000000031584	movq	%r12,%rdx
0000000000031587	call	*%r15
000000000003158a	movq	%r14,%rdi
000000000003158d	movq	0x00073504(%rip),%rsi
0000000000031594	movq	0x00074225(%rip),%rdx
000000000003159b	call	*%r15
000000000003159e	movq	%r14,%rdi
00000000000315a1	movq	0x00074058(%rip),%rsi
00000000000315a8	movq	%r13,%rdx
00000000000315ab	call	*%r15
00000000000315ae	movq	%r14,%rdi
00000000000315b1	movq	0x000740a0(%rip),%rsi
00000000000315b8	movq	0xd0(%rbp),%rdx
00000000000315bc	call	*%r15
00000000000315bf	movq	0x0007d222(%rip),%rax
00000000000315c6	incq	(%r12,%rax)
00000000000315ca	movq	%r12,%rdi
00000000000315cd	movq	0x0007406c(%rip),%rsi
00000000000315d4	movq	%r14,%rdx
00000000000315d7	call	*%r15
00000000000315da	incq	%rbx
00000000000315dd	cmpq	%rbx,0xb8(%rbp)
00000000000315e1	jne	0x00031507
00000000000315e7	movq	0x0007d1fa(%rip),%rax
00000000000315ee	movq	0xc8(%rbp),%rdi
00000000000315f2	cmpq	$0x00,(%rdi,%rax)
00000000000315f7	je	0x00031608
00000000000315f9	addq	$0x28,%rsp
00000000000315fd	popq	%rbx
00000000000315fe	popq	%r12
0000000000031600	popq	%r13
0000000000031602	popq	%r14
0000000000031604	popq	%r15
0000000000031606	popq	%rbp
0000000000031607	ret
0000000000031608	movq	0x00073529(%rip),%rsi
000000000003160f	addq	$0x28,%rsp
0000000000031613	popq	%rbx
0000000000031614	popq	%r12
0000000000031616	popq	%r13
0000000000031618	popq	%r14
000000000003161a	popq	%r15
000000000003161c	popq	%rbp
000000000003161d	jmp	*0x00052ab5(%rip)
-[PBXGDB_BaseDataValueSequence setDataValue:fromCreateVarObjCommand:]:
0000000000031623	pushq	%rbp
0000000000031624	movq	%rsp,%rbp
0000000000031627	pushq	%r15
0000000000031629	pushq	%r14
000000000003162b	pushq	%rbx
000000000003162c	pushq	%rax
000000000003162d	movq	%rcx,%rbx
0000000000031630	movq	%rdx,%r14
0000000000031633	movq	%rdi,%r15
0000000000031636	movq	0x00074203(%rip),%rsi
000000000003163d	movq	%rbx,%rdi
0000000000031640	call	*0x00052a92(%rip)
0000000000031646	testb	%al,%al
0000000000031648	jne	0x00031655
000000000003164a	addq	$0x08,%rsp
000000000003164e	popq	%rbx
000000000003164f	popq	%r14
0000000000031651	popq	%r15
0000000000031653	popq	%rbp
0000000000031654	ret
0000000000031655	movq	0x0007421c(%rip),%rsi
000000000003165c	movq	%r15,%rdi
000000000003165f	movq	%r14,%rdx
0000000000031662	movq	%rbx,%rcx
0000000000031665	addq	$0x08,%rsp
0000000000031669	popq	%rbx
000000000003166a	popq	%r14
000000000003166c	popq	%r15
000000000003166e	popq	%rbp
000000000003166f	jmp	*0x00052a63(%rip)
-[PBXGDB_BaseDataValueSequence handleErrorForMICommand:]:
0000000000031675	pushq	%rbp
0000000000031676	movq	%rsp,%rbp
0000000000031679	pushq	%r15
000000000003167b	pushq	%r14
000000000003167d	pushq	%r12
000000000003167f	pushq	%rbx
0000000000031680	movq	%rdx,%r12
0000000000031683	movq	%rdi,%r14
0000000000031686	movq	0x000741f3(%rip),%rsi
000000000003168d	movq	0x00052a44(%rip),%rbx
0000000000031694	movq	%r12,%rdi
0000000000031697	call	*%rbx
0000000000031699	movq	%rax,%r15
000000000003169c	movq	0x000741e5(%rip),%rsi
00000000000316a3	movq	%r12,%rdi
00000000000316a6	call	*%rbx
00000000000316a8	movq	%rax,%rbx
00000000000316ab	leaq	0x00076cbe(%rip),%rsi
00000000000316b2	movq	%r15,%rdi
00000000000316b5	movq	%rbx,%rdx
00000000000316b8	call	*0x00076cb2(%rip)
00000000000316be	cmpb	$0x01,%al
00000000000316c0	jne	0x000316da
00000000000316c2	movq	0x000741c7(%rip),%rsi
00000000000316c9	movq	%r15,%rdi
00000000000316cc	movq	%rbx,%rdx
00000000000316cf	movq	%r12,%rcx
00000000000316d2	call	*0x00052a00(%rip)
00000000000316d8	jmp	0x000316ea
00000000000316da	movq	0x00073457(%rip),%rsi
00000000000316e1	movq	%r14,%rdi
00000000000316e4	call	*0x000529ee(%rip)
00000000000316ea	movl	$0x00000001,%eax
00000000000316ef	popq	%rbx
00000000000316f0	popq	%r12
00000000000316f2	popq	%r14
00000000000316f4	popq	%r15
00000000000316f6	popq	%rbp
00000000000316f7	ret
-[PBXGDB_BaseDataValueSequence timedOut]:
00000000000316f8	pushq	%rbp
00000000000316f9	movq	%rsp,%rbp
00000000000316fc	pushq	%r15
00000000000316fe	pushq	%r14
0000000000031700	pushq	%rbx
0000000000031701	subq	$0x18,%rsp
0000000000031705	movq	%rdi,%r14
0000000000031708	movq	0x000733a9(%rip),%rsi
000000000003170f	call	*0x000529c3(%rip)
0000000000031715	movq	%rax,%rbx
0000000000031718	testq	%rbx,%rbx
000000000003171b	je	0x0003176a
000000000003171d	movq	0x000741f4(%rip),%rsi
0000000000031724	movq	%rbx,%rdi
0000000000031727	call	*0x000529ab(%rip)
000000000003172d	testl	%eax,%eax
000000000003172f	jle	0x0003173d
0000000000031731	movl	%eax,%edi
0000000000031733	movl	$0x00000002,%esi
0000000000031738	callq	0x0004e6b6	; symbol stub for: _kill
000000000003173d	movq	0x000741dc(%rip),%rsi
0000000000031744	movq	0x00076f8d(%rip),%rdi
000000000003174b	movq	0x00052986(%rip),%r15
0000000000031752	call	*%r15
0000000000031755	movq	0x000741cc(%rip),%rsi
000000000003175c	movq	%rbx,%rdi
000000000003175f	movq	%rax,%rdx
0000000000031762	movl	$0x00000001,%ecx
0000000000031767	call	*%r15
000000000003176a	movq	%r14,0xd8(%rbp)
000000000003176e	movq	0x000775c3(%rip),%rax
0000000000031775	movq	%rax,0xe0(%rbp)
0000000000031779	movq	0x000741b0(%rip),%rsi
0000000000031780	leaq	0xd8(%rbp),%rdi
0000000000031784	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000031789	addq	$0x18,%rsp
000000000003178d	popq	%rbx
000000000003178e	popq	%r14
0000000000031790	popq	%r15
0000000000031792	popq	%rbp
0000000000031793	ret
-[PBXGDB_BaseDescription description]:
0000000000031794	pushq	%rbp
0000000000031795	movq	%rsp,%rbp
0000000000031798	pushq	%r14
000000000003179a	pushq	%rbx
000000000003179b	subq	$0x10,%rsp
000000000003179f	movq	%rdi,%rbx
00000000000317a2	movq	0x00076ca7(%rip),%r14
00000000000317a9	leaq	0x00076b80(%rip),%rsi
00000000000317b0	call	*0x00076b7a(%rip)
00000000000317b6	movq	%rax,%rdi
00000000000317b9	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
00000000000317be	movq	0x0007d033(%rip),%rcx
00000000000317c5	movq	(%rbx,%rcx),%r9
00000000000317c9	movq	0x0007d030(%rip),%rcx
00000000000317d0	movq	(%rbx,%rcx),%rcx
00000000000317d4	leaq	0x0007f39d(%rip),%rdx
00000000000317db	movq	0x00073396(%rip),%rsi
00000000000317e2	movq	%rcx,(%rsp)
00000000000317e6	movq	%r14,%rdi
00000000000317e9	movq	%rax,%rcx
00000000000317ec	movq	%rbx,%r8
00000000000317ef	xorb	%al,%al
00000000000317f1	call	*0x000528e1(%rip)
00000000000317f7	addq	$0x10,%rsp
00000000000317fb	popq	%rbx
00000000000317fc	popq	%r14
00000000000317fe	popq	%rbp
00000000000317ff	ret
-[PBXGDB_CFNSStringContentFetchSequence stringBufferAddressValue]:
0000000000031800	pushq	%rbp
0000000000031801	movq	%rsp,%rbp
0000000000031804	movq	0x000732ad(%rip),%rsi
000000000003180b	call	*0x000528c7(%rip)
0000000000031811	movq	0x00074120(%rip),%rsi
0000000000031818	movq	%rax,%rdi
000000000003181b	movq	0x000528b6(%rip),%rax
0000000000031822	popq	%rbp
0000000000031823	jmp	*%rax
-[PBXGDB_CFNSStringContentFetchSequence numberOfCharactersForStringBuffer]:
0000000000031825	pushq	%rbp
0000000000031826	movq	%rsp,%rbp
0000000000031829	leaq	0x0007d1d8(%rip),%rax
0000000000031830	movq	(%rax),%rax
0000000000031833	movq	0x0007cfce(%rip),%rcx
000000000003183a	cmpq	$0x63,(%rdi,%rcx)
000000000003183f	jl	0x0003184c
0000000000031841	movb	$0x01,(%rdi,%rax)
0000000000031845	movl	$0x00000063,%eax
000000000003184a	jmp	0x00031854
000000000003184c	movb	$0x00,(%rdi,%rax)
0000000000031850	movq	(%rdi,%rcx),%rax
0000000000031854	popq	%rbp
0000000000031855	ret
-[PBXGDB_CFNSStringContentFetchSequence unicharBufferSize]:
0000000000031856	pushq	%rbp
0000000000031857	movq	%rsp,%rbp
000000000003185a	movl	$0x000000c8,%eax
000000000003185f	popq	%rbp
0000000000031860	ret
-[PBXGDB_CFNSStringContentFetchSequence _gotUniChars:]:
0000000000031861	pushq	%rbp
0000000000031862	movq	%rsp,%rbp
0000000000031865	pushq	%r14
0000000000031867	pushq	%rbx
0000000000031868	subq	$0x40,%rsp
000000000003186c	movq	%rdx,%r14
000000000003186f	movq	%rdi,0xe8(%rbp)
0000000000031873	movq	%rsi,0xe0(%rbp)
0000000000031877	testq	%r14,%r14
000000000003187a	jne	0x000318e2
000000000003187c	movq	0x00076dbd(%rip),%rdi
0000000000031883	leaq	0x00076aa6(%rip),%rsi
000000000003188a	call	*0x00076aa0(%rip)
0000000000031890	movq	%rax,%rdi
0000000000031893	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000031898	leaq	0xe8(%rbp),%rdi
000000000003189c	leaq	0xe0(%rbp),%rsi
00000000000318a0	leaq	0x0002c40e(%rip),%rdx
00000000000318a7	leaq	0x0002c43e(%rip),%rcx
00000000000318ae	leaq	0x0007e103(%rip),%r9
00000000000318b5	leaq	0x0002c244(%rip),%r8
00000000000318bc	leaq	0x0002c241(%rip),%rbx
00000000000318c3	movq	%rbx,0x18(%rsp)
00000000000318c8	leaq	0x0007df69(%rip),%rbx
00000000000318cf	movq	%rbx,0x10(%rsp)
00000000000318d4	movq	%rax,0x08(%rsp)
00000000000318d9	movq	%r8,(%rsp)
00000000000318dd	jmp	0x0003198a
00000000000318e2	movq	0x00076d57(%rip),%rdi
00000000000318e9	leaq	0x00076a40(%rip),%rsi
00000000000318f0	call	*0x00076a3a(%rip)
00000000000318f6	leaq	0x00076a43(%rip),%rsi
00000000000318fd	movq	%r14,%rdi
0000000000031900	movq	%rax,%rdx
0000000000031903	call	*0x00076a37(%rip)
0000000000031909	testb	%al,%al
000000000003190b	jne	0x00031997
0000000000031911	movq	0x00076d28(%rip),%rdi
0000000000031918	leaq	0x00076a11(%rip),%rsi
000000000003191f	call	*0x00076a0b(%rip)
0000000000031925	movq	%rax,%rdi
0000000000031928	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000003192d	movq	%rax,%rbx
0000000000031930	movq	0x00073329(%rip),%rsi
0000000000031937	movq	%r14,%rdi
000000000003193a	call	*0x00052798(%rip)
0000000000031940	leaq	0x0007def1(%rip),%r8
0000000000031947	leaq	0x0002c433(%rip),%r9
000000000003194e	leaq	0xe8(%rbp),%rdi
0000000000031952	leaq	0xe0(%rbp),%rsi
0000000000031956	leaq	0x0002c358(%rip),%rdx
000000000003195d	leaq	0x0002c388(%rip),%rcx
0000000000031964	movq	%r9,0x20(%rsp)
0000000000031969	leaq	0x0007e068(%rip),%r9
0000000000031970	movq	%r8,0x18(%rsp)
0000000000031975	movq	%rax,0x10(%rsp)
000000000003197a	leaq	0x0002c17f(%rip),%rax
0000000000031981	movq	%rbx,0x08(%rsp)
0000000000031986	movq	%rax,(%rsp)
000000000003198a	movl	$0x00000030,%r8d
0000000000031990	xorb	%al,%al
0000000000031992	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000031997	movq	0x0007316a(%rip),%rsi
000000000003199e	movq	0x00052733(%rip),%rbx
00000000000319a5	movq	%r14,%rdi
00000000000319a8	call	*%rbx
00000000000319aa	movq	0x0007392f(%rip),%rsi
00000000000319b1	movq	%rax,%rdi
00000000000319b4	call	*%rbx
00000000000319b6	movq	0x0007ce4b(%rip),%rcx
00000000000319bd	movq	0xe8(%rbp),%rdx
00000000000319c1	movq	%rax,(%rdx,%rcx)
00000000000319c5	movq	0xe8(%rbp),%rdi
00000000000319c9	cmpq	$0x00,(%rdi,%rcx)
00000000000319ce	jns	0x000319dc
00000000000319d0	movq	$0x00000000,(%rdi,%rcx)
00000000000319d8	movq	0xe8(%rbp),%rdi
00000000000319dc	movq	0x00073f5d(%rip),%rsi
00000000000319e3	call	*0x000526ef(%rip)
00000000000319e9	addq	$0x40,%rsp
00000000000319ed	popq	%rbx
00000000000319ee	popq	%r14
00000000000319f0	popq	%rbp
00000000000319f1	ret
-[PBXGDB_CFNSStringContentFetchSequence _getStringCharacters]:
00000000000319f2	pushq	%rbp
00000000000319f3	movq	%rsp,%rbp
00000000000319f6	pushq	%r15
00000000000319f8	pushq	%r14
00000000000319fa	pushq	%rbx
00000000000319fb	pushq	%rax
00000000000319fc	movq	%rdi,%r14
00000000000319ff	movq	0x00076a4a(%rip),%rbx
0000000000031a06	movq	0x00073f3b(%rip),%rsi
0000000000031a0d	call	*0x000526c5(%rip)
0000000000031a13	movq	0x00073f36(%rip),%rsi
0000000000031a1a	movq	%rax,%rdi
0000000000031a1d	call	*0x000526b5(%rip)
0000000000031a23	leaq	0x0007f16e(%rip),%rdx
0000000000031a2a	movq	0x00073147(%rip),%rsi
0000000000031a31	movq	%rbx,%rdi
0000000000031a34	movq	%rax,%rcx
0000000000031a37	xorb	%al,%al
0000000000031a39	call	*0x00052699(%rip)
0000000000031a3f	movq	%rax,%r15
0000000000031a42	movq	0x00073037(%rip),%rsi
0000000000031a49	movq	0x00076bf0(%rip),%rdi
0000000000031a50	call	*0x00052682(%rip)
0000000000031a56	movq	%rax,%rbx
0000000000031a59	movq	0x00073028(%rip),%rsi
0000000000031a60	movq	%rbx,%rdi
0000000000031a63	movq	%r14,%rdx
0000000000031a66	call	*0x0005266c(%rip)
0000000000031a6c	movq	0x00073025(%rip),%rsi
0000000000031a73	movq	0x00073ede(%rip),%rdx
0000000000031a7a	movq	%rbx,%rdi
0000000000031a7d	call	*0x00052655(%rip)
0000000000031a83	movq	0x00073966(%rip),%rsi
0000000000031a8a	movq	%rbx,%rdi
0000000000031a8d	movq	%r15,%rdx
0000000000031a90	call	*0x00052642(%rip)
0000000000031a96	movq	0x0007301b(%rip),%rsi
0000000000031a9d	movq	%r14,%rdi
0000000000031aa0	call	*0x00052632(%rip)
0000000000031aa6	movq	0x00073013(%rip),%rsi
0000000000031aad	movq	%rax,%rdi
0000000000031ab0	call	*0x00052622(%rip)
0000000000031ab6	movq	0x0007300b(%rip),%rsi
0000000000031abd	movq	%rax,%rdi
0000000000031ac0	movq	%rbx,%rdx
0000000000031ac3	movq	0x0005260e(%rip),%rax
0000000000031aca	addq	$0x08,%rsp
0000000000031ace	popq	%rbx
0000000000031acf	popq	%r14
0000000000031ad1	popq	%r15
0000000000031ad3	popq	%rbp
0000000000031ad4	jmp	*%rax
-[PBXGDB_CFNSStringContentFetchSequence _gotMemoryAllocation:]:
0000000000031ad6	pushq	%rbp
0000000000031ad7	movq	%rsp,%rbp
0000000000031ada	pushq	%r15
0000000000031adc	pushq	%r14
0000000000031ade	pushq	%r13
0000000000031ae0	pushq	%r12
0000000000031ae2	pushq	%rbx
0000000000031ae3	subq	$0x38,%rsp
0000000000031ae7	movq	%rdx,%r14
0000000000031aea	movq	%rdi,0xd0(%rbp)
0000000000031aee	movq	%rsi,0xc8(%rbp)
0000000000031af2	testq	%r14,%r14
0000000000031af5	jne	0x00031b5d
0000000000031af7	movq	0x00076b42(%rip),%rdi
0000000000031afe	leaq	0x0007682b(%rip),%rsi
0000000000031b05	call	*0x00076825(%rip)
0000000000031b0b	movq	%rax,%rdi
0000000000031b0e	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000031b13	leaq	0xd0(%rbp),%rdi
0000000000031b17	leaq	0xc8(%rbp),%rsi
0000000000031b1b	leaq	0x0002c2ca(%rip),%rdx
0000000000031b22	leaq	0x0002c1c3(%rip),%rcx
0000000000031b29	leaq	0x0007de88(%rip),%r9
0000000000031b30	leaq	0x0002bfc9(%rip),%r8
0000000000031b37	leaq	0x0002bfc6(%rip),%rbx
0000000000031b3e	movq	%rbx,0x18(%rsp)
0000000000031b43	leaq	0x0007dcee(%rip),%rbx
0000000000031b4a	movq	%rbx,0x10(%rsp)
0000000000031b4f	movq	%rax,0x08(%rsp)
0000000000031b54	movq	%r8,(%rsp)
0000000000031b58	jmp	0x00031c05
0000000000031b5d	movq	0x00076adc(%rip),%rdi
0000000000031b64	leaq	0x000767c5(%rip),%rsi
0000000000031b6b	call	*0x000767bf(%rip)
0000000000031b71	leaq	0x000767c8(%rip),%rsi
0000000000031b78	movq	%r14,%rdi
0000000000031b7b	movq	%rax,%rdx
0000000000031b7e	call	*0x000767bc(%rip)
0000000000031b84	testb	%al,%al
0000000000031b86	jne	0x00031c12
0000000000031b8c	movq	0x00076aad(%rip),%rdi
0000000000031b93	leaq	0x00076796(%rip),%rsi
0000000000031b9a	call	*0x00076790(%rip)
0000000000031ba0	movq	%rax,%rdi
0000000000031ba3	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000031ba8	movq	%rax,%rbx
0000000000031bab	movq	0x000730ae(%rip),%rsi
0000000000031bb2	movq	%r14,%rdi
0000000000031bb5	call	*0x0005251d(%rip)
0000000000031bbb	leaq	0x0007dc76(%rip),%r8
0000000000031bc2	leaq	0x0002c1b8(%rip),%r9
0000000000031bc9	leaq	0xd0(%rbp),%rdi
0000000000031bcd	leaq	0xc8(%rbp),%rsi
0000000000031bd1	leaq	0x0002c214(%rip),%rdx
0000000000031bd8	leaq	0x0002c10d(%rip),%rcx
0000000000031bdf	movq	%r9,0x20(%rsp)
0000000000031be4	leaq	0x0007dded(%rip),%r9
0000000000031beb	movq	%r8,0x18(%rsp)
0000000000031bf0	movq	%rax,0x10(%rsp)
0000000000031bf5	leaq	0x0002bf04(%rip),%rax
0000000000031bfc	movq	%rbx,0x08(%rsp)
0000000000031c01	movq	%rax,(%rsp)
0000000000031c05	movl	$0x0000004b,%r8d
0000000000031c0b	xorb	%al,%al
0000000000031c0d	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000031c12	movq	0x00072e9f(%rip),%rsi
0000000000031c19	movq	0xd0(%rbp),%rdi
0000000000031c1d	movq	0x000524b4(%rip),%r13
0000000000031c24	call	*%r13
0000000000031c27	movq	%rax,%r15
0000000000031c2a	movq	0x00076aaf(%rip),%r12
0000000000031c31	movq	0x00072ed0(%rip),%rsi
0000000000031c38	movq	%r14,%rdi
0000000000031c3b	call	*%r13
0000000000031c3e	movq	%rax,%rbx
0000000000031c41	movq	0x00073d18(%rip),%rsi
0000000000031c48	movq	0xd0(%rbp),%rdi
0000000000031c4c	call	*%r13
0000000000031c4f	movq	0x00073d12(%rip),%rsi
0000000000031c56	movq	%r12,%rdi
0000000000031c59	movq	%rbx,%rdx
0000000000031c5c	movq	%rax,%rcx
0000000000031c5f	call	*%r13
0000000000031c62	movq	0x00073137(%rip),%rsi
0000000000031c69	movq	%r15,%rdi
0000000000031c6c	movq	%rax,%rdx
0000000000031c6f	call	*%r13
0000000000031c72	movq	0x00073cf7(%rip),%rsi
0000000000031c79	movq	0xd0(%rbp),%rdi
0000000000031c7d	call	*%r13
0000000000031c80	addq	$0x38,%rsp
0000000000031c84	popq	%rbx
0000000000031c85	popq	%r12
0000000000031c87	popq	%r13
0000000000031c89	popq	%r14
0000000000031c8b	popq	%r15
0000000000031c8d	popq	%rbp
0000000000031c8e	ret
-[PBXGDB_CFNSStringContentFetchSequence needsEvaluationSafetyCheck]:
0000000000031c8f	pushq	%rbp
0000000000031c90	movq	%rsp,%rbp
0000000000031c93	movl	$0x00000001,%eax
0000000000031c98	popq	%rbp
0000000000031c99	ret
-[PBXGDB_CFNSStringContentFetchSequence safetyCheckFailed]:
0000000000031c9a	pushq	%rbp
0000000000031c9b	movq	%rsp,%rbp
0000000000031c9e	pushq	%rbx
0000000000031c9f	pushq	%rax
0000000000031ca0	movq	%rdi,%rbx
0000000000031ca3	movq	0x00072e0e(%rip),%rsi
0000000000031caa	call	*0x00052428(%rip)
0000000000031cb0	movq	0x00073139(%rip),%rsi
0000000000031cb7	movq	%rax,%rdi
0000000000031cba	call	*0x00052418(%rip)
0000000000031cc0	movq	0x00073cb1(%rip),%rsi
0000000000031cc7	movq	%rax,%rdi
0000000000031cca	call	*0x00052408(%rip)
0000000000031cd0	movq	0x00073009(%rip),%rsi
0000000000031cd7	movq	%rax,%rdi
0000000000031cda	movl	$0x0000000a,%edx
0000000000031cdf	call	*0x000523f3(%rip)
0000000000031ce5	movq	0x00073c94(%rip),%rsi
0000000000031cec	movq	%rbx,%rdi
0000000000031cef	movq	%rax,%rdx
0000000000031cf2	call	*0x000523e0(%rip)
0000000000031cf8	movq	0x00073c89(%rip),%rsi
0000000000031cff	movq	%rbx,%rdi
0000000000031d02	movl	$0x00000001,%edx
0000000000031d07	call	*0x000523cb(%rip)
0000000000031d0d	movq	0x00072e24(%rip),%rsi
0000000000031d14	movq	%rbx,%rdi
0000000000031d17	movq	0x000523ba(%rip),%rax
0000000000031d1e	addq	$0x08,%rsp
0000000000031d22	popq	%rbx
0000000000031d23	popq	%rbp
0000000000031d24	jmp	*%rax
-[PBXGDB_CFNSStringContentFetchSequence execute]:
0000000000031d26	pushq	%rbp
0000000000031d27	movq	%rsp,%rbp
0000000000031d2a	pushq	%r14
0000000000031d2c	pushq	%rbx
0000000000031d2d	movq	%rdi,%r14
0000000000031d30	movq	0x00073c59(%rip),%rsi
0000000000031d37	call	*0x0005239b(%rip)
0000000000031d3d	testb	%al,%al
0000000000031d3f	je	0x00031d64
0000000000031d41	movq	0x00072d70(%rip),%rsi
0000000000031d48	movq	0x00052389(%rip),%rbx
0000000000031d4f	movq	%r14,%rdi
0000000000031d52	call	*%rbx
0000000000031d54	movq	0x00073c3d(%rip),%rsi
0000000000031d5b	movq	%rax,%rdi
0000000000031d5e	call	*%rbx
0000000000031d60	testb	%al,%al
0000000000031d62	jne	0x00031d78
0000000000031d64	movq	0x00073c35(%rip),%rsi
0000000000031d6b	movq	%r14,%rdi
0000000000031d6e	popq	%rbx
0000000000031d6f	popq	%r14
0000000000031d71	popq	%rbp
0000000000031d72	jmp	*0x00052360(%rip)
0000000000031d78	movq	0x00072d39(%rip),%rsi
0000000000031d7f	movq	0x00052352(%rip),%rbx
0000000000031d86	movq	%r14,%rdi
0000000000031d89	call	*%rbx
0000000000031d8b	movq	0x00073ba6(%rip),%rsi
0000000000031d92	movq	%rax,%rdi
0000000000031d95	call	*%rbx
0000000000031d97	testq	%rax,%rax
0000000000031d9a	je	0x00031da5
0000000000031d9c	movq	0x00073bcd(%rip),%rsi
0000000000031da3	jmp	0x00031d6b
0000000000031da5	movq	0x00072cd4(%rip),%rsi
0000000000031dac	movq	0x0007688d(%rip),%rdi
0000000000031db3	call	*0x0005231f(%rip)
0000000000031db9	movq	%rax,%rbx
0000000000031dbc	movq	0x00072cc5(%rip),%rsi
0000000000031dc3	movq	%rbx,%rdi
0000000000031dc6	movq	%r14,%rdx
0000000000031dc9	call	*0x00052309(%rip)
0000000000031dcf	movq	0x00072cc2(%rip),%rsi
0000000000031dd6	movq	0x00073bcb(%rip),%rdx
0000000000031ddd	movq	%rbx,%rdi
0000000000031de0	call	*0x000522f2(%rip)
0000000000031de6	leaq	0x0007edcb(%rip),%rdx
0000000000031ded	movq	0x000735fc(%rip),%rsi
0000000000031df4	movq	%rbx,%rdi
0000000000031df7	call	*0x000522db(%rip)
0000000000031dfd	movq	0x00072cb4(%rip),%rsi
0000000000031e04	movq	%r14,%rdi
0000000000031e07	call	*0x000522cb(%rip)
0000000000031e0d	movq	0x00072cac(%rip),%rsi
0000000000031e14	movq	%rax,%rdi
0000000000031e17	call	*0x000522bb(%rip)
0000000000031e1d	movq	0x00072ca4(%rip),%rsi
0000000000031e24	movq	%rax,%rdi
0000000000031e27	movq	%rbx,%rdx
0000000000031e2a	movq	0x000522a7(%rip),%rax
0000000000031e31	popq	%rbx
0000000000031e32	popq	%r14
0000000000031e34	popq	%rbp
0000000000031e35	jmp	*%rax
-[PBXGDB_CommandSequence timedOut]:
0000000000031e37	pushq	%rbp
0000000000031e38	movq	%rsp,%rbp
0000000000031e3b	movq	0x0007c9ce(%rip),%rax
0000000000031e42	movb	$0x01,(%rdi,%rax)
0000000000031e46	movq	0x00073b7b(%rip),%rsi
0000000000031e4d	movq	0x00072ce4(%rip),%rdx
0000000000031e54	popq	%rbp
0000000000031e55	jmp	*0x0005227d(%rip)
-[PBXGDB_CommandSequence handleErrorForMICommand:]:
0000000000031e5b	pushq	%rbp
0000000000031e5c	movq	%rsp,%rbp
0000000000031e5f	pushq	%r15
0000000000031e61	pushq	%r14
0000000000031e63	pushq	%r12
0000000000031e65	pushq	%rbx
0000000000031e66	movq	%rdx,%r15
0000000000031e69	movq	%rdi,%r14
0000000000031e6c	movq	0x00073a0d(%rip),%rsi
0000000000031e73	movq	0x0005225e(%rip),%rbx
0000000000031e7a	movq	%r15,%rdi
0000000000031e7d	call	*%rbx
0000000000031e7f	movq	%rax,%r12
0000000000031e82	movq	0x000739ff(%rip),%rsi
0000000000031e89	movq	%r15,%rdi
0000000000031e8c	call	*%rbx
0000000000031e8e	movq	%rax,%rbx
0000000000031e91	testq	%rbx,%rbx
0000000000031e94	je	0x00031ecc
0000000000031e96	testq	%r12,%r12
0000000000031e99	je	0x00031ecc
0000000000031e9b	leaq	0x000764ce(%rip),%rsi
0000000000031ea2	movq	%r12,%rdi
0000000000031ea5	movq	%rbx,%rdx
0000000000031ea8	call	*0x000764c2(%rip)
0000000000031eae	cmpb	$0x01,%al
0000000000031eb0	jne	0x00031ecc
0000000000031eb2	movq	0x000739d7(%rip),%rsi
0000000000031eb9	movq	%r12,%rdi
0000000000031ebc	movq	%rbx,%rdx
0000000000031ebf	movq	%r15,%rcx
0000000000031ec2	call	*0x00052210(%rip)
0000000000031ec8	movb	$0x01,%al
0000000000031eca	jmp	0x00031ede
0000000000031ecc	movq	0x00072c65(%rip),%rsi
0000000000031ed3	movq	%r14,%rdi
0000000000031ed6	call	*0x000521fc(%rip)
0000000000031edc	xorb	%al,%al
0000000000031ede	movzbl	%al,%eax
0000000000031ee1	popq	%rbx
0000000000031ee2	popq	%r12
0000000000031ee4	popq	%r14
0000000000031ee6	popq	%r15
0000000000031ee8	popq	%rbp
0000000000031ee9	ret
-[PBXGDB_CommandSequence execute]:
0000000000031eea	pushq	%rbp
0000000000031eeb	movq	%rsp,%rbp
0000000000031eee	subq	$0x30,%rsp
0000000000031ef2	movq	%rdi,0xf8(%rbp)
0000000000031ef6	movq	%rsi,0xf0(%rbp)
0000000000031efa	leaq	0x0007642f(%rip),%rsi
0000000000031f01	call	*0x00076429(%rip)
0000000000031f07	movq	%rax,%rdi
0000000000031f0a	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000031f0f	leaq	0xf8(%rbp),%rdi
0000000000031f13	leaq	0xf0(%rbp),%rsi
0000000000031f17	leaq	0x0002bf71(%rip),%rcx
0000000000031f1e	leaq	0x0007ecd3(%rip),%r9
0000000000031f25	leaq	0x0002bf41(%rip),%rdx
0000000000031f2c	leaq	0x0007d905(%rip),%r8
0000000000031f33	leaq	0x0002b398(%rip),%r10
0000000000031f3a	movq	%r10,0x18(%rsp)
0000000000031f3f	movq	%r8,0x10(%rsp)
0000000000031f44	movq	%rax,0x08(%rsp)
0000000000031f49	movq	%rdx,(%rsp)
0000000000031f4d	movl	$0x00000062,%r8d
0000000000031f53	xorb	%al,%al
0000000000031f55	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000031f5a	addq	$0x30,%rsp
0000000000031f5e	popq	%rbp
0000000000031f5f	ret
-[PBXGDB_CommandSequence _checkSafety:]:
0000000000031f60	pushq	%rbp
0000000000031f61	movq	%rsp,%rbp
0000000000031f64	pushq	%r14
0000000000031f66	pushq	%rbx
0000000000031f67	movq	%rdx,%r14
0000000000031f6a	movq	%rdi,%rbx
0000000000031f6d	movq	0x00072b14(%rip),%rsi
0000000000031f74	movq	%r14,%rdi
0000000000031f77	movq	%rbx,%rdx
0000000000031f7a	call	*0x00052158(%rip)
0000000000031f80	movq	0x00072b11(%rip),%rsi
0000000000031f87	movq	0x00073a92(%rip),%rdx
0000000000031f8e	movq	%r14,%rdi
0000000000031f91	call	*0x00052141(%rip)
0000000000031f97	movq	0x00072b1a(%rip),%rsi
0000000000031f9e	movq	%rbx,%rdi
0000000000031fa1	call	*0x00052131(%rip)
0000000000031fa7	movq	0x00072b12(%rip),%rsi
0000000000031fae	movq	%rax,%rdi
0000000000031fb1	call	*0x00052121(%rip)
0000000000031fb7	movq	0x00072b0a(%rip),%rsi
0000000000031fbe	movq	%rax,%rdi
0000000000031fc1	movq	%r14,%rdx
0000000000031fc4	movq	0x0005210d(%rip),%rax
0000000000031fcb	popq	%rbx
0000000000031fcc	popq	%r14
0000000000031fce	popq	%rbp
0000000000031fcf	jmp	*%rax
-[PBXGDB_CommandSequence safetyCheckFailed]:
0000000000031fd1	pushq	%rbp
0000000000031fd2	movq	%rsp,%rbp
0000000000031fd5	movq	0x00072b5c(%rip),%rsi
0000000000031fdc	popq	%rbp
0000000000031fdd	jmp	*0x000520f5(%rip)
-[PBXGDB_CommandSequence _cleanUpSchedulerState:]:
0000000000031fe3	pushq	%rbp
0000000000031fe4	movq	%rsp,%rbp
0000000000031fe7	pushq	%r15
0000000000031fe9	pushq	%r14
0000000000031feb	pushq	%rbx
0000000000031fec	pushq	%rax
0000000000031fed	movq	%rdx,%r14
0000000000031ff0	movq	%rdi,%r15
0000000000031ff3	cmpb	$0x00,0x00085696(%rip)
0000000000031ffa	je	0x000320a6
0000000000032000	movq	0x0007c821(%rip),%rax
0000000000032007	cmpb	$0x00,(%r15,%rax)
000000000003200c	jne	0x000320a6
0000000000032012	movb	$0x01,(%r15,%rax)
0000000000032017	movq	0x00072a62(%rip),%rsi
000000000003201e	movq	0x000766eb(%rip),%rdi
0000000000032025	call	*0x000520ad(%rip)
000000000003202b	movq	%rax,%rbx
000000000003202e	movq	0x000739f3(%rip),%rsi
0000000000032035	movq	%rbx,%rdi
0000000000032038	xorl	%edx,%edx
000000000003203a	call	*0x00052098(%rip)
0000000000032040	movq	0x00072a41(%rip),%rsi
0000000000032047	movq	%rbx,%rdi
000000000003204a	movq	%r15,%rdx
000000000003204d	call	*0x00052085(%rip)
0000000000032053	movq	0x00072a3e(%rip),%rsi
000000000003205a	movq	%rbx,%rdi
000000000003205d	movq	%r14,%rdx
0000000000032060	call	*0x00052072(%rip)
0000000000032066	movq	0x00072a4b(%rip),%rsi
000000000003206d	movq	%r15,%rdi
0000000000032070	call	*0x00052062(%rip)
0000000000032076	movq	0x00072a43(%rip),%rsi
000000000003207d	movq	%rax,%rdi
0000000000032080	call	*0x00052052(%rip)
0000000000032086	movq	0x00072a3b(%rip),%rsi
000000000003208d	movq	%rax,%rdi
0000000000032090	movq	%rbx,%rdx
0000000000032093	movq	0x0005203e(%rip),%rax
000000000003209a	addq	$0x08,%rsp
000000000003209e	popq	%rbx
000000000003209f	popq	%r14
00000000000320a1	popq	%r15
00000000000320a3	popq	%rbp
00000000000320a4	jmp	*%rax
00000000000320a6	movq	0x000739b3(%rip),%rsi
00000000000320ad	movq	%r15,%rdi
00000000000320b0	movq	%r14,%rdx
00000000000320b3	addq	$0x08,%rsp
00000000000320b7	popq	%rbx
00000000000320b8	popq	%r14
00000000000320ba	popq	%r15
00000000000320bc	popq	%rbp
00000000000320bd	jmp	*0x00052015(%rip)
-[PBXGDB_CommandSequence _safteyCheckThreadID]:
00000000000320c3	pushq	%rbp
00000000000320c4	movq	%rsp,%rbp
00000000000320c7	movq	$0xffffffff,%rax
00000000000320ce	popq	%rbp
00000000000320cf	ret
-[PBXGDB_CommandSequence foundationDebugSession]:
00000000000320d0	pushq	%rbp
00000000000320d1	movq	%rsp,%rbp
00000000000320d4	movq	0x000729dd(%rip),%rsi
00000000000320db	call	*0x00051ff7(%rip)
00000000000320e1	movq	0x00072c00(%rip),%rsi
00000000000320e8	movq	%rax,%rdi
00000000000320eb	call	*0x00051fe7(%rip)
00000000000320f1	movq	0x00072bf8(%rip),%rsi
00000000000320f8	movq	%rax,%rdi
00000000000320fb	movq	0x00051fd6(%rip),%rax
0000000000032102	popq	%rbp
0000000000032103	jmp	*%rax
-[PBXGDB_CommandSequence setCanPurgeTransientSequences:]:
0000000000032105	pushq	%rbp
0000000000032106	movq	%rsp,%rbp
0000000000032109	movq	0x0007c728(%rip),%rax
0000000000032110	movb	%dl,(%rdi,%rax)
0000000000032113	popq	%rbp
0000000000032114	ret
-[PBXGDB_GenericMICommandSequence dealloc]:
0000000000032115	pushq	%rbp
0000000000032116	movq	%rsp,%rbp
0000000000032119	movq	0x00072f08(%rip),%rsi
0000000000032120	xorl	%edx,%edx
0000000000032122	popq	%rbp
0000000000032123	jmp	*0x00051faf(%rip)
-[PBXGDB_GenericMICommandSequence miCommand]:
0000000000032129	pushq	%rbp
000000000003212a	movq	%rsp,%rbp
000000000003212d	movq	0x0007c70c(%rip),%rax
0000000000032134	movq	(%rdi,%rax),%rax
0000000000032138	popq	%rbp
0000000000032139	ret
-[PBXGDB_ConsoleSequence _gotCompletion:]:
000000000003213a	pushq	%rbp
000000000003213b	movq	%rsp,%rbp
000000000003213e	pushq	%r15
0000000000032140	pushq	%r14
0000000000032142	pushq	%r13
0000000000032144	pushq	%r12
0000000000032146	pushq	%rbx
0000000000032147	subq	$0x000000d8,%rsp
000000000003214e	movq	%rdi,0xffffff08(%rbp)
0000000000032155	movq	0x00051f44(%rip),%rax
000000000003215c	movq	(%rax),%rax
000000000003215f	movq	%rax,0xd0(%rbp)
0000000000032163	movq	0x00072966(%rip),%rsi
000000000003216a	movq	0x00051f67(%rip),%rbx
0000000000032171	movq	%rdx,%rdi
0000000000032174	call	*%rbx
0000000000032176	leaq	0x0007eb1b(%rip),%rdx
000000000003217d	movq	0x00072954(%rip),%rsi
0000000000032184	movq	%rax,%rdi
0000000000032187	call	*%rbx
0000000000032189	movq	0x00072950(%rip),%rsi
0000000000032190	movq	%rax,%rdi
0000000000032193	call	*%rbx
0000000000032195	movq	0x0007294c(%rip),%rsi
000000000003219c	movq	%rax,%rdi
000000000003219f	call	*%rbx
00000000000321a1	movq	0x00072948(%rip),%rsi
00000000000321a8	movq	%rax,%rdi
00000000000321ab	call	*%rbx
00000000000321ad	movq	%rax,%r12
00000000000321b0	movq	0x00073279(%rip),%rsi
00000000000321b7	movq	0x000762a2(%rip),%rdi
00000000000321be	call	*%rbx
00000000000321c0	movq	%rax,%r15
00000000000321c3	leaq	0x000761b6(%rip),%rsi
00000000000321ca	leaq	0x90(%rbp),%rdx
00000000000321ce	leaq	0xffffff10(%rbp),%rcx
00000000000321d5	xorps	%xmm0,%xmm0
00000000000321d8	movaps	%xmm0,0xc0(%rbp)
00000000000321dc	movaps	%xmm0,0xb0(%rbp)
00000000000321e0	movaps	%xmm0,0xa0(%rbp)
00000000000321e4	movaps	%xmm0,0x90(%rbp)
00000000000321e8	movq	%r12,%rdi
00000000000321eb	movl	$0x00000010,%r8d
00000000000321f1	call	*0x00076189(%rip)
00000000000321f7	movq	%rax,%rbx
00000000000321fa	testq	%rbx,%rbx
00000000000321fd	je	0x00032273
00000000000321ff	movq	0xa0(%rbp),%rax
0000000000032203	movq	(%rax),%r13
0000000000032206	xorl	%r14d,%r14d
0000000000032209	movq	0xa0(%rbp),%rax
000000000003220d	cmpq	%r13,(%rax)
0000000000032210	je	0x0003221a
0000000000032212	movq	%r12,%rdi
0000000000032215	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
000000000003221a	movq	0x98(%rbp),%rax
000000000003221e	movq	(%rax,%r14,8),%rdi
0000000000032222	movq	0x000728df(%rip),%rsi
0000000000032229	call	*0x00051ea9(%rip)
000000000003222f	movq	%r15,%rdi
0000000000032232	leaq	0x000760c7(%rip),%rsi
0000000000032239	movq	%rax,%rdx
000000000003223c	call	*0x000760be(%rip)
0000000000032242	incq	%r14
0000000000032245	cmpq	%rbx,%r14
0000000000032248	jb	0x00032209
000000000003224a	movq	%r12,%rdi
000000000003224d	leaq	0x0007612c(%rip),%rsi
0000000000032254	leaq	0x90(%rbp),%rdx
0000000000032258	leaq	0xffffff10(%rbp),%rcx
000000000003225f	movl	$0x00000010,%r8d
0000000000032265	call	*0x00076115(%rip)
000000000003226b	movq	%rax,%rbx
000000000003226e	testq	%rbx,%rbx
0000000000032271	jne	0x00032206
0000000000032273	movq	0x0007c5ce(%rip),%rax
000000000003227a	movq	0xffffff08(%rbp),%rbx
0000000000032281	movq	(%rbx,%rax),%rax
0000000000032285	movq	%rax,%rdi
0000000000032288	movq	%r15,%rsi
000000000003228b	call	*0x10(%rax)
000000000003228e	movq	0x000728a3(%rip),%rsi
0000000000032295	movq	%rbx,%rdi
0000000000032298	call	*0x00051e3a(%rip)
000000000003229e	movq	0x00051dfb(%rip),%rax
00000000000322a5	movq	(%rax),%rax
00000000000322a8	cmpq	0xd0(%rbp),%rax
00000000000322ac	jne	0x000322c0
00000000000322ae	addq	$0x000000d8,%rsp
00000000000322b5	popq	%rbx
00000000000322b6	popq	%r12
00000000000322b8	popq	%r13
00000000000322ba	popq	%r14
00000000000322bc	popq	%r15
00000000000322be	popq	%rbp
00000000000322bf	ret
00000000000322c0	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
-[PBXGDB_ConsoleSequence setStringToComplete:resultHandler:]:
00000000000322c5	pushq	%rbp
00000000000322c6	movq	%rsp,%rbp
00000000000322c9	pushq	%r14
00000000000322cb	pushq	%rbx
00000000000322cc	movq	%rcx,%r14
00000000000322cf	movq	%rdx,%rax
00000000000322d2	movq	%rdi,%rbx
00000000000322d5	movq	0x0007c574(%rip),%rdx
00000000000322dc	movq	%rax,%rdi
00000000000322df	movq	%rbx,%rsi
00000000000322e2	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000322e7	movq	0x0007278a(%rip),%rsi
00000000000322ee	movq	%r14,%rdi
00000000000322f1	call	*0x00051de1(%rip)
00000000000322f7	movq	0x0007c54a(%rip),%rdx
00000000000322fe	movq	%rax,%rdi
0000000000032301	movq	%rbx,%rsi
0000000000032304	popq	%rbx
0000000000032305	popq	%r14
0000000000032307	popq	%rbp
0000000000032308	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_ConsoleSequence execute]:
000000000003230d	pushq	%rbp
000000000003230e	movq	%rsp,%rbp
0000000000032311	pushq	%r14
0000000000032313	pushq	%rbx
0000000000032314	movq	%rdi,%rbx
0000000000032317	movq	0x0007c532(%rip),%rax
000000000003231e	movq	(%rbx,%rax),%rdx
0000000000032322	movq	0x0007375f(%rip),%rsi
0000000000032329	movq	0x000763e8(%rip),%rdi
0000000000032330	call	*0x00051da2(%rip)
0000000000032336	movq	%rax,%r14
0000000000032339	movq	0x00072748(%rip),%rsi
0000000000032340	movq	%r14,%rdi
0000000000032343	movq	%rbx,%rdx
0000000000032346	call	*0x00051d8c(%rip)
000000000003234c	movq	0x00072745(%rip),%rsi
0000000000032353	movq	0x00073736(%rip),%rdx
000000000003235a	movq	%r14,%rdi
000000000003235d	call	*0x00051d75(%rip)
0000000000032363	movq	0x0007274e(%rip),%rsi
000000000003236a	movq	%rbx,%rdi
000000000003236d	call	*0x00051d65(%rip)
0000000000032373	movq	0x00072746(%rip),%rsi
000000000003237a	movq	%rax,%rdi
000000000003237d	call	*0x00051d55(%rip)
0000000000032383	movq	0x0007273e(%rip),%rsi
000000000003238a	movq	%rax,%rdi
000000000003238d	movq	%r14,%rdx
0000000000032390	movq	0x00051d41(%rip),%rax
0000000000032397	popq	%rbx
0000000000032398	popq	%r14
000000000003239a	popq	%rbp
000000000003239b	jmp	*%rax
-[PBXGDB_ContainingDataValue2 debuggingDidEnd:]:
000000000003239d	pushq	%rbp
000000000003239e	movq	%rsp,%rbp
00000000000323a1	pushq	%r15
00000000000323a3	pushq	%r14
00000000000323a5	pushq	%r13
00000000000323a7	pushq	%r12
00000000000323a9	pushq	%rbx
00000000000323aa	subq	$0x28,%rsp
00000000000323ae	movq	%rdi,%r14
00000000000323b1	movq	0x00072700(%rip),%rsi
00000000000323b8	call	*0x00051d1a(%rip)
00000000000323be	movq	%rax,%rbx
00000000000323c1	testq	%rbx,%rbx
00000000000323c4	je	0x0003253b
00000000000323ca	movq	0x000736c7(%rip),%rsi
00000000000323d1	movq	0x00051d00(%rip),%r15
00000000000323d8	movq	%r14,%rdi
00000000000323db	call	*%r15
00000000000323de	movq	0x0007270b(%rip),%rsi
00000000000323e5	movq	%rax,%rdi
00000000000323e8	call	*%r15
00000000000323eb	movq	%rax,%r14
00000000000323ee	movq	%r14,0xb8(%rbp)
00000000000323f2	movq	0x0007311f(%rip),%rsi
00000000000323f9	movq	%rbx,%rdi
00000000000323fc	call	*%r15
00000000000323ff	movq	%rax,0xd0(%rbp)
0000000000032403	movq	0x0007369e(%rip),%rsi
000000000003240a	movq	%rbx,%rdi
000000000003240d	call	*%r15
0000000000032410	movq	%rax,0xc8(%rbp)
0000000000032414	movq	0x00073125(%rip),%rsi
000000000003241b	movq	%rbx,%rdi
000000000003241e	call	*%r15
0000000000032421	movq	%rax,0xc0(%rbp)
0000000000032425	movq	0x00073684(%rip),%rsi
000000000003242c	movq	%rbx,%rdi
000000000003242f	call	*%r15
0000000000032432	movq	%rax,%rbx
0000000000032435	movq	0x000726bc(%rip),%rsi
000000000003243c	movq	%r14,%rdi
000000000003243f	call	*%r15
0000000000032442	movq	%rax,%r14
0000000000032445	testq	%r14,%r14
0000000000032448	je	0x0003253b
000000000003244e	movq	0x00072f63(%rip),%r15
0000000000032455	movq	0x00051c7c(%rip),%r13
000000000003245c	movq	%r14,%rdi
000000000003245f	movq	0x000730ba(%rip),%rsi
0000000000032466	call	*%r13
0000000000032469	movq	%rax,%r12
000000000003246c	movq	%r14,%rdi
000000000003246f	movq	0x00073002(%rip),%rsi
0000000000032476	call	*%r13
0000000000032479	testq	%rax,%rax
000000000003247c	je	0x00032503
0000000000032482	cmpq	0xd0(%rbp),%r14
0000000000032486	je	0x00032503
0000000000032488	cmpq	0xc8(%rbp),%r14
000000000003248c	je	0x00032503
000000000003248e	movq	0xc0(%rbp),%rdi
0000000000032492	movq	%r15,%rsi
0000000000032495	movq	%r14,%rdx
0000000000032498	call	*0x00051c3a(%rip)
000000000003249e	testb	%al,%al
00000000000324a0	jne	0x00032503
00000000000324a2	movq	%rbx,%rdi
00000000000324a5	movq	%r15,%rsi
00000000000324a8	movq	%r14,%rdx
00000000000324ab	call	*0x00051c27(%rip)
00000000000324b1	testb	%al,%al
00000000000324b3	jne	0x00032503
00000000000324b5	movq	0xc0(%rbp),%rdi
00000000000324b9	movq	%r15,%rsi
00000000000324bc	movq	%r12,%rdx
00000000000324bf	call	*0x00051c13(%rip)
00000000000324c5	testb	%al,%al
00000000000324c7	jne	0x00032503
00000000000324c9	movq	%rbx,%rdi
00000000000324cc	movq	%r15,%rsi
00000000000324cf	movq	%r12,%rdx
00000000000324d2	call	*0x00051c00(%rip)
00000000000324d8	testb	%al,%al
00000000000324da	jne	0x00032503
00000000000324dc	cmpq	0xd0(%rbp),%r12
00000000000324e0	je	0x00032503
00000000000324e2	cmpq	0xc8(%rbp),%r12
00000000000324e6	je	0x00032503
00000000000324e8	movq	%r14,%rdi
00000000000324eb	leaq	0x00075e7e(%rip),%rsi
00000000000324f2	movq	0x000735a7(%rip),%rdx
00000000000324f9	call	*0x00075e71(%rip)
00000000000324ff	cmpb	$0x01,%al
0000000000032501	je	0x00032522
0000000000032503	movq	0xb8(%rbp),%rdi
0000000000032507	movq	0x000725ea(%rip),%rsi
000000000003250e	call	*0x00051bc4(%rip)
0000000000032514	movq	%rax,%r14
0000000000032517	testq	%r14,%r14
000000000003251a	jne	0x0003245c
0000000000032520	jmp	0x0003253b
0000000000032522	movq	%r14,%rdi
0000000000032525	movq	0x00073534(%rip),%rsi
000000000003252c	movq	0x0007356d(%rip),%rdx
0000000000032533	call	*0x00051b9f(%rip)
0000000000032539	jmp	0x00032503
000000000003253b	addq	$0x28,%rsp
000000000003253f	popq	%rbx
0000000000032540	popq	%r12
0000000000032542	popq	%r13
0000000000032544	popq	%r14
0000000000032546	popq	%r15
0000000000032548	popq	%rbp
0000000000032549	ret
-[PBXGDB_ContainingDataValue2 dataValueForVarObjName:]:
000000000003254a	pushq	%rbp
000000000003254b	movq	%rsp,%rbp
000000000003254e	movq	0x0007c303(%rip),%rax
0000000000032555	movq	(%rdi,%rax),%rdi
0000000000032559	movq	0x00075df0(%rip),%rax
0000000000032560	leaq	0x00075de9(%rip),%rsi
0000000000032567	popq	%rbp
0000000000032568	jmp	*%rax
-[PBXGDB_ContextFrameDataValue requestUpdateValues]:
000000000003256a	pushq	%rbp
000000000003256b	movq	%rsp,%rbp
000000000003256e	pushq	%r15
0000000000032570	pushq	%r14
0000000000032572	pushq	%r13
0000000000032574	pushq	%r12
0000000000032576	pushq	%rbx
0000000000032577	subq	$0x18,%rsp
000000000003257b	movq	%rdi,%r12
000000000003257e	movq	0x00072fcb(%rip),%rsi
0000000000032585	call	*0x00051b4d(%rip)
000000000003258b	movq	%rax,%r14
000000000003258e	movq	%r12,0xc8(%rbp)
0000000000032592	movq	0x000767af(%rip),%rax
0000000000032599	movq	%rax,0xd0(%rbp)
000000000003259d	leaq	0xc8(%rbp),%rdi
00000000000325a1	movq	0x00073558(%rip),%rsi
00000000000325a8	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000325ad	testq	%r14,%r14
00000000000325b0	je	0x000326cc
00000000000325b6	movq	0x00072d0b(%rip),%rsi
00000000000325bd	movq	0x00076034(%rip),%rdi
00000000000325c4	call	*0x00051b0e(%rip)
00000000000325ca	cmpq	%rax,%r14
00000000000325cd	je	0x0003265f
00000000000325d3	movq	0x00072cbe(%rip),%rsi
00000000000325da	movq	0x00051af7(%rip),%r13
00000000000325e1	movq	%r14,%rdi
00000000000325e4	call	*%r13
00000000000325e7	movq	%rax,%rbx
00000000000325ea	movq	0x00072aff(%rip),%rsi
00000000000325f1	movq	%rbx,%rdi
00000000000325f4	call	*%r13
00000000000325f7	movq	%rax,%r15
00000000000325fa	movq	0x00072c67(%rip),%rsi
0000000000032601	movq	%rbx,%rdi
0000000000032604	call	*%r13
0000000000032607	movq	0x00072c62(%rip),%rsi
000000000003260e	movq	%rax,%rdi
0000000000032611	movq	%r14,%rdx
0000000000032614	call	*%r13
0000000000032617	leaq	0x0007c2d2(%rip),%rcx
000000000003261e	leaq	0x0007c2c3(%rip),%rdx
0000000000032625	movq	(%rdx),%rdx
0000000000032628	movq	%r15,(%r12,%rdx)
000000000003262c	movq	(%rcx),%rcx
000000000003262f	movq	%rax,(%r12,%rcx)
0000000000032633	movq	0x0007247e(%rip),%rsi
000000000003263a	movq	%r12,%rdi
000000000003263d	call	*%r13
0000000000032640	movq	0x00072e01(%rip),%rsi
0000000000032647	movq	%rax,%rdi
000000000003264a	call	*%r13
000000000003264d	movq	0x00072f0c(%rip),%rsi
0000000000032654	movq	%rax,%rdi
0000000000032657	movq	%r12,%rdx
000000000003265a	call	*%r13
000000000003265d	jmp	0x000326dc
000000000003265f	movq	0x00072c62(%rip),%rsi
0000000000032666	movq	0x00075f8b(%rip),%rdi
000000000003266d	call	*0x00051a65(%rip)
0000000000032673	cmpq	%rax,%r14
0000000000032676	jne	0x000326cc
0000000000032678	leaq	0x0007c269(%rip),%rax
000000000003267f	movq	(%rax),%rax
0000000000032682	movq	$0xffffffff,(%r12,%rax)
000000000003268a	leaq	0x0007c25f(%rip),%rax
0000000000032691	movq	(%rax),%rax
0000000000032694	movq	$0xffffffff,(%r12,%rax)
000000000003269c	movq	0x00072415(%rip),%rsi
00000000000326a3	movq	0x00051a2e(%rip),%rbx
00000000000326aa	movq	%r12,%rdi
00000000000326ad	call	*%rbx
00000000000326af	movq	0x00072d92(%rip),%rsi
00000000000326b6	movq	%rax,%rdi
00000000000326b9	call	*%rbx
00000000000326bb	movq	0x00072e9e(%rip),%rsi
00000000000326c2	movq	%rax,%rdi
00000000000326c5	movq	%r12,%rdx
00000000000326c8	call	*%rbx
00000000000326ca	jmp	0x000326dc
00000000000326cc	movq	0x0007301d(%rip),%rsi
00000000000326d3	movq	%r12,%rdi
00000000000326d6	call	*0x000519fc(%rip)
00000000000326dc	addq	$0x18,%rsp
00000000000326e0	popq	%rbx
00000000000326e1	popq	%r12
00000000000326e3	popq	%r13
00000000000326e5	popq	%r14
00000000000326e7	popq	%r15
00000000000326e9	popq	%rbp
00000000000326ea	ret
-[PBXGDB_RunControlSequence handleErrorForMICommand:]:
00000000000326eb	pushq	%rbp
00000000000326ec	movq	%rsp,%rbp
00000000000326ef	pushq	%r15
00000000000326f1	pushq	%r14
00000000000326f3	pushq	%r12
00000000000326f5	pushq	%rbx
00000000000326f6	movq	%rdi,%r14
00000000000326f9	movq	0x000723d0(%rip),%rsi
0000000000032700	movq	0x000519d1(%rip),%r12
0000000000032707	movq	%rdx,%rdi
000000000003270a	call	*%r12
000000000003270d	movq	0x000723c4(%rip),%rsi
0000000000032714	leaq	0x0007e5dd(%rip),%rdx
000000000003271b	movq	%rax,%rdi
000000000003271e	call	*%r12
0000000000032721	movq	0x000723e0(%rip),%rsi
0000000000032728	movq	%rax,%rdi
000000000003272b	call	*%r12
000000000003272e	movq	%rax,%r15
0000000000032731	movq	0x00072380(%rip),%rsi
0000000000032738	movq	%r14,%rdi
000000000003273b	call	*%r12
000000000003273e	movq	0x000725a3(%rip),%rsi
0000000000032745	movq	%rax,%rdi
0000000000032748	call	*%r12
000000000003274b	movq	0x0007259e(%rip),%rsi
0000000000032752	movq	%rax,%rdi
0000000000032755	call	*%r12
0000000000032758	movq	0x00072649(%rip),%rsi
000000000003275f	movq	%rax,%rdi
0000000000032762	call	*%r12
0000000000032765	movq	%rax,%rbx
0000000000032768	movq	0x000733d1(%rip),%rsi
000000000003276f	movq	0x00075fba(%rip),%rdi
0000000000032776	movq	%r15,%rdx
0000000000032779	movq	%rbx,%rcx
000000000003277c	call	*%r12
000000000003277f	movq	0x000733c2(%rip),%rsi
0000000000032786	movq	%rbx,%rdi
0000000000032789	movq	%rax,%rdx
000000000003278c	call	*%r12
000000000003278f	movq	0x0007c0ea(%rip),%rax
0000000000032796	cmpb	$0x00,(%r14,%rax)
000000000003279b	sete	%al
000000000003279e	movzbl	%al,%eax
00000000000327a1	popq	%rbx
00000000000327a2	popq	%r12
00000000000327a4	popq	%r14
00000000000327a6	popq	%r15
00000000000327a8	popq	%rbp
00000000000327a9	ret
-[PBXGDB_StepControlSequence stepSequenceType]:
00000000000327aa	pushq	%rbp
00000000000327ab	movq	%rsp,%rbp
00000000000327ae	movq	0x0007c0d3(%rip),%rax
00000000000327b5	movl	(%rdi,%rax),%eax
00000000000327b8	popq	%rbp
00000000000327b9	ret
-[PBXGDB_StepControlSequence setStepUntilLineNumber:]:
00000000000327ba	pushq	%rbp
00000000000327bb	movq	%rsp,%rbp
00000000000327be	movq	0x0007c0cb(%rip),%rax
00000000000327c5	movq	%rdx,(%rdi,%rax)
00000000000327c9	popq	%rbp
00000000000327ca	ret
-[PBXGDB_StepControlSequence untilLineNumber]:
00000000000327cb	pushq	%rbp
00000000000327cc	movq	%rsp,%rbp
00000000000327cf	movq	0x0007c0ba(%rip),%rax
00000000000327d6	movq	(%rdi,%rax),%rax
00000000000327da	popq	%rbp
00000000000327db	ret
-[PBXGDB_ContinueControlSequence handleErrorForMICommand:]:
00000000000327dc	pushq	%rbp
00000000000327dd	movq	%rsp,%rbp
00000000000327e0	pushq	%r14
00000000000327e2	pushq	%rbx
00000000000327e3	movq	%rdi,%rbx
00000000000327e6	movq	0x000722cb(%rip),%rsi
00000000000327ed	movq	0x000518e4(%rip),%r14
00000000000327f4	call	*%r14
00000000000327f7	movq	0x00072bda(%rip),%rsi
00000000000327fe	movq	%rax,%rdi
0000000000032801	call	*%r14
0000000000032804	movq	0x0007232d(%rip),%rsi
000000000003280b	movq	%rbx,%rdi
000000000003280e	call	*%r14
0000000000032811	movl	$0x00000001,%eax
0000000000032816	popq	%rbx
0000000000032817	popq	%r14
0000000000032819	popq	%rbp
000000000003281a	ret
-[PBXGDB_ContinueControlSequence _resultAllThreadsRunning:]:
000000000003281b	pushq	%rbp
000000000003281c	movq	%rsp,%rbp
000000000003281f	pushq	%r15
0000000000032821	pushq	%r14
0000000000032823	pushq	%rbx
0000000000032824	pushq	%rax
0000000000032825	movq	%rdi,%rbx
0000000000032828	movq	0x00072289(%rip),%rsi
000000000003282f	movq	0x000518a2(%rip),%r15
0000000000032836	call	*%r15
0000000000032839	movq	%rax,%r14
000000000003283c	movq	0x00073335(%rip),%rsi
0000000000032843	movq	0x00075e8e(%rip),%rdi
000000000003284a	call	*%r15
000000000003284d	movq	0x000730d4(%rip),%rsi
0000000000032854	movq	%r14,%rdi
0000000000032857	movq	%rax,%rdx
000000000003285a	xorl	%ecx,%ecx
000000000003285c	call	*%r15
000000000003285f	movq	0x00072952(%rip),%rsi
0000000000032866	movq	%rbx,%rdi
0000000000032869	call	*%r15
000000000003286c	movq	0x0007330d(%rip),%rsi
0000000000032873	movq	%rax,%rdi
0000000000032876	call	*%r15
0000000000032879	movq	0x00072238(%rip),%rsi
0000000000032880	movq	%rbx,%rdi
0000000000032883	call	*%r15
0000000000032886	movq	0x0007310b(%rip),%rsi
000000000003288d	movq	%rax,%rdi
0000000000032890	call	*%r15
0000000000032893	testb	%al,%al
0000000000032895	jne	0x000328ec
0000000000032897	movq	0x0007221a(%rip),%rsi
000000000003289e	movq	0x00051833(%rip),%r14
00000000000328a5	movq	%rbx,%rdi
00000000000328a8	call	*%r14
00000000000328ab	movq	0x000724ae(%rip),%rsi
00000000000328b2	movq	%rax,%rdi
00000000000328b5	call	*%r14
00000000000328b8	movq	0x000724a9(%rip),%rsi
00000000000328bf	movq	%rax,%rdi
00000000000328c2	call	*%r14
00000000000328c5	testb	%al,%al
00000000000328c7	jne	0x000328ec
00000000000328c9	movq	0x000721e8(%rip),%rsi
00000000000328d0	movq	0x00051801(%rip),%r14
00000000000328d7	movq	%rbx,%rdi
00000000000328da	call	*%r14
00000000000328dd	movq	0x000726bc(%rip),%rsi
00000000000328e4	movq	%rax,%rdi
00000000000328e7	xorl	%edx,%edx
00000000000328e9	call	*%r14
00000000000328ec	movq	0x00072245(%rip),%rsi
00000000000328f3	movq	%rbx,%rdi
00000000000328f6	addq	$0x08,%rsp
00000000000328fa	popq	%rbx
00000000000328fb	popq	%r14
00000000000328fd	popq	%r15
00000000000328ff	popq	%rbp
0000000000032900	jmp	*0x000517d2(%rip)
-[PBXGDB_ContinueControlSequence execute]:
0000000000032906	pushq	%rbp
0000000000032907	movq	%rsp,%rbp
000000000003290a	pushq	%r14
000000000003290c	pushq	%rbx
000000000003290d	movq	%rdi,%rbx
0000000000032910	movq	0x00072169(%rip),%rsi
0000000000032917	movq	0x00075e42(%rip),%rdi
000000000003291e	call	*0x000517b4(%rip)
0000000000032924	movq	%rax,%r14
0000000000032927	movq	0x0007218a(%rip),%rsi
000000000003292e	movq	%rbx,%rdi
0000000000032931	call	*0x000517a1(%rip)
0000000000032937	leaq	0x0007e3da(%rip),%rdx
000000000003293e	movq	0x000731cb(%rip),%rsi
0000000000032945	movq	%rax,%rdi
0000000000032948	call	*0x0005178a(%rip)
000000000003294e	movq	0x00072133(%rip),%rsi
0000000000032955	movq	%r14,%rdi
0000000000032958	movq	%rbx,%rdx
000000000003295b	call	*0x00051777(%rip)
0000000000032961	movq	0x000731f0(%rip),%rsi
0000000000032968	movq	%rbx,%rdi
000000000003296b	call	*0x00051767(%rip)
0000000000032971	movq	0x00072130(%rip),%rsi
0000000000032978	movq	%r14,%rdi
000000000003297b	movq	%rax,%rdx
000000000003297e	call	*0x00051754(%rip)
0000000000032984	movq	0x00073195(%rip),%rsi
000000000003298b	movq	0x000731f6(%rip),%rdx
0000000000032992	movq	%r14,%rdi
0000000000032995	call	*0x0005173d(%rip)
000000000003299b	movq	0x00072116(%rip),%rsi
00000000000329a2	movq	%rbx,%rdi
00000000000329a5	call	*0x0005172d(%rip)
00000000000329ab	movq	0x0007210e(%rip),%rsi
00000000000329b2	movq	%rax,%rdi
00000000000329b5	call	*0x0005171d(%rip)
00000000000329bb	movq	0x00072d96(%rip),%rsi
00000000000329c2	movq	%rax,%rdi
00000000000329c5	movq	%r14,%rdx
00000000000329c8	movq	0x00051709(%rip),%rax
00000000000329cf	popq	%rbx
00000000000329d0	popq	%r14
00000000000329d2	popq	%rbp
00000000000329d3	jmp	*%rax
-[PBXGDB_ResumeControlSequence execute]:
00000000000329d5	pushq	%rbp
00000000000329d6	movq	%rsp,%rbp
00000000000329d9	pushq	%r14
00000000000329db	pushq	%rbx
00000000000329dc	movq	%rdi,%r14
00000000000329df	movq	0x0007209a(%rip),%rsi
00000000000329e6	movq	0x00075d7b(%rip),%rdi
00000000000329ed	call	*0x000516e5(%rip)
00000000000329f3	movq	%rax,%rbx
00000000000329f6	movq	0x0007208b(%rip),%rsi
00000000000329fd	movq	%rbx,%rdi
0000000000032a00	movq	%r14,%rdx
0000000000032a03	call	*0x000516cf(%rip)
0000000000032a09	movq	0x00073148(%rip),%rsi
0000000000032a10	movq	%r14,%rdi
0000000000032a13	call	*0x000516bf(%rip)
0000000000032a19	movq	0x00072088(%rip),%rsi
0000000000032a20	movq	%rbx,%rdi
0000000000032a23	movq	%rax,%rdx
0000000000032a26	call	*0x000516ac(%rip)
0000000000032a2c	movq	0x00072065(%rip),%rsi
0000000000032a33	movq	0x000720fe(%rip),%rdx
0000000000032a3a	movq	%rbx,%rdi
0000000000032a3d	call	*0x00051695(%rip)
0000000000032a43	movq	0x0007206e(%rip),%rsi
0000000000032a4a	movq	%r14,%rdi
0000000000032a4d	call	*0x00051685(%rip)
0000000000032a53	movq	0x00072066(%rip),%rsi
0000000000032a5a	movq	%rax,%rdi
0000000000032a5d	call	*0x00051675(%rip)
0000000000032a63	movq	0x00072cee(%rip),%rsi
0000000000032a6a	movq	%rax,%rdi
0000000000032a6d	movq	%rbx,%rdx
0000000000032a70	movq	0x00051661(%rip),%rax
0000000000032a77	popq	%rbx
0000000000032a78	popq	%r14
0000000000032a7a	popq	%rbp
0000000000032a7b	jmp	*%rax
-[PBXGDB_SuspendControlSequence execute]:
0000000000032a7d	pushq	%rbp
0000000000032a7e	movq	%rsp,%rbp
0000000000032a81	pushq	%r14
0000000000032a83	pushq	%rbx
0000000000032a84	movq	%rdi,%r14
0000000000032a87	movq	0x00071ff2(%rip),%rsi
0000000000032a8e	movq	0x00075cdb(%rip),%rdi
0000000000032a95	call	*0x0005163d(%rip)
0000000000032a9b	movq	%rax,%rbx
0000000000032a9e	movq	0x00071fe3(%rip),%rsi
0000000000032aa5	movq	%rbx,%rdi
0000000000032aa8	movq	%r14,%rdx
0000000000032aab	call	*0x00051627(%rip)
0000000000032ab1	movq	0x000730a0(%rip),%rsi
0000000000032ab8	movq	%r14,%rdi
0000000000032abb	call	*0x00051617(%rip)
0000000000032ac1	movq	0x00071fe0(%rip),%rsi
0000000000032ac8	movq	%rbx,%rdi
0000000000032acb	movq	%rax,%rdx
0000000000032ace	call	*0x00051604(%rip)
0000000000032ad4	movq	0x00071fbd(%rip),%rsi
0000000000032adb	movq	0x00072056(%rip),%rdx
0000000000032ae2	movq	%rbx,%rdi
0000000000032ae5	call	*0x000515ed(%rip)
0000000000032aeb	movq	0x00071fc6(%rip),%rsi
0000000000032af2	movq	%r14,%rdi
0000000000032af5	call	*0x000515dd(%rip)
0000000000032afb	movq	0x00071fbe(%rip),%rsi
0000000000032b02	movq	%rax,%rdi
0000000000032b05	call	*0x000515cd(%rip)
0000000000032b0b	movq	0x00072c46(%rip),%rsi
0000000000032b12	movq	%rax,%rdi
0000000000032b15	movq	%rbx,%rdx
0000000000032b18	movq	0x000515b9(%rip),%rax
0000000000032b1f	popq	%rbx
0000000000032b20	popq	%r14
0000000000032b22	popq	%rbp
0000000000032b23	jmp	*%rax
-[PBXGDB_ContinueAfterQuietStopControlSequence _continueFinished:]:
0000000000032b25	pushq	%rbp
0000000000032b26	movq	%rsp,%rbp
0000000000032b29	movq	0x00072008(%rip),%rsi
0000000000032b30	popq	%rbp
0000000000032b31	jmp	*0x000515a1(%rip)
-[PBXGDB_ContinueAfterQuietStopControlSequence execute]:
0000000000032b37	pushq	%rbp
0000000000032b38	movq	%rsp,%rbp
0000000000032b3b	pushq	%r14
0000000000032b3d	pushq	%rbx
0000000000032b3e	movq	%rdi,%r14
0000000000032b41	movq	0x00071f38(%rip),%rsi
0000000000032b48	movq	0x00075c11(%rip),%rdi
0000000000032b4f	call	*0x00051583(%rip)
0000000000032b55	movq	%rax,%rbx
0000000000032b58	movq	0x00071f29(%rip),%rsi
0000000000032b5f	movq	%rbx,%rdi
0000000000032b62	movq	%r14,%rdx
0000000000032b65	call	*0x0005156d(%rip)
0000000000032b6b	movq	0x00072fae(%rip),%rsi
0000000000032b72	movq	0x00073017(%rip),%rdx
0000000000032b79	movq	%rbx,%rdi
0000000000032b7c	call	*0x00051556(%rip)
0000000000032b82	movq	0x00071f2f(%rip),%rsi
0000000000032b89	movq	%r14,%rdi
0000000000032b8c	call	*0x00051546(%rip)
0000000000032b92	movq	0x00071f27(%rip),%rsi
0000000000032b99	movq	%rax,%rdi
0000000000032b9c	call	*0x00051536(%rip)
0000000000032ba2	movq	0x00072baf(%rip),%rsi
0000000000032ba9	movq	%rax,%rdi
0000000000032bac	movq	%rbx,%rdx
0000000000032baf	movq	0x00051522(%rip),%rax
0000000000032bb6	popq	%rbx
0000000000032bb7	popq	%r14
0000000000032bb9	popq	%rbp
0000000000032bba	jmp	*%rax
-[PBXGDB_AttachControlSequence setProcessID:]:
0000000000032bbc	pushq	%rbp
0000000000032bbd	movq	%rsp,%rbp
0000000000032bc0	movq	0x0007bcd1(%rip),%rax
0000000000032bc7	movl	%edx,(%rdi,%rax)
0000000000032bca	popq	%rbp
0000000000032bcb	ret
-[PBXGDB_AttachControlSequence processID]:
0000000000032bcc	pushq	%rbp
0000000000032bcd	movq	%rsp,%rbp
0000000000032bd0	movq	0x0007bcc1(%rip),%rax
0000000000032bd7	movl	(%rdi,%rax),%eax
0000000000032bda	popq	%rbp
0000000000032bdb	ret
-[PBXGDB_AttachControlSequence didFinish]:
0000000000032bdc	pushq	%rbp
0000000000032bdd	movq	%rsp,%rbp
0000000000032be0	pushq	%r14
0000000000032be2	pushq	%rbx
0000000000032be3	subq	$0x10,%rsp
0000000000032be7	movq	%rdi,%rbx
0000000000032bea	movq	0x00071ec7(%rip),%rsi
0000000000032bf1	movq	0x000514e0(%rip),%r14
0000000000032bf8	call	*%r14
0000000000032bfb	movq	0x00072f96(%rip),%rsi
0000000000032c02	movq	%rax,%rdi
0000000000032c05	call	*%r14
0000000000032c08	testb	%al,%al
0000000000032c0a	jne	0x00032c2d
0000000000032c0c	movq	0x00071ea5(%rip),%rsi
0000000000032c13	movq	0x000514be(%rip),%r14
0000000000032c1a	movq	%rbx,%rdi
0000000000032c1d	call	*%r14
0000000000032c20	movq	0x00072f79(%rip),%rsi
0000000000032c27	movq	%rax,%rdi
0000000000032c2a	call	*%r14
0000000000032c2d	movq	%rbx,0xe0(%rbp)
0000000000032c31	movq	0x00076128(%rip),%rax
0000000000032c38	movq	%rax,0xe8(%rbp)
0000000000032c3c	movq	0x00071ef5(%rip),%rsi
0000000000032c43	leaq	0xe0(%rbp),%rdi
0000000000032c47	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000032c4c	addq	$0x10,%rsp
0000000000032c50	popq	%rbx
0000000000032c51	popq	%r14
0000000000032c53	popq	%rbp
0000000000032c54	ret
-[PBXGDB_AttachControlSequence _didSendAttachCommand]:
0000000000032c55	pushq	%rbp
0000000000032c56	movq	%rsp,%rbp
0000000000032c59	popq	%rbp
0000000000032c5a	ret
-[PBXGDB_AttachControlSequence _didAttach:]:
0000000000032c5b	pushq	%rbp
0000000000032c5c	movq	%rsp,%rbp
0000000000032c5f	pushq	%r15
0000000000032c61	pushq	%r14
0000000000032c63	pushq	%rbx
0000000000032c64	pushq	%rax
0000000000032c65	movq	%rdi,%r14
0000000000032c68	movq	0x00071e49(%rip),%rsi
0000000000032c6f	movq	0x00051462(%rip),%rbx
0000000000032c76	call	*%rbx
0000000000032c78	movq	0x00071e41(%rip),%rsi
0000000000032c7f	movq	%rax,%rdi
0000000000032c82	call	*%rbx
0000000000032c84	movq	0x00072f1d(%rip),%rsi
0000000000032c8b	movq	%rax,%rdi
0000000000032c8e	call	*%rbx
0000000000032c90	movq	0x00071e21(%rip),%rsi
0000000000032c97	movq	%r14,%rdi
0000000000032c9a	call	*%rbx
0000000000032c9c	movq	0x0007215d(%rip),%rsi
0000000000032ca3	movq	%rax,%rdi
0000000000032ca6	call	*%rbx
0000000000032ca8	movq	0x000720f9(%rip),%rsi
0000000000032caf	movq	%rax,%rdi
0000000000032cb2	call	*%rbx
0000000000032cb4	movq	0x000720a5(%rip),%rsi
0000000000032cbb	movq	%rax,%rdi
0000000000032cbe	call	*%rbx
0000000000032cc0	movq	0x000723c9(%rip),%rsi
0000000000032cc7	movq	%rax,%rdi
0000000000032cca	call	*%rbx
0000000000032ccc	cmpl	$0x01,%eax
0000000000032ccf	jne	0x00032d3a
0000000000032cd1	movq	0x00071da8(%rip),%rsi
0000000000032cd8	movq	0x00075a49(%rip),%rdi
0000000000032cdf	movq	0x000513f2(%rip),%r15
0000000000032ce6	call	*%r15
0000000000032ce9	movq	%rax,%rbx
0000000000032cec	movq	0x00071d95(%rip),%rsi
0000000000032cf3	movq	%rbx,%rdi
0000000000032cf6	movq	%r14,%rdx
0000000000032cf9	call	*%r15
0000000000032cfc	movq	0x00071d95(%rip),%rsi
0000000000032d03	movq	0x00072ea6(%rip),%rdx
0000000000032d0a	movq	%rbx,%rdi
0000000000032d0d	call	*%r15
0000000000032d10	movq	0x00071da1(%rip),%rsi
0000000000032d17	movq	%r14,%rdi
0000000000032d1a	call	*%r15
0000000000032d1d	movq	0x00071d9c(%rip),%rsi
0000000000032d24	movq	%rax,%rdi
0000000000032d27	call	*%r15
0000000000032d2a	movq	0x00071d97(%rip),%rsi
0000000000032d31	movq	%rax,%rdi
0000000000032d34	movq	%rbx,%rdx
0000000000032d37	call	*%r15
0000000000032d3a	movq	0x00071d77(%rip),%rsi
0000000000032d41	movq	0x00051390(%rip),%rbx
0000000000032d48	movq	%r14,%rdi
0000000000032d4b	call	*%rbx
0000000000032d4d	movq	0x0007209c(%rip),%rsi
0000000000032d54	movq	%rax,%rdi
0000000000032d57	call	*%rbx
0000000000032d59	movq	0x00072e58(%rip),%rsi
0000000000032d60	movq	%rax,%rdi
0000000000032d63	movl	$0x00000001,%edx
0000000000032d68	call	*%rbx
0000000000032d6a	movq	0x00071d47(%rip),%rsi
0000000000032d71	movq	%r14,%rdi
0000000000032d74	call	*%rbx
0000000000032d76	movq	0x00072e1b(%rip),%rsi
0000000000032d7d	movq	%rax,%rdi
0000000000032d80	call	*%rbx
0000000000032d82	cmpb	$0x01,%al
0000000000032d84	jne	0x00032e0b
0000000000032d8a	movq	0x00071cef(%rip),%rsi
0000000000032d91	movq	0x000759c8(%rip),%rdi
0000000000032d98	call	*0x0005133a(%rip)
0000000000032d9e	movq	%rax,%rbx
0000000000032da1	movq	0x00071ce0(%rip),%rsi
0000000000032da8	movq	%rbx,%rdi
0000000000032dab	movq	%r14,%rdx
0000000000032dae	call	*0x00051324(%rip)
0000000000032db4	movq	0x00072d65(%rip),%rsi
0000000000032dbb	movq	0x00072dc6(%rip),%rdx
0000000000032dc2	movq	%rbx,%rdi
0000000000032dc5	call	*0x0005130d(%rip)
0000000000032dcb	movq	0x00071ce6(%rip),%rsi
0000000000032dd2	movq	%r14,%rdi
0000000000032dd5	call	*0x000512fd(%rip)
0000000000032ddb	movq	0x00071cde(%rip),%rsi
0000000000032de2	movq	%rax,%rdi
0000000000032de5	call	*0x000512ed(%rip)
0000000000032deb	movq	0x00071cd6(%rip),%rsi
0000000000032df2	movq	%rax,%rdi
0000000000032df5	movq	%rbx,%rdx
0000000000032df8	movq	0x000512d9(%rip),%rax
0000000000032dff	addq	$0x08,%rsp
0000000000032e03	popq	%rbx
0000000000032e04	popq	%r14
0000000000032e06	popq	%r15
0000000000032e08	popq	%rbp
0000000000032e09	jmp	*%rax
0000000000032e0b	movq	0x00071ca6(%rip),%rsi
0000000000032e12	movq	%r14,%rdi
0000000000032e15	call	*0x000512bd(%rip)
0000000000032e1b	movq	0x00072396(%rip),%rsi
0000000000032e22	movq	%rax,%rdi
0000000000032e25	call	*0x000512ad(%rip)
0000000000032e2b	movq	0x00072d8e(%rip),%rsi
0000000000032e32	movq	%rax,%rdi
0000000000032e35	call	*0x0005129d(%rip)
0000000000032e3b	movq	0x00071cf6(%rip),%rsi
0000000000032e42	movq	%r14,%rdi
0000000000032e45	movq	0x0005128c(%rip),%rax
0000000000032e4c	addq	$0x08,%rsp
0000000000032e50	popq	%rbx
0000000000032e51	popq	%r14
0000000000032e53	popq	%r15
0000000000032e55	popq	%rbp
0000000000032e56	jmp	*%rax
-[PBXGDB_AttachControlSequence _setPID:]:
0000000000032e58	pushq	%rbp
0000000000032e59	movq	%rsp,%rbp
0000000000032e5c	pushq	%r14
0000000000032e5e	pushq	%rbx
0000000000032e5f	movq	%rdx,%r14
0000000000032e62	movq	0x00071c4f(%rip),%rsi
0000000000032e69	call	*0x00051269(%rip)
0000000000032e6f	movq	0x00071f8a(%rip),%rsi
0000000000032e76	movq	%rax,%rdi
0000000000032e79	call	*0x00051259(%rip)
0000000000032e7f	movq	0x00071f22(%rip),%rsi
0000000000032e86	movq	%rax,%rdi
0000000000032e89	call	*0x00051249(%rip)
0000000000032e8f	movq	%rax,%rbx
0000000000032e92	movq	0x00072c9f(%rip),%rsi
0000000000032e99	movq	%r14,%rdi
0000000000032e9c	call	*0x00051236(%rip)
0000000000032ea2	movq	0x00072557(%rip),%rsi
0000000000032ea9	movq	%rbx,%rdi
0000000000032eac	movl	%eax,%edx
0000000000032eae	movq	0x00051223(%rip),%rax
0000000000032eb5	popq	%rbx
0000000000032eb6	popq	%r14
0000000000032eb8	popq	%rbp
0000000000032eb9	jmp	*%rax
-[PBXGDB_AttachControlSequence _resultAllThreadsRunning:]:
0000000000032ebb	pushq	%rbp
0000000000032ebc	movq	%rsp,%rbp
0000000000032ebf	pushq	%r14
0000000000032ec1	pushq	%rbx
0000000000032ec2	movq	%rdi,%rbx
0000000000032ec5	movq	0x00071bec(%rip),%rsi
0000000000032ecc	call	*0x00051206(%rip)
0000000000032ed2	movq	%rax,%r14
0000000000032ed5	movq	0x00072c9c(%rip),%rsi
0000000000032edc	movq	0x000757f5(%rip),%rdi
0000000000032ee3	call	*0x000511ef(%rip)
0000000000032ee9	movq	0x00072a38(%rip),%rsi
0000000000032ef0	movq	%r14,%rdi
0000000000032ef3	movq	%rax,%rdx
0000000000032ef6	xorl	%ecx,%ecx
0000000000032ef8	call	*0x000511da(%rip)
0000000000032efe	movq	0x000722b3(%rip),%rsi
0000000000032f05	movq	%rbx,%rdi
0000000000032f08	call	*0x000511ca(%rip)
0000000000032f0e	movq	0x00072c6b(%rip),%rsi
0000000000032f15	movq	%rax,%rdi
0000000000032f18	call	*0x000511ba(%rip)
0000000000032f1e	movq	0x00071c13(%rip),%rsi
0000000000032f25	movq	%rbx,%rdi
0000000000032f28	movq	0x000511a9(%rip),%rax
0000000000032f2f	popq	%rbx
0000000000032f30	popq	%r14
0000000000032f32	popq	%rbp
0000000000032f33	jmp	*%rax
-[PBXGDB_AttachControlSequence _noAttachCommand]:
0000000000032f35	pushq	%rbp
0000000000032f36	movq	%rsp,%rbp
0000000000032f39	pushq	%r14
0000000000032f3b	pushq	%rbx
0000000000032f3c	movq	%rdi,%rbx
0000000000032f3f	movq	0x00071b3a(%rip),%rsi
0000000000032f46	movq	0x00075593(%rip),%rdi
0000000000032f4d	call	*0x00051185(%rip)
0000000000032f53	movq	%rax,%r14
0000000000032f56	movq	0x0007b93b(%rip),%rax
0000000000032f5d	movslq	(%rbx,%rax),%rcx
0000000000032f61	movq	0x00071c10(%rip),%rsi
0000000000032f68	movq	0x000754e1(%rip),%rdi
0000000000032f6f	leaq	0x0007ddc2(%rip),%rdx
0000000000032f76	xorb	%al,%al
0000000000032f78	call	*0x0005115a(%rip)
0000000000032f7e	movq	0x000722f3(%rip),%rsi
0000000000032f85	movq	%r14,%rdi
0000000000032f88	movq	%rax,%rdx
0000000000032f8b	call	*0x00051147(%rip)
0000000000032f91	movq	0x00071b20(%rip),%rsi
0000000000032f98	movq	%rbx,%rdi
0000000000032f9b	call	*0x00051137(%rip)
0000000000032fa1	movq	0x00071b18(%rip),%rsi
0000000000032fa8	movq	%rax,%rdi
0000000000032fab	call	*0x00051127(%rip)
0000000000032fb1	movq	0x00071b10(%rip),%rsi
0000000000032fb8	movq	%rax,%rdi
0000000000032fbb	movq	%r14,%rdx
0000000000032fbe	call	*0x00051114(%rip)
0000000000032fc4	movq	0x00072bfd(%rip),%rsi
0000000000032fcb	movq	%rbx,%rdi
0000000000032fce	call	*0x00051104(%rip)
0000000000032fd4	movq	0x00072bf5(%rip),%rsi
0000000000032fdb	movq	%rbx,%rdi
0000000000032fde	xorl	%edx,%edx
0000000000032fe0	movq	0x000510f1(%rip),%rax
0000000000032fe7	popq	%rbx
0000000000032fe8	popq	%r14
0000000000032fea	popq	%rbp
0000000000032feb	jmp	*%rax
-[PBXGDB_AttachControlSequence _didFinishWithError]:
0000000000032fed	pushq	%rbp
0000000000032fee	movq	%rsp,%rbp
0000000000032ff1	movq	0x00071b40(%rip),%rsi
0000000000032ff8	popq	%rbp
0000000000032ff9	jmp	*0x000510d9(%rip)
-[PBXGDB_AttachControlSequence handleErrorForMICommand:]:
0000000000032fff	pushq	%rbp
0000000000033000	movq	%rsp,%rbp
0000000000033003	movq	0x00072bce(%rip),%rsi
000000000003300a	call	*0x000510c8(%rip)
0000000000033010	movl	$0x00000001,%eax
0000000000033015	popq	%rbp
0000000000033016	ret
-[PBXGDB_AttachControlSequence _doAttach]:
0000000000033017	pushq	%rbp
0000000000033018	movq	%rsp,%rbp
000000000003301b	pushq	%r15
000000000003301d	pushq	%r14
000000000003301f	pushq	%rbx
0000000000033020	pushq	%rax
0000000000033021	movq	%rdi,%r14
0000000000033024	movq	0x00072bb5(%rip),%rsi
000000000003302b	call	*0x000510a7(%rip)
0000000000033031	testl	%eax,%eax
0000000000033033	jne	0x00033039
0000000000033035	xorl	%ebx,%ebx
0000000000033037	jmp	0x00033070
0000000000033039	movq	0x00071a40(%rip),%rsi
0000000000033040	movq	0x00075731(%rip),%rdi
0000000000033047	movq	0x0005108a(%rip),%r15
000000000003304e	call	*%r15
0000000000033051	movq	%rax,%rbx
0000000000033054	movq	0x00072b85(%rip),%rsi
000000000003305b	movq	%r14,%rdi
000000000003305e	call	*%r15
0000000000033061	movq	0x00072b80(%rip),%rsi
0000000000033068	movq	%rbx,%rdi
000000000003306b	movl	%eax,%edx
000000000003306d	call	*%r15
0000000000033070	movq	0x00071a11(%rip),%rsi
0000000000033077	movq	%rbx,%rdi
000000000003307a	movq	%r14,%rdx
000000000003307d	call	*0x00051055(%rip)
0000000000033083	movq	0x00071a0e(%rip),%rsi
000000000003308a	movq	0x00072b3f(%rip),%rdx
0000000000033091	movq	%rbx,%rdi
0000000000033094	call	*0x0005103e(%rip)
000000000003309a	movq	0x00071a17(%rip),%rsi
00000000000330a1	movq	%r14,%rdi
00000000000330a4	call	*0x0005102e(%rip)
00000000000330aa	movq	0x00071a0f(%rip),%rsi
00000000000330b1	movq	%rax,%rdi
00000000000330b4	call	*0x0005101e(%rip)
00000000000330ba	movq	0x00071a07(%rip),%rsi
00000000000330c1	movq	%rax,%rdi
00000000000330c4	movq	%rbx,%rdx
00000000000330c7	call	*0x0005100b(%rip)
00000000000330cd	movq	0x00072af4(%rip),%rsi
00000000000330d4	movq	%r14,%rdi
00000000000330d7	movq	0x00050ffa(%rip),%rax
00000000000330de	addq	$0x08,%rsp
00000000000330e2	popq	%rbx
00000000000330e3	popq	%r14
00000000000330e5	popq	%r15
00000000000330e7	popq	%rbp
00000000000330e8	jmp	*%rax
-[PBXGDB_AttachControlSequence _gotAttachVerify:]:
00000000000330ea	pushq	%rbp
00000000000330eb	movq	%rsp,%rbp
00000000000330ee	pushq	%r14
00000000000330f0	pushq	%rbx
00000000000330f1	subq	$0x40,%rsp
00000000000330f5	movq	%rdx,%r14
00000000000330f8	movq	%rdi,0xe8(%rbp)
00000000000330fc	movq	%rsi,0xe0(%rbp)
0000000000033100	testq	%r14,%r14
0000000000033103	jne	0x0003316b
0000000000033105	movq	0x000755fc(%rip),%rdi
000000000003310c	leaq	0x0007521d(%rip),%rsi
0000000000033113	call	*0x00075217(%rip)
0000000000033119	movq	%rax,%rdi
000000000003311c	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000033121	leaq	0xe8(%rbp),%rdi
0000000000033125	leaq	0xe0(%rbp),%rsi
0000000000033129	leaq	0x0002b0ae(%rip),%rdx
0000000000033130	leaq	0x0002b0d9(%rip),%rcx
0000000000033137	leaq	0x0007c87a(%rip),%r9
000000000003313e	leaq	0x0002a9bb(%rip),%r8
0000000000033145	leaq	0x0002a9b8(%rip),%rbx
000000000003314c	movq	%rbx,0x18(%rsp)
0000000000033151	leaq	0x0007c6e0(%rip),%rbx
0000000000033158	movq	%rbx,0x10(%rsp)
000000000003315d	movq	%rax,0x08(%rsp)
0000000000033162	movq	%r8,(%rsp)
0000000000033166	jmp	0x00033213
000000000003316b	movq	0x00075596(%rip),%rdi
0000000000033172	leaq	0x000751b7(%rip),%rsi
0000000000033179	call	*0x000751b1(%rip)
000000000003317f	leaq	0x000751ba(%rip),%rsi
0000000000033186	movq	%r14,%rdi
0000000000033189	movq	%rax,%rdx
000000000003318c	call	*0x000751ae(%rip)
0000000000033192	testb	%al,%al
0000000000033194	jne	0x00033220
000000000003319a	movq	0x00075567(%rip),%rdi
00000000000331a1	leaq	0x00075188(%rip),%rsi
00000000000331a8	call	*0x00075182(%rip)
00000000000331ae	movq	%rax,%rdi
00000000000331b1	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
00000000000331b6	movq	%rax,%rbx
00000000000331b9	movq	0x00071aa0(%rip),%rsi
00000000000331c0	movq	%r14,%rdi
00000000000331c3	call	*0x00050f0f(%rip)
00000000000331c9	leaq	0x0007c668(%rip),%r8
00000000000331d0	leaq	0x0002b0c0(%rip),%r9
00000000000331d7	leaq	0xe8(%rbp),%rdi
00000000000331db	leaq	0xe0(%rbp),%rsi
00000000000331df	leaq	0x0002aff8(%rip),%rdx
00000000000331e6	leaq	0x0002b023(%rip),%rcx
00000000000331ed	movq	%r9,0x20(%rsp)
00000000000331f2	leaq	0x0007c7df(%rip),%r9
00000000000331f9	movq	%r8,0x18(%rsp)
00000000000331fe	movq	%rax,0x10(%rsp)
0000000000033203	leaq	0x0002a8f6(%rip),%rax
000000000003320a	movq	%rbx,0x08(%rsp)
000000000003320f	movq	%rax,(%rsp)
0000000000033213	movl	$0x0000018e,%r8d
0000000000033219	xorb	%al,%al
000000000003321b	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000033220	movq	0x00072819(%rip),%rsi
0000000000033227	movq	%r14,%rdi
000000000003322a	call	*0x00050ea8(%rip)
0000000000033230	movl	$0x00000001,%ebx
0000000000033235	testb	%al,%al
0000000000033237	je	0x00033253
0000000000033239	movq	0x00072808(%rip),%rsi
0000000000033240	movq	%r14,%rdi
0000000000033243	call	*0x00050e8f(%rip)
0000000000033249	cmpb	$0x01,%al
000000000003324b	movl	$0x00000001,%ebx
0000000000033250	sbbl	$0xff,%ebx
0000000000033253	movq	0x0007185e(%rip),%rsi
000000000003325a	movq	0xe8(%rbp),%rdi
000000000003325e	movq	0x00050e73(%rip),%r14
0000000000033265	call	*%r14
0000000000033268	movq	0x00071851(%rip),%rsi
000000000003326f	movq	%rax,%rdi
0000000000033272	call	*%r14
0000000000033275	leaq	0x0007dadc(%rip),%rcx
000000000003327c	movq	0x000727cd(%rip),%rsi
0000000000033283	movq	%rax,%rdi
0000000000033286	movl	%ebx,%edx
0000000000033288	call	*%r14
000000000003328b	cmpl	$0x02,%ebx
000000000003328e	movq	0xe8(%rbp),%rdi
0000000000033292	jne	0x0003329d
0000000000033294	movq	0x00072955(%rip),%rsi
000000000003329b	jmp	0x000332a4
000000000003329d	movq	0x00072954(%rip),%rsi
00000000000332a4	call	*0x00050e2e(%rip)
00000000000332aa	addq	$0x40,%rsp
00000000000332ae	popq	%rbx
00000000000332af	popq	%r14
00000000000332b1	popq	%rbp
00000000000332b2	ret
-[PBXGDB_AttachControlSequence execute]:
00000000000332b3	pushq	%rbp
00000000000332b4	movq	%rsp,%rbp
00000000000332b7	pushq	%r14
00000000000332b9	pushq	%rbx
00000000000332ba	movq	%rdi,%r14
00000000000332bd	movq	0x000717f4(%rip),%rsi
00000000000332c4	movq	0x00050e0d(%rip),%rbx
00000000000332cb	call	*%rbx
00000000000332cd	movq	0x000717ec(%rip),%rsi
00000000000332d4	movq	%rax,%rdi
00000000000332d7	call	*%rbx
00000000000332d9	leaq	0x0007da78(%rip),%rdx
00000000000332e0	movq	0x00072711(%rip),%rsi
00000000000332e7	movq	%rax,%rdi
00000000000332ea	call	*%rbx
00000000000332ec	cmpl	$0x02,%eax
00000000000332ef	je	0x0003338f
00000000000332f5	testl	%eax,%eax
00000000000332f7	jne	0x000333a3
00000000000332fd	movq	0x0007177c(%rip),%rsi
0000000000033304	movq	0x000753fd(%rip),%rdi
000000000003330b	call	*0x00050dc7(%rip)
0000000000033311	movq	%rax,%rbx
0000000000033314	movq	0x000726e5(%rip),%rsi
000000000003331b	leaq	0x0007da36(%rip),%rdx
0000000000033322	movq	%rbx,%rdi
0000000000033325	call	*0x00050dad(%rip)
000000000003332b	movq	0x00071756(%rip),%rsi
0000000000033332	movq	%rbx,%rdi
0000000000033335	movq	%r14,%rdx
0000000000033338	call	*0x00050d9a(%rip)
000000000003333e	movq	0x00071753(%rip),%rsi
0000000000033345	movq	0x000728b4(%rip),%rdx
000000000003334c	movq	%rbx,%rdi
000000000003334f	call	*0x00050d83(%rip)
0000000000033355	movq	0x0007175c(%rip),%rsi
000000000003335c	movq	%r14,%rdi
000000000003335f	call	*0x00050d73(%rip)
0000000000033365	movq	0x00071754(%rip),%rsi
000000000003336c	movq	%rax,%rdi
000000000003336f	call	*0x00050d63(%rip)
0000000000033375	movq	0x0007174c(%rip),%rsi
000000000003337c	movq	%rax,%rdi
000000000003337f	movq	%rbx,%rdx
0000000000033382	movq	0x00050d4f(%rip),%rax
0000000000033389	popq	%rbx
000000000003338a	popq	%r14
000000000003338c	popq	%rbp
000000000003338d	jmp	*%rax
000000000003338f	movq	0x0007285a(%rip),%rsi
0000000000033396	movq	%r14,%rdi
0000000000033399	popq	%rbx
000000000003339a	popq	%r14
000000000003339c	popq	%rbp
000000000003339d	jmp	*0x00050d35(%rip)
00000000000333a3	movq	0x0007284e(%rip),%rsi
00000000000333aa	jmp	0x00033396
-[PBXGDB_AttachWaitForControlSequence _doAttach]:
00000000000333ac	pushq	%rbp
00000000000333ad	movq	%rsp,%rbp
00000000000333b0	pushq	%r14
00000000000333b2	pushq	%rbx
00000000000333b3	movq	%rdi,%r14
00000000000333b6	movq	0x000716c3(%rip),%rsi
00000000000333bd	movq	0x000753bc(%rip),%rdi
00000000000333c4	call	*0x00050d0e(%rip)
00000000000333ca	movq	%rax,%rbx
00000000000333cd	movq	0x00072834(%rip),%rsi
00000000000333d4	movq	%r14,%rdi
00000000000333d7	call	*0x00050cfb(%rip)
00000000000333dd	movq	0x0007282c(%rip),%rsi
00000000000333e4	movq	%rbx,%rdi
00000000000333e7	movq	%rax,%rdx
00000000000333ea	call	*0x00050ce8(%rip)
00000000000333f0	movq	0x00071691(%rip),%rsi
00000000000333f7	movq	%rbx,%rdi
00000000000333fa	movq	%r14,%rdx
00000000000333fd	call	*0x00050cd5(%rip)
0000000000033403	movq	0x0007168e(%rip),%rsi
000000000003340a	movq	0x000727bf(%rip),%rdx
0000000000033411	movq	%rbx,%rdi
0000000000033414	call	*0x00050cbe(%rip)
000000000003341a	movq	0x00071697(%rip),%rsi
0000000000033421	movq	%r14,%rdi
0000000000033424	call	*0x00050cae(%rip)
000000000003342a	movq	0x0007168f(%rip),%rsi
0000000000033431	movq	%rax,%rdi
0000000000033434	call	*0x00050c9e(%rip)
000000000003343a	movq	0x00071687(%rip),%rsi
0000000000033441	movq	%rax,%rdi
0000000000033444	movq	%rbx,%rdx
0000000000033447	call	*0x00050c8b(%rip)
000000000003344d	movq	0x00072774(%rip),%rsi
0000000000033454	movq	%r14,%rdi
0000000000033457	movq	0x00050c7a(%rip),%rax
000000000003345e	popq	%rbx
000000000003345f	popq	%r14
0000000000033461	popq	%rbp
0000000000033462	jmp	*%rax
-[PBXGDB_AttachWaitForControlSequence _tryAltWaitForCmd]:
0000000000033464	pushq	%rbp
0000000000033465	movq	%rsp,%rbp
0000000000033468	pushq	%r14
000000000003346a	pushq	%rbx
000000000003346b	movq	%rdi,%r14
000000000003346e	movq	0x0007b42b(%rip),%rax
0000000000033475	movb	$0x01,(%r14,%rax)
000000000003347a	movq	0x000715ff(%rip),%rsi
0000000000033481	movq	0x00075300(%rip),%rdi
0000000000033488	call	*0x00050c4a(%rip)
000000000003348e	movq	%rax,%rbx
0000000000033491	movq	0x00072770(%rip),%rsi
0000000000033498	movq	%r14,%rdi
000000000003349b	call	*0x00050c37(%rip)
00000000000334a1	movq	0x00072768(%rip),%rsi
00000000000334a8	movq	%rbx,%rdi
00000000000334ab	movq	%rax,%rdx
00000000000334ae	call	*0x00050c24(%rip)
00000000000334b4	movq	0x000715cd(%rip),%rsi
00000000000334bb	movq	%rbx,%rdi
00000000000334be	movq	%r14,%rdx
00000000000334c1	call	*0x00050c11(%rip)
00000000000334c7	movq	0x000715ca(%rip),%rsi
00000000000334ce	movq	0x000726fb(%rip),%rdx
00000000000334d5	movq	%rbx,%rdi
00000000000334d8	call	*0x00050bfa(%rip)
00000000000334de	movq	0x000715d3(%rip),%rsi
00000000000334e5	movq	%r14,%rdi
00000000000334e8	call	*0x00050bea(%rip)
00000000000334ee	movq	0x000715cb(%rip),%rsi
00000000000334f5	movq	%rax,%rdi
00000000000334f8	call	*0x00050bda(%rip)
00000000000334fe	movq	0x000715c3(%rip),%rsi
0000000000033505	movq	%rax,%rdi
0000000000033508	movq	%rbx,%rdx
000000000003350b	call	*0x00050bc7(%rip)
0000000000033511	movq	0x000726b0(%rip),%rsi
0000000000033518	movq	%r14,%rdi
000000000003351b	movq	0x00050bb6(%rip),%rax
0000000000033522	popq	%rbx
0000000000033523	popq	%r14
0000000000033525	popq	%rbp
0000000000033526	jmp	*%rax
-[PBXGDB_AttachWaitForControlSequence handleErrorForMICommand:]:
0000000000033528	pushq	%rbp
0000000000033529	movq	%rsp,%rbp
000000000003352c	pushq	%rbx
000000000003352d	pushq	%rax
000000000003352e	movq	%rdi,%rbx
0000000000033531	movq	0x000726e0(%rip),%rsi
0000000000033538	movq	%rdx,%rdi
000000000003353b	call	*0x00050b97(%rip)
0000000000033541	movq	0x0007b358(%rip),%rcx
0000000000033548	cmpb	$0x00,(%rbx,%rcx)
000000000003354c	jne	0x00033572
000000000003354e	movq	0x000718cb(%rip),%rsi
0000000000033555	leaq	0x0007d81c(%rip),%rdx
000000000003355c	movq	%rax,%rdi
000000000003355f	call	*0x00050b73(%rip)
0000000000033565	cmpb	$0x01,%al
0000000000033567	jne	0x00033572
0000000000033569	movq	0x000726b0(%rip),%rsi
0000000000033570	jmp	0x00033579
0000000000033572	movq	0x0007265f(%rip),%rsi
0000000000033579	movq	%rbx,%rdi
000000000003357c	call	*0x00050b56(%rip)
0000000000033582	movl	$0x00000001,%eax
0000000000033587	addq	$0x08,%rsp
000000000003358b	popq	%rbx
000000000003358c	popq	%rbp
000000000003358d	ret
-[PBXGDB_AttachWaitForControlSequence _didAttach:]:
000000000003358e	pushq	%rbp
000000000003358f	movq	%rsp,%rbp
0000000000033592	subq	$0x10,%rsp
0000000000033596	movq	%rdi,0xf0(%rbp)
000000000003359a	movq	0x000757c7(%rip),%rax
00000000000335a1	movq	%rax,0xf8(%rbp)
00000000000335a5	movq	0x00072624(%rip),%rsi
00000000000335ac	leaq	0xf0(%rbp),%rdi
00000000000335b0	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000335b5	addq	$0x10,%rsp
00000000000335b9	popq	%rbp
00000000000335ba	ret
-[PBXGDB_AttachWaitForControlSequence _didFinishWithError]:
00000000000335bb	pushq	%rbp
00000000000335bc	movq	%rsp,%rbp
00000000000335bf	popq	%rbp
00000000000335c0	ret
-[PBXGDB_AttachWaitForControlSequence processName]:
00000000000335c1	pushq	%rbp
00000000000335c2	movq	%rsp,%rbp
00000000000335c5	movq	0x0007b2dc(%rip),%rax
00000000000335cc	movq	(%rdi,%rax),%rax
00000000000335d0	popq	%rbp
00000000000335d1	ret
-[PBXGDB_AttachWaitForControlSequence setProcessName:]:
00000000000335d2	pushq	%rbp
00000000000335d3	movq	%rsp,%rbp
00000000000335d6	movq	%rdx,%rax
00000000000335d9	movq	%rdi,%rcx
00000000000335dc	movq	0x0007b2c5(%rip),%rdx
00000000000335e3	movq	%rax,%rdi
00000000000335e6	movq	%rcx,%rsi
00000000000335e9	popq	%rbp
00000000000335ea	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000335ef	nop
-[PBXGDB_InterpreterCommandSequence _stackChanged:]:
00000000000335f0	pushq	%rbp
00000000000335f1	movq	%rsp,%rbp
00000000000335f4	pushq	%r15
00000000000335f6	pushq	%r14
00000000000335f8	pushq	%r13
00000000000335fa	pushq	%r12
00000000000335fc	pushq	%rbx
00000000000335fd	pushq	%rax
00000000000335fe	movq	%rdi,%r14
0000000000033601	movq	0x000714b0(%rip),%rsi
0000000000033608	movq	0x00050ac9(%rip),%rbx
000000000003360f	call	*%rbx
0000000000033611	movq	%rax,%r12
0000000000033614	movq	0x00071b9d(%rip),%rsi
000000000003361b	movq	%r12,%rdi
000000000003361e	call	*%rbx
0000000000033620	movq	%rax,0xd0(%rbp)
0000000000033624	movq	0x000717c5(%rip),%rsi
000000000003362b	movq	%r12,%rdi
000000000003362e	call	*%rbx
0000000000033630	movq	0x00072531(%rip),%rsi
0000000000033637	movq	%rax,%rdi
000000000003363a	call	*%rbx
000000000003363c	movq	0x00071885(%rip),%rsi
0000000000033643	movq	%rax,%rdi
0000000000033646	call	*%rbx
0000000000033648	movq	0x00071889(%rip),%rsi
000000000003364f	movq	%rax,%rdi
0000000000033652	call	*%rbx
0000000000033654	movq	%rax,%r13
0000000000033657	testq	%r13,%r13
000000000003365a	jne	0x0003368a
000000000003365c	movq	0x00071b55(%rip),%rsi
0000000000033663	movq	0x00050a6e(%rip),%rbx
000000000003366a	movq	%r12,%rdi
000000000003366d	call	*%rbx
000000000003366f	movq	0x000725b2(%rip),%rsi
0000000000033676	movq	%rax,%rdi
0000000000033679	xorl	%edx,%edx
000000000003367b	movl	$0x00000002,%ecx
0000000000033680	xorl	%r8d,%r8d
0000000000033683	call	*%rbx
0000000000033685	jmp	0x0003372a
000000000003368a	movq	0x00071b9f(%rip),%rsi
0000000000033691	movq	0x00050a40(%rip),%r15
0000000000033698	movq	%r13,%rdi
000000000003369b	call	*%r15
000000000003369e	movq	0x000750eb(%rip),%rdi
00000000000336a5	leaq	0x00074c34(%rip),%rsi
00000000000336ac	call	*0x00074c2e(%rip)
00000000000336b2	movq	0x000713b7(%rip),%rsi
00000000000336b9	movq	%rax,%rdi
00000000000336bc	call	*%r15
00000000000336bf	movq	%rax,%rbx
00000000000336c2	movq	0x00071707(%rip),%rsi
00000000000336c9	movq	%r12,%rdi
00000000000336cc	call	*%r15
00000000000336cf	movq	0x00071702(%rip),%rsi
00000000000336d6	movq	%rbx,%rdi
00000000000336d9	movq	%rax,%rdx
00000000000336dc	call	*%r15
00000000000336df	movq	0x00071ada(%rip),%rsi
00000000000336e6	movq	%rbx,%rdi
00000000000336e9	movq	0xd0(%rbp),%rdx
00000000000336ed	call	*%r15
00000000000336f0	movq	0x000719f9(%rip),%rsi
00000000000336f7	movq	%r13,%rdi
00000000000336fa	call	*%r15
00000000000336fd	movq	0x0007252c(%rip),%rsi
0000000000033704	movq	%rbx,%rdi
0000000000033707	movq	%rax,%rdx
000000000003370a	call	*%r15
000000000003370d	movq	0x000716bc(%rip),%rsi
0000000000033714	movq	%r12,%rdi
0000000000033717	call	*%r15
000000000003371a	movq	0x000716bf(%rip),%rsi
0000000000033721	movq	%rax,%rdi
0000000000033724	movq	%rbx,%rdx
0000000000033727	call	*%r15
000000000003372a	movq	0x0007b18f(%rip),%rax
0000000000033731	cmpb	$0x00,(%r14,%rax)
0000000000033736	jne	0x00033748
0000000000033738	movq	0x000716e9(%rip),%rsi
000000000003373f	movq	%r12,%rdi
0000000000033742	call	*0x00050990(%rip)
0000000000033748	movq	0x000713e9(%rip),%rsi
000000000003374f	movq	%r14,%rdi
0000000000033752	addq	$0x08,%rsp
0000000000033756	popq	%rbx
0000000000033757	popq	%r12
0000000000033759	popq	%r13
000000000003375b	popq	%r14
000000000003375d	popq	%r15
000000000003375f	popq	%rbp
0000000000033760	jmp	*0x00050972(%rip)
0000000000033766	nop
-[PBXGDB_InterpreterCommandSequence handleErrorForMICommand:]:
0000000000033767	pushq	%rbp
0000000000033768	movq	%rsp,%rbp
000000000003376b	movq	0x00071b1e(%rip),%rsi
0000000000033772	call	*0x00050960(%rip)
0000000000033778	movl	$0x00000001,%eax
000000000003377d	popq	%rbp
000000000003377e	ret
-[PBXGDB_InterpreterCommandSequence _resultAllThreadsRunning:]:
000000000003377f	pushq	%rbp
0000000000033780	movq	%rsp,%rbp
0000000000033783	pushq	%r15
0000000000033785	pushq	%r14
0000000000033787	pushq	%rbx
0000000000033788	pushq	%rax
0000000000033789	movq	%rdx,%r14
000000000003378c	movq	%rdi,%rbx
000000000003378f	movq	0x0007b12a(%rip),%rax
0000000000033796	movb	$0x01,(%rbx,%rax)
000000000003379a	movq	0x00071317(%rip),%rsi
00000000000337a1	call	*0x00050931(%rip)
00000000000337a7	movq	%rax,%r15
00000000000337aa	movq	0x000723c7(%rip),%rsi
00000000000337b1	movq	0x00074f20(%rip),%rdi
00000000000337b8	call	*0x0005091a(%rip)
00000000000337be	movq	0x00072163(%rip),%rsi
00000000000337c5	movq	%r15,%rdi
00000000000337c8	movq	%rax,%rdx
00000000000337cb	xorl	%ecx,%ecx
00000000000337cd	call	*0x00050905(%rip)
00000000000337d3	movq	0x000719de(%rip),%rsi
00000000000337da	movq	%rbx,%rdi
00000000000337dd	call	*0x000508f5(%rip)
00000000000337e3	movq	0x00072396(%rip),%rsi
00000000000337ea	movq	%rax,%rdi
00000000000337ed	call	*0x000508e5(%rip)
00000000000337f3	movq	0x00071a96(%rip),%rsi
00000000000337fa	movq	%rbx,%rdi
00000000000337fd	movq	%r14,%rdx
0000000000033800	movq	0x000508d1(%rip),%rax
0000000000033807	addq	$0x08,%rsp
000000000003380b	popq	%rbx
000000000003380c	popq	%r14
000000000003380e	popq	%r15
0000000000033810	popq	%rbp
0000000000033811	jmp	*%rax
-[PBXGDB_QuitSequence interruptIfNeeded]:
0000000000033813	pushq	%rbp
0000000000033814	movq	%rsp,%rbp
0000000000033817	movl	$0x00000001,%eax
000000000003381c	popq	%rbp
000000000003381d	ret
-[PBXGDB_QuitSequence _killInferior]:
000000000003381e	pushq	%rbp
000000000003381f	movq	%rsp,%rbp
0000000000033822	pushq	%rbx
0000000000033823	pushq	%rax
0000000000033824	movq	0x0007128d(%rip),%rsi
000000000003382b	movq	0x000508a6(%rip),%rbx
0000000000033832	call	*%rbx
0000000000033834	movq	0x000720dd(%rip),%rsi
000000000003383b	movq	%rax,%rdi
000000000003383e	call	*%rbx
0000000000033840	testl	%eax,%eax
0000000000033842	jne	0x0003384b
0000000000033844	addq	$0x08,%rsp
0000000000033848	popq	%rbx
0000000000033849	popq	%rbp
000000000003384a	ret
000000000003384b	movl	%eax,%edi
000000000003384d	movl	$0x0000000f,%esi
0000000000033852	addq	$0x08,%rsp
0000000000033856	popq	%rbx
0000000000033857	popq	%rbp
0000000000033858	jmp	0x0004e6b6	; symbol stub for: _kill
-[PBXGDB_QuitSequence _killGDB]:
000000000003385d	pushq	%rbp
000000000003385e	movq	%rsp,%rbp
0000000000033861	pushq	%rbx
0000000000033862	pushq	%rax
0000000000033863	movq	0x0007124e(%rip),%rsi
000000000003386a	movq	0x00050867(%rip),%rbx
0000000000033871	call	*%rbx
0000000000033873	movq	0x0007158e(%rip),%rsi
000000000003387a	movq	%rax,%rdi
000000000003387d	call	*%rbx
000000000003387f	movq	0x0007196a(%rip),%rsi
0000000000033886	movq	%rax,%rdi
0000000000033889	call	*%rbx
000000000003388b	testl	%eax,%eax
000000000003388d	jne	0x00033896
000000000003388f	addq	$0x08,%rsp
0000000000033893	popq	%rbx
0000000000033894	popq	%rbp
0000000000033895	ret
0000000000033896	movl	%eax,%edi
0000000000033898	movl	$0x0000000f,%esi
000000000003389d	addq	$0x08,%rsp
00000000000338a1	popq	%rbx
00000000000338a2	popq	%rbp
00000000000338a3	jmp	0x0004e6b6	; symbol stub for: _kill
-[PBXGDB_QuitSequence sentQuit:]:
00000000000338a8	pushq	%rbp
00000000000338a9	movq	%rsp,%rbp
00000000000338ac	movq	0x00071285(%rip),%rsi
00000000000338b3	popq	%rbp
00000000000338b4	jmp	*0x0005081e(%rip)
00000000000338ba	nop
00000000000338bb	nop
-[PBXGDB_QuitSequence handleErrorForMICommand:]:
00000000000338bc	pushq	%rbp
00000000000338bd	movq	%rsp,%rbp
00000000000338c0	pushq	%r14
00000000000338c2	pushq	%rbx
00000000000338c3	movq	%rdi,%rbx
00000000000338c6	movq	0x0007b003(%rip),%rax
00000000000338cd	movb	$0x01,(%rbx,%rax)
00000000000338d1	movq	0x0007aff0(%rip),%rax
00000000000338d8	cmpb	$0x00,(%rbx,%rax)
00000000000338dc	jne	0x00033903
00000000000338de	movq	0x000723cb(%rip),%rsi
00000000000338e5	movq	0x000507ec(%rip),%r14
00000000000338ec	movq	%rbx,%rdi
00000000000338ef	call	*%r14
00000000000338f2	movq	0x000723a7(%rip),%rsi
00000000000338f9	movq	%rbx,%rdi
00000000000338fc	xorl	%edx,%edx
00000000000338fe	call	*%r14
0000000000033901	jmp	0x00033924
0000000000033903	movq	0x000723ae(%rip),%rsi
000000000003390a	movq	0x000507c7(%rip),%r14
0000000000033911	movq	%rbx,%rdi
0000000000033914	call	*%r14
0000000000033917	movq	0x0007121a(%rip),%rsi
000000000003391e	movq	%rbx,%rdi
0000000000033921	call	*%r14
0000000000033924	movl	$0x00000001,%eax
0000000000033929	popq	%rbx
000000000003392a	popq	%r14
000000000003392c	popq	%rbp
000000000003392d	ret
-[PBXGDB_ExecStatusSequence didFinish]:
000000000003392e	pushq	%rbp
000000000003392f	movq	%rsp,%rbp
0000000000033932	subq	$0x10,%rsp
0000000000033936	movq	%rdi,0xf0(%rbp)
000000000003393a	movq	0x0007543f(%rip),%rax
0000000000033941	movq	%rax,0xf8(%rbp)
0000000000033945	movq	0x000711ec(%rip),%rsi
000000000003394c	leaq	0xf0(%rbp),%rdi
0000000000033950	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000033955	addq	$0x10,%rsp
0000000000033959	popq	%rbp
000000000003395a	ret
-[PBXGDB_ExecStatusSequence _setPostPendable:]:
000000000003395b	pushq	%rbp
000000000003395c	movq	%rsp,%rbp
000000000003395f	movq	0x0007af72(%rip),%rax
0000000000033966	movb	%dl,(%rdi,%rax)
0000000000033969	popq	%rbp
000000000003396a	ret
-[PBXGDB_ExecStatusSequence execute]:
000000000003396b	pushq	%rbp
000000000003396c	movq	%rsp,%rbp
000000000003396f	pushq	%r15
0000000000033971	pushq	%r14
0000000000033973	pushq	%r12
0000000000033975	pushq	%rbx
0000000000033976	movq	%rdi,%r14
0000000000033979	movq	0x00071100(%rip),%rsi
0000000000033980	movq	0x00074e21(%rip),%rdi
0000000000033987	movq	0x0005074a(%rip),%r15
000000000003398e	call	*%r15
0000000000033991	movq	%rax,%rbx
0000000000033994	movq	0x000710ed(%rip),%rsi
000000000003399b	movq	%rbx,%rdi
000000000003399e	movq	%r14,%rdx
00000000000339a1	call	*%r15
00000000000339a4	movq	0x000710ed(%rip),%rsi
00000000000339ab	movq	0x000722de(%rip),%rdx
00000000000339b2	movq	%rbx,%rdi
00000000000339b5	call	*%r15
00000000000339b8	movq	0x00072161(%rip),%rsi
00000000000339bf	movq	0x000721c2(%rip),%rdx
00000000000339c6	movq	%rbx,%rdi
00000000000339c9	call	*%r15
00000000000339cc	movq	0x0007af05(%rip),%rax
00000000000339d3	movb	(%r14,%rax),%r12b
00000000000339d7	movq	0x000710da(%rip),%rsi
00000000000339de	movq	%r14,%rdi
00000000000339e1	call	*%r15
00000000000339e4	movq	0x000710d5(%rip),%rsi
00000000000339eb	movq	%rax,%rdi
00000000000339ee	call	*%r15
00000000000339f1	movq	%rax,%rdi
00000000000339f4	cmpb	$0x00,%r12b
00000000000339f8	jne	0x00033a12
00000000000339fa	movq	0x000710c7(%rip),%rsi
0000000000033a01	movq	%rbx,%rdx
0000000000033a04	popq	%rbx
0000000000033a05	popq	%r12
0000000000033a07	popq	%r14
0000000000033a09	popq	%r15
0000000000033a0b	popq	%rbp
0000000000033a0c	jmp	*0x000506c6(%rip)
0000000000033a12	movq	0x00071d3f(%rip),%rsi
0000000000033a19	jmp	0x00033a01
-[PBXGDB_UndoIsSupportedSequence execute]:
0000000000033a1b	pushq	%rbp
0000000000033a1c	movq	%rsp,%rbp
0000000000033a1f	pushq	%r14
0000000000033a21	pushq	%rbx
0000000000033a22	movq	%rdi,%r14
0000000000033a25	movq	0x00071054(%rip),%rsi
0000000000033a2c	movq	0x00074d7d(%rip),%rdi
0000000000033a33	call	*0x0005069f(%rip)
0000000000033a39	movq	%rax,%rbx
0000000000033a3c	movq	0x00071045(%rip),%rsi
0000000000033a43	movq	%rbx,%rdi
0000000000033a46	movq	%r14,%rdx
0000000000033a49	call	*0x00050689(%rip)
0000000000033a4f	movq	0x00071042(%rip),%rsi
0000000000033a56	movq	0x00072263(%rip),%rdx
0000000000033a5d	movq	%rbx,%rdi
0000000000033a60	call	*0x00050672(%rip)
0000000000033a66	movq	0x0007104b(%rip),%rsi
0000000000033a6d	movq	%r14,%rdi
0000000000033a70	call	*0x00050662(%rip)
0000000000033a76	movq	0x00071043(%rip),%rsi
0000000000033a7d	movq	%rax,%rdi
0000000000033a80	call	*0x00050652(%rip)
0000000000033a86	movq	0x0007103b(%rip),%rsi
0000000000033a8d	movq	%rax,%rdi
0000000000033a90	movq	%rbx,%rdx
0000000000033a93	movq	0x0005063e(%rip),%rax
0000000000033a9a	popq	%rbx
0000000000033a9b	popq	%r14
0000000000033a9d	popq	%rbp
0000000000033a9e	jmp	*%rax
-[PBXGDB_UndoIsSupportedSequence _didEnableUndo:]:
0000000000033aa0	pushq	%rbp
0000000000033aa1	movq	%rsp,%rbp
0000000000033aa4	pushq	%rbx
0000000000033aa5	pushq	%rax
0000000000033aa6	movq	%rdi,%rbx
0000000000033aa9	movq	0x00071008(%rip),%rsi
0000000000033ab0	call	*0x00050622(%rip)
0000000000033ab6	movq	0x0007220b(%rip),%rsi
0000000000033abd	movq	%rax,%rdi
0000000000033ac0	movl	$0x00000001,%edx
0000000000033ac5	call	*0x0005060d(%rip)
0000000000033acb	movq	0x00071066(%rip),%rsi
0000000000033ad2	movq	%rbx,%rdi
0000000000033ad5	movq	0x000505fc(%rip),%rax
0000000000033adc	addq	$0x08,%rsp
0000000000033ae0	popq	%rbx
0000000000033ae1	popq	%rbp
0000000000033ae2	jmp	*%rax
-[PBXGDB_UndoIsSupportedSequence handleErrorForMICommand:]:
0000000000033ae4	pushq	%rbp
0000000000033ae5	movq	%rsp,%rbp
0000000000033ae8	pushq	%rbx
0000000000033ae9	pushq	%rax
0000000000033aea	movq	0x00070fc7(%rip),%rsi
0000000000033af1	movq	0x000505e0(%rip),%rbx
0000000000033af8	call	*%rbx
0000000000033afa	movq	0x000721c7(%rip),%rsi
0000000000033b01	movq	%rax,%rdi
0000000000033b04	xorl	%edx,%edx
0000000000033b06	call	*%rbx
0000000000033b08	movl	$0x00000001,%eax
0000000000033b0d	addq	$0x08,%rsp
0000000000033b11	popq	%rbx
0000000000033b12	popq	%rbp
0000000000033b13	ret
-[PBXGDB_UndoToCheckpointSequence handleErrorForMICommand:]:
0000000000033b14	pushq	%rbp
0000000000033b15	movq	%rsp,%rbp
0000000000033b18	pushq	%r14
0000000000033b1a	pushq	%rbx
0000000000033b1b	movq	%rdi,%rbx
0000000000033b1e	movq	0x00071013(%rip),%rsi
0000000000033b25	movq	0x000505ac(%rip),%r14
0000000000033b2c	call	*%r14
0000000000033b2f	movq	0x00070f82(%rip),%rsi
0000000000033b36	movq	%rbx,%rdi
0000000000033b39	call	*%r14
0000000000033b3c	leaq	0x0007d255(%rip),%rdx
0000000000033b43	movq	0x00071fc6(%rip),%rsi
0000000000033b4a	movq	%rax,%rdi
0000000000033b4d	call	*%r14
0000000000033b50	movl	$0x00000001,%eax
0000000000033b55	popq	%rbx
0000000000033b56	popq	%r14
0000000000033b58	popq	%rbp
0000000000033b59	ret
-[PBXGDB_UndoToCheckpointSequence _didUndo:]:
0000000000033b5a	pushq	%rbp
0000000000033b5b	movq	%rsp,%rbp
0000000000033b5e	pushq	%rbx
0000000000033b5f	pushq	%rax
0000000000033b60	movq	%rdi,%rbx
0000000000033b63	movq	0x00070f4e(%rip),%rsi
0000000000033b6a	call	*0x00050568(%rip)
0000000000033b70	movq	0x00071641(%rip),%rsi
0000000000033b77	movq	%rax,%rdi
0000000000033b7a	call	*0x00050558(%rip)
0000000000033b80	movq	0x000720a1(%rip),%rsi
0000000000033b87	movq	%rax,%rdi
0000000000033b8a	movl	$0x00000001,%edx
0000000000033b8f	movl	$0x00000002,%ecx
0000000000033b94	xorl	%r8d,%r8d
0000000000033b97	call	*0x0005053b(%rip)
0000000000033b9d	movq	0x000720ec(%rip),%rsi
0000000000033ba4	movq	%rbx,%rdi
0000000000033ba7	xorl	%edx,%edx
0000000000033ba9	movq	0x00050528(%rip),%rax
0000000000033bb0	addq	$0x08,%rsp
0000000000033bb4	popq	%rbx
0000000000033bb5	popq	%rbp
0000000000033bb6	jmp	*%rax
-[PBXGDB_UndoToCheckpointSequence execute]:
0000000000033bb8	pushq	%rbp
0000000000033bb9	movq	%rsp,%rbp
0000000000033bbc	pushq	%r14
0000000000033bbe	pushq	%rbx
0000000000033bbf	movq	%rdi,%r14
0000000000033bc2	movq	0x00070eb7(%rip),%rsi
0000000000033bc9	movq	0x00074be8(%rip),%rdi
0000000000033bd0	call	*0x00050502(%rip)
0000000000033bd6	movq	%rax,%rbx
0000000000033bd9	movq	0x00070ea8(%rip),%rsi
0000000000033be0	movq	%rbx,%rdi
0000000000033be3	movq	%r14,%rdx
0000000000033be6	call	*0x000504ec(%rip)
0000000000033bec	movq	0x00070ea5(%rip),%rsi
0000000000033bf3	movq	0x000720d6(%rip),%rdx
0000000000033bfa	movq	%rbx,%rdi
0000000000033bfd	call	*0x000504d5(%rip)
0000000000033c03	movq	0x00070eae(%rip),%rsi
0000000000033c0a	movq	%r14,%rdi
0000000000033c0d	call	*0x000504c5(%rip)
0000000000033c13	movq	0x00070ea6(%rip),%rsi
0000000000033c1a	movq	%rax,%rdi
0000000000033c1d	call	*0x000504b5(%rip)
0000000000033c23	movq	0x00070e9e(%rip),%rsi
0000000000033c2a	movq	%rax,%rdi
0000000000033c2d	movq	%rbx,%rdx
0000000000033c30	call	*0x000504a2(%rip)
0000000000033c36	movq	0x00070e7b(%rip),%rsi
0000000000033c3d	movq	%r14,%rdi
0000000000033c40	call	*0x00050492(%rip)
0000000000033c46	leaq	0x0007d16b(%rip),%rdx
0000000000033c4d	movq	0x00071ebc(%rip),%rsi
0000000000033c54	movq	%rax,%rdi
0000000000033c57	movq	0x0005047a(%rip),%rax
0000000000033c5e	popq	%rbx
0000000000033c5f	popq	%r14
0000000000033c61	popq	%rbp
0000000000033c62	jmp	*%rax
-[PBXGDB_RestartControlSequence init]:
0000000000033c64	pushq	%rbp
0000000000033c65	movq	%rsp,%rbp
0000000000033c68	subq	$0x10,%rsp
0000000000033c6c	movq	%rdi,0xf0(%rbp)
0000000000033c70	movq	0x00075111(%rip),%rax
0000000000033c77	movq	%rax,0xf8(%rbp)
0000000000033c7b	movq	0x00070dee(%rip),%rsi
0000000000033c82	leaq	0xf0(%rbp),%rdi
0000000000033c86	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000033c8b	testq	%rax,%rax
0000000000033c8e	je	0x00033c9b
0000000000033c90	movq	0x0007ac49(%rip),%rcx
0000000000033c97	movb	$0x01,(%rax,%rcx)
0000000000033c9b	addq	$0x10,%rsp
0000000000033c9f	popq	%rbp
0000000000033ca0	ret
-[PBXGDB_RestartControlSequence interruptIfNeeded]:
0000000000033ca1	pushq	%rbp
0000000000033ca2	movq	%rsp,%rbp
0000000000033ca5	movq	0x0007ac34(%rip),%rax
0000000000033cac	movsbl	(%rdi,%rax),%eax
0000000000033cb0	popq	%rbp
0000000000033cb1	ret
-[PBXGDB_RestartControlSequence _didFinish:]:
0000000000033cb2	pushq	%rbp
0000000000033cb3	movq	%rsp,%rbp
0000000000033cb6	movq	0x00070e7b(%rip),%rsi
0000000000033cbd	popq	%rbp
0000000000033cbe	jmp	*0x00050414(%rip)
-[PBXGDB_RestartControlSequence didFinish]:
0000000000033cc4	pushq	%rbp
0000000000033cc5	movq	%rsp,%rbp
0000000000033cc8	pushq	%r15
0000000000033cca	pushq	%r14
0000000000033ccc	pushq	%rbx
0000000000033ccd	subq	$0x18,%rsp
0000000000033cd1	movq	%rdi,%rbx
0000000000033cd4	movq	0x00070ddd(%rip),%rsi
0000000000033cdb	movq	0x000503f6(%rip),%r15
0000000000033ce2	call	*%r15
0000000000033ce5	movq	%rax,%r14
0000000000033ce8	movq	0x00070dd1(%rip),%rsi
0000000000033cef	movq	%r14,%rdi
0000000000033cf2	call	*%r15
0000000000033cf5	movq	0x00071fdc(%rip),%rsi
0000000000033cfc	movq	%rax,%rdi
0000000000033cff	xorl	%edx,%edx
0000000000033d01	call	*%r15
0000000000033d04	leaq	0xd8(%rbp),%rdi
0000000000033d08	movq	%rbx,0xd8(%rbp)
0000000000033d0c	movq	0x00075075(%rip),%rax
0000000000033d13	movq	%rax,0xe0(%rbp)
0000000000033d17	movq	0x00070e1a(%rip),%rsi
0000000000033d1e	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000033d23	movq	0x00071fb6(%rip),%rsi
0000000000033d2a	movq	%r14,%rdi
0000000000033d2d	call	*%r15
0000000000033d30	addq	$0x18,%rsp
0000000000033d34	popq	%rbx
0000000000033d35	popq	%r14
0000000000033d37	popq	%r15
0000000000033d39	popq	%rbp
0000000000033d3a	ret
-[PBXGDB_RestartControlSequence execute]:
0000000000033d3b	pushq	%rbp
0000000000033d3c	movq	%rsp,%rbp
0000000000033d3f	pushq	%r15
0000000000033d41	pushq	%r14
0000000000033d43	pushq	%rbx
0000000000033d44	pushq	%rax
0000000000033d45	movq	%rdi,%r14
0000000000033d48	movq	0x00070d69(%rip),%rsi
0000000000033d4f	movq	0x00050382(%rip),%rbx
0000000000033d56	call	*%rbx
0000000000033d58	movq	0x00071f89(%rip),%rsi
0000000000033d5f	movq	%rax,%rdi
0000000000033d62	call	*%rbx
0000000000033d64	cmpb	$0x01,%al
0000000000033d66	jne	0x00033dec
0000000000033d6c	movq	0x00070d0d(%rip),%rsi
0000000000033d73	movq	0x00074a2e(%rip),%rdi
0000000000033d7a	movq	0x00050357(%rip),%r15
0000000000033d81	call	*%r15
0000000000033d84	movq	%rax,%rbx
0000000000033d87	movq	0x00070cfa(%rip),%rsi
0000000000033d8e	movq	%rbx,%rdi
0000000000033d91	movq	%r14,%rdx
0000000000033d94	call	*%r15
0000000000033d97	movq	0x00070cfa(%rip),%rsi
0000000000033d9e	movq	0x00071f4b(%rip),%rdx
0000000000033da5	movq	%rbx,%rdi
0000000000033da8	call	*%r15
0000000000033dab	movq	0x00070d06(%rip),%rsi
0000000000033db2	movq	%r14,%rdi
0000000000033db5	call	*%r15
0000000000033db8	movq	0x00070d01(%rip),%rsi
0000000000033dbf	movq	%rax,%rdi
0000000000033dc2	call	*%r15
0000000000033dc5	movq	0x00070cfc(%rip),%rsi
0000000000033dcc	movq	%rax,%rdi
0000000000033dcf	movq	%rbx,%rdx
0000000000033dd2	call	*%r15
0000000000033dd5	movq	0x0007ab04(%rip),%rax
0000000000033ddc	movb	$0x00,(%r14,%rax)
0000000000033de1	addq	$0x08,%rsp
0000000000033de5	popq	%rbx
0000000000033de6	popq	%r14
0000000000033de8	popq	%r15
0000000000033dea	popq	%rbp
0000000000033deb	ret
0000000000033dec	movq	0x00070d45(%rip),%rsi
0000000000033df3	movq	%r14,%rdi
0000000000033df6	addq	$0x08,%rsp
0000000000033dfa	popq	%rbx
0000000000033dfb	popq	%r14
0000000000033dfd	popq	%r15
0000000000033dff	popq	%rbp
0000000000033e00	jmp	*0x000502d2(%rip)
-[PBXGDB_TurnOffSchedulerLockingControlSequence execute]:
0000000000033e06	pushq	%rbp
0000000000033e07	movq	%rsp,%rbp
0000000000033e0a	pushq	%r14
0000000000033e0c	pushq	%rbx
0000000000033e0d	movq	%rdi,%r14
0000000000033e10	movq	0x00070c69(%rip),%rsi
0000000000033e17	movq	0x000748f2(%rip),%rdi
0000000000033e1e	call	*0x000502b4(%rip)
0000000000033e24	movq	%rax,%rbx
0000000000033e27	movq	0x00071bfa(%rip),%rsi
0000000000033e2e	movq	%rbx,%rdi
0000000000033e31	xorl	%edx,%edx
0000000000033e33	call	*0x0005029f(%rip)
0000000000033e39	movq	0x00070c48(%rip),%rsi
0000000000033e40	movq	%rbx,%rdi
0000000000033e43	movq	%r14,%rdx
0000000000033e46	call	*0x0005028c(%rip)
0000000000033e4c	movq	0x00070c45(%rip),%rsi
0000000000033e53	movq	0x00071e96(%rip),%rdx
0000000000033e5a	movq	%rbx,%rdi
0000000000033e5d	call	*0x00050275(%rip)
0000000000033e63	movq	0x00070c4e(%rip),%rsi
0000000000033e6a	movq	%r14,%rdi
0000000000033e6d	call	*0x00050265(%rip)
0000000000033e73	movq	0x00070c46(%rip),%rsi
0000000000033e7a	movq	%rax,%rdi
0000000000033e7d	call	*0x00050255(%rip)
0000000000033e83	movq	0x00070c3e(%rip),%rsi
0000000000033e8a	movq	%rax,%rdi
0000000000033e8d	movq	%rbx,%rdx
0000000000033e90	movq	0x00050241(%rip),%rax
0000000000033e97	popq	%rbx
0000000000033e98	popq	%r14
0000000000033e9a	popq	%rbp
0000000000033e9b	jmp	*%rax
-[PBXGDB_TurnOffSchedulerLockingControlSequence _didFinish:]:
0000000000033e9d	pushq	%rbp
0000000000033e9e	movq	%rsp,%rbp
0000000000033ea1	movq	0x00070c90(%rip),%rsi
0000000000033ea8	popq	%rbp
0000000000033ea9	jmp	*0x00050229(%rip)
-[PBXGDB_DataValue2 threadContext]:
0000000000033eaf	pushq	%rbp
0000000000033eb0	movq	%rsp,%rbp
0000000000033eb3	pushq	%r14
0000000000033eb5	pushq	%rbx
0000000000033eb6	movq	%rdi,%rbx
0000000000033eb9	movq	0x00071888(%rip),%rsi
0000000000033ec0	call	*0x00050212(%rip)
0000000000033ec6	movq	%rax,%r14
0000000000033ec9	testq	%r14,%r14
0000000000033ecc	jg	0x00033ed5
0000000000033ece	xorl	%eax,%eax
0000000000033ed0	popq	%rbx
0000000000033ed1	popq	%r14
0000000000033ed3	popq	%rbp
0000000000033ed4	ret
0000000000033ed5	movq	0x00070bdc(%rip),%rsi
0000000000033edc	movq	%rbx,%rdi
0000000000033edf	call	*0x000501f3(%rip)
0000000000033ee5	movq	0x00070f04(%rip),%rsi
0000000000033eec	movq	%rax,%rdi
0000000000033eef	call	*0x000501e3(%rip)
0000000000033ef5	movq	0x00071d44(%rip),%rsi
0000000000033efc	movq	%rax,%rdi
0000000000033eff	movq	%r14,%rdx
0000000000033f02	movq	0x000501cf(%rip),%rax
0000000000033f09	popq	%rbx
0000000000033f0a	popq	%r14
0000000000033f0c	popq	%rbp
0000000000033f0d	jmp	*%rax
-[PBXGDB_DataValue2 staticNumberOfChildren]:
0000000000033f0f	pushq	%rbp
0000000000033f10	movq	%rsp,%rbp
0000000000033f13	movq	0x0007a9de(%rip),%rax
0000000000033f1a	movq	(%rdi,%rax),%rax
0000000000033f1e	popq	%rbp
0000000000033f1f	ret
-[PBXGDB_DataValueController enqueueGetFrameRegisterSequenceForDataValue:]:
0000000000033f20	pushq	%rbp
0000000000033f21	movq	%rsp,%rbp
0000000000033f24	pushq	%r15
0000000000033f26	pushq	%r14
0000000000033f28	pushq	%rbx
0000000000033f29	pushq	%rax
0000000000033f2a	movq	%rdx,%rbx
0000000000033f2d	movq	%rdi,%r14
0000000000033f30	movq	0x00074649(%rip),%r15
0000000000033f37	movq	0x00070b7a(%rip),%rsi
0000000000033f3e	call	*0x00050194(%rip)
0000000000033f44	movq	0x00070e85(%rip),%rsi
0000000000033f4b	movq	%rax,%rdi
0000000000033f4e	call	*0x00050184(%rip)
0000000000033f54	movq	0x00071dd5(%rip),%rsi
0000000000033f5b	movq	%r15,%rdi
0000000000033f5e	movq	%rbx,%rdx
0000000000033f61	movq	%rax,%rcx
0000000000033f64	call	*0x0005016e(%rip)
0000000000033f6a	movq	%rax,%r15
0000000000033f6d	movq	0x000715ac(%rip),%rsi
0000000000033f74	movq	%rbx,%rdi
0000000000033f77	call	*0x0005015b(%rip)
0000000000033f7d	movq	0x0007167c(%rip),%rsi
0000000000033f84	movq	%r15,%rdi
0000000000033f87	movq	%rax,%rdx
0000000000033f8a	call	*0x00050148(%rip)
0000000000033f90	movq	0x00070b21(%rip),%rsi
0000000000033f97	movq	%r14,%rdi
0000000000033f9a	call	*0x00050138(%rip)
0000000000033fa0	movq	0x00070e29(%rip),%rsi
0000000000033fa7	movq	%rax,%rdi
0000000000033faa	call	*0x00050128(%rip)
0000000000033fb0	movq	0x00070e29(%rip),%rsi
0000000000033fb7	movq	%rax,%rdi
0000000000033fba	movq	%r15,%rdx
0000000000033fbd	movq	0x00050114(%rip),%rax
0000000000033fc4	addq	$0x08,%rsp
0000000000033fc8	popq	%rbx
0000000000033fc9	popq	%r14
0000000000033fcb	popq	%r15
0000000000033fcd	popq	%rbp
0000000000033fce	jmp	*%rax
-[PBXGDB_DataValueController enqueueDeleteSequenceForDataValue:]:
0000000000033fd0	pushq	%rbp
0000000000033fd1	movq	%rsp,%rbp
0000000000033fd4	pushq	%r15
0000000000033fd6	pushq	%r14
0000000000033fd8	pushq	%rbx
0000000000033fd9	pushq	%rax
0000000000033fda	movq	%rdx,%r15
0000000000033fdd	movq	%rdi,%r14
0000000000033fe0	movq	0x000747e9(%rip),%rdi
0000000000033fe7	leaq	0x000742f2(%rip),%rsi
0000000000033fee	call	*0x000742ec(%rip)
0000000000033ff4	movq	0x00070a75(%rip),%rsi
0000000000033ffb	movq	%rax,%rdi
0000000000033ffe	call	*0x000500d4(%rip)
0000000000034004	movq	%rax,%rbx
0000000000034007	movq	0x0007144a(%rip),%rsi
000000000003400e	movq	%r14,%rdi
0000000000034011	movq	%rbx,%rdx
0000000000034014	movq	%r15,%rcx
0000000000034017	call	*0x000500bb(%rip)
000000000003401d	movq	0x00070a94(%rip),%rsi
0000000000034024	movq	%r14,%rdi
0000000000034027	call	*0x000500ab(%rip)
000000000003402d	movq	0x00070d9c(%rip),%rsi
0000000000034034	movq	%rax,%rdi
0000000000034037	call	*0x0005009b(%rip)
000000000003403d	movq	0x00070d9c(%rip),%rsi
0000000000034044	movq	%rax,%rdi
0000000000034047	movq	%rbx,%rdx
000000000003404a	movq	0x00050087(%rip),%rax
0000000000034051	addq	$0x08,%rsp
0000000000034055	popq	%rbx
0000000000034056	popq	%r14
0000000000034058	popq	%r15
000000000003405a	popq	%rbp
000000000003405b	jmp	*%rax
-[PBXGDB_DataValueController enqueueDeleteChildrenSequenceForDataValue:freeVarObjs:]:
000000000003405d	pushq	%rbp
000000000003405e	movq	%rsp,%rbp
0000000000034061	pushq	%r15
0000000000034063	pushq	%r14
0000000000034065	pushq	%r12
0000000000034067	pushq	%rbx
0000000000034068	movl	%ecx,%r15d
000000000003406b	movq	%rdx,%r12
000000000003406e	movq	%rdi,%r14
0000000000034071	movq	0x00074760(%rip),%rdi
0000000000034078	leaq	0x00074261(%rip),%rsi
000000000003407f	call	*0x0007425b(%rip)
0000000000034085	movq	0x000709e4(%rip),%rsi
000000000003408c	movq	%rax,%rdi
000000000003408f	call	*0x00050043(%rip)
0000000000034095	movq	%rax,%rbx
0000000000034098	movq	0x000713b9(%rip),%rsi
000000000003409f	movq	%r14,%rdi
00000000000340a2	movq	%rbx,%rdx
00000000000340a5	movq	%r12,%rcx
00000000000340a8	call	*0x0005002a(%rip)
00000000000340ae	movq	0x00071c83(%rip),%rsi
00000000000340b5	movq	%rbx,%rdi
00000000000340b8	movl	%r15d,%edx
00000000000340bb	call	*0x00050017(%rip)
00000000000340c1	movq	0x000709f0(%rip),%rsi
00000000000340c8	movq	%r14,%rdi
00000000000340cb	call	*0x00050007(%rip)
00000000000340d1	movq	0x00070cf8(%rip),%rsi
00000000000340d8	movq	%rax,%rdi
00000000000340db	call	*0x0004fff7(%rip)
00000000000340e1	movq	0x00070cf8(%rip),%rsi
00000000000340e8	movq	%rax,%rdi
00000000000340eb	movq	%rbx,%rdx
00000000000340ee	movq	0x0004ffe3(%rip),%rax
00000000000340f5	popq	%rbx
00000000000340f6	popq	%r12
00000000000340f8	popq	%r14
00000000000340fa	popq	%r15
00000000000340fc	popq	%rbp
00000000000340fd	jmp	*%rax
-[PBXGDB_DataValueController enqueueSetValueSequenceForDataValue:newValue:]:
00000000000340ff	pushq	%rbp
0000000000034100	movq	%rsp,%rbp
0000000000034103	pushq	%r15
0000000000034105	pushq	%r14
0000000000034107	pushq	%r12
0000000000034109	pushq	%rbx
000000000003410a	movq	%rcx,%r15
000000000003410d	movq	%rdx,%r12
0000000000034110	movq	%rdi,%r14
0000000000034113	movq	0x000746ce(%rip),%rdi
000000000003411a	leaq	0x000741bf(%rip),%rsi
0000000000034121	call	*0x000741b9(%rip)
0000000000034127	movq	0x00070942(%rip),%rsi
000000000003412e	movq	%rax,%rdi
0000000000034131	call	*0x0004ffa1(%rip)
0000000000034137	movq	%rax,%rbx
000000000003413a	movq	0x00071317(%rip),%rsi
0000000000034141	movq	%r14,%rdi
0000000000034144	movq	%rbx,%rdx
0000000000034147	movq	%r12,%rcx
000000000003414a	call	*0x0004ff88(%rip)
0000000000034150	movq	0x00071469(%rip),%rsi
0000000000034157	movq	%rbx,%rdi
000000000003415a	movq	%r15,%rdx
000000000003415d	call	*0x0004ff75(%rip)
0000000000034163	movq	0x0007094e(%rip),%rsi
000000000003416a	movq	%r14,%rdi
000000000003416d	call	*0x0004ff65(%rip)
0000000000034173	movq	0x00070c56(%rip),%rsi
000000000003417a	movq	%rax,%rdi
000000000003417d	call	*0x0004ff55(%rip)
0000000000034183	movq	0x0007104e(%rip),%rsi
000000000003418a	movq	%rax,%rdi
000000000003418d	movq	%rbx,%rdx
0000000000034190	movq	0x0004ff41(%rip),%rax
0000000000034197	popq	%rbx
0000000000034198	popq	%r12
000000000003419a	popq	%r14
000000000003419c	popq	%r15
000000000003419e	popq	%rbp
000000000003419f	jmp	*%rax
-[PBXGDB_DataValueController enqueueSetFormatSequenceForDataValue:newFormat:]:
00000000000341a1	pushq	%rbp
00000000000341a2	movq	%rsp,%rbp
00000000000341a5	pushq	%r15
00000000000341a7	pushq	%r14
00000000000341a9	pushq	%r12
00000000000341ab	pushq	%rbx
00000000000341ac	movl	%ecx,%r15d
00000000000341af	movq	%rdx,%r12
00000000000341b2	movq	%rdi,%r14
00000000000341b5	movq	0x00074634(%rip),%rdi
00000000000341bc	leaq	0x0007411d(%rip),%rsi
00000000000341c3	call	*0x00074117(%rip)
00000000000341c9	movq	0x000708a0(%rip),%rsi
00000000000341d0	movq	%rax,%rdi
00000000000341d3	call	*0x0004feff(%rip)
00000000000341d9	movq	%rax,%rbx
00000000000341dc	movq	0x00071275(%rip),%rsi
00000000000341e3	movq	%r14,%rdi
00000000000341e6	movq	%rbx,%rdx
00000000000341e9	movq	%r12,%rcx
00000000000341ec	call	*0x0004fee6(%rip)
00000000000341f2	movq	0x00071b47(%rip),%rsi
00000000000341f9	movq	%rbx,%rdi
00000000000341fc	movl	%r15d,%edx
00000000000341ff	call	*0x0004fed3(%rip)
0000000000034205	movq	0x000708ac(%rip),%rsi
000000000003420c	movq	%r14,%rdi
000000000003420f	call	*0x0004fec3(%rip)
0000000000034215	movq	0x00070bb4(%rip),%rsi
000000000003421c	movq	%rax,%rdi
000000000003421f	call	*0x0004feb3(%rip)
0000000000034225	movq	0x00070bb4(%rip),%rsi
000000000003422c	movq	%rax,%rdi
000000000003422f	movq	%rbx,%rdx
0000000000034232	movq	0x0004fe9f(%rip),%rax
0000000000034239	popq	%rbx
000000000003423a	popq	%r12
000000000003423c	popq	%r14
000000000003423e	popq	%r15
0000000000034240	popq	%rbp
0000000000034241	jmp	*%rax
-[PBXGDB_DataValueController enqueueSequenceForContainerDataValue:cloneDVByPathExpression:]:
0000000000034243	pushq	%rbp
0000000000034244	movq	%rsp,%rbp
0000000000034247	pushq	%r15
0000000000034249	pushq	%r14
000000000003424b	pushq	%r12
000000000003424d	pushq	%rbx
000000000003424e	movq	%rcx,%r15
0000000000034251	movq	%rdx,%r12
0000000000034254	movq	%rdi,%r14
0000000000034257	movq	0x000745aa(%rip),%rdi
000000000003425e	leaq	0x0007407b(%rip),%rsi
0000000000034265	call	*0x00074075(%rip)
000000000003426b	movq	0x000707fe(%rip),%rsi
0000000000034272	movq	%rax,%rdi
0000000000034275	call	*0x0004fe5d(%rip)
000000000003427b	movq	%rax,%rbx
000000000003427e	movq	0x000711d3(%rip),%rsi
0000000000034285	movq	%r14,%rdi
0000000000034288	movq	%rbx,%rdx
000000000003428b	movq	%r12,%rcx
000000000003428e	call	*0x0004fe44(%rip)
0000000000034294	movq	0x00071abd(%rip),%rsi
000000000003429b	movq	%rbx,%rdi
000000000003429e	movq	%r15,%rdx
00000000000342a1	call	*0x0004fe31(%rip)
00000000000342a7	movq	0x0007080a(%rip),%rsi
00000000000342ae	movq	%r14,%rdi
00000000000342b1	call	*0x0004fe21(%rip)
00000000000342b7	movq	0x00070b12(%rip),%rsi
00000000000342be	movq	%rax,%rdi
00000000000342c1	call	*0x0004fe11(%rip)
00000000000342c7	movq	0x00070b12(%rip),%rsi
00000000000342ce	movq	%rax,%rdi
00000000000342d1	movq	%rbx,%rdx
00000000000342d4	movq	0x0004fdfd(%rip),%rax
00000000000342db	popq	%rbx
00000000000342dc	popq	%r12
00000000000342de	popq	%r14
00000000000342e0	popq	%r15
00000000000342e2	popq	%rbp
00000000000342e3	jmp	*%rax
-[PBXGDB_DataValueController enqueuePrintDescriptionSequenceForDataValue:]:
00000000000342e5	pushq	%rbp
00000000000342e6	movq	%rsp,%rbp
00000000000342e9	pushq	%r15
00000000000342eb	pushq	%r14
00000000000342ed	pushq	%rbx
00000000000342ee	pushq	%rax
00000000000342ef	movq	%rdx,%r15
00000000000342f2	movq	%rdi,%r14
00000000000342f5	movq	0x00074514(%rip),%rdi
00000000000342fc	leaq	0x00073fdd(%rip),%rsi
0000000000034303	call	*0x00073fd7(%rip)
0000000000034309	movq	0x00070760(%rip),%rsi
0000000000034310	movq	%rax,%rdi
0000000000034313	call	*0x0004fdbf(%rip)
0000000000034319	movq	%rax,%rbx
000000000003431c	movq	0x00071135(%rip),%rsi
0000000000034323	movq	%r14,%rdi
0000000000034326	movq	%rbx,%rdx
0000000000034329	movq	%r15,%rcx
000000000003432c	call	*0x0004fda6(%rip)
0000000000034332	movq	0x0007077f(%rip),%rsi
0000000000034339	movq	%r14,%rdi
000000000003433c	call	*0x0004fd96(%rip)
0000000000034342	movq	0x00070a87(%rip),%rsi
0000000000034349	movq	%rax,%rdi
000000000003434c	call	*0x0004fd86(%rip)
0000000000034352	movq	0x00070a87(%rip),%rsi
0000000000034359	movq	%rax,%rdi
000000000003435c	movq	%rbx,%rdx
000000000003435f	movq	0x0004fd72(%rip),%rax
0000000000034366	addq	$0x08,%rsp
000000000003436a	popq	%rbx
000000000003436b	popq	%r14
000000000003436d	popq	%r15
000000000003436f	popq	%rbp
0000000000034370	jmp	*%rax
-[PBXGDB_DataValueController enqueuePOSequenceForDataValue:]:
0000000000034372	pushq	%rbp
0000000000034373	movq	%rsp,%rbp
0000000000034376	pushq	%r15
0000000000034378	pushq	%r14
000000000003437a	pushq	%rbx
000000000003437b	pushq	%rax
000000000003437c	movq	%rdx,%r15
000000000003437f	movq	%rdi,%r14
0000000000034382	movq	0x0007448f(%rip),%rdi
0000000000034389	leaq	0x00073f50(%rip),%rsi
0000000000034390	call	*0x00073f4a(%rip)
0000000000034396	movq	0x000706d3(%rip),%rsi
000000000003439d	movq	%rax,%rdi
00000000000343a0	call	*0x0004fd32(%rip)
00000000000343a6	movq	%rax,%rbx
00000000000343a9	movq	0x000710a8(%rip),%rsi
00000000000343b0	movq	%r14,%rdi
00000000000343b3	movq	%rbx,%rdx
00000000000343b6	movq	%r15,%rcx
00000000000343b9	call	*0x0004fd19(%rip)
00000000000343bf	movq	0x000706f2(%rip),%rsi
00000000000343c6	movq	%r14,%rdi
00000000000343c9	call	*0x0004fd09(%rip)
00000000000343cf	movq	0x000709fa(%rip),%rsi
00000000000343d6	movq	%rax,%rdi
00000000000343d9	call	*0x0004fcf9(%rip)
00000000000343df	movq	0x000709fa(%rip),%rsi
00000000000343e6	movq	%rax,%rdi
00000000000343e9	movq	%rbx,%rdx
00000000000343ec	movq	0x0004fce5(%rip),%rax
00000000000343f3	addq	$0x08,%rsp
00000000000343f7	popq	%rbx
00000000000343f8	popq	%r14
00000000000343fa	popq	%r15
00000000000343fc	popq	%rbp
00000000000343fd	jmp	*%rax
-[PBXGDB_GetFrameSymbolsDataValueSequence init]:
00000000000343ff	pushq	%rbp
0000000000034400	movq	%rsp,%rbp
0000000000034403	subq	$0x10,%rsp
0000000000034407	movq	%rdi,0xf0(%rbp)
000000000003440b	movq	0x00074986(%rip),%rax
0000000000034412	movq	%rax,0xf8(%rbp)
0000000000034416	movq	0x00070653(%rip),%rsi
000000000003441d	leaq	0xf0(%rbp),%rdi
0000000000034421	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000034426	testq	%rax,%rax
0000000000034429	je	0x00034439
000000000003442b	leaq	0x0007a3fe(%rip),%rcx
0000000000034432	movq	(%rcx),%rcx
0000000000034435	movb	$0x00,(%rax,%rcx)
0000000000034439	addq	$0x10,%rsp
000000000003443d	popq	%rbp
000000000003443e	ret
-[PBXGDB_GetFrameSymbolsDataValueSequence handleErrorForMICommand:]:
000000000003443f	pushq	%rbp
0000000000034440	movq	%rsp,%rbp
0000000000034443	movq	0x0007a4be(%rip),%rax
000000000003444a	cmpb	$0x00,(%rdi,%rax)
000000000003444e	jne	0x00034459
0000000000034450	movq	0x00071909(%rip),%rsi
0000000000034457	jmp	0x00034476
0000000000034459	movq	0x0007a4b0(%rip),%rax
0000000000034460	cmpb	$0x00,(%rdi,%rax)
0000000000034464	jne	0x0003446f
0000000000034466	movq	0x000718fb(%rip),%rsi
000000000003446d	jmp	0x00034476
000000000003446f	movq	0x000706c2(%rip),%rsi
0000000000034476	call	*0x0004fc5c(%rip)
000000000003447c	movl	$0x00000001,%eax
0000000000034481	popq	%rbp
0000000000034482	ret
-[PBXGDB_UpdateDataValueSequence safetyCheckFailed]:
0000000000034483	pushq	%rbp
0000000000034484	movq	%rsp,%rbp
0000000000034487	pushq	%r15
0000000000034489	pushq	%r14
000000000003448b	pushq	%r13
000000000003448d	pushq	%r12
000000000003448f	pushq	%rbx
0000000000034490	subq	$0x000000d8,%rsp
0000000000034497	movq	%rdi,0xffffff08(%rbp)
000000000003449e	movq	0x0004fbfb(%rip),%rax
00000000000344a5	movq	(%rax),%rax
00000000000344a8	movq	%rax,0xd0(%rbp)
00000000000344ac	xorps	%xmm0,%xmm0
00000000000344af	movaps	%xmm0,0xc0(%rbp)
00000000000344b3	movaps	%xmm0,0xb0(%rbp)
00000000000344b7	movaps	%xmm0,0xa0(%rbp)
00000000000344bb	movaps	%xmm0,0x90(%rbp)
00000000000344bf	movq	0x00071142(%rip),%rsi
00000000000344c6	movq	0x0004fc0b(%rip),%rbx
00000000000344cd	call	*%rbx
00000000000344cf	movq	0x000711b2(%rip),%rsi
00000000000344d6	movq	%rax,%rdi
00000000000344d9	call	*%rbx
00000000000344db	movq	%rax,%r12
00000000000344de	leaq	0x00073e9b(%rip),%rsi
00000000000344e5	leaq	0x90(%rbp),%rdx
00000000000344e9	leaq	0xffffff10(%rbp),%rcx
00000000000344f0	movq	%r12,%rdi
00000000000344f3	movl	$0x00000010,%r8d
00000000000344f9	call	*0x00073e81(%rip)
00000000000344ff	movq	%rax,%rbx
0000000000034502	testq	%rbx,%rbx
0000000000034505	je	0x00034584
0000000000034507	movq	0xa0(%rbp),%rax
000000000003450b	movq	(%rax),%r15
000000000003450e	xorl	%r13d,%r13d
0000000000034511	movq	0xa0(%rbp),%rax
0000000000034515	cmpq	%r15,(%rax)
0000000000034518	je	0x00034522
000000000003451a	movq	%r12,%rdi
000000000003451d	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
0000000000034522	movq	0x98(%rbp),%rax
0000000000034526	movq	(%rax,%r13,8),%r14
000000000003452a	movq	%r14,%rdi
000000000003452d	movq	0x00071894(%rip),%rsi
0000000000034534	call	*0x0004fb9e(%rip)
000000000003453a	cmpb	$0x01,%al
000000000003453c	jne	0x00034553
000000000003453e	movq	%r14,%rdi
0000000000034541	movq	0x00071098(%rip),%rsi
0000000000034548	movl	$0x00000003,%edx
000000000003454d	call	*0x0004fb85(%rip)
0000000000034553	incq	%r13
0000000000034556	cmpq	%rbx,%r13
0000000000034559	jb	0x00034511
000000000003455b	movq	%r12,%rdi
000000000003455e	leaq	0x00073e1b(%rip),%rsi
0000000000034565	leaq	0x90(%rbp),%rdx
0000000000034569	leaq	0xffffff10(%rbp),%rcx
0000000000034570	movl	$0x00000010,%r8d
0000000000034576	call	*0x00073e04(%rip)
000000000003457c	movq	%rax,%rbx
000000000003457f	testq	%rbx,%rbx
0000000000034582	jne	0x0003450e
0000000000034584	movq	0x0007148d(%rip),%rsi
000000000003458b	movq	0xffffff08(%rbp),%rdi
0000000000034592	call	*0x0004fb40(%rip)
0000000000034598	movq	0x0004fb01(%rip),%rax
000000000003459f	movq	(%rax),%rax
00000000000345a2	cmpq	0xd0(%rbp),%rax
00000000000345a6	jne	0x000345ba
00000000000345a8	addq	$0x000000d8,%rsp
00000000000345af	popq	%rbx
00000000000345b0	popq	%r12
00000000000345b2	popq	%r13
00000000000345b4	popq	%r14
00000000000345b6	popq	%r15
00000000000345b8	popq	%rbp
00000000000345b9	ret
00000000000345ba	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
-[PBXGDB_DeleteDataValueSequence didFinish]:
00000000000345bf	pushq	%rbp
00000000000345c0	movq	%rsp,%rbp
00000000000345c3	subq	$0x10,%rsp
00000000000345c7	movq	%rdi,0xf0(%rbp)
00000000000345cb	movq	0x000747de(%rip),%rax
00000000000345d2	movq	%rax,0xf8(%rbp)
00000000000345d6	movq	0x0007055b(%rip),%rsi
00000000000345dd	leaq	0xf0(%rbp),%rdi
00000000000345e1	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000345e6	addq	$0x10,%rsp
00000000000345ea	popq	%rbp
00000000000345eb	ret
-[PBXGDB_DeleteDataValueSequence execute]:
00000000000345ec	pushq	%rbp
00000000000345ed	movq	%rsp,%rbp
00000000000345f0	pushq	%r15
00000000000345f2	pushq	%r14
00000000000345f4	pushq	%r12
00000000000345f6	pushq	%rbx
00000000000345f7	movq	%rdi,%r14
00000000000345fa	movq	0x000717e7(%rip),%rsi
0000000000034601	movq	0x0004fad0(%rip),%rbx
0000000000034608	call	*%rbx
000000000003460a	movq	0x000710e7(%rip),%rsi
0000000000034611	movq	%rax,%rdi
0000000000034614	call	*%rbx
0000000000034616	movq	%rax,%r15
0000000000034619	testq	%r15,%r15
000000000003461c	je	0x00034659
000000000003461e	movq	0x0007045b(%rip),%rsi
0000000000034625	movq	0x00074214(%rip),%rdi
000000000003462c	movq	0x0004faa5(%rip),%r12
0000000000034633	call	*%r12
0000000000034636	movq	%rax,%rbx
0000000000034639	movq	0x00071018(%rip),%rsi
0000000000034640	movq	%rbx,%rdi
0000000000034643	movq	%r15,%rdx
0000000000034646	call	*%r12
0000000000034649	movq	0x00070ff0(%rip),%rsi
0000000000034650	movq	%r14,%rdi
0000000000034653	movq	%rbx,%rdx
0000000000034656	call	*%r12
0000000000034659	movq	0x000704d8(%rip),%rsi
0000000000034660	movq	%r14,%rdi
0000000000034663	popq	%rbx
0000000000034664	popq	%r12
0000000000034666	popq	%r14
0000000000034668	popq	%r15
000000000003466a	popq	%rbp
000000000003466b	jmp	*0x0004fa67(%rip)
-[PBXGDB_DeleteDataValueChildrenSequence _gotDeletedChildrenOfVarObj:]:
0000000000034671	pushq	%rbp
0000000000034672	movq	%rsp,%rbp
0000000000034675	movq	0x000704bc(%rip),%rsi
000000000003467c	popq	%rbp
000000000003467d	jmp	*0x0004fa55(%rip)
-[PBXGDB_DeleteDataValueChildrenSequence setFreeVarObjs:]:
0000000000034683	pushq	%rbp
0000000000034684	movq	%rsp,%rbp
0000000000034687	movq	0x0007a28a(%rip),%rax
000000000003468e	movb	%dl,(%rdi,%rax)
0000000000034691	popq	%rbp
0000000000034692	ret
-[PBXGDB_DeleteDataValueChildrenSequence freeVarObjs]:
0000000000034693	pushq	%rbp
0000000000034694	movq	%rsp,%rbp
0000000000034697	movq	0x0007a27a(%rip),%rax
000000000003469e	movsbl	(%rdi,%rax),%eax
00000000000346a2	popq	%rbp
00000000000346a3	ret
-[PBXGDB_DeleteDataValueChildrenSequence execute]:
00000000000346a4	pushq	%rbp
00000000000346a5	movq	%rsp,%rbp
00000000000346a8	pushq	%r15
00000000000346aa	pushq	%r14
00000000000346ac	pushq	%rbx
00000000000346ad	pushq	%rax
00000000000346ae	movq	%rdi,%r14
00000000000346b1	movq	0x00071748(%rip),%rsi
00000000000346b8	call	*0x0004fa1a(%rip)
00000000000346be	testb	%al,%al
00000000000346c0	je	0x0003475d
00000000000346c6	movq	0x0007171b(%rip),%rsi
00000000000346cd	movq	0x0004fa04(%rip),%rbx
00000000000346d4	movq	%r14,%rdi
00000000000346d7	call	*%rbx
00000000000346d9	movq	0x00071018(%rip),%rsi
00000000000346e0	movq	%rax,%rdi
00000000000346e3	call	*%rbx
00000000000346e5	movq	%rax,%r15
00000000000346e8	movq	0x00070391(%rip),%rsi
00000000000346ef	movq	0x00074152(%rip),%rdi
00000000000346f6	call	*%rbx
00000000000346f8	movq	%rax,%rbx
00000000000346fb	testq	%r15,%r15
00000000000346fe	je	0x00034777
0000000000034700	movq	0x00070f51(%rip),%rsi
0000000000034707	movq	%rbx,%rdi
000000000003470a	movq	%r15,%rdx
000000000003470d	call	*0x0004f9c5(%rip)
0000000000034713	movq	0x0007036e(%rip),%rsi
000000000003471a	movq	%rbx,%rdi
000000000003471d	movq	%r14,%rdx
0000000000034720	call	*0x0004f9b2(%rip)
0000000000034726	movq	0x0007036b(%rip),%rsi
000000000003472d	movq	0x000716d4(%rip),%rdx
0000000000034734	movq	%rbx,%rdi
0000000000034737	call	*0x0004f99b(%rip)
000000000003473d	movq	0x00070efc(%rip),%rsi
0000000000034744	movq	%r14,%rdi
0000000000034747	movq	%rbx,%rdx
000000000003474a	movq	0x0004f987(%rip),%rax
0000000000034751	addq	$0x08,%rsp
0000000000034755	popq	%rbx
0000000000034756	popq	%r14
0000000000034758	popq	%r15
000000000003475a	popq	%rbp
000000000003475b	jmp	*%rax
000000000003475d	movq	0x000703d4(%rip),%rsi
0000000000034764	movq	%r14,%rdi
0000000000034767	addq	$0x08,%rsp
000000000003476b	popq	%rbx
000000000003476c	popq	%r14
000000000003476e	popq	%r15
0000000000034770	popq	%rbp
0000000000034771	jmp	*0x0004f961(%rip)
0000000000034777	addq	$0x08,%rsp
000000000003477b	popq	%rbx
000000000003477c	popq	%r14
000000000003477e	popq	%r15
0000000000034780	popq	%rbp
0000000000034781	ret
-[PBXGDB_SetValueForDataValueSequence init]:
0000000000034782	pushq	%rbp
0000000000034783	movq	%rsp,%rbp
0000000000034786	subq	$0x10,%rsp
000000000003478a	movq	%rdi,0xf0(%rbp)
000000000003478e	movq	0x00074623(%rip),%rax
0000000000034795	movq	%rax,0xf8(%rbp)
0000000000034799	movq	0x000702d0(%rip),%rsi
00000000000347a0	leaq	0xf0(%rbp),%rdi
00000000000347a4	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000347a9	testq	%rax,%rax
00000000000347ac	je	0x000347bc
00000000000347ae	leaq	0x0007a07b(%rip),%rcx
00000000000347b5	movq	(%rcx),%rcx
00000000000347b8	movb	$0x00,(%rax,%rcx)
00000000000347bc	addq	$0x10,%rsp
00000000000347c0	popq	%rbp
00000000000347c1	ret
-[PBXGDB_SetValueForDataValueSequence dealloc]:
00000000000347c2	pushq	%rbp
00000000000347c3	movq	%rsp,%rbp
00000000000347c6	movq	0x00070df3(%rip),%rsi
00000000000347cd	xorl	%edx,%edx
00000000000347cf	popq	%rbp
00000000000347d0	jmp	*0x0004f902(%rip)
-[PBXGDB_SetValueForDataValueSequence setStringValue:]:
00000000000347d6	pushq	%rbp
00000000000347d7	movq	%rsp,%rbp
00000000000347da	movq	%rdx,%rax
00000000000347dd	movq	%rdi,%rcx
00000000000347e0	movq	0x0007a139(%rip),%rdx
00000000000347e7	cmpq	%rax,(%rcx,%rdx)
00000000000347eb	jne	0x000347ef
00000000000347ed	popq	%rbp
00000000000347ee	ret
00000000000347ef	addq	%rcx,%rdx
00000000000347f2	subq	%rcx,%rdx
00000000000347f5	movq	%rax,%rdi
00000000000347f8	movq	%rcx,%rsi
00000000000347fb	popq	%rbp
00000000000347fc	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_SetValueForDataValueSequence stringValue]:
0000000000034801	pushq	%rbp
0000000000034802	movq	%rsp,%rbp
0000000000034805	movq	0x0007a114(%rip),%rax
000000000003480c	movq	(%rdi,%rax),%rax
0000000000034810	popq	%rbp
0000000000034811	ret
-[PBXGDB_SetValueForDataValueSequence didFinish]:
0000000000034812	pushq	%rbp
0000000000034813	movq	%rsp,%rbp
0000000000034816	pushq	%r14
0000000000034818	pushq	%rbx
0000000000034819	subq	$0x10,%rsp
000000000003481d	movq	%rdi,%rbx
0000000000034820	movq	0x00070de1(%rip),%rsi
0000000000034827	movq	0x0004f8aa(%rip),%r14
000000000003482e	call	*%r14
0000000000034831	movq	0x000715d8(%rip),%rsi
0000000000034838	movq	%rax,%rdi
000000000003483b	call	*%r14
000000000003483e	movq	%rbx,0xe0(%rbp)
0000000000034842	leaq	0xe0(%rbp),%rdi
0000000000034846	movq	0x0007456b(%rip),%rax
000000000003484d	movq	%rax,0xe8(%rbp)
0000000000034851	movq	0x000702e0(%rip),%rsi
0000000000034858	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000003485d	addq	$0x10,%rsp
0000000000034861	popq	%rbx
0000000000034862	popq	%r14
0000000000034864	popq	%rbp
0000000000034865	ret
-[PBXGDB_SetValueForDataValueSequence _gotResultSetValue:]:
0000000000034866	pushq	%rbp
0000000000034867	movq	%rsp,%rbp
000000000003486a	pushq	%r15
000000000003486c	pushq	%r14
000000000003486e	pushq	%rbx
000000000003486f	subq	$0x38,%rsp
0000000000034873	movq	%rdx,%r14
0000000000034876	movq	%rdi,0xe0(%rbp)
000000000003487a	movq	%rsi,0xd8(%rbp)
000000000003487e	testq	%r14,%r14
0000000000034881	jne	0x000348e9
0000000000034883	movq	0x00073fc6(%rip),%rdi
000000000003488a	leaq	0x00073a9f(%rip),%rsi
0000000000034891	call	*0x00073a99(%rip)
0000000000034897	movq	%rax,%rdi
000000000003489a	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000003489f	leaq	0xe0(%rbp),%rdi
00000000000348a3	leaq	0xd8(%rbp),%rsi
00000000000348a7	leaq	0x00029e6a(%rip),%rdx
00000000000348ae	leaq	0x00029b08(%rip),%rcx
00000000000348b5	leaq	0x0007b0fc(%rip),%r9
00000000000348bc	leaq	0x0002923d(%rip),%r8
00000000000348c3	leaq	0x0002923a(%rip),%rbx
00000000000348ca	movq	%rbx,0x18(%rsp)
00000000000348cf	leaq	0x0007af62(%rip),%rbx
00000000000348d6	movq	%rbx,0x10(%rsp)
00000000000348db	movq	%rax,0x08(%rsp)
00000000000348e0	movq	%r8,(%rsp)
00000000000348e4	jmp	0x00034991
00000000000348e9	movq	0x00073f60(%rip),%rdi
00000000000348f0	leaq	0x00073a39(%rip),%rsi
00000000000348f7	call	*0x00073a33(%rip)
00000000000348fd	leaq	0x00073a3c(%rip),%rsi
0000000000034904	movq	%r14,%rdi
0000000000034907	movq	%rax,%rdx
000000000003490a	call	*0x00073a30(%rip)
0000000000034910	testb	%al,%al
0000000000034912	jne	0x0003499e
0000000000034918	movq	0x00073f31(%rip),%rdi
000000000003491f	leaq	0x00073a0a(%rip),%rsi
0000000000034926	call	*0x00073a04(%rip)
000000000003492c	movq	%rax,%rdi
000000000003492f	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000034934	movq	%rax,%rbx
0000000000034937	movq	0x00070322(%rip),%rsi
000000000003493e	movq	%r14,%rdi
0000000000034941	call	*0x0004f791(%rip)
0000000000034947	leaq	0x0007aeea(%rip),%r8
000000000003494e	leaq	0x00029dfe(%rip),%r9
0000000000034955	leaq	0xe0(%rbp),%rdi
0000000000034959	leaq	0xd8(%rbp),%rsi
000000000003495d	leaq	0x00029db4(%rip),%rdx
0000000000034964	leaq	0x00029a52(%rip),%rcx
000000000003496b	movq	%r9,0x20(%rsp)
0000000000034970	leaq	0x0007b061(%rip),%r9
0000000000034977	movq	%r8,0x18(%rsp)
000000000003497c	movq	%rax,0x10(%rsp)
0000000000034981	leaq	0x00029178(%rip),%rax
0000000000034988	movq	%rbx,0x08(%rsp)
000000000003498d	movq	%rax,(%rsp)
0000000000034991	movl	$0x0000023b,%r8d
0000000000034997	xorb	%al,%al
0000000000034999	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000003499e	movq	0x00070c63(%rip),%rsi
00000000000349a5	movq	0xe0(%rbp),%rdi
00000000000349a9	movq	0x0004f728(%rip),%r15
00000000000349b0	call	*%r15
00000000000349b3	movq	%rax,%rbx
00000000000349b6	movq	0x00070cab(%rip),%rsi
00000000000349bd	movq	%r14,%rdi
00000000000349c0	call	*%r15
00000000000349c3	movq	0x00070bf6(%rip),%rsi
00000000000349ca	movq	%rbx,%rdi
00000000000349cd	movq	%rax,%rdx
00000000000349d0	call	*%r15
00000000000349d3	movq	0x0007015e(%rip),%rsi
00000000000349da	movq	0xe0(%rbp),%rdi
00000000000349de	call	*%r15
00000000000349e1	addq	$0x38,%rsp
00000000000349e5	popq	%rbx
00000000000349e6	popq	%r14
00000000000349e8	popq	%r15
00000000000349ea	popq	%rbp
00000000000349eb	ret
-[PBXGDB_SetValueForDataValueSequence execute]:
00000000000349ec	pushq	%rbp
00000000000349ed	movq	%rsp,%rbp
00000000000349f0	pushq	%r15
00000000000349f2	pushq	%r14
00000000000349f4	pushq	%rbx
00000000000349f5	pushq	%rax
00000000000349f6	movq	%rdi,%r14
00000000000349f9	movq	0x00070080(%rip),%rsi
0000000000034a00	movq	0x00073e49(%rip),%rdi
0000000000034a07	call	*0x0004f6cb(%rip)
0000000000034a0d	movq	%rax,%rbx
0000000000034a10	movq	0x000713d1(%rip),%rsi
0000000000034a17	movq	%r14,%rdi
0000000000034a1a	call	*0x0004f6b8(%rip)
0000000000034a20	movq	0x00070cd1(%rip),%rsi
0000000000034a27	movq	%rax,%rdi
0000000000034a2a	call	*0x0004f6a8(%rip)
0000000000034a30	movq	%rax,%r15
0000000000034a33	movq	0x000700ce(%rip),%rsi
0000000000034a3a	movq	%r14,%rdi
0000000000034a3d	call	*0x0004f695(%rip)
0000000000034a43	movq	0x000713ce(%rip),%rsi
0000000000034a4a	movq	%rbx,%rdi
0000000000034a4d	movq	%r15,%rdx
0000000000034a50	movq	%rax,%rcx
0000000000034a53	call	*0x0004f67f(%rip)
0000000000034a59	movq	0x00070028(%rip),%rsi
0000000000034a60	movq	%rbx,%rdi
0000000000034a63	movq	%r14,%rdx
0000000000034a66	call	*0x0004f66c(%rip)
0000000000034a6c	movq	0x00070025(%rip),%rsi
0000000000034a73	movq	0x000713a6(%rip),%rdx
0000000000034a7a	movq	%rbx,%rdi
0000000000034a7d	call	*0x0004f655(%rip)
0000000000034a83	movq	0x00070bb6(%rip),%rsi
0000000000034a8a	movq	%r14,%rdi
0000000000034a8d	movq	%rbx,%rdx
0000000000034a90	movq	0x0004f641(%rip),%rax
0000000000034a97	addq	$0x08,%rsp
0000000000034a9b	popq	%rbx
0000000000034a9c	popq	%r14
0000000000034a9e	popq	%r15
0000000000034aa0	popq	%rbp
0000000000034aa1	jmp	*%rax
-[PBXGDB_SetFormatForDataValueSequence setValueFormat:]:
0000000000034aa3	pushq	%rbp
0000000000034aa4	movq	%rsp,%rbp
0000000000034aa7	movq	0x00079e7a(%rip),%rax
0000000000034aae	movl	%edx,(%rdi,%rax)
0000000000034ab1	popq	%rbp
0000000000034ab2	ret
-[PBXGDB_SetFormatForDataValueSequence format]:
0000000000034ab3	pushq	%rbp
0000000000034ab4	movq	%rsp,%rbp
0000000000034ab7	movq	0x00079e6a(%rip),%rax
0000000000034abe	movl	(%rdi,%rax),%eax
0000000000034ac1	popq	%rbp
0000000000034ac2	ret
-[PBXGDB_SetFormatForDataValueSequence didFinish]:
0000000000034ac3	pushq	%rbp
0000000000034ac4	movq	%rsp,%rbp
0000000000034ac7	pushq	%r14
0000000000034ac9	pushq	%rbx
0000000000034aca	subq	$0x10,%rsp
0000000000034ace	movq	%rdi,%rbx
0000000000034ad1	movq	0x00070b30(%rip),%rsi
0000000000034ad8	movq	0x0004f5f9(%rip),%r14
0000000000034adf	call	*%r14
0000000000034ae2	movq	0x000712ef(%rip),%rsi
0000000000034ae9	movq	%rax,%rdi
0000000000034aec	call	*%r14
0000000000034aef	movq	0x00070b12(%rip),%rsi
0000000000034af6	movq	%rbx,%rdi
0000000000034af9	call	*%r14
0000000000034afc	movq	0x00070bed(%rip),%rsi
0000000000034b03	movq	%rax,%rdi
0000000000034b06	call	*%r14
0000000000034b09	leaq	0xe0(%rbp),%rdi
0000000000034b0d	movq	%rbx,0xe0(%rbp)
0000000000034b11	movq	0x000742a8(%rip),%rax
0000000000034b18	movq	%rax,0xe8(%rbp)
0000000000034b1c	movq	0x00070015(%rip),%rsi
0000000000034b23	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000034b28	addq	$0x10,%rsp
0000000000034b2c	popq	%rbx
0000000000034b2d	popq	%r14
0000000000034b2f	popq	%rbp
0000000000034b30	ret
-[PBXGDB_SetFormatForDataValueSequence _gotResultSetFormat:]:
0000000000034b31	pushq	%rbp
0000000000034b32	movq	%rsp,%rbp
0000000000034b35	pushq	%r15
0000000000034b37	pushq	%r14
0000000000034b39	pushq	%rbx
0000000000034b3a	subq	$0x38,%rsp
0000000000034b3e	movq	%rdx,%rbx
0000000000034b41	movq	%rdi,0xe0(%rbp)
0000000000034b45	movq	%rsi,0xd8(%rbp)
0000000000034b49	testq	%rbx,%rbx
0000000000034b4c	jne	0x00034bb4
0000000000034b4e	movq	0x00073d03(%rip),%rdi
0000000000034b55	leaq	0x000737d4(%rip),%rsi
0000000000034b5c	call	*0x000737ce(%rip)
0000000000034b62	movq	%rax,%rdi
0000000000034b65	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000034b6a	leaq	0xe0(%rbp),%rdi
0000000000034b6e	leaq	0xd8(%rbp),%rsi
0000000000034b72	leaq	0x00029c1b(%rip),%rdx
0000000000034b79	leaq	0x0002983d(%rip),%rcx
0000000000034b80	leaq	0x0007ae31(%rip),%r9
0000000000034b87	leaq	0x00028f72(%rip),%r8
0000000000034b8e	leaq	0x00028f6f(%rip),%rbx
0000000000034b95	movq	%rbx,0x18(%rsp)
0000000000034b9a	leaq	0x0007ac97(%rip),%rbx
0000000000034ba1	movq	%rbx,0x10(%rsp)
0000000000034ba6	movq	%rax,0x08(%rsp)
0000000000034bab	movq	%r8,(%rsp)
0000000000034baf	jmp	0x00034c5c
0000000000034bb4	movq	0x00073c9d(%rip),%rdi
0000000000034bbb	leaq	0x0007376e(%rip),%rsi
0000000000034bc2	call	*0x00073768(%rip)
0000000000034bc8	leaq	0x00073771(%rip),%rsi
0000000000034bcf	movq	%rbx,%rdi
0000000000034bd2	movq	%rax,%rdx
0000000000034bd5	call	*0x00073765(%rip)
0000000000034bdb	testb	%al,%al
0000000000034bdd	jne	0x00034c69
0000000000034be3	movq	0x00073c6e(%rip),%rdi
0000000000034bea	leaq	0x0007373f(%rip),%rsi
0000000000034bf1	call	*0x00073739(%rip)
0000000000034bf7	movq	%rax,%rdi
0000000000034bfa	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000034bff	movq	%rax,%r14
0000000000034c02	movq	0x00070057(%rip),%rsi
0000000000034c09	movq	%rbx,%rdi
0000000000034c0c	call	*0x0004f4c6(%rip)
0000000000034c12	leaq	0x00029bb8(%rip),%rbx
0000000000034c19	leaq	0xe0(%rbp),%rdi
0000000000034c1d	leaq	0xd8(%rbp),%rsi
0000000000034c21	leaq	0x00029b6c(%rip),%rdx
0000000000034c28	leaq	0x0002978e(%rip),%rcx
0000000000034c2f	leaq	0x0007ada2(%rip),%r9
0000000000034c36	movq	%rbx,0x20(%rsp)
0000000000034c3b	leaq	0x0007abf6(%rip),%rbx
0000000000034c42	movq	%rbx,0x18(%rsp)
0000000000034c47	leaq	0x00028eb2(%rip),%rbx
0000000000034c4e	movq	%rax,0x10(%rsp)
0000000000034c53	movq	%r14,0x08(%rsp)
0000000000034c58	movq	%rbx,(%rsp)
0000000000034c5c	movl	$0x00000269,%r8d
0000000000034c62	xorb	%al,%al
0000000000034c64	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000034c69	movq	0x00070998(%rip),%rsi
0000000000034c70	movq	0xe0(%rbp),%rdi
0000000000034c74	call	*0x0004f45e(%rip)
0000000000034c7a	movq	0xe0(%rbp),%rbx
0000000000034c7e	testq	%rax,%rax
0000000000034c81	je	0x00034cc0
0000000000034c83	movq	0x000739d6(%rip),%r14
0000000000034c8a	movq	0x00070977(%rip),%rsi
0000000000034c91	movq	0x0004f440(%rip),%r15
0000000000034c98	movq	%rbx,%rdi
0000000000034c9b	call	*%r15
0000000000034c9e	movq	0x0007085b(%rip),%rsi
0000000000034ca5	movq	%r14,%rdi
0000000000034ca8	movq	%rax,%rdx
0000000000034cab	call	*%r15
0000000000034cae	movq	0x00070a73(%rip),%rsi
0000000000034cb5	movq	%rbx,%rdi
0000000000034cb8	movq	%rax,%rdx
0000000000034cbb	call	*%r15
0000000000034cbe	jmp	0x00034cd0
0000000000034cc0	movq	0x0006fe71(%rip),%rsi
0000000000034cc7	movq	%rbx,%rdi
0000000000034cca	call	*0x0004f408(%rip)
0000000000034cd0	addq	$0x38,%rsp
0000000000034cd4	popq	%rbx
0000000000034cd5	popq	%r14
0000000000034cd7	popq	%r15
0000000000034cd9	popq	%rbp
0000000000034cda	ret
-[PBXGDB_SetFormatForDataValueSequence execute]:
0000000000034cdb	pushq	%rbp
0000000000034cdc	movq	%rsp,%rbp
0000000000034cdf	pushq	%r15
0000000000034ce1	pushq	%r14
0000000000034ce3	pushq	%rbx
0000000000034ce4	pushq	%rax
0000000000034ce5	movq	%rdi,%r14
0000000000034ce8	movq	0x0006fd91(%rip),%rsi
0000000000034cef	movq	0x00073b62(%rip),%rdi
0000000000034cf6	call	*0x0004f3dc(%rip)
0000000000034cfc	movq	%rax,%rbx
0000000000034cff	movq	0x000710e2(%rip),%rsi
0000000000034d06	movq	%r14,%rdi
0000000000034d09	call	*0x0004f3c9(%rip)
0000000000034d0f	movq	0x000709e2(%rip),%rsi
0000000000034d16	movq	%rax,%rdi
0000000000034d19	call	*0x0004f3b9(%rip)
0000000000034d1f	movq	%rax,%r15
0000000000034d22	movq	0x000710ff(%rip),%rsi
0000000000034d29	movq	%r14,%rdi
0000000000034d2c	call	*0x0004f3a6(%rip)
0000000000034d32	movq	0x000710f7(%rip),%rsi
0000000000034d39	movq	%rbx,%rdi
0000000000034d3c	movq	%r15,%rdx
0000000000034d3f	movl	%eax,%ecx
0000000000034d41	call	*0x0004f391(%rip)
0000000000034d47	movq	0x0006fd3a(%rip),%rsi
0000000000034d4e	movq	%rbx,%rdi
0000000000034d51	movq	%r14,%rdx
0000000000034d54	call	*0x0004f37e(%rip)
0000000000034d5a	movq	0x0006fd37(%rip),%rsi
0000000000034d61	movq	0x000710d0(%rip),%rdx
0000000000034d68	movq	%rbx,%rdi
0000000000034d6b	call	*0x0004f367(%rip)
0000000000034d71	movq	0x000708c8(%rip),%rsi
0000000000034d78	movq	%r14,%rdi
0000000000034d7b	movq	%rbx,%rdx
0000000000034d7e	movq	0x0004f353(%rip),%rax
0000000000034d85	addq	$0x08,%rsp
0000000000034d89	popq	%rbx
0000000000034d8a	popq	%r14
0000000000034d8c	popq	%r15
0000000000034d8e	popq	%rbp
0000000000034d8f	jmp	*%rax
-[PBXGDB_SetDataValueForExpressionSequence dealloc]:
0000000000034d91	pushq	%rbp
0000000000034d92	movq	%rsp,%rbp
0000000000034d95	pushq	%rbx
0000000000034d96	pushq	%rax
0000000000034d97	movq	%rdi,%rbx
0000000000034d9a	movq	0x00070faf(%rip),%rsi
0000000000034da1	xorl	%edx,%edx
0000000000034da3	xorl	%ecx,%ecx
0000000000034da5	call	*0x0004f32d(%rip)
0000000000034dab	movq	0x0007108e(%rip),%rsi
0000000000034db2	movq	%rbx,%rdi
0000000000034db5	xorl	%edx,%edx
0000000000034db7	movq	0x0004f31a(%rip),%rax
0000000000034dbe	addq	$0x08,%rsp
0000000000034dc2	popq	%rbx
0000000000034dc3	popq	%rbp
0000000000034dc4	jmp	*%rax
-[PBXGDB_CloneDataValueByPathExpression _createDVFromPathExpression]:
0000000000034dc6	pushq	%rbp
0000000000034dc7	movq	%rsp,%rbp
0000000000034dca	pushq	%r14
0000000000034dcc	pushq	%rbx
0000000000034dcd	movq	%rdi,%r14
0000000000034dd0	movq	0x0006fca9(%rip),%rsi
0000000000034dd7	movq	0x000738b2(%rip),%rdi
0000000000034dde	call	*0x0004f2f4(%rip)
0000000000034de4	movq	%rax,%rbx
0000000000034de7	movq	0x0007069a(%rip),%rsi
0000000000034dee	movq	%r14,%rdi
0000000000034df1	call	*0x0004f2e1(%rip)
0000000000034df7	movq	0x00070832(%rip),%rsi
0000000000034dfe	movq	%rbx,%rdi
0000000000034e01	movq	%rax,%rdx
0000000000034e04	movl	$0x00000001,%ecx
0000000000034e09	call	*0x0004f2c9(%rip)
0000000000034e0f	movq	0x0006fc72(%rip),%rsi
0000000000034e16	movq	%rbx,%rdi
0000000000034e19	movq	%r14,%rdx
0000000000034e1c	call	*0x0004f2b6(%rip)
0000000000034e22	movq	0x0006fc6f(%rip),%rsi
0000000000034e29	movq	0x00071040(%rip),%rdx
0000000000034e30	movq	%rbx,%rdi
0000000000034e33	call	*0x0004f29f(%rip)
0000000000034e39	movq	0x00070800(%rip),%rsi
0000000000034e40	movq	%r14,%rdi
0000000000034e43	movq	%rbx,%rdx
0000000000034e46	movq	0x0004f28b(%rip),%rax
0000000000034e4d	popq	%rbx
0000000000034e4e	popq	%r14
0000000000034e50	popq	%rbp
0000000000034e51	jmp	*%rax
-[PBXGDB_CloneDataValueByPathExpression setDVToClone:]:
0000000000034e53	pushq	%rbp
0000000000034e54	movq	%rsp,%rbp
0000000000034e57	movq	%rdx,%rax
0000000000034e5a	movq	%rdi,%rcx
0000000000034e5d	movq	0x00079ae4(%rip),%rdx
0000000000034e64	movq	%rax,%rdi
0000000000034e67	movq	%rcx,%rsi
0000000000034e6a	popq	%rbp
0000000000034e6b	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_CloneDataValueByPathExpression dvToClone]:
0000000000034e70	pushq	%rbp
0000000000034e71	movq	%rsp,%rbp
0000000000034e74	movq	0x00079acd(%rip),%rax
0000000000034e7b	movq	(%rdi,%rax),%rax
0000000000034e7f	popq	%rbp
0000000000034e80	ret
-[PBXGDB_CloneDataValueByPathExpression didGetPathExpression]:
0000000000034e81	pushq	%rbp
0000000000034e82	movq	%rsp,%rbp
0000000000034e85	pushq	%rbx
0000000000034e86	pushq	%rax
0000000000034e87	movq	%rdi,%rbx
0000000000034e8a	movq	0x00070fe7(%rip),%rsi
0000000000034e91	call	*0x0004f241(%rip)
0000000000034e97	movq	0x00070772(%rip),%rsi
0000000000034e9e	movq	%rax,%rdi
0000000000034ea1	call	*0x0004f231(%rip)
0000000000034ea7	movq	0x00070ea2(%rip),%rsi
0000000000034eae	movq	%rbx,%rdi
0000000000034eb1	movq	%rax,%rdx
0000000000034eb4	xorl	%ecx,%ecx
0000000000034eb6	call	*0x0004f21c(%rip)
0000000000034ebc	movq	0x00070fbd(%rip),%rsi
0000000000034ec3	movq	%rbx,%rdi
0000000000034ec6	movq	0x0004f20b(%rip),%rax
0000000000034ecd	addq	$0x08,%rsp
0000000000034ed1	popq	%rbx
0000000000034ed2	popq	%rbp
0000000000034ed3	jmp	*%rax
-[PBXGDB_CloneDataValueByPathExpression execute]:
0000000000034ed5	pushq	%rbp
0000000000034ed6	movq	%rsp,%rbp
0000000000034ed9	pushq	%r15
0000000000034edb	pushq	%r14
0000000000034edd	pushq	%rbx
0000000000034ede	pushq	%rax
0000000000034edf	movq	%rdi,%rbx
0000000000034ee2	movq	0x00070f8f(%rip),%rsi
0000000000034ee9	movq	0x0004f1e8(%rip),%r15
0000000000034ef0	call	*%r15
0000000000034ef3	movq	%rax,%r14
0000000000034ef6	movq	0x00070713(%rip),%rsi
0000000000034efd	movq	%r14,%rdi
0000000000034f00	call	*%r15
0000000000034f03	testq	%rax,%rax
0000000000034f06	je	0x00034f3a
0000000000034f08	movq	0x00070e41(%rip),%rsi
0000000000034f0f	movq	%rbx,%rdi
0000000000034f12	movq	%rax,%rdx
0000000000034f15	xorl	%ecx,%ecx
0000000000034f17	call	*0x0004f1bb(%rip)
0000000000034f1d	movq	0x00070f5c(%rip),%rsi
0000000000034f24	movq	%rbx,%rdi
0000000000034f27	movq	0x0004f1aa(%rip),%rax
0000000000034f2e	addq	$0x08,%rsp
0000000000034f32	popq	%rbx
0000000000034f33	popq	%r14
0000000000034f35	popq	%r15
0000000000034f37	popq	%rbp
0000000000034f38	jmp	*%rax
0000000000034f3a	movq	0x00070f47(%rip),%rsi
0000000000034f41	movq	%rbx,%rdi
0000000000034f44	movq	%r14,%rdx
0000000000034f47	addq	$0x08,%rsp
0000000000034f4b	popq	%rbx
0000000000034f4c	popq	%r14
0000000000034f4e	popq	%r15
0000000000034f50	popq	%rbp
0000000000034f51	jmp	*0x0004f181(%rip)
-[PBXGDB_GetPathExpressionSequence init]:
0000000000034f57	pushq	%rbp
0000000000034f58	movq	%rsp,%rbp
0000000000034f5b	subq	$0x10,%rsp
0000000000034f5f	movq	%rdi,0xf0(%rbp)
0000000000034f63	movq	0x00073e66(%rip),%rax
0000000000034f6a	movq	%rax,0xf8(%rbp)
0000000000034f6e	movq	0x0006fafb(%rip),%rsi
0000000000034f75	leaq	0xf0(%rbp),%rdi
0000000000034f79	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000034f7e	testq	%rax,%rax
0000000000034f81	je	0x00034f91
0000000000034f83	leaq	0x000798a6(%rip),%rcx
0000000000034f8a	movq	(%rcx),%rcx
0000000000034f8d	movb	$0x00,(%rax,%rcx)
0000000000034f91	addq	$0x10,%rsp
0000000000034f95	popq	%rbp
0000000000034f96	ret
-[PBXGDB_GetPathExpressionSequence setViewAsMemory:]:
0000000000034f97	pushq	%rbp
0000000000034f98	movq	%rsp,%rbp
0000000000034f9b	movq	0x000799ae(%rip),%rax
0000000000034fa2	movb	%dl,(%rdi,%rax)
0000000000034fa5	popq	%rbp
0000000000034fa6	ret
-[PBXGDB_PrintDescriptionSafeSequence needsEvaluationSafetyCheck]:
0000000000034fa7	pushq	%rbp
0000000000034fa8	movq	%rsp,%rbp
0000000000034fab	xorl	%eax,%eax
0000000000034fad	popq	%rbp
0000000000034fae	ret
-[PBXGDB_PrintDescriptionSafeSequence execute]:
0000000000034faf	pushq	%rbp
0000000000034fb0	movq	%rsp,%rbp
0000000000034fb3	pushq	%r15
0000000000034fb5	pushq	%r14
0000000000034fb7	pushq	%rbx
0000000000034fb8	pushq	%rax
0000000000034fb9	movq	%rdi,%r14
0000000000034fbc	movq	0x0006fabd(%rip),%rsi
0000000000034fc3	movq	0x00073676(%rip),%rdi
0000000000034fca	call	*0x0004f108(%rip)
0000000000034fd0	movq	%rax,%rbx
0000000000034fd3	movq	0x00073476(%rip),%r15
0000000000034fda	movq	0x00070627(%rip),%rsi
0000000000034fe1	movq	%r14,%rdi
0000000000034fe4	call	*0x0004f0ee(%rip)
0000000000034fea	movq	0x0006fb17(%rip),%rsi
0000000000034ff1	movq	%rax,%rdi
0000000000034ff4	call	*0x0004f0de(%rip)
0000000000034ffa	leaq	0x0007c097(%rip),%rdx
0000000000035001	movq	0x0006fb70(%rip),%rsi
0000000000035008	movq	%r15,%rdi
000000000003500b	movq	%rax,%rcx
000000000003500e	xorb	%al,%al
0000000000035010	call	*0x0004f0c2(%rip)
0000000000035016	movq	0x000703d3(%rip),%rsi
000000000003501d	movq	%rbx,%rdi
0000000000035020	movq	%rax,%rdx
0000000000035023	call	*0x0004f0af(%rip)
0000000000035029	movq	0x0006fa58(%rip),%rsi
0000000000035030	movq	%rbx,%rdi
0000000000035033	movq	%r14,%rdx
0000000000035036	call	*0x0004f09c(%rip)
000000000003503c	movq	0x0006fa55(%rip),%rsi
0000000000035043	movq	0x00070e46(%rip),%rdx
000000000003504a	movq	%rbx,%rdi
000000000003504d	call	*0x0004f085(%rip)
0000000000035053	movq	0x000705e6(%rip),%rsi
000000000003505a	movq	%r14,%rdi
000000000003505d	movq	%rbx,%rdx
0000000000035060	movq	0x0004f071(%rip),%rax
0000000000035067	addq	$0x08,%rsp
000000000003506b	popq	%rbx
000000000003506c	popq	%r14
000000000003506e	popq	%r15
0000000000035070	popq	%rbp
0000000000035071	jmp	*%rax
-[PBXGDB_PrintDescriptionSafeSequence didPrintDescription:]:
0000000000035073	pushq	%rbp
0000000000035074	movq	%rsp,%rbp
0000000000035077	movq	0x0006faba(%rip),%rsi
000000000003507e	popq	%rbp
000000000003507f	jmp	*0x0004f053(%rip)
-[PBXGDB_PrintDescriptionSafeSequence handleErrorForMICommand:]:
0000000000035085	pushq	%rbp
0000000000035086	movq	%rsp,%rbp
0000000000035089	pushq	%r15
000000000003508b	pushq	%r14
000000000003508d	pushq	%rbx
000000000003508e	pushq	%rax
000000000003508f	movq	%rdi,%r14
0000000000035092	movq	0x00070b7f(%rip),%rsi
0000000000035099	movq	0x0004f038(%rip),%rbx
00000000000350a0	movq	%rdx,%rdi
00000000000350a3	call	*%rbx
00000000000350a5	movq	0x0007023c(%rip),%rsi
00000000000350ac	leaq	0x0007c005(%rip),%rdx
00000000000350b3	movq	%rax,%rdi
00000000000350b6	call	*%rbx
00000000000350b8	testb	%al,%al
00000000000350ba	je	0x000350c0
00000000000350bc	xorb	%bl,%bl
00000000000350be	jmp	0x000350ff
00000000000350c0	movq	0x0006fc29(%rip),%rsi
00000000000350c7	movq	0x0004f00a(%rip),%rbx
00000000000350ce	movq	%r14,%rdi
00000000000350d1	call	*%rbx
00000000000350d3	movq	%rax,%r15
00000000000350d6	movq	0x0007052b(%rip),%rsi
00000000000350dd	movq	%r14,%rdi
00000000000350e0	call	*%rbx
00000000000350e2	movq	0x00070daf(%rip),%rsi
00000000000350e9	movq	%rax,%rdi
00000000000350ec	call	*%rbx
00000000000350ee	movq	0x00070dab(%rip),%rsi
00000000000350f5	movq	%r15,%rdi
00000000000350f8	movq	%rax,%rdx
00000000000350fb	call	*%rbx
00000000000350fd	movb	$0x01,%bl
00000000000350ff	movq	0x0006fa32(%rip),%rsi
0000000000035106	movq	%r14,%rdi
0000000000035109	call	*0x0004efc9(%rip)
000000000003510f	movzbl	%bl,%eax
0000000000035112	addq	$0x08,%rsp
0000000000035116	popq	%rbx
0000000000035117	popq	%r14
0000000000035119	popq	%r15
000000000003511b	popq	%rbp
000000000003511c	ret
-[PBXGDB_POSequence needsEvaluationSafetyCheck]:
000000000003511d	pushq	%rbp
000000000003511e	movq	%rsp,%rbp
0000000000035121	xorl	%eax,%eax
0000000000035123	popq	%rbp
0000000000035124	ret
-[PBXGDB_POSequence execute]:
0000000000035125	pushq	%rbp
0000000000035126	movq	%rsp,%rbp
0000000000035129	pushq	%r15
000000000003512b	pushq	%r14
000000000003512d	pushq	%rbx
000000000003512e	pushq	%rax
000000000003512f	movq	%rdi,%r14
0000000000035132	movq	0x0006f947(%rip),%rsi
0000000000035139	movq	0x000733a0(%rip),%rdi
0000000000035140	call	*0x0004ef92(%rip)
0000000000035146	movq	%rax,%rbx
0000000000035149	movq	0x00073300(%rip),%r15
0000000000035150	movq	0x000704b1(%rip),%rsi
0000000000035157	movq	%r14,%rdi
000000000003515a	call	*0x0004ef78(%rip)
0000000000035160	movq	0x0006f9a1(%rip),%rsi
0000000000035167	movq	%rax,%rdi
000000000003516a	call	*0x0004ef68(%rip)
0000000000035170	leaq	0x0007bf61(%rip),%rdx
0000000000035177	movq	0x0006f9fa(%rip),%rsi
000000000003517e	movq	%r15,%rdi
0000000000035181	movq	%rax,%rcx
0000000000035184	xorb	%al,%al
0000000000035186	call	*0x0004ef4c(%rip)
000000000003518c	movq	0x000700e5(%rip),%rsi
0000000000035193	movq	%rbx,%rdi
0000000000035196	movq	%rax,%rdx
0000000000035199	call	*0x0004ef39(%rip)
000000000003519f	movq	0x0006f8e2(%rip),%rsi
00000000000351a6	movq	%rbx,%rdi
00000000000351a9	movq	%r14,%rdx
00000000000351ac	call	*0x0004ef26(%rip)
00000000000351b2	movq	0x0006f8df(%rip),%rsi
00000000000351b9	movq	0x00070cd0(%rip),%rdx
00000000000351c0	movq	%rbx,%rdi
00000000000351c3	call	*0x0004ef0f(%rip)
00000000000351c9	movq	0x00070470(%rip),%rsi
00000000000351d0	movq	%r14,%rdi
00000000000351d3	movq	%rbx,%rdx
00000000000351d6	movq	0x0004eefb(%rip),%rax
00000000000351dd	addq	$0x08,%rsp
00000000000351e1	popq	%rbx
00000000000351e2	popq	%r14
00000000000351e4	popq	%r15
00000000000351e6	popq	%rbp
00000000000351e7	jmp	*%rax
-[PBXGDB_POSequence didPrintDescription:]:
00000000000351e9	pushq	%rbp
00000000000351ea	movq	%rsp,%rbp
00000000000351ed	pushq	%r14
00000000000351ef	pushq	%rbx
00000000000351f0	movq	%rdi,%r14
00000000000351f3	movq	0x000733d6(%rip),%rdi
00000000000351fa	leaq	0x000730df(%rip),%rsi
0000000000035201	call	*0x000730d9(%rip)
0000000000035207	movq	0x0006f862(%rip),%rsi
000000000003520e	movq	%rax,%rdi
0000000000035211	call	*0x0004eec1(%rip)
0000000000035217	movq	%rax,%rbx
000000000003521a	movq	0x0006fbaf(%rip),%rsi
0000000000035221	movq	%r14,%rdi
0000000000035224	call	*0x0004eeae(%rip)
000000000003522a	movq	0x0006fba7(%rip),%rsi
0000000000035231	movq	%rbx,%rdi
0000000000035234	movq	%rax,%rdx
0000000000035237	call	*0x0004ee9b(%rip)
000000000003523d	movq	0x0006fb8c(%rip),%rsi
0000000000035244	movq	%r14,%rdi
0000000000035247	call	*0x0004ee8b(%rip)
000000000003524d	movq	0x0006ffe4(%rip),%rsi
0000000000035254	movq	%rax,%rdi
0000000000035257	movq	%rbx,%rdx
000000000003525a	call	*0x0004ee78(%rip)
0000000000035260	movq	0x0006f8d1(%rip),%rsi
0000000000035267	movq	%r14,%rdi
000000000003526a	movq	0x0004ee67(%rip),%rax
0000000000035271	popq	%rbx
0000000000035272	popq	%r14
0000000000035274	popq	%rbp
0000000000035275	jmp	*%rax
-[PBXGDB_DescriptionDataValue requestReleaseChildren]:
0000000000035277	pushq	%rbp
0000000000035278	movq	%rsp,%rbp
000000000003527b	popq	%rbp
000000000003527c	ret
-[PBXGDB_DisassembleSequence initWithHandler:]:
000000000003527d	pushq	%rbp
000000000003527e	movq	%rsp,%rbp
0000000000035281	pushq	%r14
0000000000035283	pushq	%rbx
0000000000035284	subq	$0x10,%rsp
0000000000035288	movq	%rdx,%r14
000000000003528b	movq	%rdi,0xe0(%rbp)
000000000003528f	movq	0x00073b4a(%rip),%rax
0000000000035296	movq	%rax,0xe8(%rbp)
000000000003529a	movq	0x0006f7cf(%rip),%rsi
00000000000352a1	leaq	0xe0(%rbp),%rdi
00000000000352a5	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000352aa	movq	%rax,%rbx
00000000000352ad	testq	%rbx,%rbx
00000000000352b0	je	0x000352d4
00000000000352b2	movq	0x0006f7bf(%rip),%rsi
00000000000352b9	movq	%r14,%rdi
00000000000352bc	call	*0x0004ee16(%rip)
00000000000352c2	movq	0x0007968f(%rip),%rdx
00000000000352c9	movq	%rax,%rdi
00000000000352cc	movq	%rbx,%rsi
00000000000352cf	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000352d4	movq	%rbx,%rax
00000000000352d7	addq	$0x10,%rsp
00000000000352db	popq	%rbx
00000000000352dc	popq	%r14
00000000000352de	popq	%rbp
00000000000352df	ret
+[PBXGDB_DisassembleSequence sequenceWithFrame:mixedMode:resultHandler:]:
00000000000352e0	pushq	%rbp
00000000000352e1	movq	%rsp,%rbp
00000000000352e4	pushq	%r15
00000000000352e6	pushq	%r14
00000000000352e8	pushq	%r12
00000000000352ea	pushq	%rbx
00000000000352eb	movq	%r8,%r15
00000000000352ee	movl	%ecx,%ebx
00000000000352f0	movq	%rdx,%r14
00000000000352f3	movq	0x00073336(%rip),%rdi
00000000000352fa	leaq	0x00072fdf(%rip),%rsi
0000000000035301	call	*0x00072fd9(%rip)
0000000000035307	movq	0x00070b9a(%rip),%rsi
000000000003530e	movq	0x0004edc3(%rip),%r12
0000000000035315	movq	%rax,%rdi
0000000000035318	movq	%r15,%rdx
000000000003531b	call	*%r12
000000000003531e	movq	%rax,%r15
0000000000035321	movq	0x00070b88(%rip),%rsi
0000000000035328	movq	%r15,%rdi
000000000003532b	movq	%r14,%rdx
000000000003532e	call	*%r12
0000000000035331	movq	0x00070b80(%rip),%rsi
0000000000035338	movq	%r15,%rdi
000000000003533b	movl	%ebx,%edx
000000000003533d	call	*%r12
0000000000035340	movq	%r15,%rax
0000000000035343	popq	%rbx
0000000000035344	popq	%r12
0000000000035346	popq	%r14
0000000000035348	popq	%r15
000000000003534a	popq	%rbp
000000000003534b	ret
-[PBXGDB_DisassembleSequence execute]:
000000000003534c	pushq	%rbp
000000000003534d	movq	%rsp,%rbp
0000000000035350	pushq	%r15
0000000000035352	pushq	%r14
0000000000035354	pushq	%rbx
0000000000035355	pushq	%rax
0000000000035356	movq	%rdi,%r14
0000000000035359	movq	0x0006f758(%rip),%rsi
0000000000035360	movq	0x0004ed71(%rip),%rbx
0000000000035367	call	*%rbx
0000000000035369	movq	0x0006f750(%rip),%rsi
0000000000035370	movq	%rax,%rdi
0000000000035373	call	*%rbx
0000000000035375	leaq	0x0007bd7c(%rip),%rdx
000000000003537c	movq	0x00070675(%rip),%rsi
0000000000035383	movq	%rax,%rdi
0000000000035386	call	*%rbx
0000000000035388	movl	$0x00000001,%ebx
000000000003538d	orl	$0x02,%eax
0000000000035390	cmpl	$0x02,%eax
0000000000035393	je	0x00035397
0000000000035395	xorl	%ebx,%ebx
0000000000035397	movq	0x000795c2(%rip),%rax
000000000003539e	movq	(%r14,%rax),%rdi
00000000000353a2	movq	0x000734b7(%rip),%r15
00000000000353a9	movq	0x00070b10(%rip),%rsi
00000000000353b0	call	*0x0004ed22(%rip)
00000000000353b6	movq	0x00070b0b(%rip),%rsi
00000000000353bd	movq	%r15,%rdi
00000000000353c0	movq	%rax,%rdx
00000000000353c3	movl	$0x00000080,%ecx
00000000000353c8	movl	%ebx,%r8d
00000000000353cb	call	*0x0004ed07(%rip)
00000000000353d1	movq	%rax,%rbx
00000000000353d4	movq	0x0006f6ad(%rip),%rsi
00000000000353db	movq	%rbx,%rdi
00000000000353de	movq	%r14,%rdx
00000000000353e1	call	*0x0004ecf1(%rip)
00000000000353e7	movq	0x0006f6aa(%rip),%rsi
00000000000353ee	movq	0x00070adb(%rip),%rdx
00000000000353f5	movq	%rbx,%rdi
00000000000353f8	call	*0x0004ecda(%rip)
00000000000353fe	movq	0x0006f6b3(%rip),%rsi
0000000000035405	movq	%r14,%rdi
0000000000035408	call	*0x0004ecca(%rip)
000000000003540e	movq	0x0006f6ab(%rip),%rsi
0000000000035415	movq	%rax,%rdi
0000000000035418	call	*0x0004ecba(%rip)
000000000003541e	movq	0x0006f6a3(%rip),%rsi
0000000000035425	movq	%rax,%rdi
0000000000035428	movq	%rbx,%rdx
000000000003542b	movq	0x0004eca6(%rip),%rax
0000000000035432	addq	$0x08,%rsp
0000000000035436	popq	%rbx
0000000000035437	popq	%r14
0000000000035439	popq	%r15
000000000003543b	popq	%rbp
000000000003543c	jmp	*%rax
-[PBXGDB_DisassembleSequence loadDocument:]:
000000000003543e	pushq	%rbp
000000000003543f	movq	%rsp,%rbp
0000000000035442	pushq	%r15
0000000000035444	pushq	%r14
0000000000035446	pushq	%r13
0000000000035448	pushq	%r12
000000000003544a	pushq	%rbx
000000000003544b	subq	$0x68,%rsp
000000000003544f	movq	%rdx,%rbx
0000000000035452	movq	%rdi,0xffffff78(%rbp)
0000000000035459	movq	0x00073408(%rip),%rdi
0000000000035460	leaq	0x00072e79(%rip),%rsi
0000000000035467	call	*0x00072e73(%rip)
000000000003546d	movq	0x0006f5fc(%rip),%rsi
0000000000035474	movq	0x0004ec5d(%rip),%r14
000000000003547b	movq	%rax,%rdi
000000000003547e	call	*%r14
0000000000035481	movq	%rax,0x90(%rbp)
0000000000035485	leaq	0x0007a4ac(%rip),%rdx
000000000003548c	movq	0x0007006d(%rip),%rsi
0000000000035493	movq	0x00072fc6(%rip),%rdi
000000000003549a	call	*%r14
000000000003549d	movq	%rax,0x88(%rbp)
00000000000354a1	movq	0x0006f628(%rip),%rsi
00000000000354a8	movq	%rbx,%rdi
00000000000354ab	call	*%r14
00000000000354ae	leaq	0x0007bc63(%rip),%rdx
00000000000354b5	movq	0x0006f61c(%rip),%rsi
00000000000354bc	movq	%rax,%rdi
00000000000354bf	movq	%rax,%r12
00000000000354c2	call	*%r14
00000000000354c5	movq	0x0006f614(%rip),%rsi
00000000000354cc	movq	%rax,%rdi
00000000000354cf	call	*%r14
00000000000354d2	movq	0x0006f60f(%rip),%rsi
00000000000354d9	movq	%rax,%rdi
00000000000354dc	call	*%r14
00000000000354df	movq	0x0006f60a(%rip),%rsi
00000000000354e6	movq	%rax,%rdi
00000000000354e9	call	*%r14
00000000000354ec	movq	%rax,0x80(%rbp)
00000000000354f0	movq	$0x00000000,0xc0(%rbp)
00000000000354f8	movb	$0x00,0xaf(%rbp)
00000000000354fc	movq	0x0006f5d5(%rip),%r13
0000000000035503	movq	0x80(%rbp),%rdi
0000000000035507	movq	0x0006f5ea(%rip),%rsi
000000000003550e	call	*0x0004ebc4(%rip)
0000000000035514	testq	%rax,%rax
0000000000035517	je	0x0003570f
000000000003551d	movq	%rax,%rdi
0000000000035520	movq	0x0006f5b9(%rip),%rsi
0000000000035527	movq	%r14,%rbx
000000000003552a	call	*%rbx
000000000003552c	movq	%rax,%r15
000000000003552f	movq	%r15,%rdi
0000000000035532	movq	%r13,%rsi
0000000000035535	leaq	0x0007bbfc(%rip),%rdx
000000000003553c	call	*%rbx
000000000003553e	movq	%rax,%r14
0000000000035541	movq	%r15,%rdi
0000000000035544	movq	%r13,%rsi
0000000000035547	leaq	0x0007acaa(%rip),%rdx
000000000003554e	call	*%rbx
0000000000035550	movq	%rax,%rdi
0000000000035553	movq	0x0007097e(%rip),%rsi
000000000003555a	call	*%rbx
000000000003555c	movq	%rax,0xa0(%rbp)
0000000000035560	testq	%r14,%r14
0000000000035563	movq	%r12,%r15
0000000000035566	jne	0x00035582
0000000000035568	movq	%r15,%rdi
000000000003556b	movq	%r13,%rsi
000000000003556e	leaq	0x0007bba3(%rip),%rdx
0000000000035575	call	*0x0004eb5d(%rip)
000000000003557b	movq	%rax,%r14
000000000003557e	movb	$0x01,0xaf(%rbp)
0000000000035582	movq	%r14,%rdi
0000000000035585	movq	0x0006f554(%rip),%rsi
000000000003558c	call	*%rbx
000000000003558e	movq	%rax,%rdi
0000000000035591	movq	0x0006f550(%rip),%rsi
0000000000035598	call	*%rbx
000000000003559a	movq	%rax,%rdi
000000000003559d	movq	0x0006f54c(%rip),%rsi
00000000000355a4	call	*%rbx
00000000000355a6	movq	%rax,0x98(%rbp)
00000000000355aa	movq	%rax,%rdi
00000000000355ad	movq	0x0006f544(%rip),%rsi
00000000000355b4	call	*%rbx
00000000000355b6	movq	%rbx,%r14
00000000000355b9	movq	%rax,%rbx
00000000000355bc	jmp	0x000356f2
00000000000355c1	cmpb	$0x00,0xaf(%rbp)
00000000000355c5	jne	0x000355dc
00000000000355c7	movq	0x88(%rbp),%rdi
00000000000355cb	leaq	0x00072d2e(%rip),%rsi
00000000000355d2	movq	0xa0(%rbp),%rdx
00000000000355d6	call	*0x00072d24(%rip)
00000000000355dc	movq	%rbx,%rdi
00000000000355df	movq	0x0006f4fa(%rip),%rsi
00000000000355e6	call	*%r14
00000000000355e9	movq	%rax,%r15
00000000000355ec	movq	%r15,%rdi
00000000000355ef	movq	0x0006f4e2(%rip),%r12
00000000000355f6	movq	%r12,%rsi
00000000000355f9	leaq	0x0007bb58(%rip),%rdx
0000000000035600	call	*%r14
0000000000035603	movq	%rax,%rdi
0000000000035606	movq	0x000708cb(%rip),%rbx
000000000003560d	movq	%rbx,%rsi
0000000000035610	call	*%r14
0000000000035613	movq	%rax,0xb8(%rbp)
0000000000035617	movq	%r15,%rdi
000000000003561a	movq	%r12,%rsi
000000000003561d	leaq	0x0007bb54(%rip),%rdx
0000000000035624	call	*%r14
0000000000035627	movq	%rax,%rdi
000000000003562a	movq	%rbx,%rsi
000000000003562d	call	*%r14
0000000000035630	movq	%rax,0xb0(%rbp)
0000000000035634	movq	%r15,%rdi
0000000000035637	movq	%r12,%rsi
000000000003563a	leaq	0x0007bb57(%rip),%rdx
0000000000035641	call	*%r14
0000000000035644	movq	%rax,%rdi
0000000000035647	movq	%rbx,%rsi
000000000003564a	call	*%r14
000000000003564d	movq	%rax,%r13
0000000000035650	movq	0x00073219(%rip),%rdi
0000000000035657	leaq	0x00072c82(%rip),%rsi
000000000003565e	call	*0x00072c7c(%rip)
0000000000035664	movq	%rax,%rbx
0000000000035667	movq	0x00072de2(%rip),%r12
000000000003566e	movq	%r13,%rdi
0000000000035671	movq	0x0006fc68(%rip),%rsi
0000000000035678	call	*%r14
000000000003567b	movq	0xc0(%rbp),%r13
000000000003567f	testq	%r13,%r13
0000000000035682	leaq	0x0007a2af(%rip),%rcx
0000000000035689	leaq	0x0007a088(%rip),%rdx
0000000000035690	cmovneq	%rdx,%rcx
0000000000035694	movq	0xb8(%rbp),%rdx
0000000000035698	movq	%rdx,(%rsp)
000000000003569c	movq	%r12,%rdi
000000000003569f	movq	0x0006f4d2(%rip),%rsi
00000000000356a6	leaq	0x0007bb0b(%rip),%rdx
00000000000356ad	movq	0xb0(%rbp),%r8
00000000000356b1	movq	%rax,%r9
00000000000356b4	xorb	%al,%al
00000000000356b6	call	*%r14
00000000000356b9	movq	%rbx,%rdi
00000000000356bc	movq	0x0006f74d(%rip),%rsi
00000000000356c3	movq	%rax,%rdx
00000000000356c6	call	*%r14
00000000000356c9	movq	0x90(%rbp),%rdi
00000000000356cd	movq	0x00070634(%rip),%rsi
00000000000356d4	movq	%rax,%rdx
00000000000356d7	call	*%r14
00000000000356da	movq	0x98(%rbp),%rdi
00000000000356de	movq	0x0006f413(%rip),%rsi
00000000000356e5	call	*%r14
00000000000356e8	movq	%rax,%rbx
00000000000356eb	incq	%r13
00000000000356ee	movq	%r13,0xc0(%rbp)
00000000000356f2	testq	%rbx,%rbx
00000000000356f5	jne	0x000355c1
00000000000356fb	movq	%r15,%r12
00000000000356fe	cmpb	$0x01,0xaf(%rbp)
0000000000035702	movq	0x0006f3cf(%rip),%r13
0000000000035709	jne	0x00035503
000000000003570f	movq	0x00073162(%rip),%rdi
0000000000035716	leaq	0x00072bc3(%rip),%rsi
000000000003571d	call	*0x00072bbd(%rip)
0000000000035723	movq	%rax,%rbx
0000000000035726	movq	0x0006f563(%rip),%rsi
000000000003572d	movq	0x0004e9a4(%rip),%r14
0000000000035734	movq	0x90(%rbp),%rdi
0000000000035738	call	*%r14
000000000003573b	movq	0x0007079e(%rip),%rsi
0000000000035742	movq	%rbx,%rdi
0000000000035745	movq	%rax,%rdx
0000000000035748	call	*%r14
000000000003574b	movq	0x00079206(%rip),%rcx
0000000000035752	movq	0xffffff78(%rbp),%rbx
0000000000035759	movq	(%rbx,%rcx),%rcx
000000000003575d	movq	%rcx,%rdi
0000000000035760	movq	%rax,%rsi
0000000000035763	call	*0x10(%rcx)
0000000000035766	leaq	0xc8(%rbp),%rdi
000000000003576a	movq	%rbx,0xc8(%rbp)
000000000003576e	movq	0x0007366b(%rip),%rax
0000000000035775	movq	%rax,0xd0(%rbp)
0000000000035779	movq	0x0006f3b8(%rip),%rsi
0000000000035780	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000035785	addq	$0x68,%rsp
0000000000035789	popq	%rbx
000000000003578a	popq	%r12
000000000003578c	popq	%r13
000000000003578e	popq	%r14
0000000000035790	popq	%r15
0000000000035792	popq	%rbp
0000000000035793	ret
-[PBXGDB_DisassembleSequence handleErrorForMICommand:]:
0000000000035794	pushq	%rbp
0000000000035795	movq	%rsp,%rbp
0000000000035798	pushq	%r15
000000000003579a	pushq	%r14
000000000003579c	pushq	%r12
000000000003579e	pushq	%rbx
000000000003579f	movq	%rdi,%r14
00000000000357a2	movq	0x0006f327(%rip),%rsi
00000000000357a9	movq	0x0004e928(%rip),%r15
00000000000357b0	movq	%rdx,%rdi
00000000000357b3	call	*%r15
00000000000357b6	movq	0x0006f31b(%rip),%rsi
00000000000357bd	leaq	0x0007b534(%rip),%rdx
00000000000357c4	movq	%rax,%rdi
00000000000357c7	call	*%r15
00000000000357ca	movq	0x0006f337(%rip),%rsi
00000000000357d1	movq	%rax,%rdi
00000000000357d4	call	*%r15
00000000000357d7	leaq	0x00072b82(%rip),%rsi
00000000000357de	leaq	0x0007b9f3(%rip),%rdx
00000000000357e5	movq	%rax,%rdi
00000000000357e8	call	*0x00072b72(%rip)
00000000000357ee	movb	%al,%bl
00000000000357f0	movq	0x0006f2c1(%rip),%rsi
00000000000357f7	movq	%r14,%rdi
00000000000357fa	call	*%r15
00000000000357fd	movq	%rax,%r15
0000000000035800	cmpb	$0x01,%bl
0000000000035803	jne	0x0003583e
0000000000035805	movq	0x0006f2b4(%rip),%rsi
000000000003580c	movq	0x0004e8c5(%rip),%rbx
0000000000035813	movq	%r15,%rdi
0000000000035816	call	*%rbx
0000000000035818	movq	0x00070231(%rip),%rsi
000000000003581f	leaq	0x0007b8d2(%rip),%rcx
0000000000035826	movq	%rax,%rdi
0000000000035829	movl	$0x00000001,%edx
000000000003582e	call	*%rbx
0000000000035830	movq	0x000701e1(%rip),%rsi
0000000000035837	movq	%r14,%rdi
000000000003583a	call	*%rbx
000000000003583c	jmp	0x00035897
000000000003583e	movq	0x0007911b(%rip),%rax
0000000000035845	movq	(%r14,%rax),%rdi
0000000000035849	movq	0x00072c00(%rip),%rbx
0000000000035850	movq	0x00070691(%rip),%rsi
0000000000035857	movq	0x0004e87a(%rip),%r12
000000000003585e	call	*%r12
0000000000035861	movq	0x0006f310(%rip),%rsi
0000000000035868	leaq	0x0007b989(%rip),%rdx
000000000003586f	movq	%rbx,%rdi
0000000000035872	movq	%rax,%rcx
0000000000035875	xorb	%al,%al
0000000000035877	call	*%r12
000000000003587a	movq	0x0007066f(%rip),%rsi
0000000000035881	movq	%r15,%rdi
0000000000035884	movq	%rax,%rdx
0000000000035887	call	*%r12
000000000003588a	movq	0x0006f2a7(%rip),%rsi
0000000000035891	movq	%r14,%rdi
0000000000035894	call	*%r12
0000000000035897	movl	$0x00000001,%eax
000000000003589c	popq	%rbx
000000000003589d	popq	%r12
000000000003589f	popq	%r14
00000000000358a1	popq	%r15
00000000000358a3	popq	%rbp
00000000000358a4	ret
-[PBXGDB_DisassembleSequence setFrame:]:
00000000000358a5	pushq	%rbp
00000000000358a6	movq	%rsp,%rbp
00000000000358a9	movq	%rdx,%rax
00000000000358ac	movq	%rdi,%rcx
00000000000358af	movq	0x000790aa(%rip),%rdx
00000000000358b6	movq	%rax,%rdi
00000000000358b9	movq	%rcx,%rsi
00000000000358bc	popq	%rbp
00000000000358bd	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_DisassembleSequence setMixedMode:]:
00000000000358c2	pushq	%rbp
00000000000358c3	movq	%rsp,%rbp
00000000000358c6	movq	0x0007909b(%rip),%rax
00000000000358cd	movb	%dl,(%rdi,%rax)
00000000000358d0	popq	%rbp
00000000000358d1	ret
-[PBXGDB_DynamicLinkerImage setIDNumber:]:
00000000000358d2	pushq	%rbp
00000000000358d3	movq	%rsp,%rbp
00000000000358d6	movq	0x0007909b(%rip),%rax
00000000000358dd	movq	%rdx,(%rdi,%rax)
00000000000358e1	popq	%rbp
00000000000358e2	ret
-[PBXGDB_DynamicLinkerImage idNumber]:
00000000000358e3	pushq	%rbp
00000000000358e4	movq	%rsp,%rbp
00000000000358e7	movq	0x0007908a(%rip),%rax
00000000000358ee	movq	(%rdi,%rax),%rax
00000000000358f2	popq	%rbp
00000000000358f3	ret
-[PBXGDB_DynamicLinkerImage setGDBAdaptor:]:
00000000000358f4	pushq	%rbp
00000000000358f5	movq	%rsp,%rbp
00000000000358f8	movq	%rdx,%rax
00000000000358fb	movq	%rdi,%rcx
00000000000358fe	movq	0x0007907b(%rip),%rdx
0000000000035905	movq	%rax,%rdi
0000000000035908	movq	%rcx,%rsi
000000000003590b	popq	%rbp
000000000003590c	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_DynamicLinkerImage gdbAdaptor]:
0000000000035911	pushq	%rbp
0000000000035912	movq	%rsp,%rbp
0000000000035915	movq	0x00079064(%rip),%rax
000000000003591c	movq	(%rdi,%rax),%rax
0000000000035920	popq	%rbp
0000000000035921	ret
-[PBXGDB_EvalOperation dealloc]:
0000000000035922	pushq	%rbp
0000000000035923	movq	%rsp,%rbp
0000000000035926	pushq	%rbx
0000000000035927	pushq	%rax
0000000000035928	movq	%rdi,%rbx
000000000003592b	movq	0x000705f6(%rip),%rsi
0000000000035932	xorl	%edx,%edx
0000000000035934	call	*0x0004e79e(%rip)
000000000003593a	movq	0x000705ef(%rip),%rsi
0000000000035941	movq	%rbx,%rdi
0000000000035944	xorl	%edx,%edx
0000000000035946	call	*0x0004e78c(%rip)
000000000003594c	movq	0x000705cd(%rip),%rsi
0000000000035953	movq	%rbx,%rdi
0000000000035956	xorl	%edx,%edx
0000000000035958	call	*0x0004e77a(%rip)
000000000003595e	movq	0x000705d3(%rip),%rsi
0000000000035965	movq	%rbx,%rdi
0000000000035968	xorl	%edx,%edx
000000000003596a	movq	0x0004e767(%rip),%rax
0000000000035971	addq	$0x08,%rsp
0000000000035975	popq	%rbx
0000000000035976	popq	%rbp
0000000000035977	jmp	*%rax
-[PBXGDB_EvalOperation setEvalOpExpression:]:
0000000000035979	pushq	%rbp
000000000003597a	movq	%rsp,%rbp
000000000003597d	movq	%rdx,%rax
0000000000035980	movq	%rdi,%rcx
0000000000035983	movq	0x00079016(%rip),%rdx
000000000003598a	movq	%rax,%rdi
000000000003598d	movq	%rcx,%rsi
0000000000035990	popq	%rbp
0000000000035991	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_EvalOperation evalOpExpression]:
0000000000035996	pushq	%rbp
0000000000035997	movq	%rsp,%rbp
000000000003599a	movq	0x00078fff(%rip),%rax
00000000000359a1	movq	(%rdi,%rax),%rax
00000000000359a5	popq	%rbp
00000000000359a6	ret
-[PBXGDB_EvalOperation setResultName:]:
00000000000359a7	pushq	%rbp
00000000000359a8	movq	%rsp,%rbp
00000000000359ab	movq	%rdx,%rax
00000000000359ae	movq	%rdi,%rcx
00000000000359b1	movq	0x00078ff0(%rip),%rdx
00000000000359b8	movq	%rax,%rdi
00000000000359bb	movq	%rcx,%rsi
00000000000359be	popq	%rbp
00000000000359bf	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_EvalOperation didFinishWithNoResult]:
00000000000359c4	pushq	%rbp
00000000000359c5	movq	%rsp,%rbp
00000000000359c8	pushq	%rbx
00000000000359c9	pushq	%rax
00000000000359ca	movq	%rdi,%rbx
00000000000359cd	movq	0x00070564(%rip),%rsi
00000000000359d4	xorl	%edx,%edx
00000000000359d6	call	*0x0004e6fc(%rip)
00000000000359dc	movq	0x00070575(%rip),%rsi
00000000000359e3	movq	%rbx,%rdi
00000000000359e6	xorl	%edx,%edx
00000000000359e8	movq	0x0004e6e9(%rip),%rax
00000000000359ef	addq	$0x08,%rsp
00000000000359f3	popq	%rbx
00000000000359f4	popq	%rbp
00000000000359f5	jmp	*%rax
-[PBXGDB_EvalOperation perform]:
00000000000359f7	pushq	%rbp
00000000000359f8	movq	%rsp,%rbp
00000000000359fb	popq	%rbp
00000000000359fc	ret
-[PBXGDB_EvaluationSequence canExecuteCodeInTargetOnMyThread]:
00000000000359fd	pushq	%rbp
00000000000359fe	movq	%rsp,%rbp
0000000000035a01	pushq	%rbx
0000000000035a02	pushq	%rax
0000000000035a03	movq	0x0007055e(%rip),%rsi
0000000000035a0a	movq	0x0004e6c7(%rip),%rbx
0000000000035a11	call	*%rbx
0000000000035a13	movq	0x00070536(%rip),%rsi
0000000000035a1a	movq	%rax,%rdi
0000000000035a1d	call	*%rbx
0000000000035a1f	movq	%rax,%rbx
0000000000035a22	movb	$0x01,%cl
0000000000035a24	testq	%rbx,%rbx
0000000000035a27	je	0x00035a73
0000000000035a29	movq	0x0006f208(%rip),%rsi
0000000000035a30	movq	0x000729e1(%rip),%rdx
0000000000035a37	movq	%rbx,%rdi
0000000000035a3a	call	*0x0004e698(%rip)
0000000000035a40	movb	$0x01,%cl
0000000000035a42	testb	%al,%al
0000000000035a44	je	0x00035a73
0000000000035a46	movq	0x00070523(%rip),%rsi
0000000000035a4d	movq	%rbx,%rdi
0000000000035a50	call	*0x0004e682(%rip)
0000000000035a56	movb	$0x01,%cl
0000000000035a58	testq	%rax,%rax
0000000000035a5b	je	0x00035a73
0000000000035a5d	movq	0x00070514(%rip),%rsi
0000000000035a64	movq	%rax,%rdi
0000000000035a67	call	*0x0004e66b(%rip)
0000000000035a6d	cmpl	$0x02,%eax
0000000000035a70	sete	%cl
0000000000035a73	movzbl	%cl,%eax
0000000000035a76	addq	$0x08,%rsp
0000000000035a7a	popq	%rbx
0000000000035a7b	popq	%rbp
0000000000035a7c	ret
-[PBXGDB_ExpressionEvalOperation initWithDescription:syntheticDataValue:]:
0000000000035a7d	pushq	%rbp
0000000000035a7e	movq	%rsp,%rbp
0000000000035a81	pushq	%r15
0000000000035a83	pushq	%r14
0000000000035a85	pushq	%r13
0000000000035a87	pushq	%r12
0000000000035a89	pushq	%rbx
0000000000035a8a	subq	$0x18,%rsp
0000000000035a8e	movq	%rdx,%rbx
0000000000035a91	movq	%rdi,0xc8(%rbp)
0000000000035a95	movq	0x0007335c(%rip),%rax
0000000000035a9c	movq	%rax,0xd0(%rbp)
0000000000035aa0	movq	0x000704d9(%rip),%rsi
0000000000035aa7	leaq	0xc8(%rbp),%rdi
0000000000035aab	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000035ab0	movq	%rax,%r15
0000000000035ab3	testq	%r15,%r15
0000000000035ab6	je	0x00035b64
0000000000035abc	movq	0x000704c5(%rip),%rsi
0000000000035ac3	movq	0x00072dc6(%rip),%rdi
0000000000035aca	movq	0x0004e607(%rip),%r13
0000000000035ad1	call	*%r13
0000000000035ad4	leaq	0x00072875(%rip),%r12
0000000000035adb	movq	%rbx,%rdi
0000000000035ade	movq	%r12,%rsi
0000000000035ae1	movq	%rax,%rdx
0000000000035ae4	call	*0x00072866(%rip)
0000000000035aea	movq	%rax,%r14
0000000000035aed	movq	0x0007049c(%rip),%rsi
0000000000035af4	movq	0x00072d95(%rip),%rdi
0000000000035afb	call	*%r13
0000000000035afe	movq	%rbx,%rdi
0000000000035b01	movq	%r12,%rsi
0000000000035b04	movq	%rax,%rdx
0000000000035b07	call	*0x00072843(%rip)
0000000000035b0d	movq	0x0007041c(%rip),%rsi
0000000000035b14	movq	%r15,%rdi
0000000000035b17	movq	%rax,%rdx
0000000000035b1a	call	*%r13
0000000000035b1d	testq	%r14,%r14
0000000000035b20	je	0x00035b64
0000000000035b22	movq	0x0006ef8f(%rip),%rsi
0000000000035b29	movq	0x0004e5a8(%rip),%rbx
0000000000035b30	movq	%r15,%rdi
0000000000035b33	call	*%rbx
0000000000035b35	movq	0x0006fc24(%rip),%rsi
0000000000035b3c	movq	%rax,%rdi
0000000000035b3f	call	*%rbx
0000000000035b41	movq	0x00070450(%rip),%rsi
0000000000035b48	movq	%rax,%rdi
0000000000035b4b	movq	%r14,%rdx
0000000000035b4e	movl	$0x00000001,%ecx
0000000000035b53	call	*%rbx
0000000000035b55	movq	0x00070444(%rip),%rsi
0000000000035b5c	movq	%r15,%rdi
0000000000035b5f	movq	%rax,%rdx
0000000000035b62	call	*%rbx
0000000000035b64	movq	%r15,%rax
0000000000035b67	addq	$0x18,%rsp
0000000000035b6b	popq	%rbx
0000000000035b6c	popq	%r12
0000000000035b6e	popq	%r13
0000000000035b70	popq	%r14
0000000000035b72	popq	%r15
0000000000035b74	popq	%rbp
0000000000035b75	ret
-[PBXGDB_ExpressionEvalOperation dealloc]:
0000000000035b76	pushq	%rbp
0000000000035b77	movq	%rsp,%rbp
0000000000035b7a	movq	0x0007041f(%rip),%rsi
0000000000035b81	xorl	%edx,%edx
0000000000035b83	popq	%rbp
0000000000035b84	jmp	*0x0004e54e(%rip)
-[PBXGDB_ExpressionEvalOperation setReturnType:]:
0000000000035b8a	pushq	%rbp
0000000000035b8b	movq	%rsp,%rbp
0000000000035b8e	movq	%rdx,%rax
0000000000035b91	movq	%rdi,%rcx
0000000000035b94	movq	0x00078e25(%rip),%rdx
0000000000035b9b	movq	%rax,%rdi
0000000000035b9e	movq	%rcx,%rsi
0000000000035ba1	popq	%rbp
0000000000035ba2	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_ExpressionEvalOperation returnType]:
0000000000035ba7	pushq	%rbp
0000000000035ba8	movq	%rsp,%rbp
0000000000035bab	movq	0x00078e0e(%rip),%rax
0000000000035bb2	movq	(%rdi,%rax),%rax
0000000000035bb6	popq	%rbp
0000000000035bb7	ret
-[PBXGDB_ExpressionEvalOperation sequenceDidFinish:]:
0000000000035bb8	pushq	%rbp
0000000000035bb9	movq	%rsp,%rbp
0000000000035bbc	pushq	%r15
0000000000035bbe	pushq	%r14
0000000000035bc0	pushq	%r12
0000000000035bc2	pushq	%rbx
0000000000035bc3	subq	$0x50,%rsp
0000000000035bc7	movq	%rdx,%r14
0000000000035bca	movq	%rdi,0xd8(%rbp)
0000000000035bce	movq	%rsi,0xd0(%rbp)
0000000000035bd2	testq	%r14,%r14
0000000000035bd5	jne	0x00035c3d
0000000000035bd7	movq	0x00072cba(%rip),%rdi
0000000000035bde	leaq	0x0007274b(%rip),%rsi
0000000000035be5	call	*0x00072745(%rip)
0000000000035beb	movq	%rax,%rdi
0000000000035bee	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000035bf3	leaq	0xd8(%rbp),%rdi
0000000000035bf7	leaq	0xd0(%rbp),%rsi
0000000000035bfb	leaq	0x00028e04(%rip),%rdx
0000000000035c02	leaq	0x00028e32(%rip),%rcx
0000000000035c09	leaq	0x00079da8(%rip),%r9
0000000000035c10	leaq	0x00028eb2(%rip),%r8
0000000000035c17	leaq	0x00028eb8(%rip),%rbx
0000000000035c1e	movq	%rbx,0x18(%rsp)
0000000000035c23	leaq	0x00079c0e(%rip),%rbx
0000000000035c2a	movq	%rbx,0x10(%rsp)
0000000000035c2f	movq	%rax,0x08(%rsp)
0000000000035c34	movq	%r8,(%rsp)
0000000000035c38	jmp	0x00035ce8
0000000000035c3d	movq	0x00072c54(%rip),%rdi
0000000000035c44	leaq	0x000726e5(%rip),%rsi
0000000000035c4b	call	*0x000726df(%rip)
0000000000035c51	leaq	0x000726e8(%rip),%rsi
0000000000035c58	movq	%r14,%rdi
0000000000035c5b	movq	%rax,%rdx
0000000000035c5e	call	*0x000726dc(%rip)
0000000000035c64	testb	%al,%al
0000000000035c66	movq	%r14,%rdi
0000000000035c69	jne	0x00035cf8
0000000000035c6f	movq	0x00072c22(%rip),%rdi
0000000000035c76	leaq	0x000726b3(%rip),%rsi
0000000000035c7d	call	*0x000726ad(%rip)
0000000000035c83	movq	%rax,%rdi
0000000000035c86	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000035c8b	movq	%rax,%rbx
0000000000035c8e	movq	0x0006efcb(%rip),%rsi
0000000000035c95	movq	%r14,%rdi
0000000000035c98	call	*0x0004e43a(%rip)
0000000000035c9e	leaq	0x00079b93(%rip),%r8
0000000000035ca5	leaq	0x00028e40(%rip),%r9
0000000000035cac	leaq	0xd8(%rbp),%rdi
0000000000035cb0	leaq	0xd0(%rbp),%rsi
0000000000035cb4	leaq	0x00028d4b(%rip),%rdx
0000000000035cbb	leaq	0x00028d79(%rip),%rcx
0000000000035cc2	movq	%r9,0x20(%rsp)
0000000000035cc7	leaq	0x00079d0a(%rip),%r9
0000000000035cce	movq	%r8,0x18(%rsp)
0000000000035cd3	movq	%rax,0x10(%rsp)
0000000000035cd8	leaq	0x00028dea(%rip),%rax
0000000000035cdf	movq	%rbx,0x08(%rsp)
0000000000035ce4	movq	%rax,(%rsp)
0000000000035ce8	movl	$0x00000043,%r8d
0000000000035cee	xorb	%al,%al
0000000000035cf0	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000035cf5	movq	%r14,%rdi
0000000000035cf8	movq	0x000702a9(%rip),%rsi
0000000000035cff	call	*0x0004e3d3(%rip)
0000000000035d05	movq	%rax,%rbx
0000000000035d08	movq	0x00072b91(%rip),%r15
0000000000035d0f	testq	%rbx,%rbx
0000000000035d12	je	0x00035d3e
0000000000035d14	movq	0x00070295(%rip),%rsi
0000000000035d1b	movq	0xd8(%rbp),%rdi
0000000000035d1f	movq	0x0004e3b2(%rip),%r12
0000000000035d26	call	*%r12
0000000000035d29	movq	0x00070288(%rip),%rsi
0000000000035d30	movq	%r15,%rdi
0000000000035d33	movq	%rbx,%rdx
0000000000035d36	movq	%rax,%rcx
0000000000035d39	call	*%r12
0000000000035d3c	jmp	0x00035d52
0000000000035d3e	movq	0x00070273(%rip),%rsi
0000000000035d45	movq	%r15,%rdi
0000000000035d48	xorl	%edx,%edx
0000000000035d4a	xorl	%ecx,%ecx
0000000000035d4c	call	*0x0004e386(%rip)
0000000000035d52	movq	0x000701df(%rip),%rsi
0000000000035d59	movq	0xd8(%rbp),%rdi
0000000000035d5d	movq	%rax,%rdx
0000000000035d60	call	*0x0004e372(%rip)
0000000000035d66	movq	0xd8(%rbp),%rax
0000000000035d6a	movq	%rax,0xc0(%rbp)
0000000000035d6e	movq	0x00073083(%rip),%rax
0000000000035d75	movq	%rax,0xc8(%rbp)
0000000000035d79	leaq	0xc0(%rbp),%rdi
0000000000035d7d	movq	0x000701d4(%rip),%rsi
0000000000035d84	movq	%r14,%rdx
0000000000035d87	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000035d8c	addq	$0x50,%rsp
0000000000035d90	popq	%rbx
0000000000035d91	popq	%r12
0000000000035d93	popq	%r14
0000000000035d95	popq	%r15
0000000000035d97	popq	%rbp
0000000000035d98	ret
-[PBXGDB_ExpressionEvalOperation perform]:
0000000000035d99	pushq	%rbp
0000000000035d9a	movq	%rsp,%rbp
0000000000035d9d	pushq	%r15
0000000000035d9f	pushq	%r14
0000000000035da1	pushq	%rbx
0000000000035da2	pushq	%rax
0000000000035da3	movq	%rdi,%r14
0000000000035da6	movq	0x00070213(%rip),%rsi
0000000000035dad	movq	0x0004e324(%rip),%rbx
0000000000035db4	call	*%rbx
0000000000035db6	movq	%rax,%r15
0000000000035db9	movq	0x0006f518(%rip),%rsi
0000000000035dc0	leaq	0x00079a11(%rip),%rdx
0000000000035dc7	movq	%r15,%rdi
0000000000035dca	call	*%rbx
0000000000035dcc	testq	%rdx,%rdx
0000000000035dcf	je	0x00035e6e
0000000000035dd5	movq	0x00070164(%rip),%rsi
0000000000035ddc	movq	0x0004e2f5(%rip),%rbx
0000000000035de3	movq	%r14,%rdi
0000000000035de6	call	*%rbx
0000000000035de8	movq	0x000701d9(%rip),%rsi
0000000000035def	movq	%rax,%rdi
0000000000035df2	call	*%rbx
0000000000035df4	testq	%rax,%rax
0000000000035df7	je	0x00035f3d
0000000000035dfd	movq	0x000701cc(%rip),%rsi
0000000000035e04	movq	%rax,%rdi
0000000000035e07	call	*0x0004e2cb(%rip)
0000000000035e0d	movq	%rax,%rbx
0000000000035e10	movq	0x00072639(%rip),%rdi
0000000000035e17	leaq	0x00072512(%rip),%rsi
0000000000035e1e	call	*0x0007250c(%rip)
0000000000035e24	leaq	0x00072515(%rip),%rsi
0000000000035e2b	movq	%rbx,%rdi
0000000000035e2e	movq	%rax,%rdx
0000000000035e31	call	*0x00072509(%rip)
0000000000035e37	testb	%al,%al
0000000000035e39	je	0x00035f3d
0000000000035e3f	movq	0x0007260a(%rip),%rdi
0000000000035e46	leaq	0x00072493(%rip),%rsi
0000000000035e4d	call	*0x0007248d(%rip)
0000000000035e53	movq	0x0006ee5e(%rip),%rsi
0000000000035e5a	movq	%rax,%rdi
0000000000035e5d	movq	%r15,%rdx
0000000000035e60	movq	%rbx,%rcx
0000000000035e63	xorb	%al,%al
0000000000035e65	call	*0x0004e26d(%rip)
0000000000035e6b	movq	%rax,%r15
0000000000035e6e	testq	%r15,%r15
0000000000035e71	je	0x00035f3d
0000000000035e77	movq	0x00070132(%rip),%rsi
0000000000035e7e	movq	%r14,%rdi
0000000000035e81	call	*0x0004e251(%rip)
0000000000035e87	testq	%rax,%rax
0000000000035e8a	jne	0x00035e95
0000000000035e8c	leaq	0x0007b3e5(%rip),%rbx
0000000000035e93	jmp	0x00035ea8
0000000000035e95	movq	0x0006f5ec(%rip),%rsi
0000000000035e9c	movq	%rax,%rdi
0000000000035e9f	call	*0x0004e233(%rip)
0000000000035ea5	movq	%rax,%rbx
0000000000035ea8	movq	0x000725a1(%rip),%rdi
0000000000035eaf	leaq	0x0007242a(%rip),%rsi
0000000000035eb6	call	*0x00072424(%rip)
0000000000035ebc	movq	0x0006edf5(%rip),%rsi
0000000000035ec3	leaq	0x0007a8ce(%rip),%rdx
0000000000035eca	movq	%rax,%rdi
0000000000035ecd	movq	%rbx,%rcx
0000000000035ed0	movq	%r15,%r8
0000000000035ed3	xorb	%al,%al
0000000000035ed5	call	*0x0004e1fd(%rip)
0000000000035edb	movq	%rax,%r15
0000000000035ede	testq	%r15,%r15
0000000000035ee1	je	0x00035f3d
0000000000035ee3	movq	0x000729ae(%rip),%rdi
0000000000035eea	leaq	0x000723ef(%rip),%rsi
0000000000035ef1	call	*0x000723e9(%rip)
0000000000035ef7	movq	0x0006eb72(%rip),%rsi
0000000000035efe	movq	%rax,%rdi
0000000000035f01	call	*0x0004e1d1(%rip)
0000000000035f07	movq	%rax,%rbx
0000000000035f0a	movq	0x000700c7(%rip),%rsi
0000000000035f11	movq	%rbx,%rdi
0000000000035f14	movq	%r15,%rdx
0000000000035f17	call	*0x0004e1bb(%rip)
0000000000035f1d	movq	0x000700bc(%rip),%rsi
0000000000035f24	movq	%r14,%rdi
0000000000035f27	movq	%rbx,%rdx
0000000000035f2a	movq	0x0004e1a7(%rip),%rax
0000000000035f31	addq	$0x08,%rsp
0000000000035f35	popq	%rbx
0000000000035f36	popq	%r14
0000000000035f38	popq	%r15
0000000000035f3a	popq	%rbp
0000000000035f3b	jmp	*%rax
0000000000035f3d	movq	0x000700a4(%rip),%rsi
0000000000035f44	movq	%r14,%rdi
0000000000035f47	addq	$0x08,%rsp
0000000000035f4b	popq	%rbx
0000000000035f4c	popq	%r14
0000000000035f4e	popq	%r15
0000000000035f50	popq	%rbp
0000000000035f51	jmp	*0x0004e181(%rip)
-[PBXGDB_ExpressionEvalSequence handleErrorForMICommand:]:
0000000000035f57	pushq	%rbp
0000000000035f58	movq	%rsp,%rbp
0000000000035f5b	movq	0x0006ebd6(%rip),%rsi
0000000000035f62	call	*0x0004e170(%rip)
0000000000035f68	movl	$0x00000001,%eax
0000000000035f6d	popq	%rbp
0000000000035f6e	ret
-[PBXGDB_ExpressionEvalSequence resultString]:
0000000000035f6f	pushq	%rbp
0000000000035f70	movq	%rsp,%rbp
0000000000035f73	movq	0x00078a4e(%rip),%rax
0000000000035f7a	movq	(%rdi,%rax),%rax
0000000000035f7e	popq	%rbp
0000000000035f7f	ret
-[PBXGDB_ExpressionEvalSequence setExpressionToEvaluate:]:
0000000000035f80	pushq	%rbp
0000000000035f81	movq	%rsp,%rbp
0000000000035f84	movq	%rdx,%rax
0000000000035f87	movq	%rdi,%rcx
0000000000035f8a	movq	0x00078a3f(%rip),%rdx
0000000000035f91	cmpq	%rax,(%rcx,%rdx)
0000000000035f95	jne	0x00035f99
0000000000035f97	popq	%rbp
0000000000035f98	ret
0000000000035f99	addq	%rcx,%rdx
0000000000035f9c	subq	%rcx,%rdx
0000000000035f9f	movq	%rax,%rdi
0000000000035fa2	movq	%rcx,%rsi
0000000000035fa5	popq	%rbp
0000000000035fa6	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_ExpressionEvalSequence expresssionToEvaluate]:
0000000000035fab	pushq	%rbp
0000000000035fac	movq	%rsp,%rbp
0000000000035faf	movq	0x00078a1a(%rip),%rax
0000000000035fb6	movq	(%rdi,%rax),%rax
0000000000035fba	popq	%rbp
0000000000035fbb	ret
-[PBXGDB_ExpressionEvalSequence _gotExpressionResult:]:
0000000000035fbc	pushq	%rbp
0000000000035fbd	movq	%rsp,%rbp
0000000000035fc0	pushq	%r14
0000000000035fc2	pushq	%rbx
0000000000035fc3	subq	$0x40,%rsp
0000000000035fc7	movq	%rdx,%r14
0000000000035fca	movq	%rdi,0xe8(%rbp)
0000000000035fce	movq	%rsi,0xe0(%rbp)
0000000000035fd2	testq	%r14,%r14
0000000000035fd5	jne	0x0003603d
0000000000035fd7	movq	0x00072662(%rip),%rdi
0000000000035fde	leaq	0x0007234b(%rip),%rsi
0000000000035fe5	call	*0x00072345(%rip)
0000000000035feb	movq	%rax,%rdi
0000000000035fee	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000035ff3	leaq	0xe8(%rbp),%rdi
0000000000035ff7	leaq	0xe0(%rbp),%rsi
0000000000035ffb	leaq	0x00028b3a(%rip),%rdx
0000000000036002	leaq	0x00028b6a(%rip),%rcx
0000000000036009	leaq	0x000799a8(%rip),%r9
0000000000036010	leaq	0x00027ae9(%rip),%r8
0000000000036017	leaq	0x00027ae6(%rip),%rbx
000000000003601e	movq	%rbx,0x18(%rsp)
0000000000036023	leaq	0x0007980e(%rip),%rbx
000000000003602a	movq	%rbx,0x10(%rsp)
000000000003602f	movq	%rax,0x08(%rsp)
0000000000036034	movq	%r8,(%rsp)
0000000000036038	jmp	0x000360e5
000000000003603d	movq	0x000725fc(%rip),%rdi
0000000000036044	leaq	0x000722e5(%rip),%rsi
000000000003604b	call	*0x000722df(%rip)
0000000000036051	leaq	0x000722e8(%rip),%rsi
0000000000036058	movq	%r14,%rdi
000000000003605b	movq	%rax,%rdx
000000000003605e	call	*0x000722dc(%rip)
0000000000036064	testb	%al,%al
0000000000036066	jne	0x000360f2
000000000003606c	movq	0x000725cd(%rip),%rdi
0000000000036073	leaq	0x000722b6(%rip),%rsi
000000000003607a	call	*0x000722b0(%rip)
0000000000036080	movq	%rax,%rdi
0000000000036083	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000036088	movq	%rax,%rbx
000000000003608b	movq	0x0006ebce(%rip),%rsi
0000000000036092	movq	%r14,%rdi
0000000000036095	call	*0x0004e03d(%rip)
000000000003609b	leaq	0x00079796(%rip),%r8
00000000000360a2	leaq	0x00027cd8(%rip),%r9
00000000000360a9	leaq	0xe8(%rbp),%rdi
00000000000360ad	leaq	0xe0(%rbp),%rsi
00000000000360b1	leaq	0x00028a84(%rip),%rdx
00000000000360b8	leaq	0x00028ab4(%rip),%rcx
00000000000360bf	movq	%r9,0x20(%rsp)
00000000000360c4	leaq	0x0007990d(%rip),%r9
00000000000360cb	movq	%r8,0x18(%rsp)
00000000000360d0	movq	%rax,0x10(%rsp)
00000000000360d5	leaq	0x00027a24(%rip),%rax
00000000000360dc	movq	%rbx,0x08(%rsp)
00000000000360e1	movq	%rax,(%rsp)
00000000000360e5	movl	$0x00000034,%r8d
00000000000360eb	xorb	%al,%al
00000000000360ed	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
00000000000360f2	movq	0x0006ea0f(%rip),%rsi
00000000000360f9	movq	0x0004dfd8(%rip),%rbx
0000000000036100	movq	%r14,%rdi
0000000000036103	call	*%rbx
0000000000036105	movq	0x000788bc(%rip),%rdx
000000000003610c	movq	0xe8(%rbp),%rsi
0000000000036110	movq	%rax,%rdi
0000000000036113	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000036118	movq	0x0006ea19(%rip),%rsi
000000000003611f	movq	0xe8(%rbp),%rdi
0000000000036123	call	*%rbx
0000000000036125	addq	$0x40,%rsp
0000000000036129	popq	%rbx
000000000003612a	popq	%r14
000000000003612c	popq	%rbp
000000000003612d	ret
-[PBXGDB_ExpressionEvalSequence execute]:
000000000003612e	pushq	%rbp
000000000003612f	movq	%rsp,%rbp
0000000000036132	pushq	%r14
0000000000036134	pushq	%rbx
0000000000036135	movq	%rdi,%rbx
0000000000036138	movq	0x0006f851(%rip),%rsi
000000000003613f	call	*0x0004df93(%rip)
0000000000036145	testb	%al,%al
0000000000036147	jne	0x0003615d
0000000000036149	movq	0x0006e9e8(%rip),%rsi
0000000000036150	movq	%rbx,%rdi
0000000000036153	popq	%rbx
0000000000036154	popq	%r14
0000000000036156	popq	%rbp
0000000000036157	jmp	*0x0004df7b(%rip)
000000000003615d	movq	0x0006e91c(%rip),%rsi
0000000000036164	movq	0x000724d5(%rip),%rdi
000000000003616b	call	*0x0004df67(%rip)
0000000000036171	movq	%rax,%r14
0000000000036174	movq	0x0006e90d(%rip),%rsi
000000000003617b	movq	%r14,%rdi
000000000003617e	movq	%rbx,%rdx
0000000000036181	call	*0x0004df51(%rip)
0000000000036187	movq	0x0006e90a(%rip),%rsi
000000000003618e	movq	0x0006fe5b(%rip),%rdx
0000000000036195	movq	%r14,%rdi
0000000000036198	call	*0x0004df3a(%rip)
000000000003619e	movq	0x0006fe53(%rip),%rsi
00000000000361a5	movq	%rbx,%rdi
00000000000361a8	call	*0x0004df2a(%rip)
00000000000361ae	movq	0x0006f23b(%rip),%rsi
00000000000361b5	movq	%r14,%rdi
00000000000361b8	movq	%rax,%rdx
00000000000361bb	call	*0x0004df17(%rip)
00000000000361c1	movq	0x0006e8f0(%rip),%rsi
00000000000361c8	movq	%rbx,%rdi
00000000000361cb	call	*0x0004df07(%rip)
00000000000361d1	movq	0x0006e8e8(%rip),%rsi
00000000000361d8	movq	%rax,%rdi
00000000000361db	call	*0x0004def7(%rip)
00000000000361e1	movq	0x0006e8e0(%rip),%rsi
00000000000361e8	movq	%rax,%rdi
00000000000361eb	movq	%r14,%rdx
00000000000361ee	movq	0x0004dee3(%rip),%rax
00000000000361f5	popq	%rbx
00000000000361f6	popq	%r14
00000000000361f8	popq	%rbp
00000000000361f9	jmp	*%rax
-[PBXGDB_InsertPluginSequence init]:
00000000000361fb	pushq	%rbp
00000000000361fc	movq	%rsp,%rbp
00000000000361ff	subq	$0x10,%rsp
0000000000036203	movq	%rdi,0xf0(%rbp)
0000000000036207	movq	0x00072bf2(%rip),%rax
000000000003620e	movq	%rax,0xf8(%rbp)
0000000000036212	movq	0x0006e857(%rip),%rsi
0000000000036219	leaq	0xf0(%rbp),%rdi
000000000003621d	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000036222	testq	%rax,%rax
0000000000036225	je	0x00036235
0000000000036227	leaq	0x00078602(%rip),%rcx
000000000003622e	movq	(%rcx),%rcx
0000000000036231	movb	$0x00,(%rax,%rcx)
0000000000036235	addq	$0x10,%rsp
0000000000036239	popq	%rbp
000000000003623a	ret
-[PBXGDB_InsertPluginSequence needsEvaluationSafetyCheck]:
000000000003623b	pushq	%rbp
000000000003623c	movq	%rsp,%rbp
000000000003623f	movl	$0x00000001,%eax
0000000000036244	popq	%rbp
0000000000036245	ret
-[PBXGDB_InsertPluginSequence setPluginPath:]:
0000000000036246	pushq	%rbp
0000000000036247	movq	%rsp,%rbp
000000000003624a	movq	%rdx,%rax
000000000003624d	movq	%rdi,%rcx
0000000000036250	movq	0x00078781(%rip),%rdx
0000000000036257	movq	%rax,%rdi
000000000003625a	movq	%rcx,%rsi
000000000003625d	popq	%rbp
000000000003625e	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_InsertPluginSequence pluginPath]:
0000000000036263	pushq	%rbp
0000000000036264	movq	%rsp,%rbp
0000000000036267	movq	0x0007876a(%rip),%rax
000000000003626e	movq	(%rdi,%rax),%rcx
0000000000036272	leaq	0x0007b01f(%rip),%rax
0000000000036279	testq	%rcx,%rcx
000000000003627c	cmovneq	%rcx,%rax
0000000000036280	popq	%rbp
0000000000036281	ret
-[PBXGDB_InsertPluginSequence loadInferiorPluginFinished:]:
0000000000036282	pushq	%rbp
0000000000036283	movq	%rsp,%rbp
0000000000036286	pushq	%rbx
0000000000036287	pushq	%rax
0000000000036288	movq	%rdi,%rbx
000000000003628b	movq	0x0006e83e(%rip),%rsi
0000000000036292	movq	%rdx,%rdi
0000000000036295	call	*0x0004de3d(%rip)
000000000003629b	movq	0x0006e836(%rip),%rsi
00000000000362a2	leaq	0x00079e8f(%rip),%rdx
00000000000362a9	movq	%rax,%rdi
00000000000362ac	call	*0x0004de26(%rip)
00000000000362b2	movq	0x0006e84f(%rip),%rsi
00000000000362b9	movq	%rax,%rdi
00000000000362bc	call	*0x0004de16(%rip)
00000000000362c2	leaq	0x000720c7(%rip),%rsi
00000000000362c9	leaq	0x0007afe8(%rip),%rdx
00000000000362d0	movq	%rax,%rdi
00000000000362d3	call	*0x000720b7(%rip)
00000000000362d9	movq	0x0006e858(%rip),%rsi
00000000000362e0	movq	%rbx,%rdi
00000000000362e3	movq	0x0004ddee(%rip),%rax
00000000000362ea	addq	$0x08,%rsp
00000000000362ee	popq	%rbx
00000000000362ef	popq	%rbp
00000000000362f0	jmp	*%rax
-[PBXGDB_InsertPluginSequence execute]:
00000000000362f2	pushq	%rbp
00000000000362f3	movq	%rsp,%rbp
00000000000362f6	pushq	%r15
00000000000362f8	pushq	%r14
00000000000362fa	pushq	%rbx
00000000000362fb	pushq	%rax
00000000000362fc	movq	%rdi,%r14
00000000000362ff	movq	0x0006e77a(%rip),%rsi
0000000000036306	movq	0x00072333(%rip),%rdi
000000000003630d	call	*0x0004ddc5(%rip)
0000000000036313	movq	%rax,%rbx
0000000000036316	movq	0x00072133(%rip),%r15
000000000003631d	movq	0x0006fcdc(%rip),%rsi
0000000000036324	movq	%r14,%rdi
0000000000036327	call	*0x0004ddab(%rip)
000000000003632d	leaq	0x0007afa4(%rip),%rdx
0000000000036334	movq	0x0006e83d(%rip),%rsi
000000000003633b	movq	%r15,%rdi
000000000003633e	movq	%rax,%rcx
0000000000036341	xorb	%al,%al
0000000000036343	call	*0x0004dd8f(%rip)
0000000000036349	movq	0x0006f0a0(%rip),%rsi
0000000000036350	movq	%rbx,%rdi
0000000000036353	movq	%rax,%rdx
0000000000036356	call	*0x0004dd7c(%rip)
000000000003635c	movq	0x0006e725(%rip),%rsi
0000000000036363	movq	%rbx,%rdi
0000000000036366	movq	%r14,%rdx
0000000000036369	call	*0x0004dd69(%rip)
000000000003636f	movq	0x0006e722(%rip),%rsi
0000000000036376	movq	0x0006fc8b(%rip),%rdx
000000000003637d	movq	%rbx,%rdi
0000000000036380	call	*0x0004dd52(%rip)
0000000000036386	movq	0x0006e72b(%rip),%rsi
000000000003638d	movq	%r14,%rdi
0000000000036390	call	*0x0004dd42(%rip)
0000000000036396	movq	0x0006e723(%rip),%rsi
000000000003639d	movq	%rax,%rdi
00000000000363a0	call	*0x0004dd32(%rip)
00000000000363a6	movq	0x0006e71b(%rip),%rsi
00000000000363ad	movq	%rax,%rdi
00000000000363b0	movq	%rbx,%rdx
00000000000363b3	movq	0x0004dd1e(%rip),%rax
00000000000363ba	addq	$0x08,%rsp
00000000000363be	popq	%rbx
00000000000363bf	popq	%r14
00000000000363c1	popq	%r15
00000000000363c3	popq	%rbp
00000000000363c4	jmp	*%rax
-[PBXGDB_FetchStringSequence dealloc]:
00000000000363c6	pushq	%rbp
00000000000363c7	movq	%rsp,%rbp
00000000000363ca	pushq	%rbx
00000000000363cb	pushq	%rax
00000000000363cc	movq	%rdi,%rbx
00000000000363cf	movq	0x0006fc3a(%rip),%rsi
00000000000363d6	xorl	%edx,%edx
00000000000363d8	call	*0x0004dcfa(%rip)
00000000000363de	movq	0x0006f59b(%rip),%rsi
00000000000363e5	movq	%rbx,%rdi
00000000000363e8	xorl	%edx,%edx
00000000000363ea	movq	0x0004dce7(%rip),%rax
00000000000363f1	addq	$0x08,%rsp
00000000000363f5	popq	%rbx
00000000000363f6	popq	%rbp
00000000000363f7	jmp	*%rax
-[PBXGDB_FetchStringSequence stringBufferAddressExpression]:
00000000000363f9	pushq	%rbp
00000000000363fa	movq	%rsp,%rbp
00000000000363fd	xorl	%eax,%eax
00000000000363ff	popq	%rbp
0000000000036400	ret
-[PBXGDB_FetchStringSequence handleErrorForMICommand:]:
0000000000036401	pushq	%rbp
0000000000036402	movq	%rsp,%rbp
0000000000036405	movq	0x0006f594(%rip),%rsi
000000000003640c	call	*0x0004dcc6(%rip)
0000000000036412	movl	$0x00000001,%eax
0000000000036417	popq	%rbp
0000000000036418	ret
-[PBXGDB_FetchStringSequence didFinishWithNoData]:
0000000000036419	pushq	%rbp
000000000003641a	movq	%rsp,%rbp
000000000003641d	pushq	%rbx
000000000003641e	pushq	%rax
000000000003641f	movq	%rdi,%rbx
0000000000036422	movq	0x0006fbf7(%rip),%rsi
0000000000036429	movq	0x00072050(%rip),%rdi
0000000000036430	call	*0x0004dca2(%rip)
0000000000036436	movq	0x0006f543(%rip),%rsi
000000000003643d	movq	%rbx,%rdi
0000000000036440	movq	%rax,%rdx
0000000000036443	call	*0x0004dc8f(%rip)
0000000000036449	movq	0x0006f538(%rip),%rsi
0000000000036450	movq	%rbx,%rdi
0000000000036453	movl	$0x00000001,%edx
0000000000036458	call	*0x0004dc7a(%rip)
000000000003645e	movq	0x0006e6d3(%rip),%rsi
0000000000036465	movq	%rbx,%rdi
0000000000036468	movq	0x0004dc69(%rip),%rax
000000000003646f	addq	$0x08,%rsp
0000000000036473	popq	%rbx
0000000000036474	popq	%rbp
0000000000036475	jmp	*%rax
-[PBXGDB_FetchCharacterSquence fetchCharacter]:
0000000000036477	pushq	%rbp
0000000000036478	movq	%rsp,%rbp
000000000003647b	pushq	%rbx
000000000003647c	pushq	%rax
000000000003647d	movq	%rdi,%rbx
0000000000036480	movq	0x0006fb99(%rip),%rsi
0000000000036487	call	*0x0004dc4b(%rip)
000000000003648d	movq	0x0006fbac(%rip),%rsi
0000000000036494	movq	%rbx,%rdi
0000000000036497	movq	%rax,%rdx
000000000003649a	movq	0x0004dc37(%rip),%rax
00000000000364a1	addq	$0x08,%rsp
00000000000364a5	popq	%rbx
00000000000364a6	popq	%rbp
00000000000364a7	jmp	*%rax
-[PBXGDB_FetchCharacterSquence execute]:
00000000000364a9	pushq	%rbp
00000000000364aa	movq	%rsp,%rbp
00000000000364ad	movq	0x0006fbd4(%rip),%rsi
00000000000364b4	popq	%rbp
00000000000364b5	jmp	*0x0004dc1d(%rip)
-[PBXGDB_FetchCharacterSquence data]:
00000000000364bb	pushq	%rbp
00000000000364bc	movq	%rsp,%rbp
00000000000364bf	movq	0x0007854a(%rip),%rax
00000000000364c6	movq	(%rdi,%rax),%rax
00000000000364ca	popq	%rbp
00000000000364cb	ret
-[PBXGDB_FetchCharacterSquence setData:]:
00000000000364cc	pushq	%rbp
00000000000364cd	movq	%rsp,%rbp
00000000000364d0	movq	%rdx,%rax
00000000000364d3	movq	%rdi,%rcx
00000000000364d6	movq	0x00078533(%rip),%rdx
00000000000364dd	movq	%rax,%rdi
00000000000364e0	movq	%rcx,%rsi
00000000000364e3	popq	%rbp
00000000000364e4	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
+[PBXGDB_FixAndContinueSequence sequenceWithPatchFile:sourceFile:objectFile:shlib:]:
00000000000364e9	pushq	%rbp
00000000000364ea	movq	%rsp,%rbp
00000000000364ed	pushq	%r15
00000000000364ef	pushq	%r14
00000000000364f1	pushq	%r13
00000000000364f3	pushq	%r12
00000000000364f5	pushq	%rbx
00000000000364f6	pushq	%rax
00000000000364f7	movq	%r9,0xd0(%rbp)
00000000000364fb	movq	%r8,%r12
00000000000364fe	movq	%rcx,%r15
0000000000036501	movq	%rdx,%r13
0000000000036504	movq	0x0007211d(%rip),%rdi
000000000003650b	leaq	0x00071dce(%rip),%rsi
0000000000036512	call	*0x00071dc8(%rip)
0000000000036518	movq	0x0006e551(%rip),%rsi
000000000003651f	movq	0x0004dbb2(%rip),%r14
0000000000036526	movq	%rax,%rdi
0000000000036529	call	*%r14
000000000003652c	movq	%rax,%rbx
000000000003652f	movq	0x0006fb5a(%rip),%rsi
0000000000036536	movq	%rbx,%rdi
0000000000036539	movq	%r13,%rdx
000000000003653c	call	*%r14
000000000003653f	movq	0x0006fb52(%rip),%rsi
0000000000036546	movq	%rbx,%rdi
0000000000036549	movq	%r12,%rdx
000000000003654c	call	*%r14
000000000003654f	movq	0x0006fb4a(%rip),%rsi
0000000000036556	movq	%rbx,%rdi
0000000000036559	movq	%r15,%rdx
000000000003655c	call	*%r14
000000000003655f	movq	0x0006fb42(%rip),%rsi
0000000000036566	movq	%rbx,%rdi
0000000000036569	movq	0xd0(%rbp),%rdx
000000000003656d	call	*%r14
0000000000036570	movq	%rbx,%rax
0000000000036573	addq	$0x08,%rsp
0000000000036577	popq	%rbx
0000000000036578	popq	%r12
000000000003657a	popq	%r13
000000000003657c	popq	%r14
000000000003657e	popq	%r15
0000000000036580	popq	%rbp
0000000000036581	ret
-[PBXGDB_FixAndContinueSequence objectFile]:
0000000000036582	pushq	%rbp
0000000000036583	movq	%rsp,%rbp
0000000000036586	movq	0x0007848b(%rip),%rax
000000000003658d	movq	(%rdi,%rax),%rcx
0000000000036591	leaq	0x000793a0(%rip),%rax
0000000000036598	testq	%rcx,%rcx
000000000003659b	cmovneq	%rcx,%rax
000000000003659f	popq	%rbp
00000000000365a0	ret
-[PBXGDB_FixAndContinueSequence patchFile]:
00000000000365a1	pushq	%rbp
00000000000365a2	movq	%rsp,%rbp
00000000000365a5	movq	0x00078474(%rip),%rax
00000000000365ac	movq	(%rdi,%rax),%rcx
00000000000365b0	leaq	0x00079381(%rip),%rax
00000000000365b7	testq	%rcx,%rcx
00000000000365ba	cmovneq	%rcx,%rax
00000000000365be	popq	%rbp
00000000000365bf	ret
-[PBXGDB_FixAndContinueSequence sourceFile]:
00000000000365c0	pushq	%rbp
00000000000365c1	movq	%rsp,%rbp
00000000000365c4	movq	0x0007845d(%rip),%rax
00000000000365cb	movq	(%rdi,%rax),%rcx
00000000000365cf	leaq	0x00079362(%rip),%rax
00000000000365d6	testq	%rcx,%rcx
00000000000365d9	cmovneq	%rcx,%rax
00000000000365dd	popq	%rbp
00000000000365de	ret
-[PBXGDB_FixAndContinueSequence shlib]:
00000000000365df	pushq	%rbp
00000000000365e0	movq	%rsp,%rbp
00000000000365e3	movq	0x00078446(%rip),%rax
00000000000365ea	movq	(%rdi,%rax),%rcx
00000000000365ee	leaq	0x00079343(%rip),%rax
00000000000365f5	testq	%rcx,%rcx
00000000000365f8	cmovneq	%rcx,%rax
00000000000365fc	popq	%rbp
00000000000365fd	ret
-[PBXGDB_FixAndContinueSequence setShlib:]:
00000000000365fe	pushq	%rbp
00000000000365ff	movq	%rsp,%rbp
0000000000036602	movq	%rdx,%rax
0000000000036605	movq	%rdi,%rcx
0000000000036608	movq	0x00078421(%rip),%rdx
000000000003660f	movq	%rax,%rdi
0000000000036612	movq	%rcx,%rsi
0000000000036615	popq	%rbp
0000000000036616	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_FixAndContinueSequence setObjectFile:]:
000000000003661b	pushq	%rbp
000000000003661c	movq	%rsp,%rbp
000000000003661f	movq	%rdx,%rax
0000000000036622	movq	%rdi,%rcx
0000000000036625	movq	0x000783ec(%rip),%rdx
000000000003662c	movq	%rax,%rdi
000000000003662f	movq	%rcx,%rsi
0000000000036632	popq	%rbp
0000000000036633	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_FixAndContinueSequence setPatchFile:]:
0000000000036638	pushq	%rbp
0000000000036639	movq	%rsp,%rbp
000000000003663c	movq	%rdx,%rax
000000000003663f	movq	%rdi,%rcx
0000000000036642	movq	0x000783d7(%rip),%rdx
0000000000036649	movq	%rax,%rdi
000000000003664c	movq	%rcx,%rsi
000000000003664f	popq	%rbp
0000000000036650	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_FixAndContinueSequence setSourceFile:]:
0000000000036655	pushq	%rbp
0000000000036656	movq	%rsp,%rbp
0000000000036659	movq	%rdx,%rax
000000000003665c	movq	%rdi,%rcx
000000000003665f	movq	0x000783c2(%rip),%rdx
0000000000036666	movq	%rax,%rdi
0000000000036669	movq	%rcx,%rsi
000000000003666c	popq	%rbp
000000000003666d	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_FixAndContinueSequence interruptIfNeeded]:
0000000000036672	pushq	%rbp
0000000000036673	movq	%rsp,%rbp
0000000000036676	movl	$0x00000001,%eax
000000000003667b	popq	%rbp
000000000003667c	ret
-[PBXGDB_FixAndContinueSequence _didFinish:]:
000000000003667d	pushq	%rbp
000000000003667e	movq	%rsp,%rbp
0000000000036681	movq	0x0006e4b0(%rip),%rsi
0000000000036688	popq	%rbp
0000000000036689	jmp	*0x0004da49(%rip)
-[PBXGDB_FixAndContinueSequence execute]:
000000000003668f	pushq	%rbp
0000000000036690	movq	%rsp,%rbp
0000000000036693	pushq	%r15
0000000000036695	pushq	%r14
0000000000036697	pushq	%r13
0000000000036699	pushq	%r12
000000000003669b	pushq	%rbx
000000000003669c	pushq	%rax
000000000003669d	movq	%rdi,%rbx
00000000000366a0	movq	0x0006e3d9(%rip),%rsi
00000000000366a7	movq	0x00072202(%rip),%rdi
00000000000366ae	call	*0x0004da24(%rip)
00000000000366b4	movq	%rax,%r14
00000000000366b7	movq	0x00078362(%rip),%rax
00000000000366be	movq	(%rbx,%rax),%r15
00000000000366c2	movq	0x0006f9e7(%rip),%rsi
00000000000366c9	movq	%rbx,%rdi
00000000000366cc	call	*0x0004da06(%rip)
00000000000366d2	movq	%rax,%r12
00000000000366d5	movq	0x0006f9dc(%rip),%rsi
00000000000366dc	movq	%rbx,%rdi
00000000000366df	call	*0x0004d9f3(%rip)
00000000000366e5	movq	%rax,%r13
00000000000366e8	movq	0x0006f9d1(%rip),%rsi
00000000000366ef	movq	%rbx,%rdi
00000000000366f2	call	*0x0004d9e0(%rip)
00000000000366f8	movq	0x0006f9c9(%rip),%rsi
00000000000366ff	movq	%r14,%rdi
0000000000036702	movq	%r15,%rdx
0000000000036705	movq	%r12,%rcx
0000000000036708	movq	%r13,%r8
000000000003670b	movq	%rax,%r9
000000000003670e	call	*0x0004d9c4(%rip)
0000000000036714	movq	0x0006e36d(%rip),%rsi
000000000003671b	movq	%r14,%rdi
000000000003671e	movq	%rbx,%rdx
0000000000036721	call	*0x0004d9b1(%rip)
0000000000036727	movq	0x0006e36a(%rip),%rsi
000000000003672e	movq	0x0006f5bb(%rip),%rdx
0000000000036735	movq	%r14,%rdi
0000000000036738	call	*0x0004d99a(%rip)
000000000003673e	movq	0x0006e373(%rip),%rsi
0000000000036745	movq	%rbx,%rdi
0000000000036748	call	*0x0004d98a(%rip)
000000000003674e	movq	0x0006e36b(%rip),%rsi
0000000000036755	movq	%rax,%rdi
0000000000036758	call	*0x0004d97a(%rip)
000000000003675e	movq	0x0006e363(%rip),%rsi
0000000000036765	movq	%rax,%rdi
0000000000036768	movq	%r14,%rdx
000000000003676b	movq	0x0004d966(%rip),%rax
0000000000036772	addq	$0x08,%rsp
0000000000036776	popq	%rbx
0000000000036777	popq	%r12
0000000000036779	popq	%r13
000000000003677b	popq	%r14
000000000003677d	popq	%r15
000000000003677f	popq	%rbp
0000000000036780	jmp	*%rax
-[PBXGDB_FixAndContinueSequence errorMessage]:
0000000000036782	pushq	%rbp
0000000000036783	movq	%rsp,%rbp
0000000000036786	movq	0x000782ab(%rip),%rax
000000000003678d	movq	(%rdi,%rax),%rcx
0000000000036791	leaq	0x000791a0(%rip),%rax
0000000000036798	testq	%rcx,%rcx
000000000003679b	cmovneq	%rcx,%rax
000000000003679f	popq	%rbp
00000000000367a0	ret
-[PBXGDB_FixAndContinueSequence setErrorMessage:]:
00000000000367a1	pushq	%rbp
00000000000367a2	movq	%rsp,%rbp
00000000000367a5	movq	%rdx,%rax
00000000000367a8	movq	%rdi,%rcx
00000000000367ab	movq	0x00078286(%rip),%rdx
00000000000367b2	movq	%rax,%rdi
00000000000367b5	movq	%rcx,%rsi
00000000000367b8	popq	%rbp
00000000000367b9	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_FixAndContinueSequence handleErrorForMICommand:]:
00000000000367be	pushq	%rbp
00000000000367bf	movq	%rsp,%rbp
00000000000367c2	pushq	%r14
00000000000367c4	pushq	%rbx
00000000000367c5	movq	%rdi,%rbx
00000000000367c8	movq	0x00078271(%rip),%rax
00000000000367cf	movb	$0x00,(%rbx,%rax)
00000000000367d3	movq	0x0006f43e(%rip),%rsi
00000000000367da	movq	0x0004d8f7(%rip),%r14
00000000000367e1	movq	%rdx,%rdi
00000000000367e4	call	*%r14
00000000000367e7	movq	0x0006f8e2(%rip),%rsi
00000000000367ee	movq	%rbx,%rdi
00000000000367f1	movq	%rax,%rdx
00000000000367f4	call	*%r14
00000000000367f7	movq	0x0006f8da(%rip),%rsi
00000000000367fe	movq	%rbx,%rdi
0000000000036801	call	*%r14
0000000000036804	movl	$0x00000001,%eax
0000000000036809	popq	%rbx
000000000003680a	popq	%r14
000000000003680c	popq	%rbp
000000000003680d	ret
-[PBXGDB_FixAndContinueSequence end]:
000000000003680e	pushq	%rbp
000000000003680f	movq	%rsp,%rbp
0000000000036812	pushq	%r15
0000000000036814	pushq	%r14
0000000000036816	pushq	%r13
0000000000036818	pushq	%r12
000000000003681a	pushq	%rbx
000000000003681b	subq	$0x18,%rsp
000000000003681f	movq	%rdi,%rbx
0000000000036822	movq	0x0006e55f(%rip),%rsi
0000000000036829	movq	0x00071c98(%rip),%rdi
0000000000036830	movq	0x0004d8a1(%rip),%r15
0000000000036837	call	*%r15
000000000003683a	movq	%rax,%r14
000000000003683d	movq	0x00071e34(%rip),%r12
0000000000036844	movq	0x0006f865(%rip),%rsi
000000000003684b	movq	%rbx,%rdi
000000000003684e	call	*%r15
0000000000036851	leaq	0x0007aac0(%rip),%rcx
0000000000036858	movq	0x0006f159(%rip),%rsi
000000000003685f	movq	%r12,%rdi
0000000000036862	movq	%rax,%rdx
0000000000036865	call	*%r15
0000000000036868	leaq	0x0007aa89(%rip),%rdx
000000000003686f	movq	0x0006f86a(%rip),%rsi
0000000000036876	movq	%r14,%rdi
0000000000036879	xorl	%ecx,%ecx
000000000003687b	movq	%rax,%r8
000000000003687e	call	*%r15
0000000000036881	movq	0x0006e230(%rip),%rsi
0000000000036888	movq	%rbx,%rdi
000000000003688b	call	*%r15
000000000003688e	movq	%rax,%r14
0000000000036891	movq	0x000781a8(%rip),%rax
0000000000036898	cmpb	$0x01,(%rbx,%rax)
000000000003689c	je	0x000368a7
000000000003689e	movq	%rbx,0xc0(%rbp)
00000000000368a2	jmp	0x0003692d
00000000000368a7	movq	0x0006f80a(%rip),%rsi
00000000000368ae	movq	0x0004d823(%rip),%r12
00000000000368b5	movq	%rbx,%rdi
00000000000368b8	call	*%r12
00000000000368bb	movq	%rax,%r15
00000000000368be	movq	0x0007815b(%rip),%rax
00000000000368c5	movq	(%rbx,%rax),%r13
00000000000368c9	movq	0x0006f7f0(%rip),%rsi
00000000000368d0	movq	%rbx,%rdi
00000000000368d3	call	*%r12
00000000000368d6	movq	0x0006f80b(%rip),%rsi
00000000000368dd	movq	%r14,%rdi
00000000000368e0	movq	%r15,%rdx
00000000000368e3	movq	%r13,%rcx
00000000000368e6	movq	%rax,%r8
00000000000368e9	call	*%r12
00000000000368ec	movq	0x0006e3f5(%rip),%rsi
00000000000368f3	movq	%r14,%rdi
00000000000368f6	call	*%r12
00000000000368f9	movq	0x00078128(%rip),%rcx
0000000000036900	movq	(%rbx,%rcx),%rdx
0000000000036904	movq	0x0006f7e5(%rip),%rsi
000000000003690b	movq	%rax,%rdi
000000000003690e	call	*%r12
0000000000036911	movq	0x00078110(%rip),%rax
0000000000036918	movq	(%rbx,%rax),%rdx
000000000003691c	movq	%rbx,0xc0(%rbp)
0000000000036920	movq	0x0006f7d1(%rip),%rsi
0000000000036927	movq	%r14,%rdi
000000000003692a	call	*%r12
000000000003692d	movq	0x0006e49c(%rip),%rsi
0000000000036934	movq	0x0004d79d(%rip),%rbx
000000000003693b	movq	%r14,%rdi
000000000003693e	call	*%rbx
0000000000036940	movq	0x0006f7b9(%rip),%rsi
0000000000036947	movq	%rax,%rdi
000000000003694a	call	*%rbx
000000000003694c	testb	%al,%al
000000000003694e	jne	0x00036a1f
0000000000036954	movq	0x000780e5(%rip),%rax
000000000003695b	movq	0xc0(%rbp),%rcx
000000000003695f	cmpb	$0x01,(%rcx,%rax)
0000000000036963	jne	0x00036a1f
0000000000036969	movq	0x0006e378(%rip),%rsi
0000000000036970	movq	0x0004d761(%rip),%rbx
0000000000036977	movq	%r14,%rdi
000000000003697a	call	*%rbx
000000000003697c	movq	0x0006e46d(%rip),%rsi
0000000000036983	movq	%rax,%rdi
0000000000036986	call	*%rbx
0000000000036988	movq	0x0006f779(%rip),%rsi
000000000003698f	movq	%rax,%rdi
0000000000036992	call	*%rbx
0000000000036994	movq	0x0006e155(%rip),%rsi
000000000003699b	movq	%rax,%rdi
000000000003699e	call	*%rbx
00000000000369a0	movq	%rax,%r12
00000000000369a3	movq	0x0006e14e(%rip),%rsi
00000000000369aa	movq	%r12,%rdi
00000000000369ad	call	*%rbx
00000000000369af	movq	%rax,%r15
00000000000369b2	testq	%r15,%r15
00000000000369b5	je	0x00036a1f
00000000000369b7	movq	0x0006e8aa(%rip),%rbx
00000000000369be	leaq	0x0007194b(%rip),%r13
00000000000369c5	leaq	0x00071954(%rip),%r14
00000000000369cc	movq	%r15,%rdi
00000000000369cf	movq	%rbx,%rsi
00000000000369d2	call	*0x0004d700(%rip)
00000000000369d8	movq	%rax,%rdi
00000000000369db	movq	%r13,%rsi
00000000000369de	call	*0x0007192c(%rip)
00000000000369e4	testq	%rax,%rax
00000000000369e7	jne	0x00036a03
00000000000369e9	movq	%r12,%rdi
00000000000369ec	movq	0x0006e105(%rip),%rsi
00000000000369f3	call	*0x0004d6df(%rip)
00000000000369f9	movq	%rax,%r15
00000000000369fc	testq	%r15,%r15
00000000000369ff	jne	0x000369cc
0000000000036a01	jmp	0x00036a1f
0000000000036a03	movq	%r15,%rdi
0000000000036a06	movq	%rbx,%rsi
0000000000036a09	call	*0x0004d6c9(%rip)
0000000000036a0f	movq	%rax,%rdi
0000000000036a12	movq	%r14,%rsi
0000000000036a15	xorl	%edx,%edx
0000000000036a17	call	*0x00071903(%rip)
0000000000036a1d	jmp	0x000369e9
0000000000036a1f	movq	0xc0(%rbp),%rbx
0000000000036a23	movq	%rbx,0xc8(%rbp)
0000000000036a27	movq	0x000723da(%rip),%rax
0000000000036a2e	movq	%rax,0xd0(%rbp)
0000000000036a32	movq	0x0006e0ff(%rip),%rsi
0000000000036a39	leaq	0xc8(%rbp),%rdi
0000000000036a3d	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000036a42	movq	0x00077fff(%rip),%rax
0000000000036a49	movq	(%rbx,%rax),%r14
0000000000036a4d	testq	%r14,%r14
0000000000036a50	je	0x00036aa3
0000000000036a52	movq	0x00071a8f(%rip),%rdi
0000000000036a59	leaq	0x000718d0(%rip),%rsi
0000000000036a60	call	*0x000718ca(%rip)
0000000000036a66	leaq	0x000718d3(%rip),%rsi
0000000000036a6d	movq	%r14,%rdi
0000000000036a70	movq	%rax,%rdx
0000000000036a73	call	*0x000718c7(%rip)
0000000000036a79	cmpb	$0x01,%al
0000000000036a7b	jne	0x00036aa3
0000000000036a7d	movq	0x00077fbc(%rip),%rax
0000000000036a84	movsbl	(%rbx,%rax),%ecx
0000000000036a88	movq	0x00077fb9(%rip),%rax
0000000000036a8f	movq	(%rbx,%rax),%rdi
0000000000036a93	movq	0x0006f676(%rip),%rsi
0000000000036a9a	movq	%rbx,%rdx
0000000000036a9d	call	*0x0004d635(%rip)
0000000000036aa3	addq	$0x18,%rsp
0000000000036aa7	popq	%rbx
0000000000036aa8	popq	%r12
0000000000036aaa	popq	%r13
0000000000036aac	popq	%r14
0000000000036aae	popq	%r15
0000000000036ab0	popq	%rbp
0000000000036ab1	ret
-[PBXGDB_FixAndContinueSequence didFinish]:
0000000000036ab2	pushq	%rbp
0000000000036ab3	movq	%rsp,%rbp
0000000000036ab6	pushq	%rbx
0000000000036ab7	pushq	%rax
0000000000036ab8	movq	%rdi,%rbx
0000000000036abb	movq	0x00077f7e(%rip),%rax
0000000000036ac2	movb	$0x01,(%rbx,%rax)
0000000000036ac6	movq	0x0006dfeb(%rip),%rsi
0000000000036acd	call	*0x0004d605(%rip)
0000000000036ad3	movq	0x0006f63e(%rip),%rsi
0000000000036ada	movq	%rax,%rdi
0000000000036add	call	*0x0004d5f5(%rip)
0000000000036ae3	movq	0x0006f5ee(%rip),%rsi
0000000000036aea	movq	%rbx,%rdi
0000000000036aed	movq	0x0004d5e4(%rip),%rax
0000000000036af4	addq	$0x08,%rsp
0000000000036af8	popq	%rbx
0000000000036af9	popq	%rbp
0000000000036afa	jmp	*%rax
-[PBXGDB_FixAndContinueSequence target]:
0000000000036afc	pushq	%rbp
0000000000036afd	movq	%rsp,%rbp
0000000000036b00	movq	0x00077f41(%rip),%rax
0000000000036b07	movq	(%rdi,%rax),%rax
0000000000036b0b	popq	%rbp
0000000000036b0c	ret
-[PBXGDB_FixAndContinueSequence setTarget:]:
0000000000036b0d	pushq	%rbp
0000000000036b0e	movq	%rsp,%rbp
0000000000036b11	movq	%rdx,%rax
0000000000036b14	movq	%rdi,%rcx
0000000000036b17	movq	0x00077f2a(%rip),%rdx
0000000000036b1e	movq	%rax,%rdi
0000000000036b21	movq	%rcx,%rsi
0000000000036b24	popq	%rbp
0000000000036b25	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_FixAndContinueSequence didFix]:
0000000000036b2a	pushq	%rbp
0000000000036b2b	movq	%rsp,%rbp
0000000000036b2e	movq	0x00077f0b(%rip),%rax
0000000000036b35	movsbl	(%rdi,%rax),%eax
0000000000036b39	popq	%rbp
0000000000036b3a	ret
-[PBXGDB_FixAndContinueIsSupportedSequence commandString]:
0000000000036b3b	pushq	%rbp
0000000000036b3c	movq	%rsp,%rbp
0000000000036b3f	leaq	0x0007a7f2(%rip),%rax
0000000000036b46	popq	%rbp
0000000000036b47	ret
-[PBXGDB_FixAndContinueIsSupportedSequence handleErrorForMICommand:]:
0000000000036b48	pushq	%rbp
0000000000036b49	movq	%rsp,%rbp
0000000000036b4c	movq	0x00077efd(%rip),%rax
0000000000036b53	movb	$0x01,(%rdi,%rax)
0000000000036b57	movq	0x0006dfda(%rip),%rsi
0000000000036b5e	call	*0x0004d574(%rip)
0000000000036b64	movl	$0x00000001,%eax
0000000000036b69	popq	%rbp
0000000000036b6a	ret
-[PBXGDB_FixAndContinueIsSupportedSequence _gotFixAndContinueStatus:]:
0000000000036b6b	pushq	%rbp
0000000000036b6c	movq	%rsp,%rbp
0000000000036b6f	pushq	%rbx
0000000000036b70	pushq	%rax
0000000000036b71	movq	%rdi,%rbx
0000000000036b74	movq	0x0006df55(%rip),%rsi
0000000000036b7b	movq	%rdx,%rdi
0000000000036b7e	call	*0x0004d554(%rip)
0000000000036b84	movq	0x0006df4d(%rip),%rsi
0000000000036b8b	leaq	0x0007a7c6(%rip),%rdx
0000000000036b92	movq	%rax,%rdi
0000000000036b95	call	*0x0004d53d(%rip)
0000000000036b9b	movq	0x0006df66(%rip),%rsi
0000000000036ba2	movq	%rax,%rdi
0000000000036ba5	call	*0x0004d52d(%rip)
0000000000036bab	leaq	0x000717ae(%rip),%rsi
0000000000036bb2	leaq	0x00078eff(%rip),%rdx
0000000000036bb9	movq	%rax,%rdi
0000000000036bbc	call	*0x0007179e(%rip)
0000000000036bc2	movq	0x00077e87(%rip),%rcx
0000000000036bc9	cmpb	$0x01,%al
0000000000036bcb	sete	(%rbx,%rcx)
0000000000036bcf	movq	0x0006df62(%rip),%rsi
0000000000036bd6	movq	%rbx,%rdi
0000000000036bd9	movq	0x0004d4f8(%rip),%rax
0000000000036be0	addq	$0x08,%rsp
0000000000036be4	popq	%rbx
0000000000036be5	popq	%rbp
0000000000036be6	jmp	*%rax
-[PBXGDB_FixAndContinueIsSupportedSequence _fetchStatus]:
0000000000036be8	pushq	%rbp
0000000000036be9	movq	%rsp,%rbp
0000000000036bec	pushq	%r14
0000000000036bee	pushq	%rbx
0000000000036bef	movq	%rdi,%r14
0000000000036bf2	movq	0x0006de87(%rip),%rsi
0000000000036bf9	movq	0x00071cb8(%rip),%rdi
0000000000036c00	call	*0x0004d4d2(%rip)
0000000000036c06	movq	%rax,%rbx
0000000000036c09	movq	0x0006de78(%rip),%rsi
0000000000036c10	movq	%rbx,%rdi
0000000000036c13	movq	%r14,%rdx
0000000000036c16	call	*0x0004d4bc(%rip)
0000000000036c1c	movq	0x0006de75(%rip),%rsi
0000000000036c23	movq	0x0006f4f6(%rip),%rdx
0000000000036c2a	movq	%rbx,%rdi
0000000000036c2d	call	*0x0004d4a5(%rip)
0000000000036c33	movq	0x0006de7e(%rip),%rsi
0000000000036c3a	movq	%r14,%rdi
0000000000036c3d	call	*0x0004d495(%rip)
0000000000036c43	movq	0x0006de76(%rip),%rsi
0000000000036c4a	movq	%rax,%rdi
0000000000036c4d	call	*0x0004d485(%rip)
0000000000036c53	movq	0x0006de6e(%rip),%rsi
0000000000036c5a	movq	%rax,%rdi
0000000000036c5d	movq	%rbx,%rdx
0000000000036c60	movq	0x0004d471(%rip),%rax
0000000000036c67	popq	%rbx
0000000000036c68	popq	%r14
0000000000036c6a	popq	%rbp
0000000000036c6b	jmp	*%rax
-[PBXGDB_FixAndContinueIsSupportedSequence _gotVerifyFixAndContinue:]:
0000000000036c6d	pushq	%rbp
0000000000036c6e	movq	%rsp,%rbp
0000000000036c71	pushq	%r15
0000000000036c73	pushq	%r14
0000000000036c75	pushq	%r12
0000000000036c77	pushq	%rbx
0000000000036c78	movq	%rdx,%r15
0000000000036c7b	movq	%rdi,%rbx
0000000000036c7e	movq	0x0006de33(%rip),%rsi
0000000000036c85	movq	-[DBGGDBStackFrame setRegisters:](%rip),%r12
0000000000036c8c	call	*%r12
0000000000036c8f	movq	%rax,%r14
0000000000036c92	movq	0x0006eda7(%rip),%rsi
0000000000036c99	movq	%r15,%rdi
0000000000036c9c	call	*%r12
0000000000036c9f	cmpb	$0x01,%al
0000000000036ca1	jne	0x00036ccf
0000000000036ca3	movq	0x0006ed9e(%rip),%rsi
0000000000036caa	movq	%r15,%rdi
0000000000036cad	call	*0x0004d425(%rip)
0000000000036cb3	cmpb	$0x01,%al
0000000000036cb5	jne	0x00036ccf
0000000000036cb7	movq	0x0006f46a(%rip),%rsi
0000000000036cbe	movq	%rbx,%rdi
0000000000036cc1	call	*0x0004d411(%rip)
0000000000036cc7	movl	$0x00000002,%r15d
0000000000036ccd	jmp	0x00036cf0
0000000000036ccf	movq	0x00077d7a(%rip),%rax
0000000000036cd6	movb	$0x01,(%rbx,%rax)
0000000000036cda	movq	0x0006de57(%rip),%rsi
0000000000036ce1	movq	%rbx,%rdi
0000000000036ce4	call	*0x0004d3ee(%rip)
0000000000036cea	movl	$0x00000001,%r15d
0000000000036cf0	movq	0x0006ddc9(%rip),%rsi
0000000000036cf7	movq	%r14,%rdi
0000000000036cfa	call	*0x0004d3d8(%rip)
0000000000036d00	movq	%rax,%r14
0000000000036d03	movq	0x0006f426(%rip),%rsi
0000000000036d0a	movq	%rbx,%rdi
0000000000036d0d	call	*0x0004d3c5(%rip)
0000000000036d13	movq	0x0006ed36(%rip),%rsi
0000000000036d1a	movq	%r14,%rdi
0000000000036d1d	movl	%r15d,%edx
0000000000036d20	movq	%rax,%rcx
0000000000036d23	movq	0x0004d3ae(%rip),%rax
0000000000036d2a	popq	%rbx
0000000000036d2b	popq	%r12
0000000000036d2d	popq	%r14
0000000000036d2f	popq	%r15
0000000000036d31	popq	%rbp
0000000000036d32	jmp	*%rax
-[PBXGDB_FixAndContinueIsSupportedSequence execute]:
0000000000036d34	pushq	%rbp
0000000000036d35	movq	%rsp,%rbp
0000000000036d38	pushq	%r15
0000000000036d3a	pushq	%r14
0000000000036d3c	pushq	%rbx
0000000000036d3d	pushq	%rax
0000000000036d3e	movq	%rdi,%rbx
0000000000036d41	movq	0x0006dd70(%rip),%rsi
0000000000036d48	movq	0x0004d389(%rip),%r15
0000000000036d4f	call	*%r15
0000000000036d52	movq	0x0006dd67(%rip),%rsi
0000000000036d59	movq	%rax,%rdi
0000000000036d5c	call	*%r15
0000000000036d5f	movq	%rax,%r14
0000000000036d62	movq	0x0006f3c7(%rip),%rsi
0000000000036d69	movq	%rbx,%rdi
0000000000036d6c	call	*%r15
0000000000036d6f	movq	0x0006ec82(%rip),%rsi
0000000000036d76	movq	%r14,%rdi
0000000000036d79	movq	%rax,%rdx
0000000000036d7c	call	*%r15
0000000000036d7f	cmpl	$0x02,%eax
0000000000036d82	je	0x00036e34
0000000000036d88	testl	%eax,%eax
0000000000036d8a	jne	0x00036e4e
0000000000036d90	movq	0x0006dce9(%rip),%rsi
0000000000036d97	movq	0x0007196a(%rip),%rdi
0000000000036d9e	call	*0x0004d334(%rip)
0000000000036da4	movq	%rax,%r14
0000000000036da7	movq	0x0006f382(%rip),%rsi
0000000000036dae	movq	%rbx,%rdi
0000000000036db1	call	*0x0004d321(%rip)
0000000000036db7	movq	0x0006ec42(%rip),%rsi
0000000000036dbe	movq	%r14,%rdi
0000000000036dc1	movq	%rax,%rdx
0000000000036dc4	call	*0x0004d30e(%rip)
0000000000036dca	movq	0x0006dcb7(%rip),%rsi
0000000000036dd1	movq	%r14,%rdi
0000000000036dd4	movq	%rbx,%rdx
0000000000036dd7	call	*0x0004d2fb(%rip)
0000000000036ddd	movq	0x0006dcb4(%rip),%rsi
0000000000036de4	movq	0x0006f34d(%rip),%rdx
0000000000036deb	movq	%r14,%rdi
0000000000036dee	call	*0x0004d2e4(%rip)
0000000000036df4	movq	0x0006dcbd(%rip),%rsi
0000000000036dfb	movq	%rbx,%rdi
0000000000036dfe	call	*0x0004d2d4(%rip)
0000000000036e04	movq	0x0006dcb5(%rip),%rsi
0000000000036e0b	movq	%rax,%rdi
0000000000036e0e	call	*0x0004d2c4(%rip)
0000000000036e14	movq	0x0006dcad(%rip),%rsi
0000000000036e1b	movq	%rax,%rdi
0000000000036e1e	movq	%r14,%rdx
0000000000036e21	movq	0x0004d2b0(%rip),%rax
0000000000036e28	addq	$0x08,%rsp
0000000000036e2c	popq	%rbx
0000000000036e2d	popq	%r14
0000000000036e2f	popq	%r15
0000000000036e31	popq	%rbp
0000000000036e32	jmp	*%rax
0000000000036e34	movq	0x0006f2ed(%rip),%rsi
0000000000036e3b	movq	%rbx,%rdi
0000000000036e3e	addq	$0x08,%rsp
0000000000036e42	popq	%rbx
0000000000036e43	popq	%r14
0000000000036e45	popq	%r15
0000000000036e47	popq	%rbp
0000000000036e48	jmp	*0x0004d28a(%rip)
0000000000036e4e	movq	0x00077bfb(%rip),%rax
0000000000036e55	movb	$0x00,(%rbx,%rax)
0000000000036e59	movq	0x0006dcd8(%rip),%rsi
0000000000036e60	jmp	0x00036e3b
-[PBXGDB_FixAndContinueIsSupportedSequence didFinish]:
0000000000036e62	pushq	%rbp
0000000000036e63	movq	%rsp,%rbp
0000000000036e66	pushq	%r14
0000000000036e68	pushq	%rbx
0000000000036e69	subq	$0x10,%rsp
0000000000036e6d	movq	%rdi,%rbx
0000000000036e70	movq	0x0006dc41(%rip),%rsi
0000000000036e77	movq	0x0004d25a(%rip),%r14
0000000000036e7e	call	*%r14
0000000000036e81	movq	0x00077bc8(%rip),%rcx
0000000000036e88	movsbl	(%rbx,%rcx),%edx
0000000000036e8c	movq	0x0006f2ad(%rip),%rsi
0000000000036e93	movq	%rax,%rdi
0000000000036e96	call	*%r14
0000000000036e99	leaq	0xe0(%rbp),%rdi
0000000000036e9d	movq	%rbx,0xe0(%rbp)
0000000000036ea1	movq	0x00071f68(%rip),%rax
0000000000036ea8	movq	%rax,0xe8(%rbp)
0000000000036eac	movq	0x0006dc85(%rip),%rsi
0000000000036eb3	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000036eb8	addq	$0x10,%rsp
0000000000036ebc	popq	%rbx
0000000000036ebd	popq	%r14
0000000000036ebf	popq	%rbp
0000000000036ec0	ret
-[PBXGDB_FrameDataValue2 hasSymbols]:
0000000000036ec1	pushq	%rbp
0000000000036ec2	movq	%rsp,%rbp
0000000000036ec5	movq	0x00077b94(%rip),%rax
0000000000036ecc	movsbl	(%rdi,%rax),%eax
0000000000036ed0	popq	%rbp
0000000000036ed1	ret
-[PBXGDB_FrameDescription description]:
0000000000036ed2	pushq	%rbp
0000000000036ed3	movq	%rsp,%rbp
0000000000036ed6	pushq	%r14
0000000000036ed8	pushq	%rbx
0000000000036ed9	subq	$0x20,%rsp
0000000000036edd	movq	%rdi,%rbx
0000000000036ee0	movq	0x00071569(%rip),%r14
0000000000036ee7	movq	%rbx,0xe0(%rbp)
0000000000036eeb	movq	0x00071f2e(%rip),%rax
0000000000036ef2	movq	%rax,0xe8(%rbp)
0000000000036ef6	movq	0x0006eed3(%rip),%rsi
0000000000036efd	leaq	0xe0(%rbp),%rdi
0000000000036f01	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000036f06	leaq	0x0007a46b(%rip),%rdx
0000000000036f0d	movq	0x00077b5c(%rip),%rcx
0000000000036f14	movq	(%rbx,%rcx),%r9
0000000000036f18	movq	0x00077b49(%rip),%rcx
0000000000036f1f	movq	(%rbx,%rcx),%r8
0000000000036f23	movq	0x00077b4e(%rip),%rcx
0000000000036f2a	movq	(%rbx,%rcx),%rcx
0000000000036f2e	movq	0x0006dc43(%rip),%rsi
0000000000036f35	movq	%rcx,(%rsp)
0000000000036f39	movq	%r14,%rdi
0000000000036f3c	movq	%rax,%rcx
0000000000036f3f	xorb	%al,%al
0000000000036f41	call	*0x0004d191(%rip)
0000000000036f47	addq	$0x20,%rsp
0000000000036f4b	popq	%rbx
0000000000036f4c	popq	%r14
0000000000036f4e	popq	%rbp
0000000000036f4f	ret
-[PBXGDB_FrameDescription setAddress:]:
0000000000036f50	pushq	%rbp
0000000000036f51	movq	%rsp,%rbp
0000000000036f54	movq	0x00077b0d(%rip),%rax
0000000000036f5b	movq	%rdx,(%rdi,%rax)
0000000000036f5f	popq	%rbp
0000000000036f60	ret
-[PBXGDB_FrameDescription address]:
0000000000036f61	pushq	%rbp
0000000000036f62	movq	%rsp,%rbp
0000000000036f65	movq	0x00077afc(%rip),%rax
0000000000036f6c	movq	(%rdi,%rax),%rax
0000000000036f70	popq	%rbp
0000000000036f71	ret
-[PBXGDB_FrameDescription setFileName:]:
0000000000036f72	pushq	%rbp
0000000000036f73	movq	%rsp,%rbp
0000000000036f76	movq	%rdx,%rax
0000000000036f79	movq	%rdi,%rcx
0000000000036f7c	movq	0x00077aed(%rip),%rdx
0000000000036f83	cmpq	%rax,(%rcx,%rdx)
0000000000036f87	jne	0x00036f8b
0000000000036f89	popq	%rbp
0000000000036f8a	ret
0000000000036f8b	addq	%rcx,%rdx
0000000000036f8e	subq	%rcx,%rdx
0000000000036f91	movq	%rax,%rdi
0000000000036f94	movq	%rcx,%rsi
0000000000036f97	popq	%rbp
0000000000036f98	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_FrameDescription fileName]:
0000000000036f9d	pushq	%rbp
0000000000036f9e	movq	%rsp,%rbp
0000000000036fa1	movq	0x00077ac8(%rip),%rax
0000000000036fa8	movq	(%rdi,%rax),%rax
0000000000036fac	popq	%rbp
0000000000036fad	ret
-[PBXGDB_FrameDescription setLineNumber:]:
0000000000036fae	pushq	%rbp
0000000000036faf	movq	%rsp,%rbp
0000000000036fb2	movq	0x00077abf(%rip),%rax
0000000000036fb9	movq	%rdx,(%rdi,%rax)
0000000000036fbd	popq	%rbp
0000000000036fbe	ret
-[PBXGDB_FrameDescription lineNumber]:
0000000000036fbf	pushq	%rbp
0000000000036fc0	movq	%rsp,%rbp
0000000000036fc3	movq	0x00077aae(%rip),%rax
0000000000036fca	movq	(%rdi,%rax),%rax
0000000000036fce	popq	%rbp
0000000000036fcf	ret
-[PBXGDB_GlobalsForShlibsSequence timeOutPeriod]:
0000000000036fd0	pushq	%rbp
0000000000036fd1	movq	%rsp,%rbp
0000000000036fd4	movsd	0x00017b1c(%rip),%xmm0
0000000000036fdc	popq	%rbp
0000000000036fdd	ret
-[PBXGDB_GlobalsForShlibsSequence interruptIfNeeded]:
0000000000036fde	pushq	%rbp
0000000000036fdf	movq	%rsp,%rbp
0000000000036fe2	movl	$0x00000001,%eax
0000000000036fe7	popq	%rbp
0000000000036fe8	ret
-[PBXGDB_GlobalsForShlibsSequence addingSavedGlobals]:
0000000000036fe9	pushq	%rbp
0000000000036fea	movq	%rsp,%rbp
0000000000036fed	movq	0x00077a8c(%rip),%rax
0000000000036ff4	movsbl	(%rdi,%rax),%eax
0000000000036ff8	popq	%rbp
0000000000036ff9	ret
-[PBXGDB_GlobalsForShlibsSequence setaddingSavedGlobals:]:
0000000000036ffa	pushq	%rbp
0000000000036ffb	movq	%rsp,%rbp
0000000000036ffe	movq	0x00077a7b(%rip),%rax
0000000000037005	movb	%dl,(%rdi,%rax)
0000000000037008	popq	%rbp
0000000000037009	ret
-[PBXGDB_GlobalsForShlibsSequence setFilter:]:
000000000003700a	pushq	%rbp
000000000003700b	movq	%rsp,%rbp
000000000003700e	movq	%rdx,%rax
0000000000037011	movq	%rdi,%rcx
0000000000037014	movq	0x00077a6d(%rip),%rdx
000000000003701b	movq	%rax,%rdi
000000000003701e	movq	%rcx,%rsi
0000000000037021	popq	%rbp
0000000000037022	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_GlobalsForShlibsSequence setSavedGlobalsForShlib:]:
0000000000037027	pushq	%rbp
0000000000037028	movq	%rsp,%rbp
000000000003702b	pushq	%rbx
000000000003702c	pushq	%rax
000000000003702d	movq	%rdi,%rbx
0000000000037030	movq	0x0006da41(%rip),%rsi
0000000000037037	movq	%rdx,%rdi
000000000003703a	call	*0x0004d098(%rip)
0000000000037040	movq	0x00077a49(%rip),%rdx
0000000000037047	movq	%rax,%rdi
000000000003704a	movq	%rbx,%rsi
000000000003704d	addq	$0x08,%rsp
0000000000037051	popq	%rbx
0000000000037052	popq	%rbp
0000000000037053	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_GlobalsForShlibsSequence handleErrorForMICommand:]:
0000000000037058	pushq	%rbp
0000000000037059	movq	%rsp,%rbp
000000000003705c	movq	0x0006dad5(%rip),%rsi
0000000000037063	call	*0x0004d06f(%rip)
0000000000037069	movl	$0x00000001,%eax
000000000003706e	popq	%rbp
000000000003706f	ret
-[PBXGDB_GlobalsForShlibsSequence didFinish]:
0000000000037070	pushq	%rbp
0000000000037071	movq	%rsp,%rbp
0000000000037074	pushq	%r14
0000000000037076	pushq	%rbx
0000000000037077	subq	$0x10,%rsp
000000000003707b	movq	%rdi,%rbx
000000000003707e	movq	0x0006da33(%rip),%rsi
0000000000037085	movq	0x0004d04c(%rip),%r14
000000000003708c	call	*%r14
000000000003708f	movq	0x0006ea12(%rip),%rsi
0000000000037096	movq	%rax,%rdi
0000000000037099	call	*%r14
000000000003709c	movq	0x0006e47d(%rip),%rsi
00000000000370a3	movq	%rax,%rdi
00000000000370a6	call	*%r14
00000000000370a9	movq	0x0006e640(%rip),%rsi
00000000000370b0	movq	%rax,%rdi
00000000000370b3	call	*%r14
00000000000370b6	leaq	0xe0(%rbp),%rdi
00000000000370ba	movq	%rbx,0xe0(%rbp)
00000000000370be	movq	0x00071d63(%rip),%rax
00000000000370c5	movq	%rax,0xe8(%rbp)
00000000000370c9	movq	0x0006da68(%rip),%rsi
00000000000370d0	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000370d5	addq	$0x10,%rsp
00000000000370d9	popq	%rbx
00000000000370da	popq	%r14
00000000000370dc	popq	%rbp
00000000000370dd	ret
-[PBXGDB_GlobalsForShlibsSequence _verifyGlobalsCmd]:
00000000000370de	pushq	%rbp
00000000000370df	movq	%rsp,%rbp
00000000000370e2	pushq	%r14
00000000000370e4	pushq	%rbx
00000000000370e5	movq	%rdi,%r14
00000000000370e8	movq	0x0006d9c9(%rip),%rsi
00000000000370ef	movq	0x0004cfe2(%rip),%rbx
00000000000370f6	call	*%rbx
00000000000370f8	movq	0x0006d9c1(%rip),%rsi
00000000000370ff	movq	%rax,%rdi
0000000000037102	call	*%rbx
0000000000037104	leaq	0x0007a28d(%rip),%rdx
000000000003710b	movq	0x0006e8e6(%rip),%rsi
0000000000037112	movq	%rax,%rdi
0000000000037115	call	*%rbx
0000000000037117	cmpl	$0x02,%eax
000000000003711a	je	0x000371bf
0000000000037120	testl	%eax,%eax
0000000000037122	jne	0x000371d3
0000000000037128	movq	0x0006d951(%rip),%rsi
000000000003712f	movq	0x000715d2(%rip),%rdi
0000000000037136	call	*0x0004cf9c(%rip)
000000000003713c	movq	%rax,%rbx
000000000003713f	movq	0x0006e8ba(%rip),%rsi
0000000000037146	leaq	0x0007a24b(%rip),%rdx
000000000003714d	movq	%rbx,%rdi
0000000000037150	call	*0x0004cf82(%rip)
0000000000037156	movq	0x0006d92b(%rip),%rsi
000000000003715d	movq	%rbx,%rdi
0000000000037160	movq	%r14,%rdx
0000000000037163	call	*0x0004cf6f(%rip)
0000000000037169	movq	0x0006d928(%rip),%rsi
0000000000037170	movq	0x0006efe1(%rip),%rdx
0000000000037177	movq	%rbx,%rdi
000000000003717a	call	*0x0004cf58(%rip)
0000000000037180	movq	0x0006d931(%rip),%rsi
0000000000037187	movq	%r14,%rdi
000000000003718a	call	*0x0004cf48(%rip)
0000000000037190	movq	0x0006d929(%rip),%rsi
0000000000037197	movq	%rax,%rdi
000000000003719a	call	*0x0004cf38(%rip)
00000000000371a0	movq	0x0006efb9(%rip),%rsi
00000000000371a7	movq	%rax,%rdi
00000000000371aa	movq	%rbx,%rdx
00000000000371ad	movl	$0x00000001,%ecx
00000000000371b2	movq	0x0004cf1f(%rip),%rax
00000000000371b9	popq	%rbx
00000000000371ba	popq	%r14
00000000000371bc	popq	%rbp
00000000000371bd	jmp	*%rax
00000000000371bf	movq	0x0006efa2(%rip),%rsi
00000000000371c6	movq	%r14,%rdi
00000000000371c9	popq	%rbx
00000000000371ca	popq	%r14
00000000000371cc	popq	%rbp
00000000000371cd	jmp	*0x0004cf05(%rip)
00000000000371d3	movq	0x0006d95e(%rip),%rsi
00000000000371da	jmp	0x000371c6
-[PBXGDB_GlobalsForShlibsSequence _didRaiseSymbolLevel:]:
00000000000371dc	pushq	%rbp
00000000000371dd	movq	%rsp,%rbp
00000000000371e0	pushq	%rbx
00000000000371e1	pushq	%rax
00000000000371e2	movq	%rdi,%rbx
00000000000371e5	movq	0x000778ac(%rip),%rax
00000000000371ec	movq	(%rbx,%rax),%rdi
00000000000371f0	movq	0x0006ef79(%rip),%rsi
00000000000371f7	call	*0x0004cedb(%rip)
00000000000371fd	movq	0x0006ef74(%rip),%rsi
0000000000037204	movq	%rbx,%rdi
0000000000037207	movq	0x0004ceca(%rip),%rax
000000000003720e	addq	$0x08,%rsp
0000000000037212	popq	%rbx
0000000000037213	popq	%rbp
0000000000037214	jmp	*%rax
-[PBXGDB_GlobalsForShlibsSequence execute]:
0000000000037216	pushq	%rbp
0000000000037217	movq	%rsp,%rbp
000000000003721a	pushq	%r15
000000000003721c	pushq	%r14
000000000003721e	pushq	%rbx
000000000003721f	pushq	%rax
0000000000037220	movq	%rdi,%r15
0000000000037223	movq	0x00077856(%rip),%rax
000000000003722a	movb	(%r15,%rax),%al
000000000003722e	cmpb	$0x01,%al
0000000000037230	jne	0x0003725f
0000000000037232	movq	0x0007785f(%rip),%rax
0000000000037239	movq	(%r15,%rax),%rdi
000000000003723d	movq	0x0006ef3c(%rip),%rsi
0000000000037244	call	*0x0004ce8e(%rip)
000000000003724a	movl	$0x00000003,%ebx
000000000003724f	cmpl	$0x03,%eax
0000000000037252	jne	0x00037290
0000000000037254	movq	0x00077825(%rip),%rax
000000000003725b	movb	(%r15,%rax),%al
000000000003725f	testb	%al,%al
0000000000037261	jne	0x0003737d
0000000000037267	movq	0x0007782a(%rip),%rax
000000000003726e	movq	(%r15,%rax),%rdi
0000000000037272	movq	0x0006ef07(%rip),%rsi
0000000000037279	call	*0x0004ce59(%rip)
000000000003727f	cmpl	$0x02,%eax
0000000000037282	sbbl	%ebx,%ebx
0000000000037284	cmpl	$0x01,%eax
0000000000037287	ja	0x0003737d
000000000003728d	andl	$0x02,%ebx
0000000000037290	movq	0x00077801(%rip),%rax
0000000000037297	movq	(%r15,%rax),%rdi
000000000003729b	movq	0x0006eee6(%rip),%rsi
00000000000372a2	movl	$0x00000002,%edx
00000000000372a7	call	*0x0004ce2b(%rip)
00000000000372ad	movq	0x000777e4(%rip),%rax
00000000000372b4	movq	(%r15,%rax),%rdi
00000000000372b8	movq	0x0006eed1(%rip),%rsi
00000000000372bf	movl	%ebx,%edx
00000000000372c1	call	*0x0004ce11(%rip)
00000000000372c7	movq	0x0006d7b2(%rip),%rsi
00000000000372ce	movq	0x000715eb(%rip),%rdi
00000000000372d5	call	*0x0004cdfd(%rip)
00000000000372db	movq	%rax,%r14
00000000000372de	movq	0x000777b3(%rip),%rax
00000000000372e5	movq	(%r15,%rax),%rdi
00000000000372e9	movq	0x0006eea8(%rip),%rsi
00000000000372f0	call	*0x0004cde2(%rip)
00000000000372f6	movq	0x0006eea3(%rip),%rsi
00000000000372fd	movq	%r14,%rdi
0000000000037300	movl	$0x00000003,%edx
0000000000037305	movq	%rax,%rcx
0000000000037308	call	*0x0004cdca(%rip)
000000000003730e	movq	0x0006d773(%rip),%rsi
0000000000037315	movq	%r14,%rdi
0000000000037318	movq	%r15,%rdx
000000000003731b	call	*0x0004cdb7(%rip)
0000000000037321	movq	0x0006d770(%rip),%rsi
0000000000037328	movq	0x0006ee79(%rip),%rdx
000000000003732f	movq	%r14,%rdi
0000000000037332	call	*___destroy_helper_block_124(%rip)
0000000000037338	movq	0x0006d779(%rip),%rsi
000000000003733f	movq	%r15,%rdi
0000000000037342	call	*0x0004cd90(%rip)
0000000000037348	movq	0x0006d771(%rip),%rsi
000000000003734f	movq	%rax,%rdi
0000000000037352	call	*0x0004cd80(%rip)
0000000000037358	movq	0x0006ee01(%rip),%rsi
000000000003735f	movq	%rax,%rdi
0000000000037362	movq	%r14,%rdx
0000000000037365	movl	$0x00000001,%ecx
000000000003736a	movq	0x0004cd67(%rip),%rax
0000000000037371	addq	$0x08,%rsp
0000000000037375	popq	%rbx
0000000000037376	popq	%r14
0000000000037378	popq	%r15
000000000003737a	popq	%rbp
000000000003737b	jmp	*%rax
000000000003737d	movq	0x0006edf4(%rip),%rsi
0000000000037384	movq	%r15,%rdi
0000000000037387	addq	$0x08,%rsp
000000000003738b	popq	%rbx
000000000003738c	popq	%r14
000000000003738e	popq	%r15
0000000000037390	popq	%rbp
0000000000037391	jmp	*0x0004cd41(%rip)
-[PBXGDB_GlobalsForShlibsSequence _gotVerifyFileGlobals:]:
0000000000037397	pushq	%rbp
0000000000037398	movq	%rsp,%rbp
000000000003739b	pushq	%r15
000000000003739d	pushq	%r14
000000000003739f	pushq	%r12
00000000000373a1	pushq	%rbx
00000000000373a2	movq	%rdx,%r12
00000000000373a5	movq	%rdi,%r15
00000000000373a8	movq	0x0006d709(%rip),%rsi
00000000000373af	movq	0x0004cd22(%rip),%rbx
00000000000373b6	call	*%rbx
00000000000373b8	movq	%rax,%r14
00000000000373bb	movq	0x0006e67e(%rip),%rsi
00000000000373c2	movq	%r12,%rdi
00000000000373c5	call	*%rbx
00000000000373c7	movl	$0x00000001,%ebx
00000000000373cc	testb	%al,%al
00000000000373ce	je	0x000373ea
00000000000373d0	movq	0x0006e671(%rip),%rsi
00000000000373d7	movq	%r12,%rdi
00000000000373da	call	*0x0004ccf8(%rip)
00000000000373e0	cmpb	$0x01,%al
00000000000373e2	movl	$0x00000001,%ebx
00000000000373e7	sbbl	$0xff,%ebx
00000000000373ea	movq	0x0006d6cf(%rip),%rsi
00000000000373f1	movq	0x0004cce0(%rip),%r12
00000000000373f8	movq	%r14,%rdi
00000000000373fb	call	*%r12
00000000000373fe	movq	0x0006e64b(%rip),%rsi
0000000000037405	leaq	0x00079f8c(%rip),%rcx
000000000003740c	movq	%rax,%rdi
000000000003740f	movl	%ebx,%edx
0000000000037411	call	*%r12
0000000000037414	cmpl	$0x02,%ebx
0000000000037417	jne	0x00037431
0000000000037419	movq	0x0006ed48(%rip),%rsi
0000000000037420	movq	%r15,%rdi
0000000000037423	popq	%rbx
0000000000037424	popq	%r12
0000000000037426	popq	%r14
0000000000037428	popq	%r15
000000000003742a	popq	%rbp
000000000003742b	jmp	*0x0004cca7(%rip)
0000000000037431	movq	0x0006d700(%rip),%rsi
0000000000037438	jmp	0x00037420
-[PBXGDB_GlobalsForShlibsSequence _fetchFileGlobals]:
000000000003743a	pushq	%rbp
000000000003743b	movq	%rsp,%rbp
000000000003743e	pushq	%r15
0000000000037440	pushq	%r14
0000000000037442	pushq	%r13
0000000000037444	pushq	%r12
0000000000037446	pushq	%rbx
0000000000037447	pushq	%rax
0000000000037448	movq	%rdi,%r13
000000000003744b	movq	0x00077646(%rip),%rax
0000000000037452	movq	0x00(%r13,%rax),%rdi
0000000000037457	movq	0x0006df22(%rip),%rsi
000000000003745e	call	*0x0004cc74(%rip)
0000000000037464	movq	%rax,%r15
0000000000037467	testq	%r15,%r15
000000000003746a	jne	0x00037484
000000000003746c	movq	0x0007762d(%rip),%rax
0000000000037473	movq	0x00(%r13,%rax),%r15
0000000000037478	testq	%r15,%r15
000000000003747b	jne	0x00037484
000000000003747d	leaq	0x000784b4(%rip),%r15
0000000000037484	leaq	0x0006ed25(%rip),%rcx
000000000003748b	leaq	0x0006ed26(%rip),%rax
0000000000037492	leaq	0x00079b7f(%rip),%rdx
0000000000037499	leaq	0x00079af8(%rip),%r12
00000000000374a0	movq	0x000775d9(%rip),%rsi
00000000000374a7	cmpb	$0x01,0x00(%r13,%rsi)
00000000000374ad	cmoveq	%rdx,%r12
00000000000374b1	cmoveq	%rcx,%rax
00000000000374b5	movq	(%rax),%rax
00000000000374b8	movq	%rax,0xd0(%rbp)
00000000000374bc	movq	0x000775c5(%rip),%rax
00000000000374c3	movq	0x00(%r13,%rax),%rdi
00000000000374c8	testq	%rdi,%rdi
00000000000374cb	jne	0x000374d6
00000000000374cd	leaq	0x00078464(%rip),%rbx
00000000000374d4	jmp	0x0003751d
00000000000374d6	leaq	0x00070e83(%rip),%rsi
00000000000374dd	leaq	0x00078454(%rip),%rbx
00000000000374e4	movq	%rbx,%rdx
00000000000374e7	call	*0x00070e73(%rip)
00000000000374ed	testb	%al,%al
00000000000374ef	jne	0x0003751d
00000000000374f1	movq	0x00077590(%rip),%rax
00000000000374f8	movq	0x00(%r13,%rax),%rcx
00000000000374fd	movq	0x0006d674(%rip),%rsi
0000000000037504	movq	0x00070f45(%rip),%rdi
000000000003750b	leaq	0x00079ea6(%rip),%rdx
0000000000037512	xorb	%al,%al
0000000000037514	call	*0x0004cbbe(%rip)
000000000003751a	movq	%rax,%rbx
000000000003751d	movq	0x000713a4(%rip),%r14
0000000000037524	movq	0x0006ec95(%rip),%rsi
000000000003752b	movq	%r13,%rdi
000000000003752e	call	*0x0004cba4(%rip)
0000000000037534	movq	0x0006e84d(%rip),%rsi
000000000003753b	movq	%r14,%rdi
000000000003753e	movq	%rax,%rdx
0000000000037541	movq	%r15,%rcx
0000000000037544	movq	%r12,%r8
0000000000037547	movq	%rbx,%r9
000000000003754a	call	*0x0004cb88(%rip)
0000000000037550	movq	%rax,%r15
0000000000037553	movq	0x0006d55e(%rip),%rsi
000000000003755a	movq	%r13,%rdi
000000000003755d	call	*0x0004cb75(%rip)
0000000000037563	movq	0x0006d556(%rip),%rsi
000000000003756a	movq	%rax,%rdi
000000000003756d	call	*0x0004cb65(%rip)
0000000000037573	movq	0x0006dc4e(%rip),%rsi
000000000003757a	movq	%rax,%rdi
000000000003757d	call	*0x0004cb55(%rip)
0000000000037583	movq	0x0006d51e(%rip),%rsi
000000000003758a	movq	%r15,%rdi
000000000003758d	movq	%rax,%rdx
0000000000037590	call	*0x0004cb42(%rip)
0000000000037596	movq	0x0006d4eb(%rip),%rsi
000000000003759d	movq	%r15,%rdi
00000000000375a0	movq	%r13,%rdx
00000000000375a3	call	*0x0004cb2f(%rip)
00000000000375a9	movq	0x0006d4e8(%rip),%rsi
00000000000375b0	movq	%r15,%rdi
00000000000375b3	movq	0xd0(%rbp),%rdx
00000000000375b7	call	*0x0004cb1b(%rip)
00000000000375bd	movq	0x0006d4f4(%rip),%rsi
00000000000375c4	movq	%r13,%rdi
00000000000375c7	call	*0x0004cb0b(%rip)
00000000000375cd	movq	0x0006d4ec(%rip),%rsi
00000000000375d4	movq	%rax,%rdi
00000000000375d7	call	*0x0004cafb(%rip)
00000000000375dd	movq	0x0006eb7c(%rip),%rsi
00000000000375e4	movq	%rax,%rdi
00000000000375e7	movq	%r15,%rdx
00000000000375ea	movl	$0x00000001,%ecx
00000000000375ef	movq	0x0004cae2(%rip),%rax
00000000000375f6	addq	$0x08,%rsp
00000000000375fa	popq	%rbx
00000000000375fb	popq	%r12
00000000000375fd	popq	%r13
00000000000375ff	popq	%r14
0000000000037601	popq	%r15
0000000000037603	popq	%rbp
0000000000037604	jmp	*%rax
-[PBXGDB_GlobalsForShlibsSequence _imageController]:
0000000000037606	pushq	%rbp
0000000000037607	movq	%rsp,%rbp
000000000003760a	movq	0x0006d4a7(%rip),%rsi
0000000000037611	call	*0x0004cac1(%rip)
0000000000037617	movq	0x0006d7da(%rip),%rsi
000000000003761e	movq	%rax,%rdi
0000000000037621	movq	0x0004cab0(%rip),%rax
0000000000037628	popq	%rbp
0000000000037629	jmp	*%rax
-[PBXGDB_GlobalsForShlibsSequence _gotFileGlobalsForDataValue:]:
000000000003762b	pushq	%rbp
000000000003762c	movq	%rsp,%rbp
000000000003762f	pushq	%r15
0000000000037631	pushq	%r14
0000000000037633	pushq	%r13
0000000000037635	pushq	%r12
0000000000037637	pushq	%rbx
0000000000037638	subq	$0x68,%rsp
000000000003763c	movq	%rdx,%rbx
000000000003763f	movq	%rbx,0x98(%rbp)
0000000000037643	movq	%rdi,0xd0(%rbp)
0000000000037647	movq	0x0006eb72(%rip),%rsi
000000000003764e	movq	0x0004ca83(%rip),%r14
0000000000037655	call	*%r14
0000000000037658	movq	%rax,0x90(%rbp)
000000000003765c	movq	0x0006d46d(%rip),%rsi
0000000000037663	movq	%rbx,%rdi
0000000000037666	call	*%r14
0000000000037669	leaq	0x00079d68(%rip),%rdx
0000000000037670	movq	0x0006d461(%rip),%rsi
0000000000037677	movq	%rax,%rdi
000000000003767a	call	*%r14
000000000003767d	movq	0x0006d45c(%rip),%rsi
0000000000037684	movq	%rax,%rdi
0000000000037687	call	*%r14
000000000003768a	movq	0x0006d457(%rip),%rsi
0000000000037691	movq	%rax,%rdi
0000000000037694	call	*%r14
0000000000037697	movq	0x0006d452(%rip),%rsi
000000000003769e	movq	%rax,%rdi
00000000000376a1	call	*%r14
00000000000376a4	movq	%rax,0x88(%rbp)
00000000000376a8	movq	0x0006d449(%rip),%rsi
00000000000376af	movq	%rax,%rdi
00000000000376b2	call	*%r14
00000000000376b5	testq	%rax,%rax
00000000000376b8	je	0x00037a96
00000000000376be	movq	0x0006d443(%rip),%r13
00000000000376c5	movq	0x0004ca0c(%rip),%r12
00000000000376cc	movq	%rax,0xb0(%rbp)
00000000000376d0	movq	%rax,%rdi
00000000000376d3	movq	0x0006d406(%rip),%rsi
00000000000376da	call	*%r12
00000000000376dd	movq	%rax,%r14
00000000000376e0	movq	%r14,%rdi
00000000000376e3	movq	0x0006d3ee(%rip),%rbx
00000000000376ea	movq	%rbx,%rsi
00000000000376ed	leaq	0x000788e4(%rip),%rdx
00000000000376f4	call	*%r12
00000000000376f7	movq	%rax,%rdi
00000000000376fa	movq	%r13,%rsi
00000000000376fd	call	*%r12
0000000000037700	movq	%rax,%r15
0000000000037703	movq	%r14,%rdi
0000000000037706	movq	%rbx,%rsi
0000000000037709	leaq	0x000789e8(%rip),%rdx
0000000000037710	call	*%r12
0000000000037713	movq	%rax,%rdi
0000000000037716	movq	%r13,%rsi
0000000000037719	call	*%r12
000000000003771c	movq	%rax,0xa0(%rbp)
0000000000037720	movq	%r14,%rdi
0000000000037723	movq	%rbx,%rsi
0000000000037726	leaq	0x00078a0b(%rip),%rdx
000000000003772d	call	*%r12
0000000000037730	movq	%rax,%rdi
0000000000037733	movq	%r13,%rsi
0000000000037736	call	*%r12
0000000000037739	movq	%rax,0xb8(%rbp)
000000000003773d	movq	%r14,%rdi
0000000000037740	movq	%rbx,%rsi
0000000000037743	leaq	0x0007868e(%rip),%rdx
000000000003774a	call	*%r12
000000000003774d	movq	%rax,%rdi
0000000000037750	movq	%r13,%rsi
0000000000037753	call	*%r12
0000000000037756	movq	%rax,0xa8(%rbp)
000000000003775a	movq	0x00070f8f(%rip),%rdi
0000000000037761	movq	0x0006e248(%rip),%rsi
0000000000037768	movl	$0x00000001,%edx
000000000003776d	call	*%r12
0000000000037770	movq	%rax,0xc0(%rbp)
0000000000037774	movq	0x0007730d(%rip),%rax
000000000003777b	movq	0xd0(%rbp),%rbx
000000000003777f	movq	(%rbx,%rax),%rdx
0000000000037783	movq	%r15,%rdi
0000000000037786	leaq	0x00070bd3(%rip),%rsi
000000000003778d	call	*0x00070bcd(%rip)
0000000000037793	cmpb	$0x01,%al
0000000000037795	jne	0x00037a7c
000000000003779b	movq	0x00070e5e(%rip),%rdi
00000000000377a2	leaq	0x00070b37(%rip),%rsi
00000000000377a9	call	*0x00070b31(%rip)
00000000000377af	movq	%rax,%r14
00000000000377b2	movq	%rbx,%rdi
00000000000377b5	movq	0x0006d2fc(%rip),%rsi
00000000000377bc	call	*%r12
00000000000377bf	movq	%r14,%rdi
00000000000377c2	movq	0x0006d587(%rip),%rsi
00000000000377c9	movq	%rax,%rdx
00000000000377cc	call	*%r12
00000000000377cf	movq	%rax,%r14
00000000000377d2	movq	%r14,%rdi
00000000000377d5	movq	0x0006d57c(%rip),%rsi
00000000000377dc	movq	%r15,%rdx
00000000000377df	movq	%r15,0xc8(%rbp)
00000000000377e3	call	*%r12
00000000000377e6	movq	%r14,%rdi
00000000000377e9	movq	0x0006de68(%rip),%rsi
00000000000377f0	movq	0xa0(%rbp),%rdx
00000000000377f4	call	*%r12
00000000000377f7	movq	0xb0(%rbp),%rax
00000000000377fb	movq	%rax,%rdi
00000000000377fe	movq	%rax,%r13
0000000000037801	movq	0x0006d2d8(%rip),%r15
0000000000037808	movq	%r15,%rsi
000000000003780b	call	*%r12
000000000003780e	movq	%rax,%rdi
0000000000037811	movq	%r12,%rbx
0000000000037814	movq	0x0006d2bd(%rip),%r12
000000000003781b	movq	%r12,%rsi
000000000003781e	leaq	0x00078b33(%rip),%rdx
0000000000037825	call	*%rbx
0000000000037827	movq	%rax,%rdi
000000000003782a	movq	0x0006d2d7(%rip),%r15
0000000000037831	movq	%r15,%rsi
0000000000037834	call	*%rbx
0000000000037836	movq	%rax,0xa0(%rbp)
000000000003783a	movq	%r13,%rdi
000000000003783d	movq	0x0006d29c(%rip),%rsi
0000000000037844	call	*%rbx
0000000000037846	movq	%rax,%rdi
0000000000037849	movq	%r12,%rsi
000000000003784c	leaq	0x00078925(%rip),%rdx
0000000000037853	call	*%rbx
0000000000037855	movq	%rax,%rdi
0000000000037858	movq	%r15,%rsi
000000000003785b	call	*%rbx
000000000003785d	movq	0x98(%rbp),%rdi
0000000000037861	movq	0x0006e960(%rip),%rsi
0000000000037868	movq	%rax,%rdx
000000000003786b	call	*%rbx
000000000003786d	movq	0xd0(%rbp),%rdi
0000000000037871	movq	0x0006df70(%rip),%rsi
0000000000037878	movq	%r14,%rdx
000000000003787b	movq	0xa8(%rbp),%rcx
000000000003787f	movq	0xa0(%rbp),%r8
0000000000037883	movl	%eax,%r9d
0000000000037886	call	*%rbx
0000000000037888	movq	%r14,%rdi
000000000003788b	movq	0x0006de3e(%rip),%rsi
0000000000037892	movl	$0x00000001,%edx
0000000000037897	call	*%rbx
0000000000037899	movq	%r13,%rdi
000000000003789c	movq	0x0006d23d(%rip),%rsi
00000000000378a3	call	*%rbx
00000000000378a5	movq	%rax,%rdi
00000000000378a8	movq	%r12,%rsi
00000000000378ab	movq	%rbx,%r15
00000000000378ae	leaq	0x00078823(%rip),%rdx
00000000000378b5	call	*%r15
00000000000378b8	movq	%rax,%rdi
00000000000378bb	movq	0x0006d246(%rip),%rbx
00000000000378c2	movq	%rbx,%rsi
00000000000378c5	call	*%r15
00000000000378c8	movq	%rax,%rdi
00000000000378cb	movq	0x0006da0e(%rip),%rsi
00000000000378d2	call	*%r15
00000000000378d5	testq	%rax,%rax
00000000000378d8	movq	%r13,%r12
00000000000378db	movq	%r14,%rdi
00000000000378de	movq	0x0006df2b(%rip),%rsi
00000000000378e5	jle	0x00037918
00000000000378e7	movl	$0x00000001,%edx
00000000000378ec	call	*%r15
00000000000378ef	movq	%r14,%rdi
00000000000378f2	movq	0x0006dc97(%rip),%rsi
00000000000378f9	call	*%r15
00000000000378fc	cmpl	$0x02,%eax
00000000000378ff	movq	%r14,%r13
0000000000037902	jne	0x00037923
0000000000037904	movq	%r13,%rdi
0000000000037907	movq	0x0006dc8a(%rip),%rsi
000000000003790e	xorl	%edx,%edx
0000000000037910	call	*0x0004c7c2(%rip)
0000000000037916	jmp	0x00037923
0000000000037918	xorl	%edx,%edx
000000000003791a	call	*0x0004c7b8(%rip)
0000000000037920	movq	%r14,%r13
0000000000037923	movq	%r12,%rdi
0000000000037926	movq	0x0006d1b3(%rip),%rsi
000000000003792d	call	*%r15
0000000000037930	movq	%rax,%rdi
0000000000037933	movq	0x0006d19e(%rip),%rsi
000000000003793a	leaq	0x00079ab7(%rip),%rdx
0000000000037941	call	*%r15
0000000000037944	movq	%rax,%rdi
0000000000037947	movq	%rbx,%rsi
000000000003794a	call	*%r15
000000000003794d	movq	%rax,%rbx
0000000000037950	testq	%rbx,%rbx
0000000000037953	je	0x00037970
0000000000037955	movq	%rbx,%rdi
0000000000037958	leaq	0x00070a01(%rip),%rsi
000000000003795f	leaq	0x000791d2(%rip),%rdx
0000000000037966	call	*0x000709f4(%rip)
000000000003796c	cmpb	$0x01,%al
000000000003796e	jne	0x0003798d
0000000000037970	movq	%r13,%rdi
0000000000037973	movq	0x0006dba6(%rip),%rsi
000000000003797a	call	*%r15
000000000003797d	movq	%rax,%rdi
0000000000037980	movq	0x0006daf1(%rip),%rsi
0000000000037987	call	*%r15
000000000003798a	movq	%rax,%rbx
000000000003798d	movq	%r15,%r14
0000000000037990	movq	%r13,%rdi
0000000000037993	movq	0x0006de86(%rip),%rsi
000000000003799a	movq	%rbx,%rdx
000000000003799d	call	*0x0004c735(%rip)
00000000000379a3	movq	0xb8(%rbp),%rdx
00000000000379a7	testq	%rdx,%rdx
00000000000379aa	je	0x000379bc
00000000000379ac	movq	%r13,%rdi
00000000000379af	movq	0x0006dc0a(%rip),%rsi
00000000000379b6	call	*0x0004c71c(%rip)
00000000000379bc	movq	0xd0(%rbp),%r12
00000000000379c0	movq	%r12,%rdi
00000000000379c3	movq	0x0006d0ee(%rip),%r15
00000000000379ca	movq	%r15,%rsi
00000000000379cd	call	*%r14
00000000000379d0	movq	%rax,%rdi
00000000000379d3	movq	0x0006ddde(%rip),%rsi
00000000000379da	movq	%r13,%rdx
00000000000379dd	call	*%r14
00000000000379e0	movq	0x00070ac9(%rip),%rax
00000000000379e7	movq	%rax,0xb8(%rbp)
00000000000379eb	movq	0x00070c6e(%rip),%rdi
00000000000379f2	movq	0x0006dfdf(%rip),%rbx
00000000000379f9	movq	%rbx,%rsi
00000000000379fc	movq	0xc8(%rbp),%rdx
0000000000037a00	movq	0x90(%rbp),%rcx
0000000000037a04	movq	0xc0(%rbp),%r8
0000000000037a08	xorl	%r9d,%r9d
0000000000037a0b	xorb	%al,%al
0000000000037a0d	call	*%r14
0000000000037a10	movq	%rax,0xc8(%rbp)
0000000000037a14	movq	0x00070c45(%rip),%rdi
0000000000037a1b	movq	%rbx,%rsi
0000000000037a1e	leaq	0x000786d3(%rip),%rdx
0000000000037a25	leaq	0x00078d8c(%rip),%rcx
0000000000037a2c	leaq	0x000799e5(%rip),%r8
0000000000037a33	xorl	%r9d,%r9d
0000000000037a36	xorb	%al,%al
0000000000037a38	call	*%r14
0000000000037a3b	movq	0xb8(%rbp),%rdi
0000000000037a3f	movq	0x0006e78a(%rip),%rsi
0000000000037a46	movq	0xc8(%rbp),%rdx
0000000000037a4a	movq	%rax,%rcx
0000000000037a4d	call	*%r14
0000000000037a50	movq	%rax,%rbx
0000000000037a53	movq	%r12,%rdi
0000000000037a56	movq	%r15,%rsi
0000000000037a59	call	*%r14
0000000000037a5c	movq	%rax,%rdi
0000000000037a5f	movq	0x0006e772(%rip),%rsi
0000000000037a66	movq	%r13,%rdx
0000000000037a69	movq	%r14,%r12
0000000000037a6c	movq	%rbx,%rcx
0000000000037a6f	call	*%r12
0000000000037a72	movq	0x0006d08f(%rip),%r15
0000000000037a79	movq	%r15,%r13
0000000000037a7c	movq	0x88(%rbp),%rdi
0000000000037a80	movq	0x0006d071(%rip),%rsi
0000000000037a87	call	*0x0004c64b(%rip)
0000000000037a8d	testq	%rax,%rax
0000000000037a90	jne	0x000376cc
0000000000037a96	movq	0x0006d09b(%rip),%rsi
0000000000037a9d	movq	0xd0(%rbp),%rdi
0000000000037aa1	addq	$0x68,%rsp
0000000000037aa5	popq	%rbx
0000000000037aa6	popq	%r12
0000000000037aa8	popq	%r13
0000000000037aaa	popq	%r14
0000000000037aac	popq	%r15
0000000000037aae	popq	%rbp
0000000000037aaf	jmp	*0x0004c623(%rip)
-[PBXGDB_GlobalsForShlibsSequence _gotFileGlobalsForBrowser:]:
0000000000037ab5	pushq	%rbp
0000000000037ab6	movq	%rsp,%rbp
0000000000037ab9	pushq	%r15
0000000000037abb	pushq	%r14
0000000000037abd	pushq	%r13
0000000000037abf	pushq	%r12
0000000000037ac1	pushq	%rbx
0000000000037ac2	subq	$0x38,%rsp
0000000000037ac6	movq	%rdx,%r14
0000000000037ac9	movq	%rdi,0xb8(%rbp)
0000000000037acd	movq	0x0007098c(%rip),%rdi
0000000000037ad4	leaq	0x00070805(%rip),%rsi
0000000000037adb	call	*0x000707ff(%rip)
0000000000037ae1	movq	0x0006cf88(%rip),%rsi
0000000000037ae8	movq	0x0004c5e9(%rip),%rbx
0000000000037aef	movq	%rax,%rdi
0000000000037af2	call	*%rbx
0000000000037af4	movq	%rax,0xb0(%rbp)
0000000000037af8	movq	0x0006cfd1(%rip),%rsi
0000000000037aff	movq	%r14,%rdi
0000000000037b02	call	*%rbx
0000000000037b04	movq	0x0006cfdd(%rip),%rsi
0000000000037b0b	movq	%rax,%rdi
0000000000037b0e	call	*%rbx
0000000000037b10	movq	0x0006cfd9(%rip),%rsi
0000000000037b17	movq	%rax,%rdi
0000000000037b1a	call	*%rbx
0000000000037b1c	movq	%rax,0xa8(%rbp)
0000000000037b20	movq	0x0006cfd1(%rip),%rsi
0000000000037b27	movq	%rax,%rdi
0000000000037b2a	call	*%rbx
0000000000037b2c	movq	%rax,%rbx
0000000000037b2f	testq	%rbx,%rbx
0000000000037b32	je	0x00037d1d
0000000000037b38	movq	0x0006de99(%rip),%r14
0000000000037b3f	movq	0x0004c592(%rip),%r12
0000000000037b46	leaq	0x000785ab(%rip),%r13
0000000000037b4d	movq	%rbx,%rdi
0000000000037b50	movq	0x0006e689(%rip),%rsi
0000000000037b57	call	*0x0004c57b(%rip)
0000000000037b5d	movq	%rax,%rdi
0000000000037b60	leaq	0x000707f9(%rip),%rsi
0000000000037b67	leaq	0x000785ea(%rip),%rdx
0000000000037b6e	call	*0x000707ec(%rip)
0000000000037b74	testb	%al,%al
0000000000037b76	jne	0x00037b96
0000000000037b78	movq	0xa8(%rbp),%rdi
0000000000037b7c	movq	0x0006cf75(%rip),%rsi
0000000000037b83	call	*0x0004c54f(%rip)
0000000000037b89	movq	%rax,%rbx
0000000000037b8c	testq	%rbx,%rbx
0000000000037b8f	jne	0x00037b4d
0000000000037b91	jmp	0x00037d1d
0000000000037b96	movq	%rbx,%rdi
0000000000037b99	movq	%r12,%r15
0000000000037b9c	movq	0x0006cf3d(%rip),%r12
0000000000037ba3	movq	%r12,%rsi
0000000000037ba6	call	*%r15
0000000000037ba9	movq	%rax,0xd0(%rbp)
0000000000037bad	movq	%rax,%rdi
0000000000037bb0	movq	0x0006cf21(%rip),%rbx
0000000000037bb7	movq	%rbx,%rsi
0000000000037bba	leaq	0x00078bf7(%rip),%rdx
0000000000037bc1	call	*%r15
0000000000037bc4	movq	%rax,%rdi
0000000000037bc7	movq	0x0006cf3a(%rip),%rsi
0000000000037bce	call	*%r15
0000000000037bd1	movq	%rax,0xc8(%rbp)
0000000000037bd5	movq	0xd0(%rbp),%rdi
0000000000037bd9	movq	%rbx,%rsi
0000000000037bdc	leaq	0x000797f5(%rip),%rdx
0000000000037be3	call	*%r15
0000000000037be6	movq	%rax,%rdi
0000000000037be9	movq	%r12,%rsi
0000000000037bec	movq	%r15,%r12
0000000000037bef	call	*%r12
0000000000037bf2	movq	%rax,%rdi
0000000000037bf5	movq	0x0006ceec(%rip),%rsi
0000000000037bfc	call	*%r12
0000000000037bff	movq	%rax,%rdi
0000000000037c02	movq	0x0006cee7(%rip),%rsi
0000000000037c09	call	*%r12
0000000000037c0c	movq	%rax,0xc0(%rbp)
0000000000037c10	movq	%rax,%rdi
0000000000037c13	movq	0x0006cede(%rip),%rsi
0000000000037c1a	call	*%r12
0000000000037c1d	jmp	0x00037d0f
0000000000037c22	movq	%rax,%rdi
0000000000037c25	movq	0x0006ceb4(%rip),%rsi
0000000000037c2c	call	*%r12
0000000000037c2f	movq	%rax,%rdi
0000000000037c32	movq	0x0006ce9f(%rip),%rsi
0000000000037c39	movq	%r13,%rdx
0000000000037c3c	call	*%r12
0000000000037c3f	movq	%rax,%rdi
0000000000037c42	movq	0x0006cebf(%rip),%rsi
0000000000037c49	call	*%r12
0000000000037c4c	movq	%rax,%r15
0000000000037c4f	testq	%r15,%r15
0000000000037c52	je	0x00037cfe
0000000000037c58	movq	0x00070851(%rip),%rax
0000000000037c5f	movq	%rax,0xd0(%rbp)
0000000000037c63	movq	0x000709f6(%rip),%rbx
0000000000037c6a	movq	0x00070a7f(%rip),%rdi
0000000000037c71	movq	0x0006dd38(%rip),%rsi
0000000000037c78	xorl	%edx,%edx
0000000000037c7a	call	*%r12
0000000000037c7d	movq	%rbx,%rdi
0000000000037c80	movq	%r14,%rsi
0000000000037c83	movq	%r15,%rdx
0000000000037c86	movq	0xc8(%rbp),%rcx
0000000000037c8a	movq	%rax,%r8
0000000000037c8d	xorl	%r9d,%r9d
0000000000037c90	xorb	%al,%al
0000000000037c92	call	*%r12
0000000000037c95	movq	%rax,%rbx
0000000000037c98	movq	0x000709c1(%rip),%rdi
0000000000037c9f	movq	%r14,%rsi
0000000000037ca2	movq	%r13,%rdx
0000000000037ca5	leaq	0x00078b0c(%rip),%rcx
0000000000037cac	leaq	0x00079765(%rip),%r8
0000000000037cb3	xorl	%r9d,%r9d
0000000000037cb6	xorb	%al,%al
0000000000037cb8	call	*%r12
0000000000037cbb	movq	0xd0(%rbp),%rdi
0000000000037cbf	movq	0x0006e50a(%rip),%rsi
0000000000037cc6	movq	%rbx,%rdx
0000000000037cc9	movq	%rax,%rcx
0000000000037ccc	call	*%r12
0000000000037ccf	movq	%rax,%rbx
0000000000037cd2	movq	0xb8(%rbp),%rdi
0000000000037cd6	movq	0x0006e50b(%rip),%rsi
0000000000037cdd	movq	%rbx,%rdx
0000000000037ce0	call	*%r12
0000000000037ce3	testq	%rax,%rax
0000000000037ce6	cmoveq	%rbx,%rax
0000000000037cea	movq	0xb0(%rbp),%rdi
0000000000037cee	leaq	0x0007060b(%rip),%rsi
0000000000037cf5	movq	%rax,%rdx
0000000000037cf8	call	*0x00070602(%rip)
0000000000037cfe	movq	0xc0(%rbp),%rdi
0000000000037d02	movq	0x0006cdef(%rip),%rsi
0000000000037d09	call	*0x0004c3c9(%rip)
0000000000037d0f	testq	%rax,%rax
0000000000037d12	jne	0x00037c22
0000000000037d18	jmp	0x00037b78
0000000000037d1d	movq	0x00076d74(%rip),%rax
0000000000037d24	movq	0xb8(%rbp),%rbx
0000000000037d28	movq	(%rbx,%rax),%rdi
0000000000037d2c	movq	0x0006e4bd(%rip),%rsi
0000000000037d33	movq	0xb0(%rbp),%rdx
0000000000037d37	call	*0x0004c39b(%rip)
0000000000037d3d	movq	0x0006cdf4(%rip),%rsi
0000000000037d44	movq	%rbx,%rdi
0000000000037d47	movq	0x0004c38a(%rip),%rax
0000000000037d4e	addq	$0x38,%rsp
0000000000037d52	popq	%rbx
0000000000037d53	popq	%r12
0000000000037d55	popq	%r13
0000000000037d57	popq	%r14
0000000000037d59	popq	%r15
0000000000037d5b	popq	%rbp
0000000000037d5c	jmp	*%rax
-[PBXGDB_GlobalsForShlibsSequence savedGlobalFor:]:
0000000000037d5e	pushq	%rbp
0000000000037d5f	movq	%rsp,%rbp
0000000000037d62	pushq	%rbx
0000000000037d63	pushq	%rax
0000000000037d64	movq	%rdi,%rbx
0000000000037d67	movq	0x00076d32(%rip),%rax
0000000000037d6e	cmpq	$0x00,(%rbx,%rax)
0000000000037d73	jne	0x00037d9f
0000000000037d75	movq	0x00076d1c(%rip),%rax
0000000000037d7c	movq	(%rbx,%rax),%rdi
0000000000037d80	movq	0x0006d5f9(%rip),%rsi
0000000000037d87	call	*0x0004c34b(%rip)
0000000000037d8d	movq	0x00076d0c(%rip),%rdx
0000000000037d94	movq	%rax,%rdi
0000000000037d97	movq	%rbx,%rsi
0000000000037d9a	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000037d9f	xorl	%eax,%eax
0000000000037da1	addq	$0x08,%rsp
0000000000037da5	popq	%rbx
0000000000037da6	popq	%rbp
0000000000037da7	ret
-[PBXGDB_GlobalsForShlibsSequence setLibraryPath:]:
0000000000037da8	pushq	%rbp
0000000000037da9	movq	%rsp,%rbp
0000000000037dac	movq	%rdx,%rax
0000000000037daf	movq	%rdi,%rcx
0000000000037db2	movq	0x00076ce7(%rip),%rdx
0000000000037db9	movq	%rax,%rdi
0000000000037dbc	movq	%rcx,%rsi
0000000000037dbf	popq	%rbp
0000000000037dc0	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_GlobalsForShlibsSequence setLibrary:]:
0000000000037dc5	pushq	%rbp
0000000000037dc6	movq	%rsp,%rbp
0000000000037dc9	movq	%rdx,%rax
0000000000037dcc	movq	%rdi,%rcx
0000000000037dcf	movq	0x00076cc2(%rip),%rdx
0000000000037dd6	movq	%rax,%rdi
0000000000037dd9	movq	%rcx,%rsi
0000000000037ddc	popq	%rbp
0000000000037ddd	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_GlobalsForShlibsSequence library]:
0000000000037de2	pushq	%rbp
0000000000037de3	movq	%rsp,%rbp
0000000000037de6	movq	0x00076cab(%rip),%rax
0000000000037ded	movq	(%rdi,%rax),%rax
0000000000037df1	popq	%rbp
0000000000037df2	ret
-[PBXGDB_GlobalsForShlibsSequence setFilename:]:
0000000000037df3	pushq	%rbp
0000000000037df4	movq	%rsp,%rbp
0000000000037df7	movq	%rdx,%rax
0000000000037dfa	movq	%rdi,%rcx
0000000000037dfd	movq	0x00076ca4(%rip),%rdx
0000000000037e04	movq	%rax,%rdi
0000000000037e07	movq	%rcx,%rsi
0000000000037e0a	popq	%rbp
0000000000037e0b	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_GlobalsForShlibsSequence filename]:
0000000000037e10	pushq	%rbp
0000000000037e11	movq	%rsp,%rbp
0000000000037e14	pushq	%rbx
0000000000037e15	pushq	%rax
0000000000037e16	movq	%rdi,%rbx
0000000000037e19	movq	0x00076c88(%rip),%rdx
0000000000037e20	movq	(%rbx,%rdx),%rax
0000000000037e24	testq	%rax,%rax
0000000000037e27	jne	0x00037e49
0000000000037e29	addq	%rbx,%rdx
0000000000037e2c	subq	%rbx,%rdx
0000000000037e2f	leaq	0x00077b02(%rip),%rdi
0000000000037e36	movq	%rbx,%rsi
0000000000037e39	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000037e3e	movq	0x00076c63(%rip),%rax
0000000000037e45	movq	(%rbx,%rax),%rax
0000000000037e49	addq	$0x08,%rsp
0000000000037e4d	popq	%rbx
0000000000037e4e	popq	%rbp
0000000000037e4f	ret
-[PBXGDB_MIBaseBreakpointCommand setAddressString:]:
0000000000037e50	pushq	%rbp
0000000000037e51	movq	%rsp,%rbp
0000000000037e54	movq	%rdx,%rax
0000000000037e57	movq	%rdi,%rcx
0000000000037e5a	movq	0x00076c5f(%rip),%rdx
0000000000037e61	movq	%rax,%rdi
0000000000037e64	movq	%rcx,%rsi
0000000000037e67	popq	%rbp
0000000000037e68	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MIBaseBreakpointCommand addressString]:
0000000000037e6d	pushq	%rbp
0000000000037e6e	movq	%rsp,%rbp
0000000000037e71	movq	0x00076c48(%rip),%rax
0000000000037e78	movq	(%rdi,%rax),%rax
0000000000037e7c	popq	%rbp
0000000000037e7d	ret
-[PBXGDB_MICreateFileBreakpointCommand setFileName:lineNumber:condition:ignoreCount:futureBreak:resolveMultipleMatches:temporary:shlib:]:
0000000000037e7e	pushq	%rbp
0000000000037e7f	movq	%rsp,%rbp
0000000000037e82	pushq	%r15
0000000000037e84	pushq	%r14
0000000000037e86	pushq	%r13
0000000000037e88	pushq	%r12
0000000000037e8a	pushq	%rbx
0000000000037e8b	subq	$0x58,%rsp
0000000000037e8f	movq	%r9,0xb8(%rbp)
0000000000037e93	movq	%r8,%r14
0000000000037e96	movq	%rcx,0xc8(%rbp)
0000000000037e9a	movq	%rdx,0xc0(%rbp)
0000000000037e9e	movq	%rdi,%r13
0000000000037ea1	xorl	%r15d,%r15d
0000000000037ea4	movq	0x28(%rbp),%r12
0000000000037ea8	testq	%r12,%r12
0000000000037eab	je	0x00037f0e
0000000000037ead	leaq	0x000704ac(%rip),%rsi
0000000000037eb4	leaq	0x00077a7d(%rip),%rdx
0000000000037ebb	movq	%r12,%rdi
0000000000037ebe	call	*0x0007049c(%rip)
0000000000037ec4	xorl	%r15d,%r15d
0000000000037ec7	testb	%al,%al
0000000000037ec9	jne	0x00037f0e
0000000000037ecb	leaq	0x0007048e(%rip),%rsi
0000000000037ed2	leaq	0x0007959f(%rip),%rdx
0000000000037ed9	movq	%r12,%rdi
0000000000037edc	call	*0x0007047e(%rip)
0000000000037ee2	xorl	%r15d,%r15d
0000000000037ee5	testb	%al,%al
0000000000037ee7	jne	0x00037f0e
0000000000037ee9	movq	0x0006e010(%rip),%rsi
0000000000037ef0	movq	0x0004c1e1(%rip),%rbx
0000000000037ef7	movq	%r12,%rdi
0000000000037efa	call	*%rbx
0000000000037efc	movq	%rax,%r15
0000000000037eff	movq	0x0006e1a2(%rip),%rsi
0000000000037f06	movq	%r13,%rdi
0000000000037f09	movq	%r15,%rdx
0000000000037f0c	call	*%rbx
0000000000037f0e	movq	%r13,0xd0(%rbp)
0000000000037f12	movb	0x20(%rbp),%bl
0000000000037f15	movq	0x0006d9e4(%rip),%rsi
0000000000037f1c	leaq	0x00078855(%rip),%rdx
0000000000037f23	leaq	0x0007960e(%rip),%rcx
0000000000037f2a	movq	%r14,%rdi
0000000000037f2d	call	*0x0004c1a5(%rip)
0000000000037f33	movq	%rax,%r12
0000000000037f36	leaq	0x000795bb(%rip),%rax
0000000000037f3d	leaq	0x000779f4(%rip),%r14
0000000000037f44	testb	%bl,%bl
0000000000037f46	cmoveq	%r14,%rax
0000000000037f4a	movq	%rax,0xb0(%rbp)
0000000000037f4e	leaq	0x00079583(%rip),%r13
0000000000037f55	cmpb	$0x00,0x18(%rbp)
0000000000037f59	cmoveq	%r14,%r13
0000000000037f5d	leaq	0x00079554(%rip),%rax
0000000000037f64	cmpb	$0x00,0x10(%rbp)
0000000000037f68	cmoveq	%r14,%rax
0000000000037f6c	movq	%rax,0xa8(%rbp)
0000000000037f70	testq	%r15,%r15
0000000000037f73	je	0x00037f98
0000000000037f75	movq	0x0006cbfc(%rip),%rsi
0000000000037f7c	movq	0x000704cd(%rip),%rdi
0000000000037f83	leaq	0x0007958e(%rip),%rdx
0000000000037f8a	movq	%r15,%rcx
0000000000037f8d	xorb	%al,%al
0000000000037f8f	call	*0x0004c143(%rip)
0000000000037f95	movq	%rax,%r14
0000000000037f98	leaq	0x00070351(%rip),%rsi
0000000000037f9f	movq	%r12,%rdi
0000000000037fa2	call	*0x00070348(%rip)
0000000000037fa8	testq	%rax,%rax
0000000000037fab	movq	0xb8(%rbp),%rbx
0000000000037faf	jne	0x00037fba
0000000000037fb1	leaq	0x00077980(%rip),%r15
0000000000037fb8	jmp	0x00037fdd
0000000000037fba	movq	0x0006cbb7(%rip),%rsi
0000000000037fc1	movq	0x00070488(%rip),%rdi
0000000000037fc8	leaq	0x00079589(%rip),%rdx
0000000000037fcf	movq	%r12,%rcx
0000000000037fd2	xorb	%al,%al
0000000000037fd4	call	*0x0004c0fe(%rip)
0000000000037fda	movq	%rax,%r15
0000000000037fdd	testq	%rbx,%rbx
0000000000037fe0	jne	0x00037feb
0000000000037fe2	leaq	0x0007794f(%rip),%rbx
0000000000037fe9	jmp	0x0003800e
0000000000037feb	movq	0x0006cb86(%rip),%rsi
0000000000037ff2	movq	0x00070457(%rip),%rdi
0000000000037ff9	leaq	0x00079578(%rip),%rdx
0000000000038000	movq	%rbx,%rcx
0000000000038003	xorb	%al,%al
0000000000038005	call	*0x0004c0cd(%rip)
000000000003800b	movq	%rax,%rbx
000000000003800e	movq	0x0007043b(%rip),%rdi
0000000000038015	leaq	0x000702c4(%rip),%rsi
000000000003801c	call	*0x000702be(%rip)
0000000000038022	movq	0x0006cc8f(%rip),%rsi
0000000000038029	movq	0xc8(%rbp),%rcx
000000000003802d	movq	%rcx,0x20(%rsp)
0000000000038032	movq	0xc0(%rbp),%rcx
0000000000038036	movq	%rcx,0x18(%rsp)
000000000003803b	movq	%r14,0x10(%rsp)
0000000000038040	movq	0xb0(%rbp),%rcx
0000000000038044	movq	%rcx,0x08(%rsp)
0000000000038049	movq	%r13,(%rsp)
000000000003804d	leaq	0x00079544(%rip),%rdx
0000000000038054	movq	%rax,%rdi
0000000000038057	movq	%r15,%rcx
000000000003805a	movq	%rbx,%r8
000000000003805d	movq	0xa8(%rbp),%r9
0000000000038061	xorb	%al,%al
0000000000038063	call	*0x0004c06f(%rip)
0000000000038069	leaq	0x00076ac0(%rip),%rcx
0000000000038070	movq	(%rcx),%rdx
0000000000038073	movq	%rax,%rdi
0000000000038076	movq	0xd0(%rbp),%rsi
000000000003807a	addq	$0x58,%rsp
000000000003807e	popq	%rbx
000000000003807f	popq	%r12
0000000000038081	popq	%r13
0000000000038083	popq	%r14
0000000000038085	popq	%r15
0000000000038087	popq	%rbp
0000000000038088	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MICreateSymbolicBreakpointCommand setSymbolName:condition:ignoreCount:resolveMultipleMatches:]:
000000000003808d	pushq	%rbp
000000000003808e	movq	%rsp,%rbp
0000000000038091	pushq	%r15
0000000000038093	pushq	%r14
0000000000038095	pushq	%r13
0000000000038097	pushq	%r12
0000000000038099	pushq	%rbx
000000000003809a	subq	$0x28,%rsp
000000000003809e	movl	%r9d,%r15d
00000000000380a1	movq	%r8,%r13
00000000000380a4	movq	%rcx,%r14
00000000000380a7	movq	%rdx,0xc8(%rbp)
00000000000380ab	movq	%rdi,%rbx
00000000000380ae	movq	0x00076a13(%rip),%rax
00000000000380b5	movq	(%rbx,%rax),%rdi
00000000000380b9	xorl	%r12d,%r12d
00000000000380bc	testq	%rdi,%rdi
00000000000380bf	je	0x000380e7
00000000000380c1	leaq	0x00070298(%rip),%rsi
00000000000380c8	leaq	0x00077869(%rip),%rdx
00000000000380cf	call	*0x0007028b(%rip)
00000000000380d5	xorl	%r12d,%r12d
00000000000380d8	testb	%al,%al
00000000000380da	jne	0x000380e7
00000000000380dc	movq	0x000769e5(%rip),%rax
00000000000380e3	movq	(%rbx,%rax),%r12
00000000000380e7	movq	%rbx,0xd0(%rbp)
00000000000380eb	movq	0x0006d80e(%rip),%rsi
00000000000380f2	leaq	0x0007867f(%rip),%rdx
00000000000380f9	leaq	0x00079438(%rip),%rcx
0000000000038100	movq	%r14,%rdi
0000000000038103	call	*0x0004bfcf(%rip)
0000000000038109	movq	%rax,%rbx
000000000003810c	leaq	0x000701dd(%rip),%rsi
0000000000038113	movq	%rbx,%rdi
0000000000038116	call	*0x000701d4(%rip)
000000000003811c	testq	%rax,%rax
000000000003811f	jne	0x0003812a
0000000000038121	leaq	0x00077810(%rip),%rax
0000000000038128	jmp	0x0003814a
000000000003812a	movq	0x0006ca47(%rip),%rsi
0000000000038131	movq	0x00070318(%rip),%rdi
0000000000038138	leaq	0x00079419(%rip),%rdx
000000000003813f	movq	%rbx,%rcx
0000000000038142	xorb	%al,%al
0000000000038144	call	*0x0004bf8e(%rip)
000000000003814a	movq	%rax,0xc0(%rbp)
000000000003814e	testq	%r13,%r13
0000000000038151	jne	0x0003815c
0000000000038153	leaq	0x000777de(%rip),%r13
000000000003815a	jmp	0x0003817f
000000000003815c	movq	0x0006ca15(%rip),%rsi
0000000000038163	movq	0x000702e6(%rip),%rdi
000000000003816a	leaq	0x00079407(%rip),%rdx
0000000000038171	movq	%r13,%rcx
0000000000038174	xorb	%al,%al
0000000000038176	call	*0x0004bf5c(%rip)
000000000003817c	movq	%rax,%r13
000000000003817f	leaq	0x00079352(%rip),%rbx
0000000000038186	leaq	0x000777ab(%rip),%r14
000000000003818d	testb	%r15b,%r15b
0000000000038190	cmoveq	%r14,%rbx
0000000000038194	movq	0x000702b5(%rip),%rdi
000000000003819b	leaq	0x0007013e(%rip),%rsi
00000000000381a2	call	*0x00070138(%rip)
00000000000381a8	movq	%rax,%r15
00000000000381ab	testq	%r12,%r12
00000000000381ae	je	0x000381d3
00000000000381b0	movq	0x0006c9c1(%rip),%rsi
00000000000381b7	movq	0x00070292(%rip),%rdi
00000000000381be	leaq	0x00079353(%rip),%rdx
00000000000381c5	movq	%r12,%rcx
00000000000381c8	xorb	%al,%al
00000000000381ca	call	*0x0004bf08(%rip)
00000000000381d0	movq	%rax,%r14
00000000000381d3	movq	0x0006cade(%rip),%rsi
00000000000381da	movq	0xc8(%rbp),%rax
00000000000381de	movq	%rax,0x08(%rsp)
00000000000381e3	movq	%r14,(%rsp)
00000000000381e7	leaq	0x000793ca(%rip),%rdx
00000000000381ee	movq	%r15,%rdi
00000000000381f1	movq	0xc0(%rbp),%rcx
00000000000381f5	movq	%r13,%r8
00000000000381f8	movq	%rbx,%r9
00000000000381fb	xorb	%al,%al
00000000000381fd	call	*0x0004bed5(%rip)
0000000000038203	leaq	0x00076926(%rip),%rcx
000000000003820a	movq	(%rcx),%rdx
000000000003820d	movq	%rax,%rdi
0000000000038210	movq	0xd0(%rbp),%rsi
0000000000038214	addq	$0x28,%rsp
0000000000038218	popq	%rbx
0000000000038219	popq	%r12
000000000003821b	popq	%r13
000000000003821d	popq	%r14
000000000003821f	popq	%r15
0000000000038221	popq	%rbp
0000000000038222	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MIEnableBreakpointCommand GDBCommandString]:
0000000000038227	pushq	%rbp
0000000000038228	movq	%rsp,%rbp
000000000003822b	pushq	%r15
000000000003822d	pushq	%r14
000000000003822f	pushq	%rbx
0000000000038230	pushq	%rax
0000000000038231	movq	%rdi,%r15
0000000000038234	movq	0x00070215(%rip),%rdi
000000000003823b	leaq	0x0007009e(%rip),%rsi
0000000000038242	call	*0x00070098(%rip)
0000000000038248	movq	%rax,%r14
000000000003824b	movq	0x0006dfb6(%rip),%rsi
0000000000038252	movq	0x0004be7f(%rip),%rbx
0000000000038259	movq	%r15,%rdi
000000000003825c	call	*%rbx
000000000003825e	leaq	0x00079393(%rip),%rdx
0000000000038265	movq	0x0006ca4c(%rip),%rsi
000000000003826c	movq	%r14,%rdi
000000000003826f	movq	%rax,%rcx
0000000000038272	xorb	%al,%al
0000000000038274	call	*%rbx
0000000000038276	leaq	0x000768b3(%rip),%rcx
000000000003827d	movq	(%rcx),%rbx
0000000000038280	movq	%rax,%rdi
0000000000038283	movq	%r15,%rsi
0000000000038286	movq	%rbx,%rdx
0000000000038289	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000003828e	movq	(%r15,%rbx),%rax
0000000000038292	addq	$0x08,%rsp
0000000000038296	popq	%rbx
0000000000038297	popq	%r14
0000000000038299	popq	%r15
000000000003829b	popq	%rbp
000000000003829c	ret
-[PBXGDB_MIDisableBreakpointCommand GDBCommandString]:
000000000003829d	pushq	%rbp
000000000003829e	movq	%rsp,%rbp
00000000000382a1	pushq	%r15
00000000000382a3	pushq	%r14
00000000000382a5	pushq	%rbx
00000000000382a6	pushq	%rax
00000000000382a7	movq	%rdi,%r15
00000000000382aa	movq	0x0007019f(%rip),%rdi
00000000000382b1	leaq	0x00070028(%rip),%rsi
00000000000382b8	call	*0x00070022(%rip)
00000000000382be	movq	%rax,%r14
00000000000382c1	movq	0x0006df40(%rip),%rsi
00000000000382c8	movq	0x0004be09(%rip),%rbx
00000000000382cf	movq	%r15,%rdi
00000000000382d2	call	*%rbx
00000000000382d4	leaq	0x0007933d(%rip),%rdx
00000000000382db	movq	0x0006c9d6(%rip),%rsi
00000000000382e2	movq	%r14,%rdi
00000000000382e5	movq	%rax,%rcx
00000000000382e8	xorb	%al,%al
00000000000382ea	call	*%rbx
00000000000382ec	leaq	0x0007683d(%rip),%rcx
00000000000382f3	movq	(%rcx),%rbx
00000000000382f6	movq	%rax,%rdi
00000000000382f9	movq	%r15,%rsi
00000000000382fc	movq	%rbx,%rdx
00000000000382ff	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000038304	movq	(%r15,%rbx),%rax
0000000000038308	addq	$0x08,%rsp
000000000003830c	popq	%rbx
000000000003830d	popq	%r14
000000000003830f	popq	%r15
0000000000038311	popq	%rbp
0000000000038312	ret
-[PBXGDB_MIStopOnCPPExceptionCommand setEnabled:]:
0000000000038313	pushq	%rbp
0000000000038314	movq	%rsp,%rbp
0000000000038317	movq	0x000767c2(%rip),%rax
000000000003831e	movb	%dl,(%rdi,%rax)
0000000000038321	popq	%rbp
0000000000038322	ret
-[PBXGDB_MIStopOnCPPExceptionCommand setIsThrowCommand:]:
0000000000038323	pushq	%rbp
0000000000038324	movq	%rsp,%rbp
0000000000038327	movq	0x000767ba(%rip),%rax
000000000003832e	movb	%dl,(%rdi,%rax)
0000000000038331	popq	%rbp
0000000000038332	ret
-[PBXGDB_MIStopOnCPPExceptionCommand GDBCommandString]:
0000000000038333	pushq	%rbp
0000000000038334	movq	%rsp,%rbp
0000000000038337	pushq	%rbx
0000000000038338	pushq	%rax
0000000000038339	movq	%rdi,%rbx
000000000003833c	movq	0x0006decd(%rip),%rsi
0000000000038343	movq	0x0007679e(%rip),%rax
000000000003834a	cmpb	$0x00,(%rbx,%rax)
000000000003834e	je	0x00038360
0000000000038350	leaq	0x000792e1(%rip),%rdi
0000000000038357	leaq	0x000792fa(%rip),%rdx
000000000003835e	jmp	0x0003836e
0000000000038360	leaq	0x000792d1(%rip),%rdi
0000000000038367	leaq	0x0007930a(%rip),%rdx
000000000003836e	call	*0x0004bd64(%rip)
0000000000038374	movq	0x00076765(%rip),%rcx
000000000003837b	cmpb	$0x00,(%rbx,%rcx)
000000000003837f	je	0x00038388
0000000000038381	addq	$0x08,%rsp
0000000000038385	popq	%rbx
0000000000038386	popq	%rbp
0000000000038387	ret
0000000000038388	movq	0x0006de81(%rip),%rsi
000000000003838f	leaq	0x00079302(%rip),%rdx
0000000000038396	movq	%rax,%rdi
0000000000038399	addq	$0x08,%rsp
000000000003839d	popq	%rbx
000000000003839e	popq	%rbp
000000000003839f	jmp	*0x0004bd33(%rip)
+[PBXGDB_MICreateTemporaryBreakpointCommand breakpointWithSymbol:]:
00000000000383a5	pushq	%rbp
00000000000383a6	movq	%rsp,%rbp
00000000000383a9	pushq	%r15
00000000000383ab	pushq	%r14
00000000000383ad	pushq	%rbx
00000000000383ae	pushq	%rax
00000000000383af	movq	%rdx,%r14
00000000000383b2	movq	0x0006c6c7(%rip),%rsi
00000000000383b9	movq	0x00070510(%rip),%rdi
00000000000383c0	movq	0x0004bd11(%rip),%r15
00000000000383c7	call	*%r15
00000000000383ca	movq	%rax,%rbx
00000000000383cd	movq	0x0006c7a4(%rip),%rsi
00000000000383d4	movq	0x00070075(%rip),%rdi
00000000000383db	leaq	0x000792d6(%rip),%rdx
00000000000383e2	movq	%r14,%rcx
00000000000383e5	xorb	%al,%al
00000000000383e7	call	*%r15
00000000000383ea	movq	0x0006de27(%rip),%rsi
00000000000383f1	movq	%rbx,%rdi
00000000000383f4	movq	%rax,%rdx
00000000000383f7	call	*%r15
00000000000383fa	movq	%rbx,%rax
00000000000383fd	addq	$0x08,%rsp
0000000000038401	popq	%rbx
0000000000038402	popq	%r14
0000000000038404	popq	%r15
0000000000038406	popq	%rbp
0000000000038407	ret
+[PBXGDB_MICreateTemporaryBreakpointCommand breakpointWithFileName:lineNumber:]:
0000000000038408	pushq	%rbp
0000000000038409	movq	%rsp,%rbp
000000000003840c	pushq	%r15
000000000003840e	pushq	%r14
0000000000038410	pushq	%r12
0000000000038412	pushq	%rbx
0000000000038413	movq	%rcx,%r14
0000000000038416	movq	%rdx,%r15
0000000000038419	movq	0x0006c660(%rip),%rsi
0000000000038420	movq	0x000704a9(%rip),%rdi
0000000000038427	movq	0x0004bcaa(%rip),%r12
000000000003842e	call	*%r12
0000000000038431	movq	%rax,%rbx
0000000000038434	movq	0x0006c73d(%rip),%rsi
000000000003843b	movq	0x0007000e(%rip),%rdi
0000000000038442	leaq	0x0007928f(%rip),%rdx
0000000000038449	leaq	0x000792a8(%rip),%rcx
0000000000038450	movq	%r15,%r8
0000000000038453	movq	%r14,%r9
0000000000038456	xorb	%al,%al
0000000000038458	call	*%r12
000000000003845b	movq	0x0006ddb6(%rip),%rsi
0000000000038462	movq	%rbx,%rdi
0000000000038465	movq	%rax,%rdx
0000000000038468	call	*%r12
000000000003846b	movq	%rbx,%rax
000000000003846e	popq	%rbx
000000000003846f	popq	%r12
0000000000038471	popq	%r14
0000000000038473	popq	%r15
0000000000038475	popq	%rbp
0000000000038476	ret
+[PBXGDB_MIBreakpointConditionCommand commandWithCondition:forBreakpointNum:]:
0000000000038477	pushq	%rbp
0000000000038478	movq	%rsp,%rbp
000000000003847b	pushq	%r15
000000000003847d	pushq	%r14
000000000003847f	pushq	%r13
0000000000038481	pushq	%r12
0000000000038483	pushq	%rbx
0000000000038484	pushq	%rax
0000000000038485	movq	%rcx,%r15
0000000000038488	movq	%rdx,%r12
000000000003848b	movq	0x0006c5ee(%rip),%rsi
0000000000038492	movq	0x0007043f(%rip),%rdi
0000000000038499	movq	0x0004bc38(%rip),%r13
00000000000384a0	call	*%r13
00000000000384a3	movq	%rax,%r14
00000000000384a6	movq	0x0006ff8b(%rip),%rbx
00000000000384ad	movq	0x0006dd6c(%rip),%rsi
00000000000384b4	movq	0x0007041d(%rip),%rdi
00000000000384bb	call	*%r13
00000000000384be	leaq	0x00079253(%rip),%rdx
00000000000384c5	movq	0x0006c6ac(%rip),%rsi
00000000000384cc	movq	%rbx,%rdi
00000000000384cf	movq	%rax,%rcx
00000000000384d2	movq	%r15,%r8
00000000000384d5	xorb	%al,%al
00000000000384d7	call	*%r13
00000000000384da	movq	%rax,%rbx
00000000000384dd	leaq	0x00077454(%rip),%rdx
00000000000384e4	testq	%r12,%r12
00000000000384e7	cmovneq	%r12,%rdx
00000000000384eb	movq	0x0006c60e(%rip),%rsi
00000000000384f2	movq	%rbx,%rdi
00000000000384f5	call	*%r13
00000000000384f8	movq	0x0006dd19(%rip),%rsi
00000000000384ff	movq	%r14,%rdi
0000000000038502	movq	%rbx,%rdx
0000000000038505	call	*%r13
0000000000038508	movq	%r14,%rax
000000000003850b	addq	$0x08,%rsp
000000000003850f	popq	%rbx
0000000000038510	popq	%r12
0000000000038512	popq	%r13
0000000000038514	popq	%r14
0000000000038516	popq	%r15
0000000000038518	popq	%rbp
0000000000038519	ret
+[PBXGDB_MIBreakpointConditionCommand GDBCommand]:
000000000003851a	pushq	%rbp
000000000003851b	movq	%rsp,%rbp
000000000003851e	leaq	0x00079213(%rip),%rax
0000000000038525	popq	%rbp
0000000000038526	ret
+[PBXGDB_MIBreakpointIgnoreCountCommand commandIgnoreCount:forBreakpointNum:]:
0000000000038527	pushq	%rbp
0000000000038528	movq	%rsp,%rbp
000000000003852b	pushq	%r15
000000000003852d	pushq	%r14
000000000003852f	pushq	%r13
0000000000038531	pushq	%r12
0000000000038533	pushq	%rbx
0000000000038534	pushq	%rax
0000000000038535	movq	%rcx,%r14
0000000000038538	movq	%rdx,%r15
000000000003853b	movq	0x0006c53e(%rip),%rsi
0000000000038542	movq	0x00070397(%rip),%rdi
0000000000038549	movq	0x0004bb88(%rip),%r13
0000000000038550	call	*%r13
0000000000038553	movq	%rax,%rbx
0000000000038556	movq	0x0006fedb(%rip),%r12
000000000003855d	movq	0x0006dcbc(%rip),%rsi
0000000000038564	movq	0x00070375(%rip),%rdi
000000000003856b	call	*%r13
000000000003856e	leaq	0x000791e3(%rip),%rdx
0000000000038575	movq	0x0006c5fc(%rip),%rsi
000000000003857c	movq	%r12,%rdi
000000000003857f	movq	%rax,%rcx
0000000000038582	movq	%r14,%r8
0000000000038585	movq	%r15,%r9
0000000000038588	xorb	%al,%al
000000000003858a	call	*%r13
000000000003858d	movq	0x0006dc84(%rip),%rsi
0000000000038594	movq	%rbx,%rdi
0000000000038597	movq	%rax,%rdx
000000000003859a	call	*%r13
000000000003859d	movq	%rbx,%rax
00000000000385a0	addq	$0x08,%rsp
00000000000385a4	popq	%rbx
00000000000385a5	popq	%r12
00000000000385a7	popq	%r13
00000000000385a9	popq	%r14
00000000000385ab	popq	%r15
00000000000385ad	popq	%rbp
00000000000385ae	ret
+[PBXGDB_MIBreakpointIgnoreCountCommand GDBCommand]:
00000000000385af	pushq	%rbp
00000000000385b0	movq	%rsp,%rbp
00000000000385b3	leaq	0x000791be(%rip),%rax
00000000000385ba	popq	%rbp
00000000000385bb	ret
+[PBXGDB_MIBreakpointCommandCommand commandWithCommand:forBreakpointNum:]:
00000000000385bc	pushq	%rbp
00000000000385bd	movq	%rsp,%rbp
00000000000385c0	pushq	%r15
00000000000385c2	pushq	%r14
00000000000385c4	pushq	%r13
00000000000385c6	pushq	%r12
00000000000385c8	pushq	%rbx
00000000000385c9	pushq	%rax
00000000000385ca	movq	%rcx,%r14
00000000000385cd	movq	%rdx,%r15
00000000000385d0	movq	0x0006c4a9(%rip),%rsi
00000000000385d7	movq	0x0007030a(%rip),%rdi
00000000000385de	movq	0x0004baf3(%rip),%r13
00000000000385e5	call	*%r13
00000000000385e8	movq	%rax,%rbx
00000000000385eb	movq	0x0006fe5e(%rip),%r12
00000000000385f2	movq	0x0006dc27(%rip),%rsi
00000000000385f9	movq	0x000702e8(%rip),%rdi
0000000000038600	call	*%r13
0000000000038603	leaq	0x0007918e(%rip),%rdx
000000000003860a	movq	0x0006c567(%rip),%rsi
0000000000038611	movq	%r12,%rdi
0000000000038614	movq	%rax,%rcx
0000000000038617	movq	%r14,%r8
000000000003861a	movq	%r15,%r9
000000000003861d	xorb	%al,%al
000000000003861f	call	*%r13
0000000000038622	movq	0x0006dbef(%rip),%rsi
0000000000038629	movq	%rbx,%rdi
000000000003862c	movq	%rax,%rdx
000000000003862f	call	*%r13
0000000000038632	movq	%rbx,%rax
0000000000038635	addq	$0x08,%rsp
0000000000038639	popq	%rbx
000000000003863a	popq	%r12
000000000003863c	popq	%r13
000000000003863e	popq	%r14
0000000000038640	popq	%r15
0000000000038642	popq	%rbp
0000000000038643	ret
+[PBXGDB_MIBreakpointCommandCommand GDBCommand]:
0000000000038644	pushq	%rbp
0000000000038645	movq	%rsp,%rbp
0000000000038648	leaq	0x00079169(%rip),%rax
000000000003864f	popq	%rbp
0000000000038650	ret
+[PBXGDB_MICreateWatchpointCommand GDBCommand]:
0000000000038651	pushq	%rbp
0000000000038652	movq	%rsp,%rbp
0000000000038655	leaq	0x0007917c(%rip),%rax
000000000003865c	popq	%rbp
000000000003865d	ret
-[PBXGDB_MICommand sequenceNumberPrependedCommandString:]:
000000000003865e	pushq	%rbp
000000000003865f	movq	%rsp,%rbp
0000000000038662	pushq	%r14
0000000000038664	pushq	%rbx
0000000000038665	movq	%rdx,%r14
0000000000038668	movq	0x0006fde1(%rip),%rbx
000000000003866f	movq	0x0006dbc2(%rip),%rsi
0000000000038676	call	*0x0004ba5c(%rip)
000000000003867c	leaq	0x00079175(%rip),%rdx
0000000000038683	movq	0x0006c4ee(%rip),%rsi
000000000003868a	movq	%rbx,%rdi
000000000003868d	movq	%rax,%rcx
0000000000038690	movq	%r14,%r8
0000000000038693	xorb	%al,%al
0000000000038695	movq	0x0004ba3c(%rip),%r9
000000000003869c	popq	%rbx
000000000003869d	popq	%r14
000000000003869f	popq	%rbp
00000000000386a0	jmp	*%r9
-[PBXGDB_MICommand target]:
00000000000386a3	pushq	%rbp
00000000000386a4	movq	%rsp,%rbp
00000000000386a7	movq	0x00076462(%rip),%rax
00000000000386ae	movq	(%rdi,%rax),%rax
00000000000386b2	popq	%rbp
00000000000386b3	ret
-[PBXGDB_MICommand finishAction]:
00000000000386b4	pushq	%rbp
00000000000386b5	movq	%rsp,%rbp
00000000000386b8	movq	0x00076459(%rip),%rax
00000000000386bf	movq	(%rdi,%rax),%rax
00000000000386c3	popq	%rbp
00000000000386c4	ret
-[PBXGDB_MICommand handleError]:
00000000000386c5	pushq	%rbp
00000000000386c6	movq	%rsp,%rbp
00000000000386c9	pushq	%rbx
00000000000386ca	pushq	%rax
00000000000386cb	movq	%rdi,%rbx
00000000000386ce	movq	0x0006db7b(%rip),%rsi
00000000000386d5	call	*0x0004b9fd(%rip)
00000000000386db	testq	%rax,%rax
00000000000386de	jne	0x000386e4
00000000000386e0	xorb	%al,%al
00000000000386e2	jmp	0x000386fd
00000000000386e4	movq	0x0006db65(%rip),%rsi
00000000000386eb	movq	%rbx,%rdi
00000000000386ee	call	*0x0004b9e4(%rip)
00000000000386f4	movq	%rax,%rdi
00000000000386f7	movq	%rbx,%rsi
00000000000386fa	call	*0x10(%rax)
00000000000386fd	movsbl	%al,%eax
0000000000038700	addq	$0x08,%rsp
0000000000038704	popq	%rbx
0000000000038705	popq	%rbp
0000000000038706	ret
-[PBXGDB_MICommand startExecutableRunningAction]:
0000000000038707	pushq	%rbp
0000000000038708	movq	%rsp,%rbp
000000000003870b	movq	0x0007640e(%rip),%rax
0000000000038712	movq	(%rdi,%rax),%rax
0000000000038716	popq	%rbp
0000000000038717	ret
-[PBXGDB_MICommand rawCommandString]:
0000000000038718	pushq	%rbp
0000000000038719	movq	%rsp,%rbp
000000000003871c	xorl	%eax,%eax
000000000003871e	popq	%rbp
000000000003871f	ret
-[PBXGDB_MICommand resultDescriptions]:
0000000000038720	pushq	%rbp
0000000000038721	movq	%rsp,%rbp
0000000000038724	movq	0x0007640d(%rip),%rax
000000000003872b	movq	(%rdi,%rax),%rax
000000000003872f	popq	%rbp
0000000000038730	ret
-[PBXGDB_MICommand gdbStoppedWithResults:]:
0000000000038731	pushq	%rbp
0000000000038732	movq	%rsp,%rbp
0000000000038735	pushq	%r15
0000000000038737	pushq	%r14
0000000000038739	pushq	%rbx
000000000003873a	pushq	%rax
000000000003873b	movq	%rdx,%r14
000000000003873e	movq	%rdi,%rbx
0000000000038741	movq	0x000763c8(%rip),%rax
0000000000038748	movq	(%rbx,%rax),%rdi
000000000003874c	movq	0x0006db05(%rip),%r15
0000000000038753	leaq	0x0006fc16(%rip),%rsi
000000000003875a	movq	%r15,%rdx
000000000003875d	call	*0x0006fc0d(%rip)
0000000000038763	testb	%al,%al
0000000000038765	jne	0x00038772
0000000000038767	addq	$0x08,%rsp
000000000003876b	popq	%rbx
000000000003876c	popq	%r14
000000000003876e	popq	%r15
0000000000038770	popq	%rbp
0000000000038771	ret
0000000000038772	movq	0x00076397(%rip),%rax
0000000000038779	movq	(%rbx,%rax),%rdi
000000000003877d	movq	0x0006dadc(%rip),%rsi
0000000000038784	movq	%r15,%rdx
0000000000038787	movq	%r14,%rcx
000000000003878a	movq	%rbx,%r8
000000000003878d	addq	$0x08,%rsp
0000000000038791	popq	%rbx
0000000000038792	popq	%r14
0000000000038794	popq	%r15
0000000000038796	popq	%rbp
0000000000038797	jmp	*0x0004b93b(%rip)
-[PBXGDB_MICommand errorHandler]:
000000000003879d	pushq	%rbp
000000000003879e	movq	%rsp,%rbp
00000000000387a1	movq	0x000763a0(%rip),%rdx
00000000000387a8	movl	$0x00000001,%ecx
00000000000387ad	popq	%rbp
00000000000387ae	jmp	0x0004e632	; symbol stub for: _objc_getProperty
-[PBXGDB_MICommand setErrorHandler:]:
00000000000387b3	pushq	%rbp
00000000000387b4	movq	%rsp,%rbp
00000000000387b7	movq	%rdx,%rax
00000000000387ba	movq	0x00076387(%rip),%rdx
00000000000387c1	movq	%rax,%rcx
00000000000387c4	movl	$0x00000001,%r8d
00000000000387ca	movl	$0x00000001,%r9d
00000000000387d0	popq	%rbp
00000000000387d1	jmp	0x0004e644	; symbol stub for: _objc_setProperty
+[PBXGDB_MIConsoleCommands miCommandWithStringToComplete:]:
00000000000387d6	pushq	%rbp
00000000000387d7	movq	%rsp,%rbp
00000000000387da	pushq	%r15
00000000000387dc	pushq	%r14
00000000000387de	pushq	%r13
00000000000387e0	pushq	%r12
00000000000387e2	pushq	%rbx
00000000000387e3	pushq	%rax
00000000000387e4	movq	%rdx,%r12
00000000000387e7	movq	0x0006c292(%rip),%rsi
00000000000387ee	movq	0x0006ff23(%rip),%rdi
00000000000387f5	movq	0x0004b8dc(%rip),%r14
00000000000387fc	call	*%r14
00000000000387ff	movq	%rax,%r15
0000000000038802	movq	0x0006fc47(%rip),%rax
0000000000038809	movq	%rax,0xd0(%rbp)
000000000003880d	movq	0x0006da54(%rip),%rsi
0000000000038814	movq	%r15,%rdi
0000000000038817	call	*%r14
000000000003881a	movq	%rax,%r13
000000000003881d	leaq	0x00077114(%rip),%rbx
0000000000038824	testq	%r12,%r12
0000000000038827	cmovneq	%r12,%rbx
000000000003882b	leaq	0x0006fabe(%rip),%rsi
0000000000038832	movq	%rbx,%rdi
0000000000038835	call	*0x0006fab5(%rip)
000000000003883b	leaq	0x00079016(%rip),%rdx
0000000000038842	movq	0x0006c32f(%rip),%rsi
0000000000038849	movq	0xd0(%rbp),%rdi
000000000003884d	movq	%r13,%rcx
0000000000038850	movq	%rbx,%r8
0000000000038853	movq	%rax,%r9
0000000000038856	xorb	%al,%al
0000000000038858	call	*%r14
000000000003885b	movq	0x0006d9b6(%rip),%rsi
0000000000038862	movq	%r15,%rdi
0000000000038865	movq	%rax,%rdx
0000000000038868	call	*%r14
000000000003886b	movq	%r15,%rax
000000000003886e	addq	$0x08,%rsp
0000000000038872	popq	%rbx
0000000000038873	popq	%r12
0000000000038875	popq	%r13
0000000000038877	popq	%r14
0000000000038879	popq	%r15
000000000003887b	popq	%rbp
000000000003887c	ret
-[PBXGDB_MIConsoleCommands miString]:
000000000003887d	pushq	%rbp
000000000003887e	movq	%rsp,%rbp
0000000000038881	leaq	0x00078ff0(%rip),%rax
0000000000038888	popq	%rbp
0000000000038889	ret
-[PBXGDB_MIContinueExecutableCommand GDBCommandString]:
000000000003888a	pushq	%rbp
000000000003888b	movq	%rsp,%rbp
000000000003888e	leaq	0x00079043(%rip),%rax
0000000000038895	popq	%rbp
0000000000038896	ret
-[PBXGDB_MIContinueExecutableCommand willExecute]:
0000000000038897	pushq	%rbp
0000000000038898	movq	%rsp,%rbp
000000000003889b	leaq	0x00076266(%rip),%rax
00000000000388a2	movq	(%rax),%rax
00000000000388a5	movq	(%rdi,%rax),%rdi
00000000000388a9	movq	0x0006d9d0(%rip),%rsi
00000000000388b0	xorl	%edx,%edx
00000000000388b2	popq	%rbp
00000000000388b3	jmp	*0x0004b81f(%rip)
-[PBXGDB_MIResumeThreadCommand GDBCommandString]:
00000000000388b9	pushq	%rbp
00000000000388ba	movq	%rsp,%rbp
00000000000388bd	pushq	%rbx
00000000000388be	pushq	%rax
00000000000388bf	movq	0x0006fb8a(%rip),%rbx
00000000000388c6	movq	0x0006ce7b(%rip),%rsi
00000000000388cd	call	*0x0004b805(%rip)
00000000000388d3	leaq	0x0007901e(%rip),%rdx
00000000000388da	movq	0x0006c297(%rip),%rsi
00000000000388e1	movq	%rbx,%rdi
00000000000388e4	movq	%rax,%rcx
00000000000388e7	xorb	%al,%al
00000000000388e9	movq	0x0004b7e8(%rip),%r8
00000000000388f0	addq	$0x08,%rsp
00000000000388f4	popq	%rbx
00000000000388f5	popq	%rbp
00000000000388f6	jmp	*%r8
-[PBXGDB_MISuspendThreadCommand GDBCommandString]:
00000000000388f9	pushq	%rbp
00000000000388fa	movq	%rsp,%rbp
00000000000388fd	pushq	%rbx
00000000000388fe	pushq	%rax
00000000000388ff	movq	0x0006fb4a(%rip),%rbx
0000000000038906	movq	0x0006ce3b(%rip),%rsi
000000000003890d	call	*0x0004b7c5(%rip)
0000000000038913	leaq	0x00078ffe(%rip),%rdx
000000000003891a	movq	0x0006c257(%rip),%rsi
0000000000038921	movq	%rbx,%rdi
0000000000038924	movq	%rax,%rcx
0000000000038927	xorb	%al,%al
0000000000038929	movq	0x0004b7a8(%rip),%r8
0000000000038930	addq	$0x08,%rsp
0000000000038934	popq	%rbx
0000000000038935	popq	%rbp
0000000000038936	jmp	*%r8
-[PBXGDB_MIStepInstructionCommand GDBCommandString]:
0000000000038939	pushq	%rbp
000000000003893a	movq	%rsp,%rbp
000000000003893d	leaq	0x00079034(%rip),%rax
0000000000038944	popq	%rbp
0000000000038945	ret
-[PBXGDB_MIStepInstructionCommand willExecute]:
0000000000038946	pushq	%rbp
0000000000038947	movq	%rsp,%rbp
000000000003894a	pushq	%r14
000000000003894c	pushq	%rbx
000000000003894d	movq	%rdi,%r14
0000000000038950	leaq	0x000761b1(%rip),%rax
0000000000038957	movq	(%rax),%rbx
000000000003895a	movq	(%r14,%rbx),%rdi
000000000003895e	movq	0x0006d91b(%rip),%rsi
0000000000038965	xorl	%edx,%edx
0000000000038967	call	*0x0004b76b(%rip)
000000000003896d	movq	(%r14,%rbx),%rdi
0000000000038971	movq	0x0006c140(%rip),%rsi
0000000000038978	call	*0x0004b75a(%rip)
000000000003897e	movq	%rax,%rbx
0000000000038981	movq	0x0006d910(%rip),%rsi
0000000000038988	movq	0x0006fd49(%rip),%rdi
000000000003898f	call	*0x0004b743(%rip)
0000000000038995	movq	0x0006cf8c(%rip),%rsi
000000000003899c	movq	%rbx,%rdi
000000000003899f	movq	%rax,%rdx
00000000000389a2	xorl	%ecx,%ecx
00000000000389a4	movq	0x0004b72d(%rip),%rax
00000000000389ab	popq	%rbx
00000000000389ac	popq	%r14
00000000000389ae	popq	%rbp
00000000000389af	jmp	*%rax
-[PBXGDB_MINextInstructionCommand GDBCommandString]:
00000000000389b1	pushq	%rbp
00000000000389b2	movq	%rsp,%rbp
00000000000389b5	leaq	0x00078fdc(%rip),%rax
00000000000389bc	popq	%rbp
00000000000389bd	ret
-[PBXGDB_MINextInstructionCommand willExecute]:
00000000000389be	pushq	%rbp
00000000000389bf	movq	%rsp,%rbp
00000000000389c2	pushq	%r14
00000000000389c4	pushq	%rbx
00000000000389c5	movq	%rdi,%r14
00000000000389c8	leaq	0x00076139(%rip),%rax
00000000000389cf	movq	(%rax),%rbx
00000000000389d2	movq	(%r14,%rbx),%rdi
00000000000389d6	movq	0x0006d8a3(%rip),%rsi
00000000000389dd	xorl	%edx,%edx
00000000000389df	call	*0x0004b6f3(%rip)
00000000000389e5	movq	(%r14,%rbx),%rdi
00000000000389e9	movq	0x0006c0c8(%rip),%rsi
00000000000389f0	call	*0x0004b6e2(%rip)
00000000000389f6	movq	%rax,%rbx
00000000000389f9	movq	0x0006d8a0(%rip),%rsi
0000000000038a00	movq	0x0006fcd1(%rip),%rdi
0000000000038a07	call	*0x0004b6cb(%rip)
0000000000038a0d	movq	0x0006cf14(%rip),%rsi
0000000000038a14	movq	%rbx,%rdi
0000000000038a17	movq	%rax,%rdx
0000000000038a1a	xorl	%ecx,%ecx
0000000000038a1c	movq	0x0004b6b5(%rip),%rax
0000000000038a23	popq	%rbx
0000000000038a24	popq	%r14
0000000000038a26	popq	%rbp
0000000000038a27	jmp	*%rax
-[PBXGDB_MIExecStatusCommand initWithSequenceNumber:]:
0000000000038a29	pushq	%rbp
0000000000038a2a	movq	%rsp,%rbp
0000000000038a2d	subq	$0x10,%rsp
0000000000038a31	movq	%rdi,0xf0(%rbp)
0000000000038a35	movq	0x0007040c(%rip),%rax
0000000000038a3c	movq	%rax,0xf8(%rbp)
0000000000038a40	movq	0x0006d7e9(%rip),%rsi
0000000000038a47	leaq	0xf0(%rbp),%rdi
0000000000038a4b	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000038a50	addq	$0x10,%rsp
0000000000038a54	popq	%rbp
0000000000038a55	ret
-[PBXGDB_MIExecStatusCommand GDBCommandString]:
0000000000038a56	pushq	%rbp
0000000000038a57	movq	%rsp,%rbp
0000000000038a5a	leaq	0x00078fd7(%rip),%rax
0000000000038a61	popq	%rbp
0000000000038a62	ret
-[PBXGDB_MIAttachCommand setProcessID:]:
0000000000038a63	pushq	%rbp
0000000000038a64	movq	%rsp,%rbp
0000000000038a67	pushq	%rbx
0000000000038a68	pushq	%rax
0000000000038a69	movq	%rdi,%rbx
0000000000038a6c	movq	0x000760e5(%rip),%rax
0000000000038a73	movl	%edx,(%rbx,%rax)
0000000000038a76	movq	0x0006f9d3(%rip),%rdi
0000000000038a7d	leaq	0x0006f85c(%rip),%rsi
0000000000038a84	call	*0x0006f856(%rip)
0000000000038a8a	movq	0x000760c7(%rip),%rcx
0000000000038a91	movslq	(%rbx,%rcx),%rcx
0000000000038a95	leaq	0x00078ffc(%rip),%rdx
0000000000038a9c	movq	0x0006c215(%rip),%rsi
0000000000038aa3	movq	%rax,%rdi
0000000000038aa6	xorb	%al,%al
0000000000038aa8	call	*0x0004b62a(%rip)
0000000000038aae	leaq	0x0007607b(%rip),%rcx
0000000000038ab5	movq	(%rcx),%rdx
0000000000038ab8	movq	%rax,%rdi
0000000000038abb	movq	%rbx,%rsi
0000000000038abe	addq	$0x08,%rsp
0000000000038ac2	popq	%rbx
0000000000038ac3	popq	%rbp
0000000000038ac4	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MIAttachCommand processID]:
0000000000038ac9	pushq	%rbp
0000000000038aca	movq	%rsp,%rbp
0000000000038acd	movq	0x00076084(%rip),%rax
0000000000038ad4	movl	(%rdi,%rax),%eax
0000000000038ad7	popq	%rbp
0000000000038ad8	ret
-[PBXGDB_MIAttachWaitForCommand setProcessID:]:
0000000000038ad9	pushq	%rbp
0000000000038ada	movq	%rsp,%rbp
0000000000038add	popq	%rbp
0000000000038ade	ret
-[PBXGDB_MIAttachWaitForCommand setWaitForName:]:
0000000000038adf	pushq	%rbp
0000000000038ae0	movq	%rsp,%rbp
0000000000038ae3	pushq	%r14
0000000000038ae5	pushq	%rbx
0000000000038ae6	movq	%rdx,%rbx
0000000000038ae9	movq	%rdi,%r14
0000000000038aec	movq	0x0006f95d(%rip),%rdi
0000000000038af3	leaq	0x0006f7e6(%rip),%rsi
0000000000038afa	call	*0x0006f7e0(%rip)
0000000000038b00	movq	0x0006c1b1(%rip),%rsi
0000000000038b07	leaq	0x00078faa(%rip),%rdx
0000000000038b0e	movq	%rax,%rdi
0000000000038b11	movq	%rbx,%rcx
0000000000038b14	xorb	%al,%al
0000000000038b16	call	*0x0004b5bc(%rip)
0000000000038b1c	leaq	0x0007600d(%rip),%rcx
0000000000038b23	movq	(%rcx),%rdx
0000000000038b26	movq	%rax,%rdi
0000000000038b29	movq	%r14,%rsi
0000000000038b2c	popq	%rbx
0000000000038b2d	popq	%r14
0000000000038b2f	popq	%rbp
0000000000038b30	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MIAttachAltWaitForCommand setWaitForName:]:
0000000000038b35	pushq	%rbp
0000000000038b36	movq	%rsp,%rbp
0000000000038b39	pushq	%r14
0000000000038b3b	pushq	%rbx
0000000000038b3c	movq	%rdx,%rbx
0000000000038b3f	movq	%rdi,%r14
0000000000038b42	movq	0x0006f907(%rip),%rdi
0000000000038b49	leaq	0x0006f790(%rip),%rsi
0000000000038b50	call	*0x0006f78a(%rip)
0000000000038b56	movq	0x0006c15b(%rip),%rsi
0000000000038b5d	leaq	0x00078f74(%rip),%rdx
0000000000038b64	movq	%rax,%rdi
0000000000038b67	movq	%rbx,%rcx
0000000000038b6a	xorb	%al,%al
0000000000038b6c	call	*0x0004b566(%rip)
0000000000038b72	leaq	0x00075fb7(%rip),%rcx
0000000000038b79	movq	(%rcx),%rdx
0000000000038b7c	movq	%rax,%rdi
0000000000038b7f	movq	%r14,%rsi
0000000000038b82	popq	%rbx
0000000000038b83	popq	%r14
0000000000038b85	popq	%rbp
0000000000038b86	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
+[PBXGDB_MIUntilCommand commandForFile:lineNumber:]:
0000000000038b8b	pushq	%rbp
0000000000038b8c	movq	%rsp,%rbp
0000000000038b8f	pushq	%r15
0000000000038b91	pushq	%r14
0000000000038b93	pushq	%r13
0000000000038b95	pushq	%r12
0000000000038b97	pushq	%rbx
0000000000038b98	pushq	%rax
0000000000038b99	movq	%rcx,%r14
0000000000038b9c	movq	%rdx,%rbx
0000000000038b9f	movq	0x0006beda(%rip),%rsi
0000000000038ba6	movq	0x0006fd43(%rip),%rdi
0000000000038bad	call	*0x0004b525(%rip)
0000000000038bb3	movq	%rax,%r15
0000000000038bb6	testq	%rbx,%rbx
0000000000038bb9	je	0x00038c04
0000000000038bbb	movq	0x0006f88e(%rip),%r12
0000000000038bc2	movq	0x0006d337(%rip),%rsi
0000000000038bc9	movq	0x0004b508(%rip),%r13
0000000000038bd0	movq	%rbx,%rdi
0000000000038bd3	call	*%r13
0000000000038bd6	movq	0x0006bf9b(%rip),%rsi
0000000000038bdd	leaq	0x00078f14(%rip),%rdx
0000000000038be4	movq	%r12,%rdi
0000000000038be7	movq	%rax,%rcx
0000000000038bea	movq	%r14,%r8
0000000000038bed	xorb	%al,%al
0000000000038bef	call	*%r13
0000000000038bf2	movq	0x0006d61f(%rip),%rsi
0000000000038bf9	movq	%r15,%rdi
0000000000038bfc	movq	%rax,%rdx
0000000000038bff	call	*%r13
0000000000038c02	jmp	0x00038c1b
0000000000038c04	movq	0x0006d60d(%rip),%rsi
0000000000038c0b	leaq	0x00078d26(%rip),%rdx
0000000000038c12	movq	%r15,%rdi
0000000000038c15	call	*0x0004b4bd(%rip)
0000000000038c1b	movq	%r15,%rax
0000000000038c1e	addq	$0x08,%rsp
0000000000038c22	popq	%rbx
0000000000038c23	popq	%r12
0000000000038c25	popq	%r13
0000000000038c27	popq	%r14
0000000000038c29	popq	%r15
0000000000038c2b	popq	%rbp
0000000000038c2c	ret
-[PBXGDB_MIUntilCommand willExecute]:
0000000000038c2d	pushq	%rbp
0000000000038c2e	movq	%rsp,%rbp
0000000000038c31	pushq	%r15
0000000000038c33	pushq	%r14
0000000000038c35	pushq	%rbx
0000000000038c36	pushq	%rax
0000000000038c37	movq	%rdi,%r14
0000000000038c3a	leaq	0x00075ec7(%rip),%rax
0000000000038c41	movq	(%rax),%r15
0000000000038c44	movq	(%r14,%r15),%rdi
0000000000038c48	movq	0x0006d631(%rip),%rsi
0000000000038c4f	xorl	%edx,%edx
0000000000038c51	call	*0x0004b481(%rip)
0000000000038c57	leaq	0x00075ed2(%rip),%rax
0000000000038c5e	movq	(%rax),%rax
0000000000038c61	movq	(%r14,%rax),%rdi
0000000000038c65	leaq	0x00076aec(%rip),%rdx
0000000000038c6c	movq	0x0006d63d(%rip),%rsi
0000000000038c73	call	*0x0004b45f(%rip)
0000000000038c79	movq	0x0006cd68(%rip),%rsi
0000000000038c80	movq	%rax,%rdi
0000000000038c83	call	*0x0004b44f(%rip)
0000000000038c89	movq	%rax,%rbx
0000000000038c8c	movq	(%r14,%r15),%rdi
0000000000038c90	movq	0x0006be21(%rip),%rsi
0000000000038c97	call	*0x0004b43b(%rip)
0000000000038c9d	movq	%rax,%r14
0000000000038ca0	leaq	0x00076c91(%rip),%rdx
0000000000038ca7	testq	%rbx,%rbx
0000000000038caa	cmovneq	%rbx,%rdx
0000000000038cae	movq	0x0006d603(%rip),%rsi
0000000000038cb5	movq	0x0006fa1c(%rip),%rdi
0000000000038cbc	call	*0x0004b416(%rip)
0000000000038cc2	movq	0x0006cc5f(%rip),%rsi
0000000000038cc9	movq	%r14,%rdi
0000000000038ccc	movq	%rax,%rdx
0000000000038ccf	xorl	%ecx,%ecx
0000000000038cd1	movq	0x0004b400(%rip),%rax
0000000000038cd8	addq	$0x08,%rsp
0000000000038cdc	popq	%rbx
0000000000038cdd	popq	%r14
0000000000038cdf	popq	%r15
0000000000038ce1	popq	%rbp
0000000000038ce2	jmp	*%rax
-[PBXGDB_MIUndoCommand GDBCommandString]:
0000000000038ce4	pushq	%rbp
0000000000038ce5	movq	%rsp,%rbp
0000000000038ce8	leaq	0x00078e29(%rip),%rax
0000000000038cef	popq	%rbp
0000000000038cf0	ret
-[PBXGDB_MIConnectGDBRemoteCommand GDBCommandString]:
0000000000038cf1	pushq	%rbp
0000000000038cf2	movq	%rsp,%rbp
0000000000038cf5	movq	%rdi,%rax
0000000000038cf8	movq	0x0006f751(%rip),%rdi
0000000000038cff	movq	0x00075e5a(%rip),%rcx
0000000000038d06	cmpb	$0x01,(%rax,%rcx)
0000000000038d0a	jne	0x00038d2f
0000000000038d0c	movq	0x00075e55(%rip),%rcx
0000000000038d13	movq	(%rax,%rcx),%rcx
0000000000038d17	movq	0x0006be5a(%rip),%rsi
0000000000038d1e	leaq	0x00078e13(%rip),%rdx
0000000000038d25	xorb	%al,%al
0000000000038d27	call	*0x0004b3ab(%rip)
0000000000038d2d	jmp	0x00038d4f
0000000000038d2f	movq	0x00075e3a(%rip),%rcx
0000000000038d36	movl	(%rax,%rcx),%ecx
0000000000038d39	movq	0x0006be38(%rip),%rsi
0000000000038d40	leaq	0x00078e11(%rip),%rdx
0000000000038d47	xorb	%al,%al
0000000000038d49	call	*0x0004b389(%rip)
0000000000038d4f	popq	%rbp
0000000000038d50	ret
-[PBXGDB_MIConnectGDBRemoteCommand debugAsAService]:
0000000000038d51	pushq	%rbp
0000000000038d52	movq	%rsp,%rbp
0000000000038d55	movq	0x00075e04(%rip),%rax
0000000000038d5c	movb	(%rdi,%rax),%al
0000000000038d5f	movsbl	%al,%eax
0000000000038d62	popq	%rbp
0000000000038d63	ret
-[PBXGDB_MIConnectGDBRemoteCommand setDebugAsAService:]:
0000000000038d64	pushq	%rbp
0000000000038d65	movq	%rsp,%rbp
0000000000038d68	movq	0x00075df1(%rip),%rax
0000000000038d6f	movb	%dl,(%rdi,%rax)
0000000000038d72	popq	%rbp
0000000000038d73	ret
-[PBXGDB_MIConnectGDBRemoteCommand gdbRemotePort]:
0000000000038d74	pushq	%rbp
0000000000038d75	movq	%rsp,%rbp
0000000000038d78	movq	0x00075df1(%rip),%rax
0000000000038d7f	movl	(%rdi,%rax),%eax
0000000000038d82	popq	%rbp
0000000000038d83	ret
-[PBXGDB_MIConnectGDBRemoteCommand setGdbRemotePort:]:
0000000000038d84	pushq	%rbp
0000000000038d85	movq	%rsp,%rbp
0000000000038d88	movq	0x00075de1(%rip),%rax
0000000000038d8f	movl	%edx,(%rdi,%rax)
0000000000038d92	popq	%rbp
0000000000038d93	ret
-[PBXGDB_MIConnectGDBRemoteCommand debugServiceFDPath]:
0000000000038d94	pushq	%rbp
0000000000038d95	movq	%rsp,%rbp
0000000000038d98	movq	0x00075dc9(%rip),%rdx
0000000000038d9f	movl	$0x00000001,%ecx
0000000000038da4	popq	%rbp
0000000000038da5	jmp	0x0004e632	; symbol stub for: _objc_getProperty
-[PBXGDB_MIConnectGDBRemoteCommand setDebugServiceFDPath:]:
0000000000038daa	pushq	%rbp
0000000000038dab	movq	%rsp,%rbp
0000000000038dae	movq	%rdx,%rax
0000000000038db1	movq	0x00075db0(%rip),%rdx
0000000000038db8	movq	%rax,%rcx
0000000000038dbb	movl	$0x00000001,%r8d
0000000000038dc1	movl	$0x00000001,%r9d
0000000000038dc7	popq	%rbp
0000000000038dc8	jmp	0x0004e644	; symbol stub for: _objc_setProperty
0000000000038dcd	nop
0000000000038dce	nop
0000000000038dcf	nop
-[PBXGDB_MIStoppedStateDetail copyWithZone:]:
0000000000038dd0	pushq	%rbp
0000000000038dd1	movq	%rsp,%rbp
0000000000038dd4	pushq	%r15
0000000000038dd6	pushq	%r14
0000000000038dd8	pushq	%r12
0000000000038dda	pushq	%rbx
0000000000038ddb	movq	%rdx,%r15
0000000000038dde	movq	%rdi,%r14
0000000000038de1	movq	0x0006fb10(%rip),%rdi
0000000000038de8	leaq	0x0006f5b1(%rip),%rsi
0000000000038def	call	*0x0006f5ab(%rip)
0000000000038df5	movq	0x0006bc74(%rip),%rsi
0000000000038dfc	movq	0x0004b2d5(%rip),%r12
0000000000038e03	movq	%rax,%rdi
0000000000038e06	call	*%r12
0000000000038e09	movq	%rax,%rbx
0000000000038e0c	movq	0x00075d65(%rip),%rax
0000000000038e13	movq	(%r14,%rax),%rdi
0000000000038e17	movq	0x0006d4a2(%rip),%rsi
0000000000038e1e	movq	%r15,%rdx
0000000000038e21	call	*%r12
0000000000038e24	movq	0x00075d4d(%rip),%rdx
0000000000038e2b	movq	%rax,%rdi
0000000000038e2e	movq	%rbx,%rsi
0000000000038e31	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000038e36	movq	0x00075d43(%rip),%rax
0000000000038e3d	movl	(%r14,%rax),%ecx
0000000000038e41	movl	%ecx,(%rbx,%rax)
0000000000038e44	movq	0x00075d3d(%rip),%rax
0000000000038e4b	movq	(%r14,%rax),%rcx
0000000000038e4f	movq	%rcx,(%rbx,%rax)
0000000000038e53	movq	0x00075d36(%rip),%rax
0000000000038e5a	movq	(%r14,%rax),%rcx
0000000000038e5e	movq	%rcx,(%rbx,%rax)
0000000000038e62	movq	0x00075d2f(%rip),%rax
0000000000038e69	movq	(%r14,%rax),%rdi
0000000000038e6d	movq	0x0006d44c(%rip),%rsi
0000000000038e74	movq	%r15,%rdx
0000000000038e77	call	*%r12
0000000000038e7a	movq	0x00075d17(%rip),%rdx
0000000000038e81	movq	%rax,%rdi
0000000000038e84	movq	%rbx,%rsi
0000000000038e87	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000038e8c	movq	0x00075d0d(%rip),%rax
0000000000038e93	movb	(%r14,%rax),%cl
0000000000038e97	movb	%cl,(%rbx,%rax)
0000000000038e9a	movq	0x00075d07(%rip),%rax
0000000000038ea1	movq	(%r14,%rax),%rcx
0000000000038ea5	movq	%rcx,(%rbx,%rax)
0000000000038ea9	movq	0x00075d00(%rip),%rdx
0000000000038eb0	movq	(%r14,%rdx),%rdi
0000000000038eb4	movq	%rbx,%rsi
0000000000038eb7	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000038ebc	movq	%rbx,%rax
0000000000038ebf	popq	%rbx
0000000000038ec0	popq	%r12
0000000000038ec2	popq	%r14
0000000000038ec4	popq	%r15
0000000000038ec6	popq	%rbp
0000000000038ec7	ret
-[PBXGDB_MIStoppedState init]:
0000000000038ec8	pushq	%rbp
0000000000038ec9	movq	%rsp,%rbp
0000000000038ecc	pushq	%rbx
0000000000038ecd	subq	$0x18,%rsp
0000000000038ed1	movq	%rdi,0xe8(%rbp)
0000000000038ed5	movq	0x0006ff84(%rip),%rax
0000000000038edc	movq	%rax,0xf0(%rbp)
0000000000038ee0	movq	0x0006bb89(%rip),%rsi
0000000000038ee7	leaq	0xe8(%rbp),%rdi
0000000000038eeb	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000038ef0	movq	%rax,%rbx
0000000000038ef3	testq	%rbx,%rbx
0000000000038ef6	je	0x00038f2e
0000000000038ef8	movq	0x0006f9f9(%rip),%rdi
0000000000038eff	leaq	0x0006f3da(%rip),%rsi
0000000000038f06	call	*0x0006f3d4(%rip)
0000000000038f0c	movq	0x0006bb5d(%rip),%rsi
0000000000038f13	movq	%rax,%rdi
0000000000038f16	call	*0x0004b1bc(%rip)
0000000000038f1c	movq	0x00075c95(%rip),%rdx
0000000000038f23	movq	%rax,%rdi
0000000000038f26	movq	%rbx,%rsi
0000000000038f29	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000038f2e	movq	%rbx,%rax
0000000000038f31	addq	$0x18,%rsp
0000000000038f35	popq	%rbx
0000000000038f36	popq	%rbp
0000000000038f37	ret
-[PBXGDB_MIStoppedState copyWithZone:]:
0000000000038f38	pushq	%rbp
0000000000038f39	movq	%rsp,%rbp
0000000000038f3c	pushq	%r15
0000000000038f3e	pushq	%r14
0000000000038f40	pushq	%r12
0000000000038f42	pushq	%rbx
0000000000038f43	movq	%rdx,%r14
0000000000038f46	movq	%rdi,%r15
0000000000038f49	movq	0x0006f9b0(%rip),%rdi
0000000000038f50	leaq	0x0006f449(%rip),%rsi
0000000000038f57	call	*0x0006f443(%rip)
0000000000038f5d	movq	0x0006bb0c(%rip),%rsi
0000000000038f64	movq	0x0004b16d(%rip),%r12
0000000000038f6b	movq	%rax,%rdi
0000000000038f6e	call	*%r12
0000000000038f71	movq	%rax,%rbx
0000000000038f74	movq	0x00075c45(%rip),%rax
0000000000038f7b	movl	(%r15,%rax),%ecx
0000000000038f7f	movl	%ecx,(%rbx,%rax)
0000000000038f82	movq	0x00075c3f(%rip),%rax
0000000000038f89	movq	(%r15,%rax),%rcx
0000000000038f8d	movq	%rcx,(%rbx,%rax)
0000000000038f91	movq	0x00075c38(%rip),%rax
0000000000038f98	movl	(%r15,%rax),%ecx
0000000000038f9c	movl	%ecx,(%rbx,%rax)
0000000000038f9f	movq	0x00075c32(%rip),%rax
0000000000038fa6	movb	(%r15,%rax),%cl
0000000000038faa	movb	%cl,(%rbx,%rax)
0000000000038fad	movq	0x00075c04(%rip),%rax
0000000000038fb4	movq	(%r15,%rax),%rdi
0000000000038fb8	movq	0x0006d301(%rip),%rsi
0000000000038fbf	movq	%r14,%rdx
0000000000038fc2	call	*%r12
0000000000038fc5	movq	0x00075bec(%rip),%rdx
0000000000038fcc	movq	%rax,%rdi
0000000000038fcf	movq	%rbx,%rsi
0000000000038fd2	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000038fd7	movq	%rbx,%rax
0000000000038fda	popq	%rbx
0000000000038fdb	popq	%r12
0000000000038fdd	popq	%r14
0000000000038fdf	popq	%r15
0000000000038fe1	popq	%rbp
0000000000038fe2	ret
0000000000038fe3	nop
0000000000038fe4	nop
0000000000038fe5	nop
0000000000038fe6	nop
-[PBXGDB_MIController currentThreadIdContext]:
0000000000038fe7	pushq	%rbp
0000000000038fe8	movq	%rsp,%rbp
0000000000038feb	movq	0x00075c36(%rip),%rax
0000000000038ff2	movq	(%rdi,%rax),%rax
0000000000038ff6	popq	%rbp
0000000000038ff7	ret
0000000000038ff8	nop
0000000000038ff9	nop
0000000000038ffa	nop
0000000000038ffb	nop
-[PBXGDB_MIController deactivate]:
0000000000038ffc	pushq	%rbp
0000000000038ffd	movq	%rsp,%rbp
0000000000039000	pushq	%rbx
0000000000039001	pushq	%rax
0000000000039002	movq	%rdi,%rbx
0000000000039005	movq	0x0006d2c4(%rip),%rsi
000000000003900c	call	*0x0004b0c6(%rip)
0000000000039012	cmpb	$0x01,%al
0000000000039014	je	0x0003901d
0000000000039016	addq	$0x08,%rsp
000000000003901a	popq	%rbx
000000000003901b	popq	%rbp
000000000003901c	ret
000000000003901d	movq	0x0006d2c4(%rip),%rsi
0000000000039024	movq	0x0006d2b5(%rip),%rcx
000000000003902b	movq	0x0006f8de(%rip),%rdi
0000000000039032	movq	%rbx,%rdx
0000000000039035	xorl	%r8d,%r8d
0000000000039038	addq	$0x08,%rsp
000000000003903c	popq	%rbx
000000000003903d	popq	%rbp
000000000003903e	jmp	*0x0004b094(%rip)
-[PBXGDB_MIController _enqueuePendingInterruptCommand:]:
0000000000039044	pushq	%rbp
0000000000039045	movq	%rsp,%rbp
0000000000039048	movq	0x00075ba9(%rip),%rax
000000000003904f	movq	(%rdi,%rax),%rdi
0000000000039053	movq	0x0006f2a6(%rip),%rax
000000000003905a	leaq	0x0006f29f(%rip),%rsi
0000000000039061	popq	%rbp
0000000000039062	jmp	*%rax
-[PBXGDB_MIController _sendPendingInterruptCommands]:
0000000000039064	pushq	%rbp
0000000000039065	movq	%rsp,%rbp
0000000000039068	pushq	%r15
000000000003906a	pushq	%r14
000000000003906c	pushq	%r13
000000000003906e	pushq	%r12
0000000000039070	pushq	%rbx
0000000000039071	pushq	%rax
0000000000039072	movq	%rdi,%r15
0000000000039075	movq	0x00075b7c(%rip),%rax
000000000003907c	movq	(%r15,%rax),%rdi
0000000000039080	leaq	0x0006f289(%rip),%rsi
0000000000039087	call	*0x0006f283(%rip)
000000000003908d	movq	%rax,%r14
0000000000039090	testq	%r14,%r14
0000000000039093	je	0x000390d7
0000000000039095	xorl	%ebx,%ebx
0000000000039097	movq	0x00075b5a(%rip),%r12
000000000003909e	leaq	0x0006f27b(%rip),%r13
00000000000390a5	movq	(%r15,%r12),%rdi
00000000000390a9	movq	%r13,%rsi
00000000000390ac	movq	%rbx,%rdx
00000000000390af	call	*0x0006f26b(%rip)
00000000000390b5	movq	%r15,%rdi
00000000000390b8	movq	0x0006d0a1(%rip),%rsi
00000000000390bf	movq	%rax,%rdx
00000000000390c2	xorl	%ecx,%ecx
00000000000390c4	call	*0x0004b00e(%rip)
00000000000390ca	incq	%rbx
00000000000390cd	cmpq	%rbx,%r14
00000000000390d0	jne	0x000390a5
00000000000390d2	testq	%r14,%r14
00000000000390d5	jne	0x000390e6
00000000000390d7	addq	$0x08,%rsp
00000000000390db	popq	%rbx
00000000000390dc	popq	%r12
00000000000390de	popq	%r13
00000000000390e0	popq	%r14
00000000000390e2	popq	%r15
00000000000390e4	popq	%rbp
00000000000390e5	ret
00000000000390e6	movq	0x00075b0b(%rip),%rax
00000000000390ed	movq	(%r15,%rax),%rdi
00000000000390f1	movq	0x0006bf58(%rip),%rsi
00000000000390f8	addq	$0x08,%rsp
00000000000390fc	popq	%rbx
00000000000390fd	popq	%r12
00000000000390ff	popq	%r13
0000000000039101	popq	%r14
0000000000039103	popq	%r15
0000000000039105	popq	%rbp
0000000000039106	jmp	*0x0004afcc(%rip)
000000000003910c	nop
000000000003910d	nop
000000000003910e	nop
000000000003910f	nop
0000000000039110	nop
0000000000039111	nop
0000000000039112	nop
0000000000039113	nop
0000000000039114	nop
0000000000039115	nop
0000000000039116	nop
0000000000039117	nop
0000000000039118	nop
0000000000039119	nop
-[PBXGDB_MIController forceInterruptGDB]:
000000000003911a	pushq	%rbp
000000000003911b	movq	%rsp,%rbp
000000000003911e	pushq	%rbx
000000000003911f	pushq	%rax
0000000000039120	movq	%rdi,%rbx
0000000000039123	movq	0x0006cbae(%rip),%rsi
000000000003912a	movl	$0x00000001,%edx
000000000003912f	call	*0x0004afa3(%rip)
0000000000039135	movq	0x0006d1dc(%rip),%rsi
000000000003913c	movq	%rbx,%rdi
000000000003913f	movq	0x0004af92(%rip),%rax
0000000000039146	addq	$0x08,%rsp
000000000003914a	popq	%rbx
000000000003914b	popq	%rbp
000000000003914c	jmp	*%rax
000000000003914e	nop
000000000003914f	nop
0000000000039150	nop
0000000000039151	nop
0000000000039152	nop
0000000000039153	nop
0000000000039154	nop
0000000000039155	nop
0000000000039156	nop
0000000000039157	nop
0000000000039158	nop
-[PBXGDB_MIController _reallyPostCommand:]:
0000000000039159	pushq	%rbp
000000000003915a	movq	%rsp,%rbp
000000000003915d	pushq	%r15
000000000003915f	pushq	%r14
0000000000039161	pushq	%r13
0000000000039163	pushq	%r12
0000000000039165	pushq	%rbx
0000000000039166	pushq	%rax
0000000000039167	movq	%rdx,%rbx
000000000003916a	movq	%rdi,%r15
000000000003916d	movq	0x0006d1b4(%rip),%rsi
0000000000039174	movq	0x0004af5d(%rip),%r14
000000000003917b	movq	%rbx,%rdi
000000000003917e	call	*%r14
0000000000039181	movq	0x0006d1a8(%rip),%rsi
0000000000039188	movq	%rbx,%rdi
000000000003918b	call	*%r14
000000000003918e	movb	%al,0xd7(%rbp)
0000000000039191	testb	%al,%al
0000000000039193	je	0x000391ae
0000000000039195	movq	0x0006d174(%rip),%rsi
000000000003919c	leaq	0x00078a35(%rip),%rdx
00000000000391a3	movq	%r15,%rdi
00000000000391a6	xorl	%ecx,%ecx
00000000000391a8	call	*0x0004af2a(%rip)
00000000000391ae	movq	0x0006d08b(%rip),%rsi
00000000000391b5	movq	0x0004af1c(%rip),%r13
00000000000391bc	movq	%rbx,%rdi
00000000000391bf	call	*%r13
00000000000391c2	movq	%rax,%r12
00000000000391c5	movq	0x0006c11c(%rip),%rsi
00000000000391cc	leaq	0x00078a25(%rip),%rdx
00000000000391d3	movq	%r12,%rdi
00000000000391d6	call	*%r13
00000000000391d9	testb	%al,%al
00000000000391db	je	0x0003920c
00000000000391dd	movq	0x000759fc(%rip),%rax
00000000000391e4	movq	(%r15,%rax),%r13
00000000000391e8	movq	0x0006d049(%rip),%rsi
00000000000391ef	movq	0x0004aee2(%rip),%r14
00000000000391f6	movq	%rbx,%rdi
00000000000391f9	call	*%r14
00000000000391fc	movq	0x0006d135(%rip),%rsi
0000000000039203	movq	%r13,%rdi
0000000000039206	movq	%rax,%rdx
0000000000039209	call	*%r14
000000000003920c	movq	0x0006d035(%rip),%rsi
0000000000039213	movq	0x0004aebe(%rip),%r13
000000000003921a	movq	%rbx,%rdi
000000000003921d	movq	%r12,%rdx
0000000000039220	call	*%r13
0000000000039223	movq	%rax,%r12
0000000000039226	leaq	0x0006f103(%rip),%rsi
000000000003922d	movq	%rbx,%rdi
0000000000039230	call	*0x0006f0fa(%rip)
0000000000039236	movq	%rax,%rdi
0000000000039239	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000003923e	movq	0x0006d0cb(%rip),%rsi
0000000000039245	movq	%r15,%rdi
0000000000039248	movq	%r12,%rdx
000000000003924b	movq	%rax,%rcx
000000000003924e	call	*%r13
0000000000039251	cmpb	$0x00,0xd7(%rbp)
0000000000039255	jne	0x00039266
0000000000039257	addq	$0x08,%rsp
000000000003925b	popq	%rbx
000000000003925c	popq	%r12
000000000003925e	popq	%r13
0000000000039260	popq	%r14
0000000000039262	popq	%r15
0000000000039264	popq	%rbp
0000000000039265	ret
0000000000039266	movq	0x0006d0a3(%rip),%rsi
000000000003926d	leaq	0x000789a4(%rip),%rdx
0000000000039274	movq	%r15,%rdi
0000000000039277	xorl	%ecx,%ecx
0000000000039279	addq	$0x08,%rsp
000000000003927d	popq	%rbx
000000000003927e	popq	%r12
0000000000039280	popq	%r13
0000000000039282	popq	%r14
0000000000039284	popq	%r15
0000000000039286	popq	%rbp
0000000000039287	jmp	*0x0004ae4b(%rip)
-[PBXGDB_MIController _gotFrameSelect:]:
000000000003928d	pushq	%rbp
000000000003928e	movq	%rsp,%rbp
0000000000039291	pushq	%rbx
0000000000039292	pushq	%rax
0000000000039293	movq	%rdi,%rbx
0000000000039296	movq	0x0006d0a3(%rip),%rsi
000000000003929d	movq	%rdx,%rdi
00000000000392a0	call	*0x0004ae32(%rip)
00000000000392a6	movq	0x0006d09b(%rip),%rsi
00000000000392ad	movq	%rbx,%rdi
00000000000392b0	movq	%rax,%rdx
00000000000392b3	movq	0x0004ae1e(%rip),%rax
00000000000392ba	addq	$0x08,%rsp
00000000000392be	popq	%rbx
00000000000392bf	popq	%rbp
00000000000392c0	jmp	*%rax
-[PBXGDB_MIController _postFrameSelect:]:
00000000000392c2	pushq	%rbp
00000000000392c3	movq	%rsp,%rbp
00000000000392c6	pushq	%r15
00000000000392c8	pushq	%r14
00000000000392ca	pushq	%r13
00000000000392cc	pushq	%r12
00000000000392ce	pushq	%rbx
00000000000392cf	subq	$0x48,%rsp
00000000000392d3	movq	%rdx,%r15
00000000000392d6	movq	%rdi,%r14
00000000000392d9	movq	0x0006b7a0(%rip),%rsi
00000000000392e0	movq	0x0006f631(%rip),%rdi
00000000000392e7	movq	0x0004adea(%rip),%r13
00000000000392ee	call	*%r13
00000000000392f1	movq	%rax,%rbx
00000000000392f4	movq	0x00075935(%rip),%rax
00000000000392fb	movq	(%r14,%rax),%rdx
00000000000392ff	movq	0x0006d04a(%rip),%rsi
0000000000039306	movq	%rbx,%rdi
0000000000039309	movq	%r15,%rcx
000000000003930c	call	*%r13
000000000003930f	movq	0x0006b772(%rip),%rsi
0000000000039316	movq	%rbx,%rdi
0000000000039319	movq	%r14,%rdx
000000000003931c	call	*%r13
000000000003931f	movq	0x0006b772(%rip),%rsi
0000000000039326	movq	0x0006d02b(%rip),%rdx
000000000003932d	movq	%rbx,%rdi
0000000000039330	call	*%r13
0000000000039333	movq	0x0006d026(%rip),%rsi
000000000003933a	movq	%r14,%rdi
000000000003933d	movq	%rbx,%rdx
0000000000039340	call	*%r13
0000000000039343	movq	0x0006d01e(%rip),%rsi
000000000003934a	movq	%rbx,%rdi
000000000003934d	call	*%r13
0000000000039350	movq	%rax,%r15
0000000000039353	leaq	0x0006efd6(%rip),%rsi
000000000003935a	movq	%rbx,%rdi
000000000003935d	call	*0x0006efcd(%rip)
0000000000039363	movq	%rax,%rdi
0000000000039366	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000003936b	movq	%rax,%r12
000000000003936e	leaq	0xb8(%rbp),%rsi
0000000000039372	leaq	0x0007dcd7(%rip),%rax
0000000000039379	leaq	0x00000080(%rip),%rcx
0000000000039380	movq	0x0004ad09(%rip),%rdx
0000000000039387	movq	%rdx,0x98(%rbp)
000000000003938b	movl	$0x42000000,0xa0(%rbp)
0000000000039392	movl	$0x00000000,0xa4(%rbp)
0000000000039399	movq	%rcx,0xa8(%rbp)
000000000003939d	movq	%rax,0xb0(%rbp)
00000000000393a1	movq	%r14,%rdi
00000000000393a4	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
00000000000393a9	leaq	0xc0(%rbp),%rsi
00000000000393ad	movq	%r15,%rdi
00000000000393b0	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
00000000000393b5	leaq	0xc8(%rbp),%rsi
00000000000393b9	movq	%r12,%rdi
00000000000393bc	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
00000000000393c1	leaq	0xd0(%rbp),%rsi
00000000000393c5	movq	%rbx,%rdi
00000000000393c8	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
00000000000393cd	leaq	0x98(%rbp),%rdx
00000000000393d1	movq	0x0006cfa0(%rip),%rsi
00000000000393d8	movq	%rbx,%rdi
00000000000393db	call	*%r13
00000000000393de	movq	0x0006cf2b(%rip),%rsi
00000000000393e5	movq	%r14,%rdi
00000000000393e8	movq	%r15,%rdx
00000000000393eb	movq	%r12,%rcx
00000000000393ee	call	*%r13
00000000000393f1	addq	$0x48,%rsp
00000000000393f5	popq	%rbx
00000000000393f6	popq	%r12
00000000000393f8	popq	%r13
00000000000393fa	popq	%r14
00000000000393fc	popq	%r15
00000000000393fe	popq	%rbp
00000000000393ff	ret
___40-[PBXGDB_MIController _postFrameSelect:]_block_invoke_0:
0000000000039400	pushq	%rbp
0000000000039401	movq	%rsp,%rbp
0000000000039404	pushq	%r15
0000000000039406	pushq	%r14
0000000000039408	pushq	%rbx
0000000000039409	pushq	%rax
000000000003940a	movq	%rsi,%rax
000000000003940d	movq	%rdi,%rbx
0000000000039410	movq	0x20(%rbx),%r14
0000000000039414	movq	0x00075825(%rip),%rcx
000000000003941b	cmpq	$0x01,(%r14,%rcx)
0000000000039420	ja	0x00039453
0000000000039422	movq	0x0006cf37(%rip),%rsi
0000000000039429	movq	0x0004aca8(%rip),%r15
0000000000039430	movq	%r14,%rdi
0000000000039433	movq	%rax,%rdx
0000000000039436	call	*%r15
0000000000039439	movq	0x30(%rbx),%rcx
000000000003943d	movq	0x20(%rbx),%rdi
0000000000039441	movq	0x28(%rbx),%rdx
0000000000039445	movq	0x0006cec4(%rip),%rsi
000000000003944c	call	*%r15
000000000003944f	movb	$0x01,%al
0000000000039451	jmp	0x0003947a
0000000000039453	movq	0x38(%rbx),%rdi
0000000000039457	movq	0x0006cee2(%rip),%rsi
000000000003945e	movq	0x0004ac73(%rip),%r15
0000000000039465	call	*%r15
0000000000039468	movq	0x0006cf01(%rip),%rsi
000000000003946f	movq	%r14,%rdi
0000000000039472	movq	%rax,%rdx
0000000000039475	call	*%r15
0000000000039478	xorb	%al,%al
000000000003947a	movq	0x20(%rbx),%rcx
000000000003947e	movq	0x000757bb(%rip),%rdx
0000000000039485	incq	(%rcx,%rdx)
0000000000039489	movzbl	%al,%eax
000000000003948c	addq	$0x08,%rsp
0000000000039490	popq	%rbx
0000000000039491	popq	%r14
0000000000039493	popq	%r15
0000000000039495	popq	%rbp
0000000000039496	ret
0000000000039497	nopw	0x00000000(%rax,%rax)
___copy_helper_block_:
00000000000394a0	pushq	%rbp
00000000000394a1	movq	%rsp,%rbp
00000000000394a4	pushq	%r14
00000000000394a6	pushq	%rbx
00000000000394a7	movq	%rsi,%r14
00000000000394aa	movq	%rdi,%rbx
00000000000394ad	movq	0x20(%r14),%rsi
00000000000394b1	leaq	0x20(%rbx),%rdi
00000000000394b5	movl	$0x00000003,%edx
00000000000394ba	callq	0x0004e662	; symbol stub for: __Block_object_assign
00000000000394bf	movq	0x28(%r14),%rsi
00000000000394c3	leaq	0x28(%rbx),%rdi
00000000000394c7	movl	$0x00000003,%edx
00000000000394cc	callq	0x0004e662	; symbol stub for: __Block_object_assign
00000000000394d1	leaq	0x30(%rbx),%rdi
00000000000394d5	movq	0x30(%r14),%rsi
00000000000394d9	movl	$0x00000003,%edx
00000000000394de	callq	0x0004e662	; symbol stub for: __Block_object_assign
00000000000394e3	addq	$0x38,%rbx
00000000000394e7	movq	0x38(%r14),%rsi
00000000000394eb	movq	%rbx,%rdi
00000000000394ee	movl	$0x00000003,%edx
00000000000394f3	popq	%rbx
00000000000394f4	popq	%r14
00000000000394f6	popq	%rbp
00000000000394f7	jmp	0x0004e662	; symbol stub for: __Block_object_assign
00000000000394fc	nopl	0x00(%rax)
___destroy_helper_block_:
0000000000039500	pushq	%rbp
0000000000039501	movq	%rsp,%rbp
0000000000039504	pushq	%rbx
0000000000039505	pushq	%rax
0000000000039506	movq	%rdi,%rbx
0000000000039509	movq	0x20(%rbx),%rdi
000000000003950d	movl	$0x00000003,%esi
0000000000039512	callq	0x0004e668	; symbol stub for: __Block_object_dispose
0000000000039517	movq	0x28(%rbx),%rdi
000000000003951b	movl	$0x00000003,%esi
0000000000039520	callq	0x0004e668	; symbol stub for: __Block_object_dispose
0000000000039525	movq	0x30(%rbx),%rdi
0000000000039529	movl	$0x00000003,%esi
000000000003952e	callq	0x0004e668	; symbol stub for: __Block_object_dispose
0000000000039533	movq	0x38(%rbx),%rdi
0000000000039537	movl	$0x00000003,%esi
000000000003953c	addq	$0x08,%rsp
0000000000039540	popq	%rbx
0000000000039541	popq	%rbp
0000000000039542	jmp	0x0004e668	; symbol stub for: __Block_object_dispose
-[PBXGDB_MIController _attemptPostFrameSelect:]:
0000000000039547	pushq	%rbp
0000000000039548	movq	%rsp,%rbp
000000000003954b	pushq	%r14
000000000003954d	pushq	%rbx
000000000003954e	movq	%rdx,%r14
0000000000039551	movq	%rdi,%rbx
0000000000039554	movq	0x0006c1f5(%rip),%rsi
000000000003955b	movq	%r14,%rdi
000000000003955e	call	*0x0004ab74(%rip)
0000000000039564	cmpq	$0xff,%rax
0000000000039568	je	0x000395a0
000000000003956a	movq	0x000756bf(%rip),%rcx
0000000000039571	cmpq	(%rbx,%rcx),%rax
0000000000039575	je	0x000395a0
0000000000039577	movq	%rax,(%rbx,%rcx)
000000000003957b	movq	0x000756ae(%rip),%rax
0000000000039582	cmpq	$0x00,(%rbx,%rax)
0000000000039587	js	0x000395a0
0000000000039589	movq	0x0006cdf0(%rip),%rsi
0000000000039590	movq	%rbx,%rdi
0000000000039593	movq	%r14,%rdx
0000000000039596	popq	%rbx
0000000000039597	popq	%r14
0000000000039599	popq	%rbp
000000000003959a	jmp	*0x0004ab38(%rip)
00000000000395a0	movq	0x0006cda1(%rip),%rsi
00000000000395a7	jmp	0x00039590
-[PBXGDB_MIController _gotThreadSelect:]:
00000000000395a9	pushq	%rbp
00000000000395aa	movq	%rsp,%rbp
00000000000395ad	pushq	%rbx
00000000000395ae	pushq	%rax
00000000000395af	movq	%rdi,%rbx
00000000000395b2	movq	0x0006cd87(%rip),%rsi
00000000000395b9	movq	%rdx,%rdi
00000000000395bc	call	*0x0004ab16(%rip)
00000000000395c2	movq	0x0006cdbf(%rip),%rsi
00000000000395c9	movq	%rbx,%rdi
00000000000395cc	movq	%rax,%rdx
00000000000395cf	movq	0x0004ab02(%rip),%rax
00000000000395d6	addq	$0x08,%rsp
00000000000395da	popq	%rbx
00000000000395db	popq	%rbp
00000000000395dc	jmp	*%rax
-[PBXGDB_MIController _postThreadSelect:]:
00000000000395de	pushq	%rbp
00000000000395df	movq	%rsp,%rbp
00000000000395e2	pushq	%r15
00000000000395e4	pushq	%r14
00000000000395e6	pushq	%r13
00000000000395e8	pushq	%r12
00000000000395ea	pushq	%rbx
00000000000395eb	subq	$0x48,%rsp
00000000000395ef	movq	%rdx,%r15
00000000000395f2	movq	%rdi,%r14
00000000000395f5	movq	0x0006b484(%rip),%rsi
00000000000395fc	movq	0x0006f31d(%rip),%rdi
0000000000039603	movq	0x0004aace(%rip),%r13
000000000003960a	call	*%r13
000000000003960d	movq	%rax,%rbx
0000000000039610	movq	0x00075611(%rip),%rax
0000000000039617	movq	(%r14,%rax),%rdx
000000000003961b	movq	0x0006cd6e(%rip),%rsi
0000000000039622	movq	%rbx,%rdi
0000000000039625	movq	%r15,%rcx
0000000000039628	call	*%r13
000000000003962b	movq	0x0006b456(%rip),%rsi
0000000000039632	movq	%rbx,%rdi
0000000000039635	movq	%r14,%rdx
0000000000039638	call	*%r13
000000000003963b	movq	0x0006b456(%rip),%rsi
0000000000039642	movq	0x0006cd4f(%rip),%rdx
0000000000039649	movq	%rbx,%rdi
000000000003964c	call	*%r13
000000000003964f	movq	0x0006cd0a(%rip),%rsi
0000000000039656	movq	%r14,%rdi
0000000000039659	movq	%rbx,%rdx
000000000003965c	call	*%r13
000000000003965f	movq	0x0006cd02(%rip),%rsi
0000000000039666	movq	%rbx,%rdi
0000000000039669	call	*%r13
000000000003966c	movq	%rax,%r15
000000000003966f	leaq	0x0006ecba(%rip),%rsi
0000000000039676	movq	%rbx,%rdi
0000000000039679	call	*0x0006ecb1(%rip)
000000000003967f	movq	%rax,%rdi
0000000000039682	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000039687	movq	%rax,%r12
000000000003968a	leaq	0xb8(%rbp),%rsi
000000000003968e	leaq	0x0007d9eb(%rip),%rax
0000000000039695	leaq	0x00000080(%rip),%rcx
000000000003969c	movq	0x0004a9ed(%rip),%rdx
00000000000396a3	movq	%rdx,0x98(%rbp)
00000000000396a7	movl	$0x42000000,0xa0(%rbp)
00000000000396ae	movl	$0x00000000,0xa4(%rbp)
00000000000396b5	movq	%rcx,0xa8(%rbp)
00000000000396b9	movq	%rax,0xb0(%rbp)
00000000000396bd	movq	%r14,%rdi
00000000000396c0	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
00000000000396c5	leaq	0xc0(%rbp),%rsi
00000000000396c9	movq	%rbx,%rdi
00000000000396cc	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
00000000000396d1	leaq	0xc8(%rbp),%rsi
00000000000396d5	movq	%r15,%rdi
00000000000396d8	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
00000000000396dd	leaq	0xd0(%rbp),%rsi
00000000000396e1	movq	%r12,%rdi
00000000000396e4	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
00000000000396e9	leaq	0x98(%rbp),%rdx
00000000000396ed	movq	0x0006cc84(%rip),%rsi
00000000000396f4	movq	%rbx,%rdi
00000000000396f7	call	*%r13
00000000000396fa	movq	0x0006cc0f(%rip),%rsi
0000000000039701	movq	%r14,%rdi
0000000000039704	movq	%r15,%rdx
0000000000039707	movq	%r12,%rcx
000000000003970a	call	*%r13
000000000003970d	addq	$0x48,%rsp
0000000000039711	popq	%rbx
0000000000039712	popq	%r12
0000000000039714	popq	%r13
0000000000039716	popq	%r14
0000000000039718	popq	%r15
000000000003971a	popq	%rbp
000000000003971b	ret
___41-[PBXGDB_MIController _postThreadSelect:]_block_invoke_0:
000000000003971c	pushq	%rbp
000000000003971d	movq	%rsp,%rbp
0000000000039720	pushq	%r15
0000000000039722	pushq	%r14
0000000000039724	pushq	%rbx
0000000000039725	pushq	%rax
0000000000039726	movq	%rdi,%rbx
0000000000039729	movq	0x20(%rbx),%r14
000000000003972d	movq	0x28(%rbx),%rdx
0000000000039731	movq	0x00075510(%rip),%rax
0000000000039738	cmpq	$0x01,(%r14,%rax)
000000000003973d	ja	0x0003976d
000000000003973f	movq	0x0006cc1a(%rip),%rsi
0000000000039746	movq	0x0004a98b(%rip),%r15
000000000003974d	movq	%r14,%rdi
0000000000039750	call	*%r15
0000000000039753	movq	0x38(%rbx),%rcx
0000000000039757	movq	0x20(%rbx),%rdi
000000000003975b	movq	0x30(%rbx),%rdx
000000000003975f	movq	0x0006cbaa(%rip),%rsi
0000000000039766	call	*%r15
0000000000039769	movb	$0x01,%al
000000000003976b	jmp	0x00039793
000000000003976d	movq	0x0006cbcc(%rip),%rsi
0000000000039774	movq	0x0004a95d(%rip),%r15
000000000003977b	movq	%rdx,%rdi
000000000003977e	call	*%r15
0000000000039781	movq	0x0006cbe8(%rip),%rsi
0000000000039788	movq	%r14,%rdi
000000000003978b	movq	%rax,%rdx
000000000003978e	call	*%r15
0000000000039791	xorb	%al,%al
0000000000039793	movq	0x20(%rbx),%rcx
0000000000039797	movq	0x000754aa(%rip),%rdx
000000000003979e	incq	(%rcx,%rdx)
00000000000397a2	movzbl	%al,%eax
00000000000397a5	addq	$0x08,%rsp
00000000000397a9	popq	%rbx
00000000000397aa	popq	%r14
00000000000397ac	popq	%r15
00000000000397ae	popq	%rbp
00000000000397af	ret
___copy_helper_block_151:
00000000000397b0	pushq	%rbp
00000000000397b1	movq	%rsp,%rbp
00000000000397b4	pushq	%r14
00000000000397b6	pushq	%rbx
00000000000397b7	movq	%rsi,%r14
00000000000397ba	movq	%rdi,%rbx
00000000000397bd	movq	0x20(%r14),%rsi
00000000000397c1	leaq	0x20(%rbx),%rdi
00000000000397c5	movl	$0x00000003,%edx
00000000000397ca	callq	0x0004e662	; symbol stub for: __Block_object_assign
00000000000397cf	movq	0x28(%r14),%rsi
00000000000397d3	leaq	0x28(%rbx),%rdi
00000000000397d7	movl	$0x00000003,%edx
00000000000397dc	callq	0x0004e662	; symbol stub for: __Block_object_assign
00000000000397e1	leaq	0x30(%rbx),%rdi
00000000000397e5	movq	0x30(%r14),%rsi
00000000000397e9	movl	$0x00000003,%edx
00000000000397ee	callq	0x0004e662	; symbol stub for: __Block_object_assign
00000000000397f3	addq	$0x38,%rbx
00000000000397f7	movq	0x38(%r14),%rsi
00000000000397fb	movq	%rbx,%rdi
00000000000397fe	movl	$0x00000003,%edx
0000000000039803	popq	%rbx
0000000000039804	popq	%r14
0000000000039806	popq	%rbp
0000000000039807	jmp	0x0004e662	; symbol stub for: __Block_object_assign
000000000003980c	nopl	0x00(%rax)
___destroy_helper_block_152:
0000000000039810	pushq	%rbp
0000000000039811	movq	%rsp,%rbp
0000000000039814	pushq	%rbx
0000000000039815	pushq	%rax
0000000000039816	movq	%rdi,%rbx
0000000000039819	movq	0x20(%rbx),%rdi
000000000003981d	movl	$0x00000003,%esi
0000000000039822	callq	0x0004e668	; symbol stub for: __Block_object_dispose
0000000000039827	movq	0x28(%rbx),%rdi
000000000003982b	movl	$0x00000003,%esi
0000000000039830	callq	0x0004e668	; symbol stub for: __Block_object_dispose
0000000000039835	movq	0x30(%rbx),%rdi
0000000000039839	movl	$0x00000003,%esi
000000000003983e	callq	0x0004e668	; symbol stub for: __Block_object_dispose
0000000000039843	movq	0x38(%rbx),%rdi
0000000000039847	movl	$0x00000003,%esi
000000000003984c	addq	$0x08,%rsp
0000000000039850	popq	%rbx
0000000000039851	popq	%rbp
0000000000039852	jmp	0x0004e668	; symbol stub for: __Block_object_dispose
0000000000039857	nop
0000000000039858	nop
0000000000039859	nop
000000000003985a	nop
000000000003985b	nop
000000000003985c	nop
000000000003985d	nop
000000000003985e	nop
000000000003985f	nop
0000000000039860	nop
0000000000039861	nop
0000000000039862	nop
0000000000039863	nop
0000000000039864	nop
0000000000039865	nop
-[PBXGDB_MIController _extractHookResultsFromList:]:
0000000000039866	pushq	%rbp
0000000000039867	movq	%rsp,%rbp
000000000003986a	pushq	%r15
000000000003986c	pushq	%r14
000000000003986e	pushq	%r13
0000000000039870	pushq	%r12
0000000000039872	pushq	%rbx
0000000000039873	subq	$0x00000108,%rsp
000000000003987a	movq	%rdi,0xffffff00(%rbp)
0000000000039881	movq	0x0004a818(%rip),%rax
0000000000039888	movq	(%rax),%rax
000000000003988b	movq	%rax,0xd0(%rbp)
000000000003988f	movq	0x0006b252(%rip),%rsi
0000000000039896	movq	%rdx,%rdi
0000000000039899	call	*0x0004a839(%rip)
000000000003989f	movq	%rax,0xfffffee0(%rbp)
00000000000398a6	xorps	%xmm0,%xmm0
00000000000398a9	movaps	%xmm0,0xc0(%rbp)
00000000000398ad	movaps	%xmm0,0xb0(%rbp)
00000000000398b1	movaps	%xmm0,0xa0(%rbp)
00000000000398b5	movaps	%xmm0,0x90(%rbp)
00000000000398b9	leaq	0x0006eac0(%rip),%rsi
00000000000398c0	leaq	0x90(%rbp),%rdx
00000000000398c4	leaq	0xffffff10(%rbp),%rcx
00000000000398cb	movq	%rax,%rdi
00000000000398ce	movl	$0x00000010,%r8d
00000000000398d4	call	*0x0006eaa6(%rip)
00000000000398da	movq	%rax,0xfffffed8(%rbp)
00000000000398e1	testq	%rax,%rax
00000000000398e4	je	0x00039b9c
00000000000398ea	movq	0xa0(%rbp),%rax
00000000000398ee	leaq	0x00074f83(%rip),%rcx
00000000000398f5	movq	(%rcx),%rcx
00000000000398f8	movq	%rcx,0xfffffef8(%rbp)
00000000000398ff	movq	(%rax),%rax
0000000000039902	movq	%rax,0xfffffed0(%rbp)
0000000000039909	leaq	0x0006ea50(%rip),%r14
0000000000039910	movq	0x0004a7c1(%rip),%r12
0000000000039917	xorl	%ebx,%ebx
0000000000039919	movq	0xa0(%rbp),%rax
000000000003991d	movq	0xfffffed0(%rbp),%rcx
0000000000039924	cmpq	%rcx,(%rax)
0000000000039927	je	0x00039935
0000000000039929	movq	0xfffffee0(%rbp),%rdi
0000000000039930	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
0000000000039935	movq	0x98(%rbp),%rax
0000000000039939	movq	%rbx,0xfffffef0(%rbp)
0000000000039940	movq	(%rax,%rbx,8),%rbx
0000000000039944	movq	%rbx,%rdi
0000000000039947	movq	0x0006c892(%rip),%rsi
000000000003994e	call	*0x0004a784(%rip)
0000000000039954	movq	%rax,%rdi
0000000000039957	movq	%r14,%rsi
000000000003995a	leaq	0x000782f7(%rip),%rdx
0000000000039961	call	*0x0006e9f9(%rip)
0000000000039967	testb	%al,%al
0000000000039969	je	0x00039b50
000000000003996f	movq	%rbx,%rdi
0000000000039972	movq	0x0006b167(%rip),%rsi
0000000000039979	call	*%r12
000000000003997c	movq	%rax,%rbx
000000000003997f	movq	%rbx,%rdi
0000000000039982	movq	0x0006b14f(%rip),%rsi
0000000000039989	leaq	0x000782e8(%rip),%rdx
0000000000039990	call	*%r12
0000000000039993	movq	%rax,%rdi
0000000000039996	movq	0x0006b16b(%rip),%rsi
000000000003999d	call	*%r12
00000000000399a0	movq	%rax,%rdi
00000000000399a3	movq	%r14,%rsi
00000000000399a6	leaq	0x000782eb(%rip),%rdx
00000000000399ad	call	*0x0006e9ad(%rip)
00000000000399b3	testb	%al,%al
00000000000399b5	je	0x00039b50
00000000000399bb	movq	%rbx,%rdi
00000000000399be	movq	0x0006b113(%rip),%r15
00000000000399c5	movq	%r15,%rsi
00000000000399c8	leaq	0x000762e9(%rip),%rdx
00000000000399cf	call	*%r12
00000000000399d2	movq	%rax,%rdi
00000000000399d5	movq	0x0006b104(%rip),%rsi
00000000000399dc	call	*%r12
00000000000399df	movq	%rax,0xffffff08(%rbp)
00000000000399e6	movq	%rax,%rdi
00000000000399e9	movq	%r15,%rsi
00000000000399ec	leaq	0x000782c5(%rip),%rdx
00000000000399f3	call	*%r12
00000000000399f6	movq	%rax,%rdi
00000000000399f9	movq	0x0006b108(%rip),%r13
0000000000039a00	movq	%r13,%rax
0000000000039a03	movq	%rax,%rsi
0000000000039a06	call	*%r12
0000000000039a09	movq	%rax,%rbx
0000000000039a0c	movq	0xfffffef8(%rbp),%rcx
0000000000039a13	movq	0xffffff00(%rbp),%rax
0000000000039a1a	movq	(%rax,%rcx),%rdi
0000000000039a1e	movq	0x0006b2c3(%rip),%rsi
0000000000039a25	call	*%r12
0000000000039a28	movq	%rax,%rdi
0000000000039a2b	movq	0x0006b2be(%rip),%rsi
0000000000039a32	call	*%r12
0000000000039a35	movq	%rax,0xfffffee8(%rbp)
0000000000039a3c	movq	%rax,%rdi
0000000000039a3f	movq	0x0006c9a2(%rip),%rsi
0000000000039a46	call	*%r12
0000000000039a49	movq	%rax,%rdi
0000000000039a4c	movq	0x0006c99d(%rip),%rsi
0000000000039a53	movq	%rbx,%rdx
0000000000039a56	movq	%rbx,%rcx
0000000000039a59	call	*%r12
0000000000039a5c	movq	%rax,%r14
0000000000039a5f	movq	%r14,%rdi
0000000000039a62	movq	0x0006c98f(%rip),%rsi
0000000000039a69	movl	$0x00000002,%edx
0000000000039a6e	call	*%r12
0000000000039a71	movq	0xffffff08(%rbp),%rdi
0000000000039a78	movq	%r15,%rsi
0000000000039a7b	leaq	0x00076576(%rip),%rdx
0000000000039a82	call	*%r12
0000000000039a85	movq	%rax,%rdi
0000000000039a88	movq	%r13,%rbx
0000000000039a8b	movq	%rbx,%rsi
0000000000039a8e	call	*%r12
0000000000039a91	movq	%rax,%rdi
0000000000039a94	leaq	0x0006e8c5(%rip),%rsi
0000000000039a9b	leaq	0x00078236(%rip),%rdx
0000000000039aa2	call	*0x0006e8b8(%rip)
0000000000039aa8	movsbl	%al,%edx
0000000000039aab	movq	%r14,%rdi
0000000000039aae	movq	0x0006c94b(%rip),%rsi
0000000000039ab5	call	*%r12
0000000000039ab8	movq	0xffffff00(%rbp),%r13
0000000000039abf	movq	%r13,%rdi
0000000000039ac2	movq	0x0006afef(%rip),%rsi
0000000000039ac9	call	*%r12
0000000000039acc	movq	%rax,%rdi
0000000000039acf	movq	0x0006c932(%rip),%rsi
0000000000039ad6	movq	%r14,%rdx
0000000000039ad9	call	*%r12
0000000000039adc	movq	0xffffff08(%rbp),%rdi
0000000000039ae3	movq	%r15,%rsi
0000000000039ae6	leaq	0x000764cb(%rip),%rdx
0000000000039aed	call	*%r12
0000000000039af0	movq	%rax,%rdi
0000000000039af3	movq	%rbx,%rsi
0000000000039af6	call	*%r12
0000000000039af9	movq	%rax,%rdi
0000000000039afc	movq	0x0006b7dd(%rip),%rsi
0000000000039b03	call	*%r12
0000000000039b06	movq	%rax,%rbx
0000000000039b09	movq	0xfffffee8(%rbp),%rdi
0000000000039b10	movq	0x0006c8f9(%rip),%rsi
0000000000039b17	movq	%rbx,%rdx
0000000000039b1a	movq	%r14,%rcx
0000000000039b1d	call	*%r12
0000000000039b20	movq	0xfffffef8(%rbp),%rax
0000000000039b27	movq	0x00(%r13,%rax),%rdi
0000000000039b2c	movq	0x0006b4a5(%rip),%rsi
0000000000039b33	call	*%r12
0000000000039b36	movq	%rax,%rdi
0000000000039b39	movq	0x0006c8d8(%rip),%rsi
0000000000039b40	movq	%rbx,%rdx
0000000000039b43	movq	%r14,%rcx
0000000000039b46	leaq	0x0006e813(%rip),%r14
0000000000039b4d	call	*%r12
0000000000039b50	movq	0xfffffef0(%rbp),%rbx
0000000000039b57	incq	%rbx
0000000000039b5a	cmpq	0xfffffed8(%rbp),%rbx
0000000000039b61	jb	0x00039919
0000000000039b67	movq	0xfffffee0(%rbp),%rdi
0000000000039b6e	leaq	0x0006e80b(%rip),%rsi
0000000000039b75	leaq	0x90(%rbp),%rdx
0000000000039b79	leaq	0xffffff10(%rbp),%rcx
0000000000039b80	movl	$0x00000010,%r8d
0000000000039b86	call	*0x0006e7f4(%rip)
0000000000039b8c	movq	%rax,0xfffffed8(%rbp)
0000000000039b93	testq	%rax,%rax
0000000000039b96	jne	0x00039917
0000000000039b9c	movq	0x0004a4fd(%rip),%rax
0000000000039ba3	movq	(%rax),%rax
0000000000039ba6	cmpq	0xd0(%rbp),%rax
0000000000039baa	jne	0x00039bbe
0000000000039bac	addq	$0x00000108,%rsp
0000000000039bb3	popq	%rbx
0000000000039bb4	popq	%r12
0000000000039bb6	popq	%r13
0000000000039bb8	popq	%r14
0000000000039bba	popq	%r15
0000000000039bbc	popq	%rbp
0000000000039bbd	ret
0000000000039bbe	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
0000000000039bc3	nop
-[PBXGDB_MIController didAttachToTarget]:
0000000000039bc4	pushq	%rbp
0000000000039bc5	movq	%rsp,%rbp
0000000000039bc8	movq	0x00075051(%rip),%rax
0000000000039bcf	movq	(%rdi,%rax),%rax
0000000000039bd3	movq	0x00074fe6(%rip),%rcx
0000000000039bda	movl	$0x00000007,(%rax,%rcx)
0000000000039be1	popq	%rbp
0000000000039be2	ret
0000000000039be3	nop
0000000000039be4	nop
0000000000039be5	nop
0000000000039be6	nop
0000000000039be7	nop
0000000000039be8	nop
0000000000039be9	nop
0000000000039bea	nop
0000000000039beb	nop
0000000000039bec	nop
0000000000039bed	nop
-[PBXGDB_MIController disableWatchpointWithExpression:]:
0000000000039bee	pushq	%rbp
0000000000039bef	movq	%rsp,%rbp
0000000000039bf2	popq	%rbp
0000000000039bf3	ret
-[PBXGDB_MIGetRegisterNames GDBCommandString]:
0000000000039bf4	pushq	%rbp
0000000000039bf5	movq	%rsp,%rbp
0000000000039bf8	leaq	0x000785d9(%rip),%rax
0000000000039bff	popq	%rbp
0000000000039c00	ret
-[PBXGDB_MIGetRegisterNames didFinishWithResultList:]:
0000000000039c01	pushq	%rbp
0000000000039c02	movq	%rsp,%rbp
0000000000039c05	pushq	%r15
0000000000039c07	pushq	%r14
0000000000039c09	pushq	%r13
0000000000039c0b	pushq	%r12
0000000000039c0d	pushq	%rbx
0000000000039c0e	subq	$0x28,%rsp
0000000000039c12	movq	%rdx,%rax
0000000000039c15	movq	%rax,0xb8(%rbp)
0000000000039c19	movq	%rdi,%rbx
0000000000039c1c	movq	%rbx,0xc0(%rbp)
0000000000039c20	movq	0x0006aeb1(%rip),%rsi
0000000000039c27	leaq	0x000785ca(%rip),%rdx
0000000000039c2e	movq	0x0004a4a3(%rip),%r14
0000000000039c35	movq	%rax,%rdi
0000000000039c38	call	*%r14
0000000000039c3b	movq	%rax,%r15
0000000000039c3e	movq	0x0006c8c3(%rip),%rsi
0000000000039c45	movq	%rbx,%rdi
0000000000039c48	call	*%r14
0000000000039c4b	testq	%r15,%r15
0000000000039c4e	je	0x00039d02
0000000000039c54	movq	0x0006ae85(%rip),%rsi
0000000000039c5b	movq	0x0004a476(%rip),%r14
0000000000039c62	movq	%r15,%rdi
0000000000039c65	call	*%r14
0000000000039c68	movq	0x0006ae79(%rip),%rsi
0000000000039c6f	movq	%rax,%rdi
0000000000039c72	call	*%r14
0000000000039c75	movq	%rax,%r12
0000000000039c78	leaq	0x0006e691(%rip),%rsi
0000000000039c7f	movq	%r12,%rdi
0000000000039c82	call	*0x0006e688(%rip)
0000000000039c88	movq	%rax,%r13
0000000000039c8b	testq	%r13,%r13
0000000000039c8e	je	0x00039d02
0000000000039c90	leaq	0x00074ea1(%rip),%rax
0000000000039c97	movq	(%rax),%r15
0000000000039c9a	xorl	%ebx,%ebx
0000000000039c9c	movq	%r12,%rdi
0000000000039c9f	leaq	0x0006e67a(%rip),%rsi
0000000000039ca6	movq	%rbx,%rdx
0000000000039ca9	call	*0x0006e671(%rip)
0000000000039caf	movq	%rax,%rdi
0000000000039cb2	movq	0x0006ae4f(%rip),%rsi
0000000000039cb9	call	*0x0004a419(%rip)
0000000000039cbf	movq	%rax,%r14
0000000000039cc2	testq	%r14,%r14
0000000000039cc5	je	0x00039cfa
0000000000039cc7	movq	%r14,%rdi
0000000000039cca	leaq	0x0006e68f(%rip),%rsi
0000000000039cd1	leaq	0x00075c60(%rip),%rdx
0000000000039cd8	call	*0x0006e682(%rip)
0000000000039cde	testb	%al,%al
0000000000039ce0	jne	0x00039cfa
0000000000039ce2	movq	0xc0(%rbp),%rax
0000000000039ce6	movq	(%rax,%r15),%rdi
0000000000039cea	leaq	0x0006e60f(%rip),%rsi
0000000000039cf1	movq	%r14,%rdx
0000000000039cf4	call	*0x0006e606(%rip)
0000000000039cfa	incq	%rbx
0000000000039cfd	cmpq	%rbx,%r13
0000000000039d00	jne	0x00039c9c
0000000000039d02	movq	0xc0(%rbp),%rax
0000000000039d06	movq	%rax,0xc8(%rbp)
0000000000039d0a	movq	0x0006f15f(%rip),%rax
0000000000039d11	movq	%rax,0xd0(%rbp)
0000000000039d15	movq	0x0006c4e4(%rip),%rsi
0000000000039d1c	leaq	0xc8(%rbp),%rdi
0000000000039d20	movq	0xb8(%rbp),%rdx
0000000000039d24	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000039d29	addq	$0x28,%rsp
0000000000039d2d	popq	%rbx
0000000000039d2e	popq	%r12
0000000000039d30	popq	%r13
0000000000039d32	popq	%r14
0000000000039d34	popq	%r15
0000000000039d36	popq	%rbp
0000000000039d37	ret
-[PBXGDB_MIGetRegisterNames registerNames]:
0000000000039d38	pushq	%rbp
0000000000039d39	movq	%rsp,%rbp
0000000000039d3c	leaq	0x00074df5(%rip),%rax
0000000000039d43	movq	(%rax),%rax
0000000000039d46	movq	(%rdi,%rax),%rax
0000000000039d4a	popq	%rbp
0000000000039d4b	ret
-[PBXGDB_MIGetRegisterValues setRegisterNumberList:]:
0000000000039d4c	pushq	%rbp
0000000000039d4d	movq	%rsp,%rbp
0000000000039d50	pushq	%r14
0000000000039d52	pushq	%rbx
0000000000039d53	movq	%rdx,%rbx
0000000000039d56	movq	%rdi,%r14
0000000000039d59	movq	0x0006e6f0(%rip),%rdi
0000000000039d60	leaq	0x0006e579(%rip),%rsi
0000000000039d67	call	*0x0006e573(%rip)
0000000000039d6d	movq	0x0006af44(%rip),%rsi
0000000000039d74	leaq	0x0007849d(%rip),%rdx
0000000000039d7b	movq	%rax,%rdi
0000000000039d7e	movq	%rbx,%rcx
0000000000039d81	xorb	%al,%al
0000000000039d83	call	*0x0004a34f(%rip)
0000000000039d89	leaq	0x00074da0(%rip),%rcx
0000000000039d90	movq	(%rcx),%rdx
0000000000039d93	movq	%rax,%rdi
0000000000039d96	movq	%r14,%rsi
0000000000039d99	popq	%rbx
0000000000039d9a	popq	%r14
0000000000039d9c	popq	%rbp
0000000000039d9d	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MIGetRegisterValues didFinishWithResultList:]:
0000000000039da2	pushq	%rbp
0000000000039da3	movq	%rsp,%rbp
0000000000039da6	pushq	%r15
0000000000039da8	pushq	%r14
0000000000039daa	pushq	%r13
0000000000039dac	pushq	%r12
0000000000039dae	pushq	%rbx
0000000000039daf	subq	$0x38,%rsp
0000000000039db3	movq	%rdx,%rax
0000000000039db6	movq	%rax,0xa8(%rbp)
0000000000039dba	movq	%rdi,%rbx
0000000000039dbd	movq	%rbx,0xc0(%rbp)
0000000000039dc1	movq	0x0006ad10(%rip),%rsi
0000000000039dc8	leaq	0x00078469(%rip),%rdx
0000000000039dcf	movq	0x0004a302(%rip),%r14
0000000000039dd6	movq	%rax,%rdi
0000000000039dd9	call	*%r14
0000000000039ddc	movq	%rax,%r15
0000000000039ddf	movq	0x0006c722(%rip),%rsi
0000000000039de6	movq	%rbx,%rdi
0000000000039de9	call	*%r14
0000000000039dec	testq	%r15,%r15
0000000000039def	je	0x00039f43
0000000000039df5	movq	0x0006ace4(%rip),%rsi
0000000000039dfc	movq	0x0004a2d5(%rip),%r14
0000000000039e03	movq	%r15,%rdi
0000000000039e06	call	*%r14
0000000000039e09	movq	0x0006acd8(%rip),%rsi
0000000000039e10	movq	%rax,%rdi
0000000000039e13	call	*%r14
0000000000039e16	movq	%rax,0xb8(%rbp)
0000000000039e1a	leaq	0x0006e4ef(%rip),%rsi
0000000000039e21	movq	%rax,%rdi
0000000000039e24	call	*0x0006e4e6(%rip)
0000000000039e2a	movq	%rax,%r13
0000000000039e2d	testq	%r13,%r13
0000000000039e30	je	0x00039f43
0000000000039e36	xorl	%ebx,%ebx
0000000000039e38	leaq	0x00074cf9(%rip),%rax
0000000000039e3f	movq	(%rax),%rax
0000000000039e42	movq	%rax,0xb0(%rbp)
0000000000039e46	movq	0x0004a28b(%rip),%r14
0000000000039e4d	movq	0xb8(%rbp),%rdi
0000000000039e51	leaq	0x0006e4c8(%rip),%rsi
0000000000039e58	movq	%rbx,%rdx
0000000000039e5b	call	*0x0006e4bf(%rip)
0000000000039e61	movq	%rax,%r15
0000000000039e64	movq	0x0006eacd(%rip),%rdi
0000000000039e6b	leaq	0x0006e46e(%rip),%rsi
0000000000039e72	call	*0x0006e468(%rip)
0000000000039e78	movq	%rax,%rdi
0000000000039e7b	movq	0x0006abee(%rip),%rsi
0000000000039e82	call	*%r14
0000000000039e85	movq	%rax,%r12
0000000000039e88	movq	%r15,%rdi
0000000000039e8b	movq	0x0006ac4e(%rip),%rsi
0000000000039e92	call	*%r14
0000000000039e95	movq	%rax,%rdi
0000000000039e98	movq	0x0006ac39(%rip),%rsi
0000000000039e9f	leaq	0x00076112(%rip),%rdx
0000000000039ea6	call	*%r14
0000000000039ea9	testq	%rax,%rax
0000000000039eac	je	0x00039ed8
0000000000039eae	movq	%rax,%rdi
0000000000039eb1	movq	0x0006ac50(%rip),%rsi
0000000000039eb8	call	*%r14
0000000000039ebb	movq	%rax,%rdi
0000000000039ebe	movq	0x0006b41b(%rip),%rsi
0000000000039ec5	call	*%r14
0000000000039ec8	movq	%r12,%rdi
0000000000039ecb	movq	0x0006c63e(%rip),%rsi
0000000000039ed2	movq	%rax,%rdx
0000000000039ed5	call	*%r14
0000000000039ed8	movq	%r15,%rdi
0000000000039edb	movq	0x0006abfe(%rip),%rsi
0000000000039ee2	call	*%r14
0000000000039ee5	movq	%rax,%rdi
0000000000039ee8	movq	0x0006abe9(%rip),%rsi
0000000000039eef	leaq	0x00076242(%rip),%rdx
0000000000039ef6	call	*%r14
0000000000039ef9	testq	%rax,%rax
0000000000039efc	je	0x00039f1b
0000000000039efe	movq	%rax,%rdi
0000000000039f01	movq	0x0006ac00(%rip),%rsi
0000000000039f08	call	*%r14
0000000000039f0b	movq	%r12,%rdi
0000000000039f0e	movq	0x0006b6ab(%rip),%rsi
0000000000039f15	movq	%rax,%rdx
0000000000039f18	call	*%r14
0000000000039f1b	movq	0xc0(%rbp),%rax
0000000000039f1f	movq	0xb0(%rbp),%rcx
0000000000039f23	movq	(%rax,%rcx),%rdi
0000000000039f27	leaq	0x0006e3d2(%rip),%rsi
0000000000039f2e	movq	%r12,%rdx
0000000000039f31	call	*0x0006e3c9(%rip)
0000000000039f37	incq	%rbx
0000000000039f3a	cmpq	%rbx,%r13
0000000000039f3d	jne	0x00039e4d
0000000000039f43	movq	0xc0(%rbp),%rax
0000000000039f47	movq	%rax,0xc8(%rbp)
0000000000039f4b	movq	0x0006ef26(%rip),%rax
0000000000039f52	movq	%rax,0xd0(%rbp)
0000000000039f56	movq	0x0006c2a3(%rip),%rsi
0000000000039f5d	leaq	0xc8(%rbp),%rdi
0000000000039f61	movq	0xa8(%rbp),%rdx
0000000000039f65	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000039f6a	addq	$0x38,%rsp
0000000000039f6e	popq	%rbx
0000000000039f6f	popq	%r12
0000000000039f71	popq	%r13
0000000000039f73	popq	%r14
0000000000039f75	popq	%r15
0000000000039f77	popq	%rbp
0000000000039f78	ret
-[PBXGDB_MIGetRegisterValues registerValueDescriptions]:
0000000000039f79	pushq	%rbp
0000000000039f7a	movq	%rsp,%rbp
0000000000039f7d	leaq	0x00074bb4(%rip),%rax
0000000000039f84	movq	(%rax),%rax
0000000000039f87	movq	(%rdi,%rax),%rax
0000000000039f8b	popq	%rbp
0000000000039f8c	ret
-[PBXGDB_MIMemoryViewerReadCommand setBaseAddressString:format:bytesPerWord:rows:wordsPerRow:unprintableChar:]:
0000000000039f8d	pushq	%rbp
0000000000039f8e	movq	%rsp,%rbp
0000000000039f91	pushq	%r15
0000000000039f93	pushq	%r14
0000000000039f95	pushq	%r13
0000000000039f97	pushq	%r12
0000000000039f99	pushq	%rbx
0000000000039f9a	subq	$0x18,%rsp
0000000000039f9e	movl	%ecx,%r12d
0000000000039fa1	movq	%rdx,%r14
0000000000039fa4	movq	%rdi,%rbx
0000000000039fa7	movq	0x00074cba(%rip),%rax
0000000000039fae	movq	%r9,(%rbx,%rax)
0000000000039fb2	movq	0x10(%rbp),%rax
0000000000039fb6	movq	0x00074cb3(%rip),%rcx
0000000000039fbd	movq	%rax,(%rbx,%rcx)
0000000000039fc1	movq	0x00074cb0(%rip),%rax
0000000000039fc8	movq	%r8,(%rbx,%rax)
0000000000039fcc	leaq	0x0006e30d(%rip),%rsi
0000000000039fd3	movq	0x0006e476(%rip),%rdi
0000000000039fda	call	*0x0006e300(%rip)
0000000000039fe0	movq	%rax,%r15
0000000000039fe3	movq	0x0004a0ee(%rip),%r13
0000000000039fea	movq	0x0006c527(%rip),%rsi
0000000000039ff1	movq	0x0006e948(%rip),%rdi
0000000000039ff8	movl	%r12d,%edx
0000000000039ffb	call	*%r13
0000000000039ffe	movq	0x00074c73(%rip),%rcx
000000000003a005	movq	(%rbx,%rcx),%r9
000000000003a009	movq	0x00074c58(%rip),%rcx
000000000003a010	movq	(%rbx,%rcx),%rcx
000000000003a014	movq	0x00074c55(%rip),%rdx
000000000003a01b	movq	(%rbx,%rdx),%rdi
000000000003a01f	movq	0x0006ac92(%rip),%rsi
000000000003a026	movq	0x18(%rbp),%rdx
000000000003a02a	movq	%rdx,0x10(%rsp)
000000000003a02f	leaq	0x00078222(%rip),%rdx
000000000003a036	movq	%rdi,0x08(%rsp)
000000000003a03b	movq	%rcx,(%rsp)
000000000003a03f	movq	%r15,%rdi
000000000003a042	movq	%r14,%rcx
000000000003a045	movq	%rax,%r8
000000000003a048	xorb	%al,%al
000000000003a04a	call	*%r13
000000000003a04d	leaq	0x00074adc(%rip),%rcx
000000000003a054	movq	(%rcx),%rdx
000000000003a057	movq	%rax,%rdi
000000000003a05a	movq	%rbx,%rsi
000000000003a05d	addq	$0x18,%rsp
000000000003a061	popq	%rbx
000000000003a062	popq	%r12
000000000003a064	popq	%r13
000000000003a066	popq	%r14
000000000003a068	popq	%r15
000000000003a06a	popq	%rbp
000000000003a06b	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MIReadMemoryCommand numRows]:
000000000003a070	pushq	%rbp
000000000003a071	movq	%rsp,%rbp
000000000003a074	movq	0x00074bed(%rip),%rax
000000000003a07b	movq	(%rdi,%rax),%rax
000000000003a07f	popq	%rbp
000000000003a080	ret
-[PBXGDB_MIReadMemoryCommand wordsPerRow]:
000000000003a081	pushq	%rbp
000000000003a082	movq	%rsp,%rbp
000000000003a085	movq	0x00074be4(%rip),%rax
000000000003a08c	movq	(%rdi,%rax),%rax
000000000003a090	popq	%rbp
000000000003a091	ret
-[PBXGDB_MIReadMemoryCommand bytesRead]:
000000000003a092	pushq	%rbp
000000000003a093	movq	%rsp,%rbp
000000000003a096	leaq	0x00074a8b(%rip),%rax
000000000003a09d	movq	(%rax),%rax
000000000003a0a0	movq	(%rdi,%rax),%rdi
000000000003a0a4	movq	0x0006aa2d(%rip),%rsi
000000000003a0ab	leaq	0x000781e6(%rip),%rdx
000000000003a0b2	call	*0x0004a020(%rip)
000000000003a0b8	movq	0x0006aa49(%rip),%rsi
000000000003a0bf	movq	%rax,%rdi
000000000003a0c2	call	*0x0004a010(%rip)
000000000003a0c8	movq	0x0006b211(%rip),%rsi
000000000003a0cf	movq	%rax,%rdi
000000000003a0d2	movq	0x00049fff(%rip),%rax
000000000003a0d9	popq	%rbp
000000000003a0da	jmp	*%rax
-[PBXGDB_MIReadMemoryCommand _makeAddressValueForItemWithKey:]:
000000000003a0dc	pushq	%rbp
000000000003a0dd	movq	%rsp,%rbp
000000000003a0e0	pushq	%r15
000000000003a0e2	pushq	%r14
000000000003a0e4	pushq	%rbx
000000000003a0e5	pushq	%rax
000000000003a0e6	leaq	0x00074a3b(%rip),%rax
000000000003a0ed	movq	(%rax),%rax
000000000003a0f0	movq	(%rdi,%rax),%rdi
000000000003a0f4	movq	0x0006a9dd(%rip),%rsi
000000000003a0fb	call	*0x00049fd7(%rip)
000000000003a101	movq	%rax,%rbx
000000000003a104	testq	%rbx,%rbx
000000000003a107	jne	0x0003a10d
000000000003a109	xorl	%eax,%eax
000000000003a10b	jmp	0x0003a148
000000000003a10d	movq	0x0006e834(%rip),%rdi
000000000003a114	leaq	0x0006e1c5(%rip),%rsi
000000000003a11b	call	*0x0006e1bf(%rip)
000000000003a121	movq	%rax,%r14
000000000003a124	movq	0x0006a9dd(%rip),%rsi
000000000003a12b	movq	0x00049fa6(%rip),%r15
000000000003a132	movq	%rbx,%rdi
000000000003a135	call	*%r15
000000000003a138	movq	0x0006c3e1(%rip),%rsi
000000000003a13f	movq	%r14,%rdi
000000000003a142	movq	%rax,%rdx
000000000003a145	call	*%r15
000000000003a148	addq	$0x08,%rsp
000000000003a14c	popq	%rbx
000000000003a14d	popq	%r14
000000000003a14f	popq	%r15
000000000003a151	popq	%rbp
000000000003a152	ret
-[PBXGDB_MIReadMemoryCommand nextRowAddressValue]:
000000000003a153	pushq	%rbp
000000000003a154	movq	%rsp,%rbp
000000000003a157	pushq	%rbx
000000000003a158	pushq	%rax
000000000003a159	movq	%rdi,%rbx
000000000003a15c	movq	0x00074b3d(%rip),%rax
000000000003a163	movq	(%rbx,%rax),%rax
000000000003a167	testq	%rax,%rax
000000000003a16a	jne	0x0003a1a0
000000000003a16c	movq	0x0006c3b5(%rip),%rsi
000000000003a173	leaq	0x0007813e(%rip),%rdx
000000000003a17a	movq	%rbx,%rdi
000000000003a17d	call	*0x00049f55(%rip)
000000000003a183	movq	0x00074b16(%rip),%rdx
000000000003a18a	movq	%rax,%rdi
000000000003a18d	movq	%rbx,%rsi
000000000003a190	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000003a195	movq	0x00074b04(%rip),%rax
000000000003a19c	movq	(%rbx,%rax),%rax
000000000003a1a0	addq	$0x08,%rsp
000000000003a1a4	popq	%rbx
000000000003a1a5	popq	%rbp
000000000003a1a6	ret
-[PBXGDB_MIReadMemoryCommand previousRowAddressValue]:
000000000003a1a7	pushq	%rbp
000000000003a1a8	movq	%rsp,%rbp
000000000003a1ab	pushq	%rbx
000000000003a1ac	pushq	%rax
000000000003a1ad	movq	%rdi,%rbx
000000000003a1b0	movq	0x00074af1(%rip),%rax
000000000003a1b7	movq	(%rbx,%rax),%rax
000000000003a1bb	testq	%rax,%rax
000000000003a1be	jne	0x0003a1f4
000000000003a1c0	movq	0x0006c361(%rip),%rsi
000000000003a1c7	leaq	0x0007810a(%rip),%rdx
000000000003a1ce	movq	%rbx,%rdi
000000000003a1d1	call	*0x00049f01(%rip)
000000000003a1d7	movq	0x00074aca(%rip),%rdx
000000000003a1de	movq	%rax,%rdi
000000000003a1e1	movq	%rbx,%rsi
000000000003a1e4	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000003a1e9	movq	0x00074ab8(%rip),%rax
000000000003a1f0	movq	(%rbx,%rax),%rax
000000000003a1f4	addq	$0x08,%rsp
000000000003a1f8	popq	%rbx
000000000003a1f9	popq	%rbp
000000000003a1fa	ret
-[PBXGDB_MIReadMemoryCommand nextPageAddressValue]:
000000000003a1fb	pushq	%rbp
000000000003a1fc	movq	%rsp,%rbp
000000000003a1ff	pushq	%rbx
000000000003a200	pushq	%rax
000000000003a201	movq	%rdi,%rbx
000000000003a204	movq	0x00074aa5(%rip),%rax
000000000003a20b	movq	(%rbx,%rax),%rax
000000000003a20f	testq	%rax,%rax
000000000003a212	jne	0x0003a248
000000000003a214	movq	0x0006c30d(%rip),%rsi
000000000003a21b	leaq	0x000780d6(%rip),%rdx
000000000003a222	movq	%rbx,%rdi
000000000003a225	call	*0x00049ead(%rip)
000000000003a22b	movq	0x00074a7e(%rip),%rdx
000000000003a232	movq	%rax,%rdi
000000000003a235	movq	%rbx,%rsi
000000000003a238	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000003a23d	movq	0x00074a6c(%rip),%rax
000000000003a244	movq	(%rbx,%rax),%rax
000000000003a248	addq	$0x08,%rsp
000000000003a24c	popq	%rbx
000000000003a24d	popq	%rbp
000000000003a24e	ret
-[PBXGDB_MIReadMemoryCommand previousPageAddressValue]:
000000000003a24f	pushq	%rbp
000000000003a250	movq	%rsp,%rbp
000000000003a253	pushq	%rbx
000000000003a254	pushq	%rax
000000000003a255	movq	%rdi,%rbx
000000000003a258	movq	0x00074a59(%rip),%rax
000000000003a25f	movq	(%rbx,%rax),%rax
000000000003a263	testq	%rax,%rax
000000000003a266	jne	0x0003a29c
000000000003a268	movq	0x0006c2b9(%rip),%rsi
000000000003a26f	leaq	0x000780a2(%rip),%rdx
000000000003a276	movq	%rbx,%rdi
000000000003a279	call	*0x00049e59(%rip)
000000000003a27f	movq	0x00074a32(%rip),%rdx
000000000003a286	movq	%rax,%rdi
000000000003a289	movq	%rbx,%rsi
000000000003a28c	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000003a291	movq	0x00074a20(%rip),%rax
000000000003a298	movq	(%rbx,%rax),%rax
000000000003a29c	addq	$0x08,%rsp
000000000003a2a0	popq	%rbx
000000000003a2a1	popq	%rbp
000000000003a2a2	ret
-[PBXGDB_MIReadMemoryCommand rowAddressValue]:
000000000003a2a3	pushq	%rbp
000000000003a2a4	movq	%rsp,%rbp
000000000003a2a7	pushq	%r14
000000000003a2a9	pushq	%rbx
000000000003a2aa	movq	0x000749df(%rip),%rax
000000000003a2b1	movq	(%rdi,%rax),%rdi
000000000003a2b5	testq	%rdi,%rdi
000000000003a2b8	jne	0x0003a2be
000000000003a2ba	xorl	%eax,%eax
000000000003a2bc	jmp	0x0003a30a
000000000003a2be	movq	0x0006a813(%rip),%rsi
000000000003a2c5	leaq	0x000754cc(%rip),%rdx
000000000003a2cc	movq	0x00049e05(%rip),%r14
000000000003a2d3	call	*%r14
000000000003a2d6	movq	0x0006a82b(%rip),%rsi
000000000003a2dd	movq	%rax,%rdi
000000000003a2e0	call	*%r14
000000000003a2e3	movq	%rax,%rbx
000000000003a2e6	leaq	0x0006dff3(%rip),%rsi
000000000003a2ed	movq	0x0006e654(%rip),%rdi
000000000003a2f4	call	*0x0006dfe6(%rip)
000000000003a2fa	movq	0x0006c21f(%rip),%rsi
000000000003a301	movq	%rax,%rdi
000000000003a304	movq	%rbx,%rdx
000000000003a307	call	*%r14
000000000003a30a	popq	%rbx
000000000003a30b	popq	%r14
000000000003a30d	popq	%rbp
000000000003a30e	ret
000000000003a30f	nop
-[PBXGDB_MIEvaluateExpressionCommand dealloc]:
000000000003a310	pushq	%rbp
000000000003a311	movq	%rsp,%rbp
000000000003a314	movq	0x0006b2a5(%rip),%rsi
000000000003a31b	xorl	%edx,%edx
000000000003a31d	popq	%rbp
000000000003a31e	jmp	*0x00049db4(%rip)
-[PBXGDB_MIEvaluateExpressionCommand stringValue]:
000000000003a324	pushq	%rbp
000000000003a325	movq	%rsp,%rbp
000000000003a328	movq	0x00074991(%rip),%rax
000000000003a32f	movq	(%rdi,%rax),%rax
000000000003a333	popq	%rbp
000000000003a334	ret
000000000003a335	nop
000000000003a336	nop
-[PBXGDB_MILoadIntrospectionLibraryCommand willExecute]:
000000000003a337	pushq	%rbp
000000000003a338	movq	%rsp,%rbp
000000000003a33b	pushq	%rbx
000000000003a33c	pushq	%rax
000000000003a33d	movq	%rdi,%rbx
000000000003a340	movq	0x0006a779(%rip),%rsi
000000000003a347	call	*0x00049d8b(%rip)
000000000003a34d	movq	0x0006a764(%rip),%rsi
000000000003a354	movq	%rax,%rdi
000000000003a357	call	*0x00049d7b(%rip)
000000000003a35d	movq	0x0006a984(%rip),%rsi
000000000003a364	movq	%rax,%rdi
000000000003a367	call	*0x00049d6b(%rip)
000000000003a36d	movq	0x0006a97c(%rip),%rsi
000000000003a374	movq	%rax,%rdi
000000000003a377	call	*0x00049d5b(%rip)
000000000003a37d	movq	0x0006c1c4(%rip),%rsi
000000000003a384	movq	%rax,%rdi
000000000003a387	call	*0x00049d4b(%rip)
000000000003a38d	leaq	0x00078024(%rip),%rdx
000000000003a394	movq	0x0006a7dd(%rip),%rsi
000000000003a39b	movq	0x0006e0ae(%rip),%rdi
000000000003a3a2	movq	%rax,%rcx
000000000003a3a5	movl	$0x0000000a,%r8d
000000000003a3ab	xorb	%al,%al
000000000003a3ad	call	*0x00049d25(%rip)
000000000003a3b3	movq	0x0006b036(%rip),%rsi
000000000003a3ba	movq	%rbx,%rdi
000000000003a3bd	movq	%rax,%rdx
000000000003a3c0	movq	0x00049d11(%rip),%rax
000000000003a3c7	addq	$0x08,%rsp
000000000003a3cb	popq	%rbx
000000000003a3cc	popq	%rbp
000000000003a3cd	jmp	*%rax
-[PBXGDB_MIdlerrorCommand willExecute]:
000000000003a3cf	pushq	%rbp
000000000003a3d0	movq	%rsp,%rbp
000000000003a3d3	movq	0x0006b016(%rip),%rsi
000000000003a3da	leaq	0x00077ff7(%rip),%rdx
000000000003a3e1	popq	%rbp
000000000003a3e2	jmp	*0x00049cf0(%rip)
000000000003a3e8	nop
000000000003a3e9	nop
000000000003a3ea	nop
-[PBXGDB_MIEvaluationSafetyCheckCommand GDBCommandString]:
000000000003a3eb	pushq	%rbp
000000000003a3ec	movq	%rsp,%rbp
000000000003a3ef	movq	0x0007d2a2(%rip),%rax
000000000003a3f6	popq	%rbp
000000000003a3f7	ret
+[PBXGDB_MIBreakpointActionExpressionCommand commandWithExpression:]:
000000000003a3f8	pushq	%rbp
000000000003a3f9	movq	%rsp,%rbp
000000000003a3fc	pushq	%r15
000000000003a3fe	pushq	%r14
000000000003a400	pushq	%r12
000000000003a402	pushq	%rbx
000000000003a403	movq	%rdx,%r14
000000000003a406	movq	0x0006a673(%rip),%rsi
000000000003a40d	movq	0x0006e53c(%rip),%rdi
000000000003a414	movq	0x00049cbd(%rip),%r12
000000000003a41b	call	*%r12
000000000003a41e	movq	%rax,%rbx
000000000003a421	movq	0x0006e028(%rip),%r15
000000000003a428	movq	0x0006b059(%rip),%rsi
000000000003a42f	movq	%r14,%rdi
000000000003a432	call	*%r12
000000000003a435	leaq	0x0007809c(%rip),%rdx
000000000003a43c	movq	0x0006a735(%rip),%rsi
000000000003a443	movq	%r15,%rdi
000000000003a446	movq	%rax,%rcx
000000000003a449	xorb	%al,%al
000000000003a44b	call	*%r12
000000000003a44e	movq	0x0006bdc3(%rip),%rsi
000000000003a455	movq	%rbx,%rdi
000000000003a458	movq	%rax,%rdx
000000000003a45b	call	*%r12
000000000003a45e	movq	0x0006af8b(%rip),%rsi
000000000003a465	movq	%rbx,%rdi
000000000003a468	movq	%r14,%rdx
000000000003a46b	call	*%r12
000000000003a46e	movq	%rbx,%rax
000000000003a471	popq	%rbx
000000000003a472	popq	%r12
000000000003a474	popq	%r14
000000000003a476	popq	%r15
000000000003a478	popq	%rbp
000000000003a479	ret
-[PBXGDB_MIBreakpointActionExpressionCommand expression]:
000000000003a47a	pushq	%rbp
000000000003a47b	movq	%rsp,%rbp
000000000003a47e	movq	0x00074843(%rip),%rax
000000000003a485	movq	(%rdi,%rax),%rax
000000000003a489	popq	%rbp
000000000003a48a	ret
-[PBXGDB_MIBreakpointActionExpressionCommand setExpression:]:
000000000003a48b	pushq	%rbp
000000000003a48c	movq	%rsp,%rbp
000000000003a48f	movq	%rdx,%rax
000000000003a492	movq	%rdi,%rcx
000000000003a495	movq	0x0007482c(%rip),%rdx
000000000003a49c	movq	%rax,%rdi
000000000003a49f	movq	%rcx,%rsi
000000000003a4a2	popq	%rbp
000000000003a4a3	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
+[PBXGDB_MIDisassembleCommand commandForFunctionAtAddress:maxLines:version:]:
000000000003a4a8	pushq	%rbp
000000000003a4a9	movq	%rsp,%rbp
000000000003a4ac	pushq	%r15
000000000003a4ae	pushq	%r14
000000000003a4b0	pushq	%r12
000000000003a4b2	pushq	%rbx
000000000003a4b3	movl	%r8d,%r12d
000000000003a4b6	movq	%rcx,%rbx
000000000003a4b9	movq	%rdx,%r14
000000000003a4bc	movq	0x0006a5bd(%rip),%rsi
000000000003a4c3	movq	0x0006e396(%rip),%rdi
000000000003a4ca	call	*0x00049c08(%rip)
000000000003a4d0	movq	%rax,%r15
000000000003a4d3	cmpl	$0x01,%r12d
000000000003a4d7	je	0x0003a519
000000000003a4d9	testl	%r12d,%r12d
000000000003a4dc	jne	0x0003a55d
000000000003a4de	movq	0x0006a693(%rip),%rsi
000000000003a4e5	movq	0x0006df64(%rip),%rdi
000000000003a4ec	addq	%rbx,%rbx
000000000003a4ef	leaq	(%rbx,%rbx,4),%r8
000000000003a4f3	leaq	0x00077ffe(%rip),%rdx
000000000003a4fa	movq	0x00049bd7(%rip),%rbx
000000000003a501	movq	%r14,%rcx
000000000003a504	xorb	%al,%al
000000000003a506	call	*%rbx
000000000003a508	movq	0x0006bd09(%rip),%rsi
000000000003a50f	movq	%r15,%rdi
000000000003a512	movq	%rax,%rdx
000000000003a515	call	*%rbx
000000000003a517	jmp	0x0003a55d
000000000003a519	movq	%rbx,%r9
000000000003a51c	shrq	$0x3f,%r9
000000000003a520	addq	%rbx,%r9
000000000003a523	sarq	%r9
000000000003a526	movq	0x0006a64b(%rip),%rsi
000000000003a52d	movq	0x0006df1c(%rip),%rdi
000000000003a534	leaq	0x00077fdd(%rip),%rdx
000000000003a53b	movq	0x00049b96(%rip),%r12
000000000003a542	movq	%r14,%rcx
000000000003a545	movq	%rbx,%r8
000000000003a548	xorb	%al,%al
000000000003a54a	call	*%r12
000000000003a54d	movq	0x0006bcc4(%rip),%rsi
000000000003a554	movq	%r15,%rdi
000000000003a557	movq	%rax,%rdx
000000000003a55a	call	*%r12
000000000003a55d	movq	%r15,%rax
000000000003a560	popq	%rbx
000000000003a561	popq	%r12
000000000003a563	popq	%r14
000000000003a565	popq	%r15
000000000003a567	popq	%rbp
000000000003a568	ret
-[PBXGDB_MIFixAndContinueCommand setPathOfObjectFile:]:
000000000003a569	pushq	%rbp
000000000003a56a	movq	%rsp,%rbp
000000000003a56d	movq	%rdx,%rax
000000000003a570	movq	%rdi,%rcx
000000000003a573	movq	0x00074756(%rip),%rdx
000000000003a57a	movq	%rax,%rdi
000000000003a57d	movq	%rcx,%rsi
000000000003a580	popq	%rbp
000000000003a581	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MIFixAndContinueCommand setPathOfSourceFile:]:
000000000003a586	pushq	%rbp
000000000003a587	movq	%rsp,%rbp
000000000003a58a	movq	%rdx,%rax
000000000003a58d	movq	%rdi,%rcx
000000000003a590	movq	0x00074741(%rip),%rdx
000000000003a597	movq	%rax,%rdi
000000000003a59a	movq	%rcx,%rsi
000000000003a59d	popq	%rbp
000000000003a59e	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MIFixAndContinueCommand setPathOfFnCPatchFile:]:
000000000003a5a3	pushq	%rbp
000000000003a5a4	movq	%rsp,%rbp
000000000003a5a7	movq	%rdx,%rax
000000000003a5aa	movq	%rdi,%rcx
000000000003a5ad	movq	0x0007472c(%rip),%rdx
000000000003a5b4	movq	%rax,%rdi
000000000003a5b7	movq	%rcx,%rsi
000000000003a5ba	popq	%rbp
000000000003a5bb	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MIFixAndContinueCommand setShlib:]:
000000000003a5c0	pushq	%rbp
000000000003a5c1	movq	%rsp,%rbp
000000000003a5c4	movq	%rdx,%rax
000000000003a5c7	movq	%rdi,%rcx
000000000003a5ca	movq	0x00074717(%rip),%rdx
000000000003a5d1	movq	%rax,%rdi
000000000003a5d4	movq	%rcx,%rsi
000000000003a5d7	popq	%rbp
000000000003a5d8	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MIFixAndContinueCommand setFnCPatchFilePath:sourceFilePath:objectFilePath:shlib:]:
000000000003a5dd	pushq	%rbp
000000000003a5de	movq	%rsp,%rbp
000000000003a5e1	pushq	%r15
000000000003a5e3	pushq	%r14
000000000003a5e5	pushq	%r12
000000000003a5e7	pushq	%rbx
000000000003a5e8	movq	%r9,%r14
000000000003a5eb	movq	%r8,%r12
000000000003a5ee	movq	%rdx,%r15
000000000003a5f1	movq	%rdi,%rbx
000000000003a5f4	movq	0x0006bf55(%rip),%rsi
000000000003a5fb	movq	%rcx,%rdx
000000000003a5fe	call	*0x00049ad4(%rip)
000000000003a604	movq	0x0006bf4d(%rip),%rsi
000000000003a60b	movq	%rbx,%rdi
000000000003a60e	movq	%r12,%rdx
000000000003a611	call	*0x00049ac1(%rip)
000000000003a617	movq	0x0006bf42(%rip),%rsi
000000000003a61e	movq	%rbx,%rdi
000000000003a621	movq	%r15,%rdx
000000000003a624	call	*0x00049aae(%rip)
000000000003a62a	movq	0x0006ba77(%rip),%rsi
000000000003a631	movq	%rbx,%rdi
000000000003a634	movq	%r14,%rdx
000000000003a637	movq	0x00049a9a(%rip),%rax
000000000003a63e	popq	%rbx
000000000003a63f	popq	%r12
000000000003a641	popq	%r14
000000000003a643	popq	%r15
000000000003a645	popq	%rbp
000000000003a646	jmp	*%rax
-[PBXGDB_MIFixAndContinueCommand GDBCommandString]:
000000000003a648	pushq	%rbp
000000000003a649	movq	%rsp,%rbp
000000000003a64c	pushq	%r14
000000000003a64e	pushq	%rbx
000000000003a64f	subq	$0x10,%rsp
000000000003a653	movq	%rdi,%r14
000000000003a656	movq	0x0007468b(%rip),%rax
000000000003a65d	movq	(%r14,%rax),%rdi
000000000003a661	testq	%rdi,%rdi
000000000003a664	jne	0x0003a66f
000000000003a666	leaq	0x000752cb(%rip),%rbx
000000000003a66d	jmp	0x0003a6b5
000000000003a66f	leaq	0x0006dcea(%rip),%rsi
000000000003a676	leaq	0x000752bb(%rip),%rbx
000000000003a67d	movq	%rbx,%rdx
000000000003a680	call	*0x0006dcda(%rip)
000000000003a686	cmpb	$0x01,%al
000000000003a688	je	0x0003a6b5
000000000003a68a	movq	0x00074657(%rip),%rax
000000000003a691	movq	(%r14,%rax),%rcx
000000000003a695	movq	0x0006a4dc(%rip),%rsi
000000000003a69c	movq	0x0006ddad(%rip),%rdi
000000000003a6a3	leaq	0x00077e8e(%rip),%rdx
000000000003a6aa	xorb	%al,%al
000000000003a6ac	call	*0x00049a26(%rip)
000000000003a6b2	movq	%rax,%rbx
000000000003a6b5	movq	0x00074614(%rip),%rax
000000000003a6bc	movq	(%r14,%rax),%r9
000000000003a6c0	movq	0x00074611(%rip),%rax
000000000003a6c7	movq	(%r14,%rax),%r8
000000000003a6cb	movq	0x0007460e(%rip),%rax
000000000003a6d2	movq	(%r14,%rax),%rcx
000000000003a6d6	movq	0x0006a49b(%rip),%rsi
000000000003a6dd	movq	0x0006dd6c(%rip),%rdi
000000000003a6e4	movq	%rbx,(%rsp)
000000000003a6e8	leaq	0x00077e69(%rip),%rdx
000000000003a6ef	xorb	%al,%al
000000000003a6f1	call	*0x000499e1(%rip)
000000000003a6f7	addq	$0x10,%rsp
000000000003a6fb	popq	%rbx
000000000003a6fc	popq	%r14
000000000003a6fe	popq	%rbp
000000000003a6ff	ret
-[PBXGDB_MIFixAndContinueSupportedCommand GDBCommandString]:
000000000003a700	pushq	%rbp
000000000003a701	movq	%rsp,%rbp
000000000003a704	leaq	0x00077e6d(%rip),%rax
000000000003a70b	popq	%rbp
000000000003a70c	ret
-[PBXGDB_MIMovePC threadID]:
000000000003a70d	pushq	%rbp
000000000003a70e	movq	%rsp,%rbp
000000000003a711	movq	0x000745d8(%rip),%rax
000000000003a718	movq	(%rdi,%rax),%rcx
000000000003a71c	testq	%rcx,%rcx
000000000003a71f	movl	$0x00000001,%eax
000000000003a724	cmovneq	%rcx,%rax
000000000003a728	popq	%rbp
000000000003a729	ret
-[PBXGDB_MIMovePC setThreadID:]:
000000000003a72a	pushq	%rbp
000000000003a72b	movq	%rsp,%rbp
000000000003a72e	movq	0x000745bb(%rip),%rax
000000000003a735	movq	%rdx,(%rdi,%rax)
000000000003a739	popq	%rbp
000000000003a73a	ret
-[PBXGDB_MIMovePC setFileAndLine:]:
000000000003a73b	pushq	%rbp
000000000003a73c	movq	%rsp,%rbp
000000000003a73f	movq	%rdx,%rax
000000000003a742	movq	%rdi,%rcx
000000000003a745	movq	0x000745ac(%rip),%rdx
000000000003a74c	movq	%rax,%rdi
000000000003a74f	movq	%rcx,%rsi
000000000003a752	popq	%rbp
000000000003a753	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MIMovePC fileAndLine]:
000000000003a758	pushq	%rbp
000000000003a759	movq	%rsp,%rbp
000000000003a75c	movq	0x00074595(%rip),%rax
000000000003a763	movq	(%rdi,%rax),%rcx
000000000003a767	leaq	0x000751ca(%rip),%rax
000000000003a76e	testq	%rcx,%rcx
000000000003a771	cmovneq	%rcx,%rax
000000000003a775	popq	%rbp
000000000003a776	ret
-[PBXGDB_MIMovePC GDBCommandString]:
000000000003a777	pushq	%rbp
000000000003a778	movq	%rsp,%rbp
000000000003a77b	pushq	%r15
000000000003a77d	pushq	%r14
000000000003a77f	pushq	%rbx
000000000003a780	pushq	%rax
000000000003a781	movq	%rdi,%rbx
000000000003a784	movq	0x0006dcc5(%rip),%r14
000000000003a78b	movq	0x0006bdd6(%rip),%rsi
000000000003a792	call	*0x00049940(%rip)
000000000003a798	movq	%rax,%r15
000000000003a79b	movq	0x0006bdce(%rip),%rsi
000000000003a7a2	movq	%rbx,%rdi
000000000003a7a5	call	*0x0004992d(%rip)
000000000003a7ab	leaq	0x00077de6(%rip),%rdx
000000000003a7b2	movq	0x0006a3bf(%rip),%rsi
000000000003a7b9	movq	%r14,%rdi
000000000003a7bc	movq	%r15,%rcx
000000000003a7bf	movq	%rax,%r8
000000000003a7c2	xorb	%al,%al
000000000003a7c4	movq	0x0004990d(%rip),%r9
000000000003a7cb	addq	$0x08,%rsp
000000000003a7cf	popq	%rbx
000000000003a7d0	popq	%r14
000000000003a7d2	popq	%r15
000000000003a7d4	popq	%rbp
000000000003a7d5	jmp	*%r9
-[PBXGDB_MIMovePC didFinishWithResultList:]:
000000000003a7d8	pushq	%rbp
000000000003a7d9	movq	%rsp,%rbp
000000000003a7dc	pushq	%r15
000000000003a7de	pushq	%r14
000000000003a7e0	pushq	%r13
000000000003a7e2	pushq	%r12
000000000003a7e4	pushq	%rbx
000000000003a7e5	subq	$0x38,%rsp
000000000003a7e9	movq	%rdx,%rax
000000000003a7ec	movq	%rax,0xc0(%rbp)
000000000003a7f0	movq	%rdi,%r12
000000000003a7f3	movq	%r12,0xb0(%rbp)
000000000003a7f7	movq	0x0006a2da(%rip),%rsi
000000000003a7fe	leaq	0x00075553(%rip),%rdx
000000000003a805	movq	0x000498cc(%rip),%r13
000000000003a80c	movq	%rax,%rdi
000000000003a80f	call	*%r13
000000000003a812	movq	0x0006b6bf(%rip),%rsi
000000000003a819	movq	%rax,%rdi
000000000003a81c	call	*%r13
000000000003a81f	movq	%rax,%r14
000000000003a822	leaq	0x000759cf(%rip),%rdx
000000000003a829	movq	0x0006a2a8(%rip),%rsi
000000000003a830	movq	%r14,%rdi
000000000003a833	call	*%r13
000000000003a836	movq	0x0006b69b(%rip),%rsi
000000000003a83d	movq	%rax,%rdi
000000000003a840	call	*%r13
000000000003a843	movq	0x0006aa96(%rip),%rsi
000000000003a84a	movq	%rax,%rdi
000000000003a84d	call	*%r13
000000000003a850	movq	%rax,0xb8(%rbp)
000000000003a854	leaq	0x000758fd(%rip),%rdx
000000000003a85b	movq	0x0006a276(%rip),%rsi
000000000003a862	movq	%r14,%rdi
000000000003a865	call	*%r13
000000000003a868	movq	0x0006b669(%rip),%rsi
000000000003a86f	movq	%rax,%rdi
000000000003a872	call	*%r13
000000000003a875	movq	%rax,%rbx
000000000003a878	leaq	0x00074f19(%rip),%rdx
000000000003a87f	movq	0x0006a252(%rip),%rsi
000000000003a886	movq	%r14,%rdi
000000000003a889	call	*%r13
000000000003a88c	movq	0x0006b645(%rip),%rsi
000000000003a893	movq	%rax,%rdi
000000000003a896	call	*%r13
000000000003a899	movq	%rax,%r14
000000000003a89c	leaq	0x00077d15(%rip),%r15
000000000003a8a3	leaq	0x0007425e(%rip),%rax
000000000003a8aa	movq	(%rax),%rax
000000000003a8ad	movq	(%r12,%rax),%rdi
000000000003a8b1	movq	0x0006a200(%rip),%rsi
000000000003a8b8	testq	%rbx,%rbx
000000000003a8bb	cmovneq	%rbx,%r15
000000000003a8bf	call	*%r13
000000000003a8c2	movq	%rax,0xa8(%rbp)
000000000003a8c6	movq	0x0006de0b(%rip),%rbx
000000000003a8cd	movq	0x0006db7c(%rip),%r12
000000000003a8d4	movq	0x0006b625(%rip),%rsi
000000000003a8db	movq	%r15,%rdi
000000000003a8de	call	*%r13
000000000003a8e1	leaq	0x00075050(%rip),%r9
000000000003a8e8	testq	%r14,%r14
000000000003a8eb	cmovneq	%r14,%r9
000000000003a8ef	movq	0x0006a282(%rip),%rsi
000000000003a8f6	leaq	0x00077cdb(%rip),%rdx
000000000003a8fd	movq	%r12,%rdi
000000000003a900	movq	%rax,%rcx
000000000003a903	movq	0xb8(%rbp),%r8
000000000003a907	xorb	%al,%al
000000000003a909	call	*%r13
000000000003a90c	movq	0x0006bc65(%rip),%rsi
000000000003a913	movq	%rbx,%rdi
000000000003a916	movq	%rax,%rdx
000000000003a919	call	*%r13
000000000003a91c	movq	0x0006b005(%rip),%rsi
000000000003a923	movq	0xa8(%rbp),%rdi
000000000003a927	movq	%rax,%rdx
000000000003a92a	movl	$0x00000001,%ecx
000000000003a92f	call	*%r13
000000000003a932	leaq	0xc8(%rbp),%rdi
000000000003a936	movq	0xb0(%rbp),%rax
000000000003a93a	movq	%rax,0xc8(%rbp)
000000000003a93e	movq	0x0006e54b(%rip),%rax
000000000003a945	movq	%rax,0xd0(%rbp)
000000000003a949	movq	0x0006b8b0(%rip),%rsi
000000000003a950	movq	0xc0(%rbp),%rdx
000000000003a954	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000003a959	addq	$0x38,%rsp
000000000003a95d	popq	%rbx
000000000003a95e	popq	%r12
000000000003a960	popq	%r13
000000000003a962	popq	%r14
000000000003a964	popq	%r15
000000000003a966	popq	%rbp
000000000003a967	ret
-[PBXGDB_MIParser dealloc]:
000000000003a968	pushq	%rbp
000000000003a969	movq	%rsp,%rbp
000000000003a96c	pushq	%rbx
000000000003a96d	pushq	%rax
000000000003a96e	movq	%rdi,%rbx
000000000003a971	movq	0x000743b0(%rip),%rdx
000000000003a978	xorl	%edi,%edi
000000000003a97a	movq	%rbx,%rsi
000000000003a97d	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000003a982	movq	0x0007437f(%rip),%rdx
000000000003a989	xorl	%edi,%edi
000000000003a98b	movq	%rbx,%rsi
000000000003a98e	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000003a993	movq	0x0007437e(%rip),%rdx
000000000003a99a	xorl	%edi,%edi
000000000003a99c	movq	%rbx,%rsi
000000000003a99f	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000003a9a4	movq	0x00074365(%rip),%rdx
000000000003a9ab	xorl	%edi,%edi
000000000003a9ad	movq	%rbx,%rsi
000000000003a9b0	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000003a9b5	movq	0x00074364(%rip),%rdx
000000000003a9bc	xorl	%edi,%edi
000000000003a9be	movq	%rbx,%rsi
000000000003a9c1	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000003a9c6	movq	0x00074363(%rip),%rdx
000000000003a9cd	xorl	%edi,%edi
000000000003a9cf	movq	%rbx,%rsi
000000000003a9d2	addq	$0x08,%rsp
000000000003a9d6	popq	%rbx
000000000003a9d7	popq	%rbp
000000000003a9d8	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MIParser description]:
000000000003a9dd	pushq	%rbp
000000000003a9de	movq	%rsp,%rbp
000000000003a9e1	pushq	%r15
000000000003a9e3	pushq	%r14
000000000003a9e5	pushq	%rbx
000000000003a9e6	pushq	%rax
000000000003a9e7	movq	%rdi,%rbx
000000000003a9ea	movq	0x0006a29f(%rip),%rsi
000000000003a9f1	movq	0x0006da40(%rip),%rdi
000000000003a9f8	movq	0x000496d9(%rip),%r15
000000000003a9ff	call	*%r15
000000000003aa02	movq	%rax,%r14
000000000003aa05	movq	0x0007431c(%rip),%rax
000000000003aa0c	movq	(%rbx,%rax),%r8
000000000003aa10	movq	0x0006a281(%rip),%rsi
000000000003aa17	leaq	0x00077cfa(%rip),%rdx
000000000003aa1e	movq	%r14,%rdi
000000000003aa21	movq	%rbx,%rcx
000000000003aa24	xorb	%al,%al
000000000003aa26	call	*%r15
000000000003aa29	leaq	0x00077d08(%rip),%rdx
000000000003aa30	movq	0x00074301(%rip),%rax
000000000003aa37	movq	(%rbx,%rax),%rcx
000000000003aa3b	movq	0x0006a256(%rip),%rsi
000000000003aa42	movq	%r14,%rdi
000000000003aa45	xorb	%al,%al
000000000003aa47	call	*%r15
000000000003aa4a	leaq	0x00077d07(%rip),%rdx
000000000003aa51	movq	0x000742e8(%rip),%rax
000000000003aa58	movq	(%rbx,%rax),%rcx
000000000003aa5c	movq	0x0006a235(%rip),%rsi
000000000003aa63	movq	%r14,%rdi
000000000003aa66	xorb	%al,%al
000000000003aa68	call	*%r15
000000000003aa6b	movq	%r14,%rax
000000000003aa6e	addq	$0x08,%rsp
000000000003aa72	popq	%rbx
000000000003aa73	popq	%r14
000000000003aa75	popq	%r15
000000000003aa77	popq	%rbp
000000000003aa78	ret
-[PBXGDB_MIParser miController]:
000000000003aa79	pushq	%rbp
000000000003aa7a	movq	%rsp,%rbp
000000000003aa7d	movq	0x0007427c(%rip),%rax
000000000003aa84	movq	(%rdi,%rax),%rax
000000000003aa88	popq	%rbp
000000000003aa89	ret
-[PBXGDB_MIParser errorStateString]:
000000000003aa8a	pushq	%rbp
000000000003aa8b	movq	%rsp,%rbp
000000000003aa8e	movq	0x0007428b(%rip),%rax
000000000003aa95	movq	(%rdi,%rax),%rax
000000000003aa99	popq	%rbp
000000000003aa9a	ret
-[PBXGDB_MIParser raiseError:]:
000000000003aa9b	pushq	%rbp
000000000003aa9c	movq	%rsp,%rbp
000000000003aa9f	pushq	%r15
000000000003aaa1	pushq	%r14
000000000003aaa3	pushq	%r12
000000000003aaa5	pushq	%rbx
000000000003aaa6	movq	%rdx,%r14
000000000003aaa9	movq	%rdi,%rbx
000000000003aaac	movq	0x00074275(%rip),%rax
000000000003aab3	movq	(%rbx,%rax),%rsi
000000000003aab7	leaq	0x00077cba(%rip),%rdi
000000000003aabe	xorb	%al,%al
000000000003aac0	callq	0x0004e5c0	; symbol stub for: _NSLog
000000000003aac5	movq	0x0006de94(%rip),%r15
000000000003aacc	movq	0x0006dba5(%rip),%r12
000000000003aad3	movq	0x0006b2f6(%rip),%rsi
000000000003aada	movq	%rbx,%rdi
000000000003aadd	call	*0x000495f5(%rip)
000000000003aae3	leaq	0x00077cce(%rip),%rcx
000000000003aaea	movq	0x0006aec7(%rip),%rsi
000000000003aaf1	movq	%r12,%rdi
000000000003aaf4	movq	%rax,%rdx
000000000003aaf7	call	*0x000495db(%rip)
000000000003aafd	leaq	0x00077c94(%rip),%rdx
000000000003ab04	movq	0x0006ba7d(%rip),%rsi
000000000003ab0b	movq	%r15,%rdi
000000000003ab0e	movq	%r14,%rcx
000000000003ab11	movq	%rax,%r8
000000000003ab14	call	*0x000495be(%rip)
000000000003ab1a	movq	0x0006ba6f(%rip),%rsi
000000000003ab21	movq	%rax,%rdi
000000000003ab24	movq	0x000495ad(%rip),%rax
000000000003ab2b	popq	%rbx
000000000003ab2c	popq	%r12
000000000003ab2e	popq	%r14
000000000003ab30	popq	%r15
000000000003ab32	popq	%rbp
000000000003ab33	jmp	*%rax
000000000003ab35	nop
000000000003ab36	nop
000000000003ab37	nop
-[PBXGDB_MIParser _processCurrentLine]:
000000000003ab38	pushq	%rbp
000000000003ab39	movq	%rsp,%rbp
000000000003ab3c	movq	0x0006bb15(%rip),%rsi
000000000003ab43	xorl	%edx,%edx
000000000003ab45	popq	%rbp
000000000003ab46	jmp	*0x0004958c(%rip)
000000000003ab4c	nop
000000000003ab4d	nop
-[PBXGDB_MIParser stream:processLine:]:
000000000003ab4e	pushq	%rbp
000000000003ab4f	movq	%rsp,%rbp
000000000003ab52	pushq	%r14
000000000003ab54	pushq	%rbx
000000000003ab55	movq	%rdi,%rbx
000000000003ab58	movq	0x0006a399(%rip),%rsi
000000000003ab5f	movq	%rcx,%rdx
000000000003ab62	call	*0x00049570(%rip)
000000000003ab68	movq	%rax,%r14
000000000003ab6b	testq	%r14,%r14
000000000003ab6e	jne	0x0003ab75
000000000003ab70	popq	%rbx
000000000003ab71	popq	%r14
000000000003ab73	popq	%rbp
000000000003ab74	ret
000000000003ab75	movq	0x00074184(%rip),%rax
000000000003ab7c	movq	(%rbx,%rax),%rdi
000000000003ab80	movq	0x00069f31(%rip),%rsi
000000000003ab87	call	*0x0004954b(%rip)
000000000003ab8d	movq	0x0006bb4c(%rip),%rsi
000000000003ab94	movq	%rax,%rdi
000000000003ab97	movq	%r14,%rdx
000000000003ab9a	movq	0x00049537(%rip),%rax
000000000003aba1	popq	%rbx
000000000003aba2	popq	%r14
000000000003aba4	popq	%rbp
000000000003aba5	jmp	*%rax
-[PBXGDB_MIParser streamDidEnd:]:
000000000003aba7	pushq	%rbp
000000000003aba8	movq	%rsp,%rbp
000000000003abab	popq	%rbp
000000000003abac	ret
-[PBXGDB_MIParser parsedResultList]:
000000000003abad	pushq	%rbp
000000000003abae	movq	%rsp,%rbp
000000000003abb1	movq	0x00074158(%rip),%rax
000000000003abb8	movq	(%rdi,%rax),%rax
000000000003abbc	popq	%rbp
000000000003abbd	ret
000000000003abbe	nop
000000000003abbf	nop
-[PBXGDB_MIParser sequenceNumberForShellCmd]:
000000000003abc0	pushq	%rbp
000000000003abc1	movq	%rsp,%rbp
000000000003abc4	movq	0x0007419d(%rip),%rax
000000000003abcb	movq	(%rdi,%rax),%rax
000000000003abcf	popq	%rbp
000000000003abd0	ret
-[PBXGDB_MIParser setSequenceNumberForShellCmd:]:
000000000003abd1	pushq	%rbp
000000000003abd2	movq	%rsp,%rbp
000000000003abd5	movq	0x0007418c(%rip),%rax
000000000003abdc	movq	%rdx,(%rdi,%rax)
000000000003abe0	popq	%rbp
000000000003abe1	ret
000000000003abe2	nop
+[PBXGDB_MIResultList padStringForLevel:]:
000000000003abe3	pushq	%rbp
000000000003abe4	movq	%rsp,%rbp
000000000003abe7	cmpq	$0x0a,%rdx
000000000003abeb	ja	0x0003ac5e
000000000003abed	leaq	0x00074d44(%rip),%rax
000000000003abf4	leaq	0x0000006d(%rip),%rsi
000000000003abfb	movslq	(%rsi,%rdx,4),%rcx
000000000003abff	addq	%rsi,%rcx
000000000003ac02	jmp	*%rcx
000000000003ac04	leaq	0x00077d2d(%rip),%rax
000000000003ac0b	jmp	0x0003ac65
000000000003ac0d	leaq	0x00077d44(%rip),%rax
000000000003ac14	jmp	0x0003ac65
000000000003ac16	leaq	0x00077d5b(%rip),%rax
000000000003ac1d	jmp	0x0003ac65
000000000003ac1f	leaq	0x00077d72(%rip),%rax
000000000003ac26	jmp	0x0003ac65
000000000003ac28	leaq	0x00077d89(%rip),%rax
000000000003ac2f	jmp	0x0003ac65
000000000003ac31	leaq	0x00077da0(%rip),%rax
000000000003ac38	jmp	0x0003ac65
000000000003ac3a	leaq	0x00077db7(%rip),%rax
000000000003ac41	jmp	0x0003ac65
000000000003ac43	leaq	0x00077dce(%rip),%rax
000000000003ac4a	jmp	0x0003ac65
000000000003ac4c	leaq	0x00077de5(%rip),%rax
000000000003ac53	jmp	0x0003ac65
000000000003ac55	leaq	0x00077dfc(%rip),%rax
000000000003ac5c	jmp	0x0003ac65
000000000003ac5e	leaq	0x00077e13(%rip),%rax
000000000003ac65	popq	%rbp
000000000003ac66	ret
000000000003ac67	nop
000000000003ac68	std
000000000003ac69	.byte 0xff, 0xff #bad opcode
000000000003ac6b	lcalll	*0xffa5ffff(%rdi,%rdi,8)
000000000003ac72	.byte 0xff, 0xff #bad opcode
000000000003ac74	scasb	%al,(%edi)
000000000003ac75	.byte 0xff, 0xff #bad opcode
000000000003ac77	pushq	0xc0ffffff(%rdi)
000000000003ac7d	.byte 0xff, 0xff #bad opcode
000000000003ac7f	decl	%ecx
000000000003ac81	.byte 0xff, 0xff #bad opcode
000000000003ac83	call	*%rdx
000000000003ac85	.byte 0xff, 0xff #bad opcode
000000000003ac87	lcalll	*%ebx
000000000003ac89	.byte 0xff, 0xff #bad opcode
000000000003ac8b	jmp	*%rsp
000000000003ac8d	.byte 0xff, 0xff #bad opcode
000000000003ac8f	ljmpl	*%ebp
000000000003ac91	.byte 0xff, 0xff #bad opcode
000000000003ac93	call	*0x48(%rbp)
000000000003ac96	movl	%esp,%ebp
000000000003ac98	pushq	%r15
000000000003ac9a	pushq	%r14
000000000003ac9c	pushq	%r13
000000000003ac9e	pushq	%r12
000000000003aca0	pushq	%rbx
000000000003aca1	subq	$0x28,%rsp
000000000003aca5	movq	%rdx,%r12
000000000003aca8	movq	%r12,0xd0(%rbp)
000000000003acac	movq	%rdi,%rbx
000000000003acaf	movq	0x00069fda(%rip),%rsi
000000000003acb6	movq	0x0006d77b(%rip),%rdi
000000000003acbd	movq	-[PBXGDB_BaseBreakpointSequence setBreakpoint:](%rip),%r13
000000000003acc4	call	*%r13
000000000003acc7	movq	%rax,%r15
000000000003acca	movq	0x00069e17(%rip),%rsi
000000000003acd1	movq	%rbx,%rdi
000000000003acd4	movq	%rbx,%r14
000000000003acd7	call	*%r13
000000000003acda	movq	%rax,0xc8(%rbp)
000000000003acde	leaq	0x0006d62b(%rip),%rsi
000000000003ace5	movq	%rax,%rdi
000000000003ace8	call	*0x0006d622(%rip)
000000000003acee	movq	%rax,%rbx
000000000003acf1	movq	0x0006b9f0(%rip),%rsi
000000000003acf8	movq	0x0006dc59(%rip),%rdi
000000000003acff	movq	%r12,%rdx
000000000003ad02	call	*%r13
000000000003ad05	movq	%r13,%r10
000000000003ad08	movq	%rax,%r13
000000000003ad0b	leaq	0x00074c26(%rip),%rax
000000000003ad12	leaq	0x00077dbf(%rip),%rcx
000000000003ad19	cmpq	$0x01,%rbx
000000000003ad1d	cmoveq	%rax,%rcx
000000000003ad21	movq	0x00074050(%rip),%rax
000000000003ad28	movq	(%r14,%rax),%rax
000000000003ad2c	movq	0x00069f65(%rip),%rsi
000000000003ad33	leaq	0x00077d5e(%rip),%rdx
000000000003ad3a	movq	%rcx,0x08(%rsp)
000000000003ad3f	movq	%rbx,(%rsp)
000000000003ad43	testq	%rax,%rax
000000000003ad46	leaq	0x00077d6b(%rip),%r9
000000000003ad4d	cmovneq	%rax,%r9
000000000003ad51	movq	%r15,%rdi
000000000003ad54	movq	%r15,%r12
000000000003ad57	movq	%r13,%rcx
000000000003ad5a	movq	%r14,%r8
000000000003ad5d	xorb	%al,%al
000000000003ad5f	call	*%r10
000000000003ad62	testq	%rbx,%rbx
000000000003ad65	je	0x0003adbd
000000000003ad67	xorl	%r14d,%r14d
000000000003ad6a	movq	-[PBXGDB_BaseBreakpointSequence breakpointController](%rip),%r15
000000000003ad71	movq	0xc8(%rbp),%rdi
000000000003ad75	leaq	0x0006d5a4(%rip),%rsi
000000000003ad7c	movq	%r14,%rdx
000000000003ad7f	call	*0x0006d59b(%rip)
000000000003ad85	movq	%rax,%rdi
000000000003ad88	movq	0x0006b961(%rip),%rsi
000000000003ad8f	movq	0xd0(%rbp),%rdx
000000000003ad93	call	*%r15
000000000003ad96	movq	%r12,%rdi
000000000003ad99	movq	0x00069ef8(%rip),%rsi
000000000003ada0	leaq	0x00077d51(%rip),%rdx
000000000003ada7	movq	%r13,%rcx
000000000003adaa	movq	%r14,%r8
000000000003adad	movq	%rax,%r9
000000000003adb0	xorb	%al,%al
000000000003adb2	call	*%r15
000000000003adb5	incq	%r14
000000000003adb8	cmpq	%r14,%rbx
000000000003adbb	jne	0x0003ad71
000000000003adbd	movq	%r12,%rax
000000000003adc0	addq	$0x28,%rsp
000000000003adc4	popq	%rbx
000000000003adc5	popq	%r12
000000000003adc7	popq	%r13
000000000003adc9	popq	%r14
000000000003adcb	popq	%r15
000000000003adcd	popq	%rbp
000000000003adce	ret
-[PBXGDB_MIResultList description]:
000000000003adcf	pushq	%rbp
000000000003add0	movq	%rsp,%rbp
000000000003add3	movq	0x0006b916(%rip),%rsi
000000000003adda	xorl	%edx,%edx
000000000003addc	popq	%rbp
000000000003addd	jmp	*0x000492f5(%rip)
-[PBXGDB_MIResultListItem descriptionAtLevel:]:
000000000003ade3	pushq	%rbp
000000000003ade4	movq	%rsp,%rbp
000000000003ade7	pushq	%r15
000000000003ade9	pushq	%r14
000000000003adeb	pushq	%r13
000000000003aded	pushq	%r12
000000000003adef	pushq	%rbx
000000000003adf0	pushq	%rax
000000000003adf1	movq	%rdx,%r15
000000000003adf4	movq	%rdi,%rbx
000000000003adf7	movq	0x00069e92(%rip),%rsi
000000000003adfe	movq	0x0006d633(%rip),%rdi
000000000003ae05	movq	0x000492cc(%rip),%r12
000000000003ae0c	call	*%r12
000000000003ae0f	movq	%rax,%r14
000000000003ae12	movq	0x0006b8cf(%rip),%rsi
000000000003ae19	movq	0x0006db38(%rip),%rdi
000000000003ae20	movq	%r15,%rdx
000000000003ae23	call	*%r12
000000000003ae26	movq	%rax,%r12
000000000003ae29	xorl	%r9d,%r9d
000000000003ae2c	movq	0x00073f55(%rip),%rax
000000000003ae33	movq	(%rbx,%rax),%r13
000000000003ae37	testq	%r13,%r13
000000000003ae3a	je	0x0003ae72
000000000003ae3c	movq	0x0006db15(%rip),%rdi
000000000003ae43	leaq	0x0006d4e6(%rip),%rsi
000000000003ae4a	call	*0x0006d4e0(%rip)
000000000003ae50	leaq	0x0006d4e9(%rip),%rsi
000000000003ae57	movq	%r13,%rdi
000000000003ae5a	movq	%rax,%rdx
000000000003ae5d	call	*0x0006d4dd(%rip)
000000000003ae63	testb	%al,%al
000000000003ae65	jne	0x0003aeab
000000000003ae67	movq	0x00073f1a(%rip),%rax
000000000003ae6e	movq	(%rbx,%rax),%r9
000000000003ae72	movq	0x00073f17(%rip),%rax
000000000003ae79	movq	(%rbx,%rax),%r8
000000000003ae7d	movq	0x00069e14(%rip),%rsi
000000000003ae84	leaq	0x00077ccd(%rip),%rdx
000000000003ae8b	movq	%r14,%rdi
000000000003ae8e	movq	%rbx,%rcx
000000000003ae91	xorb	%al,%al
000000000003ae93	call	*0x0004923f(%rip)
000000000003ae99	movq	%r14,%rax
000000000003ae9c	addq	$0x08,%rsp
000000000003aea0	popq	%rbx
000000000003aea1	popq	%r12
000000000003aea3	popq	%r13
000000000003aea5	popq	%r14
000000000003aea7	popq	%r15
000000000003aea9	popq	%rbp
000000000003aeaa	ret
000000000003aeab	movq	0x00073ed6(%rip),%rax
000000000003aeb2	movq	(%rbx,%rax),%r9
000000000003aeb6	movq	0x00073ed3(%rip),%rax
000000000003aebd	movq	(%rbx,%rax),%r8
000000000003aec1	movq	0x00069dd0(%rip),%rsi
000000000003aec8	leaq	0x00077c49(%rip),%rdx
000000000003aecf	movq	0x00049202(%rip),%r13
000000000003aed6	movq	%r14,%rdi
000000000003aed9	movq	%rbx,%rcx
000000000003aedc	xorb	%al,%al
000000000003aede	call	*%r13
000000000003aee1	movq	0x00073ea0(%rip),%rax
000000000003aee8	movq	(%rbx,%rax),%rdi
000000000003aeec	movq	0x0006b7fd(%rip),%rsi
000000000003aef3	incq	%r15
000000000003aef6	movq	%r15,%rdx
000000000003aef9	call	*%r13
000000000003aefc	movq	0x00069bfd(%rip),%rsi
000000000003af03	movq	%r14,%rdi
000000000003af06	movq	%rax,%rdx
000000000003af09	call	*%r13
000000000003af0c	leaq	0x00077c25(%rip),%rdx
000000000003af13	movq	0x00073e6e(%rip),%rax
000000000003af1a	movq	(%rbx,%rax),%r8
000000000003af1e	movq	0x00069d73(%rip),%rsi
000000000003af25	movq	%r14,%rdi
000000000003af28	movq	%r12,%rcx
000000000003af2b	xorb	%al,%al
000000000003af2d	call	*%r13
000000000003af30	jmp	0x0003ae99
-[PBXGDB_MIResultListItem description]:
000000000003af35	pushq	%rbp
000000000003af36	movq	%rsp,%rbp
000000000003af39	movq	0x0006b7b0(%rip),%rsi
000000000003af40	xorl	%edx,%edx
000000000003af42	popq	%rbp
000000000003af43	jmp	*0x0004918f(%rip)
+[PBXGDB_MISetSharedLibraryLoadSymbolsCommand cfmDynamicLinkerLoadReason]:
000000000003af49	pushq	%rbp
000000000003af4a	movq	%rsp,%rbp
000000000003af4d	leaq	0x00077cc4(%rip),%rax
000000000003af54	popq	%rbp
000000000003af55	ret
-[PBXGDB_MISetSharedLibraryLoadNoneLevelCommand GDBCommandString]:
000000000003af56	pushq	%rbp
000000000003af57	movq	%rsp,%rbp
000000000003af5a	movq	0x0006d4d7(%rip),%rdi
000000000003af61	leaq	0x0006d378(%rip),%rsi
000000000003af68	call	*0x0006d372(%rip)
000000000003af6e	leaq	0x00077d63(%rip),%rdx
000000000003af75	movq	0x00069e94(%rip),%rsi
000000000003af7c	movq	%rax,%rdi
000000000003af7f	popq	%rbp
000000000003af80	jmp	*0x00049152(%rip)
-[PBXGDB_MISetSharedLibraryStopOnEventsCommand setStopOnSharedLibraryEvents:]:
000000000003af86	pushq	%rbp
000000000003af87	movq	%rsp,%rbp
000000000003af8a	pushq	%r14
000000000003af8c	pushq	%rbx
000000000003af8d	movl	%edx,%ebx
000000000003af8f	movq	%rdi,%r14
000000000003af92	movq	0x0006d4b7(%rip),%rdi
000000000003af99	leaq	0x0006d340(%rip),%rsi
000000000003afa0	call	*0x0006d33a(%rip)
000000000003afa6	movq	0x00069d0b(%rip),%rsi
000000000003afad	testb	%bl,%bl
000000000003afaf	setne	%cl
000000000003afb2	movzbl	%cl,%ecx
000000000003afb5	leaq	0x00077d3c(%rip),%rdx
000000000003afbc	movq	%rax,%rdi
000000000003afbf	xorb	%al,%al
000000000003afc1	call	*0x00049111(%rip)
000000000003afc7	leaq	0x00073b62(%rip),%rcx
000000000003afce	movq	(%rcx),%rdx
000000000003afd1	movq	%rax,%rdi
000000000003afd4	movq	%r14,%rsi
000000000003afd7	popq	%rbx
000000000003afd8	popq	%r14
000000000003afda	popq	%rbp
000000000003afdb	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MIGetSharedLibraryInfoCommand GDBCommandString]:
000000000003afe0	pushq	%rbp
000000000003afe1	movq	%rsp,%rbp
000000000003afe4	pushq	%r15
000000000003afe6	pushq	%r14
000000000003afe8	pushq	%rbx
000000000003afe9	pushq	%rax
000000000003afea	movq	%rdi,%rbx
000000000003afed	movq	0x0006b724(%rip),%rsi
000000000003aff4	call	*0x000490de(%rip)
000000000003affa	testq	%rax,%rax
000000000003affd	jne	0x0003b008
000000000003afff	leaq	0x00077d12(%rip),%rax
000000000003b006	jmp	0x0003b050
000000000003b008	movq	0x0006d441(%rip),%r14
000000000003b00f	movq	0x0006b702(%rip),%rsi
000000000003b016	movq	0x000490bb(%rip),%r15
000000000003b01d	movq	%rbx,%rdi
000000000003b020	call	*%r15
000000000003b023	movq	0x0006ae96(%rip),%rsi
000000000003b02a	movq	%rax,%rdi
000000000003b02d	call	*%r15
000000000003b030	leaq	0x00077d01(%rip),%rdx
000000000003b037	leaq	0x00077cda(%rip),%rcx
000000000003b03e	movq	0x00069b33(%rip),%rsi
000000000003b045	movq	%r14,%rdi
000000000003b048	movq	%rax,%r8
000000000003b04b	xorb	%al,%al
000000000003b04d	call	*%r15
000000000003b050	addq	$0x08,%rsp
000000000003b054	popq	%rbx
000000000003b055	popq	%r14
000000000003b057	popq	%r15
000000000003b059	popq	%rbp
000000000003b05a	ret
-[PBXGDB_MIGetSharedLibraryInfoCommand stackFrame]:
000000000003b05b	pushq	%rbp
000000000003b05c	movq	%rsp,%rbp
000000000003b05f	movq	0x00073d3a(%rip),%rax
000000000003b066	movq	(%rdi,%rax),%rax
000000000003b06a	popq	%rbp
000000000003b06b	ret
-[PBXGDB_MIGetSharedLibraryInfoCommand setStackFrame:]:
000000000003b06c	pushq	%rbp
000000000003b06d	movq	%rsp,%rbp
000000000003b070	movq	%rdx,%rax
000000000003b073	movq	%rdi,%rcx
000000000003b076	movq	0x00073d23(%rip),%rdx
000000000003b07d	movq	%rax,%rdi
000000000003b080	movq	%rcx,%rsi
000000000003b083	popq	%rbp
000000000003b084	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MISetSharedLibraryImageSymbolsLevelCommand setSymbolsLevel:forImageAtIndex:]:
000000000003b089	pushq	%rbp
000000000003b08a	movq	%rsp,%rbp
000000000003b08d	pushq	%r15
000000000003b08f	pushq	%r14
000000000003b091	pushq	%rbx
000000000003b092	pushq	%rax
000000000003b093	movq	%rcx,%r14
000000000003b096	movq	%rdi,%r15
000000000003b099	movq	0x0006b668(%rip),%rsi
000000000003b0a0	call	*0x00049032(%rip)
000000000003b0a6	movq	%rax,%rbx
000000000003b0a9	testq	%rbx,%rbx
000000000003b0ac	jne	0x0003b0b9
000000000003b0ae	addq	$0x08,%rsp
000000000003b0b2	popq	%rbx
000000000003b0b3	popq	%r14
000000000003b0b5	popq	%r15
000000000003b0b7	popq	%rbp
000000000003b0b8	ret
000000000003b0b9	movq	0x0006d390(%rip),%rdi
000000000003b0c0	leaq	0x0006d219(%rip),%rsi
000000000003b0c7	call	*0x0006d213(%rip)
000000000003b0cd	movq	0x00069be4(%rip),%rsi
000000000003b0d4	leaq	0x00077c7d(%rip),%rdx
000000000003b0db	movq	%rax,%rdi
000000000003b0de	movq	%r14,%rcx
000000000003b0e1	movq	%rbx,%r8
000000000003b0e4	xorb	%al,%al
000000000003b0e6	call	*0x00048fec(%rip)
000000000003b0ec	leaq	0x00073a3d(%rip),%rcx
000000000003b0f3	movq	(%rcx),%rdx
000000000003b0f6	movq	%rax,%rdi
000000000003b0f9	movq	%r15,%rsi
000000000003b0fc	addq	$0x08,%rsp
000000000003b100	popq	%rbx
000000000003b101	popq	%r14
000000000003b103	popq	%r15
000000000003b105	popq	%rbp
000000000003b106	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MIStackDepthCommand GDBCommandString]:
000000000003b10b	pushq	%rbp
000000000003b10c	movq	%rsp,%rbp
000000000003b10f	leaq	0x00077ca2(%rip),%rax
000000000003b116	popq	%rbp
000000000003b117	ret
-[PBXGDB_MIStackDepthCommand didFinishWithResultList:]:
000000000003b118	pushq	%rbp
000000000003b119	movq	%rsp,%rbp
000000000003b11c	pushq	%r15
000000000003b11e	pushq	%r14
000000000003b120	pushq	%rbx
000000000003b121	subq	$0x18,%rsp
000000000003b125	movq	%rdx,%r14
000000000003b128	movq	%rdi,%rbx
000000000003b12b	movq	0x000699a6(%rip),%rsi
000000000003b132	leaq	0x00077c9f(%rip),%rdx
000000000003b139	movq	%r14,%rdi
000000000003b13c	call	*0x00048f96(%rip)
000000000003b142	testq	%rax,%rax
000000000003b145	je	0x0003b173
000000000003b147	movq	0x000699ba(%rip),%rsi
000000000003b14e	movq	0x00048f83(%rip),%r15
000000000003b155	movq	%rax,%rdi
000000000003b158	call	*%r15
000000000003b15b	movq	0x0006a17e(%rip),%rsi
000000000003b162	movq	%rax,%rdi
000000000003b165	call	*%r15
000000000003b168	movq	0x00073c39(%rip),%rcx
000000000003b16f	movq	%rax,(%rbx,%rcx)
000000000003b173	movq	%rbx,0xd8(%rbp)
000000000003b177	movq	0x0006dd2a(%rip),%rax
000000000003b17e	movq	%rax,0xe0(%rbp)
000000000003b182	movq	0x0006b077(%rip),%rsi
000000000003b189	leaq	0xd8(%rbp),%rdi
000000000003b18d	movq	%r14,%rdx
000000000003b190	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000003b195	addq	$0x18,%rsp
000000000003b199	popq	%rbx
000000000003b19a	popq	%r14
000000000003b19c	popq	%r15
000000000003b19e	popq	%rbp
000000000003b19f	ret
-[PBXGDB_MIStackDepthCommand depth]:
000000000003b1a0	pushq	%rbp
000000000003b1a1	movq	%rsp,%rbp
000000000003b1a4	movq	0x00073bfd(%rip),%rax
000000000003b1ab	movq	(%rdi,%rax),%rax
000000000003b1af	popq	%rbp
000000000003b1b0	ret
_shlibNameFromItem:
000000000003b1b1	pushq	%rbp
000000000003b1b2	movq	%rsp,%rbp
000000000003b1b5	pushq	%rbx
000000000003b1b6	pushq	%rax
000000000003b1b7	testq	%rdi,%rdi
000000000003b1ba	je	0x0003b20b
000000000003b1bc	movq	0x00069945(%rip),%rsi
000000000003b1c3	call	*0x00048f0f(%rip)
000000000003b1c9	movq	%rax,%rbx
000000000003b1cc	leaq	0x0006d18d(%rip),%rsi
000000000003b1d3	leaq	0x00077c1e(%rip),%rdx
000000000003b1da	movq	%rbx,%rdi
000000000003b1dd	call	*0x0006d17d(%rip)
000000000003b1e3	testb	%al,%al
000000000003b1e5	jne	0x0003b20b
000000000003b1e7	movq	0x0006a0fa(%rip),%rsi
000000000003b1ee	leaq	0x00077c23(%rip),%rdx
000000000003b1f5	movq	%rbx,%rdi
000000000003b1f8	call	*0x00048eda(%rip)
000000000003b1fe	testb	%al,%al
000000000003b200	movl	$0x00000000,%eax
000000000003b205	cmoveq	%rbx,%rax
000000000003b209	jmp	0x0003b20d
000000000003b20b	xorl	%eax,%eax
000000000003b20d	addq	$0x08,%rsp
000000000003b211	popq	%rbx
000000000003b212	popq	%rbp
000000000003b213	ret
-[PBXGDB_MIStackFramesCommand setGetAllFrames]:
000000000003b214	pushq	%rbp
000000000003b215	movq	%rsp,%rbp
000000000003b218	pushq	%rbx
000000000003b219	pushq	%rax
000000000003b21a	movq	%rdi,%rbx
000000000003b21d	movq	0x0006d22c(%rip),%rdi
000000000003b224	leaq	0x0006d0b5(%rip),%rsi
000000000003b22b	call	*0x0006d0af(%rip)
000000000003b231	movq	0x00069a80(%rip),%rsi
000000000003b238	leaq	0x00077c39(%rip),%rdx
000000000003b23f	movq	%rax,%rdi
000000000003b242	xorb	%al,%al
000000000003b244	call	*0x00048e8e(%rip)
000000000003b24a	leaq	0x000738df(%rip),%rcx
000000000003b251	movq	(%rcx),%rdx
000000000003b254	movq	%rax,%rdi
000000000003b257	movq	%rbx,%rsi
000000000003b25a	addq	$0x08,%rsp
000000000003b25e	popq	%rbx
000000000003b25f	popq	%rbp
000000000003b260	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MIStackFramesCommand startIndex]:
000000000003b265	pushq	%rbp
000000000003b266	movq	%rsp,%rbp
000000000003b269	movq	0x00073b50(%rip),%rax
000000000003b270	movq	(%rdi,%rax),%rax
000000000003b274	popq	%rbp
000000000003b275	ret
-[PBXGDB_MIStackFramesCommand stopIndex]:
000000000003b276	pushq	%rbp
000000000003b277	movq	%rsp,%rbp
000000000003b27a	movq	0x00073b47(%rip),%rax
000000000003b281	movq	(%rdi,%rax),%rax
000000000003b285	popq	%rbp
000000000003b286	ret
-[PBXGDB_MIRegisterVarObjsCommand GDBCommandString]:
000000000003b287	pushq	%rbp
000000000003b288	movq	%rsp,%rbp
000000000003b28b	pushq	%rbx
000000000003b28c	subq	$0x18,%rsp
000000000003b290	movq	%rdi,0xf0(%rbp)
000000000003b294	movq	%rsi,0xe8(%rbp)
000000000003b298	leaq	0x00073861(%rip),%rax
000000000003b29f	movq	(%rax),%rax
000000000003b2a2	cmpq	$0x00,(%rdi,%rax)
000000000003b2a7	jns	0x0003b2de
000000000003b2a9	leaq	0x00024fc4(%rip),%rax
000000000003b2b0	movq	%rax,(%rsp)
000000000003b2b4	leaq	0xf0(%rbp),%rdi
000000000003b2b8	leaq	0xe8(%rbp),%rsi
000000000003b2bc	leaq	0x00024fe0(%rip),%rdx
000000000003b2c3	leaq	0x00024f24(%rip),%rcx
000000000003b2ca	leaq	0x00074567(%rip),%r9
000000000003b2d1	movl	$0x00000112,%r8d
000000000003b2d7	xorb	%al,%al
000000000003b2d9	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000003b2de	movq	0x0006d16b(%rip),%rdi
000000000003b2e5	leaq	0x0006cff4(%rip),%rsi
000000000003b2ec	call	*0x0006cfee(%rip)
000000000003b2f2	movq	0x000699bf(%rip),%rsi
000000000003b2f9	leaq	0x00077bf8(%rip),%rdx
000000000003b300	movq	%rax,%rdi
000000000003b303	xorb	%al,%al
000000000003b305	call	*0x00048dcd(%rip)
000000000003b30b	leaq	0x0007381e(%rip),%rcx
000000000003b312	movq	(%rcx),%rbx
000000000003b315	movq	0xf0(%rbp),%rsi
000000000003b319	movq	%rax,%rdi
000000000003b31c	movq	%rbx,%rdx
000000000003b31f	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000003b324	movq	0xf0(%rbp),%rax
000000000003b328	movq	(%rax,%rbx),%rax
000000000003b32c	addq	$0x18,%rsp
000000000003b330	popq	%rbx
000000000003b331	popq	%rbp
000000000003b332	ret
-[PBXGDB_MIRegisterVarObjsCommand didFinishWithResultList:]:
000000000003b333	pushq	%rbp
000000000003b334	movq	%rsp,%rbp
000000000003b337	pushq	%r15
000000000003b339	pushq	%r14
000000000003b33b	pushq	%r12
000000000003b33d	pushq	%rbx
000000000003b33e	subq	$0x10,%rsp
000000000003b342	movq	%rdx,%r14
000000000003b345	movq	%rdi,%rbx
000000000003b348	movq	0x00069789(%rip),%rsi
000000000003b34f	leaq	0x00076ee2(%rip),%rdx
000000000003b356	movq	%r14,%rdi
000000000003b359	call	*0x00048d79(%rip)
000000000003b35f	movq	%rax,%r15
000000000003b362	leaq	0x00073b4f(%rip),%rax
000000000003b369	movq	(%rax),%rdx
000000000003b36c	xorl	%edi,%edi
000000000003b36e	movq	%rbx,%rsi
000000000003b371	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000003b376	leaq	0x00073b4b(%rip),%rax
000000000003b37d	movq	(%rax),%rcx
000000000003b380	leaq	0x00073b39(%rip),%rax
000000000003b387	movq	$0x00000000,(%rbx,%rcx)
000000000003b38f	movq	(%rax),%rdx
000000000003b392	xorl	%edi,%edi
000000000003b394	movq	%rbx,%rsi
000000000003b397	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000003b39c	testq	%r15,%r15
000000000003b39f	je	0x0003b3d7
000000000003b3a1	movq	0x00069738(%rip),%rsi
000000000003b3a8	movq	0x00048d29(%rip),%r12
000000000003b3af	movq	%r15,%rdi
000000000003b3b2	call	*%r12
000000000003b3b5	movq	0x0006972c(%rip),%rsi
000000000003b3bc	movq	%rax,%rdi
000000000003b3bf	call	*%r12
000000000003b3c2	leaq	0x00073aef(%rip),%rcx
000000000003b3c9	movq	(%rcx),%rdx
000000000003b3cc	movq	%rax,%rdi
000000000003b3cf	movq	%rbx,%rsi
000000000003b3d2	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000003b3d7	movq	%rbx,0xd0(%rbp)
000000000003b3db	movq	0x0006dade(%rip),%rax
000000000003b3e2	movq	%rax,0xd8(%rbp)
000000000003b3e6	movq	0x0006ae13(%rip),%rsi
000000000003b3ed	leaq	0xd0(%rbp),%rdi
000000000003b3f1	movq	%r14,%rdx
000000000003b3f4	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000003b3f9	addq	$0x10,%rsp
000000000003b3fd	popq	%rbx
000000000003b3fe	popq	%r12
000000000003b400	popq	%r14
000000000003b402	popq	%r15
000000000003b404	popq	%rbp
000000000003b405	ret
-[PBXGDB_MIRegisterVarObjsCommand currentVarObjName]:
000000000003b406	pushq	%rbp
000000000003b407	movq	%rsp,%rbp
000000000003b40a	movq	0x0006b317(%rip),%rsi
000000000003b411	leaq	0x00074ba0(%rip),%rdx
000000000003b418	popq	%rbp
000000000003b419	jmp	*0x00048cb9(%rip)
+[PBXGDB_MIFileListGlobalsCommand miCommandForFile:shlib:format:filter:]:
000000000003b41f	pushq	%rbp
000000000003b420	movq	%rsp,%rbp
000000000003b423	pushq	%r15
000000000003b425	pushq	%r14
000000000003b427	pushq	%r13
000000000003b429	pushq	%r12
000000000003b42b	pushq	%rbx
000000000003b42c	pushq	%rax
000000000003b42d	movq	%r9,0xd0(%rbp)
000000000003b431	movq	%r8,%r15
000000000003b434	movq	%rcx,%r12
000000000003b437	movq	%rdx,%r13
000000000003b43a	movq	0x0006963f(%rip),%rsi
000000000003b441	movq	0x0006d480(%rip),%rdi
000000000003b448	movq	0x00048c89(%rip),%r14
000000000003b44f	call	*%r14
000000000003b452	movq	%rax,%rbx
000000000003b455	movq	0x00069f14(%rip),%rsi
000000000003b45c	movq	%rbx,%rdi
000000000003b45f	movq	%r13,%rdx
000000000003b462	call	*%r14
000000000003b465	movq	0x0006b2c4(%rip),%rsi
000000000003b46c	movq	%rbx,%rdi
000000000003b46f	movq	%r12,%rdx
000000000003b472	call	*%r14
000000000003b475	movq	0x0006b2bc(%rip),%rsi
000000000003b47c	movq	%rbx,%rdi
000000000003b47f	movq	%r15,%rdx
000000000003b482	call	*%r14
000000000003b485	movq	0x0006b2b4(%rip),%rsi
000000000003b48c	movq	%rbx,%rdi
000000000003b48f	movq	0xd0(%rbp),%rdx
000000000003b493	call	*%r14
000000000003b496	movq	%rbx,%rax
000000000003b499	addq	$0x08,%rsp
000000000003b49d	popq	%rbx
000000000003b49e	popq	%r12
000000000003b4a0	popq	%r13
000000000003b4a2	popq	%r14
000000000003b4a4	popq	%r15
000000000003b4a6	popq	%rbp
000000000003b4a7	ret
-[PBXGDB_MIFileListGlobalsCommand GDBCommandString]:
000000000003b4a8	pushq	%rbp
000000000003b4a9	movq	%rsp,%rbp
000000000003b4ac	pushq	%r14
000000000003b4ae	pushq	%rbx
000000000003b4af	subq	$0x10,%rsp
000000000003b4b3	movq	%rdi,%rbx
000000000003b4b6	movq	0x0006cf93(%rip),%rdi
000000000003b4bd	leaq	0x0006ce1c(%rip),%rsi
000000000003b4c4	call	*0x0006ce16(%rip)
000000000003b4ca	movq	0x00073927(%rip),%rcx
000000000003b4d1	movq	(%rbx,%rcx),%r9
000000000003b4d5	movq	0x00073914(%rip),%rcx
000000000003b4dc	movq	(%rbx,%rcx),%r8
000000000003b4e0	movq	0x00073901(%rip),%rcx
000000000003b4e7	movq	(%rbx,%rcx),%rcx
000000000003b4eb	movq	0x0007390e(%rip),%rdx
000000000003b4f2	movq	(%rbx,%rdx),%rdi
000000000003b4f6	movq	0x000697bb(%rip),%rsi
000000000003b4fd	leaq	0x00077a34(%rip),%rdx
000000000003b504	movq	%rdi,(%rsp)
000000000003b508	movq	%rax,%rdi
000000000003b50b	xorb	%al,%al
000000000003b50d	call	*0x00048bc5(%rip)
000000000003b513	leaq	0x00073616(%rip),%rcx
000000000003b51a	movq	(%rcx),%r14
000000000003b51d	movq	%rax,%rdi
000000000003b520	movq	%rbx,%rsi
000000000003b523	movq	%r14,%rdx
000000000003b526	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000003b52b	movq	(%rbx,%r14),%rax
000000000003b52f	addq	$0x10,%rsp
000000000003b533	popq	%rbx
000000000003b534	popq	%r14
000000000003b536	popq	%rbp
000000000003b537	ret
-[PBXGDB_MIFileListGlobalsCommand didFinishWithResultList:]:
000000000003b538	pushq	%rbp
000000000003b539	movq	%rsp,%rbp
000000000003b53c	pushq	%r15
000000000003b53e	pushq	%r14
000000000003b540	pushq	%r12
000000000003b542	pushq	%rbx
000000000003b543	subq	$0x10,%rsp
000000000003b547	movq	%rdx,%r14
000000000003b54a	movq	%rdi,%rbx
000000000003b54d	movq	0x00069584(%rip),%rsi
000000000003b554	leaq	0x00075e7d(%rip),%rdx
000000000003b55b	movq	%r14,%rdi
000000000003b55e	call	*0x00048b74(%rip)
000000000003b564	movq	%rax,%r15
000000000003b567	leaq	0x0007394a(%rip),%rax
000000000003b56e	movq	(%rax),%rdx
000000000003b571	xorl	%edi,%edi
000000000003b573	movq	%rbx,%rsi
000000000003b576	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000003b57b	leaq	0x00073946(%rip),%rax
000000000003b582	movq	(%rax),%rcx
000000000003b585	leaq	0x00073934(%rip),%rax
000000000003b58c	movq	$0x00000000,(%rbx,%rcx)
000000000003b594	movq	(%rax),%rdx
000000000003b597	xorl	%edi,%edi
000000000003b599	movq	%rbx,%rsi
000000000003b59c	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000003b5a1	testq	%r15,%r15
000000000003b5a4	je	0x0003b5dc
000000000003b5a6	movq	0x00069533(%rip),%rsi
000000000003b5ad	movq	-[PBXGDB_BreakpointController enqueueDeleteStopOnCPPThrowSequence](%rip),%r12
000000000003b5b4	movq	%r15,%rdi
000000000003b5b7	call	*%r12
000000000003b5ba	movq	0x00069527(%rip),%rsi
000000000003b5c1	movq	%rax,%rdi
000000000003b5c4	call	*%r12
000000000003b5c7	leaq	0x000738ea(%rip),%rcx
000000000003b5ce	movq	(%rcx),%rdx
000000000003b5d1	movq	%rax,%rdi
000000000003b5d4	movq	%rbx,%rsi
000000000003b5d7	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000003b5dc	movq	%rbx,0xd0(%rbp)
000000000003b5e0	movq	0x0006d8e1(%rip),%rax
000000000003b5e7	movq	%rax,0xd8(%rbp)
000000000003b5eb	movq	0x0006ac0e(%rip),%rsi
000000000003b5f2	leaq	0xd0(%rbp),%rdi
000000000003b5f6	movq	%r14,%rdx
000000000003b5f9	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000003b5fe	addq	$0x10,%rsp
000000000003b602	popq	%rbx
000000000003b603	popq	%r12
000000000003b605	popq	%r14
000000000003b607	popq	%r15
000000000003b609	popq	%rbp
000000000003b60a	ret
-[PBXGDB_MILiteStackFramesCommand shouldUseStartFlag]:
000000000003b60b	pushq	%rbp
000000000003b60c	movq	%rsp,%rbp
000000000003b60f	movq	0x000737f2(%rip),%rax
000000000003b616	movb	(%rdi,%rax),%al
000000000003b619	movsbl	%al,%eax
000000000003b61c	popq	%rbp
000000000003b61d	ret
-[PBXGDB_MILiteStackFramesCommand setReturnedEndIndex:]:
000000000003b61e	pushq	%rbp
000000000003b61f	movq	%rsp,%rbp
000000000003b622	movq	0x000737e7(%rip),%rax
000000000003b629	movq	%rdx,(%rdi,%rax)
000000000003b62d	popq	%rbp
000000000003b62e	ret
-[PBXGDB_MISelectFrameCommand setSelectFrame:nextCommandToPost:]:
000000000003b62f	pushq	%rbp
000000000003b630	movq	%rsp,%rbp
000000000003b633	pushq	%r15
000000000003b635	pushq	%r14
000000000003b637	pushq	%rbx
000000000003b638	pushq	%rax
000000000003b639	movq	%rcx,%r14
000000000003b63c	movq	%rdx,%r15
000000000003b63f	movq	%rdi,%rbx
000000000003b642	movq	0x0006ce07(%rip),%rdi
000000000003b649	leaq	0x0006cc90(%rip),%rsi
000000000003b650	call	*0x0006cc8a(%rip)
000000000003b656	movq	0x0006965b(%rip),%rsi
000000000003b65d	leaq	0x000779d4(%rip),%rdx
000000000003b664	movq	%rax,%rdi
000000000003b667	movq	%r15,%rcx
000000000003b66a	xorb	%al,%al
000000000003b66c	call	*0x00048a66(%rip)
000000000003b672	leaq	0x000734b7(%rip),%rcx
000000000003b679	movq	(%rcx),%rdx
000000000003b67c	movq	%rax,%rdi
000000000003b67f	movq	%rbx,%rsi
000000000003b682	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000003b687	movq	0x000737d2(%rip),%rdx
000000000003b68e	movq	%r14,%rdi
000000000003b691	movq	%rbx,%rsi
000000000003b694	addq	$0x08,%rsp
000000000003b698	popq	%rbx
000000000003b699	popq	%r14
000000000003b69b	popq	%r15
000000000003b69d	popq	%rbp
000000000003b69e	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MISelectFrameCommand nextCommandToPost]:
000000000003b6a3	pushq	%rbp
000000000003b6a4	movq	%rsp,%rbp
000000000003b6a7	movq	0x000737b2(%rip),%rax
000000000003b6ae	movq	(%rdi,%rax),%rax
000000000003b6b2	popq	%rbp
000000000003b6b3	ret
-[PBXGDB_MISelectFrameCommand setNextCommandToPost:]:
000000000003b6b4	pushq	%rbp
000000000003b6b5	movq	%rsp,%rbp
000000000003b6b8	movq	%rdx,%rax
000000000003b6bb	movq	%rdi,%rcx
000000000003b6be	movq	0x0007379b(%rip),%rdx
000000000003b6c5	movq	%rax,%rdi
000000000003b6c8	movq	%rcx,%rsi
000000000003b6cb	popq	%rbp
000000000003b6cc	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MIRawCommand setRawCommand:]:
000000000003b6d1	pushq	%rbp
000000000003b6d2	movq	%rsp,%rbp
000000000003b6d5	pushq	%r14
000000000003b6d7	pushq	%rbx
000000000003b6d8	movq	%rdx,%rbx
000000000003b6db	movq	%rdi,%r14
000000000003b6de	movq	0x0006cd6b(%rip),%rdi
000000000003b6e5	leaq	0x0006cbf4(%rip),%rsi
000000000003b6ec	call	*0x0006cbee(%rip)
000000000003b6f2	movq	0x000695bf(%rip),%rsi
000000000003b6f9	leaq	0x000740d8(%rip),%rdx
000000000003b700	movq	%rax,%rdi
000000000003b703	movq	%rbx,%rcx
000000000003b706	xorb	%al,%al
000000000003b708	call	*0x000489ca(%rip)
000000000003b70e	leaq	0x0007341b(%rip),%rcx
000000000003b715	movq	(%rcx),%rdx
000000000003b718	movq	%rax,%rdi
000000000003b71b	movq	%r14,%rsi
000000000003b71e	popq	%rbx
000000000003b71f	popq	%r14
000000000003b721	popq	%rbp
000000000003b722	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MIUnsetEnvCommand unsetEnvVariable:]:
000000000003b727	pushq	%rbp
000000000003b728	movq	%rsp,%rbp
000000000003b72b	pushq	%r14
000000000003b72d	pushq	%rbx
000000000003b72e	movq	%rdx,%rbx
000000000003b731	movq	%rdi,%r14
000000000003b734	movq	0x0006cd15(%rip),%rdi
000000000003b73b	leaq	0x0006cb9e(%rip),%rsi
000000000003b742	call	*0x0006cb98(%rip)
000000000003b748	movq	0x00069569(%rip),%rsi
000000000003b74f	leaq	0x00077942(%rip),%rdx
000000000003b756	movq	%rax,%rdi
000000000003b759	movq	%rbx,%rcx
000000000003b75c	xorb	%al,%al
000000000003b75e	call	*0x00048974(%rip)
000000000003b764	leaq	0x000733c5(%rip),%rcx
000000000003b76b	movq	(%rcx),%rdx
000000000003b76e	movq	%rax,%rdi
000000000003b771	movq	%r14,%rsi
000000000003b774	popq	%rbx
000000000003b775	popq	%r14
000000000003b777	popq	%rbp
000000000003b778	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MISetDisassemblyFlavor GDBCommandString]:
000000000003b77d	pushq	%rbp
000000000003b77e	movq	%rsp,%rbp
000000000003b781	movq	0x000693f0(%rip),%rsi
000000000003b788	movq	0x0006ccc1(%rip),%rdi
000000000003b78f	leaq	0x00077a42(%rip),%rdx
000000000003b796	xorb	%al,%al
000000000003b798	popq	%rbp
000000000003b799	jmp	*0x00048939(%rip)
-[PBXGDB_MISetCheckpointOn GDBCommandString]:
000000000003b79f	pushq	%rbp
000000000003b7a0	movq	%rsp,%rbp
000000000003b7a3	leaq	0x00077a4e(%rip),%rax
000000000003b7aa	popq	%rbp
000000000003b7ab	ret
-[PBXGDB_MISetStopOnDebuggerDebugStrOn GDBCommandString]:
000000000003b7ac	pushq	%rbp
000000000003b7ad	movq	%rsp,%rbp
000000000003b7b0	leaq	0x00077a61(%rip),%rax
000000000003b7b7	popq	%rbp
000000000003b7b8	ret
-[PBXGDB_MISetStopOnDebuggerDebugStrOff GDBCommandString]:
000000000003b7b9	pushq	%rbp
000000000003b7ba	movq	%rsp,%rbp
000000000003b7bd	leaq	0x00077a74(%rip),%rax
000000000003b7c4	popq	%rbp
000000000003b7c5	ret
-[PBXGDB_MISelectThreadCommand setSelectedThreadId:nextCommandToPost:]:
000000000003b7c6	pushq	%rbp
000000000003b7c7	movq	%rsp,%rbp
000000000003b7ca	pushq	%r15
000000000003b7cc	pushq	%r14
000000000003b7ce	pushq	%rbx
000000000003b7cf	pushq	%rax
000000000003b7d0	movq	%rcx,%r14
000000000003b7d3	movq	%rdx,%r15
000000000003b7d6	movq	%rdi,%rbx
000000000003b7d9	movq	0x0006cc70(%rip),%rdi
000000000003b7e0	leaq	0x0006caf9(%rip),%rsi
000000000003b7e7	call	*0x0006caf3(%rip)
000000000003b7ed	movq	0x000694c4(%rip),%rsi
000000000003b7f4	leaq	0x00077b1d(%rip),%rdx
000000000003b7fb	movq	%rax,%rdi
000000000003b7fe	movq	%r15,%rcx
000000000003b801	xorb	%al,%al
000000000003b803	call	*0x000488cf(%rip)
000000000003b809	leaq	0x00073320(%rip),%rcx
000000000003b810	movq	(%rcx),%rdx
000000000003b813	movq	%rax,%rdi
000000000003b816	movq	%rbx,%rsi
000000000003b819	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000003b81e	movq	0x00073663(%rip),%rdx
000000000003b825	movq	%r14,%rdi
000000000003b828	movq	%rbx,%rsi
000000000003b82b	addq	$0x08,%rsp
000000000003b82f	popq	%rbx
000000000003b830	popq	%r14
000000000003b832	popq	%r15
000000000003b834	popq	%rbp
000000000003b835	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MISelectThreadCommand nextCommandToPost]:
000000000003b83a	pushq	%rbp
000000000003b83b	movq	%rsp,%rbp
000000000003b83e	movq	0x00073643(%rip),%rax
000000000003b845	movq	(%rdi,%rax),%rax
000000000003b849	popq	%rbp
000000000003b84a	ret
-[PBXGDB_MISelectThreadCommand setNextCommandToPost:]:
000000000003b84b	pushq	%rbp
000000000003b84c	movq	%rsp,%rbp
000000000003b84f	movq	%rdx,%rax
000000000003b852	movq	%rdi,%rcx
000000000003b855	movq	0x0007362c(%rip),%rdx
000000000003b85c	movq	%rax,%rdi
000000000003b85f	movq	%rcx,%rsi
000000000003b862	popq	%rbp
000000000003b863	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
+[PBXGDB_MITypes specifierStringForFormat:]:
000000000003b868	pushq	%rbp
000000000003b869	movq	%rsp,%rbp
000000000003b86c	decl	%edx
000000000003b86e	cmpl	$0x05,%edx
000000000003b871	ja	0x0003b8b7
000000000003b873	leaq	0x00077abe(%rip),%rax
000000000003b87a	leaq	0x0000003f(%rip),%rsi
000000000003b881	movslq	(%rsi,%rdx,4),%rcx
000000000003b885	addq	%rsi,%rcx
000000000003b888	jmp	*%rcx
000000000003b88a	leaq	0x00077ac7(%rip),%rax
000000000003b891	jmp	0x0003b8be
000000000003b893	leaq	0x00077ade(%rip),%rax
000000000003b89a	jmp	0x0003b8be
000000000003b89c	leaq	0x00077af5(%rip),%rax
000000000003b8a3	jmp	0x0003b8be
000000000003b8a5	leaq	0x00077b0c(%rip),%rax
000000000003b8ac	jmp	0x0003b8be
000000000003b8ae	leaq	0x00077b23(%rip),%rax
000000000003b8b5	jmp	0x0003b8be
000000000003b8b7	leaq	0x00077b3a(%rip),%rax
000000000003b8be	popq	%rbp
000000000003b8bf	ret
000000000003b8c0	fdivr	%st,%st(7)
000000000003b8c2	.byte 0xff, 0xff #bad opcode
000000000003b8c4	lretl	$0xffff
000000000003b8c7	.byte 0xff, 0xfe #bad opcode
000000000003b8c9	.byte 0xff, 0xff #bad opcode
000000000003b8cb	jmp	*%rbp
000000000003b8cd	.byte 0xff, 0xff #bad opcode
000000000003b8cf	ljmpl	*%esi
000000000003b8d1	.byte 0xff, 0xff #bad opcode
000000000003b8d3	call	*%rbx
000000000003b8d5	.byte 0xff, 0xff #bad opcode
000000000003b8d7	call	*0x89485590(%rax)
000000000003b8dd	inl	$0x48,%eax
000000000003b8df	movl	0x00069993(%rip),%esi
000000000003b8e5	xorl	%edx,%edx
000000000003b8e7	popq	%rbp
000000000003b8e8	jmp	*0x000487ea(%rip)
-[PBXGDB_MIUserCommand rawCommandString]:
000000000003b8ee	pushq	%rbp
000000000003b8ef	movq	%rsp,%rbp
000000000003b8f2	movq	0x000735af(%rip),%rax
000000000003b8f9	movq	(%rdi,%rax),%rax
000000000003b8fd	popq	%rbp
000000000003b8fe	ret
-[PBXGDB_MIBaseVarObjCommand currentVarObjTypeChanged]:
000000000003b8ff	pushq	%rbp
000000000003b900	movq	%rsp,%rbp
000000000003b903	movq	0x0006ae1e(%rip),%rsi
000000000003b90a	leaq	0x00074727(%rip),%rdx
000000000003b911	call	*0x000487c1(%rip)
000000000003b917	testq	%rax,%rax
000000000003b91a	jne	0x0003b920
000000000003b91c	xorb	%al,%al
000000000003b91e	jmp	0x0003b937
000000000003b920	leaq	0x0006ca39(%rip),%rsi
000000000003b927	leaq	0x000777ea(%rip),%rdx
000000000003b92e	movq	%rax,%rdi
000000000003b931	call	*0x0006ca29(%rip)
000000000003b937	movsbl	%al,%eax
000000000003b93a	popq	%rbp
000000000003b93b	ret
-[PBXGDB_MIBaseVarObjCommand currentVarObjNewNumberOfChildren]:
000000000003b93c	pushq	%rbp
000000000003b93d	movq	%rsp,%rbp
000000000003b940	movq	0x0006ade1(%rip),%rsi
000000000003b947	leaq	0x000780aa(%rip),%rdx
000000000003b94e	call	*0x00048784(%rip)
000000000003b954	movq	0x00069985(%rip),%rsi
000000000003b95b	movq	%rax,%rdi
000000000003b95e	movq	0x00048773(%rip),%rax
000000000003b965	popq	%rbp
000000000003b966	jmp	*%rax
-[PBXGDB_MIBaseVarObjCommand currentVarObjNewTypeExpressionString]:
000000000003b968	pushq	%rbp
000000000003b969	movq	%rsp,%rbp
000000000003b96c	movq	0x0006adb5(%rip),%rsi
000000000003b973	leaq	0x000749fe(%rip),%rdx
000000000003b97a	popq	%rbp
000000000003b97b	jmp	*0x00048757(%rip)
-[PBXGDB_MIBaseVarObjCommand currentVarObjNewDynamicTypeExpressionString]:
000000000003b981	pushq	%rbp
000000000003b982	movq	%rsp,%rbp
000000000003b985	movq	0x0006ad9c(%rip),%rsi
000000000003b98c	leaq	0x00074a05(%rip),%rdx
000000000003b993	popq	%rbp
000000000003b994	jmp	*0x0004873e(%rip)
-[PBXGDB_MIBaseVarObjCommand currentVarObjNewTypeCode]:
000000000003b99a	pushq	%rbp
000000000003b99b	movq	%rsp,%rbp
000000000003b99e	pushq	%rbx
000000000003b99f	pushq	%rax
000000000003b9a0	movq	%rdi,%rbx
000000000003b9a3	movq	0x0006ad7e(%rip),%rsi
000000000003b9aa	leaq	0x00078067(%rip),%rdx
000000000003b9b1	call	*0x00048721(%rip)
000000000003b9b7	movq	0x0006a80a(%rip),%rsi
000000000003b9be	movq	%rbx,%rdi
000000000003b9c1	movq	%rax,%rdx
000000000003b9c4	movq	0x0004870d(%rip),%rax
000000000003b9cb	addq	$0x08,%rsp
000000000003b9cf	popq	%rbx
000000000003b9d0	popq	%rbp
000000000003b9d1	jmp	*%rax
-[PBXGDB_MISingleVarObjCommand setVarObjName:]:
000000000003b9d3	pushq	%rbp
000000000003b9d4	movq	%rsp,%rbp
000000000003b9d7	popq	%rbp
000000000003b9d8	ret
-[PBXGDB_MIDeleteVarObjCommand setVarObjName:]:
000000000003b9d9	pushq	%rbp
000000000003b9da	movq	%rsp,%rbp
000000000003b9dd	pushq	%r14
000000000003b9df	pushq	%rbx
000000000003b9e0	movq	%rdx,%rbx
000000000003b9e3	movq	%rdi,%r14
000000000003b9e6	movq	0x0006ca63(%rip),%rdi
000000000003b9ed	leaq	0x0006c8ec(%rip),%rsi
000000000003b9f4	call	*0x0006c8e6(%rip)
000000000003b9fa	movq	0x000692b7(%rip),%rsi
000000000003ba01	leaq	0x00078150(%rip),%rdx
000000000003ba08	movq	%rax,%rdi
000000000003ba0b	movq	%rbx,%rcx
000000000003ba0e	xorb	%al,%al
000000000003ba10	call	*0x000486c2(%rip)
000000000003ba16	leaq	0x00073113(%rip),%rcx
000000000003ba1d	movq	(%rcx),%rdx
000000000003ba20	movq	%rax,%rdi
000000000003ba23	movq	%r14,%rsi
000000000003ba26	popq	%rbx
000000000003ba27	popq	%r14
000000000003ba29	popq	%rbp
000000000003ba2a	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MIDeleteVarObjCommand threadIdContext]:
000000000003ba2f	pushq	%rbp
000000000003ba30	movq	%rsp,%rbp
000000000003ba33	movq	$0xffffffff,%rax
000000000003ba3a	popq	%rbp
000000000003ba3b	ret
-[PBXGDB_MIDeleteVarObjCommand frameIndexContext]:
000000000003ba3c	pushq	%rbp
000000000003ba3d	movq	%rsp,%rbp
000000000003ba40	movq	$0xffffffff,%rax
000000000003ba47	popq	%rbp
000000000003ba48	ret
-[PBXGDB_MIDeleteChildrenOfVarObjCommand setVarObjName:]:
000000000003ba49	pushq	%rbp
000000000003ba4a	movq	%rsp,%rbp
000000000003ba4d	pushq	%r14
000000000003ba4f	pushq	%rbx
000000000003ba50	movq	%rdx,%rbx
000000000003ba53	movq	%rdi,%r14
000000000003ba56	movq	0x0006c9f3(%rip),%rdi
000000000003ba5d	leaq	0x0006c87c(%rip),%rsi
000000000003ba64	call	*0x0006c876(%rip)
000000000003ba6a	movq	0x00069247(%rip),%rsi
000000000003ba71	leaq	0x00078100(%rip),%rdx
000000000003ba78	movq	%rax,%rdi
000000000003ba7b	movq	%rbx,%rcx
000000000003ba7e	xorb	%al,%al
000000000003ba80	call	*0x00048652(%rip)
000000000003ba86	leaq	0x000730a3(%rip),%rcx
000000000003ba8d	movq	(%rcx),%rdx
000000000003ba90	movq	%rax,%rdi
000000000003ba93	movq	%r14,%rsi
000000000003ba96	popq	%rbx
000000000003ba97	popq	%r14
000000000003ba99	popq	%rbp
000000000003ba9a	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MIDeleteChildrenOfVarObjCommand threadIdContext]:
000000000003ba9f	pushq	%rbp
000000000003baa0	movq	%rsp,%rbp
000000000003baa3	movq	$0xffffffff,%rax
000000000003baaa	popq	%rbp
000000000003baab	ret
-[PBXGDB_MIDeleteChildrenOfVarObjCommand frameIndexContext]:
000000000003baac	pushq	%rbp
000000000003baad	movq	%rsp,%rbp
000000000003bab0	movq	$0xffffffff,%rax
000000000003bab7	popq	%rbp
000000000003bab8	ret
-[PBXGDB_MISetVarObjValueCommand setVarObjName:]:
000000000003bab9	pushq	%rbp
000000000003baba	movq	%rsp,%rbp
000000000003babd	leaq	0x00078114(%rip),%rdi
000000000003bac4	xorb	%al,%al
000000000003bac6	popq	%rbp
000000000003bac7	jmp	0x0004e5c0	; symbol stub for: _NSLog
-[PBXGDB_MISetVarObjValueCommand setVarObjName:toValue:]:
000000000003bacc	pushq	%rbp
000000000003bacd	movq	%rsp,%rbp
000000000003bad0	pushq	%r15
000000000003bad2	pushq	%r14
000000000003bad4	pushq	%rbx
000000000003bad5	pushq	%rax
000000000003bad6	movq	%rcx,%r15
000000000003bad9	movq	%rdx,%rbx
000000000003badc	movq	%rdi,%r14
000000000003badf	movq	0x0006c96a(%rip),%rdi
000000000003bae6	leaq	0x0006c7f3(%rip),%rsi
000000000003baed	call	*0x0006c7ed(%rip)
000000000003baf3	movq	0x000691be(%rip),%rsi
000000000003bafa	leaq	0x000780f7(%rip),%rdx
000000000003bb01	movq	%rax,%rdi
000000000003bb04	movq	%rbx,%rcx
000000000003bb07	movq	%r15,%r8
000000000003bb0a	xorb	%al,%al
000000000003bb0c	call	*0x000485c6(%rip)
000000000003bb12	leaq	0x00073017(%rip),%rcx
000000000003bb19	movq	(%rcx),%rdx
000000000003bb1c	movq	%rax,%rdi
000000000003bb1f	movq	%r14,%rsi
000000000003bb22	addq	$0x08,%rsp
000000000003bb26	popq	%rbx
000000000003bb27	popq	%r14
000000000003bb29	popq	%r15
000000000003bb2b	popq	%rbp
000000000003bb2c	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MISetVarObjFormatCommand setVarObjName:]:
000000000003bb31	pushq	%rbp
000000000003bb32	movq	%rsp,%rbp
000000000003bb35	leaq	0x000780dc(%rip),%rdi
000000000003bb3c	xorb	%al,%al
000000000003bb3e	popq	%rbp
000000000003bb3f	jmp	0x0004e5c0	; symbol stub for: _NSLog
-[PBXGDB_MISetVarObjFormatCommand setVarObjName:toFormat:]:
000000000003bb44	pushq	%rbp
000000000003bb45	movq	%rsp,%rbp
000000000003bb48	pushq	%r15
000000000003bb4a	pushq	%r14
000000000003bb4c	pushq	%r13
000000000003bb4e	pushq	%r12
000000000003bb50	pushq	%rbx
000000000003bb51	pushq	%rax
000000000003bb52	movl	%ecx,%r12d
000000000003bb55	movq	%rdx,%r15
000000000003bb58	movq	%rdi,%r14
000000000003bb5b	movq	0x0006c8ee(%rip),%rdi
000000000003bb62	leaq	0x0006c777(%rip),%rsi
000000000003bb69	call	*0x0006c771(%rip)
000000000003bb6f	movq	%rax,%rbx
000000000003bb72	movq	0x0006acff(%rip),%rsi
000000000003bb79	movq	0x0006cdc0(%rip),%rdi
000000000003bb80	movq	0x00048551(%rip),%r13
000000000003bb87	movl	%r12d,%edx
000000000003bb8a	call	*%r13
000000000003bb8d	leaq	0x000780a4(%rip),%rdx
000000000003bb94	movq	0x0006911d(%rip),%rsi
000000000003bb9b	movq	%rbx,%rdi
000000000003bb9e	movq	%r15,%rcx
000000000003bba1	movq	%rax,%r8
000000000003bba4	xorb	%al,%al
000000000003bba6	call	*%r13
000000000003bba9	leaq	0x00072f80(%rip),%rcx
000000000003bbb0	movq	(%rcx),%rdx
000000000003bbb3	movq	%rax,%rdi
000000000003bbb6	movq	%r14,%rsi
000000000003bbb9	addq	$0x08,%rsp
000000000003bbbd	popq	%rbx
000000000003bbbe	popq	%r12
000000000003bbc0	popq	%r13
000000000003bbc2	popq	%r14
000000000003bbc4	popq	%r15
000000000003bbc6	popq	%rbp
000000000003bbc7	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000003bbcc	nop
000000000003bbcd	nop
000000000003bbce	nop
000000000003bbcf	nop
+[PBXGDB_MovePCSequence sequenceWithThreadID:fileSpec:]:
000000000003bbd0	pushq	%rbp
000000000003bbd1	movq	%rsp,%rbp
000000000003bbd4	pushq	%r15
000000000003bbd6	pushq	%r14
000000000003bbd8	pushq	%r12
000000000003bbda	pushq	%rbx
000000000003bbdb	movq	%rcx,%r14
000000000003bbde	movq	%rdx,%rbx
000000000003bbe1	movq	0x00068e98(%rip),%rsi
000000000003bbe8	movq	0x0006cdc9(%rip),%rdi
000000000003bbef	movq	0x000484e2(%rip),%r12
000000000003bbf6	call	*%r12
000000000003bbf9	movq	%rax,%r15
000000000003bbfc	movq	0x0006ac85(%rip),%rsi
000000000003bc03	movq	%r15,%rdi
000000000003bc06	movq	%rbx,%rdx
000000000003bc09	call	*%r12
000000000003bc0c	movq	0x0006ac7d(%rip),%rsi
000000000003bc13	movq	%r15,%rdi
000000000003bc16	movq	%r14,%rdx
000000000003bc19	call	*%r12
000000000003bc1c	movq	0x00068e75(%rip),%rsi
000000000003bc23	movq	0x0006ac6e(%rip),%rdx
000000000003bc2a	movq	%r15,%rdi
000000000003bc2d	call	*%r12
000000000003bc30	leaq	0x0006c6a9(%rip),%rsi
000000000003bc37	movq	0x0006c97a(%rip),%rdi
000000000003bc3e	call	*0x0006c69c(%rip)
000000000003bc44	movq	0x00068e25(%rip),%rsi
000000000003bc4b	movq	%rax,%rdi
000000000003bc4e	call	*%r12
000000000003bc51	movq	%rax,%rbx
000000000003bc54	movq	0x00068e2d(%rip),%rsi
000000000003bc5b	movq	%r15,%rdi
000000000003bc5e	movq	%rbx,%rdx
000000000003bc61	call	*%r12
000000000003bc64	movq	0x0006961d(%rip),%rsi
000000000003bc6b	movq	%rbx,%rdi
000000000003bc6e	movq	%r15,%rdx
000000000003bc71	call	*%r12
000000000003bc74	movq	%rbx,%rax
000000000003bc77	popq	%rbx
000000000003bc78	popq	%r12
000000000003bc7a	popq	%r14
000000000003bc7c	popq	%r15
000000000003bc7e	popq	%rbp
000000000003bc7f	ret
-[PBXGDB_MovePCSequence targetProcess]:
000000000003bc80	pushq	%rbp
000000000003bc81	movq	%rsp,%rbp
000000000003bc84	movq	0x00068e2d(%rip),%rsi
000000000003bc8b	call	*0x00048447(%rip)
000000000003bc91	movq	0x00069050(%rip),%rsi
000000000003bc98	movq	%rax,%rdi
000000000003bc9b	call	*0x00048437(%rip)
000000000003bca1	movq	0x00069048(%rip),%rsi
000000000003bca8	movq	%rax,%rdi
000000000003bcab	call	*0x00048427(%rip)
000000000003bcb1	movq	0x00069208(%rip),%rsi
000000000003bcb8	movq	%rax,%rdi
000000000003bcbb	movq	0x00048416(%rip),%rax
000000000003bcc2	popq	%rbp
000000000003bcc3	jmp	*%rax
-[PBXGDB_MovePCSequence _updateStacks:]:
000000000003bcc5	pushq	%rbp
000000000003bcc6	movq	%rsp,%rbp
000000000003bcc9	pushq	%r15
000000000003bccb	pushq	%r14
000000000003bccd	pushq	%r12
000000000003bccf	pushq	%rbx
000000000003bcd0	subq	$0x40,%rsp
000000000003bcd4	movq	%rdi,%r14
000000000003bcd7	movq	0x00068dda(%rip),%rsi
000000000003bcde	movq	0x000483f3(%rip),%r12
000000000003bce5	call	*%r12
000000000003bce8	movq	0x00068ff9(%rip),%rsi
000000000003bcef	movq	%rax,%rdi
000000000003bcf2	call	*%r12
000000000003bcf5	movq	0x00068ff4(%rip),%rsi
000000000003bcfc	movq	%rax,%rdi
000000000003bcff	call	*%r12
000000000003bd02	movq	0x000691b7(%rip),%rsi
000000000003bd09	movq	%rax,%rdi
000000000003bd0c	call	*%r12
000000000003bd0f	movq	%rax,%r15
000000000003bd12	leaq	0x0006c5c7(%rip),%rsi
000000000003bd19	movq	0x0006ca70(%rip),%rdi
000000000003bd20	call	*0x0006c5ba(%rip)
000000000003bd26	movq	%rax,%rbx
000000000003bd29	leaq	0xd8(%rbp),%rsi
000000000003bd2d	leaq	0x0007b37c(%rip),%rax
000000000003bd34	leaq	0x000000c8(%rip),%rcx
000000000003bd3b	movq	0x0004834e(%rip),%rdx
000000000003bd42	movq	%rdx,0xb8(%rbp)
000000000003bd46	movl	$0x42000000,0xc0(%rbp)
000000000003bd4d	movl	$0x00000000,0xc4(%rbp)
000000000003bd54	movq	%rcx,0xc8(%rbp)
000000000003bd58	movq	%rax,0xd0(%rbp)
000000000003bd5c	movq	%r15,%rdi
000000000003bd5f	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
000000000003bd64	leaq	0xb8(%rbp),%rdx
000000000003bd68	movq	0x0006ab39(%rip),%rsi
000000000003bd6f	movq	%rbx,%rdi
000000000003bd72	call	*%r12
000000000003bd75	movq	%rax,%rbx
000000000003bd78	movq	0x00069051(%rip),%rsi
000000000003bd7f	movq	%r14,%rdi
000000000003bd82	call	*%r12
000000000003bd85	movq	0x0006904c(%rip),%rsi
000000000003bd8c	movq	%rbx,%rdi
000000000003bd8f	movq	%rax,%rdx
000000000003bd92	call	*%r12
000000000003bd95	movq	0x00073154(%rip),%rax
000000000003bd9c	movq	(%r14,%rax),%rdi
000000000003bda0	movq	0x0006a7c1(%rip),%rsi
000000000003bda7	call	*%r12
000000000003bdaa	movq	0x00069e7f(%rip),%rsi
000000000003bdb1	movq	%rbx,%rdi
000000000003bdb4	movq	%rax,%rdx
000000000003bdb7	call	*%r12
000000000003bdba	movq	0x0006900f(%rip),%rsi
000000000003bdc1	movq	%r14,%rdi
000000000003bdc4	call	*%r12
000000000003bdc7	movq	0x00069012(%rip),%rsi
000000000003bdce	movq	%rax,%rdi
000000000003bdd1	movq	%rbx,%rdx
000000000003bdd4	call	*%r12
000000000003bdd7	leaq	0xa8(%rbp),%rdi
000000000003bddb	movq	%r14,0xa8(%rbp)
000000000003bddf	movq	0x0006d152(%rip),%rax
000000000003bde6	movq	%rax,0xb0(%rbp)
000000000003bdea	movq	0x00068d47(%rip),%rsi
000000000003bdf1	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000003bdf6	addq	$0x40,%rsp
000000000003bdfa	popq	%rbx
000000000003bdfb	popq	%r12
000000000003bdfd	popq	%r14
000000000003bdff	popq	%r15
000000000003be01	popq	%rbp
000000000003be02	ret
___39-[PBXGDB_MovePCSequence _updateStacks:]_block_invoke_0:
000000000003be03	pushq	%rbp
000000000003be04	movq	%rsp,%rbp
000000000003be07	pushq	%rbx
000000000003be08	pushq	%rax
000000000003be09	movq	0x20(%rdi),%rbx
000000000003be0d	movq	0x000690b4(%rip),%rsi
000000000003be14	movq	%rbx,%rdi
000000000003be17	call	*0x000482bb(%rip)
000000000003be1d	movq	0x00069444(%rip),%rsi
000000000003be24	movq	%rax,%rdi
000000000003be27	call	*0x000482ab(%rip)
000000000003be2d	movq	0x0006aa6c(%rip),%rsi
000000000003be34	movq	%rax,%rdi
000000000003be37	call	*0x0004829b(%rip)
000000000003be3d	movq	0x00069e1c(%rip),%rsi
000000000003be44	movq	%rbx,%rdi
000000000003be47	movq	%rax,%rdx
000000000003be4a	movq	0x00048287(%rip),%rax
000000000003be51	addq	$0x08,%rsp
000000000003be55	popq	%rbx
000000000003be56	popq	%rbp
000000000003be57	jmp	*%rax
000000000003be59	nopl	0x00000000(%rax)
___copy_helper_block_:
000000000003be60	pushq	%rbp
000000000003be61	movq	%rsp,%rbp
000000000003be64	addq	$0x20,%rdi
000000000003be68	movq	0x20(%rsi),%rsi
000000000003be6c	movl	$0x00000003,%edx
000000000003be71	popq	%rbp
000000000003be72	jmp	0x0004e662	; symbol stub for: __Block_object_assign
000000000003be77	nopw	0x00000000(%rax,%rax)
___destroy_helper_block_:
000000000003be80	pushq	%rbp
000000000003be81	movq	%rsp,%rbp
000000000003be84	movq	0x20(%rdi),%rdi
000000000003be88	movl	$0x00000003,%esi
000000000003be8d	popq	%rbp
000000000003be8e	jmp	0x0004e668	; symbol stub for: __Block_object_dispose
-[PBXGDB_MovePCSequence handleErrorForMICommand:]:
000000000003be93	pushq	%rbp
000000000003be94	movq	%rsp,%rbp
000000000003be97	pushq	%r15
000000000003be99	pushq	%r14
000000000003be9b	pushq	%rbx
000000000003be9c	subq	$0x18,%rsp
000000000003bea0	movq	%rdi,%r14
000000000003bea3	movq	0x00068c0e(%rip),%rsi
000000000003beaa	movq	0x00048227(%rip),%r15
000000000003beb1	call	*%r15
000000000003beb4	movq	0x00068e2d(%rip),%rsi
000000000003bebb	movq	%rax,%rdi
000000000003bebe	call	*%r15
000000000003bec1	movq	0x00068e28(%rip),%rsi
000000000003bec8	movq	%rax,%rdi
000000000003becb	call	*%r15
000000000003bece	movq	0x00068feb(%rip),%rsi
000000000003bed5	movq	%rax,%rdi
000000000003bed8	call	*%r15
000000000003bedb	movq	%rax,%rbx
000000000003bede	movq	0x00068feb(%rip),%rsi
000000000003bee5	movq	%rbx,%rdi
000000000003bee8	call	*%r15
000000000003beeb	movq	0x00069d6e(%rip),%rsi
000000000003bef2	movq	%rbx,%rdi
000000000003bef5	movq	%rax,%rdx
000000000003bef8	call	*%r15
000000000003befb	leaq	0xd8(%rbp),%rdi
000000000003beff	movq	%r14,0xd8(%rbp)
000000000003bf03	movq	0x0006d02e(%rip),%rax
000000000003bf0a	movq	%rax,0xe0(%rbp)
000000000003bf0e	movq	0x00068c23(%rip),%rsi
000000000003bf15	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000003bf1a	movl	$0x00000001,%eax
000000000003bf1f	addq	$0x18,%rsp
000000000003bf23	popq	%rbx
000000000003bf24	popq	%r14
000000000003bf26	popq	%r15
000000000003bf28	popq	%rbp
000000000003bf29	ret
-[PBXGDB_MovePCSequence execute]:
000000000003bf2a	pushq	%rbp
000000000003bf2b	movq	%rsp,%rbp
000000000003bf2e	pushq	%rbx
000000000003bf2f	pushq	%rax
000000000003bf30	movq	%rdi,%rbx
000000000003bf33	movq	0x00068b7e(%rip),%rsi
000000000003bf3a	call	*0x00048198(%rip)
000000000003bf40	movq	0x00068b79(%rip),%rsi
000000000003bf47	movq	%rax,%rdi
000000000003bf4a	call	*0x00048188(%rip)
000000000003bf50	movq	0x00072f99(%rip),%rcx
000000000003bf57	movq	(%rbx,%rcx),%rdx
000000000003bf5b	movq	0x00068b66(%rip),%rsi
000000000003bf62	movq	%rax,%rdi
000000000003bf65	movq	0x0004816c(%rip),%rax
000000000003bf6c	addq	$0x08,%rsp
000000000003bf70	popq	%rbx
000000000003bf71	popq	%rbp
000000000003bf72	jmp	*%rax
-[PBXGDB_MovePCSequence setMICommand:]:
000000000003bf74	pushq	%rbp
000000000003bf75	movq	%rsp,%rbp
000000000003bf78	movq	%rdx,%rax
000000000003bf7b	movq	%rdi,%rcx
000000000003bf7e	movq	0x00072f6b(%rip),%rdx
000000000003bf85	movq	%rax,%rdi
000000000003bf88	movq	%rcx,%rsi
000000000003bf8b	popq	%rbp
000000000003bf8c	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_MovePCSequence miCommand]:
000000000003bf91	pushq	%rbp
000000000003bf92	movq	%rsp,%rbp
000000000003bf95	movq	0x00072f54(%rip),%rax
000000000003bf9c	movq	(%rdi,%rax),%rax
000000000003bfa0	popq	%rbp
000000000003bfa1	ret
-[PBXGDB_ObjCDynamicTypeOperation setObjectAddressString:]:
000000000003bfa2	pushq	%rbp
000000000003bfa3	movq	%rsp,%rbp
000000000003bfa6	movq	%rdx,%rax
000000000003bfa9	movq	%rdi,%rcx
000000000003bfac	movq	0x00072f45(%rip),%rdx
000000000003bfb3	cmpq	%rax,(%rcx,%rdx)
000000000003bfb7	jne	0x0003bfbb
000000000003bfb9	popq	%rbp
000000000003bfba	ret
000000000003bfbb	addq	%rcx,%rdx
000000000003bfbe	subq	%rcx,%rdx
000000000003bfc1	movq	%rax,%rdi
000000000003bfc4	movq	%rcx,%rsi
000000000003bfc7	popq	%rbp
000000000003bfc8	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_ObjCDynamicTypeOperation objectAddressString]:
000000000003bfcd	pushq	%rbp
000000000003bfce	movq	%rsp,%rbp
000000000003bfd1	movq	0x00072f20(%rip),%rax
000000000003bfd8	movq	(%rdi,%rax),%rax
000000000003bfdc	popq	%rbp
000000000003bfdd	ret
-[PBXGDB_ObjCDynamicTypeOperation sequenceDidFinish:]:
000000000003bfde	pushq	%rbp
000000000003bfdf	movq	%rsp,%rbp
000000000003bfe2	pushq	%r15
000000000003bfe4	pushq	%r14
000000000003bfe6	pushq	%r12
000000000003bfe8	pushq	%rbx
000000000003bfe9	subq	$0x50,%rsp
000000000003bfed	movq	%rdx,%r14
000000000003bff0	movq	%rdi,0xd8(%rbp)
000000000003bff4	movq	%rsi,0xd0(%rbp)
000000000003bff8	testq	%r14,%r14
000000000003bffb	jne	0x0003c063
000000000003bffd	movq	0x0006c9bc(%rip),%rdi
000000000003c004	leaq	0x0006c325(%rip),%rsi
000000000003c00b	call	*0x0006c31f(%rip)
000000000003c011	movq	%rax,%rdi
000000000003c014	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000003c019	leaq	0xd8(%rbp),%rdi
000000000003c01d	leaq	0xd0(%rbp),%rsi
000000000003c021	leaq	0x00024ad6(%rip),%rdx
000000000003c028	leaq	0x00024b05(%rip),%rcx
000000000003c02f	leaq	0x00073982(%rip),%r9
000000000003c036	leaq	0x00022a8c(%rip),%r8
000000000003c03d	leaq	0x00022a92(%rip),%rbx
000000000003c044	movq	%rbx,0x18(%rsp)
000000000003c049	leaq	0x000737e8(%rip),%rbx
000000000003c050	movq	%rbx,0x10(%rsp)
000000000003c055	movq	%rax,0x08(%rsp)
000000000003c05a	movq	%r8,(%rsp)
000000000003c05e	jmp	0x0003c10e
000000000003c063	movq	0x0006c956(%rip),%rdi
000000000003c06a	leaq	0x0006c2bf(%rip),%rsi
000000000003c071	call	*0x0006c2b9(%rip)
000000000003c077	leaq	0x0006c2c2(%rip),%rsi
000000000003c07e	movq	%r14,%rdi
000000000003c081	movq	%rax,%rdx
000000000003c084	call	*0x0006c2b6(%rip)
000000000003c08a	testb	%al,%al
000000000003c08c	movq	%r14,%rbx
000000000003c08f	jne	0x0003c11e
000000000003c095	movq	0x0006c924(%rip),%rdi
000000000003c09c	leaq	0x0006c28d(%rip),%rsi
000000000003c0a3	call	*0x0006c287(%rip)
000000000003c0a9	movq	%rax,%rdi
000000000003c0ac	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000003c0b1	movq	%rax,%rbx
000000000003c0b4	movq	0x00068ba5(%rip),%rsi
000000000003c0bb	movq	%r14,%rdi
000000000003c0be	call	*0x00048014(%rip)
000000000003c0c4	leaq	0x0007376d(%rip),%r8
000000000003c0cb	leaq	0x00024af1(%rip),%r9
000000000003c0d2	leaq	0xd8(%rbp),%rdi
000000000003c0d6	leaq	0xd0(%rbp),%rsi
000000000003c0da	leaq	0x00024a1d(%rip),%rdx
000000000003c0e1	leaq	0x00024a4c(%rip),%rcx
000000000003c0e8	movq	%r9,0x20(%rsp)
000000000003c0ed	leaq	0x000738e4(%rip),%r9
000000000003c0f4	movq	%r8,0x18(%rsp)
000000000003c0f9	movq	%rax,0x10(%rsp)
000000000003c0fe	leaq	0x000229c4(%rip),%rax
000000000003c105	movq	%rbx,0x08(%rsp)
000000000003c10a	movq	%rax,(%rsp)
000000000003c10e	movl	$0x00000021,%r8d
000000000003c114	xorb	%al,%al
000000000003c116	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000003c11b	movq	%r14,%rbx
000000000003c11e	movq	0x0006a78b(%rip),%rsi
000000000003c125	movq	%rbx,%rdi
000000000003c128	call	*0x00047faa(%rip)
000000000003c12e	movq	0x0006c76b(%rip),%r15
000000000003c135	testb	%al,%al
000000000003c137	je	0x0003c161
000000000003c139	movq	0x0006a778(%rip),%rsi
000000000003c140	movq	0x00047f91(%rip),%r12
000000000003c147	movq	%rbx,%rdi
000000000003c14a	call	*%r12
000000000003c14d	movq	0x00069e64(%rip),%rsi
000000000003c154	movq	%r15,%rdi
000000000003c157	xorl	%edx,%edx
000000000003c159	movq	%rax,%rcx
000000000003c15c	call	*%r12
000000000003c15f	jmp	0x0003c175
000000000003c161	movq	0x00069e50(%rip),%rsi
000000000003c168	movq	%r15,%rdi
000000000003c16b	xorl	%edx,%edx
000000000003c16d	xorl	%ecx,%ecx
000000000003c16f	call	*0x00047f63(%rip)
000000000003c175	movq	0x00069dbc(%rip),%rsi
000000000003c17c	movq	0xd8(%rbp),%rdi
000000000003c180	movq	%rax,%rdx
000000000003c183	call	*0x00047f4f(%rip)
000000000003c189	movq	0xd8(%rbp),%rax
000000000003c18d	movq	%rax,0xc0(%rbp)
000000000003c191	movq	0x0006cda8(%rip),%rax
000000000003c198	movq	%rax,0xc8(%rbp)
000000000003c19c	leaq	0xc0(%rbp),%rdi
000000000003c1a0	movq	0x00069db1(%rip),%rsi
000000000003c1a7	movq	%r14,%rdx
000000000003c1aa	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000003c1af	addq	$0x50,%rsp
000000000003c1b3	popq	%rbx
000000000003c1b4	popq	%r12
000000000003c1b6	popq	%r14
000000000003c1b8	popq	%r15
000000000003c1ba	popq	%rbp
000000000003c1bb	ret
-[PBXGDB_ObjCDynamicTypeOperation perform]:
000000000003c1bc	pushq	%rbp
000000000003c1bd	movq	%rsp,%rbp
000000000003c1c0	pushq	%r14
000000000003c1c2	pushq	%rbx
000000000003c1c3	movq	%rdi,%r14
000000000003c1c6	movq	0x0006c7f3(%rip),%rdi
000000000003c1cd	leaq	0x0006c10c(%rip),%rsi
000000000003c1d4	call	*0x0006c106(%rip)
000000000003c1da	movq	0x0006888f(%rip),%rsi
000000000003c1e1	movq	%rax,%rdi
000000000003c1e4	call	*0x00047eee(%rip)
000000000003c1ea	movq	%rax,%rbx
000000000003c1ed	movq	0x0006a6cc(%rip),%rsi
000000000003c1f4	movq	%r14,%rdi
000000000003c1f7	call	*0x00047edb(%rip)
000000000003c1fd	movq	0x0006a6c4(%rip),%rsi
000000000003c204	movq	%rbx,%rdi
000000000003c207	movq	%rax,%rdx
000000000003c20a	call	*0x00047ec8(%rip)
000000000003c210	movq	0x00069dc9(%rip),%rsi
000000000003c217	movq	%r14,%rdi
000000000003c21a	movq	%rbx,%rdx
000000000003c21d	movq	0x00047eb4(%rip),%rax
000000000003c224	popq	%rbx
000000000003c225	popq	%r14
000000000003c227	popq	%rbp
000000000003c228	jmp	*%rax
-[PBXGDB_ObjCDynamicVerifySequence dealloc]:
000000000003c22a	pushq	%rbp
000000000003c22b	movq	%rsp,%rbp
000000000003c22e	pushq	%rbx
000000000003c22f	pushq	%rax
000000000003c230	movq	%rdi,%rbx
000000000003c233	movq	0x0006a68e(%rip),%rsi
000000000003c23a	xorl	%edx,%edx
000000000003c23c	call	*0x00047e96(%rip)
000000000003c242	movq	0x0006a687(%rip),%rsi
000000000003c249	movq	%rbx,%rdi
000000000003c24c	xorl	%edx,%edx
000000000003c24e	call	*0x00047e84(%rip)
000000000003c254	movq	0x0006a67d(%rip),%rsi
000000000003c25b	movq	%rbx,%rdi
000000000003c25e	xorl	%edx,%edx
000000000003c260	movq	0x00047e71(%rip),%rax
000000000003c267	addq	$0x08,%rsp
000000000003c26b	popq	%rbx
000000000003c26c	popq	%rbp
000000000003c26d	jmp	*%rax
-[PBXGDB_ObjCDynamicVerifySequence setObjectAddressString:]:
000000000003c26f	pushq	%rbp
000000000003c270	movq	%rsp,%rbp
000000000003c273	movq	%rdx,%rax
000000000003c276	movq	%rdi,%rcx
000000000003c279	movq	0x00072c80(%rip),%rdx
000000000003c280	cmpq	%rax,(%rcx,%rdx)
000000000003c284	jne	0x0003c288
000000000003c286	popq	%rbp
000000000003c287	ret
000000000003c288	addq	%rcx,%rdx
000000000003c28b	subq	%rcx,%rdx
000000000003c28e	movq	%rax,%rdi
000000000003c291	movq	%rcx,%rsi
000000000003c294	popq	%rbp
000000000003c295	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_ObjCDynamicVerifySequence objectAddressString]:
000000000003c29a	pushq	%rbp
000000000003c29b	movq	%rsp,%rbp
000000000003c29e	movq	0x00072c5b(%rip),%rax
000000000003c2a5	movq	(%rdi,%rax),%rax
000000000003c2a9	popq	%rbp
000000000003c2aa	ret
-[PBXGDB_ObjCDynamicVerifySequence setObjectIsValid:]:
000000000003c2ab	pushq	%rbp
000000000003c2ac	movq	%rsp,%rbp
000000000003c2af	movq	0x00072c52(%rip),%rax
000000000003c2b6	movb	%dl,(%rdi,%rax)
000000000003c2b9	popq	%rbp
000000000003c2ba	ret
-[PBXGDB_ObjCDynamicVerifySequence objectIsValid]:
000000000003c2bb	pushq	%rbp
000000000003c2bc	movq	%rsp,%rbp
000000000003c2bf	movq	0x00072c42(%rip),%rax
000000000003c2c6	movsbl	(%rdi,%rax),%eax
000000000003c2ca	popq	%rbp
000000000003c2cb	ret
-[PBXGDB_ObjCDynamicVerifySequence setDynamicTypeOfObject:]:
000000000003c2cc	pushq	%rbp
000000000003c2cd	movq	%rsp,%rbp
000000000003c2d0	movq	%rdx,%rax
000000000003c2d3	movq	%rdi,%rcx
000000000003c2d6	movq	0x00072c33(%rip),%rdx
000000000003c2dd	cmpq	%rax,(%rcx,%rdx)
000000000003c2e1	jne	0x0003c2e5
000000000003c2e3	popq	%rbp
000000000003c2e4	ret
000000000003c2e5	addq	%rcx,%rdx
000000000003c2e8	subq	%rcx,%rdx
000000000003c2eb	movq	%rax,%rdi
000000000003c2ee	movq	%rcx,%rsi
000000000003c2f1	popq	%rbp
000000000003c2f2	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_ObjCDynamicVerifySequence dynamicTypeOfObject]:
000000000003c2f7	pushq	%rbp
000000000003c2f8	movq	%rsp,%rbp
000000000003c2fb	movq	0x00072c0e(%rip),%rax
000000000003c302	movq	(%rdi,%rax),%rax
000000000003c306	popq	%rbp
000000000003c307	ret
-[PBXGDB_ObjCDynamicVerifySequence setClassListBufferAddressString:]:
000000000003c308	pushq	%rbp
000000000003c309	movq	%rsp,%rbp
000000000003c30c	movq	%rdx,%rax
000000000003c30f	movq	%rdi,%rcx
000000000003c312	movq	0x00072bff(%rip),%rdx
000000000003c319	cmpq	%rax,(%rcx,%rdx)
000000000003c31d	jne	0x0003c321
000000000003c31f	popq	%rbp
000000000003c320	ret
000000000003c321	addq	%rcx,%rdx
000000000003c324	subq	%rcx,%rdx
000000000003c327	movq	%rax,%rdi
000000000003c32a	movq	%rcx,%rsi
000000000003c32d	popq	%rbp
000000000003c32e	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_ObjCDynamicVerifySequence classListBufferAddressString]:
000000000003c333	pushq	%rbp
000000000003c334	movq	%rsp,%rbp
000000000003c337	movq	0x00072bda(%rip),%rax
000000000003c33e	movq	(%rdi,%rax),%rax
000000000003c342	popq	%rbp
000000000003c343	ret
-[PBXGDB_ObjCDynamicVerifySequence _charactersInObjCClassName]:
000000000003c344	pushq	%rbp
000000000003c345	movq	%rsp,%rbp
000000000003c348	movl	$0x00000400,%eax
000000000003c34d	popq	%rbp
000000000003c34e	ret
-[PBXGDB_ObjCDynamicVerifySequence handleErrorForMICommand:]:
000000000003c34f	pushq	%rbp
000000000003c350	movq	%rsp,%rbp
000000000003c353	pushq	%r14
000000000003c355	pushq	%rbx
000000000003c356	movq	%rdi,%rbx
000000000003c359	movq	0x0006a580(%rip),%rsi
000000000003c360	movq	0x00047d71(%rip),%r14
000000000003c367	xorl	%edx,%edx
000000000003c369	call	*%r14
000000000003c36c	movq	0x000687c5(%rip),%rsi
000000000003c373	movq	%rbx,%rdi
000000000003c376	call	*%r14
000000000003c379	movl	$0x00000001,%eax
000000000003c37e	popq	%rbx
000000000003c37f	popq	%r14
000000000003c381	popq	%rbp
000000000003c382	ret
-[PBXGDB_ObjCDynamicVerifySequence _gotClassListData:]:
000000000003c383	pushq	%rbp
000000000003c384	movq	%rsp,%rbp
000000000003c387	pushq	%r15
000000000003c389	pushq	%r14
000000000003c38b	pushq	%r13
000000000003c38d	pushq	%r12
000000000003c38f	pushq	%rbx
000000000003c390	subq	$0x68,%rsp
000000000003c394	movq	%rdx,%r14
000000000003c397	movq	%rdi,0xd0(%rbp)
000000000003c39b	movq	%rsi,0xc8(%rbp)
000000000003c39f	testq	%r14,%r14
000000000003c3a2	jne	0x0003c40a
000000000003c3a4	movq	0x0006c4fd(%rip),%rdi
000000000003c3ab	leaq	0x0006bf7e(%rip),%rsi
000000000003c3b2	call	*0x0006bf78(%rip)
000000000003c3b8	movq	%rax,%rdi
000000000003c3bb	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000003c3c0	leaq	0xd0(%rbp),%rdi
000000000003c3c4	leaq	0xc8(%rbp),%rsi
000000000003c3c8	leaq	0x00024840(%rip),%rdx
000000000003c3cf	leaq	0x00024870(%rip),%rcx
000000000003c3d6	leaq	0x000735db(%rip),%r9
000000000003c3dd	leaq	0x0002171c(%rip),%r8
000000000003c3e4	leaq	0x00021719(%rip),%rbx
000000000003c3eb	movq	%rbx,0x18(%rsp)
000000000003c3f0	leaq	0x00073441(%rip),%rbx
000000000003c3f7	movq	%rbx,0x10(%rsp)
000000000003c3fc	movq	%rax,0x08(%rsp)
000000000003c401	movq	%r8,(%rsp)
000000000003c405	jmp	0x0003c4b2
000000000003c40a	movq	0x0006c497(%rip),%rdi
000000000003c411	leaq	0x0006bf18(%rip),%rsi
000000000003c418	call	*0x0006bf12(%rip)
000000000003c41e	leaq	0x0006bf1b(%rip),%rsi
000000000003c425	movq	%r14,%rdi
000000000003c428	movq	%rax,%rdx
000000000003c42b	call	*0x0006bf0f(%rip)
000000000003c431	testb	%al,%al
000000000003c433	jne	0x0003c4bf
000000000003c439	movq	0x0006c468(%rip),%rdi
000000000003c440	leaq	0x0006bee9(%rip),%rsi
000000000003c447	call	*0x0006bee3(%rip)
000000000003c44d	movq	%rax,%rdi
000000000003c450	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000003c455	movq	%rax,%rbx
000000000003c458	movq	0x00068801(%rip),%rsi
000000000003c45f	movq	%r14,%rdi
000000000003c462	call	*0x00047c70(%rip)
000000000003c468	leaq	0x000733c9(%rip),%r8
000000000003c46f	leaq	0x00022874(%rip),%r9
000000000003c476	leaq	0xd0(%rbp),%rdi
000000000003c47a	leaq	0xc8(%rbp),%rsi
000000000003c47e	leaq	0x0002478a(%rip),%rdx
000000000003c485	leaq	0x000247ba(%rip),%rcx
000000000003c48c	movq	%r9,0x20(%rsp)
000000000003c491	leaq	0x00073540(%rip),%r9
000000000003c498	movq	%r8,0x18(%rsp)
000000000003c49d	movq	%rax,0x10(%rsp)
000000000003c4a2	leaq	0x00021657(%rip),%rax
000000000003c4a9	movq	%rbx,0x08(%rsp)
000000000003c4ae	movq	%rax,(%rsp)
000000000003c4b2	movl	$0x00000060,%r8d
000000000003c4b8	xorb	%al,%al
000000000003c4ba	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000003c4bf	movq	0x00069b62(%rip),%rsi
000000000003c4c6	movq	%r14,%rdi
000000000003c4c9	call	*0x00047c09(%rip)
000000000003c4cf	testb	%al,%al
000000000003c4d1	je	0x0003c6b5
000000000003c4d7	movq	0x00069b52(%rip),%rsi
000000000003c4de	leaq	0xc7(%rbp),%rdx
000000000003c4e2	movq	%r14,%rdi
000000000003c4e5	call	*-[PBXLSLaunchSession terminationStatus](%rip)
000000000003c4eb	movq	%rax,%rbx
000000000003c4ee	cmpb	$0x00,0xc7(%rbp)
000000000003c4f2	je	0x0003c6b5
000000000003c4f8	movq	0x00068f31(%rip),%rsi
000000000003c4ff	movq	0x0006bf5a(%rip),%rdi
000000000003c506	movq	0x00047bcb(%rip),%r14
000000000003c50d	call	*%r14
000000000003c510	movq	%rax,%r15
000000000003c513	movq	0x000686f6(%rip),%rsi
000000000003c51a	movq	%rbx,%rdi
000000000003c51d	call	*%r14
000000000003c520	movq	%rax,%rbx
000000000003c523	movq	0x000729f6(%rip),%r12
000000000003c52a	movq	0xd0(%rbp),%rax
000000000003c52e	cmpq	$0x00,(%rax,%r12)
000000000003c533	je	0x0003c58b
000000000003c535	leaq	0x0006bdc4(%rip),%r13
000000000003c53c	movq	%rbx,%r14
000000000003c53f	movq	0x0006bf0a(%rip),%rdi
000000000003c546	movq	0x0006862b(%rip),%rsi
000000000003c54d	leaq	0x00077744(%rip),%rdx
000000000003c554	movq	%r14,%rcx
000000000003c557	xorb	%al,%al
000000000003c559	call	*0x00047b79(%rip)
000000000003c55f	movq	%r15,%rdi
000000000003c562	movq	%r13,%rsi
000000000003c565	movq	%rax,%rdx
000000000003c568	call	*0x0006bd92(%rip)
000000000003c56e	movq	%r14,%rdi
000000000003c571	callq	0x0004e710	; symbol stub for: _strlen
000000000003c576	leaq	0x01(%rax,%r14),%r14
000000000003c57b	movq	%r14,%rax
000000000003c57e	subq	%rbx,%rax
000000000003c581	movq	0xd0(%rbp),%rcx
000000000003c585	cmpq	(%rcx,%r12),%rax
000000000003c589	jb	0x0003c53f
000000000003c58b	leaq	0x0006bd7e(%rip),%rsi
000000000003c592	movq	%r15,%rdi
000000000003c595	call	*0x0006bd75(%rip)
000000000003c59b	testq	%rax,%rax
000000000003c59e	movq	%r15,%rbx
000000000003c5a1	movq	%rbx,0xa8(%rbp)
000000000003c5a5	je	0x0003c6b5
000000000003c5ab	leaq	0x0006bd5e(%rip),%rsi
000000000003c5b2	movq	%rbx,%rdi
000000000003c5b5	call	*0x0006bd55(%rip)
000000000003c5bb	movq	%rax,%r15
000000000003c5be	movq	%r15,0xb0(%rbp)
000000000003c5c2	movq	0x000684ef(%rip),%rsi
000000000003c5c9	movq	0xd0(%rbp),%rdi
000000000003c5cd	movq	0x00047b04(%rip),%r14
000000000003c5d4	call	*%r14
000000000003c5d7	movq	0x00069182(%rip),%rsi
000000000003c5de	movq	%rax,%rdi
000000000003c5e1	call	*%r14
000000000003c5e4	movq	%rax,%r14
000000000003c5e7	testq	%r15,%r15
000000000003c5ea	je	0x0003c69c
000000000003c5f0	xorl	%eax,%eax
000000000003c5f2	movq	%rax,%r12
000000000003c5f5	movq	%rax,0xb8(%rbp)
000000000003c5f9	movq	%rbx,%rdi
000000000003c5fc	leaq	0x0006bd1d(%rip),%rsi
000000000003c603	movq	%r12,%rdx
000000000003c606	call	*0x0006bd14(%rip)
000000000003c60c	movq	%rax,%rbx
000000000003c60f	movq	%r14,%rdi
000000000003c612	movq	0x0006997f(%rip),%rsi
000000000003c619	movq	%rbx,%rdx
000000000003c61c	xorl	%ecx,%ecx
000000000003c61e	call	*0x00047ab4(%rip)
000000000003c624	movq	%r14,%r13
000000000003c627	movq	%rax,%r14
000000000003c62a	testq	%r14,%r14
000000000003c62d	jne	0x0003c65c
000000000003c62f	movq	%r13,%rdi
000000000003c632	movq	0x00069137(%rip),%rsi
000000000003c639	movq	%rbx,%rdx
000000000003c63c	movq	0x00047a95(%rip),%r15
000000000003c643	call	*%r15
000000000003c646	movq	%rax,%r14
000000000003c649	movq	%r13,%rdi
000000000003c64c	movq	0x00069125(%rip),%rsi
000000000003c653	movq	%r14,%rdx
000000000003c656	movq	%rbx,%rcx
000000000003c659	call	*%r15
000000000003c65c	testq	%r12,%r12
000000000003c65f	movq	0xb8(%rbp),%rdx
000000000003c663	jne	0x0003c675
000000000003c665	movq	0xd0(%rbp),%rdi
000000000003c669	movq	0x0006a268(%rip),%rsi
000000000003c670	movq	%r14,%rdx
000000000003c673	jmp	0x0003c67f
000000000003c675	movq	%r14,%rdi
000000000003c678	movq	0x00069109(%rip),%rsi
000000000003c67f	call	*0x00047a53(%rip)
000000000003c685	incq	%r12
000000000003c688	cmpq	%r12,0xb0(%rbp)
000000000003c68c	movq	%r14,%rax
000000000003c68f	movq	0xa8(%rbp),%rbx
000000000003c693	movq	%r13,%r14
000000000003c696	jne	0x0003c5f5
000000000003c69c	movq	0x0006a23d(%rip),%rsi
000000000003c6a3	movq	0xd0(%rbp),%rdi
000000000003c6a7	movq	0x00047a2a(%rip),%rbx
000000000003c6ae	movl	$0x00000001,%edx
000000000003c6b3	jmp	0x0003c6c9
000000000003c6b5	movq	0x0006a224(%rip),%rsi
000000000003c6bc	movq	0xd0(%rbp),%rdi
000000000003c6c0	movq	0x00047a11(%rip),%rbx
000000000003c6c7	xorl	%edx,%edx
000000000003c6c9	call	*%rbx
000000000003c6cb	movq	0x00068466(%rip),%rsi
000000000003c6d2	movq	0xd0(%rbp),%rdi
000000000003c6d6	call	*%rbx
000000000003c6d8	addq	$0x68,%rsp
000000000003c6dc	popq	%rbx
000000000003c6dd	popq	%r12
000000000003c6df	popq	%r13
000000000003c6e1	popq	%r14
000000000003c6e3	popq	%r15
000000000003c6e5	popq	%rbp
000000000003c6e6	ret
-[PBXGDB_ObjCDynamicVerifySequence _gotClassListCount:]:
000000000003c6e7	pushq	%rbp
000000000003c6e8	movq	%rsp,%rbp
000000000003c6eb	pushq	%r15
000000000003c6ed	pushq	%r14
000000000003c6ef	pushq	%r12
000000000003c6f1	pushq	%rbx
000000000003c6f2	subq	$0x40,%rsp
000000000003c6f6	movq	%rdx,%r14
000000000003c6f9	movq	%rdi,0xd8(%rbp)
000000000003c6fd	movq	%rsi,0xd0(%rbp)
000000000003c701	testq	%r14,%r14
000000000003c704	jne	0x0003c76c
000000000003c706	movq	0x0006c19b(%rip),%rdi
000000000003c70d	leaq	0x0006bc1c(%rip),%rsi
000000000003c714	call	*0x0006bc16(%rip)
000000000003c71a	movq	%rax,%rdi
000000000003c71d	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000003c722	leaq	0xd8(%rbp),%rdi
000000000003c726	leaq	0xd0(%rbp),%rsi
000000000003c72a	leaq	0x000245aa(%rip),%rdx
000000000003c731	leaq	0x0002450e(%rip),%rcx
000000000003c738	leaq	0x00073279(%rip),%r9
000000000003c73f	leaq	0x000213ba(%rip),%r8
000000000003c746	leaq	0x000213b7(%rip),%rbx
000000000003c74d	movq	%rbx,0x18(%rsp)
000000000003c752	leaq	0x000730df(%rip),%rbx
000000000003c759	movq	%rbx,0x10(%rsp)
000000000003c75e	movq	%rax,0x08(%rsp)
000000000003c763	movq	%r8,(%rsp)
000000000003c767	jmp	0x0003c814
000000000003c76c	movq	0x0006c135(%rip),%rdi
000000000003c773	leaq	0x0006bbb6(%rip),%rsi
000000000003c77a	call	*0x0006bbb0(%rip)
000000000003c780	leaq	0x0006bbb9(%rip),%rsi
000000000003c787	movq	%r14,%rdi
000000000003c78a	movq	%rax,%rdx
000000000003c78d	call	*0x0006bbad(%rip)
000000000003c793	testb	%al,%al
000000000003c795	jne	0x0003c821
000000000003c79b	movq	0x0006c106(%rip),%rdi
000000000003c7a2	leaq	0x0006bb87(%rip),%rsi
000000000003c7a9	call	*0x0006bb81(%rip)
000000000003c7af	movq	%rax,%rdi
000000000003c7b2	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000003c7b7	movq	%rax,%rbx
000000000003c7ba	movq	0x0006849f(%rip),%rsi
000000000003c7c1	movq	%r14,%rdi
000000000003c7c4	call	*0x0004790e(%rip)
000000000003c7ca	leaq	0x00073067(%rip),%r8
000000000003c7d1	leaq	0x00022512(%rip),%r9
000000000003c7d8	leaq	0xd8(%rbp),%rdi
000000000003c7dc	leaq	0xd0(%rbp),%rsi
000000000003c7e0	leaq	0x000244f4(%rip),%rdx
000000000003c7e7	leaq	0x00024458(%rip),%rcx
000000000003c7ee	movq	%r9,0x20(%rsp)
000000000003c7f3	leaq	0x000731de(%rip),%r9
000000000003c7fa	movq	%r8,0x18(%rsp)
000000000003c7ff	movq	%rax,0x10(%rsp)
000000000003c804	leaq	0x000212f5(%rip),%rax
000000000003c80b	movq	%rbx,0x08(%rsp)
000000000003c810	movq	%rax,(%rsp)
000000000003c814	movl	$0x000000a1,%r8d
000000000003c81a	xorb	%al,%al
000000000003c81c	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000003c821	movq	0x00069800(%rip),%rsi
000000000003c828	movq	%r14,%rdi
000000000003c82b	call	*0x000478a7(%rip)
000000000003c831	testb	%al,%al
000000000003c833	je	0x0003c94a
000000000003c839	movq	0x000697f0(%rip),%rsi
000000000003c840	leaq	0xcf(%rbp),%rdx
000000000003c844	movq	%r14,%rdi
000000000003c847	call	*0x0004788b(%rip)
000000000003c84d	movq	%rax,%r15
000000000003c850	cmpb	$0x00,0xcf(%rbp)
000000000003c854	je	0x0003c94a
000000000003c85a	movq	0x0006bbef(%rip),%rbx
000000000003c861	movq	0x0006a080(%rip),%rsi
000000000003c868	movq	0xd8(%rbp),%rdi
000000000003c86c	movq	0x00047865(%rip),%r12
000000000003c873	call	*%r12
000000000003c876	movq	0x000682fb(%rip),%rsi
000000000003c87d	leaq	0x00077434(%rip),%rdx
000000000003c884	movq	%rbx,%rdi
000000000003c887	movq	%rax,%rcx
000000000003c88a	xorb	%al,%al
000000000003c88c	call	*%r12
000000000003c88f	movq	%rax,%r14
000000000003c892	movq	0x00068377(%rip),%rsi
000000000003c899	movq	%r15,%rdi
000000000003c89c	call	*%r12
000000000003c89f	movl	(%rax),%eax
000000000003c8a1	movq	0x00072678(%rip),%rcx
000000000003c8a8	movq	0xd8(%rbp),%rdx
000000000003c8ac	movq	%rax,(%rdx,%rcx)
000000000003c8b0	movq	0x000681c9(%rip),%rsi
000000000003c8b7	movq	0x0006bfea(%rip),%rdi
000000000003c8be	call	*%r12
000000000003c8c1	movq	%rax,%rbx
000000000003c8c4	movq	0x000681bd(%rip),%rsi
000000000003c8cb	movq	0xd8(%rbp),%rdx
000000000003c8cf	movq	%rbx,%rdi
000000000003c8d2	call	*%r12
000000000003c8d5	movq	0x000681bc(%rip),%rsi
000000000003c8dc	movq	0x0006a00d(%rip),%rdx
000000000003c8e3	movq	%rbx,%rdi
000000000003c8e6	call	*%r12
000000000003c8e9	movq	0x00072630(%rip),%rax
000000000003c8f0	movq	0xd8(%rbp),%rcx
000000000003c8f4	movq	(%rcx,%rax),%rax
000000000003c8f8	movq	0x00069781(%rip),%rsi
000000000003c8ff	movq	%rax,(%rsp)
000000000003c903	movq	%rbx,%rdi
000000000003c906	movq	%r14,%rdx
000000000003c909	movl	$0x00000001,%ecx
000000000003c90e	movl	$0x00000001,%r8d
000000000003c914	movl	$0x00000001,%r9d
000000000003c91a	call	*%r12
000000000003c91d	movq	0x00068194(%rip),%rsi
000000000003c924	movq	0xd8(%rbp),%rdi
000000000003c928	call	*%r12
000000000003c92b	movq	0x0006818e(%rip),%rsi
000000000003c932	movq	%rax,%rdi
000000000003c935	call	*%r12
000000000003c938	movq	0x00068189(%rip),%rsi
000000000003c93f	movq	%rax,%rdi
000000000003c942	movq	%rbx,%rdx
000000000003c945	call	*%r12
000000000003c948	jmp	0x0003c96d
000000000003c94a	movq	0x00069f8f(%rip),%rsi
000000000003c951	movq	0xd8(%rbp),%rdi
000000000003c955	movq	0x0004777c(%rip),%rbx
000000000003c95c	xorl	%edx,%edx
000000000003c95e	call	*%rbx
000000000003c960	movq	0x000681d1(%rip),%rsi
000000000003c967	movq	0xd8(%rbp),%rdi
000000000003c96b	call	*%rbx
000000000003c96d	addq	$0x40,%rsp
000000000003c971	popq	%rbx
000000000003c972	popq	%r12
000000000003c974	popq	%r14
000000000003c976	popq	%r15
000000000003c978	popq	%rbp
000000000003c979	ret
-[PBXGDB_ObjCDynamicVerifySequence _gotObjCSuperClasses:]:
000000000003c97a	pushq	%rbp
000000000003c97b	movq	%rsp,%rbp
000000000003c97e	pushq	%r14
000000000003c980	pushq	%rbx
000000000003c981	subq	$0x40,%rsp
000000000003c985	movq	%rdx,%r14
000000000003c988	movq	%rdi,0xe8(%rbp)
000000000003c98c	movq	%rsi,0xe0(%rbp)
000000000003c990	testq	%r14,%r14
000000000003c993	jne	0x0003c9fb
000000000003c995	movq	0x0006bca4(%rip),%rdi
000000000003c99c	leaq	0x0006b98d(%rip),%rsi
000000000003c9a3	call	*0x0006b987(%rip)
000000000003c9a9	movq	%rax,%rdi
000000000003c9ac	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000003c9b1	leaq	0xe8(%rbp),%rdi
000000000003c9b5	leaq	0xe0(%rbp),%rsi
000000000003c9b9	leaq	0x00024358(%rip),%rdx
000000000003c9c0	leaq	0x0002427f(%rip),%rcx
000000000003c9c7	leaq	0x00072fea(%rip),%r9
000000000003c9ce	leaq	0x0002112b(%rip),%r8
000000000003c9d5	leaq	0x00021128(%rip),%rbx
000000000003c9dc	movq	%rbx,0x18(%rsp)
000000000003c9e1	leaq	0x00072e50(%rip),%rbx
000000000003c9e8	movq	%rbx,0x10(%rsp)
000000000003c9ed	movq	%rax,0x08(%rsp)
000000000003c9f2	movq	%r8,(%rsp)
000000000003c9f6	jmp	0x0003caa3
000000000003c9fb	movq	0x0006bc3e(%rip),%rdi
000000000003ca02	leaq	0x0006b927(%rip),%rsi
000000000003ca09	call	*0x0006b921(%rip)
000000000003ca0f	leaq	0x0006b92a(%rip),%rsi
000000000003ca16	movq	%r14,%rdi
000000000003ca19	movq	%rax,%rdx
000000000003ca1c	call	*0x0006b91e(%rip)
000000000003ca22	testb	%al,%al
000000000003ca24	jne	0x0003cab0
000000000003ca2a	movq	0x0006bc0f(%rip),%rdi
000000000003ca31	leaq	0x0006b8f8(%rip),%rsi
000000000003ca38	call	*0x0006b8f2(%rip)
000000000003ca3e	movq	%rax,%rdi
000000000003ca41	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000003ca46	movq	%rax,%rbx
000000000003ca49	movq	0x00068210(%rip),%rsi
000000000003ca50	movq	%r14,%rdi
000000000003ca53	call	*0x0004767f(%rip)
000000000003ca59	leaq	0x00072dd8(%rip),%r8
000000000003ca60	leaq	0x0002131a(%rip),%r9
000000000003ca67	leaq	0xe8(%rbp),%rdi
000000000003ca6b	leaq	0xe0(%rbp),%rsi
000000000003ca6f	leaq	0x000242a2(%rip),%rdx
000000000003ca76	leaq	0x000241c9(%rip),%rcx
000000000003ca7d	movq	%r9,0x20(%rsp)
000000000003ca82	leaq	0x00072f4f(%rip),%r9
000000000003ca89	movq	%r8,0x18(%rsp)
000000000003ca8e	movq	%rax,0x10(%rsp)
000000000003ca93	leaq	0x00021066(%rip),%rax
000000000003ca9a	movq	%rbx,0x08(%rsp)
000000000003ca9f	movq	%rax,(%rsp)
000000000003caa3	movl	$0x000000c7,%r8d
000000000003caa9	xorb	%al,%al
000000000003caab	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000003cab0	movq	0x00068051(%rip),%rsi
000000000003cab7	movq	%r14,%rdi
000000000003caba	call	*+[PBXLSDebuggingSystem localizedStringForStateExitedWithValue:](%rip)
000000000003cac0	movq	%rax,%rbx
000000000003cac3	testq	%rbx,%rbx
000000000003cac6	je	0x0003cafe
000000000003cac8	leaq	0x0006b891(%rip),%rsi
000000000003cacf	leaq	0x000747e2(%rip),%rdx
000000000003cad6	movq	%rbx,%rdi
000000000003cad9	call	*0x0006b881(%rip)
000000000003cadf	testb	%al,%al
000000000003cae1	jne	0x0003cafe
000000000003cae3	leaq	0x0006b876(%rip),%rsi
000000000003caea	leaq	0x00072fa7(%rip),%rdx
000000000003caf1	movq	%rbx,%rdi
000000000003caf4	call	*0x0006b866(%rip)
000000000003cafa	testb	%al,%al
000000000003cafc	je	0x0003cb26
000000000003cafe	movq	0x00069ddb(%rip),%rsi
000000000003cb05	movq	0xe8(%rbp),%rdi
000000000003cb09	movq	0x000475c8(%rip),%rbx
000000000003cb10	xorl	%edx,%edx
000000000003cb12	call	*%rbx
000000000003cb14	movq	0x0006801d(%rip),%rsi
000000000003cb1b	movq	0xe8(%rbp),%rdi
000000000003cb1f	call	*%rbx
000000000003cb21	jmp	0x0003cbd9
000000000003cb26	movq	0x00069da3(%rip),%rsi
000000000003cb2d	movq	0xe8(%rbp),%rdi
000000000003cb31	movq	0x000475a0(%rip),%r14
000000000003cb38	movq	%rbx,%rdx
000000000003cb3b	call	*%r14
000000000003cb3e	movq	0x00067f3b(%rip),%rsi
000000000003cb45	movq	0x0006bd5c(%rip),%rdi
000000000003cb4c	call	*%r14
000000000003cb4f	movq	%rax,%rbx
000000000003cb52	movq	0x00067f2f(%rip),%rsi
000000000003cb59	movq	0xe8(%rbp),%rdx
000000000003cb5d	movq	%rbx,%rdi
000000000003cb60	call	*%r14
000000000003cb63	movq	0x00067f2e(%rip),%rsi
000000000003cb6a	movq	0x00069d87(%rip),%rdx
000000000003cb71	movq	%rbx,%rdi
000000000003cb74	call	*%r14
000000000003cb77	movq	0x00069d6a(%rip),%rsi
000000000003cb7e	movq	0xe8(%rbp),%rdi
000000000003cb82	call	*%r14
000000000003cb85	movq	0x000694f4(%rip),%rsi
000000000003cb8c	movq	$0x00000001,(%rsp)
000000000003cb94	movq	%rbx,%rdi
000000000003cb97	movq	%rax,%rdx
000000000003cb9a	movl	$0x00000001,%ecx
000000000003cb9f	movl	$0x00000004,%r8d
000000000003cba5	movl	$0x00000001,%r9d
000000000003cbab	call	*%r14
000000000003cbae	movq	0x00067f03(%rip),%rsi
000000000003cbb5	movq	0xe8(%rbp),%rdi
000000000003cbb9	call	*%r14
000000000003cbbc	movq	0x00067efd(%rip),%rsi
000000000003cbc3	movq	%rax,%rdi
000000000003cbc6	call	*%r14
000000000003cbc9	movq	0x00067ef8(%rip),%rsi
000000000003cbd0	movq	%rax,%rdi
000000000003cbd3	movq	%rbx,%rdx
000000000003cbd6	call	*%r14
000000000003cbd9	addq	$0x40,%rsp
000000000003cbdd	popq	%rbx
000000000003cbde	popq	%r14
000000000003cbe0	popq	%rbp
000000000003cbe1	ret
-[PBXGDB_ObjCDynamicVerifySequence _gotClassNameMemory:]:
000000000003cbe2	pushq	%rbp
000000000003cbe3	movq	%rsp,%rbp
000000000003cbe6	pushq	%r15
000000000003cbe8	pushq	%r14
000000000003cbea	pushq	%rbx
000000000003cbeb	subq	$0x48,%rsp
000000000003cbef	movq	%rdx,%r14
000000000003cbf2	movq	%rdi,0xe0(%rbp)
000000000003cbf6	movq	%rsi,0xd8(%rbp)
000000000003cbfa	testq	%r14,%r14
000000000003cbfd	jne	0x0003cc65
000000000003cbff	movq	0x0006bca2(%rip),%rdi
000000000003cc06	leaq	0x0006b723(%rip),%rsi
000000000003cc0d	call	*0x0006b71d(%rip)
000000000003cc13	movq	%rax,%rdi
000000000003cc16	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000003cc1b	leaq	0xe0(%rbp),%rdi
000000000003cc1f	leaq	0xd8(%rbp),%rsi
000000000003cc23	leaq	0x00024128(%rip),%rdx
000000000003cc2a	leaq	0x00024015(%rip),%rcx
000000000003cc31	leaq	0x00072d80(%rip),%r9
000000000003cc38	leaq	0x00020ec1(%rip),%r8
000000000003cc3f	leaq	0x00020ebe(%rip),%rbx
000000000003cc46	movq	%rbx,0x18(%rsp)
000000000003cc4b	leaq	0x00072be6(%rip),%rbx
000000000003cc52	movq	%rbx,0x10(%rsp)
000000000003cc57	movq	%rax,0x08(%rsp)
000000000003cc5c	movq	%r8,(%rsp)
000000000003cc60	jmp	0x0003cd0d
000000000003cc65	movq	0x0006bc3c(%rip),%rdi
000000000003cc6c	leaq	0x0006b6bd(%rip),%rsi
000000000003cc73	call	*0x0006b6b7(%rip)
000000000003cc79	leaq	0x0006b6c0(%rip),%rsi
000000000003cc80	movq	%r14,%rdi
000000000003cc83	movq	%rax,%rdx
000000000003cc86	call	*0x0006b6b4(%rip)
000000000003cc8c	testb	%al,%al
000000000003cc8e	jne	0x0003cd1a
000000000003cc94	movq	0x0006bc0d(%rip),%rdi
000000000003cc9b	leaq	0x0006b68e(%rip),%rsi
000000000003cca2	call	*0x0006b688(%rip)
000000000003cca8	movq	%rax,%rdi
000000000003ccab	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000003ccb0	movq	%rax,%rbx
000000000003ccb3	movq	0x00067fa6(%rip),%rsi
000000000003ccba	movq	%r14,%rdi
000000000003ccbd	call	*0x00047415(%rip)
000000000003ccc3	leaq	0x00072b6e(%rip),%r8
000000000003ccca	leaq	0x00022019(%rip),%r9
000000000003ccd1	leaq	0xe0(%rbp),%rdi
000000000003ccd5	leaq	0xd8(%rbp),%rsi
000000000003ccd9	leaq	0x00024072(%rip),%rdx
000000000003cce0	leaq	0x00023f5f(%rip),%rcx
000000000003cce7	movq	%r9,0x20(%rsp)
000000000003ccec	leaq	0x00072ce5(%rip),%r9
000000000003ccf3	movq	%r8,0x18(%rsp)
000000000003ccf8	movq	%rax,0x10(%rsp)
000000000003ccfd	leaq	0x00020dfc(%rip),%rax
000000000003cd04	movq	%rbx,0x08(%rsp)
000000000003cd09	movq	%rax,(%rsp)
000000000003cd0d	movl	$0x000000e7,%r8d
000000000003cd13	xorb	%al,%al
000000000003cd15	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000003cd1a	movq	0x00069307(%rip),%rsi
000000000003cd21	movq	%r14,%rdi
000000000003cd24	call	*0x000473ae(%rip)
000000000003cd2a	testb	%al,%al
000000000003cd2c	je	0x0003ced4
000000000003cd32	movq	0x000692f7(%rip),%rsi
000000000003cd39	leaq	0xd7(%rbp),%rdx
000000000003cd3d	movq	%r14,%rdi
000000000003cd40	call	*0x00047392(%rip)
000000000003cd46	cmpb	$0x00,0xd7(%rbp)
000000000003cd4a	je	0x0003ced4
000000000003cd50	movq	0x0006b6f9(%rip),%rbx
000000000003cd57	movq	0x00067eb2(%rip),%rsi
000000000003cd5e	movq	0x00047373(%rip),%r14
000000000003cd65	movq	%rax,%rdi
000000000003cd68	call	*%r14
000000000003cd6b	movq	0x00067e06(%rip),%rsi
000000000003cd72	leaq	0x00076f1f(%rip),%rdx
000000000003cd79	movq	%rbx,%rdi
000000000003cd7c	movq	%rax,%rcx
000000000003cd7f	xorb	%al,%al
000000000003cd81	call	*%r14
000000000003cd84	movq	%rax,%r14
000000000003cd87	movq	0xe0(%rbp),%rdi
000000000003cd8b	movq	0x00072196(%rip),%rax
000000000003cd92	cmpq	$0x00,(%rdi,%rax)
000000000003cd97	je	0x0003cdcb
000000000003cd99	movq	0x00067d18(%rip),%rsi
000000000003cda0	movq	0x00047331(%rip),%rbx
000000000003cda7	call	*%rbx
000000000003cda9	movq	0x00072178(%rip),%rcx
000000000003cdb0	movq	0xe0(%rbp),%rdx
000000000003cdb4	movq	(%rdx,%rcx),%rcx
000000000003cdb8	movq	0x00069b41(%rip),%rsi
000000000003cdbf	movq	%rax,%rdi
000000000003cdc2	movq	%r14,%rdx
000000000003cdc5	call	*%rbx
000000000003cdc7	movq	0xe0(%rbp),%rdi
000000000003cdcb	movq	0x00067ce6(%rip),%rsi
000000000003cdd2	movq	0x000472ff(%rip),%rbx
000000000003cdd9	call	*%rbx
000000000003cddb	movq	0x0006897e(%rip),%rsi
000000000003cde2	movq	%rax,%rdi
000000000003cde5	call	*%rbx
000000000003cde7	movq	0x000691aa(%rip),%rsi
000000000003cdee	movq	%rax,%rdi
000000000003cdf1	movq	%r14,%rdx
000000000003cdf4	xorl	%ecx,%ecx
000000000003cdf6	call	*%rbx
000000000003cdf8	testq	%rax,%rax
000000000003cdfb	je	0x0003ce29
000000000003cdfd	movq	0x00069ad4(%rip),%rsi
000000000003ce04	movq	0xe0(%rbp),%rdi
000000000003ce08	movq	0x000472c9(%rip),%rbx
000000000003ce0f	movq	%rax,%rdx
000000000003ce12	call	*%rbx
000000000003ce14	movq	0x00069ac5(%rip),%rsi
000000000003ce1b	movq	0xe0(%rbp),%rdi
000000000003ce1f	movl	$0x00000001,%edx
000000000003ce24	jmp	0x0003cee8
000000000003ce29	movq	0x00067c50(%rip),%rsi
000000000003ce30	movq	0x0006b809(%rip),%rdi
000000000003ce37	movq	0x0004729a(%rip),%r15
000000000003ce3e	call	*%r15
000000000003ce41	movq	%rax,%rbx
000000000003ce44	movq	0x00067c3d(%rip),%rsi
000000000003ce4b	movq	0xe0(%rbp),%rdx
000000000003ce4f	movq	%rbx,%rdi
000000000003ce52	call	*%r15
000000000003ce55	movq	0x00067c3c(%rip),%rsi
000000000003ce5c	movq	0x00069aa5(%rip),%rdx
000000000003ce63	movq	%rbx,%rdi
000000000003ce66	call	*%r15
000000000003ce69	movq	0x0006b5e0(%rip),%r14
000000000003ce70	movq	0x00069a49(%rip),%rsi
000000000003ce77	movq	0xe0(%rbp),%rdi
000000000003ce7b	call	*%r15
000000000003ce7e	leaq	0x00076e53(%rip),%rdx
000000000003ce85	movq	0x00067cec(%rip),%rsi
000000000003ce8c	movq	%r14,%rdi
000000000003ce8f	movq	%rax,%rcx
000000000003ce92	xorb	%al,%al
000000000003ce94	call	*%r15
000000000003ce97	movq	0x00068552(%rip),%rsi
000000000003ce9e	movq	%rbx,%rdi
000000000003cea1	movq	%rax,%rdx
000000000003cea4	call	*%r15
000000000003cea7	movq	0x00067c0a(%rip),%rsi
000000000003ceae	movq	0xe0(%rbp),%rdi
000000000003ceb2	call	*%r15
000000000003ceb5	movq	0x00067c04(%rip),%rsi
000000000003cebc	movq	%rax,%rdi
000000000003cebf	call	*%r15
000000000003cec2	movq	0x00067bff(%rip),%rsi
000000000003cec9	movq	%rax,%rdi
000000000003cecc	movq	%rbx,%rdx
000000000003cecf	call	*%r15
000000000003ced2	jmp	0x0003cef7
000000000003ced4	movq	0x00069a05(%rip),%rsi
000000000003cedb	movq	0xe0(%rbp),%rdi
000000000003cedf	movq	0x000471f2(%rip),%rbx
000000000003cee6	xorl	%edx,%edx
000000000003cee8	call	*%rbx
000000000003ceea	movq	0x00067c47(%rip),%rsi
000000000003cef1	movq	0xe0(%rbp),%rdi
000000000003cef5	call	*%rbx
000000000003cef7	addq	$0x48,%rsp
000000000003cefb	popq	%rbx
000000000003cefc	popq	%r14
000000000003cefe	popq	%r15
000000000003cf00	popq	%rbp
000000000003cf01	ret
-[PBXGDB_ObjCDynamicVerifySequence _gotObjCDynamicType:]:
000000000003cf02	pushq	%rbp
000000000003cf03	movq	%rsp,%rbp
000000000003cf06	pushq	%r15
000000000003cf08	pushq	%r14
000000000003cf0a	pushq	%rbx
000000000003cf0b	subq	$0x38,%rsp
000000000003cf0f	movq	%rdx,%r14
000000000003cf12	movq	%rdi,0xe0(%rbp)
000000000003cf16	movq	%rsi,0xd8(%rbp)
000000000003cf1a	testq	%r14,%r14
000000000003cf1d	jne	0x0003cf85
000000000003cf1f	movq	0x0006b71a(%rip),%rdi
000000000003cf26	leaq	0x0006b403(%rip),%rsi
000000000003cf2d	call	*0x0006b3fd(%rip)
000000000003cf33	movq	%rax,%rdi
000000000003cf36	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000003cf3b	leaq	0xe0(%rbp),%rdi
000000000003cf3f	leaq	0xd8(%rbp),%rsi
000000000003cf43	leaq	0x00023e73(%rip),%rdx
000000000003cf4a	leaq	0x00023cf5(%rip),%rcx
000000000003cf51	leaq	0x00072a60(%rip),%r9
000000000003cf58	leaq	0x00020ba1(%rip),%r8
000000000003cf5f	leaq	0x00020b9e(%rip),%rbx
000000000003cf66	movq	%rbx,0x18(%rsp)
000000000003cf6b	leaq	0x000728c6(%rip),%rbx
000000000003cf72	movq	%rbx,0x10(%rsp)
000000000003cf77	movq	%rax,0x08(%rsp)
000000000003cf7c	movq	%r8,(%rsp)
000000000003cf80	jmp	0x0003d02d
000000000003cf85	movq	0x0006b6b4(%rip),%rdi
000000000003cf8c	leaq	0x0006b39d(%rip),%rsi
000000000003cf93	call	*0x0006b397(%rip)
000000000003cf99	leaq	0x0006b3a0(%rip),%rsi
000000000003cfa0	movq	%r14,%rdi
000000000003cfa3	movq	%rax,%rdx
000000000003cfa6	call	*0x0006b394(%rip)
000000000003cfac	testb	%al,%al
000000000003cfae	jne	0x0003d03a
000000000003cfb4	movq	0x0006b685(%rip),%rdi
000000000003cfbb	leaq	0x0006b36e(%rip),%rsi
000000000003cfc2	call	*0x0006b368(%rip)
000000000003cfc8	movq	%rax,%rdi
000000000003cfcb	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000003cfd0	movq	%rax,%rbx
000000000003cfd3	movq	0x00067c86(%rip),%rsi
000000000003cfda	movq	%r14,%rdi
000000000003cfdd	call	*0x000470f5(%rip)
000000000003cfe3	leaq	0x0007284e(%rip),%r8
000000000003cfea	leaq	0x00020d90(%rip),%r9
000000000003cff1	leaq	0xe0(%rbp),%rdi
000000000003cff5	leaq	0xd8(%rbp),%rsi
000000000003cff9	leaq	0x00023dbd(%rip),%rdx
000000000003d000	leaq	0x00023c3f(%rip),%rcx
000000000003d007	movq	%r9,0x20(%rsp)
000000000003d00c	leaq	0x000729c5(%rip),%r9
000000000003d013	movq	%r8,0x18(%rsp)
000000000003d018	movq	%rax,0x10(%rsp)
000000000003d01d	leaq	0x00020adc(%rip),%rax
000000000003d024	movq	%rbx,0x08(%rsp)
000000000003d029	movq	%rax,(%rsp)
000000000003d02d	movl	$0x0000011d,%r8d
000000000003d033	xorb	%al,%al
000000000003d035	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000003d03a	movq	0x00067ac7(%rip),%rsi
000000000003d041	movq	%r14,%rdi
000000000003d044	call	*0x0004708e(%rip)
000000000003d04a	movq	%rax,%r14
000000000003d04d	testq	%r14,%r14
000000000003d050	je	0x0003d088
000000000003d052	leaq	0x0006b307(%rip),%rsi
000000000003d059	leaq	0x00074258(%rip),%rdx
000000000003d060	movq	%r14,%rdi
000000000003d063	call	*0x0006b2f7(%rip)
000000000003d069	testb	%al,%al
000000000003d06b	jne	0x0003d088
000000000003d06d	leaq	0x0006b2ec(%rip),%rsi
000000000003d074	leaq	0x00072a1d(%rip),%rdx
000000000003d07b	movq	%r14,%rdi
000000000003d07e	call	*0x0006b2dc(%rip)
000000000003d084	testb	%al,%al
000000000003d086	je	0x0003d0b0
000000000003d088	movq	0x00069851(%rip),%rsi
000000000003d08f	movq	0xe0(%rbp),%rdi
000000000003d093	movq	0x0004703e(%rip),%rbx
000000000003d09a	xorl	%edx,%edx
000000000003d09c	call	*%rbx
000000000003d09e	movq	0x00067a93(%rip),%rsi
000000000003d0a5	movq	0xe0(%rbp),%rdi
000000000003d0a9	call	*%rbx
000000000003d0ab	jmp	0x0003d1f3
000000000003d0b0	movq	0x00067a01(%rip),%rsi
000000000003d0b7	movq	0xe0(%rbp),%rdi
000000000003d0bb	movq	0x00047016(%rip),%rbx
000000000003d0c2	call	*%rbx
000000000003d0c4	movq	0x00069845(%rip),%rsi
000000000003d0cb	movq	%rax,%rdi
000000000003d0ce	movq	%r14,%rdx
000000000003d0d1	call	*%rbx
000000000003d0d3	movq	%rax,%rbx
000000000003d0d6	movq	0xe0(%rbp),%rsi
000000000003d0da	testq	%rbx,%rbx
000000000003d0dd	je	0x0003d146
000000000003d0df	movq	0x000679d2(%rip),%rax
000000000003d0e6	movq	0x00046feb(%rip),%r15
000000000003d0ed	movq	%rsi,%rdi
000000000003d0f0	movq	%rax,%rsi
000000000003d0f3	call	*%r15
000000000003d0f6	movq	0x00068663(%rip),%rsi
000000000003d0fd	movq	%rax,%rdi
000000000003d100	call	*%r15
000000000003d103	movq	0x00068e8e(%rip),%rsi
000000000003d10a	movq	%rax,%rdi
000000000003d10d	movq	%rbx,%rdx
000000000003d110	xorl	%ecx,%ecx
000000000003d112	call	*%r15
000000000003d115	testq	%rax,%rax
000000000003d118	je	0x0003d155
000000000003d11a	movq	0x000697b7(%rip),%rsi
000000000003d121	movq	0xe0(%rbp),%rdi
000000000003d125	movq	0x00046fac(%rip),%rbx
000000000003d12c	movq	%rax,%rdx
000000000003d12f	call	*%rbx
000000000003d131	movq	0x000697a8(%rip),%rsi
000000000003d138	movq	0xe0(%rbp),%rdi
000000000003d13c	movl	$0x00000001,%edx
000000000003d141	jmp	0x0003d09c
000000000003d146	movq	0x00071ddb(%rip),%rdx
000000000003d14d	movq	%r14,%rdi
000000000003d150	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000003d155	movq	0x00067924(%rip),%rsi
000000000003d15c	movq	0x0006b745(%rip),%rdi
000000000003d163	movq	0x00046f6e(%rip),%r15
000000000003d16a	call	*%r15
000000000003d16d	movq	%rax,%rbx
000000000003d170	movq	0x00067911(%rip),%rsi
000000000003d177	movq	0xe0(%rbp),%rdx
000000000003d17b	movq	%rbx,%rdi
000000000003d17e	call	*%r15
000000000003d181	movq	0x00067910(%rip),%rsi
000000000003d188	movq	0x00069789(%rip),%rdx
000000000003d18f	movq	%rbx,%rdi
000000000003d192	call	*%r15
000000000003d195	movq	0x00069784(%rip),%rsi
000000000003d19c	movq	0xe0(%rbp),%rdi
000000000003d1a0	call	*%r15
000000000003d1a3	movq	0x00068ed6(%rip),%rsi
000000000003d1aa	movq	%rax,(%rsp)
000000000003d1ae	movq	%rbx,%rdi
000000000003d1b1	movq	%r14,%rdx
000000000003d1b4	movl	$0x00000001,%ecx
000000000003d1b9	movl	$0x00000001,%r8d
000000000003d1bf	movl	$0x00000001,%r9d
000000000003d1c5	call	*%r15
000000000003d1c8	movq	0x000678e9(%rip),%rsi
000000000003d1cf	movq	0xe0(%rbp),%rdi
000000000003d1d3	call	*%r15
000000000003d1d6	movq	0x000678e3(%rip),%rsi
000000000003d1dd	movq	%rax,%rdi
000000000003d1e0	call	*%r15
000000000003d1e3	movq	0x000678de(%rip),%rsi
000000000003d1ea	movq	%rax,%rdi
000000000003d1ed	movq	%rbx,%rdx
000000000003d1f0	call	*%r15
000000000003d1f3	addq	$0x38,%rsp
000000000003d1f7	popq	%rbx
000000000003d1f8	popq	%r14
000000000003d1fa	popq	%r15
000000000003d1fc	popq	%rbp
000000000003d1fd	ret
-[PBXGDB_ObjCDynamicVerifySequence tryMappedWay]:
000000000003d1fe	pushq	%rbp
000000000003d1ff	movq	%rsp,%rbp
000000000003d202	xorl	%eax,%eax
000000000003d204	popq	%rbp
000000000003d205	ret
-[PBXGDB_ObjCDynamicVerifySequence needsEvaluationSafetyCheck]:
000000000003d206	pushq	%rbp
000000000003d207	movq	%rsp,%rbp
000000000003d20a	movl	$0x00000001,%eax
000000000003d20f	popq	%rbp
000000000003d210	ret
-[PBXGDB_ObjCDynamicVerifySequence safetyCheckFailed]:
000000000003d211	pushq	%rbp
000000000003d212	movq	%rsp,%rbp
000000000003d215	pushq	%rbx
000000000003d216	pushq	%rax
000000000003d217	movq	%rdi,%rbx
000000000003d21a	movq	0x000696bf(%rip),%rsi
000000000003d221	xorl	%edx,%edx
000000000003d223	call	*0x00046eaf(%rip)
000000000003d229	movq	0x00067908(%rip),%rsi
000000000003d230	movq	%rbx,%rdi
000000000003d233	movq	0x00046e9e(%rip),%rax
000000000003d23a	addq	$0x08,%rsp
000000000003d23e	popq	%rbx
000000000003d23f	popq	%rbp
000000000003d240	jmp	*%rax
-[PBXGDB_ObjCDynamicVerifySequence execute]:
000000000003d242	pushq	%rbp
000000000003d243	movq	%rsp,%rbp
000000000003d246	pushq	%r15
000000000003d248	pushq	%r14
000000000003d24a	pushq	%r12
000000000003d24c	pushq	%rbx
000000000003d24d	movq	%rdi,%rbx
000000000003d250	movq	0x00069669(%rip),%rsi
000000000003d257	call	*0x00046e7b(%rip)
000000000003d25d	movq	%rax,%r14
000000000003d260	leaq	0x0006b0f9(%rip),%rsi
000000000003d267	leaq	0x0007404a(%rip),%rdx
000000000003d26e	movq	%r14,%rdi
000000000003d271	call	*0x0006b0e9(%rip)
000000000003d277	testb	%al,%al
000000000003d279	jne	0x0003d302
000000000003d27f	leaq	0x0006b0da(%rip),%rsi
000000000003d286	leaq	0x0007280b(%rip),%rdx
000000000003d28d	movq	%r14,%rdi
000000000003d290	call	*0x0006b0ca(%rip)
000000000003d296	testb	%al,%al
000000000003d298	jne	0x0003d302
000000000003d29a	movq	0x00069687(%rip),%rsi
000000000003d2a1	movq	%rbx,%rdi
000000000003d2a4	call	*0x00046e2e(%rip)
000000000003d2aa	testb	%al,%al
000000000003d2ac	jne	0x0003d2ea
000000000003d2ae	movq	0x000686db(%rip),%rsi
000000000003d2b5	movq	%rbx,%rdi
000000000003d2b8	call	*0x00046e1a(%rip)
000000000003d2be	testb	%al,%al
000000000003d2c0	je	0x0003d302
000000000003d2c2	movq	0x000677ef(%rip),%rsi
000000000003d2c9	movq	0x00046e08(%rip),%r12
000000000003d2d0	movq	%rbx,%rdi
000000000003d2d3	call	*%r12
000000000003d2d6	movq	%rax,%r15
000000000003d2d9	movq	0x000686b8(%rip),%rsi
000000000003d2e0	movq	%r15,%rdi
000000000003d2e3	call	*%r12
000000000003d2e6	cmpb	$0x01,%al
000000000003d2e8	je	0x0003d32f
000000000003d2ea	movq	0x00067847(%rip),%rsi
000000000003d2f1	movq	%rbx,%rdi
000000000003d2f4	popq	%rbx
000000000003d2f5	popq	%r12
000000000003d2f7	popq	%r14
000000000003d2f9	popq	%r15
000000000003d2fb	popq	%rbp
000000000003d2fc	jmp	*0x00046dd6(%rip)
000000000003d302	movq	0x000695d7(%rip),%rsi
000000000003d309	movq	%rbx,%rdi
000000000003d30c	xorl	%edx,%edx
000000000003d30e	call	*0x00046dc4(%rip)
000000000003d314	movq	0x0006781d(%rip),%rsi
000000000003d31b	movq	%rbx,%rdi
000000000003d31e	movq	0x00046db3(%rip),%rax
000000000003d325	popq	%rbx
000000000003d326	popq	%r12
000000000003d328	popq	%r14
000000000003d32a	popq	%r15
000000000003d32c	popq	%rbp
000000000003d32d	jmp	*%rax
000000000003d32f	movq	0x0006774a(%rip),%rsi
000000000003d336	movq	0x0006b303(%rip),%rdi
000000000003d33d	call	*0x00046d95(%rip)
000000000003d343	movq	%rax,%r12
000000000003d346	movq	0x0006773b(%rip),%rsi
000000000003d34d	movq	%r12,%rdi
000000000003d350	movq	%rbx,%rdx
000000000003d353	call	*0x00046d7f(%rip)
000000000003d359	movq	0x00067738(%rip),%rsi
000000000003d360	movq	0x000695c9(%rip),%rdx
000000000003d367	movq	%r12,%rdi
000000000003d36a	call	*0x00046d68(%rip)
000000000003d370	leaq	0x00076981(%rip),%rdx
000000000003d377	movq	0x000677fa(%rip),%rsi
000000000003d37e	movq	0x0006b0cb(%rip),%rdi
000000000003d385	movq	%r14,%rcx
000000000003d388	xorb	%al,%al
000000000003d38a	call	*0x00046d48(%rip)
000000000003d390	movq	0x00068059(%rip),%rsi
000000000003d397	movq	%r12,%rdi
000000000003d39a	movq	%rax,%rdx
000000000003d39d	call	*0x00046d35(%rip)
000000000003d3a3	movq	0x00067716(%rip),%rsi
000000000003d3aa	movq	%r15,%rdi
000000000003d3ad	call	*0x00046d25(%rip)
000000000003d3b3	movq	0x0006770e(%rip),%rsi
000000000003d3ba	movq	%rax,%rdi
000000000003d3bd	movq	%r12,%rdx
000000000003d3c0	movq	0x00046d11(%rip),%rax
000000000003d3c7	popq	%rbx
000000000003d3c8	popq	%r12
000000000003d3ca	popq	%r14
000000000003d3cc	popq	%r15
000000000003d3ce	popq	%rbp
000000000003d3cf	jmp	*%rax
-[PBXGDB_OpResult dealloc]:
000000000003d3d1	pushq	%rbp
000000000003d3d2	movq	%rsp,%rbp
000000000003d3d5	pushq	%rbx
000000000003d3d6	pushq	%rax
000000000003d3d7	movq	%rdi,%rbx
000000000003d3da	movq	0x00071b4f(%rip),%rdx
000000000003d3e1	xorl	%edi,%edi
000000000003d3e3	movq	%rbx,%rsi
000000000003d3e6	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000003d3eb	movq	0x0006954e(%rip),%rsi
000000000003d3f2	movq	%rbx,%rdi
000000000003d3f5	xorl	%edx,%edx
000000000003d3f7	call	*0x00046cdb(%rip)
000000000003d3fd	movq	0x00067a54(%rip),%rsi
000000000003d404	movq	%rbx,%rdi
000000000003d407	xorl	%edx,%edx
000000000003d409	movq	0x00046cc8(%rip),%rax
000000000003d410	addq	$0x08,%rsp
000000000003d414	popq	%rbx
000000000003d415	popq	%rbp
000000000003d416	jmp	*%rax
-[PBXGDB_OpResult name]:
000000000003d418	pushq	%rbp
000000000003d419	movq	%rsp,%rbp
000000000003d41c	movq	0x00071b1d(%rip),%rax
000000000003d423	movq	(%rdi,%rax),%rax
000000000003d427	popq	%rbp
000000000003d428	ret
-[PBXGDB_PascalStringFetchResult processStringData]:
000000000003d429	pushq	%rbp
000000000003d42a	movq	%rsp,%rbp
000000000003d42d	pushq	%r15
000000000003d42f	pushq	%r14
000000000003d431	pushq	%r13
000000000003d433	pushq	%r12
000000000003d435	pushq	%rbx
000000000003d436	pushq	%rax
000000000003d437	movq	%rdi,%r12
000000000003d43a	movq	0x000688d7(%rip),%rsi
000000000003d441	call	*0x00046c91(%rip)
000000000003d447	movq	%rax,%rbx
000000000003d44a	leaq	0x0006ae9f(%rip),%rsi
000000000003d451	movq	%rbx,%rdi
000000000003d454	call	*0x0006ae96(%rip)
000000000003d45a	movq	%rax,%r14
000000000003d45d	movq	0x000677ac(%rip),%rsi
000000000003d464	movq	%rbx,%rdi
000000000003d467	call	*0x00046c6b(%rip)
000000000003d46d	movq	%rax,%r15
000000000003d470	movzbl	(%rdi),%r13d
000000000003d474	movq	0x000688a5(%rip),%rsi
000000000003d47b	movq	%r12,%rdi
000000000003d47e	call	*0x00046c54(%rip)
000000000003d484	movq	%rax,%rbx
000000000003d487	leaq	0x0007688a(%rip),%rdx
000000000003d48e	movq	0x0006887b(%rip),%rsi
000000000003d495	movq	%r12,%rdi
000000000003d498	call	*0x00046c3a(%rip)
000000000003d49e	movq	0x00068863(%rip),%rsi
000000000003d4a5	movq	%rbx,%rdi
000000000003d4a8	movq	%rax,%rdx
000000000003d4ab	call	*0x00046c27(%rip)
000000000003d4b1	cmpq	%r14,%r13
000000000003d4b4	leaq	0xff(%r14),%rbx
000000000003d4b8	cmovleq	%r13,%rbx
000000000003d4bc	leaq	0x01(%r15),%r14
000000000003d4c0	movq	0x00068859(%rip),%rsi
000000000003d4c7	movq	%r12,%rdi
000000000003d4ca	call	*0x00046c08(%rip)
000000000003d4d0	movq	0x00068851(%rip),%rsi
000000000003d4d7	movq	%r12,%rdi
000000000003d4da	movq	%r14,%rdx
000000000003d4dd	xorl	%ecx,%ecx
000000000003d4df	movq	%rbx,%r8
000000000003d4e2	movq	%rax,%r9
000000000003d4e5	movq	0x00046bec(%rip),%rax
000000000003d4ec	addq	$0x08,%rsp
000000000003d4f0	popq	%rbx
000000000003d4f1	popq	%r12
000000000003d4f3	popq	%r13
000000000003d4f5	popq	%r14
000000000003d4f7	popq	%r15
000000000003d4f9	popq	%rbp
000000000003d4fa	jmp	*%rax
-[PBXGDB_PascalStringValueFetchSequence stringBufferAddressValue]:
000000000003d4fc	pushq	%rbp
000000000003d4fd	movq	%rsp,%rbp
000000000003d500	xorl	%eax,%eax
000000000003d502	popq	%rbp
000000000003d503	ret
-[PBXGDB_PascalStringValueFetchSequence stringBufferAddressExpression]:
000000000003d504	pushq	%rbp
000000000003d505	movq	%rsp,%rbp
000000000003d508	pushq	%rbx
000000000003d509	pushq	%rax
000000000003d50a	movq	0x00068a57(%rip),%rsi
000000000003d511	movq	0x00046bc0(%rip),%rbx
000000000003d518	call	*%rbx
000000000003d51a	movq	0x00068a1f(%rip),%rsi
000000000003d521	movq	%rax,%rdi
000000000003d524	call	*%rbx
000000000003d526	movq	0x000680e3(%rip),%rsi
000000000003d52d	movq	%rax,%rdi
000000000003d530	call	*%rbx
000000000003d532	movq	%rax,%rbx
000000000003d535	xorl	%eax,%eax
000000000003d537	testq	%rbx,%rbx
000000000003d53a	je	0x0003d576
000000000003d53c	leaq	0x0006adad(%rip),%rsi
000000000003d543	movq	%rbx,%rdi
000000000003d546	call	*0x0006ada4(%rip)
000000000003d54c	movq	%rax,%rcx
000000000003d54f	xorl	%eax,%eax
000000000003d551	testq	%rcx,%rcx
000000000003d554	je	0x0003d576
000000000003d556	movq	0x0006761b(%rip),%rsi
000000000003d55d	movq	0x0006aeec(%rip),%rdi
000000000003d564	leaq	0x000767cd(%rip),%rdx
000000000003d56b	movq	%rbx,%rcx
000000000003d56e	xorb	%al,%al
000000000003d570	call	*0x00046b62(%rip)
000000000003d576	addq	$0x08,%rsp
000000000003d57a	popq	%rbx
000000000003d57b	popq	%rbp
000000000003d57c	ret
-[PBXGDB_PascalStringValueFetchSequence _gotPathExpression:]:
000000000003d57d	pushq	%rbp
000000000003d57e	movq	%rsp,%rbp
000000000003d581	pushq	%r15
000000000003d583	pushq	%r14
000000000003d585	pushq	%rbx
000000000003d586	subq	$0x38,%rsp
000000000003d58a	movq	%rdx,%r14
000000000003d58d	movq	%rdi,0xe0(%rbp)
000000000003d591	movq	%rsi,0xd8(%rbp)
000000000003d595	testq	%r14,%r14
000000000003d598	jne	0x0003d600
000000000003d59a	movq	0x0006b12f(%rip),%rdi
000000000003d5a1	leaq	0x0006ad88(%rip),%rsi
000000000003d5a8	call	*0x0006ad82(%rip)
000000000003d5ae	movq	%rax,%rdi
000000000003d5b1	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000003d5b6	leaq	0xe0(%rbp),%rdi
000000000003d5ba	leaq	0xd8(%rbp),%rsi
000000000003d5be	leaq	0x00023862(%rip),%rdx
000000000003d5c5	leaq	0x00023898(%rip),%rcx
000000000003d5cc	leaq	0x000723e5(%rip),%r9
000000000003d5d3	leaq	0x00020526(%rip),%r8
000000000003d5da	leaq	0x00020523(%rip),%rbx
000000000003d5e1	movq	%rbx,0x18(%rsp)
000000000003d5e6	leaq	0x0007224b(%rip),%rbx
000000000003d5ed	movq	%rbx,0x10(%rsp)
000000000003d5f2	movq	%rax,0x08(%rsp)
000000000003d5f7	movq	%r8,(%rsp)
000000000003d5fb	jmp	0x0003d6a8
000000000003d600	movq	0x0006b0c9(%rip),%rdi
000000000003d607	leaq	0x0006ad22(%rip),%rsi
000000000003d60e	call	*0x0006ad1c(%rip)
000000000003d614	leaq	0x0006ad25(%rip),%rsi
000000000003d61b	movq	%r14,%rdi
000000000003d61e	movq	%rax,%rdx
000000000003d621	call	*0x0006ad19(%rip)
000000000003d627	testb	%al,%al
000000000003d629	jne	0x0003d6b5
000000000003d62f	movq	0x0006b09a(%rip),%rdi
000000000003d636	leaq	0x0006acf3(%rip),%rsi
000000000003d63d	call	*0x0006aced(%rip)
000000000003d643	movq	%rax,%rdi
000000000003d646	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000003d64b	movq	%rax,%rbx
000000000003d64e	movq	0x0006760b(%rip),%rsi
000000000003d655	movq	%r14,%rdi
000000000003d658	call	*0x00046a7a(%rip)
000000000003d65e	leaq	0x000721d3(%rip),%r8
000000000003d665	leaq	0x000205db(%rip),%r9
000000000003d66c	leaq	0xe0(%rbp),%rdi
000000000003d670	leaq	0xd8(%rbp),%rsi
000000000003d674	leaq	0x000237ac(%rip),%rdx
000000000003d67b	leaq	0x000237e2(%rip),%rcx
000000000003d682	movq	%r9,0x20(%rsp)
000000000003d687	leaq	0x0007234a(%rip),%r9
000000000003d68e	movq	%r8,0x18(%rsp)
000000000003d693	movq	%rax,0x10(%rsp)
000000000003d698	leaq	0x00020461(%rip),%rax
000000000003d69f	movq	%rbx,0x08(%rsp)
000000000003d6a4	movq	%rax,(%rsp)
000000000003d6a8	movl	$0x0000002e,%r8d
000000000003d6ae	xorb	%al,%al
000000000003d6b0	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000003d6b5	movq	0x00067f4c(%rip),%rsi
000000000003d6bc	movq	0x00046a15(%rip),%r15
000000000003d6c3	movq	%r14,%rdi
000000000003d6c6	call	*%r15
000000000003d6c9	movq	%rax,%rbx
000000000003d6cc	movq	0x00067db5(%rip),%rsi
000000000003d6d3	movq	%r14,%rdi
000000000003d6d6	call	*%r15
000000000003d6d9	movq	0x00067fe0(%rip),%rsi
000000000003d6e0	movq	%rbx,%rdi
000000000003d6e3	movq	%rax,%rdx
000000000003d6e6	call	*%r15
000000000003d6e9	movq	0x00067fd8(%rip),%rsi
000000000003d6f0	movq	%rbx,%rdi
000000000003d6f3	movl	$0x00000002,%edx
000000000003d6f8	call	*%r15
000000000003d6fb	movq	0x00067efe(%rip),%rsi
000000000003d702	movq	%r14,%rdi
000000000003d705	xorl	%edx,%edx
000000000003d707	call	*%r15
000000000003d70a	movq	0x0006822f(%rip),%rsi
000000000003d711	movq	0xe0(%rbp),%rdi
000000000003d715	call	*%r15
000000000003d718	addq	$0x38,%rsp
000000000003d71c	popq	%rbx
000000000003d71d	popq	%r14
000000000003d71f	popq	%r15
000000000003d721	popq	%rbp
000000000003d722	ret
-[PBXGDB_PascalStringValueFetchSequence execute]:
000000000003d723	pushq	%rbp
000000000003d724	movq	%rsp,%rbp
000000000003d727	pushq	%r15
000000000003d729	pushq	%r14
000000000003d72b	pushq	%rbx
000000000003d72c	pushq	%rax
000000000003d72d	movq	%rdi,%r14
000000000003d730	movq	0x00068831(%rip),%rsi
000000000003d737	movq	0x0004699a(%rip),%rbx
000000000003d73e	call	*%rbx
000000000003d740	movq	0x000687f9(%rip),%rsi
000000000003d747	movq	%rax,%rdi
000000000003d74a	call	*%rbx
000000000003d74c	movq	%rax,%r15
000000000003d74f	leaq	0x0006abda(%rip),%rsi
000000000003d756	movq	0x0006aea3(%rip),%rdi
000000000003d75d	call	*0x0006abcd(%rip)
000000000003d763	leaq	0x0006abd6(%rip),%rsi
000000000003d76a	movq	%r15,%rdi
000000000003d76d	movq	%rax,%rdx
000000000003d770	call	*0x0006abca(%rip)
000000000003d776	testb	%al,%al
000000000003d778	jne	0x0003d78a
000000000003d77a	movq	0x0006821f(%rip),%rsi
000000000003d781	movq	%r14,%rdi
000000000003d784	call	*0x0004694e(%rip)
000000000003d78a	movq	0x00067e87(%rip),%rsi
000000000003d791	movq	%r15,%rdi
000000000003d794	call	*0x0004693e(%rip)
000000000003d79a	testl	%eax,%eax
000000000003d79c	jne	0x0003d859
000000000003d7a2	movq	0x000672d7(%rip),%rsi
000000000003d7a9	movq	0x0006af20(%rip),%rdi
000000000003d7b0	call	*0x00046922(%rip)
000000000003d7b6	movq	%rax,%rbx
000000000003d7b9	movq	0x00067f38(%rip),%rsi
000000000003d7c0	movq	%r15,%rdi
000000000003d7c3	call	*0x0004690f(%rip)
000000000003d7c9	movq	0x00067e88(%rip),%rsi
000000000003d7d0	movq	%rbx,%rdi
000000000003d7d3	movq	%rax,%rdx
000000000003d7d6	call	*0x000468fc(%rip)
000000000003d7dc	movq	0x000672a5(%rip),%rsi
000000000003d7e3	movq	%rbx,%rdi
000000000003d7e6	movq	%r14,%rdx
000000000003d7e9	call	*0x000468e9(%rip)
000000000003d7ef	movq	0x00067e0a(%rip),%rsi
000000000003d7f6	movq	%rbx,%rdi
000000000003d7f9	movq	%r15,%rdx
000000000003d7fc	call	*0x000468d6(%rip)
000000000003d802	movq	0x0006728f(%rip),%rsi
000000000003d809	movq	0x00068100(%rip),%rdx
000000000003d810	movq	%rbx,%rdi
000000000003d813	call	*-[PBXLSDebuggerAdaptor requestNewDataValueForExpression:addToContainerDataValue:locationSpecifier:](%rip)
000000000003d819	movq	0x00067298(%rip),%rsi
000000000003d820	movq	%r14,%rdi
000000000003d823	call	*0x000468af(%rip)
000000000003d829	movq	0x00067290(%rip),%rsi
000000000003d830	movq	%rax,%rdi
000000000003d833	call	*-[PBXLSDebuggerAdaptor newGlobalContainerDataValue](%rip)
000000000003d839	movq	0x00067288(%rip),%rsi
000000000003d840	movq	%rax,%rdi
000000000003d843	movq	%rbx,%rdx
000000000003d846	movq	0x0004688b(%rip),%rax
000000000003d84d	addq	$0x08,%rsp
000000000003d851	popq	%rbx
000000000003d852	popq	%r14
000000000003d854	popq	%r15
000000000003d856	popq	%rbp
000000000003d857	jmp	*%rax
000000000003d859	movq	0x000680e0(%rip),%rsi
000000000003d860	movq	%r14,%rdi
000000000003d863	addq	$0x08,%rsp
000000000003d867	popq	%rbx
000000000003d868	popq	%r14
000000000003d86a	popq	%r15
000000000003d86c	popq	%rbp
000000000003d86d	jmp	*0x00046865(%rip)
-[PBXGDB_RegisterDataValueSetupSequence timeOutPeriod]:
000000000003d873	pushq	%rbp
000000000003d874	movq	%rsp,%rbp
000000000003d877	xorps	%xmm0,%xmm0
000000000003d87a	popq	%rbp
000000000003d87b	ret
-[PBXGDB_RegisterDataValueSetupSequence init]:
000000000003d87c	pushq	%rbp
000000000003d87d	movq	%rsp,%rbp
000000000003d880	subq	$0x10,%rsp
000000000003d884	movq	%rdi,0xf0(%rbp)
000000000003d888	movq	0x0006b6c1(%rip),%rax
000000000003d88f	movq	%rax,0xf8(%rbp)
000000000003d893	movq	0x000671d6(%rip),%rsi
000000000003d89a	leaq	0xf0(%rbp),%rdi
000000000003d89e	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000003d8a3	testq	%rax,%rax
000000000003d8a6	je	0x0003d8b6
000000000003d8a8	leaq	0x00070f81(%rip),%rcx
000000000003d8af	movq	(%rcx),%rcx
000000000003d8b2	movb	$0x00,(%rax,%rcx)
000000000003d8b6	addq	$0x10,%rsp
000000000003d8ba	popq	%rbp
000000000003d8bb	ret
-[PBXGDB_RegisterDataValueSetupSequence gotRegisterNames:]:
000000000003d8bc	pushq	%rbp
000000000003d8bd	movq	%rsp,%rbp
000000000003d8c0	pushq	%r15
000000000003d8c2	pushq	%r14
000000000003d8c4	pushq	%rbx
000000000003d8c5	pushq	%rax
000000000003d8c6	movq	%rdi,%rbx
000000000003d8c9	testq	%rdx,%rdx
000000000003d8cc	jne	0x0003d8e8
000000000003d8ce	movq	0x00067263(%rip),%rsi
000000000003d8d5	movq	%rbx,%rdi
000000000003d8d8	addq	$0x08,%rsp
000000000003d8dc	popq	%rbx
000000000003d8dd	popq	%r14
000000000003d8df	popq	%r15
000000000003d8e1	popq	%rbp
000000000003d8e2	jmp	*0x000467f0(%rip)
000000000003d8e8	movq	0x00069061(%rip),%rsi
000000000003d8ef	movq	%rdx,%rdi
000000000003d8f2	call	*0x000467e0(%rip)
000000000003d8f8	movq	%rax,%r14
000000000003d8fb	testq	%r14,%r14
000000000003d8fe	je	0x0003d8ce
000000000003d900	leaq	0x0006aa09(%rip),%rsi
000000000003d907	movq	%r14,%rdi
000000000003d90a	call	*0x0006aa00(%rip)
000000000003d910	testq	%rax,%rax
000000000003d913	je	0x0003d8ce
000000000003d915	movq	0x0006719c(%rip),%rsi
000000000003d91c	movq	0x000467b5(%rip),%r15
000000000003d923	movq	%rbx,%rdi
000000000003d926	call	*%r15
000000000003d929	movq	0x00069028(%rip),%rsi
000000000003d930	movq	%rax,%rdi
000000000003d933	movq	%r14,%rdx
000000000003d936	call	*%r15
000000000003d939	movq	0x00071608(%rip),%rax
000000000003d940	cmpq	$0x00,(%rbx,%rax)
000000000003d945	je	0x0003d8ce
000000000003d947	movq	0x00069012(%rip),%rsi
000000000003d94e	jmp	0x0003d8d5
-[PBXGDB_RegisterDataValueSetupSequence fetchRegistersForParentDV]:
000000000003d950	pushq	%rbp
000000000003d951	movq	%rsp,%rbp
000000000003d954	pushq	%r15
000000000003d956	pushq	%r14
000000000003d958	pushq	%r13
000000000003d95a	pushq	%r12
000000000003d95c	pushq	%rbx
000000000003d95d	pushq	%rax
000000000003d95e	movq	%rdi,%rbx
000000000003d961	movq	0x00067150(%rip),%rsi
000000000003d968	movq	0x00046769(%rip),%r15
000000000003d96f	call	*%r15
000000000003d972	movq	%rax,%r14
000000000003d975	movq	0x000715cc(%rip),%rax
000000000003d97c	movq	(%rbx,%rax),%rdi
000000000003d980	movq	0x00067ae9(%rip),%rsi
000000000003d987	call	*%r15
000000000003d98a	movq	0x00068fd7(%rip),%rsi
000000000003d991	movq	%r14,%rdi
000000000003d994	movq	%rax,%rdx
000000000003d997	call	*%r15
000000000003d99a	movq	0x0006714f(%rip),%rsi
000000000003d9a1	movq	%rax,%rdi
000000000003d9a4	call	*%r15
000000000003d9a7	movq	%rax,%r14
000000000003d9aa	movq	0x0007159f(%rip),%rax
000000000003d9b1	movq	$0x00000000,(%rbx,%rax)
000000000003d9b9	movq	0x00067138(%rip),%rsi
000000000003d9c0	movq	%r14,%rdi
000000000003d9c3	call	*%r15
000000000003d9c6	movq	%rax,%r15
000000000003d9c9	testq	%r15,%r15
000000000003d9cc	je	0x0003da74
000000000003d9d2	movq	0x000466ff(%rip),%r13
000000000003d9d9	movq	0x00071570(%rip),%rax
000000000003d9e0	incq	(%rbx,%rax)
000000000003d9e4	movq	0x0006aca5(%rip),%rdi
000000000003d9eb	movq	0x0006708e(%rip),%rsi
000000000003d9f2	call	*%r13
000000000003d9f5	movq	%rax,%r12
000000000003d9f8	movq	0x0006aa51(%rip),%rdi
000000000003d9ff	movq	0x00067172(%rip),%rsi
000000000003da06	leaq	0x0007634b(%rip),%rdx
000000000003da0d	movq	%r15,%rcx
000000000003da10	xorb	%al,%al
000000000003da12	call	*%r13
000000000003da15	movq	%r12,%rdi
000000000003da18	movq	0x00067c11(%rip),%rsi
000000000003da1f	movq	%rax,%rdx
000000000003da22	xorl	%ecx,%ecx
000000000003da24	call	*%r13
000000000003da27	movq	%r12,%rdi
000000000003da2a	movq	0x00067057(%rip),%rsi
000000000003da31	movq	%rbx,%rdx
000000000003da34	call	*%r13
000000000003da37	movq	%r12,%rdi
000000000003da3a	movq	0x00067057(%rip),%rsi
000000000003da41	movq	0x00068f28(%rip),%rdx
000000000003da48	call	*%r13
000000000003da4b	movq	%rbx,%rdi
000000000003da4e	movq	0x00067beb(%rip),%rsi
000000000003da55	movq	%r12,%rdx
000000000003da58	call	*%r13
000000000003da5b	movq	%r14,%rdi
000000000003da5e	movq	0x00067093(%rip),%rsi
000000000003da65	call	*%r13
000000000003da68	movq	%rax,%r15
000000000003da6b	testq	%r15,%r15
000000000003da6e	jne	0x0003d9d9
000000000003da74	addq	$0x08,%rsp
000000000003da78	popq	%rbx
000000000003da79	popq	%r12
000000000003da7b	popq	%r13
000000000003da7d	popq	%r14
000000000003da7f	popq	%r15
000000000003da81	popq	%rbp
000000000003da82	ret
-[PBXGDB_RegisterDataValueSetupSequence gotCreatedRegisterVarObj:]:
000000000003da83	pushq	%rbp
000000000003da84	movq	%rsp,%rbp
000000000003da87	pushq	%r15
000000000003da89	pushq	%r14
000000000003da8b	pushq	%r13
000000000003da8d	pushq	%r12
000000000003da8f	pushq	%rbx
000000000003da90	subq	$0x18,%rsp
000000000003da94	movq	%rdx,0xd0(%rbp)
000000000003da98	movq	%rdi,%r12
000000000003da9b	movq	0x000714ae(%rip),%rax
000000000003daa2	decq	(%r12,%rax)
000000000003daa6	movq	0x000682c3(%rip),%rsi
000000000003daad	movq	%rdx,%rdi
000000000003dab0	call	*0x00046622(%rip)
000000000003dab6	testq	%rax,%rax
000000000003dab9	je	0x0003dc28
000000000003dabf	movq	0x00067d7a(%rip),%rsi
000000000003dac6	movq	0xd0(%rbp),%rdi
000000000003daca	call	*0x00046608(%rip)
000000000003dad0	testb	%al,%al
000000000003dad2	je	0x0003dc28
000000000003dad8	movq	0x000465f9(%rip),%r14
000000000003dadf	movq	0x0006ab1a(%rip),%rdi
000000000003dae6	leaq	0x0006a7f3(%rip),%rsi
000000000003daed	call	*0x0006a7ed(%rip)
000000000003daf3	movq	%rax,%rbx
000000000003daf6	movq	%r12,%rdi
000000000003daf9	movq	0x00066fb8(%rip),%r15
000000000003db00	movq	%r15,%rsi
000000000003db03	call	*%r14
000000000003db06	movq	%rbx,%rdi
000000000003db09	movq	0x00067240(%rip),%rsi
000000000003db10	movq	%rax,%rdx
000000000003db13	call	*%r14
000000000003db16	movq	%rax,%r13
000000000003db19	movq	0x00071428(%rip),%rbx
000000000003db20	movq	(%r12,%rbx),%rdi
000000000003db24	movq	0x00067f95(%rip),%rsi
000000000003db2b	call	*%r14
000000000003db2e	movq	(%r12,%rbx),%rdi
000000000003db32	movq	0x00068e3f(%rip),%rsi
000000000003db39	movq	%r13,%rdx
000000000003db3c	call	*%r14
000000000003db3f	movq	%r12,%rdi
000000000003db42	movq	0x00067d2f(%rip),%rsi
000000000003db49	movq	%r13,%rdx
000000000003db4c	movq	0xd0(%rbp),%rcx
000000000003db50	call	*%r14
000000000003db53	movq	%r13,%rdi
000000000003db56	movq	0x00067913(%rip),%rsi
000000000003db5d	call	*%r14
000000000003db60	movq	%r12,%rdi
000000000003db63	movq	%r15,%rsi
000000000003db66	call	*%r14
000000000003db69	movq	%rax,%rdi
000000000003db6c	movq	0x0006792d(%rip),%rsi
000000000003db73	movq	%r13,%rdx
000000000003db76	call	*%r14
000000000003db79	movl	%eax,%r15d
000000000003db7c	movq	%r13,%rdi
000000000003db7f	movq	0x00068dfa(%rip),%rsi
000000000003db86	call	*%r14
000000000003db89	movb	%al,0xc8(%rbp)
000000000003db8c	movq	0x0006acc5(%rip),%rdi
000000000003db93	movq	0x00066ee6(%rip),%rsi
000000000003db9a	call	*%r14
000000000003db9d	movq	%r12,%rbx
000000000003dba0	movq	%rax,%r12
000000000003dba3	movq	%r13,%rdi
000000000003dba6	movq	0x00067b4b(%rip),%rsi
000000000003dbad	call	*%r14
000000000003dbb0	cmpb	$0x00,0xc8(%rbp)
000000000003dbb4	movl	$0x00000001,%ecx
000000000003dbb9	cmovnel	%ecx,%r15d
000000000003dbbd	movq	%r12,%rdi
000000000003dbc0	movq	0x00068269(%rip),%rsi
000000000003dbc7	movq	%rax,%rdx
000000000003dbca	movl	%r15d,%ecx
000000000003dbcd	call	*%r14
000000000003dbd0	movq	%r12,%rdi
000000000003dbd3	movq	0x00066eae(%rip),%rsi
000000000003dbda	movq	%rbx,%rdx
000000000003dbdd	call	*%r14
000000000003dbe0	movq	%r12,%rdi
000000000003dbe3	movq	0x00066eae(%rip),%rsi
000000000003dbea	movq	0x00068d97(%rip),%rdx
000000000003dbf1	call	*%r14
000000000003dbf4	movq	%rbx,%rdi
000000000003dbf7	movq	0x00067a42(%rip),%rsi
000000000003dbfe	movq	%r12,%rdx
000000000003dc01	movq	%rbx,%r12
000000000003dc04	call	*%r14
000000000003dc07	movq	0x00071342(%rip),%rax
000000000003dc0e	incq	(%r12,%rax)
000000000003dc12	movq	0xd0(%rbp),%rdi
000000000003dc16	movq	0x00067c23(%rip),%rsi
000000000003dc1d	call	*%r14
000000000003dc20	testb	%al,%al
000000000003dc22	jne	0x0003dadf
000000000003dc28	movq	0x00071319(%rip),%rax
000000000003dc2f	movq	(%r12,%rax),%r14
000000000003dc33	movq	0x0006ad8e(%rip),%r15
000000000003dc3a	movq	0x0006718f(%rip),%rsi
000000000003dc41	movq	%r12,%rdi
000000000003dc44	call	*0x0004648e(%rip)
000000000003dc4a	movq	0x000680df(%rip),%rsi
000000000003dc51	movq	%r15,%rdi
000000000003dc54	movq	%r14,%rdx
000000000003dc57	movq	%rax,%rcx
000000000003dc5a	call	*0x00046478(%rip)
000000000003dc60	movq	%rax,%r14
000000000003dc63	movq	0x00067166(%rip),%rsi
000000000003dc6a	movq	%r12,%rdi
000000000003dc6d	call	*0x00046465(%rip)
000000000003dc73	movq	0x00067166(%rip),%rsi
000000000003dc7a	movq	%rax,%rdi
000000000003dc7d	movq	%r14,%rdx
000000000003dc80	movq	0x00046451(%rip),%rax
000000000003dc87	addq	$0x18,%rsp
000000000003dc8b	popq	%rbx
000000000003dc8c	popq	%r12
000000000003dc8e	popq	%r13
000000000003dc90	popq	%r14
000000000003dc92	popq	%r15
000000000003dc94	popq	%rbp
000000000003dc95	jmp	*%rax
-[PBXGDB_RegisterDataValueSetupSequence didFinsihSettingFormat:]:
000000000003dc97	pushq	%rbp
000000000003dc98	movq	%rsp,%rbp
000000000003dc9b	pushq	%rbx
000000000003dc9c	pushq	%rax
000000000003dc9d	movq	%rdi,%rbx
000000000003dca0	movq	0x000712a9(%rip),%rax
000000000003dca7	decq	(%rbx,%rax)
000000000003dcab	cmpq	$0x00,(%rbx,%rax)
000000000003dcb0	jle	0x0003dcb9
000000000003dcb2	addq	$0x08,%rsp
000000000003dcb6	popq	%rbx
000000000003dcb7	popq	%rbp
000000000003dcb8	ret
000000000003dcb9	movq	0x00071288(%rip),%rax
000000000003dcc0	movq	(%rbx,%rax),%rdi
000000000003dcc4	movq	0x00067ded(%rip),%rsi
000000000003dccb	call	*0x00046407(%rip)
000000000003dcd1	movq	0x00067a50(%rip),%rsi
000000000003dcd8	movq	%rbx,%rdi
000000000003dcdb	movq	%rax,%rdx
000000000003dcde	call	*0x000463f4(%rip)
000000000003dce4	movq	0x00066e4d(%rip),%rsi
000000000003dceb	movq	%rbx,%rdi
000000000003dcee	call	*0x000463e4(%rip)
000000000003dcf4	movq	0x0007124d(%rip),%rax
000000000003dcfb	movq	(%rbx,%rax),%rdi
000000000003dcff	movq	0x00067892(%rip),%rsi
000000000003dd06	movl	$0x00000002,%edx
000000000003dd0b	movq	0x000463c6(%rip),%rax
000000000003dd12	addq	$0x08,%rsp
000000000003dd16	popq	%rbx
000000000003dd17	popq	%rbp
000000000003dd18	jmp	*%rax
-[PBXGDB_RegisterDataValueSetupSequence didFinish]:
000000000003dd1a	pushq	%rbp
000000000003dd1b	movq	%rsp,%rbp
000000000003dd1e	pushq	%r14
000000000003dd20	pushq	%rbx
000000000003dd21	subq	$0x10,%rsp
000000000003dd25	movq	%rdi,%rbx
000000000003dd28	movq	0x000678d9(%rip),%rsi
000000000003dd2f	movq	0x000463a2(%rip),%r14
000000000003dd36	call	*%r14
000000000003dd39	movq	0x000679b0(%rip),%rsi
000000000003dd40	movq	%rax,%rdi
000000000003dd43	call	*%r14
000000000003dd46	movq	%rbx,0xe0(%rbp)
000000000003dd4a	leaq	0xe0(%rbp),%rdi
000000000003dd4e	movq	0x0006b1fb(%rip),%rax
000000000003dd55	movq	%rax,0xe8(%rbp)
000000000003dd59	movq	0x00066dd8(%rip),%rsi
000000000003dd60	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000003dd65	addq	$0x10,%rsp
000000000003dd69	popq	%rbx
000000000003dd6a	popq	%r14
000000000003dd6c	popq	%rbp
000000000003dd6d	ret
-[PBXGDB_RegisterDataValueSetupSequence execute]:
000000000003dd6e	pushq	%rbp
000000000003dd6f	movq	%rsp,%rbp
000000000003dd72	pushq	%r14
000000000003dd74	pushq	%rbx
000000000003dd75	movq	%rdi,%rbx
000000000003dd78	movq	0x000711c9(%rip),%rax
000000000003dd7f	cmpq	$0x00,(%rbx,%rax)
000000000003dd84	je	0x0003ddb5
000000000003dd86	movq	0x00066d2b(%rip),%rsi
000000000003dd8d	movq	0x00046344(%rip),%r14
000000000003dd94	movq	%rbx,%rdi
000000000003dd97	call	*%r14
000000000003dd9a	movq	0x00068bf7(%rip),%rsi
000000000003dda1	movq	%rax,%rdi
000000000003dda4	call	*%r14
000000000003dda7	testq	%rax,%rax
000000000003ddaa	jne	0x0003de30
000000000003ddb0	popq	%rbx
000000000003ddb1	popq	%r14
000000000003ddb3	popq	%rbp
000000000003ddb4	ret
000000000003ddb5	movq	0x00066cc4(%rip),%rsi
000000000003ddbc	movq	0x0006ac0d(%rip),%rdi
000000000003ddc3	call	*0x0004630f(%rip)
000000000003ddc9	movq	%rax,%r14
000000000003ddcc	movq	0x00066cb5(%rip),%rsi
000000000003ddd3	movq	%r14,%rdi
000000000003ddd6	movq	%rbx,%rdx
000000000003ddd9	call	*0x000462f9(%rip)
000000000003dddf	movq	0x00066cb2(%rip),%rsi
000000000003dde6	movq	0x00068ba3(%rip),%rdx
000000000003dded	movq	%r14,%rdi
000000000003ddf0	call	*0x000462e2(%rip)
000000000003ddf6	movq	0x00066cbb(%rip),%rsi
000000000003ddfd	movq	%rbx,%rdi
000000000003de00	call	*0x000462d2(%rip)
000000000003de06	movq	0x00066cb3(%rip),%rsi
000000000003de0d	movq	%rax,%rdi
000000000003de10	call	*0x000462c2(%rip)
000000000003de16	movq	0x00066cab(%rip),%rsi
000000000003de1d	movq	%rax,%rdi
000000000003de20	movq	%r14,%rdx
000000000003de23	movq	0x000462ae(%rip),%rax
000000000003de2a	popq	%rbx
000000000003de2b	popq	%r14
000000000003de2d	popq	%rbp
000000000003de2e	jmp	*%rax
000000000003de30	movq	0x00068b29(%rip),%rsi
000000000003de37	movq	%rbx,%rdi
000000000003de3a	popq	%rbx
000000000003de3b	popq	%r14
000000000003de3d	popq	%rbp
000000000003de3e	jmp	*0x00046294(%rip)
+[PBXGDB_RegisterDataValueExpandSequence sequenceWithParentDV:sequenceController:]:
000000000003de44	pushq	%rbp
000000000003de45	movq	%rsp,%rbp
000000000003de48	pushq	%r15
000000000003de4a	pushq	%r14
000000000003de4c	pushq	%r12
000000000003de4e	pushq	%rbx
000000000003de4f	movq	%rcx,%r15
000000000003de52	movq	%rdx,%r14
000000000003de55	movq	0x0006ab6c(%rip),%rdi
000000000003de5c	leaq	0x0006a47d(%rip),%rsi
000000000003de63	call	*0x0006a477(%rip)
000000000003de69	movq	0x00066c00(%rip),%rsi
000000000003de70	movq	0x00046261(%rip),%r12
000000000003de77	movq	%rax,%rdi
000000000003de7a	call	*%r12
000000000003de7d	movq	%rax,%rbx
000000000003de80	movq	0x00066f51(%rip),%rsi
000000000003de87	movq	%rbx,%rdi
000000000003de8a	movq	%r15,%rdx
000000000003de8d	call	*%r12
000000000003de90	movq	0x00068ab1(%rip),%rsi
000000000003de97	movq	%rbx,%rdi
000000000003de9a	movq	%r14,%rdx
000000000003de9d	call	*%r12
000000000003dea0	movq	%rbx,%rax
000000000003dea3	popq	%rbx
000000000003dea4	popq	%r12
000000000003dea6	popq	%r14
000000000003dea8	popq	%r15
000000000003deaa	popq	%rbp
000000000003deab	ret
-[PBXGDB_RegisterDataValueExpandSequence execute]:
000000000003deac	pushq	%rbp
000000000003dead	movq	%rsp,%rbp
000000000003deb0	movq	0x00066c81(%rip),%rsi
000000000003deb7	popq	%rbp
000000000003deb8	jmp	*0x0004621a(%rip)
-[PBXGDB_RegisterValueDescription setStringValue:]:
000000000003debe	pushq	%rbp
000000000003debf	movq	%rsp,%rbp
000000000003dec2	movq	0x00066f8f(%rip),%rsi
000000000003dec9	popq	%rbp
000000000003deca	jmp	*0x00046208(%rip)
-[PBXGDB_RegisterValueDescription stringValue]:
000000000003ded0	pushq	%rbp
000000000003ded1	movq	%rsp,%rbp
000000000003ded4	movq	0x00066dc5(%rip),%rsi
000000000003dedb	popq	%rbp
000000000003dedc	jmp	*0x000461f6(%rip)
000000000003dee2	nop
000000000003dee3	nop
000000000003dee4	nop
000000000003dee5	nop
000000000003dee6	nop
000000000003dee7	nop
000000000003dee8	nop
000000000003dee9	nop
000000000003deea	nop
-[PBXGDB_SequenceController dealloc]:
000000000003deeb	pushq	%rbp
000000000003deec	movq	%rsp,%rbp
000000000003deef	pushq	%rbx
000000000003def0	pushq	%rax
000000000003def1	movq	%rdi,%rbx
000000000003def4	movq	0x00068aa5(%rip),%rsi
000000000003defb	call	*0x000461d7(%rip)
000000000003df01	movq	0x00068aa0(%rip),%rsi
000000000003df08	movq	%rbx,%rdi
000000000003df0b	xorl	%edx,%edx
000000000003df0d	movq	0x000461c4(%rip),%rax
000000000003df14	addq	$0x08,%rsp
000000000003df18	popq	%rbx
000000000003df19	popq	%rbp
000000000003df1a	jmp	*%rax
000000000003df1c	nop
000000000003df1d	nop
000000000003df1e	nop
000000000003df1f	nop
-[PBXGDB_SequenceController _sequenceTimedOut:]:
000000000003df20	pushq	%rbp
000000000003df21	movq	%rsp,%rbp
000000000003df24	pushq	%rbx
000000000003df25	pushq	%rax
000000000003df26	movq	%rdi,%rbx
000000000003df29	movq	0x00071060(%rip),%rdx
000000000003df30	xorl	%edi,%edi
000000000003df32	movq	%rbx,%rsi
000000000003df35	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000003df3a	movq	0x0006855f(%rip),%rsi
000000000003df41	movq	%rbx,%rdi
000000000003df44	call	*0x0004618e(%rip)
000000000003df4a	movq	0x000679df(%rip),%rsi
000000000003df51	movq	%rax,%rdi
000000000003df54	movq	0x0004617d(%rip),%rax
000000000003df5b	addq	$0x08,%rsp
000000000003df5f	popq	%rbx
000000000003df60	popq	%rbp
000000000003df61	jmp	*%rax
000000000003df63	nop
000000000003df64	nop
000000000003df65	nop
000000000003df66	nop
000000000003df67	nop
000000000003df68	nop
000000000003df69	nop
000000000003df6a	nop
000000000003df6b	nop
000000000003df6c	nop
000000000003df6d	nop
000000000003df6e	nop
000000000003df6f	nop
-[PBXGDB_SequenceController _clearTimer]:
000000000003df70	pushq	%rbp
000000000003df71	movq	%rsp,%rbp
000000000003df74	movq	0x00068a25(%rip),%rsi
000000000003df7b	popq	%rbp
000000000003df7c	jmp	*0x00046156(%rip)
000000000003df82	nop
000000000003df83	nop
000000000003df84	nop
000000000003df85	nop
000000000003df86	nop
000000000003df87	nop
000000000003df88	nop
000000000003df89	nop
000000000003df8a	nop
000000000003df8b	nop
000000000003df8c	nop
000000000003df8d	nop
000000000003df8e	nop
000000000003df8f	nop
___copy_helper_block_:
000000000003df90	pushq	%rbp
000000000003df91	movq	%rsp,%rbp
000000000003df94	pushq	%r14
000000000003df96	pushq	%rbx
000000000003df97	movq	%rsi,%r14
000000000003df9a	movq	%rdi,%rbx
000000000003df9d	movq	0x20(%r14),%rsi
000000000003dfa1	leaq	0x20(%rbx),%rdi
000000000003dfa5	movl	$0x00000003,%edx
000000000003dfaa	callq	0x0004e662	; symbol stub for: __Block_object_assign
000000000003dfaf	addq	$0x28,%rbx
000000000003dfb3	movq	0x28(%r14),%rsi
000000000003dfb7	movq	%rbx,%rdi
000000000003dfba	movl	$0x00000003,%edx
000000000003dfbf	popq	%rbx
000000000003dfc0	popq	%r14
000000000003dfc2	popq	%rbp
000000000003dfc3	jmp	0x0004e662	; symbol stub for: __Block_object_assign
000000000003dfc8	nopl	0x00000000(%rax,%rax)
___destroy_helper_block_:
000000000003dfd0	pushq	%rbp
000000000003dfd1	movq	%rsp,%rbp
000000000003dfd4	pushq	%rbx
000000000003dfd5	pushq	%rax
000000000003dfd6	movq	%rdi,%rbx
000000000003dfd9	movq	0x20(%rbx),%rdi
000000000003dfdd	movl	$0x00000003,%esi
000000000003dfe2	callq	0x0004e668	; symbol stub for: __Block_object_dispose
000000000003dfe7	movq	0x28(%rbx),%rdi
000000000003dfeb	movl	$0x00000003,%esi
000000000003dff0	addq	$0x08,%rsp
000000000003dff4	popq	%rbx
000000000003dff5	popq	%rbp
000000000003dff6	jmp	0x0004e668	; symbol stub for: __Block_object_dispose
-[PBXGDB_SequenceController _shouldPurgeDataValueSequence:]:
000000000003dffb	pushq	%rbp
000000000003dffc	movq	%rsp,%rbp
000000000003dfff	pushq	%r15
000000000003e001	pushq	%r14
000000000003e003	pushq	%r12
000000000003e005	pushq	%rbx
000000000003e006	movq	%rdx,%r14
000000000003e009	movq	%rdi,%r15
000000000003e00c	movq	0x0006a695(%rip),%rdi
000000000003e013	leaq	0x0006a316(%rip),%rsi
000000000003e01a	call	*0x0006a310(%rip)
000000000003e020	leaq	0x0006a319(%rip),%rsi
000000000003e027	movq	%r14,%rdi
000000000003e02a	movq	%rax,%rdx
000000000003e02d	call	*0x0006a30d(%rip)
000000000003e033	xorb	%cl,%cl
000000000003e035	testb	%al,%al
000000000003e037	je	0x0003e0e2
000000000003e03d	movq	0x00066a74(%rip),%rsi
000000000003e044	movq	0x0004608d(%rip),%r12
000000000003e04b	movq	%r15,%rdi
000000000003e04e	call	*%r12
000000000003e051	movq	0x00066d98(%rip),%rsi
000000000003e058	movq	%rax,%rdi
000000000003e05b	call	*%r12
000000000003e05e	movq	0x00066e63(%rip),%rsi
000000000003e065	movq	%rax,%rdi
000000000003e068	call	*%r12
000000000003e06b	movq	%rax,%rbx
000000000003e06e	movq	0x00067f03(%rip),%rsi
000000000003e075	movq	%rbx,%rdi
000000000003e078	call	*%r12
000000000003e07b	xorb	%cl,%cl
000000000003e07d	cmpl	$0x06,%eax
000000000003e080	jne	0x0003e0e2
000000000003e082	movq	0x000671df(%rip),%rsi
000000000003e089	movq	%rbx,%rdi
000000000003e08c	call	*0x00046046(%rip)
000000000003e092	leaq	0x0006a277(%rip),%rsi
000000000003e099	movq	%rax,%rdi
000000000003e09c	call	*0x0006a26e(%rip)
000000000003e0a2	xorb	%cl,%cl
000000000003e0a4	cmpq	$0x0000c351,%eax
000000000003e0aa	jb	0x0003e0e2
000000000003e0ac	movq	0x00070ead(%rip),%rax
000000000003e0b3	movq	(%r15,%rax),%rdi
000000000003e0b7	movq	0x0006891a(%rip),%rsi
000000000003e0be	movq	0x00046013(%rip),%rbx
000000000003e0c5	movq	%r14,%rdx
000000000003e0c8	call	*%rbx
000000000003e0ca	movq	0x000688ff(%rip),%rsi
000000000003e0d1	leaq	0x00075ce0(%rip),%rdx
000000000003e0d8	movq	%r15,%rdi
000000000003e0db	movq	%r14,%rcx
000000000003e0de	call	*%rbx
000000000003e0e0	movb	$0x01,%cl
000000000003e0e2	movzbl	%cl,%eax
000000000003e0e5	popq	%rbx
000000000003e0e6	popq	%r12
000000000003e0e8	popq	%r14
000000000003e0ea	popq	%r15
000000000003e0ec	popq	%rbp
000000000003e0ed	ret
000000000003e0ee	nop
000000000003e0ef	nop
000000000003e0f0	nop
000000000003e0f1	nop
000000000003e0f2	nop
000000000003e0f3	nop
000000000003e0f4	nop
-[PBXGDB_SequenceController _enqueueSequence:inQueue:atIndex:]:
000000000003e0f5	pushq	%rbp
000000000003e0f6	movq	%rsp,%rbp
000000000003e0f9	pushq	%r15
000000000003e0fb	pushq	%r14
000000000003e0fd	pushq	%r13
000000000003e0ff	pushq	%r12
000000000003e101	pushq	%rbx
000000000003e102	subq	$0x28,%rsp
000000000003e106	movq	%r8,%r15
000000000003e109	movq	%rcx,%r13
000000000003e10c	movq	%rdx,%rbx
000000000003e10f	movq	%rdi,%r12
000000000003e112	movq	0x000688a7(%rip),%rsi
000000000003e119	movq	%rbx,%rdi
000000000003e11c	call	*0x00045fb6(%rip)
000000000003e122	testb	%al,%al
000000000003e124	je	0x0003e141
000000000003e126	movq	0x00070e4b(%rip),%rax
000000000003e12d	movq	(%r12,%rax),%rdi
000000000003e131	leaq	0x0006a1c8(%rip),%rsi
000000000003e138	movq	%rbx,%rdx
000000000003e13b	call	*0x0006a1bf(%rip)
000000000003e141	movq	0x00066970(%rip),%rsi
000000000003e148	movq	0x00045f89(%rip),%r14
000000000003e14f	movq	%r12,%rdi
000000000003e152	call	*%r14
000000000003e155	movq	0x0006850c(%rip),%rsi
000000000003e15c	movq	%rax,%rdi
000000000003e15f	call	*%r14
000000000003e162	testb	%al,%al
000000000003e164	je	0x0003e1d8
000000000003e166	movq	0x00070df3(%rip),%rax
000000000003e16d	cmpq	%r13,(%r12,%rax)
000000000003e171	jne	0x0003e17c
000000000003e173	leaq	0x00075cbe(%rip),%rdx
000000000003e17a	jmp	0x0003e1c5
000000000003e17c	movq	0x00070de5(%rip),%rax
000000000003e183	cmpq	%r13,(%r12,%rax)
000000000003e187	jne	0x0003e192
000000000003e189	leaq	0x00075cc8(%rip),%rdx
000000000003e190	jmp	0x0003e1c5
000000000003e192	movq	0x00070dd7(%rip),%rax
000000000003e199	cmpq	%r13,(%r12,%rax)
000000000003e19d	jne	0x0003e1a8
000000000003e19f	leaq	0x00075cd2(%rip),%rdx
000000000003e1a6	jmp	0x0003e1c5
000000000003e1a8	movq	0x00070da9(%rip),%rax
000000000003e1af	cmpq	%r13,(%r12,%rax)
000000000003e1b3	je	0x0003e1be
000000000003e1b5	leaq	0x00075c5c(%rip),%rdx
000000000003e1bc	jmp	0x0003e1c5
000000000003e1be	leaq	0x00075cd3(%rip),%rdx
000000000003e1c5	movq	0x00068804(%rip),%rsi
000000000003e1cc	movq	%r12,%rdi
000000000003e1cf	movq	%rbx,%rcx
000000000003e1d2	call	*0x00045f00(%rip)
000000000003e1d8	movq	$0x7fffffffffffffff,%rax
000000000003e1e2	movq	%r15,%rcx
000000000003e1e5	cmpq	%rax,%rcx
000000000003e1e8	jne	0x0003e20e
000000000003e1ea	movq	0x0006a10f(%rip),%rax
000000000003e1f1	leaq	0x0006a108(%rip),%rsi
000000000003e1f8	movq	%r13,%rdi
000000000003e1fb	movq	%rbx,%rdx
000000000003e1fe	addq	$0x28,%rsp
000000000003e202	popq	%rbx
000000000003e203	popq	%r12
000000000003e205	popq	%r13
000000000003e207	popq	%r14
000000000003e209	popq	%r15
000000000003e20b	popq	%rbp
000000000003e20c	jmp	*%rax
000000000003e20e	leaq	0x0006a10b(%rip),%rsi
000000000003e215	movq	%r13,%rdi
000000000003e218	movq	%rcx,%rdx
000000000003e21b	movq	%rcx,0xd0(%rbp)
000000000003e21f	call	*0x0006a0fb(%rip)
000000000003e225	movq	%rax,%r14
000000000003e228	movq	0x0006a221(%rip),%rax
000000000003e22f	movq	%rax,0xc0(%rbp)
000000000003e233	leaq	0x0006a0f6(%rip),%r15
000000000003e23a	movq	%rbx,%rdi
000000000003e23d	movq	%r15,%rsi
000000000003e240	call	*0x0006a0ea(%rip)
000000000003e246	movq	%r13,0xc8(%rbp)
000000000003e24a	movq	%rax,%r13
000000000003e24d	movq	%r14,%rdi
000000000003e250	movq	%r15,%rsi
000000000003e253	call	*0x0006a0d7(%rip)
000000000003e259	leaq	0x00075c58(%rip),%rdx
000000000003e260	movq	0x00066911(%rip),%rsi
000000000003e267	movq	%r14,(%rsp)
000000000003e26b	movq	0xc0(%rbp),%rdi
000000000003e26f	movq	%r13,%rcx
000000000003e272	movq	%rbx,%r8
000000000003e275	movq	%rax,%r9
000000000003e278	xorb	%al,%al
000000000003e27a	call	*0x00045e58(%rip)
000000000003e280	movq	0x00068749(%rip),%rsi
000000000003e287	movq	%r12,%rdi
000000000003e28a	movq	%rax,%rdx
000000000003e28d	xorl	%ecx,%ecx
000000000003e28f	call	*0x00045e43(%rip)
000000000003e295	movq	0x0006878c(%rip),%rsi
000000000003e29c	movq	0xc8(%rbp),%rdi
000000000003e2a0	movq	%rbx,%rdx
000000000003e2a3	movq	0xd0(%rbp),%rcx
000000000003e2a7	movq	0x00045e2a(%rip),%rax
000000000003e2ae	addq	$0x28,%rsp
000000000003e2b2	popq	%rbx
000000000003e2b3	popq	%r12
000000000003e2b5	popq	%r13
000000000003e2b7	popq	%r14
000000000003e2b9	popq	%r15
000000000003e2bb	popq	%rbp
000000000003e2bc	jmp	*%rax
000000000003e2be	nop
000000000003e2bf	nop
000000000003e2c0	nop
000000000003e2c1	nop
000000000003e2c2	nop
000000000003e2c3	nop
000000000003e2c4	nop
000000000003e2c5	nop
000000000003e2c6	nop
000000000003e2c7	nop
000000000003e2c8	nop
000000000003e2c9	nop
-[PBXGDB_SequenceController _enqueueCommandSequence:atIndex:]:
000000000003e2ca	pushq	%rbp
000000000003e2cb	movq	%rsp,%rbp
000000000003e2ce	pushq	%r15
000000000003e2d0	pushq	%r14
000000000003e2d2	pushq	%r12
000000000003e2d4	pushq	%rbx
000000000003e2d5	movq	%rcx,%r15
000000000003e2d8	movq	%rdx,%r14
000000000003e2db	movq	%rdi,%rbx
000000000003e2de	movq	0x000667d3(%rip),%rsi
000000000003e2e5	movq	0x00045dec(%rip),%r12
000000000003e2ec	call	*%r12
000000000003e2ef	movq	0x000667ca(%rip),%rsi
000000000003e2f6	movq	%rax,%rdi
000000000003e2f9	call	*%r12
000000000003e2fc	movq	0x00068705(%rip),%rsi
000000000003e303	movq	%rax,%rdi
000000000003e306	call	*%r12
000000000003e309	testl	%eax,%eax
000000000003e30b	jne	0x0003e3fc
000000000003e311	movq	0x00068720(%rip),%rsi
000000000003e318	movq	%r14,%rdi
000000000003e31b	call	*0x00045db7(%rip)
000000000003e321	testb	%al,%al
000000000003e323	je	0x0003e3d3
000000000003e329	movq	0x00070c40(%rip),%rax
000000000003e330	movq	(%rbx,%rax),%rcx
000000000003e334	movq	0x00068705(%rip),%rsi
000000000003e33b	movq	0x00045d96(%rip),%r15
000000000003e342	movq	%rbx,%rdi
000000000003e345	movq	%r14,%rdx
000000000003e348	call	*%r15
000000000003e34b	movq	0x00066766(%rip),%rsi
000000000003e352	movq	%rbx,%rdi
000000000003e355	call	*%r15
000000000003e358	movq	0x00066761(%rip),%rsi
000000000003e35f	movq	%rax,%rdi
000000000003e362	call	*%r15
000000000003e365	movq	0x000686dc(%rip),%rsi
000000000003e36c	movq	%rax,%rdi
000000000003e36f	call	*%r15
000000000003e372	testl	%eax,%eax
000000000003e374	jne	0x0003e47d
000000000003e37a	movq	0x0006864f(%rip),%rsi
000000000003e381	leaq	0x00075b50(%rip),%rdx
000000000003e388	movq	%rbx,%rdi
000000000003e38b	xorl	%ecx,%ecx
000000000003e38d	call	*0x00045d45(%rip)
000000000003e393	movq	0x0006671e(%rip),%rsi
000000000003e39a	movq	%rbx,%rdi
000000000003e39d	call	*0x00045d35(%rip)
000000000003e3a3	movq	0x00066716(%rip),%rsi
000000000003e3aa	movq	%rax,%rdi
000000000003e3ad	call	*0x00045d25(%rip)
000000000003e3b3	movq	0x00067fee(%rip),%rsi
000000000003e3ba	movq	%rax,%rdi
000000000003e3bd	movl	$0x00000002,%edx
000000000003e3c2	movq	0x00045d0f(%rip),%rax
000000000003e3c9	popq	%rbx
000000000003e3ca	popq	%r12
000000000003e3cc	popq	%r14
000000000003e3ce	popq	%r15
000000000003e3d0	popq	%rbp
000000000003e3d1	jmp	*%rax
000000000003e3d3	movq	0x00070b86(%rip),%rax
000000000003e3da	movq	(%rbx,%rax),%rcx
000000000003e3de	movq	0x0006864b(%rip),%rsi
000000000003e3e5	movq	%rbx,%rdi
000000000003e3e8	movq	%r14,%rdx
000000000003e3eb	movq	%r15,%r8
000000000003e3ee	popq	%rbx
000000000003e3ef	popq	%r12
000000000003e3f1	popq	%r14
000000000003e3f3	popq	%r15
000000000003e3f5	popq	%rbp
000000000003e3f6	jmp	*0x00045cdc(%rip)
000000000003e3fc	movq	0x00067cfd(%rip),%rsi
000000000003e403	movq	%rbx,%rdi
000000000003e406	call	*0x00045ccc(%rip)
000000000003e40c	testb	%al,%al
000000000003e40e	je	0x0003e444
000000000003e410	movq	0x00068621(%rip),%rsi
000000000003e417	movq	%r14,%rdi
000000000003e41a	call	*0x00045cb8(%rip)
000000000003e420	testb	%al,%al
000000000003e422	je	0x0003e444
000000000003e424	movq	0x00070b45(%rip),%rax
000000000003e42b	movq	(%rbx,%rax),%rcx
000000000003e42f	movq	0x0006860a(%rip),%rsi
000000000003e436	movq	%rbx,%rdi
000000000003e439	movq	%r14,%rdx
000000000003e43c	call	*0x00045c96(%rip)
000000000003e442	jmp	0x0003e465
000000000003e444	movq	0x00070b15(%rip),%rax
000000000003e44b	movq	(%rbx,%rax),%rcx
000000000003e44f	movq	0x000685da(%rip),%rsi
000000000003e456	movq	%rbx,%rdi
000000000003e459	movq	%r14,%rdx
000000000003e45c	movq	%r15,%r8
000000000003e45f	call	*0x00045c73(%rip)
000000000003e465	movq	0x000685e4(%rip),%rsi
000000000003e46c	movq	%rbx,%rdi
000000000003e46f	popq	%rbx
000000000003e470	popq	%r12
000000000003e472	popq	%r14
000000000003e474	popq	%r15
000000000003e476	popq	%rbp
000000000003e477	jmp	*0x00045c5b(%rip)
000000000003e47d	popq	%rbx
000000000003e47e	popq	%r12
000000000003e480	popq	%r14
000000000003e482	popq	%r15
000000000003e484	popq	%rbp
000000000003e485	ret
000000000003e486	nop
000000000003e487	nop
000000000003e488	nop
000000000003e489	nop
000000000003e48a	nop
000000000003e48b	nop
000000000003e48c	nop
000000000003e48d	nop
000000000003e48e	nop
000000000003e48f	nop
000000000003e490	nop
000000000003e491	nop
-[PBXGDB_SequenceController enqueueCommandSequence:beforeLastSequeueClasses:]:
000000000003e492	pushq	%rbp
000000000003e493	movq	%rsp,%rbp
000000000003e496	pushq	%r15
000000000003e498	pushq	%r14
000000000003e49a	pushq	%r13
000000000003e49c	pushq	%r12
000000000003e49e	pushq	%rbx
000000000003e49f	pushq	%rax
000000000003e4a0	movq	%rcx,%r12
000000000003e4a3	movq	%rdx,0xd0(%rbp)
000000000003e4a7	movq	%rdi,%r15
000000000003e4aa	leaq	0x00069e5f(%rip),%rsi
000000000003e4b1	movq	%r12,%rdi
000000000003e4b4	call	*0x00069e56(%rip)
000000000003e4ba	testq	%rax,%rax
000000000003e4bd	jne	0x0003e4cb
000000000003e4bf	movq	$0x7fffffffffffffff,%r13
000000000003e4c9	jmp	0x0003e547
000000000003e4cb	movq	0x00070a8e(%rip),%rax
000000000003e4d2	movq	(%r15,%rax),%rdi
000000000003e4d6	leaq	0x00069e33(%rip),%rsi
000000000003e4dd	call	*0x00069e2d(%rip)
000000000003e4e3	movq	%rax,%rbx
000000000003e4e6	movq	$0x7fffffffffffffff,%rax
000000000003e4f0	leaq	0xff(%rbx),%r14
000000000003e4f4	movq	%rax,%r13
000000000003e4f7	testq	%r14,%r14
000000000003e4fa	js	0x0003e547
000000000003e4fc	decq	%rbx
000000000003e4ff	movq	0x00070a5a(%rip),%rax
000000000003e506	movq	(%r15,%rax),%rdi
000000000003e50a	leaq	0x00069e0f(%rip),%rsi
000000000003e511	movq	%r14,%rdx
000000000003e514	call	*0x00069e06(%rip)
000000000003e51a	movq	%rax,%rdi
000000000003e51d	leaq	0x00069e0c(%rip),%rsi
000000000003e524	call	*0x00069e06(%rip)
000000000003e52a	movq	%r12,%rdi
000000000003e52d	movq	0x00066e84(%rip),%rsi
000000000003e534	movq	%rax,%rdx
000000000003e537	call	*0x00045b9b(%rip)
000000000003e53d	decq	%r14
000000000003e540	testb	%al,%al
000000000003e542	movq	%rbx,%rax
000000000003e545	jne	0x0003e4f4
000000000003e547	movq	0x0006850a(%rip),%rsi
000000000003e54e	movq	%r15,%rdi
000000000003e551	movq	0xd0(%rbp),%rdx
000000000003e555	movq	%r13,%rcx
000000000003e558	addq	$0x08,%rsp
000000000003e55c	popq	%rbx
000000000003e55d	popq	%r12
000000000003e55f	popq	%r13
000000000003e561	popq	%r14
000000000003e563	popq	%r15
000000000003e565	popq	%rbp
000000000003e566	jmp	*0x00045b6c(%rip)
000000000003e56c	nop
000000000003e56d	nop
000000000003e56e	nop
000000000003e56f	nop
000000000003e570	nop
000000000003e571	nop
000000000003e572	nop
000000000003e573	nop
000000000003e574	nop
000000000003e575	nop
-[PBXGDB_SequenceController enqueueStatusSequence:]:
000000000003e576	pushq	%rbp
000000000003e577	movq	%rsp,%rbp
000000000003e57a	pushq	%rbx
000000000003e57b	pushq	%rax
000000000003e57c	movq	%rdi,%rbx
000000000003e57f	movq	0x000709d2(%rip),%rax
000000000003e586	movq	(%rbx,%rax),%rcx
000000000003e58a	movq	0x000684af(%rip),%rsi
000000000003e591	call	*0x00045b41(%rip)
000000000003e597	movq	0x000684b2(%rip),%rsi
000000000003e59e	movq	%rbx,%rdi
000000000003e5a1	movq	0x00045b30(%rip),%rax
000000000003e5a8	addq	$0x08,%rsp
000000000003e5ac	popq	%rbx
000000000003e5ad	popq	%rbp
000000000003e5ae	jmp	*%rax
-[PBXGDB_GetSharedLibraryInfoSequence setDoContinue:]:
000000000003e5b0	pushq	%rbp
000000000003e5b1	movq	%rsp,%rbp
000000000003e5b4	movq	0x000709f5(%rip),%rax
000000000003e5bb	movb	%dl,(%rdi,%rax)
000000000003e5be	popq	%rbp
000000000003e5bf	ret
-[PBXGDB_GetSharedLibraryInfoSequence doContinue]:
000000000003e5c0	pushq	%rbp
000000000003e5c1	movq	%rsp,%rbp
000000000003e5c4	movq	0x000709e5(%rip),%rax
000000000003e5cb	movsbl	(%rdi,%rax),%eax
000000000003e5cf	popq	%rbp
000000000003e5d0	ret
-[PBXGDB_GetSharedLibraryInfoSequence _gotShlibInfo:]:
000000000003e5d1	pushq	%rbp
000000000003e5d2	movq	%rsp,%rbp
000000000003e5d5	pushq	%r15
000000000003e5d7	pushq	%r14
000000000003e5d9	pushq	%r13
000000000003e5db	pushq	%r12
000000000003e5dd	pushq	%rbx
000000000003e5de	subq	$0x78,%rsp
000000000003e5e2	movq	%rdx,%r14
000000000003e5e5	movq	%rdi,0xd0(%rbp)
000000000003e5e9	movq	%rsi,0xc8(%rbp)
000000000003e5ed	movq	0x00069e6c(%rip),%rdi
000000000003e5f4	leaq	0x00069ce5(%rip),%rsi
000000000003e5fb	call	*0x00069cdf(%rip)
000000000003e601	movq	0x00066468(%rip),%rsi
000000000003e608	movq	%rax,%rdi
000000000003e60b	call	*0x00045ac7(%rip)
000000000003e611	movq	%rax,0xb0(%rbp)
000000000003e615	testq	%r14,%r14
000000000003e618	jne	0x0003e680
000000000003e61a	movq	0x0006a3d7(%rip),%rdi
000000000003e621	leaq	0x00069d08(%rip),%rsi
000000000003e628	call	*0x00069d02(%rip)
000000000003e62e	movq	%rax,%rdi
000000000003e631	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000003e636	leaq	0xd0(%rbp),%rdi
000000000003e63a	leaq	0xc8(%rbp),%rsi
000000000003e63e	leaq	0x00022b59(%rip),%rdx
000000000003e645	leaq	0x00022b88(%rip),%rcx
000000000003e64c	leaq	0x00071365(%rip),%r9
000000000003e653	leaq	0x0001f4a6(%rip),%r8
000000000003e65a	leaq	0x0001f4a3(%rip),%rbx
000000000003e661	movq	%rbx,0x18(%rsp)
000000000003e666	leaq	0x000711cb(%rip),%rbx
000000000003e66d	movq	%rbx,0x10(%rsp)
000000000003e672	movq	%rax,0x08(%rsp)
000000000003e677	movq	%r8,(%rsp)
000000000003e67b	jmp	0x0003e728
000000000003e680	movq	0x0006a371(%rip),%rdi
000000000003e687	leaq	0x00069ca2(%rip),%rsi
000000000003e68e	call	*0x00069c9c(%rip)
000000000003e694	leaq	0x00069ca5(%rip),%rsi
000000000003e69b	movq	%r14,%rdi
000000000003e69e	movq	%rax,%rdx
000000000003e6a1	call	*0x00069c99(%rip)
000000000003e6a7	testb	%al,%al
000000000003e6a9	jne	0x0003e735
000000000003e6af	movq	0x0006a342(%rip),%rdi
000000000003e6b6	leaq	0x00069c73(%rip),%rsi
000000000003e6bd	call	*0x00069c6d(%rip)
000000000003e6c3	movq	%rax,%rdi
000000000003e6c6	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000003e6cb	movq	%rax,%rbx
000000000003e6ce	movq	0x0006658b(%rip),%rsi
000000000003e6d5	movq	%r14,%rdi
000000000003e6d8	call	*0x000459fa(%rip)
000000000003e6de	leaq	0x00071153(%rip),%r8
000000000003e6e5	leaq	0x00022b75(%rip),%r9
000000000003e6ec	leaq	0xd0(%rbp),%rdi
000000000003e6f0	leaq	0xc8(%rbp),%rsi
000000000003e6f4	leaq	0x00022aa3(%rip),%rdx
000000000003e6fb	leaq	0x00022ad2(%rip),%rcx
000000000003e702	movq	%r9,0x20(%rsp)
000000000003e707	leaq	0x000712ca(%rip),%r9
000000000003e70e	movq	%r8,0x18(%rsp)
000000000003e713	movq	%rax,0x10(%rsp)
000000000003e718	leaq	0x0001f3e1(%rip),%rax
000000000003e71f	movq	%rbx,0x08(%rsp)
000000000003e724	movq	%rax,(%rsp)
000000000003e728	movl	$0x000000f2,%r8d
000000000003e72e	xorb	%al,%al
000000000003e730	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000003e735	movq	0x00066394(%rip),%rsi
000000000003e73c	movq	0x00045995(%rip),%r15
000000000003e743	movq	%r14,%rdi
000000000003e746	call	*%r15
000000000003e749	movq	0x00066398(%rip),%rsi
000000000003e750	movq	%rax,%rdi
000000000003e753	call	*%r15
000000000003e756	movq	%rax,0xa8(%rbp)
000000000003e75a	leaq	0x00069baf(%rip),%rsi
000000000003e761	movq	%rax,%rdi
000000000003e764	call	*0x00069ba6(%rip)
000000000003e76a	movq	%rax,%rbx
000000000003e76d	movq	%rbx,0xa0(%rbp)
000000000003e771	movq	0x000682f0(%rip),%rsi
000000000003e778	movq	0xd0(%rbp),%rdi
000000000003e77c	call	*%r15
000000000003e77f	movq	0x0006835a(%rip),%rsi
000000000003e786	movq	%rax,%rdi
000000000003e789	call	*%r15
000000000003e78c	testq	%rbx,%rbx
000000000003e78f	je	0x0003eb94
000000000003e795	xorl	%eax,%eax
000000000003e797	movq	0x0006636a(%rip),%r14
000000000003e79e	movq	0x00045933(%rip),%r13
000000000003e7a5	movq	%rax,0xb8(%rbp)
000000000003e7a9	movq	0xa8(%rbp),%rdi
000000000003e7ad	leaq	0x00069b6c(%rip),%rsi
000000000003e7b4	movq	%rax,%rdx
000000000003e7b7	call	*0x00069b63(%rip)
000000000003e7bd	movq	%rax,%rdi
000000000003e7c0	movq	0x00066319(%rip),%rsi
000000000003e7c7	call	*%r13
000000000003e7ca	movq	%rax,0xc0(%rbp)
000000000003e7ce	movq	%rax,%rdi
000000000003e7d1	movq	0x00066300(%rip),%rsi
000000000003e7d8	leaq	0x00071739(%rip),%rdx
000000000003e7df	call	*%r13
000000000003e7e2	testq	%rax,%rax
000000000003e7e5	je	0x0003eb83
000000000003e7eb	movq	%rax,%rdi
000000000003e7ee	movq	%r14,%rsi
000000000003e7f1	call	*%r13
000000000003e7f4	movq	%rax,%r15
000000000003e7f7	movq	0xd0(%rbp),%rdi
000000000003e7fb	movq	0x00068266(%rip),%rsi
000000000003e802	call	*%r13
000000000003e805	movq	%rax,%rdi
000000000003e808	movq	0x000682d9(%rip),%rsi
000000000003e80f	movq	%r15,%rdx
000000000003e812	call	*%r13
000000000003e815	movq	%rax,%r12
000000000003e818	testq	%r12,%r12
000000000003e81b	je	0x0003e837
000000000003e81d	movq	%r12,%rdi
000000000003e820	movq	0x00066db9(%rip),%rsi
000000000003e827	movl	$0x00000002,%edx
000000000003e82c	call	*0x000458a6(%rip)
000000000003e832	jmp	0x0003ea1f
000000000003e837	movq	0x0006a042(%rip),%rdi
000000000003e83e	leaq	0x00069a9b(%rip),%rsi
000000000003e845	call	*0x00069a95(%rip)
000000000003e84b	movq	%rax,%rdi
000000000003e84e	movq	0x0006621b(%rip),%rsi
000000000003e855	call	*%r13
000000000003e858	movq	%rax,%r12
000000000003e85b	movq	0xb0(%rbp),%rdi
000000000003e85f	leaq	0x00069a9a(%rip),%rsi
000000000003e866	movq	%r12,%rdx
000000000003e869	call	*0x00069a91(%rip)
000000000003e86f	movq	%r12,%rdi
000000000003e872	movq	0x00068277(%rip),%rsi
000000000003e879	movq	%r15,%rdx
000000000003e87c	call	*%r13
000000000003e87f	movq	0xd0(%rbp),%rdi
000000000003e883	movq	0x0006622e(%rip),%rsi
000000000003e88a	call	*%r13
000000000003e88d	movq	%r12,%rdi
000000000003e890	movq	0x00066491(%rip),%rsi
000000000003e897	movq	%rax,%rdx
000000000003e89a	call	*%r13
000000000003e89d	movq	%r12,%rdi
000000000003e8a0	movq	0x000678e9(%rip),%rsi
000000000003e8a7	xorl	%edx,%edx
000000000003e8a9	call	*%r13
000000000003e8ac	movq	%r12,%rdi
000000000003e8af	movq	0x00068242(%rip),%rsi
000000000003e8b6	xorl	%edx,%edx
000000000003e8b8	call	*%r13
000000000003e8bb	movq	%r12,%rdi
000000000003e8be	movq	0x000678c3(%rip),%rsi
000000000003e8c5	xorl	%edx,%edx
000000000003e8c7	call	*%r13
000000000003e8ca	movq	0xc0(%rbp),%rdi
000000000003e8ce	movq	0x00066203(%rip),%rsi
000000000003e8d5	leaq	0x000718bc(%rip),%rdx
000000000003e8dc	call	*%r13
000000000003e8df	testq	%rax,%rax
000000000003e8e2	je	0x0003e977
000000000003e8e8	movq	%rax,%rdi
000000000003e8eb	movq	0x00066216(%rip),%rsi
000000000003e8f2	call	*0x000457e0(%rip)
000000000003e8f8	movq	%rax,%rbx
000000000003e8fb	movq	%rbx,%rdi
000000000003e8fe	leaq	0x00069a5b(%rip),%r14
000000000003e905	movq	%r14,%rsi
000000000003e908	leaq	0x00072909(%rip),%rdx
000000000003e90f	call	*0x00069a4b(%rip)
000000000003e915	testb	%al,%al
000000000003e917	je	0x0003e92a
000000000003e919	movq	%r12,%rdi
000000000003e91c	movq	0x0006786d(%rip),%rsi
000000000003e923	movl	$0x00000003,%edx
000000000003e928	jmp	0x0003e950
000000000003e92a	movq	%rbx,%rdi
000000000003e92d	movq	%r14,%rsi
000000000003e930	leaq	0x00075641(%rip),%rdx
000000000003e937	call	*0x00069a23(%rip)
000000000003e93d	testb	%al,%al
000000000003e93f	je	0x0003e977
000000000003e941	movq	%r12,%rdi
000000000003e944	movq	0x00067845(%rip),%rsi
000000000003e94b	movl	$0x00000002,%edx
000000000003e950	call	*%r13
000000000003e953	movq	%r12,%rdi
000000000003e956	movq	0x0006819b(%rip),%rsi
000000000003e95d	movl	$0x00000003,%edx
000000000003e962	call	*%r13
000000000003e965	movq	%r12,%rdi
000000000003e968	movq	0x00067819(%rip),%rsi
000000000003e96f	movl	$0x00000003,%edx
000000000003e974	call	*%r13
000000000003e977	movq	0xd0(%rbp),%rdi
000000000003e97b	movq	0x000680e6(%rip),%rsi
000000000003e982	call	*%r13
000000000003e985	movq	%rax,%rdi
000000000003e988	movq	0x00068171(%rip),%rsi
000000000003e98f	movq	%r15,%rdx
000000000003e992	call	*%r13
000000000003e995	movq	%rax,%rbx
000000000003e998	xorl	%r14d,%r14d
000000000003e99b	testq	%rbx,%rbx
000000000003e99e	je	0x0003e9ec
000000000003e9a0	movq	%rbx,%rdi
000000000003e9a3	movq	0x000677d6(%rip),%rsi
000000000003e9aa	call	*%r13
000000000003e9ad	movl	%eax,%r14d
000000000003e9b0	movq	%rbx,%rdi
000000000003e9b3	movq	0x0006814e(%rip),%rbx
000000000003e9ba	movq	%rbx,%rsi
000000000003e9bd	call	*%r13
000000000003e9c0	movl	%eax,%r15d
000000000003e9c3	testl	%r15d,%r15d
000000000003e9c6	je	0x0003e9ec
000000000003e9c8	movq	%r12,%rdi
000000000003e9cb	movq	%rbx,%rsi
000000000003e9ce	call	*0x00045704(%rip)
000000000003e9d4	cmpl	$0x03,%eax
000000000003e9d7	je	0x0003e9ec
000000000003e9d9	movq	%r12,%rdi
000000000003e9dc	movq	0x00068115(%rip),%rsi
000000000003e9e3	movl	%r15d,%edx
000000000003e9e6	call	*0x000456ec(%rip)
000000000003e9ec	xorl	%edi,%edi
000000000003e9ee	movq	0x0006778b(%rip),%rsi
000000000003e9f5	call	*0x000456dd(%rip)
000000000003e9fb	cmpl	%eax,%r14d
000000000003e9fe	je	0x0003ea1f
000000000003ea00	movq	%r12,%rdi
000000000003ea03	movq	0x00067786(%rip),%rsi
000000000003ea0a	movl	%r14d,%edx
000000000003ea0d	call	*%r13
000000000003ea10	movq	%r12,%rdi
000000000003ea13	movq	0x0006776e(%rip),%rsi
000000000003ea1a	xorl	%edx,%edx
000000000003ea1c	call	*%r13
000000000003ea1f	movq	0xc0(%rbp),%rdi
000000000003ea23	movq	0x000660ae(%rip),%rsi
000000000003ea2a	leaq	0x000717a7(%rip),%rdx
000000000003ea31	call	*0x000456a1(%rip)
000000000003ea37	testq	%rax,%rax
000000000003ea3a	movq	0x000660c7(%rip),%r14
000000000003ea41	leaq	0x00070ef0(%rip),%r15
000000000003ea48	je	0x0003ea70
000000000003ea4a	movq	%rax,%rdi
000000000003ea4d	movq	%r14,%rsi
000000000003ea50	call	*%r13
000000000003ea53	movq	%rax,%rdi
000000000003ea56	movq	0x00066883(%rip),%rsi
000000000003ea5d	call	*%r13
000000000003ea60	movq	%r12,%rdi
000000000003ea63	movq	0x000680a6(%rip),%rsi
000000000003ea6a	movq	%rax,%rdx
000000000003ea6d	call	*%r13
000000000003ea70	movq	0xc0(%rbp),%rdi
000000000003ea74	movq	0x0006605d(%rip),%rsi
000000000003ea7b	leaq	0x000718b6(%rip),%rdx
000000000003ea82	call	*0x00045650(%rip)
000000000003ea88	testq	%rax,%rax
000000000003ea8b	je	0x0003eb6e
000000000003ea91	movq	%rax,%rdi
000000000003ea94	movq	%r14,%rsi
000000000003ea97	call	*0x0004563b(%rip)
000000000003ea9d	movq	%rax,%rbx
000000000003eaa0	movq	%rbx,%rdi
000000000003eaa3	leaq	0x000698b6(%rip),%rsi
000000000003eaaa	movq	%r15,%rdx
000000000003eaad	call	*0x000698ad(%rip)
000000000003eab3	testb	%al,%al
000000000003eab5	jne	0x0003ead2
000000000003eab7	movq	%rbx,%rdi
000000000003eaba	leaq	0x0006989f(%rip),%rsi
000000000003eac1	leaq	0x000727f0(%rip),%rdx
000000000003eac8	call	*0x00069892(%rip)
000000000003eace	testb	%al,%al
000000000003ead0	je	0x0003eb23
000000000003ead2	movq	0xc0(%rbp),%rdi
000000000003ead6	movq	0x00065ffb(%rip),%rsi
000000000003eadd	leaq	0x000754b4(%rip),%rdx
000000000003eae4	call	*0x000455ee(%rip)
000000000003eaea	testq	%rax,%rax
000000000003eaed	leaq	0x000727c4(%rip),%rbx
000000000003eaf4	je	0x0003eb23
000000000003eaf6	movq	%rax,%rdi
000000000003eaf9	movq	%r14,%rsi
000000000003eafc	call	*0x000455d6(%rip)
000000000003eb02	movq	%rax,%rbx
000000000003eb05	movq	%rbx,%rdi
000000000003eb08	leaq	0x00069851(%rip),%rsi
000000000003eb0f	movq	%r15,%rdx
000000000003eb12	call	*0x00069848(%rip)
000000000003eb18	testb	%al,%al
000000000003eb1a	je	0x0003eb23
000000000003eb1c	leaq	0x00072795(%rip),%rbx
000000000003eb23	movq	0xc0(%rbp),%rdi
000000000003eb27	movq	0x00065faa(%rip),%rsi
000000000003eb2e	leaq	0x00075483(%rip),%rdx
000000000003eb35	call	*%r13
000000000003eb38	movq	0x00069ba1(%rip),%rdi
000000000003eb3f	leaq	0x0006979a(%rip),%rsi
000000000003eb46	call	*0x00069794(%rip)
000000000003eb4c	movq	%rax,%rdi
000000000003eb4f	movq	0x00067fc2(%rip),%rsi
000000000003eb56	movq	%rbx,%rdx
000000000003eb59	xorl	%ecx,%ecx
000000000003eb5b	call	*%r13
000000000003eb5e	movq	%r12,%rdi
000000000003eb61	movq	0x00067fb8(%rip),%rsi
000000000003eb68	movq	%rax,%rdx
000000000003eb6b	call	*%r13
000000000003eb6e	movq	%r12,%rdi
000000000003eb71	movq	0x00067fb0(%rip),%rsi
000000000003eb78	movl	$0x00000003,%edx
000000000003eb7d	call	*0x00045555(%rip)
000000000003eb83	movq	0xb8(%rbp),%rax
000000000003eb87	incq	%rax
000000000003eb8a	cmpq	%rax,0xa0(%rbp)
000000000003eb8e	jne	0x0003e7a5
000000000003eb94	leaq	0x00069775(%rip),%rsi
000000000003eb9b	movq	0xb0(%rbp),%rbx
000000000003eb9f	movq	%rbx,%rdi
000000000003eba2	call	*0x00069768(%rip)
000000000003eba8	testq	%rax,%rax
000000000003ebab	je	0x0003ebd2
000000000003ebad	movq	0x00067eb4(%rip),%rsi
000000000003ebb4	movq	0xd0(%rbp),%rdi
000000000003ebb8	movq	0x00045519(%rip),%r14
000000000003ebbf	call	*%r14
000000000003ebc2	movq	0x00067f67(%rip),%rsi
000000000003ebc9	movq	%rax,%rdi
000000000003ebcc	movq	%rbx,%rdx
000000000003ebcf	call	*%r14
000000000003ebd2	movq	0x00067e8f(%rip),%rsi
000000000003ebd9	movq	0xd0(%rbp),%rdi
000000000003ebdd	movq	0x000454f4(%rip),%r14
000000000003ebe4	call	*%r14
000000000003ebe7	movq	0x00067f4a(%rip),%rsi
000000000003ebee	movq	%rax,%rdi
000000000003ebf1	call	*%r14
000000000003ebf4	leaq	0x00069715(%rip),%rsi
000000000003ebfb	movq	%rbx,%rdi
000000000003ebfe	call	*0x0006970c(%rip)
000000000003ec04	movq	0x00067f35(%rip),%rsi
000000000003ec0b	movq	0xd0(%rbp),%rdi
000000000003ec0f	call	*%r14
000000000003ec12	testb	%al,%al
000000000003ec14	je	0x0003ec42
000000000003ec16	movq	0x00065e9b(%rip),%rsi
000000000003ec1d	movq	0xd0(%rbp),%rdi
000000000003ec21	movq	0x000454b0(%rip),%rbx
000000000003ec28	call	*%rbx
000000000003ec2a	movq	0x00066587(%rip),%rsi
000000000003ec31	movq	%rax,%rdi
000000000003ec34	call	*%rbx
000000000003ec36	movq	0x00067f0b(%rip),%rsi
000000000003ec3d	movq	%rax,%rdi
000000000003ec40	call	*%rbx
000000000003ec42	movq	0x00065eef(%rip),%rsi
000000000003ec49	movq	0xd0(%rbp),%rdi
000000000003ec4d	call	*0x00045485(%rip)
000000000003ec53	addq	$0x78,%rsp
000000000003ec57	popq	%rbx
000000000003ec58	popq	%r12
000000000003ec5a	popq	%r13
000000000003ec5c	popq	%r14
000000000003ec5e	popq	%r15
000000000003ec60	popq	%rbp
000000000003ec61	ret
-[PBXGDB_GetSharedLibraryInfoSequence execute]:
000000000003ec62	pushq	%rbp
000000000003ec63	movq	%rsp,%rbp
000000000003ec66	pushq	%r14
000000000003ec68	pushq	%rbx
000000000003ec69	movq	%rdi,%r14
000000000003ec6c	movq	0x00065e0d(%rip),%rsi
000000000003ec73	movq	0x00069d7e(%rip),%rdi
000000000003ec7a	call	*0x00045458(%rip)
000000000003ec80	movq	%rax,%rbx
000000000003ec83	movq	0x00065dfe(%rip),%rsi
000000000003ec8a	movq	%rbx,%rdi
000000000003ec8d	movq	%r14,%rdx
000000000003ec90	call	*0x00045442(%rip)
000000000003ec96	movq	0x00065dfb(%rip),%rsi
000000000003ec9d	movq	0x00067eac(%rip),%rdx
000000000003eca4	movq	%rbx,%rdi
000000000003eca7	call	*0x0004542b(%rip)
000000000003ecad	movq	0x00065e04(%rip),%rsi
000000000003ecb4	movq	%r14,%rdi
000000000003ecb7	call	*0x0004541b(%rip)
000000000003ecbd	movq	0x00065dfc(%rip),%rsi
000000000003ecc4	movq	%rax,%rdi
000000000003ecc7	call	*0x0004540b(%rip)
000000000003eccd	movq	0x0006748c(%rip),%rsi
000000000003ecd4	movq	%rax,%rdi
000000000003ecd7	movq	%rbx,%rdx
000000000003ecda	movl	$0x00000001,%ecx
000000000003ecdf	movq	0x000453f2(%rip),%rax
000000000003ece6	popq	%rbx
000000000003ece7	popq	%r14
000000000003ece9	popq	%rbp
000000000003ecea	jmp	*%rax
-[PBXGDB_SetImageSymbolsLevelSequence interruptIfNeeded]:
000000000003ecec	pushq	%rbp
000000000003eced	movq	%rsp,%rbp
000000000003ecf0	movl	$0x00000001,%eax
000000000003ecf5	popq	%rbp
000000000003ecf6	ret
-[PBXGDB_SetImageSymbolsLevelSequence setSharedLibraryEntry:]:
000000000003ecf7	pushq	%rbp
000000000003ecf8	movq	%rsp,%rbp
000000000003ecfb	pushq	%rbx
000000000003ecfc	pushq	%rax
000000000003ecfd	movq	%rdx,%rax
000000000003ed00	movq	%rdi,%rbx
000000000003ed03	movq	0x000702ae(%rip),%rdx
000000000003ed0a	movq	%rax,%rdi
000000000003ed0d	movq	%rbx,%rsi
000000000003ed10	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000003ed15	movq	0x000702a4(%rip),%rax
000000000003ed1c	movl	$0x00000003,(%rbx,%rax)
000000000003ed23	addq	$0x08,%rsp
000000000003ed27	popq	%rbx
000000000003ed28	popq	%rbp
000000000003ed29	ret
-[PBXGDB_SetImageSymbolsLevelSequence _didSetLevel:]:
000000000003ed2a	pushq	%rbp
000000000003ed2b	movq	%rsp,%rbp
000000000003ed2e	pushq	%rbx
000000000003ed2f	pushq	%rax
000000000003ed30	movq	%rdi,%rbx
000000000003ed33	movq	0x00065d7e(%rip),%rsi
000000000003ed3a	call	*0x00045398(%rip)
000000000003ed40	movq	0x00066be1(%rip),%rsi
000000000003ed47	leaq	0x00073bea(%rip),%rdx
000000000003ed4e	movq	%rax,%rdi
000000000003ed51	xorl	%ecx,%ecx
000000000003ed53	call	*0x0004537f(%rip)
000000000003ed59	movq	0x00070258(%rip),%rax
000000000003ed60	movq	(%rbx,%rax),%rdi
000000000003ed64	movq	0x00067ded(%rip),%rsi
000000000003ed6b	movl	$0x00000002,%edx
000000000003ed70	call	*0x00045362(%rip)
000000000003ed76	movq	0x00065dbb(%rip),%rsi
000000000003ed7d	movq	%rbx,%rdi
000000000003ed80	movq	0x00045351(%rip),%rax
000000000003ed87	addq	$0x08,%rsp
000000000003ed8b	popq	%rbx
000000000003ed8c	popq	%rbp
000000000003ed8d	jmp	*%rax
-[PBXGDB_SetImageSymbolsLevelSequence execute]:
000000000003ed8f	pushq	%rbp
000000000003ed90	movq	%rsp,%rbp
000000000003ed93	pushq	%r15
000000000003ed95	pushq	%r14
000000000003ed97	pushq	%rbx
000000000003ed98	pushq	%rax
000000000003ed99	movq	%rdi,%rbx
000000000003ed9c	movq	0x00065cdd(%rip),%rsi
000000000003eda3	movq	0x00069b16(%rip),%rdi
000000000003edaa	call	*0x00045328(%rip)
000000000003edb0	movq	%rax,%r14
000000000003edb3	movq	0x00070206(%rip),%rax
000000000003edba	movl	(%rbx,%rax),%r15d
000000000003edbe	movq	0x000701f3(%rip),%rax
000000000003edc5	movq	(%rbx,%rax),%rdi
000000000003edc9	movq	0x00067d90(%rip),%rsi
000000000003edd0	call	*0x00045302(%rip)
000000000003edd6	movq	0x000673c3(%rip),%rsi
000000000003eddd	movq	%r14,%rdi
000000000003ede0	movl	%r15d,%edx
000000000003ede3	movq	%rax,%rcx
000000000003ede6	call	*0x000452ec(%rip)
000000000003edec	movq	0x00065c95(%rip),%rsi
000000000003edf3	movq	%r14,%rdi
000000000003edf6	movq	%rbx,%rdx
000000000003edf9	call	*0x000452d9(%rip)
000000000003edff	movq	0x00065c92(%rip),%rsi
000000000003ee06	movq	0x00067d5b(%rip),%rdx
000000000003ee0d	movq	%r14,%rdi
000000000003ee10	call	*0x000452c2(%rip)
000000000003ee16	movq	0x00065c9b(%rip),%rsi
000000000003ee1d	movq	%rbx,%rdi
000000000003ee20	call	*0x000452b2(%rip)
000000000003ee26	movq	0x00065c93(%rip),%rsi
000000000003ee2d	movq	%rax,%rdi
000000000003ee30	call	*0x000452a2(%rip)
000000000003ee36	movq	0x00067323(%rip),%rsi
000000000003ee3d	movq	%rax,%rdi
000000000003ee40	movq	%r14,%rdx
000000000003ee43	movl	$0x00000001,%ecx
000000000003ee48	movq	0x00045289(%rip),%rax
000000000003ee4f	addq	$0x08,%rsp
000000000003ee53	popq	%rbx
000000000003ee54	popq	%r14
000000000003ee56	popq	%r15
000000000003ee58	popq	%rbp
000000000003ee59	jmp	*%rax
-[PBXGDB_GetSharedLibraryInfoSequenceForGlobals interruptIfNeeded]:
000000000003ee5b	pushq	%rbp
000000000003ee5c	movq	%rsp,%rbp
000000000003ee5f	movl	$0x00000001,%eax
000000000003ee64	popq	%rbp
000000000003ee65	ret
-[PBXGDB_GetSharedLibraryInfoSequenceForGlobals didFinish]:
000000000003ee66	pushq	%rbp
000000000003ee67	movq	%rsp,%rbp
000000000003ee6a	subq	$0x10,%rsp
000000000003ee6e	movq	%rdi,0xf0(%rbp)
000000000003ee72	movq	0x0006a0e7(%rip),%rax
000000000003ee79	movq	%rax,0xf8(%rbp)
000000000003ee7d	movq	0x00065cb4(%rip),%rsi
000000000003ee84	leaq	0xf0(%rbp),%rdi
000000000003ee88	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000003ee8d	addq	$0x10,%rsp
000000000003ee91	popq	%rbp
000000000003ee92	ret
-[PBXGDB_MISetSharedLibraryImageSymboslLevelToNoneSequence execute]:
000000000003ee93	pushq	%rbp
000000000003ee94	movq	%rsp,%rbp
000000000003ee97	pushq	%r14
000000000003ee99	pushq	%rbx
000000000003ee9a	movq	%rdi,%r14
000000000003ee9d	movq	0x00065bdc(%rip),%rsi
000000000003eea4	movq	0x00069b5d(%rip),%rdi
000000000003eeab	call	*0x00045227(%rip)
000000000003eeb1	movq	%rax,%rbx
000000000003eeb4	movq	0x00065bcd(%rip),%rsi
000000000003eebb	movq	%rbx,%rdi
000000000003eebe	movq	%r14,%rdx
000000000003eec1	call	*0x00045211(%rip)
000000000003eec7	movq	0x00065bca(%rip),%rsi
000000000003eece	movq	0x00065c63(%rip),%rdx
000000000003eed5	movq	%rbx,%rdi
000000000003eed8	call	*0x000451fa(%rip)
000000000003eede	movq	0x00065bd3(%rip),%rsi
000000000003eee5	movq	%r14,%rdi
000000000003eee8	call	*0x000451ea(%rip)
000000000003eeee	movq	0x00065bcb(%rip),%rsi
000000000003eef5	movq	%rax,%rdi
000000000003eef8	call	*0x000451da(%rip)
000000000003eefe	movq	0x00065bc3(%rip),%rsi
000000000003ef05	movq	%rax,%rdi
000000000003ef08	movq	%rbx,%rdx
000000000003ef0b	movq	0x000451c6(%rip),%rax
000000000003ef12	popq	%rbx
000000000003ef13	popq	%r14
000000000003ef15	popq	%rbp
000000000003ef16	jmp	*%rax
-[PBXGDB_ThreadListSequence _resultProcessStarted:]:
000000000003ef18	pushq	%rbp
000000000003ef19	movq	%rsp,%rbp
000000000003ef1c	pushq	%rbx
000000000003ef1d	pushq	%rax
000000000003ef1e	movq	%rdi,%rbx
000000000003ef21	movq	0x00066290(%rip),%rsi
000000000003ef28	call	*0x000451aa(%rip)
000000000003ef2e	movq	0x00066bf3(%rip),%rsi
000000000003ef35	movq	%rax,%rdi
000000000003ef38	call	*0x0004519a(%rip)
000000000003ef3e	movq	0x00065bf3(%rip),%rsi
000000000003ef45	movq	%rbx,%rdi
000000000003ef48	movq	0x00045189(%rip),%rax
000000000003ef4f	addq	$0x08,%rsp
000000000003ef53	popq	%rbx
000000000003ef54	popq	%rbp
000000000003ef55	jmp	*%rax
-[PBXGDB_ThreadListSequence _gotpid:]:
000000000003ef57	pushq	%rbp
000000000003ef58	movq	%rsp,%rbp
000000000003ef5b	pushq	%r14
000000000003ef5d	pushq	%rbx
000000000003ef5e	movq	%rdi,%rbx
000000000003ef61	movq	0x00066bd0(%rip),%rsi
000000000003ef68	movq	%rdx,%rdi
000000000003ef6b	call	*0x00045167(%rip)
000000000003ef71	movl	%eax,%r14d
000000000003ef74	movq	0x00065b3d(%rip),%rsi
000000000003ef7b	movq	%rbx,%rdi
000000000003ef7e	call	*0x00045154(%rip)
000000000003ef84	movq	0x000660bd(%rip),%rsi
000000000003ef8b	movq	%rax,%rdi
000000000003ef8e	movl	%r14d,%edx
000000000003ef91	call	*0x00045141(%rip)
000000000003ef97	movq	0x00067c02(%rip),%rsi
000000000003ef9e	movq	%rbx,%rdi
000000000003efa1	movq	0x00045130(%rip),%rax
000000000003efa8	popq	%rbx
000000000003efa9	popq	%r14
000000000003efab	popq	%rbp
000000000003efac	jmp	*%rax
-[PBXGDB_ThreadListSequence _loadIntrospectionLibrary_legacy]:
000000000003efae	pushq	%rbp
000000000003efaf	movq	%rsp,%rbp
000000000003efb2	pushq	%r14
000000000003efb4	pushq	%rbx
000000000003efb5	movq	%rdi,%r14
000000000003efb8	movq	0x00065af9(%rip),%rsi
000000000003efbf	movq	0x00045112(%rip),%rbx
000000000003efc6	call	*%rbx
000000000003efc8	movq	0x00065af1(%rip),%rsi
000000000003efcf	movq	%rax,%rdi
000000000003efd2	call	*%rbx
000000000003efd4	leaq	0x0007347d(%rip),%rdx
000000000003efdb	movq	0x00066a16(%rip),%rsi
000000000003efe2	movq	%rax,%rdi
000000000003efe5	call	*%rbx
000000000003efe7	cmpl	$0x02,%eax
000000000003efea	je	0x0003f08a
000000000003eff0	testl	%eax,%eax
000000000003eff2	jne	0x0003f09e
000000000003eff8	movq	0x00065a81(%rip),%rsi
000000000003efff	movq	0x00069702(%rip),%rdi
000000000003f006	call	*0x000450cc(%rip)
000000000003f00c	movq	%rax,%rbx
000000000003f00f	movq	0x000669ea(%rip),%rsi
000000000003f016	leaq	0x0007343b(%rip),%rdx
000000000003f01d	movq	%rbx,%rdi
000000000003f020	call	*0x000450b2(%rip)
000000000003f026	movq	0x00065a5b(%rip),%rsi
000000000003f02d	movq	%rbx,%rdi
000000000003f030	movq	%r14,%rdx
000000000003f033	call	*0x0004509f(%rip)
000000000003f039	movq	0x00065a58(%rip),%rsi
000000000003f040	movq	0x00067bb1(%rip),%rdx
000000000003f047	movq	%rbx,%rdi
000000000003f04a	call	*0x00045088(%rip)
000000000003f050	movq	0x00065a61(%rip),%rsi
000000000003f057	movq	%r14,%rdi
000000000003f05a	call	*0x00045078(%rip)
000000000003f060	movq	0x00065a59(%rip),%rsi
000000000003f067	movq	%rax,%rdi
000000000003f06a	call	*0x00045068(%rip)
000000000003f070	movq	0x00065a51(%rip),%rsi
000000000003f077	movq	%rax,%rdi
000000000003f07a	movq	%rbx,%rdx
000000000003f07d	movq	0x00045054(%rip),%rax
000000000003f084	popq	%rbx
000000000003f085	popq	%r14
000000000003f087	popq	%rbp
000000000003f088	jmp	*%rax
000000000003f08a	movq	0x00067b6f(%rip),%rsi
000000000003f091	movq	%r14,%rdi
000000000003f094	popq	%rbx
000000000003f095	popq	%r14
000000000003f097	popq	%rbp
000000000003f098	jmp	*0x0004503a(%rip)
000000000003f09e	movq	0x00067b63(%rip),%rsi
000000000003f0a5	jmp	0x0003f091
-[PBXGDB_ThreadListSequence _loadIntrospectionLibrary_verifySafetyCmd:]:
000000000003f0a7	pushq	%rbp
000000000003f0a8	movq	%rsp,%rbp
000000000003f0ab	pushq	%r15
000000000003f0ad	pushq	%r14
000000000003f0af	pushq	%r12
000000000003f0b1	pushq	%rbx
000000000003f0b2	movq	%rdx,%r12
000000000003f0b5	movq	%rdi,%r15
000000000003f0b8	movq	0x000659f9(%rip),%rsi
000000000003f0bf	movq	0x00045012(%rip),%rbx
000000000003f0c6	call	*%rbx
000000000003f0c8	movq	%rax,%r14
000000000003f0cb	movq	0x0006696e(%rip),%rsi
000000000003f0d2	movq	%r12,%rdi
000000000003f0d5	call	*%rbx
000000000003f0d7	movl	$0x00000001,%ebx
000000000003f0dc	testb	%al,%al
000000000003f0de	je	0x0003f0fa
000000000003f0e0	movq	0x00066961(%rip),%rsi
000000000003f0e7	movq	%r12,%rdi
000000000003f0ea	call	*0x00044fe8(%rip)
000000000003f0f0	cmpb	$0x01,%al
000000000003f0f2	movl	$0x00000001,%ebx
000000000003f0f7	sbbl	$0xff,%ebx
000000000003f0fa	movq	0x000659bf(%rip),%rsi
000000000003f101	movq	___copy_helper_block_(%rip),%r12
000000000003f108	movq	%r14,%rdi
000000000003f10b	call	*%r12
000000000003f10e	movq	0x0006693b(%rip),%rsi
000000000003f115	leaq	0x0007333c(%rip),%rcx
000000000003f11c	movq	%rax,%rdi
000000000003f11f	movl	%ebx,%edx
000000000003f121	call	*%r12
000000000003f124	cmpl	$0x02,%ebx
000000000003f127	jne	0x0003f141
000000000003f129	movq	0x00067ad0(%rip),%rsi
000000000003f130	movq	%r15,%rdi
000000000003f133	popq	%rbx
000000000003f134	popq	%r12
000000000003f136	popq	%r14
000000000003f138	popq	%r15
000000000003f13a	popq	%rbp
000000000003f13b	jmp	*0x00044f97(%rip)
000000000003f141	movq	0x00067ac0(%rip),%rsi
000000000003f148	jmp	0x0003f130
-[PBXGDB_ThreadListSequence _loadIntrospectionLibrary_checkSafety]:
000000000003f14a	pushq	%rbp
000000000003f14b	movq	%rsp,%rbp
000000000003f14e	pushq	%r14
000000000003f150	pushq	%rbx
000000000003f151	movq	%rdi,%r14
000000000003f154	movq	0x00065925(%rip),%rsi
000000000003f15b	movq	0x0006959e(%rip),%rdi
000000000003f162	call	*0x00044f70(%rip)
000000000003f168	movq	%rax,%rbx
000000000003f16b	movq	0x00065916(%rip),%rsi
000000000003f172	movq	%rbx,%rdi
000000000003f175	movq	%r14,%rdx
000000000003f178	call	*0x00044f5a(%rip)
000000000003f17e	movq	0x00065913(%rip),%rsi
000000000003f185	movq	0x00067a84(%rip),%rdx
000000000003f18c	movq	%rbx,%rdi
000000000003f18f	call	*0x00044f43(%rip)
000000000003f195	movq	0x0006591c(%rip),%rsi
000000000003f19c	movq	%r14,%rdi
000000000003f19f	call	*0x00044f33(%rip)
000000000003f1a5	movq	0x00065914(%rip),%rsi
000000000003f1ac	movq	%rax,%rdi
000000000003f1af	call	*0x00044f23(%rip)
000000000003f1b5	movq	0x0006590c(%rip),%rsi
000000000003f1bc	movq	%rax,%rdi
000000000003f1bf	movq	%rbx,%rdx
000000000003f1c2	movq	0x00044f0f(%rip),%rax
000000000003f1c9	popq	%rbx
000000000003f1ca	popq	%r14
000000000003f1cc	popq	%rbp
000000000003f1cd	jmp	*%rax
-[PBXGDB_ThreadListSequence _loadIntrospectionLibrary_didCheckSafety:]:
000000000003f1cf	pushq	%rbp
000000000003f1d0	movq	%rsp,%rbp
000000000003f1d3	pushq	%r14
000000000003f1d5	pushq	%rbx
000000000003f1d6	movq	%rdi,%rbx
000000000003f1d9	movq	0x000658f0(%rip),%rsi
000000000003f1e0	movq	0x00044ef1(%rip),%r14
000000000003f1e7	movq	%rdx,%rdi
000000000003f1ea	call	*%r14
000000000003f1ed	movq	0x000658e4(%rip),%rsi
000000000003f1f4	leaq	0x00071a1d(%rip),%rdx
000000000003f1fb	movq	%rax,%rdi
000000000003f1fe	call	*%r14
000000000003f201	movq	0x00065900(%rip),%rsi
000000000003f208	movq	%rax,%rdi
000000000003f20b	call	*%r14
000000000003f20e	leaq	0x0006914b(%rip),%rsi
000000000003f215	leaq	0x0007087c(%rip),%rdx
000000000003f21c	movq	%rax,%rdi
000000000003f21f	call	*0x0006913b(%rip)
000000000003f225	cmpb	$0x01,%al
000000000003f227	jne	0x0003f23d
000000000003f229	movq	0x00067970(%rip),%rsi
000000000003f230	movq	%rbx,%rdi
000000000003f233	popq	%rbx
000000000003f234	popq	%r14
000000000003f236	popq	%rbp
000000000003f237	jmp	*0x00044e9b(%rip)
000000000003f23d	movq	0x000679c4(%rip),%rsi
000000000003f244	jmp	0x0003f230
-[PBXGDB_ThreadListSequence _loadIntrospectionLibrary_load]:
000000000003f246	pushq	%rbp
000000000003f247	movq	%rsp,%rbp
000000000003f24a	pushq	%r14
000000000003f24c	pushq	%rbx
000000000003f24d	movq	%rdi,%r14
000000000003f250	movq	0x00065861(%rip),%rsi
000000000003f257	call	*0x00044e7b(%rip)
000000000003f25d	movq	0x00065d3c(%rip),%rsi
000000000003f264	movq	%rax,%rdi
000000000003f267	movl	$0x00000001,%edx
000000000003f26c	call	*0x00044e66(%rip)
000000000003f272	movq	0x00065807(%rip),%rsi
000000000003f279	movq	0x000697a0(%rip),%rdi
000000000003f280	call	*0x00044e52(%rip)
000000000003f286	movq	%rax,%rbx
000000000003f289	movq	0x000657f8(%rip),%rsi
000000000003f290	movq	%rbx,%rdi
000000000003f293	movq	%r14,%rdx
000000000003f296	call	*0x00044e3c(%rip)
000000000003f29c	movq	0x000657f5(%rip),%rsi
000000000003f2a3	movq	0x0006796e(%rip),%rdx
000000000003f2aa	movq	%rbx,%rdi
000000000003f2ad	call	*0x00044e25(%rip)
000000000003f2b3	movq	0x000657fe(%rip),%rsi
000000000003f2ba	movq	%r14,%rdi
000000000003f2bd	call	*0x00044e15(%rip)
000000000003f2c3	movq	0x000657f6(%rip),%rsi
000000000003f2ca	movq	%rax,%rdi
000000000003f2cd	call	*0x00044e05(%rip)
000000000003f2d3	movq	0x000657ee(%rip),%rsi
000000000003f2da	movq	%rax,%rdi
000000000003f2dd	movq	%rbx,%rdx
000000000003f2e0	movq	0x00044df1(%rip),%rax
000000000003f2e7	popq	%rbx
000000000003f2e8	popq	%r14
000000000003f2ea	popq	%rbp
000000000003f2eb	jmp	*%rax
-[PBXGDB_ThreadListSequence _finishLoadIntrospectionLibrary:]:
000000000003f2ed	pushq	%rbp
000000000003f2ee	movq	%rsp,%rbp
000000000003f2f1	pushq	%r15
000000000003f2f3	pushq	%r14
000000000003f2f5	pushq	%rbx
000000000003f2f6	pushq	%rax
000000000003f2f7	movq	%rdi,%r14
000000000003f2fa	movq	0x000657cf(%rip),%rsi
000000000003f301	movq	0x00044dd0(%rip),%r15
000000000003f308	movq	%rdx,%rdi
000000000003f30b	call	*%r15
000000000003f30e	movq	0x000657c3(%rip),%rsi
000000000003f315	leaq	0x00070e1c(%rip),%rdx
000000000003f31c	movq	%rax,%rdi
000000000003f31f	call	*%r15
000000000003f322	movq	0x000657df(%rip),%rsi
000000000003f329	movq	%rax,%rdi
000000000003f32c	call	*%r15
000000000003f32f	leaq	0x0006902a(%rip),%rsi
000000000003f336	leaq	0x00071f7b(%rip),%rdx
000000000003f33d	movq	%rax,%rdi
000000000003f340	call	*0x0006901a(%rip)
000000000003f346	movb	%al,%bl
000000000003f348	movq	0x00065769(%rip),%rsi
000000000003f34f	movq	%r14,%rdi
000000000003f352	call	*%r15
000000000003f355	movq	%rax,%rdi
000000000003f358	movq	0x00067869(%rip),%rsi
000000000003f35f	cmpb	$0x01,%bl
000000000003f362	jne	0x0003f3f1
000000000003f368	xorl	%edx,%edx
000000000003f36a	call	*0x00044d68(%rip)
000000000003f370	movq	0x00065709(%rip),%rsi
000000000003f377	movq	0x000696aa(%rip),%rdi
000000000003f37e	call	*0x00044d54(%rip)
000000000003f384	movq	%rax,%rbx
000000000003f387	movq	0x000656fa(%rip),%rsi
000000000003f38e	movq	%rbx,%rdi
000000000003f391	movq	%r14,%rdx
000000000003f394	call	*0x00044d3e(%rip)
000000000003f39a	movq	0x000656f7(%rip),%rsi
000000000003f3a1	movq	0x00067878(%rip),%rdx
000000000003f3a8	movq	%rbx,%rdi
000000000003f3ab	call	*0x00044d27(%rip)
000000000003f3b1	movq	0x00065700(%rip),%rsi
000000000003f3b8	movq	%r14,%rdi
000000000003f3bb	call	*0x00044d17(%rip)
000000000003f3c1	movq	0x000656f8(%rip),%rsi
000000000003f3c8	movq	%rax,%rdi
000000000003f3cb	call	*0x00044d07(%rip)
000000000003f3d1	movq	0x000656f0(%rip),%rsi
000000000003f3d8	movq	%rax,%rdi
000000000003f3db	movq	%rbx,%rdx
000000000003f3de	movq	0x00044cf3(%rip),%rax
000000000003f3e5	addq	$0x08,%rsp
000000000003f3e9	popq	%rbx
000000000003f3ea	popq	%r14
000000000003f3ec	popq	%r15
000000000003f3ee	popq	%rbp
000000000003f3ef	jmp	*%rax
000000000003f3f1	movl	$0x00000001,%edx
000000000003f3f6	call	*0x00044cdc(%rip)
000000000003f3fc	movq	0x000677cd(%rip),%rsi
000000000003f403	movq	%r14,%rdi
000000000003f406	movq	0x00044ccb(%rip),%rax
000000000003f40d	addq	$0x08,%rsp
000000000003f411	popq	%rbx
000000000003f412	popq	%r14
000000000003f414	popq	%r15
000000000003f416	popq	%rbp
000000000003f417	jmp	*%rax
-[PBXGDB_ThreadListSequence _statusOfLoadIntrospectionLibraryLoad:]:
000000000003f419	pushq	%rbp
000000000003f41a	movq	%rsp,%rbp
000000000003f41d	pushq	%rbx
000000000003f41e	pushq	%rax
000000000003f41f	movq	%rdi,%rbx
000000000003f422	movq	0x000656df(%rip),%rsi
000000000003f429	movq	%rdx,%rdi
000000000003f42c	call	*0x00044ca6(%rip)
000000000003f432	leaq	0x00068f27(%rip),%rsi
000000000003f439	leaq	0x00071e78(%rip),%rdx
000000000003f440	movq	%rax,%rdi
000000000003f443	call	*0x00068f17(%rip)
000000000003f449	movq	0x000677a0(%rip),%rsi
000000000003f450	movq	%rbx,%rdi
000000000003f453	movq	0x00044c7e(%rip),%rax
000000000003f45a	addq	$0x08,%rsp
000000000003f45e	popq	%rbx
000000000003f45f	popq	%rbp
000000000003f460	jmp	*%rax
-[PBXGDB_ThreadListSequence handleErrorForMICommand:]:
000000000003f462	pushq	%rbp
000000000003f463	movq	%rsp,%rbp
000000000003f466	pushq	%r15
000000000003f468	pushq	%r14
000000000003f46a	pushq	%rbx
000000000003f46b	pushq	%rax
000000000003f46c	movq	%rdx,%r14
000000000003f46f	movq	%rdi,%r15
000000000003f472	movq	0x0006fb77(%rip),%rax
000000000003f479	cmpb	$0x01,(%r15,%rax)
000000000003f47e	jne	0x0003f489
000000000003f480	movq	0x000656b1(%rip),%rsi
000000000003f487	jmp	0x0003f4e4
000000000003f489	movq	0x0006fb68(%rip),%rax
000000000003f490	cmpb	$0x01,(%r15,%rax)
000000000003f495	jne	0x0003f4a0
000000000003f497	movq	0x00067702(%rip),%rsi
000000000003f49e	jmp	0x0003f4e4
000000000003f4a0	movq	0x0006fb59(%rip),%rax
000000000003f4a7	cmpb	$0x01,(%r15,%rax)
000000000003f4ac	jne	0x0003f4dd
000000000003f4ae	movq	0x00065603(%rip),%rsi
000000000003f4b5	movq	0x00044c1c(%rip),%rbx
000000000003f4bc	movq	%r15,%rdi
000000000003f4bf	call	*%rbx
000000000003f4c1	movq	0x00067720(%rip),%rsi
000000000003f4c8	movq	%rax,%rdi
000000000003f4cb	xorl	%edx,%edx
000000000003f4cd	call	*%rbx
000000000003f4cf	movq	0x0006771a(%rip),%rsi
000000000003f4d6	movq	%r15,%rdi
000000000003f4d9	call	*%rbx
000000000003f4db	jmp	0x0003f4ed
000000000003f4dd	movq	0x0006770c(%rip),%rsi
000000000003f4e4	movq	%r15,%rdi
000000000003f4e7	call	*0x00044beb(%rip)
000000000003f4ed	movq	0x00069524(%rip),%rdi
000000000003f4f4	leaq	0x00068e35(%rip),%rsi
000000000003f4fb	call	*0x00068e2f(%rip)
000000000003f501	leaq	0x00068e38(%rip),%rsi
000000000003f508	movq	%r14,%rdi
000000000003f50b	movq	%rax,%rdx
000000000003f50e	call	*0x00068e2c(%rip)
000000000003f514	cmpb	$0x01,%al
000000000003f516	jne	0x0003f5e6
000000000003f51c	movq	0x000655ad(%rip),%rsi
000000000003f523	movq	0x00044bae(%rip),%rbx
000000000003f52a	movq	%r14,%rdi
000000000003f52d	call	*%rbx
000000000003f52f	movq	0x000655a2(%rip),%rsi
000000000003f536	leaq	0x000717bb(%rip),%rdx
000000000003f53d	movq	%rax,%rdi
000000000003f540	call	*%rbx
000000000003f542	movq	0x000655bf(%rip),%rsi
000000000003f549	movq	%rax,%rdi
000000000003f54c	call	*%rbx
000000000003f54e	movq	%rax,%rbx
000000000003f551	testq	%rbx,%rbx
000000000003f554	je	0x0003f5e6
000000000003f55a	movq	0x00065d77(%rip),%rsi
000000000003f561	leaq	0x00074ab0(%rip),%rdx
000000000003f568	movq	%rbx,%rdi
000000000003f56b	call	*0x00044b67(%rip)
000000000003f571	movq	$0x7fffffffffffffff,%r14
000000000003f57b	cmpq	%r14,%rax
000000000003f57e	jne	0x0003f5c2
000000000003f580	movq	0x00065d51(%rip),%rsi
000000000003f587	leaq	0x00074aaa(%rip),%rdx
000000000003f58e	movq	%rbx,%rdi
000000000003f591	call	*0x00044b41(%rip)
000000000003f597	cmpq	%r14,%rax
000000000003f59a	jne	0x0003f5c2
000000000003f59c	movq	0x00065d35(%rip),%rsi
000000000003f5a3	leaq	0x00074aae(%rip),%rdx
000000000003f5aa	movq	%rbx,%rdi
000000000003f5ad	call	*0x00044b25(%rip)
000000000003f5b3	movq	$0x7fffffffffffffff,%rcx
000000000003f5bd	cmpq	%rcx,%rax
000000000003f5c0	je	0x0003f5e6
000000000003f5c2	movq	0x000654ef(%rip),%rsi
000000000003f5c9	movq	0x00044b08(%rip),%rbx
000000000003f5d0	movq	%r15,%rdi
000000000003f5d3	call	*%rbx
000000000003f5d5	movq	0x0006765c(%rip),%rsi
000000000003f5dc	movq	%rax,%rdi
000000000003f5df	movl	$0x00000001,%edx
000000000003f5e4	call	*%rbx
000000000003f5e6	movl	$0x00000001,%eax
000000000003f5eb	addq	$0x08,%rsp
000000000003f5ef	popq	%rbx
000000000003f5f0	popq	%r14
000000000003f5f2	popq	%r15
000000000003f5f4	popq	%rbp
000000000003f5f5	ret
-[PBXGDB_UpdateStackSequence initWithStartIndex:endIndex:shouldUpdateThread:resultHandler:]:
000000000003f5f6	pushq	%rbp
000000000003f5f7	movq	%rsp,%rbp
000000000003f5fa	subq	$0x10,%rsp
000000000003f5fe	movq	0x0006763b(%rip),%rsi
000000000003f605	movq	%r9,0x08(%rsp)
000000000003f60a	movl	%r8d,(%rsp)
000000000003f60e	movl	$0x00000001,%r9d
000000000003f614	subq	%rdx,%r9
000000000003f617	addq	%rcx,%r9
000000000003f61a	movq	$0x7fffffffffffffff,%r8
000000000003f624	call	*0x00044aae(%rip)
000000000003f62a	addq	$0x10,%rsp
000000000003f62e	popq	%rbp
000000000003f62f	ret
-[PBXGDB_UpdateStackSequence _gotLiteStackFramesForResetting:]:
000000000003f630	pushq	%rbp
000000000003f631	movq	%rsp,%rbp
000000000003f634	movq	0x00067645(%rip),%rsi
000000000003f63b	popq	%rbp
000000000003f63c	jmp	*0x00044a96(%rip)
-[PBXGDB_UpdateStackSequence handleErrorForMICommand:]:
000000000003f642	pushq	%rbp
000000000003f643	movq	%rsp,%rbp
000000000003f646	pushq	%r15
000000000003f648	pushq	%r14
000000000003f64a	pushq	%r12
000000000003f64c	pushq	%rbx
000000000003f64d	subq	$0x30,%rsp
000000000003f651	movq	%rdx,%r15
000000000003f654	movq	%rdi,0xd8(%rbp)
000000000003f658	movq	%rsi,0xd0(%rbp)
000000000003f65c	movq	0x000665b5(%rip),%rsi
000000000003f663	movq	%r15,%rdi
000000000003f666	call	*0x00044a6c(%rip)
000000000003f66c	movq	%rax,%r14
000000000003f66f	leaq	0x00068cba(%rip),%rsi
000000000003f676	movq	0x000693bb(%rip),%rdi
000000000003f67d	call	*0x00068cad(%rip)
000000000003f683	leaq	0x00068cb6(%rip),%rsi
000000000003f68a	movq	%r15,%rdi
000000000003f68d	movq	%rax,%rdx
000000000003f690	call	*0x00068caa(%rip)
000000000003f696	testb	%al,%al
000000000003f698	je	0x0003f72f
000000000003f69e	movq	0x0006577b(%rip),%rsi
000000000003f6a5	leaq	0x00074a8c(%rip),%rdx
000000000003f6ac	movq	%r14,%rdi
000000000003f6af	call	*0x00044a23(%rip)
000000000003f6b5	testb	%al,%al
000000000003f6b7	je	0x0003f884
000000000003f6bd	movq	0x000653f4(%rip),%rsi
000000000003f6c4	movq	0xd8(%rbp),%rdi
000000000003f6c8	movq	0x00044a09(%rip),%rbx
000000000003f6cf	call	*%rbx
000000000003f6d1	movq	0x000653e8(%rip),%rsi
000000000003f6d8	movq	%rax,%rdi
000000000003f6db	call	*%rbx
000000000003f6dd	movq	%rax,%r14
000000000003f6e0	leaq	0x00074991(%rip),%rcx
000000000003f6e7	movq	0x00066362(%rip),%rsi
000000000003f6ee	movq	%r14,%rdi
000000000003f6f1	movl	$0x00000001,%edx
000000000003f6f6	call	*%rbx
000000000003f6f8	movq	0x0006f951(%rip),%rax
000000000003f6ff	movq	0xd8(%rbp),%rcx
000000000003f703	movb	$0x00,(%rcx,%rax)
000000000003f707	movq	0xd8(%rbp),%rcx
000000000003f70b	movsbl	(%rcx,%rax),%edx
000000000003f70f	movq	0x00067572(%rip),%rsi
000000000003f716	movq	%r15,%rdi
000000000003f719	call	*%rbx
000000000003f71b	movq	0x000653a6(%rip),%rsi
000000000003f722	movq	%r14,%rdi
000000000003f725	movq	%r15,%rdx
000000000003f728	call	*%rbx
000000000003f72a	jmp	0x0003f916
000000000003f72f	movq	0x0006930a(%rip),%rdi
000000000003f736	leaq	0x00068bf3(%rip),%rsi
000000000003f73d	call	*0x00068bed(%rip)
000000000003f743	leaq	0x00068bf6(%rip),%rsi
000000000003f74a	movq	%r15,%rdi
000000000003f74d	movq	%rax,%rdx
000000000003f750	call	*0x00068bea(%rip)
000000000003f756	testb	%al,%al
000000000003f758	je	0x0003f859
000000000003f75e	movq	0x000656bb(%rip),%rsi
000000000003f765	leaq	0x000749ec(%rip),%rdx
000000000003f76c	movq	%r14,%rdi
000000000003f76f	call	*0x00044963(%rip)
000000000003f775	testb	%al,%al
000000000003f777	je	0x0003f8a8
000000000003f77d	movq	0x00066fc4(%rip),%rsi
000000000003f784	movq	0x0004494d(%rip),%r12
000000000003f78b	movq	%r15,%rdi
000000000003f78e	call	*%r12
000000000003f791	movq	%rax,%rbx
000000000003f794	movq	0x000674f5(%rip),%rsi
000000000003f79b	movq	%r15,%rdi
000000000003f79e	call	*%r12
000000000003f7a1	cmpq	%rax,%rbx
000000000003f7a4	jne	0x0003f8a8
000000000003f7aa	movq	0x000652cf(%rip),%rsi
000000000003f7b1	movq	0x00069280(%rip),%rdi
000000000003f7b8	movq	0x00044919(%rip),%r14
000000000003f7bf	call	*%r14
000000000003f7c2	movq	%rax,%rbx
000000000003f7c5	movq	0x000674bc(%rip),%rsi
000000000003f7cc	movq	%rbx,%rdi
000000000003f7cf	xorl	%edx,%edx
000000000003f7d1	call	*%r14
000000000003f7d4	movq	0x000674bd(%rip),%rsi
000000000003f7db	movq	%rbx,%rdi
000000000003f7de	movl	$0x00000001,%edx
000000000003f7e3	call	*%r14
000000000003f7e6	movq	0x0006529b(%rip),%rsi
000000000003f7ed	movq	0xd8(%rbp),%rdx
000000000003f7f1	movq	%rbx,%rdi
000000000003f7f4	call	*%r14
000000000003f7f7	movq	0x0006529a(%rip),%rsi
000000000003f7fe	movq	0x0006749b(%rip),%rdx
000000000003f805	movq	%rbx,%rdi
000000000003f808	call	*%r14
000000000003f80b	movq	0x00066346(%rip),%rsi
000000000003f812	movq	0xd8(%rbp),%rdi
000000000003f816	call	*%r14
000000000003f819	movq	0x00065288(%rip),%rsi
000000000003f820	movq	%rbx,%rdi
000000000003f823	movq	%rax,%rdx
000000000003f826	call	*%r14
000000000003f829	movq	0x00065288(%rip),%rsi
000000000003f830	movq	0xd8(%rbp),%rdi
000000000003f834	call	*%r14
000000000003f837	movq	0x00065282(%rip),%rsi
000000000003f83e	movq	%rax,%rdi
000000000003f841	call	*%r14
000000000003f844	movq	0x0006527d(%rip),%rsi
000000000003f84b	movq	%rax,%rdi
000000000003f84e	movq	%rbx,%rdx
000000000003f851	call	*%r14
000000000003f854	jmp	0x0003f916
000000000003f859	movq	0x000690c0(%rip),%rdi
000000000003f860	leaq	0x00068ac9(%rip),%rsi
000000000003f867	call	*0x00068ac3(%rip)
000000000003f86d	leaq	0x00068acc(%rip),%rsi
000000000003f874	movq	%r15,%rdi
000000000003f877	movq	%rax,%rdx
000000000003f87a	call	*0x00068ac0(%rip)
000000000003f880	testb	%al,%al
000000000003f882	jne	0x0003f8a8
000000000003f884	movq	0x00065245(%rip),%rsi
000000000003f88b	movq	0x00044846(%rip),%rbx
000000000003f892	movq	%r15,%rdi
000000000003f895	call	*%rbx
000000000003f897	movq	0x00066962(%rip),%rsi
000000000003f89e	movq	%r15,%rdi
000000000003f8a1	movq	%rax,%rdx
000000000003f8a4	call	*%rbx
000000000003f8a6	jmp	0x0003f916
000000000003f8a8	leaq	0x00068a81(%rip),%rsi
000000000003f8af	movq	%r15,%rdi
000000000003f8b2	call	*0x00068a78(%rip)
000000000003f8b8	movq	%rax,%rdi
000000000003f8bb	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000003f8c0	movq	%r14,0x08(%rsp)
000000000003f8c5	movq	%rax,(%rsp)
000000000003f8c9	leaq	0xd8(%rbp),%rdi
000000000003f8cd	leaq	0xd0(%rbp),%rsi
000000000003f8d1	leaq	0x00021cbb(%rip),%rdx
000000000003f8d8	leaq	0x00021a0f(%rip),%rcx
000000000003f8df	leaq	0x00074892(%rip),%r9
000000000003f8e6	movl	$0x00000242,%r8d
000000000003f8ec	xorb	%al,%al
000000000003f8ee	callq	0x0004e5b4	; symbol stub for: __DVTAssertionWarningHandler
000000000003f8f3	leaq	0xc0(%rbp),%rdi
000000000003f8f7	movq	0xd8(%rbp),%rax
000000000003f8fb	movq	%rax,0xc0(%rbp)
000000000003f8ff	movq	0x00069662(%rip),%rax
000000000003f906	movq	%rax,0xc8(%rbp)
000000000003f90a	movq	0x00065227(%rip),%rsi
000000000003f911	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000003f916	xorl	%eax,%eax
000000000003f918	addq	$0x30,%rsp
000000000003f91c	popq	%rbx
000000000003f91d	popq	%r12
000000000003f91f	popq	%r14
000000000003f921	popq	%r15
000000000003f923	popq	%rbp
000000000003f924	ret
-[PBXGDB_UpdateStackSequence _gotShlibInfo:]:
000000000003f925	pushq	%rbp
000000000003f926	movq	%rsp,%rbp
000000000003f929	pushq	%r15
000000000003f92b	pushq	%r14
000000000003f92d	pushq	%r13
000000000003f92f	pushq	%r12
000000000003f931	pushq	%rbx
000000000003f932	subq	$0x00000108,%rsp
000000000003f939	movq	%rdx,%r14
000000000003f93c	movq	0x0004475d(%rip),%rax
000000000003f943	movq	(%rax),%rax
000000000003f946	movq	%rax,0xd0(%rbp)
000000000003f94a	movq	%rdi,0xc8(%rbp)
000000000003f94e	movq	%rsi,0xc0(%rbp)
000000000003f952	movq	0x0006f707(%rip),%rax
000000000003f959	decq	(%rdi,%rax)
000000000003f95d	testq	%r14,%r14
000000000003f960	jne	0x0003f9c8
000000000003f962	movq	0x0006908f(%rip),%rdi
000000000003f969	leaq	0x000689c0(%rip),%rsi
000000000003f970	call	*0x000689ba(%rip)
000000000003f976	movq	%rax,%rdi
000000000003f979	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000003f97e	leaq	0xc8(%rbp),%rdi
000000000003f982	leaq	0xc0(%rbp),%rsi
000000000003f986	leaq	0x00021c98(%rip),%rdx
000000000003f98d	leaq	0x0002195a(%rip),%rcx
000000000003f994	leaq	0x0007001d(%rip),%r9
000000000003f99b	leaq	0x0001e15e(%rip),%r8
000000000003f9a2	leaq	0x0001e15b(%rip),%rbx
000000000003f9a9	movq	%rbx,0x18(%rsp)
000000000003f9ae	leaq	0x0006fe83(%rip),%rbx
000000000003f9b5	movq	%rbx,0x10(%rsp)
000000000003f9ba	movq	%rax,0x08(%rsp)
000000000003f9bf	movq	%r8,(%rsp)
000000000003f9c3	jmp	0x0003fa70
000000000003f9c8	movq	0x00069029(%rip),%rdi
000000000003f9cf	leaq	0x0006895a(%rip),%rsi
000000000003f9d6	call	*0x00068954(%rip)
000000000003f9dc	leaq	0x0006895d(%rip),%rsi
000000000003f9e3	movq	%r14,%rdi
000000000003f9e6	movq	%rax,%rdx
000000000003f9e9	call	*0x00068951(%rip)
000000000003f9ef	testb	%al,%al
000000000003f9f1	jne	0x0003fa7d
000000000003f9f7	movq	0x00068ffa(%rip),%rdi
000000000003f9fe	leaq	0x0006892b(%rip),%rsi
000000000003fa05	call	*0x00068925(%rip)
000000000003fa0b	movq	%rax,%rdi
000000000003fa0e	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000003fa13	movq	%rax,%rbx
000000000003fa16	movq	0x00065243(%rip),%rsi
000000000003fa1d	movq	%r14,%rdi
000000000003fa20	call	*0x000446b2(%rip)
000000000003fa26	leaq	0x0006fe0b(%rip),%r8
000000000003fa2d	leaq	0x0002182d(%rip),%r9
000000000003fa34	leaq	0xc8(%rbp),%rdi
000000000003fa38	leaq	0xc0(%rbp),%rsi
000000000003fa3c	leaq	0x00021be2(%rip),%rdx
000000000003fa43	leaq	0x000218a4(%rip),%rcx
000000000003fa4a	movq	%r9,0x20(%rsp)
000000000003fa4f	leaq	0x0006ff82(%rip),%r9
000000000003fa56	movq	%r8,0x18(%rsp)
000000000003fa5b	movq	%rax,0x10(%rsp)
000000000003fa60	leaq	0x0001e099(%rip),%rax
000000000003fa67	movq	%rbx,0x08(%rsp)
000000000003fa6c	movq	%rax,(%rsp)
000000000003fa70	movl	$0x00000262,%r8d
000000000003fa76	xorb	%al,%al
000000000003fa78	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000003fa7d	movq	0x0006504c(%rip),%rsi
000000000003fa84	movq	0x0004464d(%rip),%rbx
000000000003fa8b	movq	%r14,%rdi
000000000003fa8e	call	*%rbx
000000000003fa90	movq	0x00065051(%rip),%rsi
000000000003fa97	movq	%rax,%rdi
000000000003fa9a	call	*%rbx
000000000003fa9c	movq	%rax,%r15
000000000003fa9f	movq	0x00066c72(%rip),%rsi
000000000003faa6	movq	%r14,%rdi
000000000003faa9	call	*%rbx
000000000003faab	movq	%rax,0xfffffef8(%rbp)
000000000003fab2	leaq	0x000688c7(%rip),%rsi
000000000003fab9	leaq	0x80(%rbp),%rdx
000000000003fabd	leaq	0xffffff00(%rbp),%rcx
000000000003fac4	xorps	%xmm0,%xmm0
000000000003fac7	movaps	%xmm0,0xb0(%rbp)
000000000003facb	movaps	%xmm0,0xa0(%rbp)
000000000003facf	movaps	%xmm0,0x90(%rbp)
000000000003fad3	movaps	%xmm0,0x80(%rbp)
000000000003fad7	movq	%r15,%rdi
000000000003fada	movl	$0x00000010,%r8d
000000000003fae0	call	*0x0006889a(%rip)
000000000003fae6	movq	%rax,%rbx
000000000003fae9	testq	%rbx,%rbx
000000000003faec	je	0x0003fb6c
000000000003faee	movq	0x90(%rbp),%rax
000000000003faf2	movq	(%rax),%r12
000000000003faf5	movq	0x000445dc(%rip),%r13
000000000003fafc	xorl	%r14d,%r14d
000000000003faff	movq	0x90(%rbp),%rax
000000000003fb03	cmpq	%r12,(%rax)
000000000003fb06	je	0x0003fb10
000000000003fb08	movq	%r15,%rdi
000000000003fb0b	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
000000000003fb10	movq	0x88(%rbp),%rax
000000000003fb14	movq	(%rax,%r14,8),%rdi
000000000003fb18	movq	0x00064fc1(%rip),%rsi
000000000003fb1f	call	*%r13
000000000003fb22	movq	%rax,%rdi
000000000003fb25	movq	0x00064fac(%rip),%rsi
000000000003fb2c	leaq	0x000703e5(%rip),%rdx
000000000003fb33	call	*%r13
000000000003fb36	testq	%rax,%rax
000000000003fb39	jne	0x0003fbad
000000000003fb3b	incq	%r14
000000000003fb3e	cmpq	%rbx,%r14
000000000003fb41	jb	0x0003faff
000000000003fb43	movq	%r15,%rdi
000000000003fb46	leaq	0x00068833(%rip),%rsi
000000000003fb4d	leaq	0x80(%rbp),%rdx
000000000003fb51	leaq	0xffffff00(%rbp),%rcx
000000000003fb58	movl	$0x00000010,%r8d
000000000003fb5e	call	*0x0006881c(%rip)
000000000003fb64	movq	%rax,%rbx
000000000003fb67	testq	%rbx,%rbx
000000000003fb6a	jne	0x0003fafc
000000000003fb6c	movq	0xc8(%rbp),%rdi
000000000003fb70	movq	0x0006f4e9(%rip),%rax
000000000003fb77	cmpq	$0x00,(%rdi,%rax)
000000000003fb7c	jg	0x0003fb8b
000000000003fb7e	movq	0x00064fb3(%rip),%rsi
000000000003fb85	call	*0x0004454d(%rip)
000000000003fb8b	movq	0x0004450e(%rip),%rax
000000000003fb92	movq	(%rax),%rax
000000000003fb95	cmpq	0xd0(%rbp),%rax
000000000003fb99	jne	0x0003fbd4
000000000003fb9b	addq	$0x00000108,%rsp
000000000003fba2	popq	%rbx
000000000003fba3	popq	%r12
000000000003fba5	popq	%r13
000000000003fba7	popq	%r14
000000000003fba9	popq	%r15
000000000003fbab	popq	%rbp
000000000003fbac	ret
000000000003fbad	movq	%rax,%rdi
000000000003fbb0	callq	_shlibNameFromItem
000000000003fbb5	movq	0x0006710c(%rip),%rsi
000000000003fbbc	movq	0xc8(%rbp),%rdi
000000000003fbc0	movq	%rax,%rdx
000000000003fbc3	xorl	%ecx,%ecx
000000000003fbc5	movq	0xfffffef8(%rbp),%r8
000000000003fbcc	call	*0x00044506(%rip)
000000000003fbd2	jmp	0x0003fb6c
000000000003fbd4	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
-[PBXGDB_UpdateStackSequence _fetchShlibInfos]:
000000000003fbd9	pushq	%rbp
000000000003fbda	movq	%rsp,%rbp
000000000003fbdd	pushq	%r15
000000000003fbdf	pushq	%r14
000000000003fbe1	pushq	%r13
000000000003fbe3	pushq	%r12
000000000003fbe5	pushq	%rbx
000000000003fbe6	subq	$0x000000e8,%rsp
000000000003fbed	movq	%rdi,%rbx
000000000003fbf0	movq	0x000444a9(%rip),%rax
000000000003fbf7	movq	(%rax),%rax
000000000003fbfa	movq	%rax,0xd0(%rbp)
000000000003fbfe	xorps	%xmm0,%xmm0
000000000003fc01	movaps	%xmm0,0xc0(%rbp)
000000000003fc05	movaps	%xmm0,0xb0(%rbp)
000000000003fc09	movaps	%xmm0,0xa0(%rbp)
000000000003fc0d	movaps	%xmm0,0x90(%rbp)
000000000003fc11	movq	0x0006f440(%rip),%rax
000000000003fc18	movq	(%rbx,%rax),%rdi
000000000003fc1c	movq	%rdi,0xffffff08(%rbp)
000000000003fc23	leaq	0x00068756(%rip),%rsi
000000000003fc2a	leaq	0x90(%rbp),%rdx
000000000003fc2e	leaq	0xffffff10(%rbp),%rcx
000000000003fc35	movl	$0x00000010,%r8d
000000000003fc3b	call	*0x0006873f(%rip)
000000000003fc41	movq	%rax,0xffffff00(%rbp)
000000000003fc48	testq	%rax,%rax
000000000003fc4b	je	0x0003fd4f
000000000003fc51	movq	0xa0(%rbp),%rax
000000000003fc55	movq	(%rax),%rax
000000000003fc58	movq	%rax,0xfffffef8(%rbp)
000000000003fc5f	movq	0x00044472(%rip),%r14
000000000003fc66	xorl	%r12d,%r12d
000000000003fc69	movq	0xa0(%rbp),%rax
000000000003fc6d	movq	0xfffffef8(%rbp),%rcx
000000000003fc74	cmpq	%rcx,(%rax)
000000000003fc77	je	0x0003fc85
000000000003fc79	movq	0xffffff08(%rbp),%rdi
000000000003fc80	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
000000000003fc85	movq	0x98(%rbp),%rax
000000000003fc89	movq	(%rax,%r12,8),%r15
000000000003fc8d	movq	0x0006f3cc(%rip),%rax
000000000003fc94	incq	(%rbx,%rax)
000000000003fc98	movq	0x00068d59(%rip),%rdi
000000000003fc9f	movq	0x00064dda(%rip),%rsi
000000000003fca6	call	*%r14
000000000003fca9	movq	%rax,%r13
000000000003fcac	movq	%r13,%rdi
000000000003fcaf	movq	0x0006701a(%rip),%rsi
000000000003fcb6	movq	%r15,%rdx
000000000003fcb9	call	*%r14
000000000003fcbc	movq	%r13,%rdi
000000000003fcbf	movq	0x00064dc2(%rip),%rsi
000000000003fcc6	movq	%rbx,%rdx
000000000003fcc9	call	*%r14
000000000003fccc	movq	%r13,%rdi
000000000003fccf	movq	0x00064dc2(%rip),%rsi
000000000003fcd6	movq	0x00066e73(%rip),%rdx
000000000003fcdd	call	*%r14
000000000003fce0	movq	%rbx,%rdi
000000000003fce3	movq	0x00064dce(%rip),%rsi
000000000003fcea	call	*%r14
000000000003fced	movq	%rax,%rdi
000000000003fcf0	movq	0x00064dc9(%rip),%rsi
000000000003fcf7	call	*%r14
000000000003fcfa	movq	%rax,%rdi
000000000003fcfd	movq	0x00064dc4(%rip),%rsi
000000000003fd04	movq	%r13,%rdx
000000000003fd07	call	*%r14
000000000003fd0a	incq	%r12
000000000003fd0d	cmpq	0xffffff00(%rbp),%r12
000000000003fd14	jb	0x0003fc69
000000000003fd1a	movq	0xffffff08(%rbp),%rdi
000000000003fd21	leaq	0x00068658(%rip),%rsi
000000000003fd28	leaq	0x90(%rbp),%rdx
000000000003fd2c	leaq	0xffffff10(%rbp),%rcx
000000000003fd33	movl	$0x00000010,%r8d
000000000003fd39	call	*0x00068641(%rip)
000000000003fd3f	movq	%rax,0xffffff00(%rbp)
000000000003fd46	testq	%rax,%rax
000000000003fd49	jne	0x0003fc66
000000000003fd4f	movq	0x0004434a(%rip),%rax
000000000003fd56	movq	(%rax),%rax
000000000003fd59	cmpq	0xd0(%rbp),%rax
000000000003fd5d	jne	0x0003fd71
000000000003fd5f	addq	$0x000000e8,%rsp
000000000003fd66	popq	%rbx
000000000003fd67	popq	%r12
000000000003fd69	popq	%r13
000000000003fd6b	popq	%r14
000000000003fd6d	popq	%r15
000000000003fd6f	popq	%rbp
000000000003fd70	ret
000000000003fd71	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
-[PBXGDB_UpdateStackSequence _fetchLiteStackFrames]:
000000000003fd76	pushq	%rbp
000000000003fd77	movq	%rsp,%rbp
000000000003fd7a	subq	$0x30,%rsp
000000000003fd7e	movq	%rdi,0xf8(%rbp)
000000000003fd82	movq	%rsi,0xf0(%rbp)
000000000003fd86	leaq	0x0007446b(%rip),%rax
000000000003fd8d	leaq	0x0006faa4(%rip),%rcx
000000000003fd94	leaq	0x0001d537(%rip),%rdx
000000000003fd9b	movq	%rdx,0x10(%rsp)
000000000003fda0	movq	%rcx,0x08(%rsp)
000000000003fda5	movq	%rax,(%rsp)
000000000003fda9	leaq	0xf8(%rbp),%rdi
000000000003fdad	leaq	0xf0(%rbp),%rsi
000000000003fdb1	leaq	0x00021a02(%rip),%rdx
000000000003fdb8	leaq	0x0002152f(%rip),%rcx
000000000003fdbf	leaq	0x00074412(%rip),%r9
000000000003fdc6	movl	$0x000002f7,%r8d
000000000003fdcc	xorb	%al,%al
000000000003fdce	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000003fdd3	addq	$0x30,%rsp
000000000003fdd7	popq	%rbp
000000000003fdd8	ret
-[PBXGDB_StringFetchOperation defaultEncoding]:
000000000003fdd9	pushq	%rbp
000000000003fdda	movq	%rsp,%rbp
000000000003fddd	movl	$0x00000004,%eax
000000000003fde2	popq	%rbp
000000000003fde3	ret
-[PBXGDB_StringFetchOperation stringFetchSequenceClass]:
000000000003fde4	pushq	%rbp
000000000003fde5	movq	%rsp,%rbp
000000000003fde8	xorl	%eax,%eax
000000000003fdea	popq	%rbp
000000000003fdeb	ret
-[PBXGDB_StringFetchOperation fetchResultSequenceClass]:
000000000003fdec	pushq	%rbp
000000000003fded	movq	%rsp,%rbp
000000000003fdf0	xorl	%eax,%eax
000000000003fdf2	popq	%rbp
000000000003fdf3	ret
-[PBXGDB_CStringFetchOperation defaultEncoding]:
000000000003fdf4	pushq	%rbp
000000000003fdf5	movq	%rsp,%rbp
000000000003fdf8	movl	$0x00000004,%eax
000000000003fdfd	popq	%rbp
000000000003fdfe	ret
-[PBXGDB_PascalStringFetchOperation stringFetchSequenceClass]:
000000000003fdff	pushq	%rbp
000000000003fe00	movq	%rsp,%rbp
000000000003fe03	movq	0x00068526(%rip),%rax
000000000003fe0a	movq	0x00068c4f(%rip),%rdi
000000000003fe11	leaq	0x00068518(%rip),%rsi
000000000003fe18	popq	%rbp
000000000003fe19	jmp	*%rax
-[PBXGDB_PascalStringFetchOperation fetchResultSequenceClass]:
000000000003fe1b	pushq	%rbp
000000000003fe1c	movq	%rsp,%rbp
000000000003fe1f	movq	0x0006850a(%rip),%rax
000000000003fe26	movq	0x00068c3b(%rip),%rdi
000000000003fe2d	leaq	0x000684fc(%rip),%rsi
000000000003fe34	popq	%rbp
000000000003fe35	jmp	*%rax
-[PBXGDB_PascalStringFetchOperation defaultEncoding]:
000000000003fe37	pushq	%rbp
000000000003fe38	movq	%rsp,%rbp
000000000003fe3b	movl	$0x0000001e,%eax
000000000003fe40	popq	%rbp
000000000003fe41	ret
-[PBXGDB_PascalStringFetchOperation charactersToRead]:
000000000003fe42	pushq	%rbp
000000000003fe43	movq	%rsp,%rbp
000000000003fe46	movl	$0x00000100,%eax
000000000003fe4b	popq	%rbp
000000000003fe4c	ret
-[PBXGDB_CFNSStringFetchOperation bytesPerCharacter]:
000000000003fe4d	pushq	%rbp
000000000003fe4e	movq	%rsp,%rbp
000000000003fe51	movl	$0x00000002,%eax
000000000003fe56	popq	%rbp
000000000003fe57	ret
-[PBXGDB_CFNSStringFetchOperation defaultEncoding]:
000000000003fe58	pushq	%rbp
000000000003fe59	movq	%rsp,%rbp
000000000003fe5c	movl	$0x0000000a,%eax
000000000003fe61	popq	%rbp
000000000003fe62	ret
-[PBXGDB_CFNSStringFetchOperation stringFetchSequenceClass]:
000000000003fe63	pushq	%rbp
000000000003fe64	movq	%rsp,%rbp
000000000003fe67	movq	0x000684c2(%rip),%rax
000000000003fe6e	movq	0x00068bfb(%rip),%rdi
000000000003fe75	leaq	0x000684b4(%rip),%rsi
000000000003fe7c	popq	%rbp
000000000003fe7d	jmp	*%rax
-[PBXGDB_CFNSStringFetchOperation fetchResultSequenceClass]:
000000000003fe7f	pushq	%rbp
000000000003fe80	movq	%rsp,%rbp
000000000003fe83	movq	0x000684a6(%rip),%rax
000000000003fe8a	movq	0x00068be7(%rip),%rdi
000000000003fe91	leaq	0x00068498(%rip),%rsi
000000000003fe98	popq	%rbp
000000000003fe99	jmp	*%rax
-[PBXGDB_UnicharStringFetchOperation defaultEncoding]:
000000000003fe9b	pushq	%rbp
000000000003fe9c	movq	%rsp,%rbp
000000000003fe9f	movl	$0x0000000a,%eax
000000000003fea4	popq	%rbp
000000000003fea5	ret
-[PBXGDB_WCharStringFetchOperation bytesPerCharacter]:
000000000003fea6	pushq	%rbp
000000000003fea7	movq	%rsp,%rbp
000000000003feaa	movl	$0x00000004,%eax
000000000003feaf	popq	%rbp
000000000003feb0	ret
-[PBXGDB_WCharStringFetchOperation stringFetchSequenceClass]:
000000000003feb1	pushq	%rbp
000000000003feb2	movq	%rsp,%rbp
000000000003feb5	movq	0x00068474(%rip),%rax
000000000003febc	movq	0x00068b8d(%rip),%rdi
000000000003fec3	leaq	0x00068466(%rip),%rsi
000000000003feca	popq	%rbp
000000000003fecb	jmp	*%rax
-[PBXGDB_WCharStringFetchOperation fetchResultSequenceClass]:
000000000003fecd	pushq	%rbp
000000000003fece	movq	%rsp,%rbp
000000000003fed1	movq	0x00068458(%rip),%rax
000000000003fed8	movq	0x00068ba1(%rip),%rdi
000000000003fedf	leaq	0x0006844a(%rip),%rsi
000000000003fee6	popq	%rbp
000000000003fee7	jmp	*%rax
-[PBXGDB_WCharCharacterFetchOperation defaultEncoding]:
000000000003fee9	pushq	%rbp
000000000003feea	movq	%rsp,%rbp
000000000003feed	movl	$0x0000000a,%eax
000000000003fef2	popq	%rbp
000000000003fef3	ret
-[PBXGDB_WCharCharacterFetchOperation charactersToRead]:
000000000003fef4	pushq	%rbp
000000000003fef5	movq	%rsp,%rbp
000000000003fef8	movl	$0x00000001,%eax
000000000003fefd	popq	%rbp
000000000003fefe	ret
-[PBXGDB_WCharCharacterFetchOperation stringFetchSequenceClass]:
000000000003feff	pushq	%rbp
000000000003ff00	movq	%rsp,%rbp
000000000003ff03	movq	0x00068426(%rip),%rax
000000000003ff0a	movq	0x00068b77(%rip),%rdi
000000000003ff11	leaq	0x00068418(%rip),%rsi
000000000003ff18	popq	%rbp
000000000003ff19	jmp	*%rax
-[PBXGDB_WCharCharacterFetchOperation perform]:
000000000003ff1b	pushq	%rbp
000000000003ff1c	movq	%rsp,%rbp
000000000003ff1f	pushq	%r15
000000000003ff21	pushq	%r14
000000000003ff23	pushq	%r12
000000000003ff25	pushq	%rbx
000000000003ff26	subq	$0x10,%rsp
000000000003ff2a	movq	%rdi,%r14
000000000003ff2d	movq	0x0006600c(%rip),%rsi
000000000003ff34	movq	0x0004419d(%rip),%r12
000000000003ff3b	call	*%r12
000000000003ff3e	movq	%rax,%r15
000000000003ff41	movq	0x00064bc0(%rip),%rsi
000000000003ff48	movq	%r15,%rdi
000000000003ff4b	call	*%r12
000000000003ff4e	movq	%rax,%rbx
000000000003ff51	leaq	0x00073ae0(%rip),%rdx
000000000003ff58	movq	0x00065389(%rip),%rsi
000000000003ff5f	movq	%rbx,%rdi
000000000003ff62	call	*%r12
000000000003ff65	cmpb	$0x01,%al
000000000003ff67	jne	0x0003ff93
000000000003ff69	movq	0x00064bc0(%rip),%rsi
000000000003ff70	movq	%rbx,%rdi
000000000003ff73	call	*0x0004415f(%rip)
000000000003ff79	leaq	0x00021b14(%rip),%rsi
000000000003ff80	leaq	0xdc(%rbp),%rdx
000000000003ff84	movq	%rax,%rdi
000000000003ff87	xorb	%al,%al
000000000003ff89	callq	0x0004e6f8	; symbol stub for: _sscanf
000000000003ff8e	movl	0xdc(%rbp),%eax
000000000003ff91	jmp	0x0003ffb5
000000000003ff93	movq	0x00064b6e(%rip),%rsi
000000000003ff9a	movq	0x00044137(%rip),%rbx
000000000003ffa1	movq	%r15,%rdi
000000000003ffa4	call	*%rbx
000000000003ffa6	movq	0x00065333(%rip),%rsi
000000000003ffad	movq	%rax,%rdi
000000000003ffb0	call	*%rbx
000000000003ffb2	movl	%eax,0xdc(%rbp)
000000000003ffb5	movq	0x00064bbc(%rip),%rsi
000000000003ffbc	movq	0x0006848d(%rip),%rdi
000000000003ffc3	movzwl	%ax,%ecx
000000000003ffc6	leaq	0x0007428b(%rip),%rdx
000000000003ffcd	xorb	%al,%al
000000000003ffcf	call	*0x00044103(%rip)
000000000003ffd5	movq	%rax,%r15
000000000003ffd8	testq	%r15,%r15
000000000003ffdb	je	0x0004008e
000000000003ffe1	movq	0x00066e98(%rip),%rsi
000000000003ffe8	movq	0x000440e9(%rip),%r12
000000000003ffef	movq	%r14,%rdi
000000000003fff2	call	*%r12
000000000003fff5	leaq	0x000682e4(%rip),%rsi
000000000003fffc	movq	%rax,%rdi
000000000003ffff	call	*0x000682db(%rip)
0000000000040005	movq	0x00064a64(%rip),%rsi
000000000004000c	movq	%rax,%rdi
000000000004000f	call	*%r12
0000000000040012	movq	%rax,%rbx
0000000000040015	movq	0x00066e8c(%rip),%rsi
000000000004001c	movq	%r14,%rdi
000000000004001f	call	*%r12
0000000000040022	movq	0x00064cb7(%rip),%rsi
0000000000040029	movq	%r15,%rdi
000000000004002c	movq	%rax,%rdx
000000000004002f	call	*%r12
0000000000040032	movq	0x00066e77(%rip),%rsi
0000000000040039	movq	%rbx,%rdi
000000000004003c	movq	%rax,%rdx
000000000004003f	call	*%r12
0000000000040042	movq	0x0006602f(%rip),%rsi
0000000000040049	movq	%r14,%rdi
000000000004004c	call	*%r12
000000000004004f	movq	0x00066e3a(%rip),%rsi
0000000000040056	movq	%rbx,%rdi
0000000000040059	movq	%rax,%rdx
000000000004005c	call	*%r12
000000000004005f	movq	0x00066e32(%rip),%rsi
0000000000040066	movq	%r14,%rdi
0000000000040069	call	*%r12
000000000004006c	movq	0x00066e2d(%rip),%rsi
0000000000040073	movq	%rbx,%rdi
0000000000040076	movq	%rax,%rdx
0000000000040079	call	*%r12
000000000004007c	movq	0x00065f5d(%rip),%rsi
0000000000040083	movq	%r14,%rdi
0000000000040086	movq	%rbx,%rdx
0000000000040089	call	*%r12
000000000004008c	jmp	0x0004009e
000000000004008e	movq	0x00065f53(%rip),%rsi
0000000000040095	movq	%r14,%rdi
0000000000040098	call	*0x0004403a(%rip)
000000000004009e	addq	$0x10,%rsp
00000000000400a2	popq	%rbx
00000000000400a3	popq	%r12
00000000000400a5	popq	%r14
00000000000400a7	popq	%r15
00000000000400a9	popq	%rbp
00000000000400aa	ret
-[PBXGDB_StringFetchResult dealloc]:
00000000000400ab	pushq	%rbp
00000000000400ac	movq	%rsp,%rbp
00000000000400af	movq	0x00066e1a(%rip),%rsi
00000000000400b6	xorl	%edx,%edx
00000000000400b8	popq	%rbp
00000000000400b9	jmp	*0x00044019(%rip)
-[PBXGDB_StringFetchResult processStringData]:
00000000000400bf	pushq	%rbp
00000000000400c0	movq	%rsp,%rbp
00000000000400c3	popq	%rbp
00000000000400c4	ret
+[PBXGDB_SyntheticDataValue variableExpressionStringKey]:
00000000000400c5	pushq	%rbp
00000000000400c6	movq	%rsp,%rbp
00000000000400c9	leaq	0x00074248(%rip),%rax
00000000000400d0	popq	%rbp
00000000000400d1	ret
-[PBXGDB_SyntheticDataValue setViewAsType:]:
00000000000400d2	pushq	%rbp
00000000000400d3	movq	%rsp,%rbp
00000000000400d6	pushq	%rbx
00000000000400d7	subq	$0x18,%rsp
00000000000400db	movq	%rdi,%rbx
00000000000400de	movq	%rbx,0xe8(%rbp)
00000000000400e2	movq	0x00068e8f(%rip),%rax
00000000000400e9	movq	%rax,0xf0(%rbp)
00000000000400ed	movq	0x00066e34(%rip),%rsi
00000000000400f4	leaq	0xe8(%rbp),%rdi
00000000000400f8	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000400fd	movq	0x00066e1c(%rip),%rsi
0000000000040104	movq	%rbx,%rdi
0000000000040107	call	*0x00043fcb(%rip)
000000000004010d	addq	$0x18,%rsp
0000000000040111	popq	%rbx
0000000000040112	popq	%rbp
0000000000040113	ret
-[PBXGDB_SyntheticDataValue setObjCDynamicVerifyOperation:]:
0000000000040114	pushq	%rbp
0000000000040115	movq	%rsp,%rbp
0000000000040118	pushq	%r14
000000000004011a	pushq	%rbx
000000000004011b	movq	%rdx,%r14
000000000004011e	movq	%rdi,%rbx
0000000000040121	movq	0x0006ef88(%rip),%rax
0000000000040128	movq	(%rbx,%rax),%rdi
000000000004012c	cmpq	%r14,%rdi
000000000004012f	jne	0x00040136
0000000000040131	popq	%rbx
0000000000040132	popq	%r14
0000000000040134	popq	%rbp
0000000000040135	ret
0000000000040136	movq	0x00065de3(%rip),%rsi
000000000004013d	xorl	%edx,%edx
000000000004013f	call	*0x00043f93(%rip)
0000000000040145	movq	0x0006ef64(%rip),%rdx
000000000004014c	movq	%r14,%rdi
000000000004014f	movq	%rbx,%rsi
0000000000040152	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000040157	movq	0x0006ef52(%rip),%rax
000000000004015e	movq	(%rbx,%rax),%rdi
0000000000040162	movq	0x00065db7(%rip),%rsi
0000000000040169	movq	%rbx,%rdx
000000000004016c	movq	0x00043f65(%rip),%rax
0000000000040173	popq	%rbx
0000000000040174	popq	%r14
0000000000040176	popq	%rbp
0000000000040177	jmp	*%rax
-[PBXGDB_SyntheticDataValue objcDynamicVerifyOperation]:
0000000000040179	pushq	%rbp
000000000004017a	movq	%rsp,%rbp
000000000004017d	pushq	%r14
000000000004017f	pushq	%rbx
0000000000040180	movq	%rdi,%rbx
0000000000040183	movq	0x0006ef26(%rip),%rax
000000000004018a	movq	(%rbx,%rax),%rax
000000000004018e	testq	%rax,%rax
0000000000040191	jne	0x000401d6
0000000000040193	movq	0x000688f6(%rip),%rdi
000000000004019a	leaq	0x0006813f(%rip),%rsi
00000000000401a1	call	*0x00068139(%rip)
00000000000401a7	movq	0x000648c2(%rip),%rsi
00000000000401ae	movq	0x00043f23(%rip),%r14
00000000000401b5	movq	%rax,%rdi
00000000000401b8	call	*%r14
00000000000401bb	movq	0x00066da6(%rip),%rsi
00000000000401c2	movq	%rbx,%rdi
00000000000401c5	movq	%rax,%rdx
00000000000401c8	call	*%r14
00000000000401cb	movq	0x0006eede(%rip),%rax
00000000000401d2	movq	(%rbx,%rax),%rax
00000000000401d6	popq	%rbx
00000000000401d7	popq	%r14
00000000000401d9	popq	%rbp
00000000000401da	ret
-[PBXGDB_SyntheticDataValue _doStep_SetSummaryToStringAndFinish:]:
00000000000401db	pushq	%rbp
00000000000401dc	movq	%rsp,%rbp
00000000000401df	pushq	%rbx
00000000000401e0	pushq	%rax
00000000000401e1	movq	%rdi,%rbx
00000000000401e4	movq	0x00066db5(%rip),%rsi
00000000000401eb	call	*0x00043ee7(%rip)
00000000000401f1	movq	0x00066db0(%rip),%rsi
00000000000401f8	movq	%rbx,%rdi
00000000000401fb	movq	0x00043ed6(%rip),%rax
0000000000040202	addq	$0x08,%rsp
0000000000040206	popq	%rbx
0000000000040207	popq	%rbp
0000000000040208	jmp	*%rax
-[PBXGDB_SyntheticDataValue _formatStringForSummary]:
000000000004020a	pushq	%rbp
000000000004020b	movq	%rsp,%rbp
000000000004020e	pushq	%r15
0000000000040210	pushq	%r14
0000000000040212	pushq	%rbx
0000000000040213	pushq	%rax
0000000000040214	movq	%rdi,%r14
0000000000040217	movq	0x00066d92(%rip),%rsi
000000000004021e	movq	0x00043eb3(%rip),%rbx
0000000000040225	call	*%rbx
0000000000040227	movq	0x00066d0a(%rip),%rsi
000000000004022e	movq	%rax,%rdi
0000000000040231	call	*%rbx
0000000000040233	xorl	%ebx,%ebx
0000000000040235	testq	%rax,%rax
0000000000040238	je	0x00040281
000000000004023a	movq	0x00066ccf(%rip),%rsi
0000000000040241	movq	0x00043e90(%rip),%r15
0000000000040248	movq	%rax,%rdi
000000000004024b	call	*%r15
000000000004024e	movq	%rax,%rbx
0000000000040251	movq	0x00066d60(%rip),%rsi
0000000000040258	movq	0x00068631(%rip),%rdi
000000000004025f	call	*%r15
0000000000040262	leaq	0x000680e7(%rip),%rsi
0000000000040269	movq	%rbx,%rdi
000000000004026c	movq	%rax,%rdx
000000000004026f	call	*0x000680db(%rip)
0000000000040275	movq	%rax,%rbx
0000000000040278	testq	%rbx,%rbx
000000000004027b	jne	0x00040310
0000000000040281	movq	0x00066bf0(%rip),%rsi
0000000000040288	movq	0x00043e49(%rip),%r15
000000000004028f	movq	%r14,%rdi
0000000000040292	call	*%r15
0000000000040295	movq	0x00066c9c(%rip),%rsi
000000000004029c	movq	%rax,%rdi
000000000004029f	call	*%r15
00000000000402a2	testq	%rax,%rax
00000000000402a5	je	0x000402ea
00000000000402a7	movq	0x00066c62(%rip),%rsi
00000000000402ae	movq	0x00043e23(%rip),%r15
00000000000402b5	movq	%rax,%rdi
00000000000402b8	call	*%r15
00000000000402bb	movq	%rax,%rbx
00000000000402be	movq	0x00066cf3(%rip),%rsi
00000000000402c5	movq	0x000685c4(%rip),%rdi
00000000000402cc	call	*%r15
00000000000402cf	leaq	0x0006807a(%rip),%rsi
00000000000402d6	movq	%rbx,%rdi
00000000000402d9	movq	%rax,%rdx
00000000000402dc	call	*0x0006806e(%rip)
00000000000402e2	movq	%rax,%rbx
00000000000402e5	testq	%rbx,%rbx
00000000000402e8	jne	0x00040310
00000000000402ea	movq	0x00065cd7(%rip),%rsi
00000000000402f1	movq	0x00043de0(%rip),%r15
00000000000402f8	movq	%r14,%rdi
00000000000402fb	call	*%r15
00000000000402fe	movq	0x00066c33(%rip),%rsi
0000000000040305	movq	%rax,%rdi
0000000000040308	call	*%r15
000000000004030b	testq	%rax,%rax
000000000004030e	jne	0x0004031e
0000000000040310	movq	%rbx,%rax
0000000000040313	addq	$0x08,%rsp
0000000000040317	popq	%rbx
0000000000040318	popq	%r14
000000000004031a	popq	%r15
000000000004031c	popq	%rbp
000000000004031d	ret
000000000004031e	movq	0x00066beb(%rip),%rsi
0000000000040325	movq	0x00043dac(%rip),%r14
000000000004032c	movq	%rax,%rdi
000000000004032f	call	*%r14
0000000000040332	movq	%rax,%rbx
0000000000040335	movq	0x00066c7c(%rip),%rsi
000000000004033c	movq	0x0006854d(%rip),%rdi
0000000000040343	call	*%r14
0000000000040346	leaq	0x00068003(%rip),%rsi
000000000004034d	movq	0x00067ffc(%rip),%rcx
0000000000040354	movq	%rbx,%rdi
0000000000040357	movq	%rax,%rdx
000000000004035a	addq	$0x08,%rsp
000000000004035e	popq	%rbx
000000000004035f	popq	%r14
0000000000040361	popq	%r15
0000000000040363	popq	%rbp
0000000000040364	jmp	*%rcx
-[PBXGDB_SyntheticDataValue _fetchValueOpDidFinish:]:
0000000000040366	pushq	%rbp
0000000000040367	movq	%rsp,%rbp
000000000004036a	pushq	%rbx
000000000004036b	pushq	%rax
000000000004036c	movq	%rdi,%rbx
000000000004036f	movq	0x00066c62(%rip),%rsi
0000000000040376	movq	%rdx,%rdi
0000000000040379	call	*0x00043d59(%rip)
000000000004037f	movq	0x00066c92(%rip),%rsi
0000000000040386	movq	%rbx,%rdi
0000000000040389	movq	%rax,%rdx
000000000004038c	call	*0x00043d46(%rip)
0000000000040392	movq	0x00066c87(%rip),%rsi
0000000000040399	movq	%rbx,%rdi
000000000004039c	movq	0x00043d35(%rip),%rax
00000000000403a3	addq	$0x08,%rsp
00000000000403a7	popq	%rbx
00000000000403a8	popq	%rbp
00000000000403a9	jmp	*%rax
-[PBXGDB_SyntheticDataValue _dynamicVerifyOfBaseValueDidFinish:]:
00000000000403ab	pushq	%rbp
00000000000403ac	movq	%rsp,%rbp
00000000000403af	pushq	%r14
00000000000403b1	pushq	%rbx
00000000000403b2	movq	%rdi,%r14
00000000000403b5	movq	0x00066c1c(%rip),%rsi
00000000000403bc	movq	0x00043d15(%rip),%rbx
00000000000403c3	movq	%rdx,%rdi
00000000000403c6	call	*%rbx
00000000000403c8	movq	0x00066b69(%rip),%rsi
00000000000403cf	movq	%rax,%rdi
00000000000403d2	call	*%rbx
00000000000403d4	movq	%rax,%rbx
00000000000403d7	testq	%rbx,%rbx
00000000000403da	jne	0x00040479
00000000000403e0	movq	0x00064721(%rip),%rsi
00000000000403e7	movq	%r14,%rdi
00000000000403ea	call	*0x00043ce8(%rip)
00000000000403f0	movq	%rax,%rbx
00000000000403f3	leaq	0x00067f66(%rip),%rsi
00000000000403fa	leaq	0x00070eb7(%rip),%rdx
0000000000040401	movq	%rbx,%rdi
0000000000040404	call	*0x00067f56(%rip)
000000000004040a	testb	%al,%al
000000000004040c	je	0x00040417
000000000004040e	leaq	0x00073fa3(%rip),%rdx
0000000000040415	jmp	0x00040465
0000000000040417	leaq	0x00067f42(%rip),%rsi
000000000004041e	leaq	0x0006f673(%rip),%rdx
0000000000040425	movq	%rbx,%rdi
0000000000040428	call	*0x00067f32(%rip)
000000000004042e	testb	%al,%al
0000000000040430	jne	0x0004040e
0000000000040432	movq	0x0006518f(%rip),%rsi
0000000000040439	movq	0x00043c98(%rip),%rbx
0000000000040440	movq	%r14,%rdi
0000000000040443	call	*%rbx
0000000000040445	movq	0x0006554c(%rip),%rsi
000000000004044c	movq	%rax,%rdi
000000000004044f	call	*%rbx
0000000000040451	leaq	0x00073f80(%rip),%rcx
0000000000040458	leaq	0x00073f99(%rip),%rdx
000000000004045f	cmpb	$0x01,%al
0000000000040461	cmoveq	%rcx,%rdx
0000000000040465	movq	0x00066b8c(%rip),%rsi
000000000004046c	movq	%r14,%rdi
000000000004046f	popq	%rbx
0000000000040470	popq	%r14
0000000000040472	popq	%rbp
0000000000040473	jmp	*0x00043c5f(%rip)
0000000000040479	movq	0x00065310(%rip),%rsi
0000000000040480	movq	%r14,%rdi
0000000000040483	movq	%rbx,%rdx
0000000000040486	call	*0x00043c4c(%rip)
000000000004048c	movq	0x00065b35(%rip),%rsi
0000000000040493	movq	%r14,%rdi
0000000000040496	call	*0x00043c3c(%rip)
000000000004049c	movq	0x0006649d(%rip),%rsi
00000000000404a3	movq	%rax,%rdi
00000000000404a6	movq	%rbx,%rdx
00000000000404a9	call	*0x00043c29(%rip)
00000000000404af	movq	0x00066b82(%rip),%rsi
00000000000404b6	movq	%r14,%rdi
00000000000404b9	movq	0x00043c18(%rip),%rax
00000000000404c0	popq	%rbx
00000000000404c1	popq	%r14
00000000000404c3	popq	%rbp
00000000000404c4	jmp	*%rax
-[PBXGDB_SyntheticDataValue _doStep_VerifyBaseValueDynamicType]:
00000000000404c6	pushq	%rbp
00000000000404c7	movq	%rsp,%rbp
00000000000404ca	pushq	%r14
00000000000404cc	pushq	%rbx
00000000000404cd	movq	%rdi,%r14
00000000000404d0	movq	0x00066b69(%rip),%rsi
00000000000404d7	call	*0x00043bfb(%rip)
00000000000404dd	movq	%rax,%rbx
00000000000404e0	movq	0x00065ae1(%rip),%rsi
00000000000404e7	movq	%r14,%rdi
00000000000404ea	call	*0x00043be8(%rip)
00000000000404f0	movq	0x00065ad9(%rip),%rsi
00000000000404f7	movq	%rax,%rdi
00000000000404fa	call	*0x00043bd8(%rip)
0000000000040500	movq	0x000663c1(%rip),%rsi
0000000000040507	movq	%rbx,%rdi
000000000004050a	movq	%rax,%rdx
000000000004050d	call	*0x00043bc5(%rip)
0000000000040513	movq	0x00066aee(%rip),%rsi
000000000004051a	movq	0x00066b27(%rip),%rcx
0000000000040521	movq	%rbx,%rdi
0000000000040524	movq	%r14,%rdx
0000000000040527	call	*0x00043bab(%rip)
000000000004052d	movq	0x00066adc(%rip),%rsi
0000000000040534	movq	%rbx,%rdi
0000000000040537	movq	0x00043b9a(%rip),%rax
000000000004053e	popq	%rbx
000000000004053f	popq	%r14
0000000000040541	popq	%rbp
0000000000040542	jmp	*%rax
-[PBXGDB_SyntheticDataValue _childDidFinishSecondaryUpdate:]:
0000000000040544	pushq	%rbp
0000000000040545	movq	%rsp,%rbp
0000000000040548	subq	$0x10,%rsp
000000000004054c	movq	0x0006eb65(%rip),%rcx
0000000000040553	movq	(%rdi,%rcx),%rax
0000000000040557	decq	%rax
000000000004055a	movq	%rax,(%rdi,%rcx)
000000000004055e	testq	%rax,%rax
0000000000040561	jg	0x00040591
0000000000040563	movq	0x0006eb4e(%rip),%rax
000000000004056a	movq	$0x00000000,(%rdi,%rax)
0000000000040572	movq	%rdi,0xf0(%rbp)
0000000000040576	movq	0x000689fb(%rip),%rax
000000000004057d	movq	%rax,0xf8(%rbp)
0000000000040581	movq	0x00065838(%rip),%rsi
0000000000040588	leaq	0xf0(%rbp),%rdi
000000000004058c	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000040591	addq	$0x10,%rsp
0000000000040595	popq	%rbp
0000000000040596	ret
0000000000040597	nop
-[PBXGDB_ThreadController dealloc]:
0000000000040598	pushq	%rbp
0000000000040599	movq	%rsp,%rbp
000000000004059c	pushq	%rbx
000000000004059d	pushq	%rax
000000000004059e	movq	%rdi,%rbx
00000000000405a1	movq	0x000647e0(%rip),%rsi
00000000000405a8	movq	0x00067f19(%rip),%rdi
00000000000405af	call	*0x00043b23(%rip)
00000000000405b5	movq	0x000647d4(%rip),%rsi
00000000000405bc	movq	%rax,%rdi
00000000000405bf	movq	%rbx,%rdx
00000000000405c2	movq	0x00043b0f(%rip),%rax
00000000000405c9	addq	$0x08,%rsp
00000000000405cd	popq	%rbx
00000000000405ce	popq	%rbp
00000000000405cf	jmp	*%rax
00000000000405d1	nop
-[PBXGDB_ThreadController setProcessID:]:
00000000000405d2	pushq	%rbp
00000000000405d3	movq	%rsp,%rbp
00000000000405d6	movq	0x0006eae3(%rip),%rax
00000000000405dd	movl	%edx,(%rdi,%rax)
00000000000405e0	popq	%rbp
00000000000405e1	ret
-[PBXGDB_ThreadController processID]:
00000000000405e2	pushq	%rbp
00000000000405e3	movq	%rsp,%rbp
00000000000405e6	movq	0x0006ead3(%rip),%rax
00000000000405ed	movl	(%rdi,%rax),%eax
00000000000405f0	popq	%rbp
00000000000405f1	ret
00000000000405f2	nop
00000000000405f3	nop
00000000000405f4	nop
-[PBXGDB_ThreadController handleSharedLibraryEventAndContinue:]:
00000000000405f5	pushq	%rbp
00000000000405f6	movq	%rsp,%rbp
00000000000405f9	movq	0x00064d28(%rip),%rsi
0000000000040600	popq	%rbp
0000000000040601	jmp	*0x00043ad1(%rip)
0000000000040607	nop
0000000000040608	nop
0000000000040609	nop
-[PBXGDB_ThreadController performActionsForBreakpoint:startingAtAction:]:
000000000004060a	pushq	%rbp
000000000004060b	movq	%rsp,%rbp
000000000004060e	pushq	%r15
0000000000040610	pushq	%r14
0000000000040612	pushq	%r13
0000000000040614	pushq	%r12
0000000000040616	pushq	%rbx
0000000000040617	subq	$0x28,%rsp
000000000004061b	movq	%rcx,%rbx
000000000004061e	movq	%rdx,%r14
0000000000040621	movq	%rdi,%r12
0000000000040624	movq	%r12,0xd0(%rbp)
0000000000040628	movq	%rsi,0xc8(%rbp)
000000000004062c	movq	0x00066afd(%rip),%rsi
0000000000040633	movq	0x00043a9e(%rip),%r15
000000000004063a	movq	%r14,%rdi
000000000004063d	call	*%r15
0000000000040640	movq	0x00064c29(%rip),%rsi
0000000000040647	movq	%rax,%rdi
000000000004064a	movq	%rbx,%rdx
000000000004064d	call	*%r15
0000000000040650	movq	%rax,%r15
0000000000040653	movq	$0x7fffffffffffffff,%rax
000000000004065d	cmpq	%rax,%r15
0000000000040660	jne	0x0004069b
0000000000040662	leaq	0x00021645(%rip),%rax
0000000000040669	movq	%rax,(%rsp)
000000000004066d	leaq	0xd0(%rbp),%rdi
0000000000040671	leaq	0xc8(%rbp),%rsi
0000000000040675	leaq	0x00021562(%rip),%rdx
000000000004067c	leaq	0x000215a4(%rip),%rcx
0000000000040683	leaq	0x0006f1ae(%rip),%r9
000000000004068a	movl	$0x0000018b,%r8d
0000000000040690	xorb	%al,%al
0000000000040692	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000040697	movq	0xd0(%rbp),%r12
000000000004069b	movq	0x00064416(%rip),%rsi
00000000000406a2	movq	0x00043a2f(%rip),%r13
00000000000406a9	movq	%r12,%rdi
00000000000406ac	call	*%r13
00000000000406af	movq	0x00064632(%rip),%rsi
00000000000406b6	movq	%rax,%rdi
00000000000406b9	call	*%r13
00000000000406bc	movq	0x0006462d(%rip),%rsi
00000000000406c3	movq	%rax,%rdi
00000000000406c6	call	*%r13
00000000000406c9	movq	%rax,%rbx
00000000000406cc	leaq	0x0006e1a5(%rip),%rax
00000000000406d3	movq	(%rax),%rax
00000000000406d6	movq	0xd0(%rbp),%rcx
00000000000406da	movq	(%rcx,%rax),%rdi
00000000000406de	movq	0x0006471b(%rip),%rsi
00000000000406e5	call	*%r13
00000000000406e8	movq	0x000649e9(%rip),%rsi
00000000000406ef	movq	%rax,%rdi
00000000000406f2	call	*%r13
00000000000406f5	movq	%rax,%r12
00000000000406f8	leaq	0x00067be1(%rip),%rsi
00000000000406ff	movq	0x000683b2(%rip),%rdi
0000000000040706	call	*0x00067bd4(%rip)
000000000004070c	movq	0x00066a2d(%rip),%rsi
0000000000040713	movq	%rax,%rdi
0000000000040716	movq	%rbx,%rdx
0000000000040719	movq	%r12,%rcx
000000000004071c	movq	$0x7fffffffffffffff,%r8
0000000000040726	movq	$0x7fffffffffffffff,%r9
0000000000040730	call	*%r13
0000000000040733	movq	%rax,0xc0(%rbp)
0000000000040737	movq	0x000669f2(%rip),%rbx
000000000004073e	jmp	0x00040743
0000000000040740	incq	%r15
0000000000040743	movq	%r14,%rdi
0000000000040746	movq	%rbx,%rsi
0000000000040749	call	*0x00043989(%rip)
000000000004074f	movq	%rax,%rdi
0000000000040752	leaq	0x00067bb7(%rip),%rsi
0000000000040759	call	*0x00067bb1(%rip)
000000000004075f	cmpq	%rax,%r15
0000000000040762	jae	0x000407f2
0000000000040768	movq	%r14,%rdi
000000000004076b	movq	%rbx,%rsi
000000000004076e	call	*%r13
0000000000040771	movq	%rax,%rdi
0000000000040774	leaq	0x00067ba5(%rip),%rsi
000000000004077b	movq	%r15,%rdx
000000000004077e	call	*0x00067b9c(%rip)
0000000000040784	movq	%rax,%r12
0000000000040787	movq	0xd0(%rbp),%rdi
000000000004078b	movq	0x000669b6(%rip),%rsi
0000000000040792	movq	%r12,%rdx
0000000000040795	movq	%r14,%rcx
0000000000040798	movq	0xc0(%rbp),%r8
000000000004079c	call	*%r13
000000000004079f	testb	%al,%al
00000000000407a1	je	0x00040740
00000000000407a3	testq	%r12,%r12
00000000000407a6	je	0x000407f2
00000000000407a8	movq	0x000669a1(%rip),%rsi
00000000000407af	movq	0x0006830a(%rip),%rdi
00000000000407b6	movq	0x0004391b(%rip),%rbx
00000000000407bd	movq	%r14,%rdx
00000000000407c0	movq	%r12,%rcx
00000000000407c3	call	*%rbx
00000000000407c5	movq	%rax,%r14
00000000000407c8	movq	0x000642e9(%rip),%rsi
00000000000407cf	movq	0xd0(%rbp),%rdi
00000000000407d3	call	*%rbx
00000000000407d5	movq	0x000645f4(%rip),%rsi
00000000000407dc	movq	%rax,%rdi
00000000000407df	call	*%rbx
00000000000407e1	movq	0x000645f8(%rip),%rsi
00000000000407e8	movq	%rax,%rdi
00000000000407eb	movq	%r14,%rdx
00000000000407ee	call	*%rbx
00000000000407f0	jmp	0x00040817
00000000000407f2	movq	0x0006690f(%rip),%rsi
00000000000407f9	movq	%r14,%rdi
00000000000407fc	call	*0x000438d6(%rip)
0000000000040802	testb	%al,%al
0000000000040804	je	0x00040817
0000000000040806	movq	0x0006633b(%rip),%rsi
000000000004080d	movq	0xd0(%rbp),%rdi
0000000000040811	call	*0x000438c1(%rip)
0000000000040817	addq	$0x28,%rsp
000000000004081b	popq	%rbx
000000000004081c	popq	%r12
000000000004081e	popq	%r13
0000000000040820	popq	%r14
0000000000040822	popq	%r15
0000000000040824	popq	%rbp
0000000000040825	ret
-[PBXGDB_ThreadController _performBreakpointActionIfPossible:breakpoint:context:]:
0000000000040826	pushq	%rbp
0000000000040827	movq	%rsp,%rbp
000000000004082a	pushq	%r15
000000000004082c	pushq	%r14
000000000004082e	pushq	%r13
0000000000040830	pushq	%r12
0000000000040832	pushq	%rbx
0000000000040833	pushq	%rax
0000000000040834	movq	%r8,0xd0(%rbp)
0000000000040838	movq	%rcx,%r15
000000000004083b	movq	%rdx,%rbx
000000000004083e	movq	%rdi,%r12
0000000000040841	movq	0x00068280(%rip),%rdi
0000000000040848	leaq	0x00067ae1(%rip),%rsi
000000000004084f	call	*0x00067adb(%rip)
0000000000040855	leaq	0x00067ae4(%rip),%rsi
000000000004085c	movq	%rbx,%rdi
000000000004085f	movq	%rax,%rdx
0000000000040862	call	*0x00067ad8(%rip)
0000000000040868	movb	%al,%r13b
000000000004086b	movq	0x00064246(%rip),%rsi
0000000000040872	movq	0x0004385f(%rip),%r14
0000000000040879	movq	%r12,%rdi
000000000004087c	call	*%r14
000000000004087f	movq	0x00064752(%rip),%rsi
0000000000040886	movq	%rax,%rdi
0000000000040889	call	*%r14
000000000004088c	testb	%r13b,%r13b
000000000004088f	je	0x000408ad
0000000000040891	movq	0x000668c0(%rip),%rsi
0000000000040898	movq	%rax,%rdi
000000000004089b	movq	%rbx,%rdx
000000000004089e	movq	%r15,%rcx
00000000000408a1	call	*0x00043831(%rip)
00000000000408a7	xorb	%cl,%cl
00000000000408a9	testb	%al,%al
00000000000408ab	jne	0x000408dc
00000000000408ad	movq	0x000668ac(%rip),%rsi
00000000000408b4	movq	%rbx,%rdi
00000000000408b7	call	*0x0004381b(%rip)
00000000000408bd	movb	$0x01,%cl
00000000000408bf	testb	%al,%al
00000000000408c1	je	0x000408dc
00000000000408c3	movq	0x0006689e(%rip),%rsi
00000000000408ca	movq	%rbx,%rdi
00000000000408cd	movq	0xd0(%rbp),%rdx
00000000000408d1	movq	%r15,%rcx
00000000000408d4	call	*0x000437fe(%rip)
00000000000408da	xorb	%cl,%cl
00000000000408dc	movzbl	%cl,%eax
00000000000408df	addq	$0x08,%rsp
00000000000408e3	popq	%rbx
00000000000408e4	popq	%r12
00000000000408e6	popq	%r13
00000000000408e8	popq	%r14
00000000000408ea	popq	%r15
00000000000408ec	popq	%rbp
00000000000408ed	ret
00000000000408ee	nop
-[PBXGDB_ThreadController enqueRequestStackFramesForThread:numberOfStackFrames:resultHandler:]:
00000000000408ef	pushq	%rbp
00000000000408f0	movq	%rsp,%rbp
00000000000408f3	pushq	%r15
00000000000408f5	pushq	%r14
00000000000408f7	pushq	%r12
00000000000408f9	pushq	%rbx
00000000000408fa	movq	%r8,%r12
00000000000408fd	movq	%rcx,%rbx
0000000000040900	movq	%rdx,%r14
0000000000040903	movq	%rdi,%r15
0000000000040906	movq	0x00067e83(%rip),%rdi
000000000004090d	leaq	0x000679cc(%rip),%rsi
0000000000040914	call	*0x000679c6(%rip)
000000000004091a	movq	0x0006687f(%rip),%rsi
0000000000040921	decq	%rbx
0000000000040924	movq	%rax,%rdi
0000000000040927	xorl	%edx,%edx
0000000000040929	movq	%rbx,%rcx
000000000004092c	xorl	%r8d,%r8d
000000000004092f	movq	%r12,%r9
0000000000040932	call	*0x000437a0(%rip)
0000000000040938	movq	%rax,%rbx
000000000004093b	movq	0x0006683e(%rip),%rsi
0000000000040942	movq	%r15,%rdi
0000000000040945	movq	%rbx,%rdx
0000000000040948	movq	%r14,%rcx
000000000004094b	call	*0x00043787(%rip)
0000000000040951	movq	0x00064160(%rip),%rsi
0000000000040958	movq	%r15,%rdi
000000000004095b	call	*0x00043777(%rip)
0000000000040961	movq	0x00064468(%rip),%rsi
0000000000040968	movq	%rax,%rdi
000000000004096b	call	*0x00043767(%rip)
0000000000040971	movq	0x00064468(%rip),%rsi
0000000000040978	movq	%rax,%rdi
000000000004097b	movq	%rbx,%rdx
000000000004097e	movq	0x00043753(%rip),%rax
0000000000040985	popq	%rbx
0000000000040986	popq	%r12
0000000000040988	popq	%r14
000000000004098a	popq	%r15
000000000004098c	popq	%rbp
000000000004098d	jmp	*%rax
-[PBXGDB_ThreadController enqueueStepInstructionSequenceForThreadHandle:]:
000000000004098f	pushq	%rbp
0000000000040990	movq	%rsp,%rbp
0000000000040993	movq	%rdx,%rax
0000000000040996	movq	0x00066813(%rip),%rsi
000000000004099d	movl	$0x00000004,%edx
00000000000409a2	movq	%rax,%rcx
00000000000409a5	popq	%rbp
00000000000409a6	jmp	*0x0004372c(%rip)
-[PBXGDB_ThreadController enqueueNextInstructionSequenceForThreadHandle:]:
00000000000409ac	pushq	%rbp
00000000000409ad	movq	%rsp,%rbp
00000000000409b0	movq	%rdx,%rax
00000000000409b3	movq	0x000667f6(%rip),%rsi
00000000000409ba	movl	$0x00000005,%edx
00000000000409bf	movq	%rax,%rcx
00000000000409c2	popq	%rbp
00000000000409c3	jmp	*0x0004370f(%rip)
00000000000409c9	nop
00000000000409ca	nop
-[PBXGDB_ThreadController enqueueStepInSuspendOtherThreadsSequenceForThreadHandle:]:
00000000000409cb	pushq	%rbp
00000000000409cc	movq	%rsp,%rbp
00000000000409cf	movq	%rdx,%rax
00000000000409d2	movq	0x0006e6ff(%rip),%rcx
00000000000409d9	movb	$0x01,(%rdi,%rcx)
00000000000409dd	movq	0x000667cc(%rip),%rsi
00000000000409e4	movl	$0x00000007,%edx
00000000000409e9	movq	%rax,%rcx
00000000000409ec	popq	%rbp
00000000000409ed	jmp	*0x000436e5(%rip)
-[PBXGDB_ThreadController enqueueStepOverSuspendOtherThreadsSequenceForThreadHandle:]:
00000000000409f3	pushq	%rbp
00000000000409f4	movq	%rsp,%rbp
00000000000409f7	movq	%rdx,%rax
00000000000409fa	movq	0x0006e6d7(%rip),%rcx
0000000000040a01	movb	$0x01,(%rdi,%rcx)
0000000000040a05	movq	0x000667a4(%rip),%rsi
0000000000040a0c	movl	$0x00000006,%edx
0000000000040a11	movq	%rax,%rcx
0000000000040a14	popq	%rbp
0000000000040a15	jmp	*0x000436bd(%rip)
-[PBXGDB_ThreadController enqueueStepUntilSequenceForThreadHandle:lineNumber:]:
0000000000040a1b	pushq	%rbp
0000000000040a1c	movq	%rsp,%rbp
0000000000040a1f	pushq	%r15
0000000000040a21	pushq	%r14
0000000000040a23	pushq	%r12
0000000000040a25	pushq	%rbx
0000000000040a26	movq	%rcx,%r15
0000000000040a29	movq	%rdx,%r12
0000000000040a2c	movq	%rdi,%r14
0000000000040a2f	movq	0x000680a2(%rip),%rdi
0000000000040a36	leaq	0x000678a3(%rip),%rsi
0000000000040a3d	call	*0x0006789d(%rip)
0000000000040a43	movq	0x00064026(%rip),%rsi
0000000000040a4a	movq	%rax,%rdi
0000000000040a4d	call	*0x00043685(%rip)
0000000000040a53	movq	%rax,%rbx
0000000000040a56	movq	0x00066723(%rip),%rsi
0000000000040a5d	movq	%r14,%rdi
0000000000040a60	movq	%rbx,%rdx
0000000000040a63	movq	%r12,%rcx
0000000000040a66	call	*0x0004366c(%rip)
0000000000040a6c	movq	0x00066735(%rip),%rsi
0000000000040a73	movq	%rbx,%rdi
0000000000040a76	movl	$0x00000003,%edx
0000000000040a7b	call	*0x00043657(%rip)
0000000000040a81	movq	0x00066730(%rip),%rsi
0000000000040a88	movq	%rbx,%rdi
0000000000040a8b	movq	%r15,%rdx
0000000000040a8e	call	*0x00043644(%rip)
0000000000040a94	movq	0x0006401d(%rip),%rsi
0000000000040a9b	movq	%r14,%rdi
0000000000040a9e	call	*0x00043634(%rip)
0000000000040aa4	movq	0x00064325(%rip),%rsi
0000000000040aab	movq	%rax,%rdi
0000000000040aae	call	*0x00043624(%rip)
0000000000040ab4	movq	0x0006471d(%rip),%rsi
0000000000040abb	movq	%rax,%rdi
0000000000040abe	movq	%rbx,%rdx
0000000000040ac1	movq	0x00043610(%rip),%rax
0000000000040ac8	popq	%rbx
0000000000040ac9	popq	%r12
0000000000040acb	popq	%r14
0000000000040acd	popq	%r15
0000000000040acf	popq	%rbp
0000000000040ad0	jmp	*%rax
-[PBXGDB_ThreadController enqueueContinueSequenceForThreadHandle:]:
0000000000040ad2	pushq	%rbp
0000000000040ad3	movq	%rsp,%rbp
0000000000040ad6	pushq	%r15
0000000000040ad8	pushq	%r14
0000000000040ada	pushq	%rbx
0000000000040adb	pushq	%rax
0000000000040adc	movq	%rdx,%r15
0000000000040adf	movq	%rdi,%r14
0000000000040ae2	movq	0x00067fff(%rip),%rdi
0000000000040ae9	leaq	0x000677f0(%rip),%rsi
0000000000040af0	call	*0x000677ea(%rip)
0000000000040af6	movq	0x00063f73(%rip),%rsi
0000000000040afd	movq	%rax,%rdi
0000000000040b00	call	*0x000435d2(%rip)
0000000000040b06	movq	%rax,%rbx
0000000000040b09	movq	0x00066670(%rip),%rsi
0000000000040b10	movq	%r14,%rdi
0000000000040b13	movq	%rbx,%rdx
0000000000040b16	movq	%r15,%rcx
0000000000040b19	call	*0x000435b9(%rip)
0000000000040b1f	movq	0x00063f92(%rip),%rsi
0000000000040b26	movq	%r14,%rdi
0000000000040b29	call	*0x000435a9(%rip)
0000000000040b2f	movq	0x0006429a(%rip),%rsi
0000000000040b36	movq	%rax,%rdi
0000000000040b39	call	*0x00043599(%rip)
0000000000040b3f	movq	0x00064692(%rip),%rsi
0000000000040b46	movq	%rax,%rdi
0000000000040b49	movq	%rbx,%rdx
0000000000040b4c	movq	0x00043585(%rip),%rax
0000000000040b53	addq	$0x08,%rsp
0000000000040b57	popq	%rbx
0000000000040b58	popq	%r14
0000000000040b5a	popq	%r15
0000000000040b5c	popq	%rbp
0000000000040b5d	jmp	*%rax
-[PBXGDB_ThreadController enqueueResumeSequenceForThreadHandle:]:
0000000000040b5f	pushq	%rbp
0000000000040b60	movq	%rsp,%rbp
0000000000040b63	pushq	%r15
0000000000040b65	pushq	%r14
0000000000040b67	pushq	%rbx
0000000000040b68	pushq	%rax
0000000000040b69	movq	%rdx,%r15
0000000000040b6c	movq	%rdi,%r14
0000000000040b6f	movq	0x00067f7a(%rip),%rdi
0000000000040b76	leaq	0x00067763(%rip),%rsi
0000000000040b7d	call	*0x0006775d(%rip)
0000000000040b83	movq	0x00063ee6(%rip),%rsi
0000000000040b8a	movq	%rax,%rdi
0000000000040b8d	call	*0x00043545(%rip)
0000000000040b93	movq	%rax,%rbx
0000000000040b96	movq	0x000665e3(%rip),%rsi
0000000000040b9d	movq	%r14,%rdi
0000000000040ba0	movq	%rbx,%rdx
0000000000040ba3	movq	%r15,%rcx
0000000000040ba6	call	*0x0004352c(%rip)
0000000000040bac	movq	0x00063f05(%rip),%rsi
0000000000040bb3	movq	%r14,%rdi
0000000000040bb6	call	*0x0004351c(%rip)
0000000000040bbc	movq	0x0006420d(%rip),%rsi
0000000000040bc3	movq	%rax,%rdi
0000000000040bc6	call	*0x0004350c(%rip)
0000000000040bcc	movq	0x00064605(%rip),%rsi
0000000000040bd3	movq	%rax,%rdi
0000000000040bd6	movq	%rbx,%rdx
0000000000040bd9	movq	-[PBXLSDataValue removeChildAtIndex:](%rip),%rax
0000000000040be0	addq	$0x08,%rsp
0000000000040be4	popq	%rbx
0000000000040be5	popq	%r14
0000000000040be7	popq	%r15
0000000000040be9	popq	%rbp
0000000000040bea	jmp	*%rax
-[PBXGDB_ThreadController enqueueSuspendSequenceForThreadHandle:]:
0000000000040bec	pushq	%rbp
0000000000040bed	movq	%rsp,%rbp
0000000000040bf0	pushq	%r15
0000000000040bf2	pushq	%r14
0000000000040bf4	pushq	%rbx
0000000000040bf5	pushq	%rax
0000000000040bf6	movq	%rdx,%r15
0000000000040bf9	movq	%rdi,%r14
0000000000040bfc	movq	0x00067ef5(%rip),%rdi
0000000000040c03	leaq	0x000676d6(%rip),%rsi
0000000000040c0a	call	*0x000676d0(%rip)
0000000000040c10	movq	0x00063e59(%rip),%rsi
0000000000040c17	movq	%rax,%rdi
0000000000040c1a	call	*0x000434b8(%rip)
0000000000040c20	movq	%rax,%rbx
0000000000040c23	movq	0x00066556(%rip),%rsi
0000000000040c2a	movq	%r14,%rdi
0000000000040c2d	movq	%rbx,%rdx
0000000000040c30	movq	%r15,%rcx
0000000000040c33	call	*0x0004349f(%rip)
0000000000040c39	movq	0x00063e78(%rip),%rsi
0000000000040c40	movq	%r14,%rdi
0000000000040c43	call	*0x0004348f(%rip)
0000000000040c49	movq	0x00064180(%rip),%rsi
0000000000040c50	movq	%rax,%rdi
0000000000040c53	call	*0x0004347f(%rip)
0000000000040c59	movq	0x00064578(%rip),%rsi
0000000000040c60	movq	%rax,%rdi
0000000000040c63	movq	%rbx,%rdx
0000000000040c66	movq	0x0004346b(%rip),%rax
0000000000040c6d	addq	$0x08,%rsp
0000000000040c71	popq	%rbx
0000000000040c72	popq	%r14
0000000000040c74	popq	%r15
0000000000040c76	popq	%rbp
0000000000040c77	jmp	*%rax
-[PBXGDB_ThreadController enqueueContinueAfterQuietStopSequence]:
0000000000040c79	pushq	%rbp
0000000000040c7a	movq	%rsp,%rbp
0000000000040c7d	pushq	%r15
0000000000040c7f	pushq	%r14
0000000000040c81	pushq	%rbx
0000000000040c82	pushq	%rax
0000000000040c83	movq	%rdi,%r14
0000000000040c86	movq	0x00063e2b(%rip),%rsi
0000000000040c8d	movq	0x00043444(%rip),%r15
0000000000040c94	call	*%r15
0000000000040c97	movq	0x00063e22(%rip),%rsi
0000000000040c9e	movq	%rax,%rdi
0000000000040ca1	call	*%r15
0000000000040ca4	movq	%rax,%rbx
0000000000040ca7	movq	0x000657c2(%rip),%rsi
0000000000040cae	movq	%rbx,%rdi
0000000000040cb1	call	*%r15
0000000000040cb4	cmpl	$0x01,%eax
0000000000040cb7	jne	0x00040d09
0000000000040cb9	movq	0x00066408(%rip),%rsi
0000000000040cc0	movq	%rbx,%rdi
0000000000040cc3	call	*0x0004340f(%rip)
0000000000040cc9	leaq	0x0006def0(%rip),%rcx
0000000000040cd0	movq	(%rcx),%rcx
0000000000040cd3	movl	$0x00000001,(%rax,%rcx)
0000000000040cda	movq	0x00064edf(%rip),%rsi
0000000000040ce1	movq	%r14,%rdi
0000000000040ce4	call	*0x000433ee(%rip)
0000000000040cea	movq	0x00064fe7(%rip),%rsi
0000000000040cf1	movq	%rbx,%rdi
0000000000040cf4	xorl	%edx,%edx
0000000000040cf6	movq	0x000433db(%rip),%rax
0000000000040cfd	addq	$0x08,%rsp
0000000000040d01	popq	%rbx
0000000000040d02	popq	%r14
0000000000040d04	popq	%r15
0000000000040d06	popq	%rbp
0000000000040d07	jmp	*%rax
0000000000040d09	movq	0x00067df0(%rip),%rdi
0000000000040d10	leaq	0x000675c9(%rip),%rsi
0000000000040d17	call	*0x000675c3(%rip)
0000000000040d1d	movq	0x00063d4c(%rip),%rsi
0000000000040d24	movq	%rax,%rdi
0000000000040d27	call	*0x000433ab(%rip)
0000000000040d2d	movq	%rax,%rbx
0000000000040d30	movq	0x00066449(%rip),%rsi
0000000000040d37	movq	%r14,%rdi
0000000000040d3a	movq	%rbx,%rdx
0000000000040d3d	xorl	%ecx,%ecx
0000000000040d3f	call	*0x00043393(%rip)
0000000000040d45	movq	0x00063d6c(%rip),%rsi
0000000000040d4c	movq	%r14,%rdi
0000000000040d4f	call	*0x00043383(%rip)
0000000000040d55	movq	0x00064074(%rip),%rsi
0000000000040d5c	movq	%rax,%rdi
0000000000040d5f	call	*0x00043373(%rip)
0000000000040d65	movq	0x0006446c(%rip),%rsi
0000000000040d6c	movq	%rax,%rdi
0000000000040d6f	movq	%rbx,%rdx
0000000000040d72	movq	0x0004335f(%rip),%rax
0000000000040d79	addq	$0x08,%rsp
0000000000040d7d	popq	%rbx
0000000000040d7e	popq	%r14
0000000000040d80	popq	%r15
0000000000040d82	popq	%rbp
0000000000040d83	jmp	*%rax
0000000000040d85	nop
0000000000040d86	nop
-[PBXGDB_ThreadController enqueueGetSharedLibraryInfoSequenceDoContinue:]:
0000000000040d87	pushq	%rbp
0000000000040d88	movq	%rsp,%rbp
0000000000040d8b	pushq	%r15
0000000000040d8d	pushq	%r14
0000000000040d8f	pushq	%rbx
0000000000040d90	pushq	%rax
0000000000040d91	movl	%edx,%r15d
0000000000040d94	movq	%rdi,%r14
0000000000040d97	movq	0x00067d72(%rip),%rdi
0000000000040d9e	leaq	0x0006753b(%rip),%rsi
0000000000040da5	call	*0x00067535(%rip)
0000000000040dab	movq	0x00063cbe(%rip),%rsi
0000000000040db2	movq	%rax,%rdi
0000000000040db5	call	*0x0004331d(%rip)
0000000000040dbb	movq	%rax,%rbx
0000000000040dbe	movq	0x00063cf3(%rip),%rsi
0000000000040dc5	movq	%r14,%rdi
0000000000040dc8	call	*0x0004330a(%rip)
0000000000040dce	movq	0x00063ffb(%rip),%rsi
0000000000040dd5	movq	%rax,%rdi
0000000000040dd8	call	*0x000432fa(%rip)
0000000000040dde	movq	0x00063ff3(%rip),%rsi
0000000000040de5	movq	%rbx,%rdi
0000000000040de8	movq	%rax,%rdx
0000000000040deb	call	*0x000432e7(%rip)
0000000000040df1	movq	0x00064560(%rip),%rsi
0000000000040df8	movq	%rbx,%rdi
0000000000040dfb	movl	%r15d,%edx
0000000000040dfe	call	*0x000432d4(%rip)
0000000000040e04	movq	0x00063cad(%rip),%rsi
0000000000040e0b	movq	%r14,%rdi
0000000000040e0e	call	*0x000432c4(%rip)
0000000000040e14	movq	0x00063fb5(%rip),%rsi
0000000000040e1b	movq	%rax,%rdi
0000000000040e1e	call	*0x000432b4(%rip)
0000000000040e24	movq	0x00063fb5(%rip),%rsi
0000000000040e2b	movq	%rax,%rdi
0000000000040e2e	movq	%rbx,%rdx
0000000000040e31	movq	0x000432a0(%rip),%rax
0000000000040e38	addq	$0x08,%rsp
0000000000040e3c	popq	%rbx
0000000000040e3d	popq	%r14
0000000000040e3f	popq	%r15
0000000000040e41	popq	%rbp
0000000000040e42	jmp	*%rax
-[PBXGDB_ThreadController enqueueAttachSequenceForProcessID:]:
0000000000040e44	pushq	%rbp
0000000000040e45	movq	%rsp,%rbp
0000000000040e48	pushq	%r15
0000000000040e4a	pushq	%r14
0000000000040e4c	pushq	%rbx
0000000000040e4d	pushq	%rax
0000000000040e4e	movl	%edx,%r15d
0000000000040e51	movq	%rdi,%r14
0000000000040e54	movq	0x00067cbd(%rip),%rdi
0000000000040e5b	leaq	0x0006747e(%rip),%rsi
0000000000040e62	call	*0x00067478(%rip)
0000000000040e68	movq	0x00063c01(%rip),%rsi
0000000000040e6f	movq	%rax,%rdi
0000000000040e72	call	*0x00043260(%rip)
0000000000040e78	movq	%rax,%rbx
0000000000040e7b	movq	0x00064d66(%rip),%rsi
0000000000040e82	movq	%rbx,%rdi
0000000000040e85	movl	%r15d,%edx
0000000000040e88	call	*0x0004324a(%rip)
0000000000040e8e	movq	0x00063c23(%rip),%rsi
0000000000040e95	movq	%r14,%rdi
0000000000040e98	call	*0x0004323a(%rip)
0000000000040e9e	movq	0x00063f2b(%rip),%rsi
0000000000040ea5	movq	%rax,%rdi
0000000000040ea8	call	*0x0004322a(%rip)
0000000000040eae	movq	0x00063f23(%rip),%rsi
0000000000040eb5	movq	%rbx,%rdi
0000000000040eb8	movq	%rax,%rdx
0000000000040ebb	call	*0x00043217(%rip)
0000000000040ec1	movq	0x00063bf0(%rip),%rsi
0000000000040ec8	movq	%r14,%rdi
0000000000040ecb	call	*0x00043207(%rip)
0000000000040ed1	movq	0x00063ef8(%rip),%rsi
0000000000040ed8	movq	%rax,%rdi
0000000000040edb	call	*0x000431f7(%rip)
0000000000040ee1	movq	0x00063ef8(%rip),%rsi
0000000000040ee8	movq	%rax,%rdi
0000000000040eeb	movq	%rbx,%rdx
0000000000040eee	movq	0x000431e3(%rip),%rax
0000000000040ef5	addq	$0x08,%rsp
0000000000040ef9	popq	%rbx
0000000000040efa	popq	%r14
0000000000040efc	popq	%r15
0000000000040efe	popq	%rbp
0000000000040eff	jmp	*%rax
-[PBXGDB_ThreadController enqueueAttachWaitForSequenceForProcessName:]:
0000000000040f01	pushq	%rbp
0000000000040f02	movq	%rsp,%rbp
0000000000040f05	pushq	%r15
0000000000040f07	pushq	%r14
0000000000040f09	pushq	%rbx
0000000000040f0a	pushq	%rax
0000000000040f0b	movq	%rdx,%r15
0000000000040f0e	movq	%rdi,%r14
0000000000040f11	movq	0x00067c08(%rip),%rdi
0000000000040f18	leaq	0x000673c1(%rip),%rsi
0000000000040f1f	call	*0x000673bb(%rip)
0000000000040f25	movq	0x00063b44(%rip),%rsi
0000000000040f2c	movq	%rax,%rdi
0000000000040f2f	call	*0x000431a3(%rip)
0000000000040f35	movq	%rax,%rbx
0000000000040f38	movq	0x00066281(%rip),%rsi
0000000000040f3f	movq	%rbx,%rdi
0000000000040f42	movq	%r15,%rdx
0000000000040f45	call	*0x0004318d(%rip)
0000000000040f4b	movq	0x00063b66(%rip),%rsi
0000000000040f52	movq	%r14,%rdi
0000000000040f55	call	*0x0004317d(%rip)
0000000000040f5b	movq	0x00063e6e(%rip),%rsi
0000000000040f62	movq	%rax,%rdi
0000000000040f65	call	*0x0004316d(%rip)
0000000000040f6b	movq	0x00063e66(%rip),%rsi
0000000000040f72	movq	%rbx,%rdi
0000000000040f75	movq	%rax,%rdx
0000000000040f78	call	*0x0004315a(%rip)
0000000000040f7e	movq	0x00063b33(%rip),%rsi
0000000000040f85	movq	%r14,%rdi
0000000000040f88	call	*0x0004314a(%rip)
0000000000040f8e	movq	0x00063e3b(%rip),%rsi
0000000000040f95	movq	%rax,%rdi
0000000000040f98	call	*0x0004313a(%rip)
0000000000040f9e	movq	0x00063e3b(%rip),%rsi
0000000000040fa5	movq	%rax,%rdi
0000000000040fa8	movq	%rbx,%rdx
0000000000040fab	movq	0x00043126(%rip),%rax
0000000000040fb2	addq	$0x08,%rsp
0000000000040fb6	popq	%rbx
0000000000040fb7	popq	%r14
0000000000040fb9	popq	%r15
0000000000040fbb	popq	%rbp
0000000000040fbc	jmp	*%rax
-[PBXGDB_ThreadController _enqueueSchedulerLockingOffSequence]:
0000000000040fbe	pushq	%rbp
0000000000040fbf	movq	%rsp,%rbp
0000000000040fc2	pushq	%r14
0000000000040fc4	pushq	%rbx
0000000000040fc5	movq	%rdi,%r14
0000000000040fc8	movq	0x00067b59(%rip),%rdi
0000000000040fcf	leaq	0x0006730a(%rip),%rsi
0000000000040fd6	call	*0x00067304(%rip)
0000000000040fdc	movq	0x00063a8d(%rip),%rsi
0000000000040fe3	movq	%rax,%rdi
0000000000040fe6	call	*0x000430ec(%rip)
0000000000040fec	movq	%rax,%rbx
0000000000040fef	movq	0x00063ac2(%rip),%rsi
0000000000040ff6	movq	%r14,%rdi
0000000000040ff9	call	*0x000430d9(%rip)
0000000000040fff	movq	0x00063dca(%rip),%rsi
0000000000041006	movq	%rax,%rdi
0000000000041009	call	*0x000430c9(%rip)
000000000004100f	movq	0x00063dc2(%rip),%rsi
0000000000041016	movq	%rbx,%rdi
0000000000041019	movq	%rax,%rdx
000000000004101c	call	*0x000430b6(%rip)
0000000000041022	movq	0x00064197(%rip),%rsi
0000000000041029	movq	%rbx,%rdi
000000000004102c	movq	%r14,%rdx
000000000004102f	call	*0x000430a3(%rip)
0000000000041035	movq	0x00063a7c(%rip),%rsi
000000000004103c	movq	%r14,%rdi
000000000004103f	call	*0x00043093(%rip)
0000000000041045	movq	0x00063d84(%rip),%rsi
000000000004104c	movq	%rax,%rdi
000000000004104f	call	*0x00043083(%rip)
0000000000041055	movq	0x00063d84(%rip),%rsi
000000000004105c	movq	%rax,%rdi
000000000004105f	movq	%rbx,%rdx
0000000000041062	movq	0x0004306f(%rip),%rax
0000000000041069	popq	%rbx
000000000004106a	popq	%r14
000000000004106c	popq	%rbp
000000000004106d	jmp	*%rax
-[PBXGDB_ThreadController setIgnoreNextStop:]:
000000000004106f	pushq	%rbp
0000000000041070	movq	%rsp,%rbp
0000000000041073	movq	0x0006e066(%rip),%rax
000000000004107a	movb	%dl,(%rdi,%rax)
000000000004107d	popq	%rbp
000000000004107e	ret
000000000004107f	nop
0000000000041080	nop
-[PBXGDB_WCharFetchResult processStringData]:
0000000000041081	pushq	%rbp
0000000000041082	movq	%rsp,%rbp
0000000000041085	pushq	%r15
0000000000041087	pushq	%r14
0000000000041089	pushq	%r13
000000000004108b	pushq	%r12
000000000004108d	pushq	%rbx
000000000004108e	pushq	%rax
000000000004108f	movq	%rdi,%r15
0000000000041092	movq	0x00064c7f(%rip),%rsi
0000000000041099	call	*0x00043039(%rip)
000000000004109f	movq	%rax,%r12
00000000000410a2	leaq	0x00067247(%rip),%r14
00000000000410a9	movq	%r12,%rdi
00000000000410ac	movq	%r14,%rsi
00000000000410af	call	*0x0006723b(%rip)
00000000000410b5	movq	%rax,%rbx
00000000000410b8	movq	0x00067391(%rip),%rdi
00000000000410bf	leaq	0x0006721a(%rip),%rsi
00000000000410c6	call	*0x00067214(%rip)
00000000000410cc	movq	%rax,%r13
00000000000410cf	movq	0x00063b3a(%rip),%rsi
00000000000410d6	movq	%r12,%rdi
00000000000410d9	call	*0x00042ff9(%rip)
00000000000410df	shrq	%rbx
00000000000410e2	movq	0x00064c0f(%rip),%rsi
00000000000410e9	movq	%r13,%rdi
00000000000410ec	movq	%rax,%rdx
00000000000410ef	movq	%rbx,%rcx
00000000000410f2	xorl	%r8d,%r8d
00000000000410f5	call	*0x00042fdd(%rip)
00000000000410fb	movq	%rax,%rbx
00000000000410fe	movq	%rbx,%rdi
0000000000041101	movq	%r14,%rsi
0000000000041104	call	*0x000671e6(%rip)
000000000004110a	leaq	0xff(%rax),%rdx
000000000004110e	movq	0x000660cb(%rip),%rsi
0000000000041115	movq	%rbx,%rdi
0000000000041118	call	*0x00042fba(%rip)
000000000004111e	leaq	(%rdx,%rax),%rcx
0000000000041122	movq	0x00063a2f(%rip),%rsi
0000000000041129	movq	%rbx,%rdi
000000000004112c	xorl	%edx,%edx
000000000004112e	call	*0x00042fa4(%rip)
0000000000041134	movq	%rax,%rbx
0000000000041137	movq	0x00064be2(%rip),%rsi
000000000004113e	movq	%r15,%rdi
0000000000041141	call	*0x00042f91(%rip)
0000000000041147	movq	0x0006609a(%rip),%rsi
000000000004114e	movq	%r15,%rdi
0000000000041151	movq	%rbx,%rdx
0000000000041154	xorl	%ecx,%ecx
0000000000041156	movl	$0x00000001,%r8d
000000000004115c	movq	%rax,%r9
000000000004115f	movq	0x00042f72(%rip),%rax
0000000000041166	addq	$0x08,%rsp
000000000004116a	popq	%rbx
000000000004116b	popq	%r12
000000000004116d	popq	%r13
000000000004116f	popq	%r14
0000000000041171	popq	%r15
0000000000041173	popq	%rbp
0000000000041174	jmp	*%rax
+[PBXGDB_UntilSequence sequenceWithFile:lineNumber:]:
0000000000041176	pushq	%rbp
0000000000041177	movq	%rsp,%rbp
000000000004117a	pushq	%r15
000000000004117c	pushq	%r14
000000000004117e	pushq	%r13
0000000000041180	pushq	%r12
0000000000041182	pushq	%rbx
0000000000041183	pushq	%rax
0000000000041184	movq	%rcx,%r14
0000000000041187	movq	%rdx,%r15
000000000004118a	movq	0x0006741f(%rip),%rdi
0000000000041191	leaq	0x00067148(%rip),%rsi
0000000000041198	call	*0x00067142(%rip)
000000000004119e	movq	0x000638cb(%rip),%rsi
00000000000411a5	movq	0x00042f2c(%rip),%r13
00000000000411ac	movq	%rax,%rdi
00000000000411af	call	*%r13
00000000000411b2	movq	%rax,%r12
00000000000411b5	movq	0x00066034(%rip),%rsi
00000000000411bc	movq	0x0006772d(%rip),%rdi
00000000000411c3	movq	%r15,%rdx
00000000000411c6	movq	%r14,%rcx
00000000000411c9	call	*%r13
00000000000411cc	movq	%rax,%rbx
00000000000411cf	movq	0x000640b2(%rip),%rsi
00000000000411d6	movq	%r12,%rdi
00000000000411d9	movq	%rbx,%rdx
00000000000411dc	call	*%r13
00000000000411df	movq	0x000638a2(%rip),%rsi
00000000000411e6	movq	%rbx,%rdi
00000000000411e9	movq	%r12,%rdx
00000000000411ec	call	*%r13
00000000000411ef	movq	0x0006492a(%rip),%rsi
00000000000411f6	movq	0x0006498b(%rip),%rdx
00000000000411fd	movq	%rbx,%rdi
0000000000041200	call	*%r13
0000000000041203	movq	%r12,%rax
0000000000041206	addq	$0x08,%rsp
000000000004120a	popq	%rbx
000000000004120b	popq	%r12
000000000004120d	popq	%r13
000000000004120f	popq	%r14
0000000000041211	popq	%r15
0000000000041213	popq	%rbp
0000000000041214	ret
-[PBXGDB_UntilSequence execute]:
0000000000041215	pushq	%rbp
0000000000041216	movq	%rsp,%rbp
0000000000041219	pushq	%rbx
000000000004121a	pushq	%rax
000000000004121b	movq	%rdi,%rbx
000000000004121e	movq	0x00063893(%rip),%rsi
0000000000041225	call	*0x00042ead(%rip)
000000000004122b	movq	0x0006388e(%rip),%rsi
0000000000041232	movq	%rax,%rdi
0000000000041235	call	*0x00042e9d(%rip)
000000000004123b	movq	0x0006deae(%rip),%rcx
0000000000041242	movq	(%rbx,%rcx),%rdx
0000000000041246	movq	0x0006387b(%rip),%rsi
000000000004124d	movq	%rax,%rdi
0000000000041250	call	*0x00042e82(%rip)
0000000000041256	movq	0x0006402b(%rip),%rsi
000000000004125d	movq	%rbx,%rdi
0000000000041260	xorl	%edx,%edx
0000000000041262	movq	0x00042e6f(%rip),%rax
0000000000041269	addq	$0x08,%rsp
000000000004126d	popq	%rbx
000000000004126e	popq	%rbp
000000000004126f	jmp	*%rax
-[PBXGDB_UntilSequence _resultAllThreadsRunning:]:
0000000000041271	pushq	%rbp
0000000000041272	movq	%rsp,%rbp
0000000000041275	pushq	%rbx
0000000000041276	pushq	%rax
0000000000041277	movq	%rdi,%rbx
000000000004127a	movq	0x00063f37(%rip),%rsi
0000000000041281	call	*-[PBXLSDataValue requestGetPathExpressionString](%rip)
0000000000041287	movq	0x000648f2(%rip),%rsi
000000000004128e	movq	%rax,%rdi
0000000000041291	call	*0x00042e41(%rip)
0000000000041297	movq	0x0006389a(%rip),%rsi
000000000004129e	movq	%rbx,%rdi
00000000000412a1	movq	0x00042e30(%rip),%rax
00000000000412a8	addq	$0x08,%rsp
00000000000412ac	popq	%rbx
00000000000412ad	popq	%rbp
00000000000412ae	jmp	*%rax
-[PBXGDB_UntilSequence setMICommand:]:
00000000000412b0	pushq	%rbp
00000000000412b1	movq	%rsp,%rbp
00000000000412b4	movq	%rdx,%rax
00000000000412b7	movq	%rdi,%rcx
00000000000412ba	movq	0x0006de2f(%rip),%rdx
00000000000412c1	movq	%rax,%rdi
00000000000412c4	movq	%rcx,%rsi
00000000000412c7	popq	%rbp
00000000000412c8	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_UntilSequence miCommand]:
00000000000412cd	pushq	%rbp
00000000000412ce	movq	%rsp,%rbp
00000000000412d1	movq	0x0006de18(%rip),%rax
00000000000412d8	movq	(%rdi,%rax),%rax
00000000000412dc	popq	%rbp
00000000000412dd	ret
+[PBXGDB_ContinueToHereSequence sequenceWithFile:lineNumber:]:
00000000000412de	pushq	%rbp
00000000000412df	movq	%rsp,%rbp
00000000000412e2	movq	0x000672b7(%rip),%rdi
00000000000412e9	leaq	0x00066ff0(%rip),%rsi
00000000000412f0	call	*0x00066fea(%rip)
00000000000412f6	movq	0x00063773(%rip),%rsi
00000000000412fd	movq	%rax,%rdi
0000000000041300	popq	%rbp
0000000000041301	jmp	*0x00042dd1(%rip)
-[PBXGDB_ContinueToHereSequence didSetTempBreakpoint:]:
0000000000041307	pushq	%rbp
0000000000041308	movq	%rsp,%rbp
000000000004130b	pushq	%r14
000000000004130d	pushq	%rbx
000000000004130e	movq	%rdi,%r14
0000000000041311	movq	0x00063768(%rip),%rsi
0000000000041318	movq	0x00067441(%rip),%rdi
000000000004131f	call	*0x00042db3(%rip)
0000000000041325	movq	%rax,%rbx
0000000000041328	movq	0x00063759(%rip),%rsi
000000000004132f	movq	%rbx,%rdi
0000000000041332	movq	%r14,%rdx
0000000000041335	call	*0x00042d9d(%rip)
000000000004133b	movq	0x000647de(%rip),%rsi
0000000000041342	movq	0x0006483f(%rip),%rdx
0000000000041349	movq	%rbx,%rdi
000000000004134c	call	*0x00042d86(%rip)
0000000000041352	movq	0x0006375f(%rip),%rsi
0000000000041359	movq	%r14,%rdi
000000000004135c	call	*0x00042d76(%rip)
0000000000041362	movq	0x00063757(%rip),%rsi
0000000000041369	movq	%rax,%rdi
000000000004136c	call	*0x00042d66(%rip)
0000000000041372	movq	0x0006374f(%rip),%rsi
0000000000041379	movq	%rax,%rdi
000000000004137c	movq	%rbx,%rdx
000000000004137f	movq	0x00042d52(%rip),%rax
0000000000041386	popq	%rbx
0000000000041387	popq	%r14
0000000000041389	popq	%rbp
000000000004138a	jmp	*%rax
+[PBXGDB_ContinueToCallSymbolSequence maxStepAttempts]:
000000000004138c	pushq	%rbp
000000000004138d	movq	%rsp,%rbp
0000000000041390	pushq	%rbx
0000000000041391	pushq	%rax
0000000000041392	movq	0x000759b7(%rip),%rax
0000000000041399	testq	%rax,%rax
000000000004139c	jns	0x00041411
000000000004139e	movq	0x000639cb(%rip),%rsi
00000000000413a5	movq	0x00067114(%rip),%rdi
00000000000413ac	call	*0x00042d26(%rip)
00000000000413b2	leaq	0x00066f97(%rip),%rsi
00000000000413b9	leaq	0x000730d8(%rip),%rdx
00000000000413c0	movq	%rax,%rdi
00000000000413c3	call	*0x00066f87(%rip)
00000000000413c9	testq	%rax,%rax
00000000000413cc	je	0x00041401
00000000000413ce	movq	0x0006399b(%rip),%rsi
00000000000413d5	movq	0x000670e4(%rip),%rdi
00000000000413dc	movq	0x00042cf5(%rip),%rbx
00000000000413e3	call	*%rbx
00000000000413e5	movq	0x00065e0c(%rip),%rsi
00000000000413ec	leaq	0x000730a5(%rip),%rdx
00000000000413f3	movq	%rax,%rdi
00000000000413f6	call	*%rbx
00000000000413f8	movq	%rax,0x00075951(%rip)
00000000000413ff	jmp	0x00041411
0000000000041401	movq	$0x00000020,0x00075944(%rip)
000000000004140c	movl	$0x00000020,%eax
0000000000041411	addq	$0x08,%rsp
0000000000041415	popq	%rbx
0000000000041416	popq	%rbp
0000000000041417	ret
+[PBXGDB_ContinueToCallSymbolSequence sequenceWithSymbol:file:lineNumber:]:
0000000000041418	pushq	%rbp
0000000000041419	movq	%rsp,%rbp
000000000004141c	pushq	%r15
000000000004141e	pushq	%r14
0000000000041420	pushq	%r13
0000000000041422	pushq	%r12
0000000000041424	pushq	%rbx
0000000000041425	pushq	%rax
0000000000041426	movq	%r8,%r14
0000000000041429	movq	%rcx,%r15
000000000004142c	movq	%rdx,%rbx
000000000004142f	movq	0x00067172(%rip),%rdi
0000000000041436	leaq	0x00066ea3(%rip),%rsi
000000000004143d	call	*0x00066e9d(%rip)
0000000000041443	movq	0x00063626(%rip),%rsi
000000000004144a	movq	%rax,%rdi
000000000004144d	call	*0x00042c85(%rip)
0000000000041453	movq	%rax,%r12
0000000000041456	movq	0x0006dc9b(%rip),%rdx
000000000004145d	movq	%rbx,%rdi
0000000000041460	movq	%r12,%rsi
0000000000041463	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000041468	movq	0x0006dc91(%rip),%rdx
000000000004146f	movq	%r15,%rdi
0000000000041472	movq	%r12,%rsi
0000000000041475	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000004147a	leaq	0x00066edf(%rip),%rsi
0000000000041481	leaq	0x00072ff0(%rip),%rdx
0000000000041488	movq	0x0006dc79(%rip),%rax
000000000004148f	movq	%r14,(%r12,%rax)
0000000000041493	movq	%r15,%rdi
0000000000041496	call	*0x00066ec4(%rip)
000000000004149c	testb	%al,%al
000000000004149e	je	0x00041505
00000000000414a0	movq	0x000635d9(%rip),%rsi
00000000000414a7	movq	0x00067592(%rip),%rdi
00000000000414ae	movq	0x00042c23(%rip),%r14
00000000000414b5	call	*%r14
00000000000414b8	movq	%rax,%rbx
00000000000414bb	movq	0x00063dc6(%rip),%rsi
00000000000414c2	movq	%r12,%rdi
00000000000414c5	movq	%rbx,%rdx
00000000000414c8	call	*%r14
00000000000414cb	movq	0x000658ce(%rip),%rsi
00000000000414d2	movq	%rbx,%rdi
00000000000414d5	xorl	%edx,%edx
00000000000414d7	movl	$0x00000001,%ecx
00000000000414dc	call	*%r14
00000000000414df	movq	0x000635a2(%rip),%rsi
00000000000414e6	movq	%rbx,%rdi
00000000000414e9	movq	%r12,%rdx
00000000000414ec	call	*%r14
00000000000414ef	movq	0x000635a2(%rip),%rsi
00000000000414f6	movq	0x00065d03(%rip),%rdx
00000000000414fd	movq	%rbx,%rdi
0000000000041500	call	*%r14
0000000000041503	jmp	0x0004156e
0000000000041505	movq	0x00065ce4(%rip),%rsi
000000000004150c	movq	0x000673dd(%rip),%rdi
0000000000041513	movq	0x00042bbe(%rip),%r13
000000000004151a	movq	%r15,%rdx
000000000004151d	movq	%r14,%rcx
0000000000041520	call	*%r13
0000000000041523	movq	%rax,%rbx
0000000000041526	movq	0x00063d5b(%rip),%rsi
000000000004152d	movq	%r12,%rdi
0000000000041530	movq	%rbx,%rdx
0000000000041533	call	*%r13
0000000000041536	movq	0x0006354b(%rip),%rsi
000000000004153d	movq	%rbx,%rdi
0000000000041540	movq	%r12,%rdx
0000000000041543	call	*%r13
0000000000041546	movq	0x000645d3(%rip),%rsi
000000000004154d	movq	0x00064634(%rip),%rdx
0000000000041554	movq	%rbx,%rdi
0000000000041557	call	*%r13
000000000004155a	movq	0x00063537(%rip),%rsi
0000000000041561	movq	0x00065ca0(%rip),%rdx
0000000000041568	movq	%rbx,%rdi
000000000004156b	call	*%r13
000000000004156e	movq	%r12,%rax
0000000000041571	addq	$0x08,%rsp
0000000000041575	popq	%rbx
0000000000041576	popq	%r12
0000000000041578	popq	%r13
000000000004157a	popq	%r14
000000000004157c	popq	%r15
000000000004157e	popq	%rbp
000000000004157f	ret
-[PBXGDB_ContinueToCallSymbolSequence init]:
0000000000041580	pushq	%rbp
0000000000041581	movq	%rsp,%rbp
0000000000041584	pushq	%rbx
0000000000041585	subq	$0x18,%rsp
0000000000041589	movq	%rdi,0xe8(%rbp)
000000000004158d	movq	0x000679f4(%rip),%rax
0000000000041594	movq	%rax,0xf0(%rbp)
0000000000041598	movq	0x000634d1(%rip),%rsi
000000000004159f	leaq	0xe8(%rbp),%rdi
00000000000415a3	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000415a8	movq	%rax,%rbx
00000000000415ab	testq	%rbx,%rbx
00000000000415ae	je	0x000415cf
00000000000415b0	movq	0x00065c59(%rip),%rsi
00000000000415b7	movq	0x00066fea(%rip),%rdi
00000000000415be	call	*0x00042b14(%rip)
00000000000415c4	movq	0x0006db45(%rip),%rcx
00000000000415cb	movq	%rax,(%rbx,%rcx)
00000000000415cf	movq	%rbx,%rax
00000000000415d2	addq	$0x18,%rsp
00000000000415d6	popq	%rbx
00000000000415d7	popq	%rbp
00000000000415d8	ret
-[PBXGDB_ContinueToCallSymbolSequence finalize]:
00000000000415d9	pushq	%rbp
00000000000415da	movq	%rsp,%rbp
00000000000415dd	pushq	%rbx
00000000000415de	subq	$0x18,%rsp
00000000000415e2	movq	%rdi,%rbx
00000000000415e5	movq	0x0006db0c(%rip),%rdx
00000000000415ec	xorl	%edi,%edi
00000000000415ee	movq	%rbx,%rsi
00000000000415f1	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000415f6	movq	0x0006db03(%rip),%rdx
00000000000415fd	xorl	%edi,%edi
00000000000415ff	movq	%rbx,%rsi
0000000000041602	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000041607	movq	0x0006db0a(%rip),%rdx
000000000004160e	xorl	%edi,%edi
0000000000041610	movq	%rbx,%rsi
0000000000041613	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000041618	leaq	0xe8(%rbp),%rdi
000000000004161c	movq	%rbx,0xe8(%rbp)
0000000000041620	movq	0x00067961(%rip),%rax
0000000000041627	movq	%rax,0xf0(%rbp)
000000000004162b	movq	0x00063566(%rip),%rsi
0000000000041632	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000041637	addq	$0x18,%rsp
000000000004163b	popq	%rbx
000000000004163c	popq	%rbp
000000000004163d	ret
-[PBXGDB_ContinueToCallSymbolSequence dealloc]:
000000000004163e	pushq	%rbp
000000000004163f	movq	%rsp,%rbp
0000000000041642	pushq	%rbx
0000000000041643	pushq	%rax
0000000000041644	movq	%rdi,%rbx
0000000000041647	movq	0x0006daaa(%rip),%rdx
000000000004164e	xorl	%edi,%edi
0000000000041650	movq	%rbx,%rsi
0000000000041653	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000041658	movq	0x0006daa1(%rip),%rdx
000000000004165f	xorl	%edi,%edi
0000000000041661	movq	%rbx,%rsi
0000000000041664	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000041669	movq	0x0006daa8(%rip),%rdx
0000000000041670	xorl	%edi,%edi
0000000000041672	movq	%rbx,%rsi
0000000000041675	addq	$0x08,%rsp
0000000000041679	popq	%rbx
000000000004167a	popq	%rbp
000000000004167b	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_ContinueToCallSymbolSequence didFinish]:
0000000000041680	pushq	%rbp
0000000000041681	movq	%rsp,%rbp
0000000000041684	subq	$0x10,%rsp
0000000000041688	movq	%rdi,0xf0(%rbp)
000000000004168c	movq	0x000678f5(%rip),%rax
0000000000041693	movq	%rax,0xf8(%rbp)
0000000000041697	movq	0x0006349a(%rip),%rsi
000000000004169e	leaq	0xf0(%rbp),%rdi
00000000000416a2	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000416a7	addq	$0x10,%rsp
00000000000416ab	popq	%rbp
00000000000416ac	ret
-[PBXGDB_ContinueToCallSymbolSequence gdbStoppedWithResults:onCommand:]:
00000000000416ad	pushq	%rbp
00000000000416ae	movq	%rsp,%rbp
00000000000416b1	movq	0x00063480(%rip),%rsi
00000000000416b8	popq	%rbp
00000000000416b9	jmp	*0x00042a19(%rip)
-[PBXGDB_ContinueToCallSymbolSequence handleErrorForMICommand:]:
00000000000416bf	pushq	%rbp
00000000000416c0	movq	%rsp,%rbp
00000000000416c3	movq	0x0006346e(%rip),%rsi
00000000000416ca	call	*0x00042a08(%rip)
00000000000416d0	xorl	%eax,%eax
00000000000416d2	popq	%rbp
00000000000416d3	ret
-[PBXGDB_ContinueToCallSymbolSequence _resultAllThreadsRunning:]:
00000000000416d4	pushq	%rbp
00000000000416d5	movq	%rsp,%rbp
00000000000416d8	movq	0x00063ad9(%rip),%rsi
00000000000416df	call	*0x000429f3(%rip)
00000000000416e5	movq	0x00064494(%rip),%rsi
00000000000416ec	movq	%rax,%rdi
00000000000416ef	movq	0x000429e2(%rip),%rax
00000000000416f6	popq	%rbp
00000000000416f7	jmp	*%rax
-[PBXGDB_ContinueToCallSymbolSequence _sendCheckFrames]:
00000000000416f9	pushq	%rbp
00000000000416fa	movq	%rsp,%rbp
00000000000416fd	pushq	%r14
00000000000416ff	pushq	%rbx
0000000000041700	movq	%rdi,%r14
0000000000041703	movq	0x00063376(%rip),%rsi
000000000004170a	movq	0x0006732f(%rip),%rdi
0000000000041711	call	*0x000429c1(%rip)
0000000000041717	movq	%rax,%rbx
000000000004171a	movq	0x0006567f(%rip),%rsi
0000000000041721	movq	%rbx,%rdi
0000000000041724	xorl	%edx,%edx
0000000000041726	movl	$0x00000001,%ecx
000000000004172b	call	*0x000429a7(%rip)
0000000000041731	movq	0x00063350(%rip),%rsi
0000000000041738	movq	%rbx,%rdi
000000000004173b	movq	%r14,%rdx
000000000004173e	call	*0x00042994(%rip)
0000000000041744	movq	0x0006334d(%rip),%rsi
000000000004174b	movq	0x00065aae(%rip),%rdx
0000000000041752	movq	%rbx,%rdi
0000000000041755	call	*0x0004297d(%rip)
000000000004175b	movq	0x00063356(%rip),%rsi
0000000000041762	movq	%r14,%rdi
0000000000041765	call	*0x0004296d(%rip)
000000000004176b	movq	0x0006367e(%rip),%rsi
0000000000041772	movq	%rax,%rdi
0000000000041775	call	*0x0004295d(%rip)
000000000004177b	movq	0x00063746(%rip),%rsi
0000000000041782	movq	%rax,%rdi
0000000000041785	call	*0x0004294d(%rip)
000000000004178b	movq	0x0006395e(%rip),%rsi
0000000000041792	movq	%rax,%rdi
0000000000041795	call	*0x0004293d(%rip)
000000000004179b	movq	0x00063306(%rip),%rsi
00000000000417a2	movq	%rbx,%rdi
00000000000417a5	movq	%rax,%rdx
00000000000417a8	call	*0x0004292a(%rip)
00000000000417ae	movq	0x00063303(%rip),%rsi
00000000000417b5	movq	%r14,%rdi
00000000000417b8	call	*0x0004291a(%rip)
00000000000417be	movq	0x000632fb(%rip),%rsi
00000000000417c5	movq	%rax,%rdi
00000000000417c8	call	*0x0004290a(%rip)
00000000000417ce	movq	0x000632f3(%rip),%rsi
00000000000417d5	movq	%rax,%rdi
00000000000417d8	movq	%rbx,%rdx
00000000000417db	movq	0x000428f6(%rip),%rax
00000000000417e2	popq	%rbx
00000000000417e3	popq	%r14
00000000000417e5	popq	%rbp
00000000000417e6	jmp	*%rax
-[PBXGDB_ContinueToCallSymbolSequence _untilCommandConcluded:]:
00000000000417e8	pushq	%rbp
00000000000417e9	movq	%rsp,%rbp
00000000000417ec	movq	0x00065a25(%rip),%rsi
00000000000417f3	popq	%rbp
00000000000417f4	jmp	*0x000428de(%rip)
-[PBXGDB_ContinueToCallSymbolSequence _stepFinished:]:
00000000000417fa	pushq	%rbp
00000000000417fb	movq	%rsp,%rbp
00000000000417fe	movq	0x00065a13(%rip),%rsi
0000000000041805	popq	%rbp
0000000000041806	jmp	*0x000428cc(%rip)
-[PBXGDB_ContinueToCallSymbolSequence _sendStepInCommand]:
000000000004180c	pushq	%rbp
000000000004180d	movq	%rsp,%rbp
0000000000041810	pushq	%r14
0000000000041812	pushq	%rbx
0000000000041813	movq	%rdi,%r14
0000000000041816	movq	0x00063263(%rip),%rsi
000000000004181d	movq	0x00066f1c(%rip),%rdi
0000000000041824	call	*0x000428ae(%rip)
000000000004182a	movq	%rax,%rbx
000000000004182d	movq	0x00063254(%rip),%rsi
0000000000041834	movq	%rbx,%rdi
0000000000041837	movq	%r14,%rdx
000000000004183a	call	*0x00042898(%rip)
0000000000041840	movq	0x00063251(%rip),%rsi
0000000000041847	movq	0x000659d2(%rip),%rdx
000000000004184e	movq	%rbx,%rdi
0000000000041851	call	*0x00042881(%rip)
0000000000041857	movq	0x0006325a(%rip),%rsi
000000000004185e	movq	%r14,%rdi
0000000000041861	call	*0x00042871(%rip)
0000000000041867	movq	0x00063582(%rip),%rsi
000000000004186e	movq	%rax,%rdi
0000000000041871	call	*0x00042861(%rip)
0000000000041877	movq	0x0006364a(%rip),%rsi
000000000004187e	movq	%rax,%rdi
0000000000041881	call	*0x00042851(%rip)
0000000000041887	movq	0x00063862(%rip),%rsi
000000000004188e	movq	%rax,%rdi
0000000000041891	call	*0x00042841(%rip)
0000000000041897	movq	0x0006320a(%rip),%rsi
000000000004189e	movq	%rbx,%rdi
00000000000418a1	movq	%rax,%rdx
00000000000418a4	call	*0x0004282e(%rip)
00000000000418aa	movq	0x0006426f(%rip),%rsi
00000000000418b1	movq	0x000642b8(%rip),%rdx
00000000000418b8	movq	%rbx,%rdi
00000000000418bb	call	*0x00042817(%rip)
00000000000418c1	movq	0x000631f0(%rip),%rsi
00000000000418c8	movq	%r14,%rdi
00000000000418cb	call	*0x00042807(%rip)
00000000000418d1	movq	0x000631e8(%rip),%rsi
00000000000418d8	movq	%rax,%rdi
00000000000418db	call	*0x000427f7(%rip)
00000000000418e1	movq	0x000631e0(%rip),%rsi
00000000000418e8	movq	%rax,%rdi
00000000000418eb	movq	%rbx,%rdx
00000000000418ee	movq	0x000427e3(%rip),%rax
00000000000418f5	popq	%rbx
00000000000418f6	popq	%r14
00000000000418f8	popq	%rbp
00000000000418f9	jmp	*%rax
-[PBXGDB_ContinueToCallSymbolSequence _sendStepOutCommand]:
00000000000418fb	pushq	%rbp
00000000000418fc	movq	%rsp,%rbp
00000000000418ff	pushq	%r14
0000000000041901	pushq	%rbx
0000000000041902	movq	%rdi,%r14
0000000000041905	movq	0x00063174(%rip),%rsi
000000000004190c	movq	0x00066e35(%rip),%rdi
0000000000041913	call	*0x000427bf(%rip)
0000000000041919	movq	%rax,%rbx
000000000004191c	movq	0x00063165(%rip),%rsi
0000000000041923	movq	%rbx,%rdi
0000000000041926	movq	%r14,%rdx
0000000000041929	call	*0x000427a9(%rip)
000000000004192f	movq	0x00063162(%rip),%rsi
0000000000041936	movq	0x000658e3(%rip),%rdx
000000000004193d	movq	%rbx,%rdi
0000000000041940	call	*0x00042792(%rip)
0000000000041946	movq	0x0006316b(%rip),%rsi
000000000004194d	movq	%r14,%rdi
0000000000041950	call	*0x00042782(%rip)
0000000000041956	movq	0x00063493(%rip),%rsi
000000000004195d	movq	%rax,%rdi
0000000000041960	call	*0x00042772(%rip)
0000000000041966	movq	0x0006355b(%rip),%rsi
000000000004196d	movq	%rax,%rdi
0000000000041970	call	*0x00042762(%rip)
0000000000041976	movq	0x00063773(%rip),%rsi
000000000004197d	movq	%rax,%rdi
0000000000041980	call	*0x00042752(%rip)
0000000000041986	movq	0x0006311b(%rip),%rsi
000000000004198d	movq	%rbx,%rdi
0000000000041990	movq	%rax,%rdx
0000000000041993	call	*0x0004273f(%rip)
0000000000041999	movq	0x00064180(%rip),%rsi
00000000000419a0	movq	0x000641c9(%rip),%rdx
00000000000419a7	movq	%rbx,%rdi
00000000000419aa	call	*0x00042728(%rip)
00000000000419b0	movq	0x00063101(%rip),%rsi
00000000000419b7	movq	%r14,%rdi
00000000000419ba	call	*0x00042718(%rip)
00000000000419c0	movq	0x000630f9(%rip),%rsi
00000000000419c7	movq	%rax,%rdi
00000000000419ca	call	*0x00042708(%rip)
00000000000419d0	movq	0x000630f1(%rip),%rsi
00000000000419d7	movq	%rax,%rdi
00000000000419da	movq	%rbx,%rdx
00000000000419dd	movq	0x000426f4(%rip),%rax
00000000000419e4	popq	%rbx
00000000000419e5	popq	%r14
00000000000419e7	popq	%rbp
00000000000419e8	jmp	*%rax
-[PBXGDB_ContinueToCallSymbolSequence _resultAllThreadsStepping:]:
00000000000419ea	pushq	%rbp
00000000000419eb	movq	%rsp,%rbp
00000000000419ee	movq	0x000637c3(%rip),%rsi
00000000000419f5	call	*0x000426dd(%rip)
00000000000419fb	movq	0x0006414e(%rip),%rsi
0000000000041a02	movq	%rax,%rdi
0000000000041a05	movq	0x000426cc(%rip),%rax
0000000000041a0c	popq	%rbp
0000000000041a0d	jmp	*%rax
-[PBXGDB_ContinueToCallSymbolSequence _symbolIsFunction:]:
0000000000041a0f	pushq	%rbp
0000000000041a10	movq	%rsp,%rbp
0000000000041a13	pushq	%r15
0000000000041a15	pushq	%r14
0000000000041a17	pushq	%r12
0000000000041a19	pushq	%rbx
0000000000041a1a	movq	%rdx,%r14
0000000000041a1d	movq	%rdi,%rbx
0000000000041a20	movq	0x0006d6d1(%rip),%rax
0000000000041a27	movq	(%rbx,%rax),%rcx
0000000000041a2b	movq	0x00063146(%rip),%rsi
0000000000041a32	movq	0x00066a17(%rip),%rdi
0000000000041a39	leaq	0x00072a78(%rip),%rdx
0000000000041a40	movq	0x00042691(%rip),%r15
0000000000041a47	xorb	%al,%al
0000000000041a49	call	*%r15
0000000000041a4c	movq	0x00063885(%rip),%rsi
0000000000041a53	movq	%r14,%rdi
0000000000041a56	movq	%rax,%rdx
0000000000041a59	call	*%r15
0000000000041a5c	movb	$0x01,%cl
0000000000041a5e	movq	$0x7fffffffffffffff,%r15
0000000000041a68	cmpq	%r15,%rax
0000000000041a6b	jne	0x00041ad0
0000000000041a6d	movq	0x0006d684(%rip),%rax
0000000000041a74	movq	(%rbx,%rax),%rcx
0000000000041a78	movq	0x000630f9(%rip),%rsi
0000000000041a7f	movq	0x000669ca(%rip),%rdi
0000000000041a86	leaq	0x00072a4b(%rip),%rdx
0000000000041a8d	movq	0x00042644(%rip),%r12
0000000000041a94	xorb	%al,%al
0000000000041a96	call	*%r12
0000000000041a99	movq	0x00063838(%rip),%rsi
0000000000041aa0	movq	%r14,%rdi
0000000000041aa3	movq	%rax,%rdx
0000000000041aa6	call	*%r12
0000000000041aa9	movb	$0x01,%cl
0000000000041aab	cmpq	%r15,%rax
0000000000041aae	jne	0x00041ad0
0000000000041ab0	movq	0x0006d641(%rip),%rax
0000000000041ab7	movq	(%rbx,%rax),%rdx
0000000000041abb	leaq	0x000668ce(%rip),%rsi
0000000000041ac2	movq	%r14,%rdi
0000000000041ac5	call	*0x000668c5(%rip)
0000000000041acb	testb	%al,%al
0000000000041acd	setne	%cl
0000000000041ad0	movzbl	%cl,%eax
0000000000041ad3	popq	%rbx
0000000000041ad4	popq	%r12
0000000000041ad6	popq	%r14
0000000000041ad8	popq	%r15
0000000000041ada	popq	%rbp
0000000000041adb	ret
-[PBXGDB_ContinueToCallSymbolSequence _checkPosition:]:
0000000000041adc	pushq	%rbp
0000000000041add	movq	%rsp,%rbp
0000000000041ae0	pushq	%r15
0000000000041ae2	pushq	%r14
0000000000041ae4	pushq	%r12
0000000000041ae6	pushq	%rbx
0000000000041ae7	movq	%rdx,%r15
0000000000041aea	movq	%rdi,%r12
0000000000041aed	movq	0x00065224(%rip),%rsi
0000000000041af4	movq	%r15,%rdi
0000000000041af7	call	*0x000425db(%rip)
0000000000041afd	xorl	%r14d,%r14d
0000000000041b00	testb	%al,%al
0000000000041b02	je	0x00041b17
0000000000041b04	movq	0x00065215(%rip),%rsi
0000000000041b0b	movq	%r15,%rdi
0000000000041b0e	call	*0x000425c4(%rip)
0000000000041b14	movq	%rax,%r14
0000000000041b17	movq	0x0006d5f2(%rip),%rcx
0000000000041b1e	movq	(%r12,%rcx),%rax
0000000000041b22	leaq	0xff(%rax),%rdx
0000000000041b26	movq	%rdx,(%r12,%rcx)
0000000000041b2a	testq	%rax,%rax
0000000000041b2d	js	0x00041b34
0000000000041b2f	testq	%r14,%r14
0000000000041b32	jne	0x00041b8b
0000000000041b34	movq	0x00062ffd(%rip),%rsi
0000000000041b3b	movq	%r12,%rdi
0000000000041b3e	call	*0x00042594(%rip)
0000000000041b44	jmp	0x00041c8d
0000000000041b49	movq	%rax,%rbx
0000000000041b4c	cmpl	$0x01,%edx
0000000000041b4f	jne	0x00041c9e
0000000000041b55	movq	%rbx,%rdi
0000000000041b58	callq	0x0004e61a	; symbol stub for: _objc_begin_catch
0000000000041b5d	leaq	0x00072994(%rip),%rdi
0000000000041b64	movq	%rax,%rsi
0000000000041b67	xorb	%al,%al
0000000000041b69	callq	0x0004e5c0	; symbol stub for: _NSLog
0000000000041b6e	movq	0x00062fc3(%rip),%rsi
0000000000041b75	movq	%r12,%rdi
0000000000041b78	call	*0x0004255a(%rip)
0000000000041b7e	popq	%rbx
0000000000041b7f	popq	%r12
0000000000041b81	popq	%r14
0000000000041b83	popq	%r15
0000000000041b85	popq	%rbp
0000000000041b86	jmp	0x0004e620	; symbol stub for: _objc_end_catch
0000000000041b8b	movq	0x0006519e(%rip),%rsi
0000000000041b92	movq	%r15,%rdi
0000000000041b95	call	*0x0004253d(%rip)
0000000000041b9b	movq	%rax,%r15
0000000000041b9e	movq	0x0006d57b(%rip),%rax
0000000000041ba5	cmpb	$0x01,(%r12,%rax)
0000000000041baa	jne	0x00041bf0
0000000000041bac	movq	0x0006d565(%rip),%rax
0000000000041bb3	movq	(%r12,%rax),%rdx
0000000000041bb7	movq	0x000667d2(%rip),%rax
0000000000041bbe	leaq	0x000667cb(%rip),%rsi
0000000000041bc5	movq	%r14,%rdi
0000000000041bc8	call	*%rax
0000000000041bca	testb	%al,%al
0000000000041bcc	je	0x00041bf0
0000000000041bce	movq	0x0006d533(%rip),%rax
0000000000041bd5	cmpq	(%r12,%rax),%r15
0000000000041bd9	je	0x00041bf0
0000000000041bdb	movq	0x00062f56(%rip),%rsi
0000000000041be2	movq	%r12,%rdi
0000000000041be5	call	*0x000424ed(%rip)
0000000000041beb	jmp	0x00041c8d
0000000000041bf0	movq	0x0006d529(%rip),%rax
0000000000041bf7	cmpb	$0x00,(%r12,%rax)
0000000000041bfc	jne	0x00041c1c
0000000000041bfe	movq	0x0006d513(%rip),%rdx
0000000000041c05	movq	%r14,%rdi
0000000000041c08	movq	%r12,%rsi
0000000000041c0b	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000041c10	movq	0x0006d509(%rip),%rax
0000000000041c17	movb	$0x01,(%r12,%rax)
0000000000041c1c	movq	0x0006d505(%rip),%rax
0000000000041c23	cmpb	$0x00,(%r12,%rax)
0000000000041c28	jne	0x00041c48
0000000000041c2a	movq	0x000655f7(%rip),%rsi
0000000000041c31	movq	%r12,%rdi
0000000000041c34	call	*0x0004249e(%rip)
0000000000041c3a	movq	0x0006d4e7(%rip),%rax
0000000000041c41	movb	$0x01,(%r12,%rax)
0000000000041c46	jmp	0x00041c8d
0000000000041c48	movq	0x000655e1(%rip),%rsi
0000000000041c4f	movq	%r12,%rdi
0000000000041c52	movq	%r14,%rdx
0000000000041c55	call	*0x0004247d(%rip)
0000000000041c5b	testb	%al,%al
0000000000041c5d	je	0x00041c71
0000000000041c5f	movq	0x00062ed2(%rip),%rsi
0000000000041c66	movq	%r12,%rdi
0000000000041c69	call	*0x00042469(%rip)
0000000000041c6f	jmp	0x00041c8d
0000000000041c71	movq	0x000655c0(%rip),%rsi
0000000000041c78	movq	%r12,%rdi
0000000000041c7b	call	*0x00042457(%rip)
0000000000041c81	movq	0x0006d4a0(%rip),%rax
0000000000041c88	movb	$0x00,(%r12,%rax)
0000000000041c8d	popq	%rbx
0000000000041c8e	popq	%r12
0000000000041c90	popq	%r14
0000000000041c92	popq	%r15
0000000000041c94	popq	%rbp
0000000000041c95	ret
0000000000041c96	movq	%rax,%rbx
0000000000041c99	callq	0x0004e620	; symbol stub for: _objc_end_catch
0000000000041c9e	movq	%rbx,%rdi
0000000000041ca1	callq	0x0004e66e	; symbol stub for: __Unwind_Resume
-[PBXGDB_VarObjDataValue2 dealloc]:
0000000000041ca6	pushq	%rbp
0000000000041ca7	movq	%rsp,%rbp
0000000000041caa	pushq	%rbx
0000000000041cab	pushq	%rax
0000000000041cac	movq	%rdi,%rbx
0000000000041caf	movq	0x00063a0a(%rip),%rsi
0000000000041cb6	xorl	%edx,%edx
0000000000041cb8	call	*0x0004241a(%rip)
0000000000041cbe	movq	0x00063993(%rip),%rsi
0000000000041cc5	movq	%rbx,%rdi
0000000000041cc8	xorl	%edx,%edx
0000000000041cca	movq	0x00042407(%rip),%rax
0000000000041cd1	addq	$0x08,%rsp
0000000000041cd5	popq	%rbx
0000000000041cd6	popq	%rbp
0000000000041cd7	jmp	*%rax
-[PBXGDB_VarObjDataValue2 contentDescription]:
0000000000041cd9	pushq	%rbp
0000000000041cda	movq	%rsp,%rbp
0000000000041cdd	pushq	%r15
0000000000041cdf	pushq	%r14
0000000000041ce1	pushq	%r12
0000000000041ce3	pushq	%rbx
0000000000041ce4	subq	$0x20,%rsp
0000000000041ce8	movq	%rdi,%rbx
0000000000041ceb	movq	0x00063a06(%rip),%rsi
0000000000041cf2	call	*0x000423e0(%rip)
0000000000041cf8	leaq	0x000665f1(%rip),%rsi
0000000000041cff	movq	%rax,%rdi
0000000000041d02	call	*0x000665e8(%rip)
0000000000041d08	testq	%rax,%rax
0000000000041d0b	je	0x00041d68
0000000000041d0d	movq	0x0006673c(%rip),%r14
0000000000041d14	movq	%rbx,0xd0(%rbp)
0000000000041d18	movq	0x00067271(%rip),%rax
0000000000041d1f	movq	%rax,0xd8(%rbp)
0000000000041d23	movq	0x0006551e(%rip),%rsi
0000000000041d2a	leaq	0xd0(%rbp),%rdi
0000000000041d2e	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000041d33	movq	%rax,%r15
0000000000041d36	movq	0x0004239b(%rip),%r12
0000000000041d3d	movq	0x000639b4(%rip),%rsi
0000000000041d44	movq	%rbx,%rdi
0000000000041d47	call	*%r12
0000000000041d4a	leaq	0x00072b67(%rip),%rdx
0000000000041d51	movq	0x00062e20(%rip),%rsi
0000000000041d58	movq	%r14,%rdi
0000000000041d5b	movq	%r15,%rcx
0000000000041d5e	movq	%rax,%r8
0000000000041d61	xorb	%al,%al
0000000000041d63	call	*%r12
0000000000041d66	jmp	0x00041d87
0000000000041d68	movq	%rbx,0xc0(%rbp)
0000000000041d6c	movq	0x0006721d(%rip),%rax
0000000000041d73	movq	%rax,0xc8(%rbp)
0000000000041d77	movq	0x000654ca(%rip),%rsi
0000000000041d7e	leaq	0xc0(%rbp),%rdi
0000000000041d82	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000041d87	addq	$0x20,%rsp
0000000000041d8b	popq	%rbx
0000000000041d8c	popq	%r12
0000000000041d8e	popq	%r14
0000000000041d90	popq	%r15
0000000000041d92	popq	%rbp
0000000000041d93	ret
-[PBXGDB_VarObjDataValue2 deleteVarObjFromGDB]:
0000000000041d94	pushq	%rbp
0000000000041d95	movq	%rsp,%rbp
0000000000041d98	pushq	%rbx
0000000000041d99	pushq	%rax
0000000000041d9a	movq	%rdi,%rbx
0000000000041d9d	movq	0x00063954(%rip),%rsi
0000000000041da4	call	*0x0004232e(%rip)
0000000000041daa	testq	%rax,%rax
0000000000041dad	jne	0x00041db6
0000000000041daf	addq	$0x08,%rsp
0000000000041db3	popq	%rbx
0000000000041db4	popq	%rbp
0000000000041db5	ret
0000000000041db6	movq	0x00062cfb(%rip),%rsi
0000000000041dbd	movq	%rbx,%rdi
0000000000041dc0	call	*0x00042312(%rip)
0000000000041dc6	movq	0x0006367b(%rip),%rsi
0000000000041dcd	movq	%rax,%rdi
0000000000041dd0	call	*0x00042302(%rip)
0000000000041dd6	movq	0x00065473(%rip),%rsi
0000000000041ddd	movq	%rax,%rdi
0000000000041de0	movq	%rbx,%rdx
0000000000041de3	movq	0x000422ee(%rip),%rax
0000000000041dea	addq	$0x08,%rsp
0000000000041dee	popq	%rbx
0000000000041def	popq	%rbp
0000000000041df0	jmp	*%rax
-[PBXGDB_VarObjDataValue2 requestReleaseChildren]:
0000000000041df2	pushq	%rbp
0000000000041df3	movq	%rsp,%rbp
0000000000041df6	movq	0x00063acb(%rip),%rsi
0000000000041dfd	movl	$0x00000001,%edx
0000000000041e02	popq	%rbp
0000000000041e03	jmp	*0x000422cf(%rip)
-[PBXGDB_VarObjDataValue2 requestReleaseChildrenFreeVarObjs:]:
0000000000041e09	pushq	%rbp
0000000000041e0a	movq	%rsp,%rbp
0000000000041e0d	pushq	%r14
0000000000041e0f	pushq	%rbx
0000000000041e10	movl	%edx,%r14d
0000000000041e13	movq	%rdi,%rbx
0000000000041e16	movq	0x000638db(%rip),%rsi
0000000000041e1d	call	*0x000422b5(%rip)
0000000000041e23	testq	%rax,%rax
0000000000041e26	je	0x00041e3d
0000000000041e28	movq	0x00063761(%rip),%rsi
0000000000041e2f	movq	%rbx,%rdi
0000000000041e32	call	*0x000422a0(%rip)
0000000000041e38	cmpl	$0x02,%eax
0000000000041e3b	je	0x00041e42
0000000000041e3d	popq	%rbx
0000000000041e3e	popq	%r14
0000000000041e40	popq	%rbp
0000000000041e41	ret
0000000000041e42	movq	0x00062c6f(%rip),%rsi
0000000000041e49	movq	%rbx,%rdi
0000000000041e4c	call	*0x00042286(%rip)
0000000000041e52	movq	0x000635ef(%rip),%rsi
0000000000041e59	movq	%rax,%rdi
0000000000041e5c	call	*0x00042276(%rip)
0000000000041e62	movsbl	%dh,%ecx
0000000000041e66	movq	0x000653fb(%rip),%rsi
0000000000041e6d	movq	%rax,%rdi
0000000000041e70	movq	%rbx,%rdx
0000000000041e73	movq	0x0004225e(%rip),%rax
0000000000041e7a	popq	%rbx
0000000000041e7b	popq	%r14
0000000000041e7d	popq	%rbp
0000000000041e7e	jmp	*%rax
-[PBXGDB_VarObjDataValue2 canSetValueFormat]:
0000000000041e80	pushq	%rbp
0000000000041e81	movq	%rsp,%rbp
0000000000041e84	movl	$0x00000001,%eax
0000000000041e89	popq	%rbp
0000000000041e8a	ret
-[PBXGDB_VarObjDataValue2 requestSetValueFormat:]:
0000000000041e8b	pushq	%rbp
0000000000041e8c	movq	%rsp,%rbp
0000000000041e8f	pushq	%r15
0000000000041e91	pushq	%r14
0000000000041e93	pushq	%rbx
0000000000041e94	subq	$0x18,%rsp
0000000000041e98	movl	%edx,%ebx
0000000000041e9a	movq	%rdi,%r14
0000000000041e9d	movq	0x00062c14(%rip),%rsi
0000000000041ea4	movq	0x0004222d(%rip),%r15
0000000000041eab	call	*%r15
0000000000041eae	movq	0x000653bb(%rip),%rsi
0000000000041eb5	movq	%rax,%rdi
0000000000041eb8	movl	%ebx,%edx
0000000000041eba	movq	%r14,%rcx
0000000000041ebd	call	*%r15
0000000000041ec0	movq	%r14,0xd8(%rbp)
0000000000041ec4	leaq	0xd8(%rbp),%rdi
0000000000041ec8	movq	0x000670c1(%rip),%rax
0000000000041ecf	movq	%rax,0xe0(%rbp)
0000000000041ed3	movq	0x000635d6(%rip),%rsi
0000000000041eda	movl	%ebx,%edx
0000000000041edc	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000041ee1	movq	0x00063810(%rip),%rsi
0000000000041ee8	movq	%r14,%rdi
0000000000041eeb	call	*%r15
0000000000041eee	testq	%rax,%rax
0000000000041ef1	je	0x00041f26
0000000000041ef3	movq	0x00062bbe(%rip),%rsi
0000000000041efa	movq	0x000421d7(%rip),%r15
0000000000041f01	movq	%r14,%rdi
0000000000041f04	call	*%r15
0000000000041f07	movq	0x0006353a(%rip),%rsi
0000000000041f0e	movq	%rax,%rdi
0000000000041f11	call	*%r15
0000000000041f14	movq	0x0006535d(%rip),%rsi
0000000000041f1b	movq	%rax,%rdi
0000000000041f1e	movq	%r14,%rdx
0000000000041f21	movl	%ebx,%ecx
0000000000041f23	call	*%r15
0000000000041f26	addq	$0x18,%rsp
0000000000041f2a	popq	%rbx
0000000000041f2b	popq	%r14
0000000000041f2d	popq	%r15
0000000000041f2f	popq	%rbp
0000000000041f30	ret
-[PBXGDB_VarObjDataValue2 isPointerType]:
0000000000041f31	pushq	%rbp
0000000000041f32	movq	%rsp,%rbp
0000000000041f35	movq	0x00065344(%rip),%rsi
0000000000041f3c	call	*0x00042196(%rip)
0000000000041f42	cmpl	$0x01,%eax
0000000000041f45	sete	%al
0000000000041f48	movzbl	%al,%eax
0000000000041f4b	popq	%rbp
0000000000041f4c	ret
-[PBXGDB_VarObjDataValue2 isNSArrayType]:
0000000000041f4d	pushq	%rbp
0000000000041f4e	movq	%rsp,%rbp
0000000000041f51	pushq	%rbx
0000000000041f52	pushq	%rax
0000000000041f53	leaq	0x0006d24e(%rip),%rax
0000000000041f5a	movq	(%rax),%rax
0000000000041f5d	movq	(%rdi,%rax),%rdi
0000000000041f61	movq	0x00063520(%rip),%rsi
0000000000041f68	movq	0x00042169(%rip),%rbx
0000000000041f6f	call	*%rbx
0000000000041f71	movq	0x000638e0(%rip),%rsi
0000000000041f78	movq	0x00066681(%rip),%rdi
0000000000041f7f	movq	%rax,%rdx
0000000000041f82	call	*%rbx
0000000000041f84	movsbl	%al,%eax
0000000000041f87	addq	$0x08,%rsp
0000000000041f8b	popq	%rbx
0000000000041f8c	popq	%rbp
0000000000041f8d	ret
-[PBXGDB_VarObjDataValue2 canPrintDescription]:
0000000000041f8e	pushq	%rbp
0000000000041f8f	movq	%rsp,%rbp
0000000000041f92	movq	0x000652f7(%rip),%rsi
0000000000041f99	call	*0x00042139(%rip)
0000000000041f9f	movsbl	%al,%eax
0000000000041fa2	popq	%rbp
0000000000041fa3	ret
-[PBXGDB_VarObjDataValue2 canPrintGCInformation]:
0000000000041fa4	pushq	%rbp
0000000000041fa5	movq	%rsp,%rbp
0000000000041fa8	movq	0x000652e1(%rip),%rsi
0000000000041faf	call	*0x00042123(%rip)
0000000000041fb5	movsbl	%al,%eax
0000000000041fb8	popq	%rbp
0000000000041fb9	ret
-[PBXGDB_VarObjDataValue2 requestPrintDescriptionInThread:atStackFrame:runAllThreads:]:
0000000000041fba	pushq	%rbp
0000000000041fbb	movq	%rsp,%rbp
0000000000041fbe	pushq	%r15
0000000000041fc0	pushq	%r14
0000000000041fc2	pushq	%rbx
0000000000041fc3	pushq	%rax
0000000000041fc4	movl	%r8d,%r14d
0000000000041fc7	movq	%rdi,%rbx
0000000000041fca	movq	0x00062ae7(%rip),%rsi
0000000000041fd1	movq	0x00042100(%rip),%r15
0000000000041fd8	call	*%r15
0000000000041fdb	movq	0x00063466(%rip),%rsi
0000000000041fe2	movq	%rax,%rdi
0000000000041fe5	call	*%r15
0000000000041fe8	movq	%rax,%rdi
0000000000041feb	testb	%r14b,%r14b
0000000000041fee	jne	0x0004200a
0000000000041ff0	movq	0x000652a1(%rip),%rsi
0000000000041ff7	movq	%rbx,%rdx
0000000000041ffa	addq	$0x08,%rsp
0000000000041ffe	popq	%rbx
0000000000041fff	popq	%r14
0000000000042001	popq	%r15
0000000000042003	popq	%rbp
0000000000042004	jmp	*0x000420ce(%rip)
000000000004200a	movq	0x0006528f(%rip),%rsi
0000000000042011	jmp	0x00041ff7
-[PBXGDB_VarObjDataValue2 requestInfoRootsInThread:atStackFrame:]:
0000000000042013	pushq	%rbp
0000000000042014	movq	%rsp,%rbp
0000000000042017	pushq	%r15
0000000000042019	pushq	%r14
000000000004201b	pushq	%rbx
000000000004201c	pushq	%rax
000000000004201d	movq	%rdi,%r14
0000000000042020	movq	0x00062a59(%rip),%rsi
0000000000042027	movq	0x00066b02(%rip),%rdi
000000000004202e	call	*0x000420a4(%rip)
0000000000042034	movq	%rax,%r15
0000000000042037	movq	0x00066412(%rip),%rbx
000000000004203e	movq	0x00062ac3(%rip),%rsi
0000000000042045	movq	%r14,%rdi
0000000000042048	call	*0x0004208a(%rip)
000000000004204e	leaq	0x00072943(%rip),%rdx
0000000000042055	movq	0x00062b1c(%rip),%rsi
000000000004205c	movq	%rbx,%rdi
000000000004205f	movq	%rax,%rcx
0000000000042062	xorb	%al,%al
0000000000042064	call	*0x0004206e(%rip)
000000000004206a	movq	0x000641a7(%rip),%rsi
0000000000042071	movq	%r15,%rdi
0000000000042074	movq	%rax,%rdx
0000000000042077	call	*0x0004205b(%rip)
000000000004207d	movq	0x00062a34(%rip),%rsi
0000000000042084	movq	%r14,%rdi
0000000000042087	call	*0x0004204b(%rip)
000000000004208d	movq	0x00062d24(%rip),%rsi
0000000000042094	movq	%rax,%rdi
0000000000042097	movq	%r15,%rdx
000000000004209a	movq	0x00042037(%rip),%rax
00000000000420a1	addq	$0x08,%rsp
00000000000420a5	popq	%rbx
00000000000420a6	popq	%r14
00000000000420a8	popq	%r15
00000000000420aa	popq	%rbp
00000000000420ab	jmp	*%rax
-[PBXGDB_VarObjDataValue2 requestInfoReferencesInThread:atStackFrame:]:
00000000000420ad	pushq	%rbp
00000000000420ae	movq	%rsp,%rbp
00000000000420b1	pushq	%r15
00000000000420b3	pushq	%r14
00000000000420b5	pushq	%rbx
00000000000420b6	pushq	%rax
00000000000420b7	movq	%rdi,%r14
00000000000420ba	movq	0x000629bf(%rip),%rsi
00000000000420c1	movq	0x00066a68(%rip),%rdi
00000000000420c8	call	*0x0004200a(%rip)
00000000000420ce	movq	%rax,%r15
00000000000420d1	movq	0x00066378(%rip),%rbx
00000000000420d8	movq	0x00062a29(%rip),%rsi
00000000000420df	movq	%r14,%rdi
00000000000420e2	call	*0x00041ff0(%rip)
00000000000420e8	leaq	0x000728c9(%rip),%rdx
00000000000420ef	movq	0x00062a82(%rip),%rsi
00000000000420f6	movq	%rbx,%rdi
00000000000420f9	movq	%rax,%rcx
00000000000420fc	xorb	%al,%al
00000000000420fe	call	*0x00041fd4(%rip)
0000000000042104	movq	0x0006410d(%rip),%rsi
000000000004210b	movq	%r15,%rdi
000000000004210e	movq	%rax,%rdx
0000000000042111	call	*0x00041fc1(%rip)
0000000000042117	movq	0x0006299a(%rip),%rsi
000000000004211e	movq	%r14,%rdi
0000000000042121	call	*0x00041fb1(%rip)
0000000000042127	movq	0x00062c8a(%rip),%rsi
000000000004212e	movq	%rax,%rdi
0000000000042131	movq	%r15,%rdx
0000000000042134	movq	0x00041f9d(%rip),%rax
000000000004213b	addq	$0x08,%rsp
000000000004213f	popq	%rbx
0000000000042140	popq	%r14
0000000000042142	popq	%r15
0000000000042144	popq	%rbp
0000000000042145	jmp	*%rax
-[PBXGDB_VarObjDataValue2 valueIsEditable]:
0000000000042147	pushq	%rbp
0000000000042148	movq	%rsp,%rbp
000000000004214b	pushq	%rbx
000000000004214c	pushq	%rax
000000000004214d	movq	%rdi,%rbx
0000000000042150	movq	0x00063659(%rip),%rsi
0000000000042157	call	*0x00041f7b(%rip)
000000000004215d	movb	$0x01,%cl
000000000004215f	testb	%al,%al
0000000000042161	je	0x00042179
0000000000042163	movq	0x00065116(%rip),%rsi
000000000004216a	movq	%rbx,%rdi
000000000004216d	call	*0x00041f65(%rip)
0000000000042173	cmpl	$0x01,%eax
0000000000042176	sete	%cl
0000000000042179	movzbl	%cl,%eax
000000000004217c	addq	$0x08,%rsp
0000000000042180	popq	%rbx
0000000000042181	popq	%rbp
0000000000042182	ret
-[PBXGDB_VarObjDataValue2 _booleanValueSetStringForValueString:]:
0000000000042183	pushq	%rbp
0000000000042184	movq	%rsp,%rbp
0000000000042187	pushq	%rbx
0000000000042188	pushq	%rax
0000000000042189	movq	%rdx,%rbx
000000000004218c	movq	0x00065115(%rip),%rsi
0000000000042193	leaq	0x0006f9fe(%rip),%rdx
000000000004219a	movq	%rbx,%rdi
000000000004219d	movl	$0x00000003,%ecx
00000000000421a2	call	*0x00041f30(%rip)
00000000000421a8	testq	%rax,%rax
00000000000421ab	jne	0x000421b9
00000000000421ad	leaq	0x0006d904(%rip),%rax
00000000000421b4	jmp	0x000422b5
00000000000421b9	movq	0x000650e8(%rip),%rsi
00000000000421c0	leaq	0x0006f051(%rip),%rdx
00000000000421c7	movq	%rbx,%rdi
00000000000421ca	movl	$0x00000003,%ecx
00000000000421cf	call	*0x00041f03(%rip)
00000000000421d5	testq	%rax,%rax
00000000000421d8	je	0x000421ad
00000000000421da	movq	0x000650c7(%rip),%rsi
00000000000421e1	leaq	0x000727f0(%rip),%rdx
00000000000421e8	movq	%rbx,%rdi
00000000000421eb	movl	$0x00000003,%ecx
00000000000421f0	call	*0x00041ee2(%rip)
00000000000421f6	testq	%rax,%rax
00000000000421f9	je	0x000421ad
00000000000421fb	movq	0x000650a6(%rip),%rsi
0000000000042202	leaq	0x0007128f(%rip),%rdx
0000000000042209	movq	%rbx,%rdi
000000000004220c	movl	$0x00000003,%ecx
0000000000042211	call	*0x00041ec1(%rip)
0000000000042217	testq	%rax,%rax
000000000004221a	je	0x000421ad
000000000004221c	movq	0x00065085(%rip),%rsi
0000000000042223	leaq	0x0006f94e(%rip),%rdx
000000000004222a	movq	%rbx,%rdi
000000000004222d	movl	$0x00000003,%ecx
0000000000042232	call	*0x00041ea0(%rip)
0000000000042238	testq	%rax,%rax
000000000004223b	jne	0x00042246
000000000004223d	leaq	0x0006d854(%rip),%rax
0000000000042244	jmp	0x000422b5
0000000000042246	movq	0x0006505b(%rip),%rsi
000000000004224d	leaq	0x000727a4(%rip),%rdx
0000000000042254	movq	%rbx,%rdi
0000000000042257	movl	$0x00000003,%ecx
000000000004225c	call	*0x00041e76(%rip)
0000000000042262	testq	%rax,%rax
0000000000042265	je	0x0004223d
0000000000042267	movq	0x0006503a(%rip),%rsi
000000000004226e	leaq	0x000727a3(%rip),%rdx
0000000000042275	movq	%rbx,%rdi
0000000000042278	movl	$0x00000003,%ecx
000000000004227d	call	*0x00041e55(%rip)
0000000000042283	testq	%rax,%rax
0000000000042286	je	0x0004223d
0000000000042288	movq	0x00065019(%rip),%rsi
000000000004228f	leaq	0x000727a2(%rip),%rdx
0000000000042296	movq	%rbx,%rdi
0000000000042299	movl	$0x00000003,%ecx
000000000004229e	call	*0x00041e34(%rip)
00000000000422a4	movq	%rax,%rcx
00000000000422a7	leaq	0x0006d7ea(%rip),%rax
00000000000422ae	testq	%rcx,%rcx
00000000000422b1	cmovneq	%rbx,%rax
00000000000422b5	addq	$0x08,%rsp
00000000000422b9	popq	%rbx
00000000000422ba	popq	%rbp
00000000000422bb	ret
-[PBXGDB_VarObjDataValue2 requestSetStringValue:]:
00000000000422bc	pushq	%rbp
00000000000422bd	movq	%rsp,%rbp
00000000000422c0	pushq	%r15
00000000000422c2	pushq	%r14
00000000000422c4	pushq	%rbx
00000000000422c5	pushq	%rax
00000000000422c6	movq	%rdx,%r14
00000000000422c9	movq	%rdi,%rbx
00000000000422cc	movq	0x00064fad(%rip),%rsi
00000000000422d3	call	*0x00041dff(%rip)
00000000000422d9	cmpl	$0x07,%eax
00000000000422dc	jne	0x00042319
00000000000422de	movq	0x00064fcb(%rip),%rsi
00000000000422e5	movq	0x00041dec(%rip),%r15
00000000000422ec	movq	%rbx,%rdi
00000000000422ef	call	*%r15
00000000000422f2	movq	0x00064fbf(%rip),%rsi
00000000000422f9	movq	%rax,%rdi
00000000000422fc	call	*%r15
00000000000422ff	cmpb	$0x01,%al
0000000000042301	jne	0x00042319
0000000000042303	movq	0x00064fb6(%rip),%rsi
000000000004230a	movq	%rbx,%rdi
000000000004230d	movq	%r14,%rdx
0000000000042310	call	*0x00041dc2(%rip)
0000000000042316	movq	%rax,%r14
0000000000042319	movq	0x00062798(%rip),%rsi
0000000000042320	movq	%rbx,%rdi
0000000000042323	call	*0x00041daf(%rip)
0000000000042329	movq	0x00063118(%rip),%rsi
0000000000042330	movq	%rax,%rdi
0000000000042333	call	*0x00041d9f(%rip)
0000000000042339	movq	0x00064f88(%rip),%rsi
0000000000042340	movq	%rax,%rdi
0000000000042343	movq	%rbx,%rdx
0000000000042346	movq	%r14,%rcx
0000000000042349	movq	0x00041d88(%rip),%rax
0000000000042350	addq	$0x08,%rsp
0000000000042354	popq	%rbx
0000000000042355	popq	%r14
0000000000042357	popq	%r15
0000000000042359	popq	%rbp
000000000004235a	jmp	*%rax
-[PBXGDB_VarObjDataValue2 _boolValueStringForString:]:
000000000004235c	pushq	%rbp
000000000004235d	movq	%rsp,%rbp
0000000000042360	movq	0x00062f79(%rip),%rsi
0000000000042367	movq	%rdx,%rdi
000000000004236a	call	*0x00041d68(%rip)
0000000000042370	movq	%rax,%rcx
0000000000042373	leaq	0x0006f7fe(%rip),%rdx
000000000004237a	leaq	0x0006f817(%rip),%rax
0000000000042381	testq	%rcx,%rcx
0000000000042384	cmoveq	%rdx,%rax
0000000000042388	popq	%rbp
0000000000042389	ret
-[PBXGDB_VarObjTrigger initWithDebugger:parentVarObj:]:
000000000004238a	pushq	%rbp
000000000004238b	movq	%rsp,%rbp
000000000004238e	pushq	%r14
0000000000042390	pushq	%rbx
0000000000042391	subq	$0x10,%rsp
0000000000042395	movq	%rcx,%r14
0000000000042398	movq	%rdi,0xe0(%rbp)
000000000004239c	movq	0x00066bf5(%rip),%rax
00000000000423a3	movq	%rax,0xe8(%rbp)
00000000000423a7	movq	0x000629a2(%rip),%rsi
00000000000423ae	leaq	0xe0(%rbp),%rdi
00000000000423b2	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000423b7	movq	%rax,%rbx
00000000000423ba	testq	%rbx,%rbx
00000000000423bd	je	0x000423d1
00000000000423bf	movq	0x0006cd7a(%rip),%rdx
00000000000423c6	movq	%r14,%rdi
00000000000423c9	movq	%rbx,%rsi
00000000000423cc	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000423d1	movq	%rbx,%rax
00000000000423d4	addq	$0x10,%rsp
00000000000423d8	popq	%rbx
00000000000423d9	popq	%r14
00000000000423db	popq	%rbp
00000000000423dc	ret
-[PBXGDB_VarObjTrigger finalize]:
00000000000423dd	pushq	%rbp
00000000000423de	movq	%rsp,%rbp
00000000000423e1	pushq	%rbx
00000000000423e2	subq	$0x18,%rsp
00000000000423e6	movq	%rdi,%rbx
00000000000423e9	movq	0x0006cd50(%rip),%rdx
00000000000423f0	xorl	%edi,%edi
00000000000423f2	movq	%rbx,%rsi
00000000000423f5	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000423fa	movq	%rbx,0xe8(%rbp)
00000000000423fe	movq	0x00066b93(%rip),%rax
0000000000042405	movq	%rax,0xf0(%rbp)
0000000000042409	leaq	0xe8(%rbp),%rdi
000000000004240d	movq	0x00062784(%rip),%rsi
0000000000042414	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000042419	addq	$0x18,%rsp
000000000004241d	popq	%rbx
000000000004241e	popq	%rbp
000000000004241f	ret
-[PBXGDB_VarObjTrigger dealloc]:
0000000000042420	pushq	%rbp
0000000000042421	movq	%rsp,%rbp
0000000000042424	movq	%rdi,%rax
0000000000042427	movq	0x0006cd12(%rip),%rdx
000000000004242e	xorl	%edi,%edi
0000000000042430	movq	%rax,%rsi
0000000000042433	popq	%rbp
0000000000042434	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_VarObjTrigger setStringValue:]:
0000000000042439	pushq	%rbp
000000000004243a	movq	%rsp,%rbp
000000000004243d	pushq	%r15
000000000004243f	pushq	%r14
0000000000042441	pushq	%r12
0000000000042443	pushq	%rbx
0000000000042444	subq	$0x10,%rsp
0000000000042448	movq	%rdx,%r14
000000000004244b	movq	%rdi,%r15
000000000004244e	leaq	0x0006cd23(%rip),%rax
0000000000042455	movq	(%rax),%rax
0000000000042458	movq	(%r15,%rax),%rdi
000000000004245c	movq	0x000626a5(%rip),%rsi
0000000000042463	call	*0x00041c6f(%rip)
0000000000042469	cmpq	%r14,%rax
000000000004246c	je	0x000424b6
000000000004246e	leaq	0x00065eeb(%rip),%rsi
0000000000042475	movq	%rax,%rdi
0000000000042478	movq	%r14,%rdx
000000000004247b	call	*0x00065edf(%rip)
0000000000042481	testb	%al,%al
0000000000042483	jne	0x000424b6
0000000000042485	movq	0x0006ccb4(%rip),%rax
000000000004248c	movq	(%r15,%rax),%rbx
0000000000042490	movq	0x00063101(%rip),%rsi
0000000000042497	movq	0x00041c3a(%rip),%r12
000000000004249e	movq	%rbx,%rdi
00000000000424a1	movl	$0x00000001,%edx
00000000000424a6	call	*%r12
00000000000424a9	movq	0x00064da8(%rip),%rsi
00000000000424b0	movq	%rbx,%rdi
00000000000424b3	call	*%r12
00000000000424b6	movq	%r15,0xd0(%rbp)
00000000000424ba	movq	0x00066ad7(%rip),%rax
00000000000424c1	movq	%rax,0xd8(%rbp)
00000000000424c5	movq	0x000630f4(%rip),%rsi
00000000000424cc	leaq	0xd0(%rbp),%rdi
00000000000424d0	movq	%r14,%rdx
00000000000424d3	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000424d8	addq	$0x10,%rsp
00000000000424dc	popq	%rbx
00000000000424dd	popq	%r12
00000000000424df	popq	%r14
00000000000424e1	popq	%r15
00000000000424e3	popq	%rbp
00000000000424e4	ret
-[PBXGDB_CharPtrCType init]:
00000000000424e5	pushq	%rbp
00000000000424e6	movq	%rsp,%rbp
00000000000424e9	pushq	%r15
00000000000424eb	pushq	%r14
00000000000424ed	pushq	%r13
00000000000424ef	pushq	%r12
00000000000424f1	pushq	%rbx
00000000000424f2	subq	$0x18,%rsp
00000000000424f6	movq	%rdi,0xc8(%rbp)
00000000000424fa	movq	0x00066a9f(%rip),%rax
0000000000042501	movq	%rax,0xd0(%rbp)
0000000000042505	movq	0x00062564(%rip),%rsi
000000000004250c	leaq	0xc8(%rbp),%rdi
0000000000042510	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000042515	movq	%rax,%r12
0000000000042518	testq	%r12,%r12
000000000004251b	je	0x000425c3
0000000000042521	movq	0x00066368(%rip),%rdi
0000000000042528	leaq	0x00065db1(%rip),%r15
000000000004252f	movq	%r15,%rsi
0000000000042532	call	*0x00065da8(%rip)
0000000000042538	movq	0x00062531(%rip),%rsi
000000000004253f	movq	0x00041b92(%rip),%r13
0000000000042546	movq	%rax,%rdi
0000000000042549	call	*%r13
000000000004254c	movq	%rax,%r14
000000000004254f	movq	0x00066122(%rip),%rdi
0000000000042556	movq	%r15,%rsi
0000000000042559	call	*0x00065d81(%rip)
000000000004255f	movq	%rax,%rbx
0000000000042562	movq	0x000649d7(%rip),%rsi
0000000000042569	movq	0x00066320(%rip),%rdi
0000000000042570	call	*%r13
0000000000042573	leaq	0x000724de(%rip),%rdx
000000000004257a	movq	0x00064d6f(%rip),%rsi
0000000000042581	movq	%rbx,%rdi
0000000000042584	movq	%rax,%rcx
0000000000042587	xorl	%r8d,%r8d
000000000004258a	xorb	%al,%al
000000000004258c	call	*%r13
000000000004258f	movq	0x00064d62(%rip),%rsi
0000000000042596	movq	%r14,%rdi
0000000000042599	movq	%rax,%rdx
000000000004259c	call	*%r13
000000000004259f	movq	0x00064d5a(%rip),%rsi
00000000000425a6	movq	%r12,%rdi
00000000000425a9	movq	%r14,%rdx
00000000000425ac	call	*%r13
00000000000425af	leaq	0x000724c2(%rip),%rdx
00000000000425b6	movq	0x00064d4b(%rip),%rsi
00000000000425bd	movq	%r12,%rdi
00000000000425c0	call	*%r13
00000000000425c3	movq	%r12,%rax
00000000000425c6	addq	$0x18,%rsp
00000000000425ca	popq	%rbx
00000000000425cb	popq	%r12
00000000000425cd	popq	%r13
00000000000425cf	popq	%r14
00000000000425d1	popq	%r15
00000000000425d3	popq	%rbp
00000000000425d4	ret
-[PBXGDB_CType dealloc]:
00000000000425d5	pushq	%rbp
00000000000425d6	movq	%rsp,%rbp
00000000000425d9	pushq	%rbx
00000000000425da	pushq	%rax
00000000000425db	movq	%rdi,%rbx
00000000000425de	movq	0x0006cb63(%rip),%rdx
00000000000425e5	xorl	%edi,%edi
00000000000425e7	movq	%rbx,%rsi
00000000000425ea	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
00000000000425ef	movq	0x00064d1a(%rip),%rsi
00000000000425f6	movq	%rbx,%rdi
00000000000425f9	xorl	%edx,%edx
00000000000425fb	addq	$0x08,%rsp
00000000000425ff	popq	%rbx
0000000000042600	popq	%rbp
0000000000042601	jmp	*0x00041ad1(%rip)
-[PBXGDB_NSStringType init]:
0000000000042607	pushq	%rbp
0000000000042608	movq	%rsp,%rbp
000000000004260b	pushq	%r15
000000000004260d	pushq	%r14
000000000004260f	pushq	%r12
0000000000042611	pushq	%rbx
0000000000042612	subq	$0x10,%rsp
0000000000042616	movq	%rdi,0xd0(%rbp)
000000000004261a	movq	0x000669a7(%rip),%rax
0000000000042621	movq	%rax,0xd8(%rbp)
0000000000042625	movq	0x00062444(%rip),%rsi
000000000004262c	leaq	0xd0(%rbp),%rdi
0000000000042630	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000042635	movq	%rax,%rbx
0000000000042638	testq	%rbx,%rbx
000000000004263b	je	0x000426f5
0000000000042641	movq	0x00066248(%rip),%rdi
0000000000042648	leaq	0x00065c91(%rip),%r15
000000000004264f	movq	%r15,%rsi
0000000000042652	call	*0x00065c88(%rip)
0000000000042658	movq	0x00062411(%rip),%rsi
000000000004265f	movq	0x00041a72(%rip),%r12
0000000000042666	movq	%rax,%rdi
0000000000042669	call	*%r12
000000000004266c	movq	%rax,%r14
000000000004266f	movq	0x00066002(%rip),%rdi
0000000000042676	movq	%r15,%rsi
0000000000042679	call	*0x00065c61(%rip)
000000000004267f	movq	%rax,%r15
0000000000042682	movq	0x000648b7(%rip),%rsi
0000000000042689	movq	0x00066200(%rip),%rdi
0000000000042690	call	*%r12
0000000000042693	leaq	0x000728de(%rip),%rdx
000000000004269a	movq	0x00064c4f(%rip),%rsi
00000000000426a1	movq	%r15,%rdi
00000000000426a4	movq	%rax,%rcx
00000000000426a7	xorl	%r8d,%r8d
00000000000426aa	xorb	%al,%al
00000000000426ac	call	*%r12
00000000000426af	movq	0x00064c42(%rip),%rsi
00000000000426b6	movq	%r14,%rdi
00000000000426b9	movq	%rax,%rdx
00000000000426bc	call	*%r12
00000000000426bf	movq	0x00064c3a(%rip),%rsi
00000000000426c6	movq	%rbx,%rdi
00000000000426c9	movq	%r14,%rdx
00000000000426cc	call	*%r12
00000000000426cf	leaq	0x000728c2(%rip),%rdx
00000000000426d6	movq	0x00064c2b(%rip),%rsi
00000000000426dd	movq	%rbx,%rdi
00000000000426e0	call	*%r12
00000000000426e3	movq	0x00064c56(%rip),%rsi
00000000000426ea	movq	%rbx,%rdi
00000000000426ed	movl	$0x00000001,%edx
00000000000426f2	call	*%r12
00000000000426f5	movq	%rbx,%rax
00000000000426f8	addq	$0x10,%rsp
00000000000426fc	popq	%rbx
00000000000426fd	popq	%r12
00000000000426ff	popq	%r14
0000000000042701	popq	%r15
0000000000042703	popq	%rbp
0000000000042704	ret
-[PBXGDB_Str255CType init]:
0000000000042705	pushq	%rbp
0000000000042706	movq	%rsp,%rbp
0000000000042709	pushq	%r15
000000000004270b	pushq	%r14
000000000004270d	pushq	%r13
000000000004270f	pushq	%r12
0000000000042711	pushq	%rbx
0000000000042712	subq	$0x18,%rsp
0000000000042716	movq	%rdi,0xc8(%rbp)
000000000004271a	movq	0x000668af(%rip),%rax
0000000000042721	movq	%rax,0xd0(%rbp)
0000000000042725	movq	0x00062344(%rip),%rsi
000000000004272c	leaq	0xc8(%rbp),%rdi
0000000000042730	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000042735	movq	%rax,%r12
0000000000042738	testq	%r12,%r12
000000000004273b	je	0x000427e3
0000000000042741	movq	0x00066148(%rip),%rdi
0000000000042748	leaq	0x00065b91(%rip),%r15
000000000004274f	movq	%r15,%rsi
0000000000042752	call	*0x00065b88(%rip)
0000000000042758	movq	0x00062311(%rip),%rsi
000000000004275f	movq	0x00041972(%rip),%r13
0000000000042766	movq	%rax,%rdi
0000000000042769	call	*%r13
000000000004276c	movq	%rax,%r14
000000000004276f	movq	0x00065f02(%rip),%rdi
0000000000042776	movq	%r15,%rsi
0000000000042779	call	*0x00065b61(%rip)
000000000004277f	movq	%rax,%rbx
0000000000042782	movq	0x000647b7(%rip),%rsi
0000000000042789	movq	0x00066100(%rip),%rdi
0000000000042790	call	*%r13
0000000000042793	leaq	0x0007281e(%rip),%rdx
000000000004279a	movq	0x00064b4f(%rip),%rsi
00000000000427a1	movq	%rbx,%rdi
00000000000427a4	movq	%rax,%rcx
00000000000427a7	xorl	%r8d,%r8d
00000000000427aa	xorb	%al,%al
00000000000427ac	call	*%r13
00000000000427af	movq	0x00064b42(%rip),%rsi
00000000000427b6	movq	%r14,%rdi
00000000000427b9	movq	%rax,%rdx
00000000000427bc	call	*%r13
00000000000427bf	movq	0x00064b3a(%rip),%rsi
00000000000427c6	movq	%r12,%rdi
00000000000427c9	movq	%r14,%rdx
00000000000427cc	call	*%r13
00000000000427cf	leaq	0x00072802(%rip),%rdx
00000000000427d6	movq	0x00064b2b(%rip),%rsi
00000000000427dd	movq	%r12,%rdi
00000000000427e0	call	*%r13
00000000000427e3	movq	%r12,%rax
00000000000427e6	addq	$0x18,%rsp
00000000000427ea	popq	%rbx
00000000000427eb	popq	%r12
00000000000427ed	popq	%r13
00000000000427ef	popq	%r14
00000000000427f1	popq	%r15
00000000000427f3	popq	%rbp
00000000000427f4	ret
-[PBXGDB_CharArray256CType init]:
00000000000427f5	pushq	%rbp
00000000000427f6	movq	%rsp,%rbp
00000000000427f9	pushq	%rbx
00000000000427fa	subq	$0x18,%rsp
00000000000427fe	movq	%rdi,0xe8(%rbp)
0000000000042802	movq	0x000667cf(%rip),%rax
0000000000042809	movq	%rax,0xf0(%rbp)
000000000004280d	movq	0x0006225c(%rip),%rsi
0000000000042814	leaq	0xe8(%rbp),%rdi
0000000000042818	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000004281d	movq	%rax,%rbx
0000000000042820	testq	%rbx,%rbx
0000000000042823	je	0x0004283c
0000000000042825	movq	0x00064adc(%rip),%rsi
000000000004282c	leaq	0x000727c5(%rip),%rdx
0000000000042833	movq	%rbx,%rdi
0000000000042836	call	*0x0004189c(%rip)
000000000004283c	movq	%rbx,%rax
000000000004283f	addq	$0x18,%rsp
0000000000042843	popq	%rbx
0000000000042844	popq	%rbp
0000000000042845	ret
-[PBXLSAddressValue initWithLocation:]:
0000000000042846	pushq	%rbp
0000000000042847	movq	%rsp,%rbp
000000000004284a	pushq	%r14
000000000004284c	pushq	%rbx
000000000004284d	subq	$0x10,%rsp
0000000000042851	movq	%rdx,%r14
0000000000042854	movq	%rdi,0xe0(%rbp)
0000000000042858	movq	0x00066781(%rip),%rax
000000000004285f	movq	%rax,0xe8(%rbp)
0000000000042863	movq	0x00062206(%rip),%rsi
000000000004286a	leaq	0xe0(%rbp),%rdi
000000000004286e	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000042873	movq	%rax,%rbx
0000000000042876	movq	0x0006c8e3(%rip),%rax
000000000004287d	movq	%r14,(%rbx,%rax)
0000000000042881	movq	(%rbx,%rax),%rdi
0000000000042885	callq	_xcodePBXLSAddressAddressString
000000000004288a	movq	0x0006c8d7(%rip),%rdx
0000000000042891	movq	%rax,%rdi
0000000000042894	movq	%rbx,%rsi
0000000000042897	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000004289c	movq	%rbx,%rax
000000000004289f	addq	$0x10,%rsp
00000000000428a3	popq	%rbx
00000000000428a4	popq	%r14
00000000000428a6	popq	%rbp
00000000000428a7	ret
-[PBXLSAddressValue compare:]:
00000000000428a8	pushq	%rbp
00000000000428a9	movq	%rsp,%rbp
00000000000428ac	pushq	%rbx
00000000000428ad	pushq	%rax
00000000000428ae	movq	%rdi,%rbx
00000000000428b1	movq	0x000637a0(%rip),%rsi
00000000000428b8	movq	%rdx,%rdi
00000000000428bb	call	*0x00041817(%rip)
00000000000428c1	movq	0x0006c898(%rip),%rcx
00000000000428c8	movq	(%rbx,%rcx),%rdx
00000000000428cc	movq	$0xffffffff,%rcx
00000000000428d3	cmpq	%rax,%rdx
00000000000428d6	jb	0x000428e1
00000000000428d8	cmpq	%rax,%rdx
00000000000428db	setne	%al
00000000000428de	movzbl	%al,%ecx
00000000000428e1	movq	%rcx,%rax
00000000000428e4	addq	$0x08,%rsp
00000000000428e8	popq	%rbx
00000000000428e9	popq	%rbp
00000000000428ea	ret
+[PBXLSAddressRange addressRangeWithString:size:]:
00000000000428eb	pushq	%rbp
00000000000428ec	movq	%rsp,%rbp
00000000000428ef	pushq	%r14
00000000000428f1	pushq	%rbx
00000000000428f2	movq	%rcx,%r14
00000000000428f5	movq	%rdx,%rbx
00000000000428f8	movq	0x00065de1(%rip),%rdi
00000000000428ff	leaq	0x000659da(%rip),%rsi
0000000000042906	call	*0x000659d4(%rip)
000000000004290c	movq	0x00064205(%rip),%rsi
0000000000042913	movq	%rax,%rdi
0000000000042916	movq	%rbx,%rdx
0000000000042919	movq	%r14,%rcx
000000000004291c	popq	%rbx
000000000004291d	popq	%r14
000000000004291f	popq	%rbp
0000000000042920	jmp	*0x000417b2(%rip)
-[PBXLSAddressRange initWithAddressString:size:]:
0000000000042926	pushq	%rbp
0000000000042927	movq	%rsp,%rbp
000000000004292a	pushq	%rbx
000000000004292b	subq	$0x18,%rsp
000000000004292f	movq	%rcx,%rbx
0000000000042932	movq	%rdi,0xe8(%rbp)
0000000000042936	movq	0x000666ab(%rip),%rax
000000000004293d	movq	%rax,0xf0(%rbp)
0000000000042941	movq	0x00063bd8(%rip),%rsi
0000000000042948	leaq	0xe8(%rbp),%rdi
000000000004294c	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000042951	movq	0x0006c818(%rip),%rcx
0000000000042958	movq	%rbx,(%rax,%rcx)
000000000004295c	addq	$0x18,%rsp
0000000000042960	popq	%rbx
0000000000042961	popq	%rbp
0000000000042962	ret
-[PBXLSAddressRange initWithLocation:size:]:
0000000000042963	pushq	%rbp
0000000000042964	movq	%rsp,%rbp
0000000000042967	pushq	%rbx
0000000000042968	subq	$0x18,%rsp
000000000004296c	movq	%rcx,%rbx
000000000004296f	movq	%rdi,0xe8(%rbp)
0000000000042973	movq	0x0006666e(%rip),%rax
000000000004297a	movq	%rax,0xf0(%rbp)
000000000004297e	movq	0x000649c3(%rip),%rsi
0000000000042985	leaq	0xe8(%rbp),%rdi
0000000000042989	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000004298e	movq	0x0006c7db(%rip),%rcx
0000000000042995	movq	%rbx,(%rax,%rcx)
0000000000042999	addq	$0x18,%rsp
000000000004299d	popq	%rbx
000000000004299e	popq	%rbp
000000000004299f	ret
-[PBXLSAddressRange size]:
00000000000429a0	pushq	%rbp
00000000000429a1	movq	%rsp,%rbp
00000000000429a4	movq	0x0006c7c5(%rip),%rax
00000000000429ab	movq	(%rdi,%rax),%rax
00000000000429af	popq	%rbp
00000000000429b0	ret
-[PBXLSAddressRange maxLocation]:
00000000000429b1	pushq	%rbp
00000000000429b2	movq	%rsp,%rbp
00000000000429b5	movq	0x0006c7b4(%rip),%rax
00000000000429bc	movq	(%rdi,%rax),%rax
00000000000429c0	movq	0x0006c799(%rip),%rcx
00000000000429c7	addq	(%rdi,%rcx),%rax
00000000000429cb	popq	%rbp
00000000000429cc	ret
-[PBXLSAddressRange containsAddressLocation:]:
00000000000429cd	pushq	%rbp
00000000000429ce	movq	%rsp,%rbp
00000000000429d1	pushq	%rbx
00000000000429d2	pushq	%rax
00000000000429d3	movq	%rdx,%rbx
00000000000429d6	movq	0x0006c783(%rip),%rax
00000000000429dd	cmpq	%rbx,(%rdi,%rax)
00000000000429e1	ja	0x000429f7
00000000000429e3	movq	0x00064966(%rip),%rsi
00000000000429ea	call	*0x000416e8(%rip)
00000000000429f0	movb	$0x01,%cl
00000000000429f2	cmpq	%rbx,%rax
00000000000429f5	jae	0x000429f9
00000000000429f7	xorb	%cl,%cl
00000000000429f9	movzbl	%cl,%eax
00000000000429fc	addq	$0x08,%rsp
0000000000042a00	popq	%rbx
0000000000042a01	popq	%rbp
0000000000042a02	ret
-[PBXLSAddressRange containsAddress:]:
0000000000042a03	pushq	%rbp
0000000000042a04	movq	%rsp,%rbp
0000000000042a07	pushq	%r14
0000000000042a09	pushq	%rbx
0000000000042a0a	movq	%rdi,%rbx
0000000000042a0d	movq	0x00063644(%rip),%rsi
0000000000042a14	movq	0x000416bd(%rip),%r14
0000000000042a1b	movq	%rdx,%rdi
0000000000042a1e	call	*%r14
0000000000042a21	movq	0x00064930(%rip),%rsi
0000000000042a28	movq	%rbx,%rdi
0000000000042a2b	movq	%rax,%rdx
0000000000042a2e	call	*%r14
0000000000042a31	movsbl	%al,%eax
0000000000042a34	popq	%rbx
0000000000042a35	popq	%r14
0000000000042a37	popq	%rbp
0000000000042a38	ret
-[PBXLSAddressRange containsAddressRange:]:
0000000000042a39	pushq	%rbp
0000000000042a3a	movq	%rsp,%rbp
0000000000042a3d	pushq	%r15
0000000000042a3f	pushq	%r14
0000000000042a41	pushq	%rbx
0000000000042a42	pushq	%rax
0000000000042a43	movq	%rdx,%rbx
0000000000042a46	movq	%rdi,%r14
0000000000042a49	movq	0x00063608(%rip),%rsi
0000000000042a50	movq	0x00041681(%rip),%r15
0000000000042a57	movq	%rbx,%rdi
0000000000042a5a	call	*%r15
0000000000042a5d	movq	0x000648f4(%rip),%rsi
0000000000042a64	movq	%r14,%rdi
0000000000042a67	movq	%rax,%rdx
0000000000042a6a	call	*%r15
0000000000042a6d	xorb	%cl,%cl
0000000000042a6f	testb	%al,%al
0000000000042a71	je	0x00042a9c
0000000000042a73	movq	0x000648d6(%rip),%rsi
0000000000042a7a	movq	0x00041657(%rip),%r15
0000000000042a81	movq	%rbx,%rdi
0000000000042a84	call	*%r15
0000000000042a87	movq	0x000648ca(%rip),%rsi
0000000000042a8e	movq	%r14,%rdi
0000000000042a91	movq	%rax,%rdx
0000000000042a94	call	*%r15
0000000000042a97	testb	%al,%al
0000000000042a99	setne	%cl
0000000000042a9c	movzbl	%cl,%eax
0000000000042a9f	addq	$0x08,%rsp
0000000000042aa3	popq	%rbx
0000000000042aa4	popq	%r14
0000000000042aa6	popq	%r15
0000000000042aa8	popq	%rbp
0000000000042aa9	ret
-[PBXLSDataValue finishedWithDataValue]:
0000000000042aaa	pushq	%rbp
0000000000042aab	movq	%rsp,%rbp
0000000000042aae	popq	%rbp
0000000000042aaf	ret
-[PBXLSDataValue contentDescription]:
0000000000042ab0	pushq	%rbp
0000000000042ab1	movq	%rsp,%rbp
0000000000042ab4	pushq	%r15
0000000000042ab6	pushq	%r14
0000000000042ab8	pushq	%r13
0000000000042aba	pushq	%r12
0000000000042abc	pushq	%rbx
0000000000042abd	subq	$0x18,%rsp
0000000000042ac1	movq	%rdi,%rbx
0000000000042ac4	movq	0x00065985(%rip),%r14
0000000000042acb	movq	%rbx,0xc8(%rbp)
0000000000042acf	movq	0x0006651a(%rip),%rax
0000000000042ad6	movq	%rax,0xd0(%rbp)
0000000000042ada	movq	0x00064767(%rip),%rsi
0000000000042ae1	leaq	0xc8(%rbp),%rdi
0000000000042ae5	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000042aea	movq	%rax,%r15
0000000000042aed	leaq	0x000725a4(%rip),%r13
0000000000042af4	movq	0x0006c6a5(%rip),%rax
0000000000042afb	movq	(%rbx,%rax),%r12
0000000000042aff	testq	%r12,%r12
0000000000042b02	cmoveq	%r13,%r12
0000000000042b06	movq	0x0006c66b(%rip),%rax
0000000000042b0d	movq	(%rbx,%rax),%rdi
0000000000042b11	movq	0x00061ff0(%rip),%rsi
0000000000042b18	call	*0x000415ba(%rip)
0000000000042b1e	testq	%rax,%rax
0000000000042b21	je	0x00042b3e
0000000000042b23	movq	0x0006c64e(%rip),%rax
0000000000042b2a	movq	(%rbx,%rax),%rdi
0000000000042b2e	movq	0x00061fd3(%rip),%rsi
0000000000042b35	call	*0x0004159d(%rip)
0000000000042b3b	movq	%rax,%r13
0000000000042b3e	movq	0x00062033(%rip),%rsi
0000000000042b45	leaq	0x0007252c(%rip),%rdx
0000000000042b4c	movq	%r14,%rdi
0000000000042b4f	movq	%r15,%rcx
0000000000042b52	movq	%r12,%r8
0000000000042b55	movq	%r13,%r9
0000000000042b58	xorb	%al,%al
0000000000042b5a	call	*0x00041578(%rip)
0000000000042b60	addq	$0x18,%rsp
0000000000042b64	popq	%rbx
0000000000042b65	popq	%r12
0000000000042b67	popq	%r13
0000000000042b69	popq	%r14
0000000000042b6b	popq	%r15
0000000000042b6d	popq	%rbp
0000000000042b6e	ret
-[PBXLSDataValue setViewAsType:]:
0000000000042b6f	pushq	%rbp
0000000000042b70	movq	%rsp,%rbp
0000000000042b73	movq	%rdx,%rax
0000000000042b76	movq	%rdi,%rcx
0000000000042b79	movq	0x0006c638(%rip),%rdx
0000000000042b80	movq	%rax,%rdi
0000000000042b83	movq	%rcx,%rsi
0000000000042b86	popq	%rbp
0000000000042b87	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXLSDataValue expandAction]:
0000000000042b8c	pushq	%rbp
0000000000042b8d	movq	%rsp,%rbp
0000000000042b90	movq	0x0006c629(%rip),%rax
0000000000042b97	movq	(%rdi,%rax),%rax
0000000000042b9b	popq	%rbp
0000000000042b9c	ret
-[PBXLSDataValue setTypeExpressionString:]:
0000000000042b9d	pushq	%rbp
0000000000042b9e	movq	%rsp,%rbp
0000000000042ba1	movq	%rdx,%rax
0000000000042ba4	movq	%rdi,%rcx
0000000000042ba7	movq	0x0006c622(%rip),%rdx
0000000000042bae	cmpq	%rax,(%rcx,%rdx)
0000000000042bb2	jne	0x00042bb6
0000000000042bb4	popq	%rbp
0000000000042bb5	ret
0000000000042bb6	addq	%rcx,%rdx
0000000000042bb9	subq	%rcx,%rdx
0000000000042bbc	movq	%rax,%rdi
0000000000042bbf	movq	%rcx,%rsi
0000000000042bc2	popq	%rbp
0000000000042bc3	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXLSDataValue isPointerType]:
0000000000042bc8	pushq	%rbp
0000000000042bc9	movq	%rsp,%rbp
0000000000042bcc	xorl	%eax,%eax
0000000000042bce	popq	%rbp
0000000000042bcf	ret
-[PBXLSDataValue isArrayType]:
0000000000042bd0	pushq	%rbp
0000000000042bd1	movq	%rsp,%rbp
0000000000042bd4	xorl	%eax,%eax
0000000000042bd6	popq	%rbp
0000000000042bd7	ret
-[PBXLSDataValue isSTLVectorType]:
0000000000042bd8	pushq	%rbp
0000000000042bd9	movq	%rsp,%rbp
0000000000042bdc	xorl	%eax,%eax
0000000000042bde	popq	%rbp
0000000000042bdf	ret
-[PBXLSDataValue isNSArrayType]:
0000000000042be0	pushq	%rbp
0000000000042be1	movq	%rsp,%rbp
0000000000042be4	xorl	%eax,%eax
0000000000042be6	popq	%rbp
0000000000042be7	ret
-[PBXLSDataValue hasIntUintVoidPrefix]:
0000000000042be8	pushq	%rbp
0000000000042be9	movq	%rsp,%rbp
0000000000042bec	pushq	%r15
0000000000042bee	pushq	%r14
0000000000042bf0	pushq	%r13
0000000000042bf2	pushq	%r12
0000000000042bf4	pushq	%rbx
0000000000042bf5	subq	$0x000000e8,%rsp
0000000000042bfc	movq	0x0004149d(%rip),%rax
0000000000042c03	movq	(%rax),%rax
0000000000042c06	movq	%rax,0xd0(%rbp)
0000000000042c0a	movq	0x0006c597(%rip),%rax
0000000000042c11	movq	(%rdi,%rax),%rdi
0000000000042c15	movq	0x0006286c(%rip),%rsi
0000000000042c1c	movq	0x000414b5(%rip),%rbx
0000000000042c23	call	*%rbx
0000000000042c25	movq	%rax,0xffffff08(%rbp)
0000000000042c2c	xorps	%xmm0,%xmm0
0000000000042c2f	leaq	0x00071e82(%rip),%rdx
0000000000042c36	leaq	0x0007247b(%rip),%rcx
0000000000042c3d	leaq	0x00072494(%rip),%r8
0000000000042c44	leaq	0x000724ad(%rip),%r9
0000000000042c4b	xorb	%r12b,%r12b
0000000000042c4e	movaps	%xmm0,0xc0(%rbp)
0000000000042c52	movaps	%xmm0,0xb0(%rbp)
0000000000042c56	movaps	%xmm0,0xa0(%rbp)
0000000000042c5a	movaps	%xmm0,0x90(%rbp)
0000000000042c5e	movq	0x00062d73(%rip),%rsi
0000000000042c65	movq	0x000659f4(%rip),%rdi
0000000000042c6c	leaq	0x00071ea5(%rip),%rax
0000000000042c73	movq	%rax,(%rsp)
0000000000042c77	movq	$0x00000000,0x08(%rsp)
0000000000042c80	xorb	%al,%al
0000000000042c82	call	*%rbx
0000000000042c84	movq	%rax,%r15
0000000000042c87	leaq	0x000656f2(%rip),%rsi
0000000000042c8e	leaq	0x90(%rbp),%rdx
0000000000042c92	leaq	0xffffff10(%rbp),%rcx
0000000000042c99	movq	%r15,%rdi
0000000000042c9c	movl	$0x00000010,%r8d
0000000000042ca2	call	*0x000656d8(%rip)
0000000000042ca8	movq	%rax,%rbx
0000000000042cab	testq	%rbx,%rbx
0000000000042cae	je	0x00042d22
0000000000042cb0	movq	0xa0(%rbp),%rax
0000000000042cb4	movq	(%rax),%r13
0000000000042cb7	xorl	%r14d,%r14d
0000000000042cba	movq	0xa0(%rbp),%rax
0000000000042cbe	cmpq	%r13,(%rax)
0000000000042cc1	je	0x00042ccb
0000000000042cc3	movq	%r15,%rdi
0000000000042cc6	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
0000000000042ccb	movq	0x98(%rbp),%rax
0000000000042ccf	movq	(%rax,%r14,8),%rdx
0000000000042cd3	movq	0xffffff08(%rbp),%rdi
0000000000042cda	movq	0x00062607(%rip),%rsi
0000000000042ce1	call	*0x000413f1(%rip)
0000000000042ce7	movb	$0x01,%r12b
0000000000042cea	cmpb	$0x01,%al
0000000000042cec	je	0x00042d22
0000000000042cee	incq	%r14
0000000000042cf1	cmpq	%rbx,%r14
0000000000042cf4	jb	0x00042cba
0000000000042cf6	movq	%r15,%rdi
0000000000042cf9	leaq	0x00065680(%rip),%rsi
0000000000042d00	leaq	0x90(%rbp),%rdx
0000000000042d04	leaq	0xffffff10(%rbp),%rcx
0000000000042d0b	movl	$0x00000010,%r8d
0000000000042d11	call	*0x00065669(%rip)
0000000000042d17	movq	%rax,%rbx
0000000000042d1a	xorb	%r12b,%r12b
0000000000042d1d	testq	%rbx,%rbx
0000000000042d20	jne	0x00042cb7
0000000000042d22	movq	0x00041377(%rip),%rax
0000000000042d29	movq	(%rax),%rax
0000000000042d2c	cmpq	0xd0(%rbp),%rax
0000000000042d30	jne	0x00042d48
0000000000042d32	movzbl	%ah,%eax
0000000000042d36	addq	$0x000000e8,%rsp
0000000000042d3d	popq	%rbx
0000000000042d3e	popq	%r12
0000000000042d40	popq	%r13
0000000000042d42	popq	%r14
0000000000042d44	popq	%r15
0000000000042d46	popq	%rbp
0000000000042d47	ret
0000000000042d48	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
-[PBXLSDataValue canPrintDescription]:
0000000000042d4d	pushq	%rbp
0000000000042d4e	movq	%rsp,%rbp
0000000000042d51	xorl	%eax,%eax
0000000000042d53	popq	%rbp
0000000000042d54	ret
-[PBXLSDataValue canPrintGCInformation]:
0000000000042d55	pushq	%rbp
0000000000042d56	movq	%rsp,%rbp
0000000000042d59	xorl	%eax,%eax
0000000000042d5b	popq	%rbp
0000000000042d5c	ret
-[PBXLSDataValue requestPrintDescriptionInThread:atStackFrame:runAllThreads:]:
0000000000042d5d	pushq	%rbp
0000000000042d5e	movq	%rsp,%rbp
0000000000042d61	popq	%rbp
0000000000042d62	ret
-[PBXLSDataValue requestInfoRootsInThread:atStackFrame:]:
0000000000042d63	pushq	%rbp
0000000000042d64	movq	%rsp,%rbp
0000000000042d67	popq	%rbp
0000000000042d68	ret
-[PBXLSDataValue requestInfoReferencesInThread:atStackFrame:]:
0000000000042d69	pushq	%rbp
0000000000042d6a	movq	%rsp,%rbp
0000000000042d6d	popq	%rbp
0000000000042d6e	ret
-[PBXLSDataValue valueIsEditable]:
0000000000042d6f	pushq	%rbp
0000000000042d70	movq	%rsp,%rbp
0000000000042d73	xorl	%eax,%eax
0000000000042d75	popq	%rbp
0000000000042d76	ret
-[PBXLSDataValue recursiveClearContextFrame]:
0000000000042d77	pushq	%rbp
0000000000042d78	movq	%rsp,%rbp
0000000000042d7b	pushq	%r15
0000000000042d7d	pushq	%r14
0000000000042d7f	pushq	%rbx
0000000000042d80	pushq	%rax
0000000000042d81	movq	%rsi,%r14
0000000000042d84	movq	%rdi,%rbx
0000000000042d87	movq	0x00062532(%rip),%rsi
0000000000042d8e	movq	0x00041343(%rip),%r15
0000000000042d95	xorl	%edx,%edx
0000000000042d97	call	*%r15
0000000000042d9a	movq	0x00062a0f(%rip),%rsi
0000000000042da1	movq	%rbx,%rdi
0000000000042da4	call	*%r15
0000000000042da7	testb	%al,%al
0000000000042da9	jne	0x00042db6
0000000000042dab	addq	$0x08,%rsp
0000000000042daf	popq	%rbx
0000000000042db0	popq	%r14
0000000000042db2	popq	%r15
0000000000042db4	popq	%rbp
0000000000042db5	ret
0000000000042db6	movq	0x000628cb(%rip),%rsi
0000000000042dbd	movq	%rbx,%rdi
0000000000042dc0	call	*0x00041312(%rip)
0000000000042dc6	movq	0x00063013(%rip),%rsi
0000000000042dcd	movq	%rax,%rdi
0000000000042dd0	movq	%r14,%rdx
0000000000042dd3	movq	0x000412fe(%rip),%rax
0000000000042dda	addq	$0x08,%rsp
0000000000042dde	popq	%rbx
0000000000042ddf	popq	%r14
0000000000042de1	popq	%r15
0000000000042de3	popq	%rbp
0000000000042de4	jmp	*%rax
-[PBXLSDataValue addChildDataValues:]:
0000000000042de6	pushq	%rbp
0000000000042de7	movq	%rsp,%rbp
0000000000042dea	pushq	%r15
0000000000042dec	pushq	%r14
0000000000042dee	pushq	%rbx
0000000000042def	subq	$0x18,%rsp
0000000000042df3	movq	%rdx,%r14
0000000000042df6	movq	%rdi,%rbx
0000000000042df9	movq	0x00062cc0(%rip),%rsi
0000000000042e00	movq	0x000412d1(%rip),%r15
0000000000042e07	call	*%r15
0000000000042e0a	movq	%rbx,0xd8(%rbp)
0000000000042e0e	movq	0x000661db(%rip),%rax
0000000000042e15	movq	%rax,0xe0(%rbp)
0000000000042e19	leaq	0xd8(%rbp),%rdi
0000000000042e1d	movq	0x000645a4(%rip),%rsi
0000000000042e24	movq	%r14,%rdx
0000000000042e27	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000042e2c	movq	0x00063065(%rip),%rsi
0000000000042e33	movq	%rbx,%rdi
0000000000042e36	call	*%r15
0000000000042e39	movq	0x00064580(%rip),%rsi
0000000000042e40	movq	%rax,%rdi
0000000000042e43	call	*%r15
0000000000042e46	addq	$0x18,%rsp
0000000000042e4a	popq	%rbx
0000000000042e4b	popq	%r14
0000000000042e4d	popq	%r15
0000000000042e4f	popq	%rbp
0000000000042e50	ret
-[PBXLSDataValue requestGetPathExpressionString]:
0000000000042e51	pushq	%rbp
0000000000042e52	movq	%rsp,%rbp
0000000000042e55	subq	$0x30,%rsp
0000000000042e59	movq	%rdi,0xf8(%rbp)
0000000000042e5d	movq	%rsi,0xf0(%rbp)
0000000000042e61	leaq	0x000654c8(%rip),%rsi
0000000000042e68	call	*0x000654c2(%rip)
0000000000042e6e	movq	%rax,%rdi
0000000000042e71	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000042e76	leaq	0xf8(%rbp),%rdi
0000000000042e7a	leaq	0xf0(%rbp),%rsi
0000000000042e7e	leaq	0x0001f621(%rip),%rcx
0000000000042e85	leaq	0x0006dd6c(%rip),%r9
0000000000042e8c	leaq	0x0001f5e2(%rip),%rdx
0000000000042e93	leaq	0x0006c99e(%rip),%r8
0000000000042e9a	leaq	0x0001a431(%rip),%r10
0000000000042ea1	movq	%r10,0x18(%rsp)
0000000000042ea6	movq	%r8,0x10(%rsp)
0000000000042eab	movq	%rax,0x08(%rsp)
0000000000042eb0	movq	%rdx,(%rsp)
0000000000042eb4	movl	$0x000001df,%r8d
0000000000042eba	xorb	%al,%al
0000000000042ebc	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000042ec1	addq	$0x30,%rsp
0000000000042ec5	popq	%rbp
0000000000042ec6	ret
-[PBXLSDataValue canGetPathExpressionString]:
0000000000042ec7	pushq	%rbp
0000000000042ec8	movq	%rsp,%rbp
0000000000042ecb	xorl	%eax,%eax
0000000000042ecd	popq	%rbp
0000000000042ece	ret
-[PBXLSDataValue childrenCount]:
0000000000042ecf	pushq	%rbp
0000000000042ed0	movq	%rsp,%rbp
0000000000042ed3	leaq	0x0006c42e(%rip),%rax
0000000000042eda	movq	(%rax),%rax
0000000000042edd	movq	(%rdi,%rax),%rdi
0000000000042ee1	movq	0x00065428(%rip),%rax
0000000000042ee8	leaq	0x00065421(%rip),%rsi
0000000000042eef	popq	%rbp
0000000000042ef0	jmp	*%rax
-[PBXLSDataValue canSetValueFormat]:
0000000000042ef2	pushq	%rbp
0000000000042ef3	movq	%rsp,%rbp
0000000000042ef6	xorl	%eax,%eax
0000000000042ef8	popq	%rbp
0000000000042ef9	ret
-[PBXLSDataValue requestSetValueFormat:]:
0000000000042efa	pushq	%rbp
0000000000042efb	movq	%rsp,%rbp
0000000000042efe	movq	0x0006c31b(%rip),%rax
0000000000042f05	movl	%edx,(%rdi,%rax)
0000000000042f08	popq	%rbp
0000000000042f09	ret
-[PBXLSDataValue requestSetStringValue:]:
0000000000042f0a	pushq	%rbp
0000000000042f0b	movq	%rsp,%rbp
0000000000042f0e	subq	$0x30,%rsp
0000000000042f12	movq	%rdi,0xf8(%rbp)
0000000000042f16	movq	%rsi,0xf0(%rbp)
0000000000042f1a	leaq	0x0006540f(%rip),%rsi
0000000000042f21	call	*0x00065409(%rip)
0000000000042f27	movq	%rax,%rdi
0000000000042f2a	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000042f2f	leaq	0xf8(%rbp),%rdi
0000000000042f33	leaq	0xf0(%rbp),%rsi
0000000000042f37	leaq	0x0001f568(%rip),%rcx
0000000000042f3e	leaq	0x0006dcb3(%rip),%r9
0000000000042f45	leaq	0x0001f5c2(%rip),%rdx
0000000000042f4c	leaq	0x0006c8e5(%rip),%r8
0000000000042f53	leaq	0x0001a378(%rip),%r10
0000000000042f5a	movq	%r10,0x18(%rsp)
0000000000042f5f	movq	%r8,0x10(%rsp)
0000000000042f64	movq	%rax,0x08(%rsp)
0000000000042f69	movq	%rdx,(%rsp)
0000000000042f6d	movl	$0x00000227,%r8d
0000000000042f73	xorb	%al,%al
0000000000042f75	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000042f7a	addq	$0x30,%rsp
0000000000042f7e	popq	%rbp
0000000000042f7f	ret
-[PBXLSDataValue requestReleaseChildren]:
0000000000042f80	pushq	%rbp
0000000000042f81	movq	%rsp,%rbp
0000000000042f84	pushq	%rbx
0000000000042f85	pushq	%rax
0000000000042f86	movq	%rdi,%rbx
0000000000042f89	leaq	0x0006c378(%rip),%rax
0000000000042f90	movq	(%rax),%rax
0000000000042f93	movq	(%rbx,%rax),%rdi
0000000000042f97	movq	0x000620b2(%rip),%rsi
0000000000042f9e	call	*0x00041134(%rip)
0000000000042fa4	movq	0x000625ed(%rip),%rsi
0000000000042fab	movq	%rbx,%rdi
0000000000042fae	xorl	%edx,%edx
0000000000042fb0	movq	0x00041121(%rip),%rax
0000000000042fb7	addq	$0x08,%rsp
0000000000042fbb	popq	%rbx
0000000000042fbc	popq	%rbp
0000000000042fbd	jmp	*%rax
-[PBXLSDataValue didSetNewValue]:
0000000000042fbf	pushq	%rbp
0000000000042fc0	movq	%rsp,%rbp
0000000000042fc3	pushq	%rbx
0000000000042fc4	pushq	%rax
0000000000042fc5	movq	%rdi,%rbx
0000000000042fc8	movq	0x000625a1(%rip),%rsi
0000000000042fcf	call	*0x00041103(%rip)
0000000000042fd5	movq	0x000643fc(%rip),%rsi
0000000000042fdc	movq	%rax,%rdi
0000000000042fdf	movl	$0x00000001,%edx
0000000000042fe4	call	*0x000410ee(%rip)
0000000000042fea	movq	0x0006257f(%rip),%rsi
0000000000042ff1	movq	%rbx,%rdi
0000000000042ff4	call	*0x000410de(%rip)
0000000000042ffa	movq	0x00062aff(%rip),%rsi
0000000000043001	movq	%rax,%rdi
0000000000043004	movq	0x000410cd(%rip),%rax
000000000004300b	addq	$0x08,%rsp
000000000004300f	popq	%rbx
0000000000043010	popq	%rbp
0000000000043011	jmp	*%rax
-[PBXLSDataValue didReleaseChildren]:
0000000000043013	pushq	%rbp
0000000000043014	movq	%rsp,%rbp
0000000000043017	movq	0x000643c2(%rip),%rsi
000000000004301e	popq	%rbp
000000000004301f	jmp	*0x000410b3(%rip)
-[PBXLSDataValue isBeingWatched]:
0000000000043025	pushq	%rbp
0000000000043026	movq	%rsp,%rbp
0000000000043029	movq	0x0006c208(%rip),%rax
0000000000043030	movsbl	(%rdi,%rax),%eax
0000000000043034	popq	%rbp
0000000000043035	ret
-[PBXLSDataValue setIsBeingWatched:]:
0000000000043036	pushq	%rbp
0000000000043037	movq	%rsp,%rbp
000000000004303a	movq	0x0006c1f7(%rip),%rax
0000000000043041	movb	%dl,(%rdi,%rax)
0000000000043044	popq	%rbp
0000000000043045	ret
-[PBXLSDataValue setContainerValidityStatus:]:
0000000000043046	pushq	%rbp
0000000000043047	movq	%rsp,%rbp
000000000004304a	movq	0x0006c1ef(%rip),%rax
0000000000043051	movl	%edx,(%rdi,%rax)
0000000000043054	popq	%rbp
0000000000043055	ret
-[PBXLSDataValue containerValidityStatus]:
0000000000043056	pushq	%rbp
0000000000043057	movq	%rsp,%rbp
000000000004305a	movq	0x0006c1df(%rip),%rax
0000000000043061	movl	(%rdi,%rax),%eax
0000000000043064	popq	%rbp
0000000000043065	ret
-[PBXLSDataValue containerChangeStatus]:
0000000000043066	pushq	%rbp
0000000000043067	movq	%rsp,%rbp
000000000004306a	movq	0x0006c1d7(%rip),%rax
0000000000043071	movl	(%rdi,%rax),%eax
0000000000043074	popq	%rbp
0000000000043075	ret
-[PBXLSDataValue containerOffsetIndex]:
0000000000043076	pushq	%rbp
0000000000043077	movq	%rsp,%rbp
000000000004307a	movq	0x0006c1cf(%rip),%rax
0000000000043081	movq	(%rdi,%rax),%rax
0000000000043085	popq	%rbp
0000000000043086	ret
-[PBXLSDataValue containerCurrentSize]:
0000000000043087	pushq	%rbp
0000000000043088	movq	%rsp,%rbp
000000000004308b	movq	0x0006c0fe(%rip),%rax
0000000000043092	movq	(%rdi,%rax),%rax
0000000000043096	popq	%rbp
0000000000043097	ret
-[PBXLSDataValue setContainerCurrentSize:]:
0000000000043098	pushq	%rbp
0000000000043099	movq	%rsp,%rbp
000000000004309c	movq	0x0006c0ed(%rip),%rax
00000000000430a3	cmpq	$0xff,(%rdi,%rax)
00000000000430a8	jne	0x000430bc
00000000000430aa	movq	0x0006c0d7(%rip),%rax
00000000000430b1	movq	%rdx,(%rdi,%rax)
00000000000430b5	movq	0x0006c0d4(%rip),%rax
00000000000430bc	movq	%rdx,(%rdi,%rax)
00000000000430c0	popq	%rbp
00000000000430c1	ret
-[PBXLSDataValue setContainerOldSize]:
00000000000430c2	pushq	%rbp
00000000000430c3	movq	%rsp,%rbp
00000000000430c6	movq	0x0006c0c3(%rip),%rax
00000000000430cd	movq	(%rdi,%rax),%rax
00000000000430d1	movq	0x0006c0b0(%rip),%rcx
00000000000430d8	movq	%rax,(%rdi,%rcx)
00000000000430dc	popq	%rbp
00000000000430dd	ret
-[PBXLSDataValue containerOldSize]:
00000000000430de	pushq	%rbp
00000000000430df	movq	%rsp,%rbp
00000000000430e2	movq	0x0006c09f(%rip),%rax
00000000000430e9	movq	(%rdi,%rax),%rcx
00000000000430ed	testq	%rcx,%rcx
00000000000430f0	movl	$0x00000000,%eax
00000000000430f5	cmovnsq	%rcx,%rax
00000000000430f9	popq	%rbp
00000000000430fa	ret
-[PBXLSDataValue containerStride]:
00000000000430fb	pushq	%rbp
00000000000430fc	movq	%rsp,%rbp
00000000000430ff	movq	0x0006c07a(%rip),%rax
0000000000043106	movl	(%rdi,%rax),%eax
0000000000043109	popq	%rbp
000000000004310a	ret
-[PBXLSDataValue containerSizeVarObj]:
000000000004310b	pushq	%rbp
000000000004310c	movq	%rsp,%rbp
000000000004310f	movq	0x0006c142(%rip),%rax
0000000000043116	movq	(%rdi,%rax),%rax
000000000004311a	popq	%rbp
000000000004311b	ret
-[PBXLSDataValue setContainerSizeVarObj:]:
000000000004311c	pushq	%rbp
000000000004311d	movq	%rsp,%rbp
0000000000043120	movq	%rdx,%rax
0000000000043123	movq	%rdi,%rcx
0000000000043126	movq	0x0006c12b(%rip),%rdx
000000000004312d	cmpq	%rax,(%rcx,%rdx)
0000000000043131	jne	0x00043135
0000000000043133	popq	%rbp
0000000000043134	ret
0000000000043135	addq	%rcx,%rdx
0000000000043138	subq	%rcx,%rdx
000000000004313b	movq	%rax,%rdi
000000000004313e	movq	%rcx,%rsi
0000000000043141	popq	%rbp
0000000000043142	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXLSDataValue containerDisplayRange]:
0000000000043147	pushq	%rbp
0000000000043148	movq	%rsp,%rbp
000000000004314b	movq	0x0006c10e(%rip),%rcx
0000000000043152	movq	(%rdi,%rcx),%rax
0000000000043156	movq	0x08(%rdi,%rcx),%rdx
000000000004315b	popq	%rbp
000000000004315c	ret
-[PBXLSDataValue setContainerDisplayRange:]:
000000000004315d	pushq	%rbp
000000000004315e	movq	%rsp,%rbp
0000000000043161	movq	0x0006c0f8(%rip),%rax
0000000000043168	movq	%rdx,(%rdi,%rax)
000000000004316c	movq	%rcx,0x08(%rdi,%rax)
0000000000043171	popq	%rbp
0000000000043172	ret
-[PBXLSDataValue containerElementsVarObjs]:
0000000000043173	pushq	%rbp
0000000000043174	movq	%rsp,%rbp
0000000000043177	movq	0x0006c0ea(%rip),%rax
000000000004317e	movq	(%rdi,%rax),%rax
0000000000043182	popq	%rbp
0000000000043183	ret
-[PBXLSDataValue setContainerDisplayStyle:]:
0000000000043184	pushq	%rbp
0000000000043185	movq	%rsp,%rbp
0000000000043188	pushq	%r14
000000000004318a	pushq	%rbx
000000000004318b	movl	%edx,%ebx
000000000004318d	movq	%rdi,%r14
0000000000043190	movq	0x00062099(%rip),%rsi
0000000000043197	call	*0x00040f3b(%rip)
000000000004319d	movq	0x0006bff4(%rip),%rax
00000000000431a4	movl	%ebx,(%r14,%rax)
00000000000431a8	popq	%rbx
00000000000431a9	popq	%r14
00000000000431ab	popq	%rbp
00000000000431ac	ret
-[PBXLSDataValue containerDisplayStyle]:
00000000000431ad	pushq	%rbp
00000000000431ae	movq	%rsp,%rbp
00000000000431b1	movq	0x0006bfe0(%rip),%rax
00000000000431b8	movl	(%rdi,%rax),%eax
00000000000431bb	popq	%rbp
00000000000431bc	ret
-[PBXLSDataValue hasNewChildren]:
00000000000431bd	pushq	%rbp
00000000000431be	movq	%rsp,%rbp
00000000000431c1	movq	0x0006c0a8(%rip),%rax
00000000000431c8	movsbl	(%rdi,%rax),%eax
00000000000431cc	popq	%rbp
00000000000431cd	ret
-[PBXLSDataValue setHasNewChildren:]:
00000000000431ce	pushq	%rbp
00000000000431cf	movq	%rsp,%rbp
00000000000431d2	movq	0x0006c097(%rip),%rax
00000000000431d9	movb	%dl,(%rdi,%rax)
00000000000431dc	popq	%rbp
00000000000431dd	ret
-[PBXLSDataValue replaceChildAtIndex:withChild:]:
00000000000431de	pushq	%rbp
00000000000431df	movq	%rsp,%rbp
00000000000431e2	pushq	%r15
00000000000431e4	pushq	%r14
00000000000431e6	pushq	%r12
00000000000431e8	pushq	%rbx
00000000000431e9	subq	$0x50,%rsp
00000000000431ed	movq	%rcx,%r15
00000000000431f0	movq	%rdx,%r14
00000000000431f3	movq	%rdi,0xd8(%rbp)
00000000000431f7	movq	%rsi,0xd0(%rbp)
00000000000431fb	testq	%r15,%r15
00000000000431fe	jne	0x00043262
0000000000043200	movq	0x00065441(%rip),%rdi
0000000000043207	leaq	0x00065122(%rip),%rsi
000000000004320e	call	*0x0006511c(%rip)
0000000000043214	movq	%rax,%rdi
0000000000043217	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000004321c	leaq	0xd8(%rbp),%rdi
0000000000043220	leaq	0xd0(%rbp),%rsi
0000000000043224	leaq	0x0001f30c(%rip),%rdx
000000000004322b	leaq	0x0001f274(%rip),%rcx
0000000000043232	leaq	0x0006c77f(%rip),%r9
0000000000043239	leaq	0x0001f328(%rip),%r8
0000000000043240	leaq	0x0001f32a(%rip),%rbx
0000000000043247	movq	%rbx,0x18(%rsp)
000000000004324c	leaq	0x0006c5e5(%rip),%rbx
0000000000043253	movq	%rbx,0x10(%rsp)
0000000000043258	movq	%rax,0x08(%rsp)
000000000004325d	jmp	0x00043306
0000000000043262	movq	0x000653df(%rip),%rdi
0000000000043269	leaq	0x000650c0(%rip),%rsi
0000000000043270	call	*0x000650ba(%rip)
0000000000043276	leaq	0x000650c3(%rip),%rsi
000000000004327d	movq	%r15,%rdi
0000000000043280	movq	%rax,%rdx
0000000000043283	call	*0x000650b7(%rip)
0000000000043289	testb	%al,%al
000000000004328b	jne	0x00043317
0000000000043291	movq	0x000653b0(%rip),%rdi
0000000000043298	leaq	0x00065091(%rip),%rsi
000000000004329f	call	*0x0006508b(%rip)
00000000000432a5	movq	%rax,%rdi
00000000000432a8	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
00000000000432ad	movq	%rax,%r12
00000000000432b0	movq	0x000619a9(%rip),%rsi
00000000000432b7	movq	%r15,%rdi
00000000000432ba	call	*0x00040e18(%rip)
00000000000432c0	leaq	0x0001f2bc(%rip),%r8
00000000000432c7	leaq	0xd8(%rbp),%rdi
00000000000432cb	leaq	0xd0(%rbp),%rsi
00000000000432cf	leaq	0x0001f261(%rip),%rdx
00000000000432d6	leaq	0x0001f1c9(%rip),%rcx
00000000000432dd	leaq	0x0006c6f4(%rip),%r9
00000000000432e4	movq	%r8,0x20(%rsp)
00000000000432e9	leaq	0x0006c548(%rip),%rbx
00000000000432f0	movq	%rbx,0x18(%rsp)
00000000000432f5	leaq	0x0001f26c(%rip),%r8
00000000000432fc	movq	%rax,0x10(%rsp)
0000000000043301	movq	%r12,0x08(%rsp)
0000000000043306	movq	%r8,(%rsp)
000000000004330a	movl	$0x000002db,%r8d
0000000000043310	xorb	%al,%al
0000000000043312	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000043317	movq	0x0006236a(%rip),%rsi
000000000004331e	movq	0xd8(%rbp),%rdi
0000000000043322	movq	0x00040daf(%rip),%r12
0000000000043329	call	*%r12
000000000004332c	leaq	0x00064fed(%rip),%rsi
0000000000043333	movq	%rax,%rdi
0000000000043336	movq	%r14,%rdx
0000000000043339	call	*0x00064fe1(%rip)
000000000004333f	movq	%rax,%rbx
0000000000043342	movq	0xd8(%rbp),%rax
0000000000043346	movq	%rax,0xc0(%rbp)
000000000004334a	leaq	0xc0(%rbp),%rdi
000000000004334e	movq	0x00065c9b(%rip),%rax
0000000000043355	movq	%rax,0xc8(%rbp)
0000000000043359	movq	0x000623d0(%rip),%rsi
0000000000043360	movq	%r14,%rdx
0000000000043363	movq	%r15,%rcx
0000000000043366	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000004336b	movq	0x00062b26(%rip),%rsi
0000000000043372	movq	0xd8(%rbp),%rdi
0000000000043376	call	*%r12
0000000000043379	movq	0x00064068(%rip),%rsi
0000000000043380	movq	%rax,%rdi
0000000000043383	movq	%r14,%rdx
0000000000043386	movq	%rbx,%rcx
0000000000043389	movq	%r15,%r8
000000000004338c	call	*%r12
000000000004338f	addq	$0x50,%rsp
0000000000043393	popq	%rbx
0000000000043394	popq	%r12
0000000000043396	popq	%r14
0000000000043398	popq	%r15
000000000004339a	popq	%rbp
000000000004339b	ret
-[PBXLSDataValue addChild:]:
000000000004339c	pushq	%rbp
000000000004339d	movq	%rsp,%rbp
00000000000433a0	pushq	%r14
00000000000433a2	pushq	%rbx
00000000000433a3	subq	$0x10,%rsp
00000000000433a7	movq	%rdi,%rbx
00000000000433aa	movq	%rbx,0xe0(%rbp)
00000000000433ae	movq	0x00065c3b(%rip),%rax
00000000000433b5	movq	%rax,0xe8(%rbp)
00000000000433b9	movq	0x000635b8(%rip),%rsi
00000000000433c0	leaq	0xe0(%rbp),%rdi
00000000000433c4	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000433c9	movq	0x00040d08(%rip),%r14
00000000000433d0	movq	0x00062ac1(%rip),%rsi
00000000000433d7	movq	%rbx,%rdi
00000000000433da	call	*%r14
00000000000433dd	movq	0x00063fdc(%rip),%rsi
00000000000433e4	movq	%rax,%rdi
00000000000433e7	call	*%r14
00000000000433ea	addq	$0x10,%rsp
00000000000433ee	popq	%rbx
00000000000433ef	popq	%r14
00000000000433f1	popq	%rbp
00000000000433f2	ret
-[PBXLSDataValue addChildren:]:
00000000000433f3	pushq	%rbp
00000000000433f4	movq	%rsp,%rbp
00000000000433f7	pushq	%r14
00000000000433f9	pushq	%rbx
00000000000433fa	subq	$0x10,%rsp
00000000000433fe	movq	%rdi,%rbx
0000000000043401	movq	%rbx,0xe0(%rbp)
0000000000043405	movq	0x00065be4(%rip),%rax
000000000004340c	movq	%rax,0xe8(%rbp)
0000000000043410	movq	0x00063fb1(%rip),%rsi
0000000000043417	leaq	0xe0(%rbp),%rdi
000000000004341b	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000043420	movq	0x00040cb1(%rip),%r14
0000000000043427	movq	0x00062a6a(%rip),%rsi
000000000004342e	movq	%rbx,%rdi
0000000000043431	call	*%r14
0000000000043434	movq	0x00063f85(%rip),%rsi
000000000004343b	movq	%rax,%rdi
000000000004343e	call	*%r14
0000000000043441	addq	$0x10,%rsp
0000000000043445	popq	%rbx
0000000000043446	popq	%r14
0000000000043448	popq	%rbp
0000000000043449	ret
-[PBXLSDataValue insertChild:atIndex:]:
000000000004344a	pushq	%rbp
000000000004344b	movq	%rsp,%rbp
000000000004344e	pushq	%r14
0000000000043450	pushq	%rbx
0000000000043451	subq	$0x10,%rsp
0000000000043455	movq	%rdi,%rbx
0000000000043458	movq	%rbx,0xe0(%rbp)
000000000004345c	movq	0x00065b8d(%rip),%rax
0000000000043463	movq	%rax,0xe8(%rbp)
0000000000043467	movq	0x00063f82(%rip),%rsi
000000000004346e	leaq	0xe0(%rbp),%rdi
0000000000043472	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000043477	movq	0x00040c5a(%rip),%r14
000000000004347e	movq	0x00062a13(%rip),%rsi
0000000000043485	movq	%rbx,%rdi
0000000000043488	call	*%r14
000000000004348b	movq	0x00063f2e(%rip),%rsi
0000000000043492	movq	%rax,%rdi
0000000000043495	call	*%r14
0000000000043498	addq	$0x10,%rsp
000000000004349c	popq	%rbx
000000000004349d	popq	%r14
000000000004349f	popq	%rbp
00000000000434a0	ret
-[PBXLSDataValue removeChild:]:
00000000000434a1	pushq	%rbp
00000000000434a2	movq	%rsp,%rbp
00000000000434a5	pushq	%r14
00000000000434a7	pushq	%rbx
00000000000434a8	subq	$0x10,%rsp
00000000000434ac	movq	%rdi,%rbx
00000000000434af	movq	%rbx,0xe0(%rbp)
00000000000434b3	movq	0x00065b36(%rip),%rax
00000000000434ba	movq	%rax,0xe8(%rbp)
00000000000434be	movq	0x00062063(%rip),%rsi
00000000000434c5	leaq	0xe0(%rbp),%rdi
00000000000434c9	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000434ce	movq	0x00040c03(%rip),%r14
00000000000434d5	movq	0x000629bc(%rip),%rsi
00000000000434dc	movq	%rbx,%rdi
00000000000434df	call	*%r14
00000000000434e2	movq	0x00063f0f(%rip),%rsi
00000000000434e9	movq	%rax,%rdi
00000000000434ec	call	*%r14
00000000000434ef	addq	$0x10,%rsp
00000000000434f3	popq	%rbx
00000000000434f4	popq	%r14
00000000000434f6	popq	%rbp
00000000000434f7	ret
-[PBXLSDataValue removeChildAtIndex:]:
00000000000434f8	pushq	%rbp
00000000000434f9	movq	%rsp,%rbp
00000000000434fc	pushq	%r14
00000000000434fe	pushq	%rbx
00000000000434ff	subq	$0x10,%rsp
0000000000043503	movq	%rdi,%rbx
0000000000043506	movq	%rbx,0xe0(%rbp)
000000000004350a	movq	0x00065adf(%rip),%rax
0000000000043511	movq	%rax,0xe8(%rbp)
0000000000043515	movq	0x00063ee4(%rip),%rsi
000000000004351c	leaq	0xe0(%rbp),%rdi
0000000000043520	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000043525	movq	0x00040bac(%rip),%r14
000000000004352c	movq	0x00062965(%rip),%rsi
0000000000043533	movq	%rbx,%rdi
0000000000043536	call	*%r14
0000000000043539	movq	0x00063eb8(%rip),%rsi
0000000000043540	movq	%rax,%rdi
0000000000043543	call	*%r14
0000000000043546	addq	$0x10,%rsp
000000000004354a	popq	%rbx
000000000004354b	popq	%r14
000000000004354d	popq	%rbp
000000000004354e	ret
-[PBXLSDataValue removeChildrenInRange:]:
000000000004354f	pushq	%rbp
0000000000043550	movq	%rsp,%rbp
0000000000043553	pushq	%r14
0000000000043555	pushq	%rbx
0000000000043556	subq	$0x10,%rsp
000000000004355a	movq	%rdi,%rbx
000000000004355d	movq	%rbx,0xe0(%rbp)
0000000000043561	movq	0x00065a88(%rip),%rax
0000000000043568	movq	%rax,0xe8(%rbp)
000000000004356c	movq	0x0006211d(%rip),%rsi
0000000000043573	leaq	0xe0(%rbp),%rdi
0000000000043577	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000004357c	movq	0x00040b55(%rip),%r14
0000000000043583	movq	0x0006290e(%rip),%rsi
000000000004358a	movq	%rbx,%rdi
000000000004358d	call	*%r14
0000000000043590	movq	0x00063e61(%rip),%rsi
0000000000043597	movq	%rax,%rdi
000000000004359a	call	*%r14
000000000004359d	addq	$0x10,%rsp
00000000000435a1	popq	%rbx
00000000000435a2	popq	%r14
00000000000435a4	popq	%rbp
00000000000435a5	ret
-[PBXLSDataValue removeAllChildren]:
00000000000435a6	pushq	%rbp
00000000000435a7	movq	%rsp,%rbp
00000000000435aa	pushq	%r14
00000000000435ac	pushq	%rbx
00000000000435ad	subq	$0x10,%rsp
00000000000435b1	movq	%rdi,%rbx
00000000000435b4	movq	%rbx,0xe0(%rbp)
00000000000435b8	movq	0x00065a31(%rip),%rax
00000000000435bf	movq	%rax,0xe8(%rbp)
00000000000435c3	movq	0x00061c66(%rip),%rsi
00000000000435ca	leaq	0xe0(%rbp),%rdi
00000000000435ce	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000435d3	movq	0x00040afe(%rip),%r14
00000000000435da	movq	0x000628b7(%rip),%rsi
00000000000435e1	movq	%rbx,%rdi
00000000000435e4	call	*%r14
00000000000435e7	movq	0x00063e0a(%rip),%rsi
00000000000435ee	movq	%rax,%rdi
00000000000435f1	call	*%r14
00000000000435f4	addq	$0x10,%rsp
00000000000435f8	popq	%rbx
00000000000435f9	popq	%r14
00000000000435fb	popq	%rbp
00000000000435fc	ret
-[PBXLSDataValue setIsCPURegister:]:
00000000000435fd	pushq	%rbp
00000000000435fe	movq	%rsp,%rbp
0000000000043601	movq	0x0006bc70(%rip),%rax
0000000000043608	movb	%dl,(%rdi,%rax)
000000000004360b	popq	%rbp
000000000004360c	ret
-[PBXLSDataValue containsFunctionExpressions]:
000000000004360d	pushq	%rbp
000000000004360e	movq	%rsp,%rbp
0000000000043611	movq	0x0006bc70(%rip),%rax
0000000000043618	movb	(%rdi,%rax),%al
000000000004361b	movsbl	%al,%eax
000000000004361e	popq	%rbp
000000000004361f	ret
-[PBXLSDVValue dealloc]:
0000000000043620	pushq	%rbp
0000000000043621	movq	%rsp,%rbp
0000000000043624	pushq	%rbx
0000000000043625	pushq	%rax
0000000000043626	movq	%rdi,%rbx
0000000000043629	movq	0x00061f90(%rip),%rsi
0000000000043630	xorl	%edx,%edx
0000000000043632	call	*0x00040aa0(%rip)
0000000000043638	movq	0x00063961(%rip),%rsi
000000000004363f	movq	%rbx,%rdi
0000000000043642	xorl	%edx,%edx
0000000000043644	call	*0x00040a8e(%rip)
000000000004364a	movq	0x00063d0f(%rip),%rsi
0000000000043651	movq	%rbx,%rdi
0000000000043654	xorl	%edx,%edx
0000000000043656	movq	0x00040a7b(%rip),%rax
000000000004365d	addq	$0x08,%rsp
0000000000043661	popq	%rbx
0000000000043662	popq	%rbp
0000000000043663	jmp	*%rax
-[PBXLSDVValue operationNumber]:
0000000000043665	pushq	%rbp
0000000000043666	movq	%rsp,%rbp
0000000000043669	movq	0x0006bc30(%rip),%rax
0000000000043670	movq	(%rdi,%rax),%rax
0000000000043674	popq	%rbp
0000000000043675	ret
0000000000043676	nop
0000000000043677	nop
+[PBXLSDynamicLinkerImage _myBundle]:
0000000000043678	pushq	%rbp
0000000000043679	movq	%rsp,%rbp
000000000004367c	xorl	%eax,%eax
000000000004367e	popq	%rbp
000000000004367f	ret
+[PBXLSDynamicLinkerImage stringForSharedLibraryStatus:]:
0000000000043680	pushq	%rbp
0000000000043681	movq	%rsp,%rbp
0000000000043684	pushq	%rbx
0000000000043685	pushq	%rax
0000000000043686	movl	%edx,%ebx
0000000000043688	movq	0x00063d79(%rip),%rsi
000000000004368f	call	*0x00040a43(%rip)
0000000000043695	movq	%rax,%rdi
0000000000043698	cmpl	$0x03,%ebx
000000000004369b	ja	0x00043707
000000000004369d	movl	%ebx,%eax
000000000004369f	leaq	0x00000072(%rip),%rcx
00000000000436a6	movslq	(%rcx,%rax,4),%rax
00000000000436aa	addq	%rcx,%rax
00000000000436ad	jmp	*%rax
00000000000436af	movq	0x00063d5a(%rip),%rsi
00000000000436b6	leaq	0x00071a7b(%rip),%rdx
00000000000436bd	leaq	0x0006c274(%rip),%rcx
00000000000436c4	leaq	0x00071a8d(%rip),%r8
00000000000436cb	addq	$0x08,%rsp
00000000000436cf	popq	%rbx
00000000000436d0	popq	%rbp
00000000000436d1	jmp	*0x00040a01(%rip)
00000000000436d7	movq	0x00063d32(%rip),%rsi
00000000000436de	leaq	0x00071a93(%rip),%rdx
00000000000436e5	jmp	0x000436bd
00000000000436e7	movq	0x00063d22(%rip),%rsi
00000000000436ee	leaq	0x00071aa3(%rip),%rdx
00000000000436f5	jmp	0x000436bd
00000000000436f7	movq	0x00063d12(%rip),%rsi
00000000000436fe	leaq	0x00071ab3(%rip),%rdx
0000000000043705	jmp	0x000436bd
0000000000043707	movq	0x00063d02(%rip),%rsi
000000000004370e	leaq	0x00071a03(%rip),%rdx
0000000000043715	jmp	0x000436bd
0000000000043717	nop
0000000000043718	xchgl	%edi,%eax
0000000000043719	.byte 0xff, 0xff #bad opcode
000000000004371b	.byte 0xff, 0xbf #bad opcode
000000000004371d	.byte 0xff, 0xff #bad opcode
000000000004371f	decl	%edi
0000000000043721	.byte 0xff, 0xff #bad opcode
0000000000043723	lcalll	*%edi
0000000000043725	.byte 0xff, 0xff #bad opcode
0000000000043727	call	*0x48(%rbp)
000000000004372a	movl	%esp,%ebp
000000000004372c	pushq	%r15
000000000004372e	pushq	%r14
0000000000043730	pushq	%r13
0000000000043732	pushq	%r12
0000000000043734	pushq	%rbx
0000000000043735	pushq	%rax
0000000000043736	movq	0x00064d23(%rip),%r14
000000000004373d	movq	0x00063cd4(%rip),%rsi
0000000000043744	movq	0x000652a5(%rip),%rdi
000000000004374b	movq	0x00040986(%rip),%r13
0000000000043752	xorl	%edx,%edx
0000000000043754	call	*%r13
0000000000043757	movq	%rax,%r15
000000000004375a	movq	0x00063cb7(%rip),%rsi
0000000000043761	movq	0x00065288(%rip),%rdi
0000000000043768	movl	$0x00000001,%edx
000000000004376d	call	*%r13
0000000000043770	movq	%rax,%r12
0000000000043773	movq	0x00063c9e(%rip),%rsi
000000000004377a	movq	0x0006526f(%rip),%rdi
0000000000043781	movl	$0x00000002,%edx
0000000000043786	call	*%r13
0000000000043789	movq	%rax,%rbx
000000000004378c	movq	0x00063c85(%rip),%rsi
0000000000043793	movq	0x00065256(%rip),%rdi
000000000004379a	movl	$0x00000003,%edx
000000000004379f	call	*%r13
00000000000437a2	movq	0x0006222f(%rip),%rsi
00000000000437a9	movq	$0x00000000,(%rsp)
00000000000437b1	movq	%r14,%rdi
00000000000437b4	movq	%r15,%rdx
00000000000437b7	movq	%r12,%rcx
00000000000437ba	movq	%rbx,%r8
00000000000437bd	movq	%rax,%r9
00000000000437c0	xorb	%al,%al
00000000000437c2	call	*%r13
00000000000437c5	addq	$0x08,%rsp
00000000000437c9	popq	%rbx
00000000000437ca	popq	%r12
00000000000437cc	popq	%r13
00000000000437ce	popq	%r14
00000000000437d0	popq	%r15
00000000000437d2	popq	%rbp
00000000000437d3	ret
+[PBXLSDynamicLinkerImage stringForSymbolsLevel:]:
00000000000437d4	pushq	%rbp
00000000000437d5	movq	%rsp,%rbp
00000000000437d8	pushq	%rbx
00000000000437d9	pushq	%rax
00000000000437da	movl	%edx,%ebx
00000000000437dc	movq	0x00063c25(%rip),%rsi
00000000000437e3	call	*-[PBXGDB_ThreadController enqueRequestStackFramesForThread:numberOfStackFrames:resultHandler:](%rip)
00000000000437e9	movq	%rax,%rdi
00000000000437ec	cmpl	$0x03,%ebx
00000000000437ef	ja	0x0004385b
00000000000437f1	movl	%ebx,%eax
00000000000437f3	leaq	0x00000072(%rip),%rcx
00000000000437fa	movslq	(%rcx,%rax,4),%rax
00000000000437fe	addq	%rcx,%rax
0000000000043801	jmp	*%rax
0000000000043803	movq	0x00063c06(%rip),%rsi
000000000004380a	leaq	0x000719c7(%rip),%rdx
0000000000043811	leaq	0x0006c120(%rip),%rcx
0000000000043818	leaq	0x00071939(%rip),%r8
000000000004381f	addq	$0x08,%rsp
0000000000043823	popq	%rbx
0000000000043824	popq	%rbp
0000000000043825	jmp	*0x000408ad(%rip)
000000000004382b	movq	0x00063bde(%rip),%rsi
0000000000043832	leaq	0x000719bf(%rip),%rdx
0000000000043839	jmp	0x00043811
000000000004383b	movq	0x00063bce(%rip),%rsi
0000000000043842	leaq	0x000719cf(%rip),%rdx
0000000000043849	jmp	0x00043811
000000000004384b	movq	0x00063bbe(%rip),%rsi
0000000000043852	leaq	0x000719df(%rip),%rdx
0000000000043859	jmp	0x00043811
000000000004385b	movq	0x00063bae(%rip),%rsi
0000000000043862	leaq	0x00070b6f(%rip),%rdx
0000000000043869	jmp	0x00043811
000000000004386b	nop
000000000004386c	xchgl	%edi,%eax
000000000004386d	.byte 0xff, 0xff #bad opcode
000000000004386f	.byte 0xff, 0xbf #bad opcode
0000000000043871	.byte 0xff, 0xff #bad opcode
0000000000043873	decl	%edi
0000000000043875	.byte 0xff, 0xff #bad opcode
0000000000043877	lcalll	*%edi
0000000000043879	.byte 0xff, 0xff #bad opcode
000000000004387b	call	*0x48(%rbp)
000000000004387e	movl	%esp,%ebp
0000000000043880	pushq	%rbx
0000000000043881	pushq	%rax
0000000000043882	movl	%edx,%ebx
0000000000043884	movq	0x00063b7d(%rip),%rsi
000000000004388b	call	*0x00040847(%rip)
0000000000043891	movq	%rax,%rdi
0000000000043894	cmpl	$0x03,%ebx
0000000000043897	ja	0x00043903
0000000000043899	movl	%ebx,%eax
000000000004389b	leaq	0x00000072(%rip),%rcx
00000000000438a2	movslq	(%rcx,%rax,4),%rax
00000000000438a6	addq	%rcx,%rax
00000000000438a9	jmp	*%rax
00000000000438ab	movq	0x00063b5e(%rip),%rsi
00000000000438b2	leaq	0x0007191f(%rip),%rdx
00000000000438b9	leaq	0x0006c078(%rip),%rcx
00000000000438c0	leaq	0x00071891(%rip),%r8
00000000000438c7	addq	$0x08,%rsp
00000000000438cb	popq	%rbx
00000000000438cc	popq	%rbp
00000000000438cd	jmp	*0x00040805(%rip)
00000000000438d3	movq	0x00063b36(%rip),%rsi
00000000000438da	leaq	0x00071977(%rip),%rdx
00000000000438e1	jmp	0x000438b9
00000000000438e3	movq	0x00063b26(%rip),%rsi
00000000000438ea	leaq	0x00071987(%rip),%rdx
00000000000438f1	jmp	0x000438b9
00000000000438f3	movq	0x00063b16(%rip),%rsi
00000000000438fa	leaq	0x00071997(%rip),%rdx
0000000000043901	jmp	0x000438b9
0000000000043903	movq	0x00063b06(%rip),%rsi
000000000004390a	leaq	0x00070ac7(%rip),%rdx
0000000000043911	jmp	0x000438b9
0000000000043913	nop
0000000000043914	xchgl	%edi,%eax
0000000000043915	.byte 0xff, 0xff #bad opcode
0000000000043917	.byte 0xff, 0xbf #bad opcode
0000000000043919	.byte 0xff, 0xff #bad opcode
000000000004391b	decl	%edi
000000000004391d	.byte 0xff, 0xff #bad opcode
000000000004391f	lcalll	*%edi
0000000000043921	.byte 0xff, 0xff #bad opcode
0000000000043923	call	*0x89485590(%rax)
0000000000043929	inl	$0x53,%eax
000000000004392b	pushq	%rax
000000000004392c	movq	%rdi,%rbx
000000000004392f	movq	0x000631ba(%rip),%rsi
0000000000043936	xorl	%edx,%edx
0000000000043938	call	*0x0004079a(%rip)
000000000004393e	movq	0x00061513(%rip),%rsi
0000000000043945	movq	%rbx,%rdi
0000000000043948	xorl	%edx,%edx
000000000004394a	call	*0x00040788(%rip)
0000000000043950	movq	0x000631c9(%rip),%rsi
0000000000043957	movq	%rbx,%rdi
000000000004395a	xorl	%edx,%edx
000000000004395c	movq	0x00040775(%rip),%rax
0000000000043963	addq	$0x08,%rsp
0000000000043967	popq	%rbx
0000000000043968	popq	%rbp
0000000000043969	jmp	*%rax
-[PBXLSDynamicLinkerImage description]:
000000000004396b	pushq	%rbp
000000000004396c	movq	%rsp,%rbp
000000000004396f	pushq	%r15
0000000000043971	pushq	%r14
0000000000043973	pushq	%rbx
0000000000043974	pushq	%rax
0000000000043975	movq	%rdi,%rbx
0000000000043978	movq	0x00064ad1(%rip),%r14
000000000004397f	leaq	0x000649aa(%rip),%rsi
0000000000043986	call	*0x000649a4(%rip)
000000000004398c	movq	%rax,%rdi
000000000004398f	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000043994	movq	%rax,%r15
0000000000043997	movq	0x00063a8a(%rip),%rsi
000000000004399e	movq	%rbx,%rdi
00000000000439a1	call	*0x00040731(%rip)
00000000000439a7	leaq	0x0007190a(%rip),%rdx
00000000000439ae	movq	0x000611c3(%rip),%rsi
00000000000439b5	movq	%r14,%rdi
00000000000439b8	movq	%r15,%rcx
00000000000439bb	movq	%rbx,%r8
00000000000439be	movq	%rax,%r9
00000000000439c1	xorb	%al,%al
00000000000439c3	movq	0x0004070e(%rip),%r11
00000000000439ca	addq	$0x08,%rsp
00000000000439ce	popq	%rbx
00000000000439cf	popq	%r14
00000000000439d1	popq	%r15
00000000000439d3	popq	%rbp
00000000000439d4	jmp	*%r11
-[PBXLSDynamicLinkerImage contentDescription]:
00000000000439d7	pushq	%rbp
00000000000439d8	movq	%rsp,%rbp
00000000000439db	movq	0x000623ee(%rip),%rsi
00000000000439e2	popq	%rbp
00000000000439e3	jmp	*0x000406ef(%rip)
-[PBXLSDynamicLinkerImage setEqualTo:]:
00000000000439e9	pushq	%rbp
00000000000439ea	movq	%rsp,%rbp
00000000000439ed	pushq	%r14
00000000000439ef	pushq	%rbx
00000000000439f0	movq	%rdx,%rbx
00000000000439f3	movq	%rdi,%r14
00000000000439f6	movq	0x000612a3(%rip),%rsi
00000000000439fd	movq	%rbx,%rdi
0000000000043a00	call	*0x000406d2(%rip)
0000000000043a06	movq	0x0006144b(%rip),%rsi
0000000000043a0d	movq	%r14,%rdi
0000000000043a10	movq	%rax,%rdx
0000000000043a13	call	*0x000406bf(%rip)
0000000000043a19	movq	0x00061960(%rip),%rsi
0000000000043a20	movq	%rbx,%rdi
0000000000043a23	call	*0x000406af(%rip)
0000000000043a29	movq	0x000630c0(%rip),%rsi
0000000000043a30	movq	%r14,%rdi
0000000000043a33	movq	%rax,%rdx
0000000000043a36	call	*0x0004069c(%rip)
0000000000043a3c	movq	0x000639ed(%rip),%rsi
0000000000043a43	movq	%rbx,%rdi
0000000000043a46	call	*0x0004068c(%rip)
0000000000043a4c	movq	0x000630d5(%rip),%rsi
0000000000043a53	movq	%r14,%rdi
0000000000043a56	movl	%eax,%edx
0000000000043a58	call	*0x0004067a(%rip)
0000000000043a5e	movq	0x000639d3(%rip),%rsi
0000000000043a65	movq	%rbx,%rdi
0000000000043a68	call	*0x0004066a(%rip)
0000000000043a6e	movq	0x000630ab(%rip),%rsi
0000000000043a75	movq	%r14,%rdi
0000000000043a78	movq	%rax,%rdx
0000000000043a7b	call	*0x00040657(%rip)
0000000000043a81	movq	0x000639b8(%rip),%rsi
0000000000043a88	movq	%rbx,%rdi
0000000000043a8b	call	*0x00040647(%rip)
0000000000043a91	movq	0x000626f0(%rip),%rsi
0000000000043a98	movq	%r14,%rdi
0000000000043a9b	movl	%eax,%edx
0000000000043a9d	call	*0x00040635(%rip)
0000000000043aa3	movq	0x000626d6(%rip),%rsi
0000000000043aaa	movq	%rbx,%rdi
0000000000043aad	call	*0x00040625(%rip)
0000000000043ab3	movq	0x000626d6(%rip),%rsi
0000000000043aba	movq	%r14,%rdi
0000000000043abd	movl	%eax,%edx
0000000000043abf	call	*0x00040613(%rip)
0000000000043ac5	movq	0x0006303c(%rip),%rsi
0000000000043acc	movq	%rbx,%rdi
0000000000043acf	call	*0x00040603(%rip)
0000000000043ad5	movq	0x0006301c(%rip),%rsi
0000000000043adc	movq	%r14,%rdi
0000000000043adf	movl	%eax,%edx
0000000000043ae1	movq	0x000405f0(%rip),%rax
0000000000043ae8	popq	%rbx
0000000000043ae9	popq	%r14
0000000000043aeb	popq	%rbp
0000000000043aec	jmp	*%rax
-[PBXLSDynamicLinkerImage dynamicLinkerImageController]:
0000000000043aee	pushq	%rbp
0000000000043aef	movq	%rsp,%rbp
0000000000043af2	movq	0x0006387f(%rip),%rsi
0000000000043af9	popq	%rbp
0000000000043afa	jmp	*0x000405d8(%rip)
-[PBXLSDynamicLinkerImage setSharedLibraryPath:]:
0000000000043b00	pushq	%rbp
0000000000043b01	movq	%rsp,%rbp
0000000000043b04	movq	%rdx,%rax
0000000000043b07	movq	%rdi,%rcx
0000000000043b0a	movq	0x0006b7b7(%rip),%rdx
0000000000043b11	cmpq	%rax,(%rcx,%rdx)
0000000000043b15	jne	0x00043b19
0000000000043b17	popq	%rbp
0000000000043b18	ret
0000000000043b19	addq	%rcx,%rdx
0000000000043b1c	subq	%rcx,%rdx
0000000000043b1f	movq	%rax,%rdi
0000000000043b22	movq	%rcx,%rsi
0000000000043b25	popq	%rbp
0000000000043b26	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000043b2b	nop
-[PBXLSDynamicLinkerImage displayName]:
0000000000043b2c	pushq	%rbp
0000000000043b2d	movq	%rsp,%rbp
0000000000043b30	movq	0x00061169(%rip),%rsi
0000000000043b37	popq	%rbp
0000000000043b38	jmp	*0x0004059a(%rip)
0000000000043b3e	nop
-[PBXLSDynamicLinkerImage isSystemSharedLibrary]:
0000000000043b3f	pushq	%rbp
0000000000043b40	movq	%rsp,%rbp
0000000000043b43	pushq	%r14
0000000000043b45	pushq	%rbx
0000000000043b46	movq	0x00061833(%rip),%rsi
0000000000043b4d	movq	0x00040584(%rip),%r14
0000000000043b54	call	*%r14
0000000000043b57	movq	%rax,%rbx
0000000000043b5a	movq	0x00061787(%rip),%rsi
0000000000043b61	leaq	0x00071770(%rip),%rdx
0000000000043b68	movq	%rbx,%rdi
0000000000043b6b	call	*%r14
0000000000043b6e	movb	$0x01,%cl
0000000000043b70	testb	%al,%al
0000000000043b72	jne	0x00043bad
0000000000043b74	movq	0x0006176d(%rip),%rsi
0000000000043b7b	leaq	0x00071776(%rip),%rdx
0000000000043b82	movq	%rbx,%rdi
0000000000043b85	call	*0x0004054d(%rip)
0000000000043b8b	movb	$0x01,%cl
0000000000043b8d	testb	%al,%al
0000000000043b8f	jne	0x00043bad
0000000000043b91	movq	0x00061750(%rip),%rsi
0000000000043b98	leaq	0x00071779(%rip),%rdx
0000000000043b9f	movq	%rbx,%rdi
0000000000043ba2	call	*0x00040530(%rip)
0000000000043ba8	testb	%al,%al
0000000000043baa	setne	%cl
0000000000043bad	movzbl	%cl,%eax
0000000000043bb0	popq	%rbx
0000000000043bb1	popq	%r14
0000000000043bb3	popq	%rbp
0000000000043bb4	ret
+[PBXLSDynamicLinkerImage systemLibraryFrameworksNameRegEx]:
0000000000043bb5	pushq	%rbp
0000000000043bb6	movq	%rsp,%rbp
0000000000043bb9	leaq	0x00071778(%rip),%rax
0000000000043bc0	popq	%rbp
0000000000043bc1	ret
+[PBXLSDynamicLinkerImage systemLibraryPrivateFrameworksNameRegEx]:
0000000000043bc2	pushq	%rbp
0000000000043bc3	movq	%rsp,%rbp
0000000000043bc6	leaq	0x0007178b(%rip),%rax
0000000000043bcd	popq	%rbp
0000000000043bce	ret
+[PBXLSDynamicLinkerImage systemUsrLibNameRegEx]:
0000000000043bcf	pushq	%rbp
0000000000043bd0	movq	%rsp,%rbp
0000000000043bd3	leaq	0x0007179e(%rip),%rax
0000000000043bda	popq	%rbp
0000000000043bdb	ret
-[PBXLSDynamicLinkerImage setSymbolsStatus:]:
0000000000043bdc	pushq	%rbp
0000000000043bdd	movq	%rsp,%rbp
0000000000043be0	movq	0x0006b6c1(%rip),%rax
0000000000043be7	movl	%edx,(%rdi,%rax)
0000000000043bea	popq	%rbp
0000000000043beb	ret
-[PBXLSDynamicLinkerImage symbolsStatus]:
0000000000043bec	pushq	%rbp
0000000000043bed	movq	%rsp,%rbp
0000000000043bf0	movq	0x0006b6b1(%rip),%rax
0000000000043bf7	movl	(%rdi,%rax),%eax
0000000000043bfa	popq	%rbp
0000000000043bfb	ret
-[PBXLSDynamicLinkerImage symbolsLoadTime]:
0000000000043bfc	pushq	%rbp
0000000000043bfd	movq	%rsp,%rbp
0000000000043c00	movq	0x0006b6b1(%rip),%rax
0000000000043c07	movl	(%rdi,%rax),%eax
0000000000043c0a	popq	%rbp
0000000000043c0b	ret
-[PBXLSDynamicLinkerImage setSharedLibraryStatus:]:
0000000000043c0c	pushq	%rbp
0000000000043c0d	movq	%rsp,%rbp
0000000000043c10	movq	0x0006b6a9(%rip),%rax
0000000000043c17	movl	%edx,(%rdi,%rax)
0000000000043c1a	popq	%rbp
0000000000043c1b	ret
-[PBXLSDynamicLinkerImage sharedLibraryStatus]:
0000000000043c1c	pushq	%rbp
0000000000043c1d	movq	%rsp,%rbp
0000000000043c20	movq	0x0006b699(%rip),%rax
0000000000043c27	movl	(%rdi,%rax),%eax
0000000000043c2a	popq	%rbp
0000000000043c2b	ret
-[PBXLSDynamicLinkerImage setAddressRange:]:
0000000000043c2c	pushq	%rbp
0000000000043c2d	movq	%rsp,%rbp
0000000000043c30	movq	%rdx,%rax
0000000000043c33	movq	%rdi,%rcx
0000000000043c36	movq	0x0006b69b(%rip),%rdx
0000000000043c3d	cmpq	%rax,(%rcx,%rdx)
0000000000043c41	jne	0x00043c45
0000000000043c43	popq	%rbp
0000000000043c44	ret
0000000000043c45	addq	%rcx,%rdx
0000000000043c48	subq	%rcx,%rdx
0000000000043c4b	movq	%rax,%rdi
0000000000043c4e	movq	%rcx,%rsi
0000000000043c51	popq	%rbp
0000000000043c52	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXLSDynamicLinkerImage addressRange]:
0000000000043c57	pushq	%rbp
0000000000043c58	movq	%rsp,%rbp
0000000000043c5b	movq	0x0006b676(%rip),%rax
0000000000043c62	movq	(%rdi,%rax),%rax
0000000000043c66	popq	%rbp
0000000000043c67	ret
-[PBXLSDynamicLinkerImage compareByName:]:
0000000000043c68	pushq	%rbp
0000000000043c69	movq	%rsp,%rbp
0000000000043c6c	pushq	%r14
0000000000043c6e	pushq	%rbx
0000000000043c6f	movq	%rdx,%r14
0000000000043c72	movq	0x000637af(%rip),%rsi
0000000000043c79	call	*0x00040459(%rip)
0000000000043c7f	movq	%rax,%rbx
0000000000043c82	movq	0x0006379f(%rip),%rsi
0000000000043c89	movq	%r14,%rdi
0000000000043c8c	call	*0x00040446(%rip)
0000000000043c92	movq	0x000628a7(%rip),%rsi
0000000000043c99	movq	%rbx,%rdi
0000000000043c9c	movq	%rax,%rdx
0000000000043c9f	movq	0x00040432(%rip),%rax
0000000000043ca6	popq	%rbx
0000000000043ca7	popq	%r14
0000000000043ca9	popq	%rbp
0000000000043caa	jmp	*%rax
-[PBXLSDynamicLinkerImage compareByAddress:]:
0000000000043cac	pushq	%rbp
0000000000043cad	movq	%rsp,%rbp
0000000000043cb0	pushq	%r14
0000000000043cb2	pushq	%rbx
0000000000043cb3	movq	%rdx,%r14
0000000000043cb6	movq	0x0006377b(%rip),%rsi
0000000000043cbd	call	*0x00040415(%rip)
0000000000043cc3	movq	%rax,%rbx
0000000000043cc6	movq	0x0006376b(%rip),%rsi
0000000000043ccd	movq	%r14,%rdi
0000000000043cd0	call	*0x00040402(%rip)
0000000000043cd6	movq	0x00063773(%rip),%rsi
0000000000043cdd	movq	%rbx,%rdi
0000000000043ce0	movq	%rax,%rdx
0000000000043ce3	movq	0x000403ee(%rip),%rax
0000000000043cea	popq	%rbx
0000000000043ceb	popq	%r14
0000000000043ced	popq	%rbp
0000000000043cee	jmp	*%rax
-[PBXLSDynamicLinkerImage compareBySymbolsLevel:]:
0000000000043cf0	pushq	%rbp
0000000000043cf1	movq	%rsp,%rbp
0000000000043cf4	pushq	%r14
0000000000043cf6	pushq	%rbx
0000000000043cf7	movq	%rdx,%r14
0000000000043cfa	movq	%rdi,%rbx
0000000000043cfd	movq	0x0006247c(%rip),%rsi
0000000000043d04	movq	%r14,%rdi
0000000000043d07	call	*0x000403cb(%rip)
0000000000043d0d	movq	0x0006b59c(%rip),%rcx
0000000000043d14	movl	(%rbx,%rcx),%ecx
0000000000043d17	cmpl	%eax,%ecx
0000000000043d19	je	0x00043d32
0000000000043d1b	movq	$0xffffffff,%rdx
0000000000043d22	cmpl	%eax,%ecx
0000000000043d24	movl	$0x00000001,%eax
0000000000043d29	cmovbq	%rdx,%rax
0000000000043d2d	popq	%rbx
0000000000043d2e	popq	%r14
0000000000043d30	popq	%rbp
0000000000043d31	ret
0000000000043d32	movq	0x0006371f(%rip),%rsi
0000000000043d39	movq	%rbx,%rdi
0000000000043d3c	movq	%r14,%rdx
0000000000043d3f	popq	%rbx
0000000000043d40	popq	%r14
0000000000043d42	popq	%rbp
0000000000043d43	jmp	*0x0004038f(%rip)
-[PBXLSDynamicLinkerImage compareBySymbolsWhenToLoad:]:
0000000000043d49	pushq	%rbp
0000000000043d4a	movq	%rsp,%rbp
0000000000043d4d	pushq	%r14
0000000000043d4f	pushq	%rbx
0000000000043d50	movq	%rdx,%r14
0000000000043d53	movq	%rdi,%rbx
0000000000043d56	movq	0x00062dab(%rip),%rsi
0000000000043d5d	movq	%r14,%rdi
0000000000043d60	call	*0x00040372(%rip)
0000000000043d66	movq	0x0006b54b(%rip),%rcx
0000000000043d6d	movl	(%rbx,%rcx),%ecx
0000000000043d70	cmpl	%eax,%ecx
0000000000043d72	je	0x00043d8b
0000000000043d74	movq	$0xffffffff,%rdx
0000000000043d7b	cmpl	%eax,%ecx
0000000000043d7d	movl	$0x00000001,%eax
0000000000043d82	cmovbq	%rdx,%rax
0000000000043d86	popq	%rbx
0000000000043d87	popq	%r14
0000000000043d89	popq	%rbp
0000000000043d8a	ret
0000000000043d8b	movq	0x000636c6(%rip),%rsi
0000000000043d92	movq	%rbx,%rdi
0000000000043d95	movq	%r14,%rdx
0000000000043d98	popq	%rbx
0000000000043d99	popq	%r14
0000000000043d9b	popq	%rbp
0000000000043d9c	jmp	*0x00040336(%rip)
-[PBXLSDynamicLinkerImage requestUpdateSymbolsToLevel:]:
0000000000043da2	pushq	%rbp
0000000000043da3	movq	%rsp,%rbp
0000000000043da6	pushq	%r14
0000000000043da8	pushq	%rbx
0000000000043da9	movl	%edx,%ebx
0000000000043dab	movq	%rdi,%r14
0000000000043dae	movq	0x000623d3(%rip),%rsi
0000000000043db5	movl	$0x00000002,%edx
0000000000043dba	call	*0x00040318(%rip)
0000000000043dc0	movq	0x000623c9(%rip),%rsi
0000000000043dc7	movq	%r14,%rdi
0000000000043dca	movl	%ebx,%edx
0000000000043dcc	movq	0x00040305(%rip),%rax
0000000000043dd3	popq	%rbx
0000000000043dd4	popq	%r14
0000000000043dd6	popq	%rbp
0000000000043dd7	jmp	*%rax
-[PBXLSDynamicLinkerImage didUpdateSymbolsToLevel]:
0000000000043dd9	pushq	%rbp
0000000000043dda	movq	%rsp,%rbp
0000000000043ddd	pushq	%r15
0000000000043ddf	pushq	%r14
0000000000043de1	pushq	%rbx
0000000000043de2	pushq	%rax
0000000000043de3	movq	%rdi,%rbx
0000000000043de6	movq	0x0006100b(%rip),%rsi
0000000000043ded	movq	0x000402e4(%rip),%r15
0000000000043df4	call	*%r15
0000000000043df7	movq	%rax,%r14
0000000000043dfa	movq	0x00062387(%rip),%rsi
0000000000043e01	movq	%rbx,%rdi
0000000000043e04	movl	$0x00000003,%edx
0000000000043e09	call	*%r15
0000000000043e0c	testq	%r14,%r14
0000000000043e0f	jne	0x00043e1c
0000000000043e11	addq	$0x08,%rsp
0000000000043e15	popq	%rbx
0000000000043e16	popq	%r14
0000000000043e18	popq	%r15
0000000000043e1a	popq	%rbp
0000000000043e1b	ret
0000000000043e1c	movq	0x0006363d(%rip),%rsi
0000000000043e23	movq	%r14,%rdi
0000000000043e26	movq	%rbx,%rdx
0000000000043e29	addq	$0x08,%rsp
0000000000043e2d	popq	%rbx
0000000000043e2e	popq	%r14
0000000000043e30	popq	%r15
0000000000043e32	popq	%rbp
0000000000043e33	jmp	*0x0004029f(%rip)
-[PBXLSDynamicLinkerImage setGlobalVariables:]:
0000000000043e39	pushq	%rbp
0000000000043e3a	movq	%rsp,%rbp
0000000000043e3d	movq	%rdx,%rax
0000000000043e40	movq	%rdi,%rcx
0000000000043e43	movq	0x0006b496(%rip),%rdx
0000000000043e4a	movq	%rax,%rdi
0000000000043e4d	movq	%rcx,%rsi
0000000000043e50	popq	%rbp
0000000000043e51	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXLSDynamicLinkerImage globalVariables]:
0000000000043e56	pushq	%rbp
0000000000043e57	movq	%rsp,%rbp
0000000000043e5a	movq	0x0006b47f(%rip),%rax
0000000000043e61	movq	(%rdi,%rax),%rax
0000000000043e65	popq	%rbp
0000000000043e66	ret
-[PBXLSDynamicLinkerImageController _removeImage:fromDictionary:]:
0000000000043e67	pushq	%rbp
0000000000043e68	movq	%rsp,%rbp
0000000000043e6b	pushq	%r15
0000000000043e6d	pushq	%r14
0000000000043e6f	pushq	%r12
0000000000043e71	pushq	%rbx
0000000000043e72	movq	%rcx,%r12
0000000000043e75	movq	%rdx,%r14
0000000000043e78	movq	0x00061501(%rip),%rsi
0000000000043e7f	movq	0x00040252(%rip),%r15
0000000000043e86	movq	%r14,%rdi
0000000000043e89	call	*%r15
0000000000043e8c	movq	%rax,%rbx
0000000000043e8f	movq	0x00060e0a(%rip),%rsi
0000000000043e96	movq	%r14,%rdi
0000000000043e99	call	*%r15
0000000000043e9c	movq	%rax,%r15
0000000000043e9f	testq	%rbx,%rbx
0000000000043ea2	je	0x00043ecf
0000000000043ea4	leaq	0x000644a5(%rip),%rsi
0000000000043eab	movq	%r12,%rdi
0000000000043eae	movq	%rbx,%rdx
0000000000043eb1	call	*0x00064499(%rip)
0000000000043eb7	testq	%rax,%rax
0000000000043eba	je	0x00043ecf
0000000000043ebc	movq	0x0006149d(%rip),%rsi
0000000000043ec3	movq	%r12,%rdi
0000000000043ec6	movq	%rbx,%rdx
0000000000043ec9	call	*0x00040209(%rip)
0000000000043ecf	testq	%r15,%r15
0000000000043ed2	je	0x00043ef1
0000000000043ed4	leaq	0x00064475(%rip),%rsi
0000000000043edb	movq	%r12,%rdi
0000000000043ede	movq	%r15,%rdx
0000000000043ee1	call	*0x00064469(%rip)
0000000000043ee7	testq	%rax,%rax
0000000000043eea	je	0x00043ef1
0000000000043eec	cmpq	%r14,%rax
0000000000043eef	je	0x00043efa
0000000000043ef1	popq	%rbx
0000000000043ef2	popq	%r12
0000000000043ef4	popq	%r14
0000000000043ef6	popq	%r15
0000000000043ef8	popq	%rbp
0000000000043ef9	ret
0000000000043efa	movq	0x0006145f(%rip),%rsi
0000000000043f01	movq	%r12,%rdi
0000000000043f04	movq	%r15,%rdx
0000000000043f07	popq	%rbx
0000000000043f08	popq	%r12
0000000000043f0a	popq	%r14
0000000000043f0c	popq	%r15
0000000000043f0e	popq	%rbp
0000000000043f0f	jmp	*0x000401c3(%rip)
-[PBXLSDynamicLinkerImageController _addImage:]:
0000000000043f15	pushq	%rbp
0000000000043f16	movq	%rsp,%rbp
0000000000043f19	movq	0x0006b3d0(%rip),%rax
0000000000043f20	movq	(%rdi,%rax),%rcx
0000000000043f24	movq	0x00063545(%rip),%rsi
0000000000043f2b	popq	%rbp
0000000000043f2c	jmp	*0x000401a6(%rip)
-[PBXLSDynamicLinkerImageController _removeImage:]:
0000000000043f32	pushq	%rbp
0000000000043f33	movq	%rsp,%rbp
0000000000043f36	movq	0x0006b3b3(%rip),%rax
0000000000043f3d	movq	(%rdi,%rax),%rcx
0000000000043f41	movq	0x00063530(%rip),%rsi
0000000000043f48	popq	%rbp
0000000000043f49	jmp	*0x00040189(%rip)
-[PBXLSDynamicLinkerImageController defaultSymbolsLevel]:
0000000000043f4f	pushq	%rbp
0000000000043f50	movq	%rsp,%rbp
0000000000043f53	pushq	%rbx
0000000000043f54	pushq	%rax
0000000000043f55	movq	0x00060e14(%rip),%rsi
0000000000043f5c	movq	0x0006455d(%rip),%rdi
0000000000043f63	movq	0x0004016e(%rip),%rbx
0000000000043f6a	call	*%rbx
0000000000043f6c	movq	0x00063285(%rip),%rsi
0000000000043f73	leaq	0x0007147e(%rip),%rdx
0000000000043f7a	movq	%rax,%rdi
0000000000043f7d	call	*%rbx
0000000000043f7f	testl	%eax,%eax
0000000000043f81	movl	$0x00000003,%ecx
0000000000043f86	cmovnel	%eax,%ecx
0000000000043f89	movl	%ecx,%eax
0000000000043f8b	addq	$0x08,%rsp
0000000000043f8f	popq	%rbx
0000000000043f90	popq	%rbp
0000000000043f91	ret
-[PBXLSDynamicLinkerImageController defaultSymbolsLoadTime]:
0000000000043f92	pushq	%rbp
0000000000043f93	movq	%rsp,%rbp
0000000000043f96	pushq	%rbx
0000000000043f97	pushq	%rax
0000000000043f98	movq	0x00060dd1(%rip),%rsi
0000000000043f9f	movq	0x0006451a(%rip),%rdi
0000000000043fa6	movq	0x0004012b(%rip),%rbx
0000000000043fad	call	*%rbx
0000000000043faf	movq	0x00063242(%rip),%rsi
0000000000043fb6	leaq	0x0007145b(%rip),%rdx
0000000000043fbd	movq	%rax,%rdi
0000000000043fc0	call	*%rbx
0000000000043fc2	testl	%eax,%eax
0000000000043fc4	movl	$0x00000003,%ecx
0000000000043fc9	cmovnel	%eax,%ecx
0000000000043fcc	movl	%ecx,%eax
0000000000043fce	addq	$0x08,%rsp
0000000000043fd2	popq	%rbx
0000000000043fd3	popq	%rbp
0000000000043fd4	ret
-[PBXLSDynamicLinkerImageController defaultSystemSymbolsLevel]:
0000000000043fd5	pushq	%rbp
0000000000043fd6	movq	%rsp,%rbp
0000000000043fd9	pushq	%rbx
0000000000043fda	pushq	%rax
0000000000043fdb	movq	0x00060d8e(%rip),%rsi
0000000000043fe2	movq	0x000644d7(%rip),%rdi
0000000000043fe9	movq	0x000400e8(%rip),%rbx
0000000000043ff0	call	*%rbx
0000000000043ff2	movq	0x000631ff(%rip),%rsi
0000000000043ff9	leaq	0x000713b8(%rip),%rdx
0000000000044000	movq	%rax,%rdi
0000000000044003	call	*%rbx
0000000000044005	testl	%eax,%eax
0000000000044007	movl	$0x00000001,%ecx
000000000004400c	cmovnel	%eax,%ecx
000000000004400f	movl	%ecx,%eax
0000000000044011	addq	$0x08,%rsp
0000000000044015	popq	%rbx
0000000000044016	popq	%rbp
0000000000044017	ret
-[PBXLSDynamicLinkerImageController defaultSystemSymbolsLoadTime]:
0000000000044018	pushq	%rbp
0000000000044019	movq	%rsp,%rbp
000000000004401c	pushq	%rbx
000000000004401d	pushq	%rax
000000000004401e	movq	0x00060d4b(%rip),%rsi
0000000000044025	movq	0x00064494(%rip),%rdi
000000000004402c	movq	0x000400a5(%rip),%rbx
0000000000044033	call	*%rbx
0000000000044035	movq	0x000631bc(%rip),%rsi
000000000004403c	leaq	0x00071395(%rip),%rdx
0000000000044043	movq	%rax,%rdi
0000000000044046	call	*%rbx
0000000000044048	testl	%eax,%eax
000000000004404a	movl	$0x00000001,%ecx
000000000004404f	cmovnel	%eax,%ecx
0000000000044052	movl	%ecx,%eax
0000000000044054	addq	$0x08,%rsp
0000000000044058	popq	%rbx
0000000000044059	popq	%rbp
000000000004405a	ret
-[PBXLSDynamicLinkerImageController _processImageAfterLibraryLoading:]:
000000000004405b	pushq	%rbp
000000000004405c	movq	%rsp,%rbp
000000000004405f	pushq	%r15
0000000000044061	pushq	%r14
0000000000044063	pushq	%r13
0000000000044065	pushq	%r12
0000000000044067	pushq	%rbx
0000000000044068	pushq	%rax
0000000000044069	movq	%rdx,%r12
000000000004406c	movq	%rdi,%r14
000000000004406f	movq	0x0006340a(%rip),%rsi
0000000000044076	movq	0x0004005b(%rip),%rbx
000000000004407d	movq	%r12,%rdi
0000000000044080	call	*%rbx
0000000000044082	movb	%al,%r15b
0000000000044085	movq	0x000633b4(%rip),%rsi
000000000004408c	movq	%r12,%rdi
000000000004408f	call	*%rbx
0000000000044091	cmpl	$0x03,%eax
0000000000044094	je	0x00044150
000000000004409a	movq	0x00062a67(%rip),%rsi
00000000000440a1	movq	%r12,%rdi
00000000000440a4	call	*0x0004002e(%rip)
00000000000440aa	movl	%eax,%r13d
00000000000440ad	testl	%r13d,%r13d
00000000000440b0	jne	0x000440e6
00000000000440b2	testb	%r15b,%r15b
00000000000440b5	je	0x000440c0
00000000000440b7	movq	0x000633ca(%rip),%rsi
00000000000440be	jmp	0x000440c7
00000000000440c0	movq	0x000633c9(%rip),%rsi
00000000000440c7	movq	%r14,%rdi
00000000000440ca	call	*0x00040008(%rip)
00000000000440d0	movl	%eax,%r13d
00000000000440d3	movq	0x00062a1e(%rip),%rsi
00000000000440da	movq	%r12,%rdi
00000000000440dd	movl	%r13d,%edx
00000000000440e0	call	*0x0003fff2(%rip)
00000000000440e6	movq	0x00063353(%rip),%rsi
00000000000440ed	movq	%r12,%rdi
00000000000440f0	call	*0x0003ffe2(%rip)
00000000000440f6	testl	%eax,%eax
00000000000440f8	jne	0x00044150
00000000000440fa	movq	0x0006207f(%rip),%rsi
0000000000044101	movq	%r12,%rdi
0000000000044104	call	*0x0003ffce(%rip)
000000000004410a	movl	%eax,%ebx
000000000004410c	testl	%ebx,%ebx
000000000004410e	jne	0x00044142
0000000000044110	testb	%r15b,%r15b
0000000000044113	je	0x0004411e
0000000000044115	movq	0x0006337c(%rip),%rsi
000000000004411c	jmp	0x00044125
000000000004411e	movq	0x0006337b(%rip),%rsi
0000000000044125	movq	%r14,%rdi
0000000000044128	call	*0x0003ffaa(%rip)
000000000004412e	movl	%eax,%ebx
0000000000044130	movq	0x00062059(%rip),%rsi
0000000000044137	movq	%r12,%rdi
000000000004413a	movl	%ebx,%edx
000000000004413c	call	*0x0003ff96(%rip)
0000000000044142	cmpl	$0x03,%r13d
0000000000044146	jne	0x00044150
0000000000044148	leal	0xfe(%rbx),%eax
000000000004414b	cmpl	$0x01,%eax
000000000004414e	jbe	0x0004415f
0000000000044150	addq	$0x08,%rsp
0000000000044154	popq	%rbx
0000000000044155	popq	%r12
0000000000044157	popq	%r13
0000000000044159	popq	%r14
000000000004415b	popq	%r15
000000000004415d	popq	%rbp
000000000004415e	ret
000000000004415f	movq	0x00063342(%rip),%rsi
0000000000044166	movq	%r12,%rdi
0000000000044169	movl	%ebx,%edx
000000000004416b	addq	$0x08,%rsp
000000000004416f	popq	%rbx
0000000000044170	popq	%r12
0000000000044172	popq	%r13
0000000000044174	popq	%r14
0000000000044176	popq	%r15
0000000000044178	popq	%rbp
0000000000044179	jmp	*0x0003ff59(%rip)
-[PBXLSDynamicLinkerImageController _processNewImage:]:
000000000004417f	pushq	%rbp
0000000000044180	movq	%rsp,%rbp
0000000000044183	pushq	%r14
0000000000044185	pushq	%rbx
0000000000044186	movq	%rdx,%rbx
0000000000044189	movq	%rdi,%r14
000000000004418c	movq	0x000627e5(%rip),%rsi
0000000000044193	call	*0x0003ff3f(%rip)
0000000000044199	movq	0x00063310(%rip),%rsi
00000000000441a0	movq	%r14,%rdi
00000000000441a3	movq	%rbx,%rdx
00000000000441a6	call	*0x0003ff2c(%rip)
00000000000441ac	movq	0x0006142d(%rip),%rsi
00000000000441b3	movq	%rbx,%rdi
00000000000441b6	movl	$0x00000002,%edx
00000000000441bb	call	*0x0003ff17(%rip)
00000000000441c1	movq	0x000632f0(%rip),%rsi
00000000000441c8	movq	%r14,%rdi
00000000000441cb	movq	%rbx,%rdx
00000000000441ce	movq	0x0003ff03(%rip),%rax
00000000000441d5	popq	%rbx
00000000000441d6	popq	%r14
00000000000441d8	popq	%rbp
00000000000441d9	jmp	*%rax
-[PBXLSDynamicLinkerImageController willUpdateDynamicLinkerImages]:
00000000000441db	pushq	%rbp
00000000000441dc	movq	%rsp,%rbp
00000000000441df	pushq	%r15
00000000000441e1	pushq	%r14
00000000000441e3	pushq	%r13
00000000000441e5	pushq	%r12
00000000000441e7	pushq	%rbx
00000000000441e8	pushq	%rax
00000000000441e9	movq	0x00061498(%rip),%rsi
00000000000441f0	call	*0x0003fee2(%rip)
00000000000441f6	movq	%rax,%r14
00000000000441f9	leaq	0x00064110(%rip),%rsi
0000000000044200	movq	%r14,%rdi
0000000000044203	call	*0x00064107(%rip)
0000000000044209	movq	%rax,%r15
000000000004420c	testq	%r15,%r15
000000000004420f	je	0x00044246
0000000000044211	xorl	%ebx,%ebx
0000000000044213	movq	0x000613c6(%rip),%r12
000000000004421a	leaq	0x000640ff(%rip),%r13
0000000000044221	movq	%r14,%rdi
0000000000044224	movq	%r13,%rsi
0000000000044227	movq	%rbx,%rdx
000000000004422a	call	*0x000640f0(%rip)
0000000000044230	movq	%rax,%rdi
0000000000044233	movq	%r12,%rsi
0000000000044236	xorl	%edx,%edx
0000000000044238	call	*0x0003fe9a(%rip)
000000000004423e	incq	%rbx
0000000000044241	cmpq	%rbx,%r15
0000000000044244	jne	0x00044221
0000000000044246	addq	$0x08,%rsp
000000000004424a	popq	%rbx
000000000004424b	popq	%r12
000000000004424d	popq	%r13
000000000004424f	popq	%r14
0000000000044251	popq	%r15
0000000000044253	popq	%rbp
0000000000044254	ret
-[PBXLSDynamicLinkerImageController addDynamicLinkerImages:]:
0000000000044255	pushq	%rbp
0000000000044256	movq	%rsp,%rbp
0000000000044259	pushq	%r15
000000000004425b	pushq	%r14
000000000004425d	pushq	%r13
000000000004425f	pushq	%r12
0000000000044261	pushq	%rbx
0000000000044262	pushq	%rax
0000000000044263	movq	%rdx,%r15
0000000000044266	movq	%rdi,%r14
0000000000044269	leaq	0x000640a0(%rip),%rsi
0000000000044270	movq	%r15,%rdi
0000000000044273	call	*0x00064097(%rip)
0000000000044279	movq	%rax,%r12
000000000004427c	testq	%r12,%r12
000000000004427f	je	0x000442b4
0000000000044281	xorl	%ebx,%ebx
0000000000044283	leaq	0x00064096(%rip),%r13
000000000004428a	movq	%r15,%rdi
000000000004428d	movq	%r13,%rsi
0000000000044290	movq	%rbx,%rdx
0000000000044293	call	*0x00064087(%rip)
0000000000044299	movq	%r14,%rdi
000000000004429c	movq	0x0006321d(%rip),%rsi
00000000000442a3	movq	%rax,%rdx
00000000000442a6	call	*0x0003fe2c(%rip)
00000000000442ac	incq	%rbx
00000000000442af	cmpq	%rbx,%r12
00000000000442b2	jne	0x0004428a
00000000000442b4	addq	$0x08,%rsp
00000000000442b8	popq	%rbx
00000000000442b9	popq	%r12
00000000000442bb	popq	%r13
00000000000442bd	popq	%r14
00000000000442bf	popq	%r15
00000000000442c1	popq	%rbp
00000000000442c2	ret
-[PBXLSDynamicLinkerImageController appendNewDynamicLinkerImage:]:
00000000000442c3	pushq	%rbp
00000000000442c4	movq	%rsp,%rbp
00000000000442c7	movq	0x000631f2(%rip),%rsi
00000000000442ce	popq	%rbp
00000000000442cf	jmp	*0x0003fe03(%rip)
-[PBXLSDynamicLinkerImageController didUpdateDynamicLinkerImages]:
00000000000442d5	pushq	%rbp
00000000000442d6	movq	%rsp,%rbp
00000000000442d9	pushq	%r15
00000000000442db	pushq	%r14
00000000000442dd	pushq	%r13
00000000000442df	pushq	%r12
00000000000442e1	pushq	%rbx
00000000000442e2	pushq	%rax
00000000000442e3	movq	%rdi,%r15
00000000000442e6	movq	0x0006139b(%rip),%rsi
00000000000442ed	call	*0x0003fde5(%rip)
00000000000442f3	movq	%rax,%r14
00000000000442f6	leaq	0x00064013(%rip),%rsi
00000000000442fd	movq	%r14,%rdi
0000000000044300	call	*0x0006400a(%rip)
0000000000044306	movq	%rax,%rbx
0000000000044309	testq	%rbx,%rbx
000000000004430c	je	0x0004436f
000000000004430e	decq	%rbx
0000000000044311	movq	0x0003fdc0(%rip),%r13
0000000000044318	movq	%r14,%rdi
000000000004431b	leaq	0x00063ffe(%rip),%rsi
0000000000044322	movq	%rbx,%rdx
0000000000044325	call	*0x00063ff5(%rip)
000000000004432b	movq	%rax,%r12
000000000004432e	movq	%r12,%rdi
0000000000044331	movq	0x000612a0(%rip),%rsi
0000000000044338	call	*0x0003fd9a(%rip)
000000000004433e	testl	%eax,%eax
0000000000044340	je	0x0004434d
0000000000044342	decq	%rbx
0000000000044345	cmpq	$0xff,%rbx
0000000000044349	jne	0x00044318
000000000004434b	jmp	0x0004436f
000000000004434d	movq	%r15,%rdi
0000000000044350	movq	0x00063171(%rip),%rsi
0000000000044357	movq	%r12,%rdx
000000000004435a	call	*%r13
000000000004435d	movq	%r15,%rdi
0000000000044360	movq	0x00063099(%rip),%rsi
0000000000044367	movq	%rbx,%rdx
000000000004436a	call	*%r13
000000000004436d	jmp	0x00044342
000000000004436f	movq	0x0006126a(%rip),%rsi
0000000000044376	movq	%r15,%rdi
0000000000044379	movl	$0x00000002,%edx
000000000004437e	addq	$0x08,%rsp
0000000000044382	popq	%rbx
0000000000044383	popq	%r12
0000000000044385	popq	%r13
0000000000044387	popq	%r14
0000000000044389	popq	%r15
000000000004438b	popq	%rbp
000000000004438c	jmp	*0x0003fd46(%rip)
-[PBXLSDynamicLinkerImageController dynamicLinkerImages]:
0000000000044392	pushq	%rbp
0000000000044393	movq	%rsp,%rbp
0000000000044396	movq	0x000612eb(%rip),%rsi
000000000004439d	popq	%rbp
000000000004439e	jmp	*0x0003fd34(%rip)
-[PBXLSDynamicLinkerImageController dynamicLinkerImageDidUpdateSymbolsLevel:]:
00000000000443a4	pushq	%rbp
00000000000443a5	movq	%rsp,%rbp
00000000000443a8	popq	%rbp
00000000000443a9	ret
-[PBXLSDynamicLinkerImageController rescanImagesLibraryLoading]:
00000000000443aa	pushq	%rbp
00000000000443ab	movq	%rsp,%rbp
00000000000443ae	pushq	%r15
00000000000443b0	pushq	%r14
00000000000443b2	pushq	%r13
00000000000443b4	pushq	%r12
00000000000443b6	pushq	%rbx
00000000000443b7	pushq	%rax
00000000000443b8	movq	%rdi,%r14
00000000000443bb	movq	0x0006310e(%rip),%rsi
00000000000443c2	call	*0x0003fd10(%rip)
00000000000443c8	movq	%rax,%r15
00000000000443cb	leaq	0x00063f3e(%rip),%rsi
00000000000443d2	movq	%r15,%rdi
00000000000443d5	call	*0x00063f35(%rip)
00000000000443db	movq	%rax,%r12
00000000000443de	testq	%r12,%r12
00000000000443e1	je	0x00044416
00000000000443e3	xorl	%ebx,%ebx
00000000000443e5	leaq	0x00063f34(%rip),%r13
00000000000443ec	movq	%r15,%rdi
00000000000443ef	movq	%r13,%rsi
00000000000443f2	movq	%rbx,%rdx
00000000000443f5	call	*0x00063f25(%rip)
00000000000443fb	movq	%r14,%rdi
00000000000443fe	movq	0x000630b3(%rip),%rsi
0000000000044405	movq	%rax,%rdx
0000000000044408	call	*0x0003fcca(%rip)
000000000004440e	incq	%rbx
0000000000044411	cmpq	%rbx,%r12
0000000000044414	jne	0x000443ec
0000000000044416	addq	$0x08,%rsp
000000000004441a	popq	%rbx
000000000004441b	popq	%r12
000000000004441d	popq	%r13
000000000004441f	popq	%r14
0000000000044421	popq	%r15
0000000000044423	popq	%rbp
0000000000044424	ret
-[PBXLSDynamicLinkerImageController dynamicLinkerImageWithSharedLibraryAtPath:]:
0000000000044425	pushq	%rbp
0000000000044426	movq	%rsp,%rbp
0000000000044429	movq	0x0006aec0(%rip),%rax
0000000000044430	movq	(%rdi,%rax),%rdi
0000000000044434	movq	0x00063f15(%rip),%rax
000000000004443b	leaq	0x00063f0e(%rip),%rsi
0000000000044442	popq	%rbp
0000000000044443	jmp	*%rax
-[PBXLSDynamicLinkerImageController persistentShlibImages]:
0000000000044445	pushq	%rbp
0000000000044446	movq	%rsp,%rbp
0000000000044449	movq	0x0006ae98(%rip),%rax
0000000000044450	movq	(%rdi,%rax),%rax
0000000000044454	popq	%rbp
0000000000044455	ret
-[PBXLSDynamicLinkerImageController persistentDynamicLinkerImageWithSharedLibraryAtPath:]:
0000000000044456	pushq	%rbp
0000000000044457	movq	%rsp,%rbp
000000000004445a	movq	0x0006ae87(%rip),%rax
0000000000044461	movq	(%rdi,%rax),%rdi
0000000000044465	movq	0x00063ee4(%rip),%rax
000000000004446c	leaq	0x00063edd(%rip),%rsi
0000000000044473	popq	%rbp
0000000000044474	jmp	*%rax
-[PBXLSDynamicLinkerImageController persistentDynamicLinkerImageWithPathOrName:]:
0000000000044476	pushq	%rbp
0000000000044477	movq	%rsp,%rbp
000000000004447a	movq	0x0006ae67(%rip),%rax
0000000000044481	movq	(%rdi,%rax),%rcx
0000000000044485	movq	0x0006304c(%rip),%rsi
000000000004448c	popq	%rbp
000000000004448d	jmp	*0x0003fc45(%rip)
-[PBXLSDynamicLinkerImageController dynamicLinkerImageWithExactPath:]:
0000000000044493	pushq	%rbp
0000000000044494	movq	%rsp,%rbp
0000000000044497	movq	0x0006ae52(%rip),%rax
000000000004449e	movq	(%rdi,%rax),%rdi
00000000000444a2	movq	0x00063ea7(%rip),%rax
00000000000444a9	leaq	0x00063ea0(%rip),%rsi
00000000000444b0	popq	%rbp
00000000000444b1	jmp	*%rax
-[PBXLSDynamicLinkerImageController setSharedLibraryImageInfoOutOfDate]:
00000000000444b3	pushq	%rbp
00000000000444b4	movq	%rsp,%rbp
00000000000444b7	movq	0x00061122(%rip),%rsi
00000000000444be	xorl	%edx,%edx
00000000000444c0	popq	%rbp
00000000000444c1	jmp	*0x0003fc11(%rip)
-[PBXLSDynamicLinkerImageController requestUpdate]:
00000000000444c7	pushq	%rbp
00000000000444c8	movq	%rsp,%rbp
00000000000444cb	pushq	%rbx
00000000000444cc	pushq	%rax
00000000000444cd	movq	%rdi,%rbx
00000000000444d0	movq	0x00061101(%rip),%rsi
00000000000444d7	call	*0x0003fbfb(%rip)
00000000000444dd	testl	%eax,%eax
00000000000444df	je	0x000444e8
00000000000444e1	addq	$0x08,%rsp
00000000000444e5	popq	%rbx
00000000000444e6	popq	%rbp
00000000000444e7	ret
00000000000444e8	movq	0x000610f1(%rip),%rsi
00000000000444ef	movq	%rbx,%rdi
00000000000444f2	movl	$0x00000001,%edx
00000000000444f7	call	*0x0003fbdb(%rip)
00000000000444fd	movq	0x000610c4(%rip),%rsi
0000000000044504	movq	%rbx,%rdi
0000000000044507	call	*0x0003fbcb(%rip)
000000000004450d	movq	0x00062fcc(%rip),%rsi
0000000000044514	movq	%rax,%rdi
0000000000044517	movq	0x0003fbba(%rip),%rax
000000000004451e	addq	$0x08,%rsp
0000000000044522	popq	%rbx
0000000000044523	popq	%rbp
0000000000044524	jmp	*%rax
-[PBXLSDynamicLinkerImageController requestUpdatesForGlobalsBrowser]:
0000000000044526	pushq	%rbp
0000000000044527	movq	%rsp,%rbp
000000000004452a	popq	%rbp
000000000004452b	ret
000000000004452c	nop
000000000004452d	nop
000000000004452e	nop
-[PBXLSModel initWithDebugger:parentModel:]:
000000000004452f	pushq	%rbp
0000000000044530	movq	%rsp,%rbp
0000000000044533	pushq	%r14
0000000000044535	pushq	%rbx
0000000000044536	movq	%rcx,%r14
0000000000044539	movq	0x00060810(%rip),%rsi
0000000000044540	call	*0x0003fb92(%rip)
0000000000044546	movq	%rax,%rbx
0000000000044549	testq	%r14,%r14
000000000004454c	je	0x00044561
000000000004454e	movq	0x00062e2b(%rip),%rsi
0000000000044555	movq	%rbx,%rdi
0000000000044558	movq	%r14,%rdx
000000000004455b	call	*0x0003fb77(%rip)
0000000000044561	movq	%rbx,%rax
0000000000044564	popq	%rbx
0000000000044565	popq	%r14
0000000000044567	popq	%rbp
0000000000044568	ret
+[PBXLSModel stringForValidityStatus:]:
0000000000044569	pushq	%rbp
000000000004456a	movq	%rsp,%rbp
000000000004456d	cmpl	$0x03,%edx
0000000000044570	jbe	0x00044576
0000000000044572	xorl	%eax,%eax
0000000000044574	jmp	0x000445aa
0000000000044576	movl	%edx,%eax
0000000000044578	leaq	0x0000002d(%rip),%rcx
000000000004457f	movslq	(%rcx,%rax,4),%rax
0000000000044583	addq	%rcx,%rax
0000000000044586	jmp	*%rax
0000000000044588	leaq	0x0006fe49(%rip),%rax
000000000004458f	jmp	0x000445aa
0000000000044591	leaq	0x00071000(%rip),%rax
0000000000044598	jmp	0x000445aa
000000000004459a	leaq	0x00071017(%rip),%rax
00000000000445a1	jmp	0x000445aa
00000000000445a3	leaq	0x0007102e(%rip),%rax
00000000000445aa	popq	%rbp
00000000000445ab	ret
00000000000445ac	fdivr	%st,%st(7)
00000000000445ae	.byte 0xff, 0xff #bad opcode
00000000000445b0	inl	$0xff,%eax
00000000000445b2	.byte 0xff, 0xff #bad opcode
00000000000445b4	outb	%al,%dx
00000000000445b5	.byte 0xff, 0xff #bad opcode
00000000000445b7	pushq	%rdi
00000000000445b9	.byte 0xff, 0xff #bad opcode
00000000000445bb	call	*0x48(%rbp)
00000000000445be	movl	%esp,%ebp
00000000000445c0	decq	%rdx
00000000000445c3	cmpq	$0x09,%rdx
00000000000445c7	ja	0x00044631
00000000000445c9	leaq	0x0006e368(%rip),%rax
00000000000445d0	leaq	0x00000065(%rip),%rsi
00000000000445d7	movslq	(%rsi,%rdx,4),%rcx
00000000000445db	addq	%rsi,%rcx
00000000000445de	jmp	*%rcx
00000000000445e0	leaq	0x0006e371(%rip),%rax
00000000000445e7	jmp	0x00044638
00000000000445e9	leaq	0x0006e388(%rip),%rax
00000000000445f0	jmp	0x00044638
00000000000445f2	leaq	0x0006e39f(%rip),%rax
00000000000445f9	jmp	0x00044638
00000000000445fb	leaq	0x0006e3b6(%rip),%rax
0000000000044602	jmp	0x00044638
0000000000044604	leaq	0x0006e3cd(%rip),%rax
000000000004460b	jmp	0x00044638
000000000004460d	leaq	0x0006e3e4(%rip),%rax
0000000000044614	jmp	0x00044638
0000000000044616	leaq	0x0006e3fb(%rip),%rax
000000000004461d	jmp	0x00044638
000000000004461f	leaq	0x0006e412(%rip),%rax
0000000000044626	jmp	0x00044638
0000000000044628	leaq	0x0006e429(%rip),%rax
000000000004462f	jmp	0x00044638
0000000000044631	leaq	0x00070fc0(%rip),%rax
0000000000044638	popq	%rbp
0000000000044639	ret
000000000004463a	nop
000000000004463c	cld
000000000004463d	.byte 0xff, 0xff #bad opcode
000000000004463f	jmp	*0xffadffff(%rdi,%rdi,8)
0000000000044646	.byte 0xff, 0xff #bad opcode
0000000000044648	movb	$0xff,%dh
000000000004464a	.byte 0xff, 0xff #bad opcode
000000000004464c	movl	$0xc8ffffff,%edi
0000000000044651	.byte 0xff, 0xff #bad opcode
0000000000044653	call	*%rcx
0000000000044655	.byte 0xff, 0xff #bad opcode
0000000000044657	lcalll	*%edx
0000000000044659	.byte 0xff, 0xff #bad opcode
000000000004465b	jmp	*%rbx
000000000004465d	.byte 0xff, 0xff #bad opcode
000000000004465f	ljmpl	*%esp
0000000000044661	.byte 0xff, 0xff #bad opcode
0000000000044663	call	*0x48(%rbp)
0000000000044666	movl	%esp,%ebp
0000000000044668	pushq	%r15
000000000004466a	pushq	%r14
000000000004466c	pushq	%r13
000000000004466e	pushq	%r12
0000000000044670	pushq	%rbx
0000000000044671	subq	$0x28,%rsp
0000000000044675	movq	%rdi,%rbx
0000000000044678	movq	0x00063dd1(%rip),%rax
000000000004467f	movq	%rax,0xd0(%rbp)
0000000000044683	leaq	0x00063ca6(%rip),%rsi
000000000004468a	call	*0x00063ca0(%rip)
0000000000044690	movq	%rax,%rdi
0000000000044693	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000044698	movq	%rax,%r12
000000000004469b	movq	0x0006ac6e(%rip),%rax
00000000000446a2	movq	(%rbx,%rax),%rax
00000000000446a6	movq	%rax,0xc8(%rbp)
00000000000446aa	movq	0x0006ac4f(%rip),%rax
00000000000446b1	movl	(%rbx,%rax),%edx
00000000000446b4	movq	0x0003fa1d(%rip),%r15
00000000000446bb	movq	0x00062e2e(%rip),%rsi
00000000000446c2	movq	0x00064487(%rip),%rdi
00000000000446c9	call	*%r15
00000000000446cc	movq	%rax,%r13
00000000000446cf	movq	0x00060fb2(%rip),%rsi
00000000000446d6	movq	%rbx,%rdi
00000000000446d9	call	*%r15
00000000000446dc	leaq	0x00063c2d(%rip),%rsi
00000000000446e3	movq	%rax,%rdi
00000000000446e6	call	*0x00063c24(%rip)
00000000000446ec	movq	%rax,%r14
00000000000446ef	movq	0x0006ac22(%rip),%rax
00000000000446f6	movl	(%rbx,%rax),%edx
00000000000446f9	movq	0x00062df0(%rip),%rsi
0000000000044700	movq	0x00064449(%rip),%rdi
0000000000044707	call	*%r15
000000000004470a	movq	0x00060467(%rip),%rsi
0000000000044711	leaq	0x00070f00(%rip),%rdx
0000000000044718	movq	%rax,0x10(%rsp)
000000000004471d	movq	%r14,0x08(%rsp)
0000000000044722	movq	%r13,(%rsp)
0000000000044726	movq	0xd0(%rbp),%rdi
000000000004472a	movq	%r12,%rcx
000000000004472d	movq	%rbx,%r8
0000000000044730	movq	0xc8(%rbp),%r9
0000000000044734	xorb	%al,%al
0000000000044736	call	*%r15
0000000000044739	addq	$0x28,%rsp
000000000004473d	popq	%rbx
000000000004473e	popq	%r12
0000000000044740	popq	%r13
0000000000044742	popq	%r14
0000000000044744	popq	%r15
0000000000044746	popq	%rbp
0000000000044747	ret
-[PBXLSModel contentDescriptionWithChildrenAtLevel:]:
0000000000044748	pushq	%rbp
0000000000044749	movq	%rsp,%rbp
000000000004474c	pushq	%r15
000000000004474e	pushq	%r14
0000000000044750	pushq	%r13
0000000000044752	pushq	%r12
0000000000044754	pushq	%rbx
0000000000044755	pushq	%rax
0000000000044756	movq	%rdx,%rbx
0000000000044759	movq	%rbx,0xd0(%rbp)
000000000004475d	movq	%rdi,%r15
0000000000044760	movq	0x00060529(%rip),%rsi
0000000000044767	movq	0x00063cca(%rip),%rdi
000000000004476e	movq	0x0003f963(%rip),%r14
0000000000044775	call	*%r14
0000000000044778	movq	%rax,%r12
000000000004477b	movq	0x00062d76(%rip),%rsi
0000000000044782	movq	%r15,%rdi
0000000000044785	movq	%rbx,%rdx
0000000000044788	call	*%r14
000000000004478b	movq	0x0006036e(%rip),%rsi
0000000000044792	movq	%r12,%rdi
0000000000044795	movq	%rax,%rdx
0000000000044798	call	*%r14
000000000004479b	movq	0x00062aa6(%rip),%rsi
00000000000447a2	movq	%r15,%rdi
00000000000447a5	call	*%r14
00000000000447a8	movq	0x00060351(%rip),%rsi
00000000000447af	movq	%r12,%rdi
00000000000447b2	movq	%rax,%rdx
00000000000447b5	call	*%r14
00000000000447b8	leaq	0x0006af59(%rip),%rdx
00000000000447bf	movq	0x0006033a(%rip),%rsi
00000000000447c6	movq	%r12,%rdi
00000000000447c9	call	*%r14
00000000000447cc	movq	0x00060eb5(%rip),%rsi
00000000000447d3	movq	%r15,%rdi
00000000000447d6	call	*%r14
00000000000447d9	leaq	0x00063b30(%rip),%rsi
00000000000447e0	movq	%rax,%rdi
00000000000447e3	call	*0x00063b27(%rip)
00000000000447e9	movq	%rax,%r13
00000000000447ec	testq	%r13,%r13
00000000000447ef	je	0x00044847
00000000000447f1	incq	0xd0(%rbp)
00000000000447f5	xorl	%ebx,%ebx
00000000000447f7	movq	0x0003f8da(%rip),%r14
00000000000447fe	movq	%r15,%rdi
0000000000044801	movq	0x00060e80(%rip),%rsi
0000000000044808	call	*%r14
000000000004480b	movq	%rax,%rdi
000000000004480e	leaq	0x00063b0b(%rip),%rsi
0000000000044815	movq	%rbx,%rdx
0000000000044818	call	*0x00063b02(%rip)
000000000004481e	movq	%rax,%rdi
0000000000044821	movq	0x00062cd8(%rip),%rsi
0000000000044828	movq	0xd0(%rbp),%rdx
000000000004482c	call	*%r14
000000000004482f	movq	%r12,%rdi
0000000000044832	movq	0x000602c7(%rip),%rsi
0000000000044839	movq	%rax,%rdx
000000000004483c	call	*%r14
000000000004483f	incq	%rbx
0000000000044842	cmpq	%rbx,%r13
0000000000044845	jne	0x000447fe
0000000000044847	movq	%r12,%rax
000000000004484a	addq	$0x08,%rsp
000000000004484e	popq	%rbx
000000000004484f	popq	%r12
0000000000044851	popq	%r13
0000000000044853	popq	%r14
0000000000044855	popq	%r15
0000000000044857	popq	%rbp
0000000000044858	ret
-[PBXLSModel description]:
0000000000044859	pushq	%rbp
000000000004485a	movq	%rsp,%rbp
000000000004485d	movq	0x00062c9c(%rip),%rsi
0000000000044864	movl	$0x00000001,%edx
0000000000044869	popq	%rbp
000000000004486a	jmp	*0x0003f868(%rip)
0000000000044870	nop
0000000000044871	nop
-[PBXLSModel addChildren:]:
0000000000044872	pushq	%rbp
0000000000044873	movq	%rsp,%rbp
0000000000044876	pushq	%r15
0000000000044878	pushq	%r14
000000000004487a	pushq	%r13
000000000004487c	pushq	%r12
000000000004487e	pushq	%rbx
000000000004487f	subq	$0x000000c8,%rsp
0000000000044886	movq	%rdx,%r13
0000000000044889	movq	%rdi,%r14
000000000004488c	movq	0x0003f80d(%rip),%rax
0000000000044893	movq	(%rax),%rax
0000000000044896	movq	%rax,0xd0(%rbp)
000000000004489a	xorps	%xmm0,%xmm0
000000000004489d	movaps	%xmm0,0xc0(%rbp)
00000000000448a1	movaps	%xmm0,0xb0(%rbp)
00000000000448a5	movaps	%xmm0,0xa0(%rbp)
00000000000448a9	movaps	%xmm0,0x90(%rbp)
00000000000448ad	leaq	0x00063acc(%rip),%rsi
00000000000448b4	leaq	0x90(%rbp),%rdx
00000000000448b8	leaq	0xffffff10(%rbp),%rcx
00000000000448bf	movq	%r13,%rdi
00000000000448c2	movl	$0x00000010,%r8d
00000000000448c8	call	*0x00063ab2(%rip)
00000000000448ce	movq	%rax,%rbx
00000000000448d1	testq	%rbx,%rbx
00000000000448d4	je	0x0004493a
00000000000448d6	movq	0xa0(%rbp),%rax
00000000000448da	movq	(%rax),%r12
00000000000448dd	xorl	%r15d,%r15d
00000000000448e0	movq	0xa0(%rbp),%rax
00000000000448e4	cmpq	%r12,(%rax)
00000000000448e7	je	0x000448f1
00000000000448e9	movq	%r13,%rdi
00000000000448ec	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
00000000000448f1	movq	0x98(%rbp),%rax
00000000000448f5	movq	(%rax,%r15,8),%rdi
00000000000448f9	movq	0x00062a80(%rip),%rsi
0000000000044900	movq	%r14,%rdx
0000000000044903	call	*0x0003f7cf(%rip)
0000000000044909	incq	%r15
000000000004490c	cmpq	%rbx,%r15
000000000004490f	jb	0x000448e0
0000000000044911	movq	%r13,%rdi
0000000000044914	leaq	0x00063a65(%rip),%rsi
000000000004491b	leaq	0x90(%rbp),%rdx
000000000004491f	leaq	0xffffff10(%rbp),%rcx
0000000000044926	movl	$0x00000010,%r8d
000000000004492c	call	*0x00063a4e(%rip)
0000000000044932	movq	%rax,%rbx
0000000000044935	testq	%rbx,%rbx
0000000000044938	jne	0x000448dd
000000000004493a	movq	0x00062bc7(%rip),%rsi
0000000000044941	movq	0x0003f790(%rip),%rbx
0000000000044948	movq	%r14,%rdi
000000000004494b	call	*%rbx
000000000004494d	movq	0x00060b8c(%rip),%rsi
0000000000044954	movq	%rax,%rdi
0000000000044957	movq	%r13,%rdx
000000000004495a	call	*%rbx
000000000004495c	movq	0x0003f73d(%rip),%rax
0000000000044963	movq	(%rax),%rax
0000000000044966	cmpq	0xd0(%rbp),%rax
000000000004496a	jne	0x0004497e
000000000004496c	addq	$0x000000c8,%rsp
0000000000044973	popq	%rbx
0000000000044974	popq	%r12
0000000000044976	popq	%r13
0000000000044978	popq	%r14
000000000004497a	popq	%r15
000000000004497c	popq	%rbp
000000000004497d	ret
000000000004497e	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
-[PBXLSModel insertChild:atIndex:]:
0000000000044983	pushq	%rbp
0000000000044984	movq	%rsp,%rbp
0000000000044987	pushq	%r15
0000000000044989	pushq	%r14
000000000004498b	pushq	%rbx
000000000004498c	pushq	%rax
000000000004498d	movq	%rcx,%r14
0000000000044990	movq	%rdx,%r15
0000000000044993	movq	%rdi,%rbx
0000000000044996	movq	0x000629e3(%rip),%rsi
000000000004499d	movq	%r15,%rdi
00000000000449a0	movq	%rbx,%rdx
00000000000449a3	call	*0x0003f72f(%rip)
00000000000449a9	movq	0x00062b58(%rip),%rsi
00000000000449b0	movq	%rbx,%rdi
00000000000449b3	call	*0x0003f71f(%rip)
00000000000449b9	movq	0x00062068(%rip),%rsi
00000000000449c0	movq	%rax,%rdi
00000000000449c3	movq	%r15,%rdx
00000000000449c6	movq	%r14,%rcx
00000000000449c9	movq	0x0003f708(%rip),%rax
00000000000449d0	addq	$0x08,%rsp
00000000000449d4	popq	%rbx
00000000000449d5	popq	%r14
00000000000449d7	popq	%r15
00000000000449d9	popq	%rbp
00000000000449da	jmp	*%rax
00000000000449dc	nop
-[PBXLSModel removeChildAtIndex:]:
00000000000449dd	pushq	%rbp
00000000000449de	movq	%rsp,%rbp
00000000000449e1	pushq	%r14
00000000000449e3	pushq	%rbx
00000000000449e4	movq	%rdx,%r14
00000000000449e7	movq	%rdi,%rbx
00000000000449ea	movq	0x00060c97(%rip),%rsi
00000000000449f1	call	*0x0003f6e1(%rip)
00000000000449f7	leaq	0x00063912(%rip),%rsi
00000000000449fe	movq	%rax,%rdi
0000000000044a01	call	*0x00063909(%rip)
0000000000044a07	cmpq	%r14,%rax
0000000000044a0a	ja	0x00044a11
0000000000044a0c	popq	%rbx
0000000000044a0d	popq	%r14
0000000000044a0f	popq	%rbp
0000000000044a10	ret
0000000000044a11	movq	0x00060c70(%rip),%rsi
0000000000044a18	movq	%rbx,%rdi
0000000000044a1b	call	*0x0003f6b7(%rip)
0000000000044a21	leaq	0x000638f8(%rip),%rsi
0000000000044a28	movq	%rax,%rdi
0000000000044a2b	movq	%r14,%rdx
0000000000044a2e	call	*0x000638ec(%rip)
0000000000044a34	movq	0x00062945(%rip),%rsi
0000000000044a3b	movq	%rax,%rdi
0000000000044a3e	xorl	%edx,%edx
0000000000044a40	call	*0x0003f692(%rip)
0000000000044a46	movq	0x00062abb(%rip),%rsi
0000000000044a4d	movq	%rbx,%rdi
0000000000044a50	call	*0x0003f682(%rip)
0000000000044a56	movq	0x0006018b(%rip),%rsi
0000000000044a5d	movq	%rax,%rdi
0000000000044a60	movq	%r14,%rdx
0000000000044a63	movq	0x0003f66e(%rip),%rax
0000000000044a6a	popq	%rbx
0000000000044a6b	popq	%r14
0000000000044a6d	popq	%rbp
0000000000044a6e	jmp	*%rax
-[PBXLSModel removeChildrenInRange:]:
0000000000044a70	pushq	%rbp
0000000000044a71	movq	%rsp,%rbp
0000000000044a74	movq	0x0006236d(%rip),%rsi
0000000000044a7b	movl	$0x00000001,%r8d
0000000000044a81	popq	%rbp
0000000000044a82	jmp	*0x0003f650(%rip)
0000000000044a88	nop
-[PBXLSModel replaceChildAtIndex:withChild:]:
0000000000044a89	pushq	%rbp
0000000000044a8a	movq	%rsp,%rbp
0000000000044a8d	movq	0x000622bc(%rip),%rsi
0000000000044a94	movl	$0x00000001,%r8d
0000000000044a9a	popq	%rbp
0000000000044a9b	jmp	*0x0003f637(%rip)
0000000000044aa1	nop
0000000000044aa2	nop
0000000000044aa3	nop
0000000000044aa4	nop
0000000000044aa5	nop
0000000000044aa6	nop
0000000000044aa7	nop
0000000000044aa8	nop
-[PBXLSProcess debugger:removeThreadGroup:]:
0000000000044aa9	pushq	%rbp
0000000000044aaa	movq	%rsp,%rbp
0000000000044aad	movq	0x00060a74(%rip),%rsi
0000000000044ab4	movq	%rcx,%rdx
0000000000044ab7	popq	%rbp
0000000000044ab8	jmp	*0x0003f61a(%rip)
0000000000044abe	nop
0000000000044abf	nop
0000000000044ac0	nop
0000000000044ac1	nop
0000000000044ac2	nop
0000000000044ac3	nop
0000000000044ac4	nop
0000000000044ac5	nop
0000000000044ac6	nop
0000000000044ac7	nop
0000000000044ac8	nop
0000000000044ac9	nop
0000000000044aca	nop
-[PBXLSProcess _isFunctionInlined:]:
0000000000044acb	pushq	%rbp
0000000000044acc	movq	%rsp,%rbp
0000000000044acf	movq	0x0006034a(%rip),%rsi
0000000000044ad6	leaq	0x00070b5b(%rip),%rax
0000000000044add	movq	%rdx,%rdi
0000000000044ae0	movq	%rax,%rdx
0000000000044ae3	call	*0x0003f5ef(%rip)
0000000000044ae9	movsbl	%al,%eax
0000000000044aec	popq	%rbp
0000000000044aed	ret
+[PBXLSProcess _sequenceClassesForUpdateStackSequenceToJumpInFront]:
0000000000044aee	pushq	%rbp
0000000000044aef	movq	%rsp,%rbp
0000000000044af2	cmpq	$0xff,0x00072bd6(%rip)
0000000000044afa	je	0x00044b0f
0000000000044afc	leaq	0x00072bcd(%rip),%rdi
0000000000044b03	leaq	0x00072666(%rip),%rsi
0000000000044b0a	callq	0x0004e69e	; symbol stub for: _dispatch_once
0000000000044b0f	movq	0x00072bb2(%rip),%rax
0000000000044b16	popq	%rbp
0000000000044b17	ret
___67+[PBXLSProcess _sequenceClassesForUpdateStackSequenceToJumpInFront]_block_invoke_0:
0000000000044b18	pushq	%rbp
0000000000044b19	movq	%rsp,%rbp
0000000000044b1c	pushq	%r15
0000000000044b1e	pushq	%r14
0000000000044b20	pushq	%r12
0000000000044b22	pushq	%rbx
0000000000044b23	movq	0x00063b46(%rip),%r14
0000000000044b2a	movq	0x00063c8f(%rip),%rdi
0000000000044b31	leaq	0x000637f8(%rip),%r12
0000000000044b38	movq	%r12,%rsi
0000000000044b3b	call	*0x000637ef(%rip)
0000000000044b41	movq	%rax,%r15
0000000000044b44	movq	0x00063f05(%rip),%rdi
0000000000044b4b	movq	%r12,%rsi
0000000000044b4e	call	*0x000637dc(%rip)
0000000000044b54	movq	%rax,%rbx
0000000000044b57	movq	0x00063c6a(%rip),%rdi
0000000000044b5e	movq	%r12,%rsi
0000000000044b61	call	*0x000637c9(%rip)
0000000000044b67	movq	0x000626d2(%rip),%rsi
0000000000044b6e	movq	%r14,%rdi
0000000000044b71	movq	%r15,%rdx
0000000000044b74	movq	%rbx,%rcx
0000000000044b77	movq	%rax,%r8
0000000000044b7a	xorl	%r9d,%r9d
0000000000044b7d	xorb	%al,%al
0000000000044b7f	call	*0x0003f553(%rip)
0000000000044b85	leaq	0x00072b3c(%rip),%rsi
0000000000044b8c	movq	%rax,%rdi
0000000000044b8f	popq	%rbx
0000000000044b90	popq	%r12
0000000000044b92	popq	%r14
0000000000044b94	popq	%r15
0000000000044b96	popq	%rbp
0000000000044b97	jmp	0x0004e602	; symbol stub for: _objc_assign_global
0000000000044b9c	nop
0000000000044b9d	nop
0000000000044b9e	nop
0000000000044b9f	nop
___copy_helper_block_:
0000000000044ba0	pushq	%rbp
0000000000044ba1	movq	%rsp,%rbp
0000000000044ba4	addq	$0x20,%rdi
0000000000044ba8	movq	0x20(%rsi),%rsi
0000000000044bac	movl	$0x00000003,%edx
0000000000044bb1	popq	%rbp
0000000000044bb2	jmp	0x0004e662	; symbol stub for: __Block_object_assign
0000000000044bb7	nopw	0x00000000(%rax,%rax)
___destroy_helper_block_:
0000000000044bc0	pushq	%rbp
0000000000044bc1	movq	%rsp,%rbp
0000000000044bc4	movq	0x20(%rdi),%rdi
0000000000044bc8	movl	$0x00000003,%esi
0000000000044bcd	popq	%rbp
0000000000044bce	jmp	0x0004e668	; symbol stub for: __Block_object_dispose
0000000000044bd3	nop
0000000000044bd4	nop
0000000000044bd5	nop
0000000000044bd6	nop
-[PBXLSProcess threadPopUpIsEnabled]:
0000000000044bd7	pushq	%rbp
0000000000044bd8	movq	%rsp,%rbp
0000000000044bdb	movq	0x0006a75e(%rip),%rax
0000000000044be2	cmpb	$0x00,(%rdi,%rax)
0000000000044be6	sete	%al
0000000000044be9	movzbl	%al,%eax
0000000000044bec	popq	%rbp
0000000000044bed	ret
-[PBXLSProcess isRunning]:
0000000000044bee	pushq	%rbp
0000000000044bef	movq	%rsp,%rbp
0000000000044bf2	movq	0x0006a747(%rip),%rax
0000000000044bf9	movsbl	(%rdi,%rax),%eax
0000000000044bfd	popq	%rbp
0000000000044bfe	ret
0000000000044bff	nop
0000000000044c00	nop
0000000000044c01	nop
0000000000044c02	nop
0000000000044c03	nop
0000000000044c04	nop
-[PBXLSProcess nonRunningThreads]:
0000000000044c05	pushq	%rbp
0000000000044c06	movq	%rsp,%rbp
0000000000044c09	movq	0x000629d0(%rip),%rsi
0000000000044c10	movl	$0x00000001,%edx
0000000000044c15	popq	%rbp
0000000000044c16	jmp	*0x0003f4bc(%rip)
0000000000044c1c	nop
0000000000044c1d	nop
0000000000044c1e	nop
0000000000044c1f	nop
0000000000044c20	nop
0000000000044c21	nop
0000000000044c22	nop
0000000000044c23	nop
0000000000044c24	nop
0000000000044c25	nop
0000000000044c26	nop
0000000000044c27	nop
0000000000044c28	nop
0000000000044c29	nop
-[PBXLSProcess evaluationSafetyErrorMsg]:
0000000000044c2a	pushq	%rbp
0000000000044c2b	movq	%rsp,%rbp
0000000000044c2e	movq	0x0006a71b(%rip),%rax
0000000000044c35	movq	(%rdi,%rax),%rax
0000000000044c39	popq	%rbp
0000000000044c3a	ret
0000000000044c3b	nop
0000000000044c3c	nop
0000000000044c3d	nop
0000000000044c3e	nop
-[PBXLSProcess setEvaluationSafetyErrorMsg:]:
0000000000044c3f	pushq	%rbp
0000000000044c40	movq	%rsp,%rbp
0000000000044c43	movq	%rdi,%rax
0000000000044c46	movq	0x0006a6fb(%rip),%rcx
0000000000044c4d	testq	%rdx,%rdx
0000000000044c50	jne	0x00044c5b
0000000000044c52	movl	$0x00000001,(%rax,%rcx)
0000000000044c59	jmp	0x00044c6f
0000000000044c5b	movl	$0x00000002,(%rax,%rcx)
0000000000044c62	movq	0x0006a6e7(%rip),%rcx
0000000000044c69	cmpq	%rdx,(%rax,%rcx)
0000000000044c6d	jne	0x00044c71
0000000000044c6f	popq	%rbp
0000000000044c70	ret
0000000000044c71	addq	%rax,%rcx
0000000000044c74	subq	%rax,%rcx
0000000000044c77	movq	%rdx,%rdi
0000000000044c7a	movq	%rax,%rsi
0000000000044c7d	movq	%rcx,%rdx
0000000000044c80	popq	%rbp
0000000000044c81	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000044c86	nop
0000000000044c87	nop
0000000000044c88	nop
0000000000044c89	nop
-[PBXLSProcess exitStatus]:
0000000000044c8a	pushq	%rbp
0000000000044c8b	movq	%rsp,%rbp
0000000000044c8e	movq	0x0006a6cb(%rip),%rax
0000000000044c95	movl	(%rdi,%rax),%eax
0000000000044c98	popq	%rbp
0000000000044c99	ret
0000000000044c9a	nop
0000000000044c9b	nop
0000000000044c9c	nop
0000000000044c9d	nop
0000000000044c9e	nop
0000000000044c9f	nop
0000000000044ca0	nop
0000000000044ca1	nop
0000000000044ca2	nop
0000000000044ca3	nop
0000000000044ca4	nop
0000000000044ca5	nop
0000000000044ca6	nop
-[PBXLSStackFrame dealloc]:
0000000000044ca7	pushq	%rbp
0000000000044ca8	movq	%rsp,%rbp
0000000000044cab	pushq	%rbx
0000000000044cac	pushq	%rax
0000000000044cad	movq	%rdi,%rbx
0000000000044cb0	movq	0x0006a6c9(%rip),%rdx
0000000000044cb7	xorl	%edi,%edi
0000000000044cb9	movq	%rbx,%rsi
0000000000044cbc	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000044cc1	movq	0x0006a6c0(%rip),%rax
0000000000044cc8	movq	(%rbx,%rax),%rdi
0000000000044ccc	testq	%rdi,%rdi
0000000000044ccf	jne	0x00044cd8
0000000000044cd1	addq	$0x08,%rsp
0000000000044cd5	popq	%rbx
0000000000044cd6	popq	%rbp
0000000000044cd7	ret
0000000000044cd8	movq	0x00062909(%rip),%rsi
0000000000044cdf	call	*0x0003f3f3(%rip)
0000000000044ce5	movq	0x0006a69c(%rip),%rdx
0000000000044cec	xorl	%edi,%edi
0000000000044cee	movq	%rbx,%rsi
0000000000044cf1	addq	$0x08,%rsp
0000000000044cf5	popq	%rbx
0000000000044cf6	popq	%rbp
0000000000044cf7	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXLSStackFrame displayStackFrameInfo]:
0000000000044cfc	pushq	%rbp
0000000000044cfd	movq	%rsp,%rbp
0000000000044d00	pushq	%r15
0000000000044d02	pushq	%r14
0000000000044d04	pushq	%r13
0000000000044d06	pushq	%r12
0000000000044d08	pushq	%rbx
0000000000044d09	subq	$0x18,%rsp
0000000000044d0d	movq	%rdi,%rbx
0000000000044d10	movq	0x000611a9(%rip),%rsi
0000000000044d17	call	*0x0003f3bb(%rip)
0000000000044d1d	testq	%rax,%rax
0000000000044d20	je	0x00044e00
0000000000044d26	movq	0x00060573(%rip),%rsi
0000000000044d2d	movq	%rbx,%rdi
0000000000044d30	call	*0x0003f3a2(%rip)
0000000000044d36	testq	%rax,%rax
0000000000044d39	je	0x00044e1e
0000000000044d3f	movq	0x0006055a(%rip),%rsi
0000000000044d46	movq	%rbx,%rdi
0000000000044d49	call	*0x0003f389(%rip)
0000000000044d4f	leaq	0x0006359a(%rip),%rsi
0000000000044d56	movq	%rax,%rdi
0000000000044d59	call	*0x00063591(%rip)
0000000000044d5f	testq	%rax,%rax
0000000000044d62	je	0x00044e1e
0000000000044d68	movq	0x00060539(%rip),%rsi
0000000000044d6f	movq	%rbx,%rdi
0000000000044d72	call	*0x0003f360(%rip)
0000000000044d78	testq	%rax,%rax
0000000000044d7b	jle	0x00044e1e
0000000000044d81	movq	0x00060518(%rip),%rsi
0000000000044d88	movq	0x0003f349(%rip),%r14
0000000000044d8f	movq	%rbx,%rdi
0000000000044d92	call	*%r14
0000000000044d95	movq	0x00061164(%rip),%rsi
0000000000044d9c	movq	%rax,%rdi
0000000000044d9f	call	*%r14
0000000000044da2	movq	%rax,0xd0(%rbp)
0000000000044da6	movq	0x000636a3(%rip),%r15
0000000000044dad	movq	0x0006110c(%rip),%rsi
0000000000044db4	movq	%rbx,%rdi
0000000000044db7	call	*%r14
0000000000044dba	movq	%rax,%r12
0000000000044dbd	movq	0x00061124(%rip),%rsi
0000000000044dc4	movq	%rbx,%rdi
0000000000044dc7	call	*%r14
0000000000044dca	movq	%rax,%r13
0000000000044dcd	movq	0x000604d4(%rip),%rsi
0000000000044dd4	movq	%rbx,%rdi
0000000000044dd7	call	*%r14
0000000000044dda	leaq	0x000708f7(%rip),%rdx
0000000000044de1	movq	0x0005fd90(%rip),%rsi
0000000000044de8	movq	%rax,(%rsp)
0000000000044dec	movq	%r15,%rdi
0000000000044def	movq	%r12,%rcx
0000000000044df2	movq	%r13,%r8
0000000000044df5	movq	0xd0(%rbp),%r9
0000000000044df9	xorb	%al,%al
0000000000044dfb	call	*%r14
0000000000044dfe	jmp	0x00044e65
0000000000044e00	movq	0x000610e1(%rip),%rsi
0000000000044e07	movq	%rbx,%rdi
0000000000044e0a	addq	$0x18,%rsp
0000000000044e0e	popq	%rbx
0000000000044e0f	popq	%r12
0000000000044e11	popq	%r13
0000000000044e13	popq	%r14
0000000000044e15	popq	%r15
0000000000044e17	popq	%rbp
0000000000044e18	jmp	*0x0003f2ba(%rip)
0000000000044e1e	movq	0x0006362b(%rip),%r14
0000000000044e25	movq	0x00061094(%rip),%rsi
0000000000044e2c	movq	0x0003f2a5(%rip),%r12
0000000000044e33	movq	%rbx,%rdi
0000000000044e36	call	*%r12
0000000000044e39	movq	%rax,%r15
0000000000044e3c	movq	0x000610a5(%rip),%rsi
0000000000044e43	movq	%rbx,%rdi
0000000000044e46	call	*%r12
0000000000044e49	leaq	0x000708a8(%rip),%rdx
0000000000044e50	movq	0x0005fd21(%rip),%rsi
0000000000044e57	movq	%r14,%rdi
0000000000044e5a	movq	%r15,%rcx
0000000000044e5d	movq	%rax,%r8
0000000000044e60	xorb	%al,%al
0000000000044e62	call	*%r12
0000000000044e65	addq	$0x18,%rsp
0000000000044e69	popq	%rbx
0000000000044e6a	popq	%r12
0000000000044e6c	popq	%r13
0000000000044e6e	popq	%r14
0000000000044e70	popq	%r15
0000000000044e72	popq	%rbp
0000000000044e73	ret
-[PBXLSStackFrame _shouldUpdateDataValues:]:
0000000000044e74	pushq	%rbp
0000000000044e75	movq	%rsp,%rbp
0000000000044e78	pushq	%r14
0000000000044e7a	pushq	%rbx
0000000000044e7b	movq	%rdx,%rbx
0000000000044e7e	movq	%rdi,%r14
0000000000044e81	movq	0x00062770(%rip),%rsi
0000000000044e88	movq	%rbx,%rdi
0000000000044e8b	call	*0x0003f247(%rip)
0000000000044e91	testb	%al,%al
0000000000044e93	je	0x00044ed3
0000000000044e95	movq	0x00062764(%rip),%rsi
0000000000044e9c	movq	%rbx,%rdi
0000000000044e9f	call	*0x0003f233(%rip)
0000000000044ea5	cmpl	$0x01,%eax
0000000000044ea8	jne	0x00044efa
0000000000044eaa	movq	0x00062757(%rip),%rsi
0000000000044eb1	movq	%r14,%rdi
0000000000044eb4	call	*0x0003f21e(%rip)
0000000000044eba	movq	0x00060d97(%rip),%rsi
0000000000044ec1	movq	%r14,%rdi
0000000000044ec4	call	*0x0003f20e(%rip)
0000000000044eca	movq	0x0006273f(%rip),%rsi
0000000000044ed1	jmp	0x00044eea
0000000000044ed3	movq	0x00060d7e(%rip),%rsi
0000000000044eda	movq	%r14,%rdi
0000000000044edd	call	*0x0003f1f5(%rip)
0000000000044ee3	movq	0x0006272e(%rip),%rsi
0000000000044eea	movq	%rax,%rdi
0000000000044eed	movq	0x0003f1e4(%rip),%rax
0000000000044ef4	popq	%rbx
0000000000044ef5	popq	%r14
0000000000044ef7	popq	%rbp
0000000000044ef8	jmp	*%rax
0000000000044efa	popq	%rbx
0000000000044efb	popq	%r14
0000000000044efd	popq	%rbp
0000000000044efe	ret
0000000000044eff	nop
0000000000044f00	nop
0000000000044f01	nop
0000000000044f02	nop
0000000000044f03	nop
0000000000044f04	nop
0000000000044f05	nop
0000000000044f06	nop
0000000000044f07	nop
0000000000044f08	nop
0000000000044f09	nop
-[PBXLSStackFrame invalidateContainerDataValue]:
0000000000044f0a	pushq	%rbp
0000000000044f0b	movq	%rsp,%rbp
0000000000044f0e	pushq	%rbx
0000000000044f0f	pushq	%rax
0000000000044f10	movq	%rdi,%rbx
0000000000044f13	movq	0x0006a46e(%rip),%rax
0000000000044f1a	movq	(%rbx,%rax),%rdi
0000000000044f1e	movq	0x000626c3(%rip),%rsi
0000000000044f25	call	*0x0003f1ad(%rip)
0000000000044f2b	movq	0x00060696(%rip),%rsi
0000000000044f32	movq	%rbx,%rdi
0000000000044f35	call	*0x0003f19d(%rip)
0000000000044f3b	movq	0x000626f6(%rip),%rsi
0000000000044f42	movq	%rax,%rdi
0000000000044f45	movq	%rbx,%rdx
0000000000044f48	call	*0x0003f18a(%rip)
0000000000044f4e	movq	0x0006a433(%rip),%rdx
0000000000044f55	movq	%rax,%rdi
0000000000044f58	movq	%rbx,%rsi
0000000000044f5b	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000044f60	movq	0x0006a421(%rip),%rax
0000000000044f67	movq	(%rbx,%rax),%rdi
0000000000044f6b	movq	0x0006066e(%rip),%rsi
0000000000044f72	xorl	%edx,%edx
0000000000044f74	call	*0x0003f15e(%rip)
0000000000044f7a	movq	0x00060cd7(%rip),%rsi
0000000000044f81	movq	%rbx,%rdi
0000000000044f84	call	*0x0003f14e(%rip)
0000000000044f8a	movq	0x00062687(%rip),%rsi
0000000000044f91	movq	%rax,%rdi
0000000000044f94	movq	0x0003f13d(%rip),%rax
0000000000044f9b	addq	$0x08,%rsp
0000000000044f9f	popq	%rbx
0000000000044fa0	popq	%rbp
0000000000044fa1	jmp	*%rax
0000000000044fa3	nop
0000000000044fa4	nop
0000000000044fa5	nop
0000000000044fa6	nop
0000000000044fa7	nop
___40-[PBXLSStackFrame ensureValidDataValues]_block_invoke_0:
0000000000044fa8	pushq	%rbp
0000000000044fa9	movq	%rsp,%rbp
0000000000044fac	movq	%rdi,%rax
0000000000044faf	movq	0x20(%rax),%rdi
0000000000044fb3	movq	0x28(%rax),%rdx
0000000000044fb7	movq	0x0006266a(%rip),%rsi
0000000000044fbe	popq	%rbp
0000000000044fbf	jmp	*0x0003f113(%rip)
0000000000044fc5	nopl	%cs:0x00000000(%rax,%rax)
___copy_helper_block_:
0000000000044fd0	pushq	%rbp
0000000000044fd1	movq	%rsp,%rbp
0000000000044fd4	pushq	%r14
0000000000044fd6	pushq	%rbx
0000000000044fd7	movq	%rsi,%r14
0000000000044fda	movq	%rdi,%rbx
0000000000044fdd	movq	0x20(%r14),%rsi
0000000000044fe1	leaq	0x20(%rbx),%rdi
0000000000044fe5	movl	$0x00000003,%edx
0000000000044fea	callq	0x0004e662	; symbol stub for: __Block_object_assign
0000000000044fef	addq	$0x28,%rbx
0000000000044ff3	movq	0x28(%r14),%rsi
0000000000044ff7	movq	%rbx,%rdi
0000000000044ffa	movl	$0x00000003,%edx
0000000000044fff	popq	%rbx
0000000000045000	popq	%r14
0000000000045002	popq	%rbp
0000000000045003	jmp	0x0004e662	; symbol stub for: __Block_object_assign
0000000000045008	nopl	0x00000000(%rax,%rax)
___destroy_helper_block_:
0000000000045010	pushq	%rbp
0000000000045011	movq	%rsp,%rbp
0000000000045014	pushq	%rbx
0000000000045015	pushq	%rax
0000000000045016	movq	%rdi,%rbx
0000000000045019	movq	0x20(%rbx),%rdi
000000000004501d	movl	$0x00000003,%esi
0000000000045022	callq	0x0004e668	; symbol stub for: __Block_object_dispose
0000000000045027	movq	0x28(%rbx),%rdi
000000000004502b	movl	$0x00000003,%esi
0000000000045030	addq	$0x08,%rsp
0000000000045034	popq	%rbx
0000000000045035	popq	%rbp
0000000000045036	jmp	0x0004e668	; symbol stub for: __Block_object_dispose
000000000004503b	nop
000000000004503c	nop
000000000004503d	nop
000000000004503e	nop
000000000004503f	nop
0000000000045040	nop
-[PBXLSStackFrame setVisibleDataItems:visibleRange:]:
0000000000045041	pushq	%rbp
0000000000045042	movq	%rsp,%rbp
0000000000045045	pushq	%r14
0000000000045047	pushq	%rbx
0000000000045048	movq	%rcx,%r14
000000000004504b	movq	%rdx,%rax
000000000004504e	movq	%rdi,%rbx
0000000000045051	movq	0x0006a360(%rip),%rdx
0000000000045058	movq	%rax,%rdi
000000000004505b	movq	%rbx,%rsi
000000000004505e	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000045063	movq	0x0006a356(%rip),%rax
000000000004506a	movq	(%r14),%rcx
000000000004506d	movq	0x08(%r14),%rdx
0000000000045071	movq	%rdx,0x08(%rbx,%rax)
0000000000045076	movq	%rcx,(%rbx,%rax)
000000000004507a	popq	%rbx
000000000004507b	popq	%r14
000000000004507d	popq	%rbp
000000000004507e	ret
-[PBXLSStackFrame visibleDataItemsVisibleRange:]:
000000000004507f	pushq	%rbp
0000000000045080	movq	%rsp,%rbp
0000000000045083	testq	%rdx,%rdx
0000000000045086	je	0x0004509f
0000000000045088	movq	0x0006a331(%rip),%rcx
000000000004508f	movq	(%rdi,%rcx),%rax
0000000000045093	movq	0x08(%rdi,%rcx),%rcx
0000000000045098	movq	%rcx,0x08(%rdx)
000000000004509c	movq	%rax,(%rdx)
000000000004509f	movq	0x0006a312(%rip),%rax
00000000000450a6	movq	(%rdi,%rax),%rax
00000000000450aa	popq	%rbp
00000000000450ab	ret
-[PBXLSStackFrame disassemblyFrameName]:
00000000000450ac	pushq	%rbp
00000000000450ad	movq	%rsp,%rbp
00000000000450b0	movq	0x00062591(%rip),%rsi
00000000000450b7	leaq	0x0007067a(%rip),%rdx
00000000000450be	popq	%rbp
00000000000450bf	jmp	*0x0003f013(%rip)
-[PBXLSStackFrame mixedFrameName]:
00000000000450c5	pushq	%rbp
00000000000450c6	movq	%rsp,%rbp
00000000000450c9	movq	0x00062578(%rip),%rsi
00000000000450d0	leaq	0x00070681(%rip),%rdx
00000000000450d7	popq	%rbp
00000000000450d8	jmp	*0x0003effa(%rip)
-[PBXLSStackFrame frameNameWithPrefix:]:
00000000000450de	pushq	%rbp
00000000000450df	movq	%rsp,%rbp
00000000000450e2	pushq	%rbx
00000000000450e3	pushq	%rax
00000000000450e4	movq	%rdx,%rbx
00000000000450e7	movq	0x0006a2ba(%rip),%rax
00000000000450ee	movq	(%rdi,%rax),%r8
00000000000450f2	testq	%r8,%r8
00000000000450f5	jne	0x00045107
00000000000450f7	movq	0x00062552(%rip),%rsi
00000000000450fe	call	*0x0003efd4(%rip)
0000000000045104	movq	%rax,%r8
0000000000045107	movq	0x0005fa6a(%rip),%rsi
000000000004510e	movq	0x0006333b(%rip),%rdi
0000000000045115	leaq	0x0007065c(%rip),%rdx
000000000004511c	movq	%rbx,%rcx
000000000004511f	xorb	%al,%al
0000000000045121	addq	$0x08,%rsp
0000000000045125	popq	%rbx
0000000000045126	popq	%rbp
0000000000045127	jmp	*0x0003efab(%rip)
-[PBXLSStackFrame requestDisassembly:]:
000000000004512d	pushq	%rbp
000000000004512e	movq	%rsp,%rbp
0000000000045131	pushq	%r14
0000000000045133	pushq	%rbx
0000000000045134	movq	%rdx,%r14
0000000000045137	movq	%rdi,%rbx
000000000004513a	movq	0x00060487(%rip),%rsi
0000000000045141	call	*0x0003ef91(%rip)
0000000000045147	movq	0x0006250a(%rip),%rsi
000000000004514e	movq	%rax,%rdi
0000000000045151	movq	%rbx,%rdx
0000000000045154	xorl	%ecx,%ecx
0000000000045156	movq	%r14,%r8
0000000000045159	movq	0x0003ef78(%rip),%rax
0000000000045160	popq	%rbx
0000000000045161	popq	%r14
0000000000045163	popq	%rbp
0000000000045164	jmp	*%rax
0000000000045166	nop
0000000000045167	nop
0000000000045168	nop
0000000000045169	nop
000000000004516a	nop
000000000004516b	nop
000000000004516c	nop
000000000004516d	nop
000000000004516e	nop
000000000004516f	nop
0000000000045170	nop
0000000000045171	nop
0000000000045172	nop
0000000000045173	nop
0000000000045174	nop
-[PBXLSStackFrame disassemblyDocument]:
0000000000045175	pushq	%rbp
0000000000045176	movq	%rsp,%rbp
0000000000045179	movq	0x0006a200(%rip),%rax
0000000000045180	movq	(%rdi,%rax),%rax
0000000000045184	popq	%rbp
0000000000045185	ret
-[PBXLSThread description]:
0000000000045186	pushq	%rbp
0000000000045187	movq	%rsp,%rbp
000000000004518a	pushq	%r15
000000000004518c	pushq	%r14
000000000004518e	pushq	%r13
0000000000045190	pushq	%r12
0000000000045192	pushq	%rbx
0000000000045193	pushq	%rax
0000000000045194	movq	%rdi,%rbx
0000000000045197	movq	0x0006a252(%rip),%rax
000000000004519e	movq	(%rbx,%rax),%r14
00000000000451a2	movq	0x000632a7(%rip),%r15
00000000000451a9	movq	0x00061ed8(%rip),%rsi
00000000000451b0	movq	0x0003ef21(%rip),%r13
00000000000451b7	call	*%r13
00000000000451ba	movq	%rax,%r12
00000000000451bd	movq	0x0005fadc(%rip),%rsi
00000000000451c4	movq	%rbx,%rdi
00000000000451c7	call	*%r13
00000000000451ca	leaq	0x000705c7(%rip),%rdx
00000000000451d1	movq	0x0005f9a0(%rip),%rsi
00000000000451d8	movq	%rax,(%rsp)
00000000000451dc	movq	%r15,%rdi
00000000000451df	movq	%rbx,%rcx
00000000000451e2	movq	%r14,%r8
00000000000451e5	movq	%r12,%r9
00000000000451e8	xorb	%al,%al
00000000000451ea	call	*%r13
00000000000451ed	addq	$0x08,%rsp
00000000000451f1	popq	%rbx
00000000000451f2	popq	%r12
00000000000451f4	popq	%r13
00000000000451f6	popq	%r14
00000000000451f8	popq	%r15
00000000000451fa	popq	%rbp
00000000000451fb	ret
-[PBXLSThread displayStatus]:
00000000000451fc	pushq	%rbp
00000000000451fd	movq	%rsp,%rbp
0000000000045200	movq	0x0006a1d1(%rip),%rax
0000000000045207	movl	(%rdi,%rax),%eax
000000000004520a	decl	%eax
000000000004520c	cmpl	$0x05,%eax
000000000004520f	jbe	0x0004521d
0000000000045211	leaq	0x0006ff00(%rip),%rax
0000000000045218	jmp	0x000452bf
000000000004521d	leaq	0x000000a0(%rip),%rcx
0000000000045224	movslq	(%rcx,%rax,4),%rax
0000000000045228	addq	%rcx,%rax
000000000004522b	jmp	*%rax
000000000004522d	movq	0x0006a1ac(%rip),%rax
0000000000045234	movl	(%rdi,%rax),%ecx
0000000000045237	cmpq	$0x03,%rcx
000000000004523b	ja	0x000452b8
000000000004523d	leaq	0x00070574(%rip),%rax
0000000000045244	leaq	0x00000091(%rip),%rdx
000000000004524b	movslq	(%rdx,%rcx,4),%rcx
000000000004524f	addq	%rdx,%rcx
0000000000045252	jmp	*%rcx
0000000000045254	leaq	0x0007057d(%rip),%rax
000000000004525b	jmp	0x000452bf
000000000004525d	leaq	0x00070594(%rip),%rax
0000000000045264	jmp	0x000452bf
0000000000045266	leaq	0x000705ab(%rip),%rax
000000000004526d	jmp	0x000452bf
000000000004526f	movq	0x0006a16a(%rip),%rax
0000000000045276	movl	(%rdi,%rax),%eax
0000000000045279	testl	%eax,%eax
000000000004527b	jne	0x00045286
000000000004527d	leaq	0x000705b4(%rip),%rax
0000000000045284	jmp	0x000452bf
0000000000045286	cmpl	$0x01,%eax
0000000000045289	jne	0x000452b8
000000000004528b	leaq	0x000705c6(%rip),%rax
0000000000045292	jmp	0x000452bf
0000000000045294	leaq	0x000705dd(%rip),%rax
000000000004529b	jmp	0x000452bf
000000000004529d	leaq	0x000705f4(%rip),%rax
00000000000452a4	jmp	0x000452bf
00000000000452a6	leaq	0x0007060b(%rip),%rax
00000000000452ad	jmp	0x000452bf
00000000000452af	leaq	0x00070622(%rip),%rax
00000000000452b6	jmp	0x000452bf
00000000000452b8	leaq	0x0006a679(%rip),%rax
00000000000452bf	popq	%rbp
00000000000452c0	ret
00000000000452c1	nopl	(%rax)
00000000000452c4	imull	$0xffabffff,%edi,%edi
00000000000452ca	.byte 0xff, 0xff #bad opcode
00000000000452cc	sarb	%bh
00000000000452ce	.byte 0xff, 0xff #bad opcode
00000000000452d0	fcos
00000000000452d2	.byte 0xff, 0xff #bad opcode
00000000000452d4	loop	0x000452d5
00000000000452d6	.byte 0xff, 0xff #bad opcode
00000000000452d8	jmp	0x000452d9
00000000000452da	.byte 0xff, 0xff #bad opcode
00000000000452dc	jrcxz	0x000452dd
00000000000452de	.byte 0xff, 0xff #bad opcode
00000000000452e0	js	0x000452e1
00000000000452e2	.byte 0xff, 0xff #bad opcode
00000000000452e4	cmpl	$0xff8affff,%edi
00000000000452ea	.byte 0xff, 0xff #bad opcode
00000000000452ec	nop
-[PBXLSThread setCurrentStackFrame:]:
00000000000452ed	pushq	%rbp
00000000000452ee	movq	%rsp,%rbp
00000000000452f1	pushq	%r15
00000000000452f3	pushq	%r14
00000000000452f5	pushq	%rbx
00000000000452f6	pushq	%rax
00000000000452f7	movq	%rdx,%r14
00000000000452fa	movq	%rdi,%rbx
00000000000452fd	movq	0x000602c4(%rip),%rsi
0000000000045304	movq	0x0003edcd(%rip),%r15
000000000004530b	call	*%r15
000000000004530e	movq	0x0005fadb(%rip),%rsi
0000000000045315	movq	%rax,%rdi
0000000000045318	call	*%r15
000000000004531b	movq	0x0005fba6(%rip),%rsi
0000000000045322	movq	%rax,%rdi
0000000000045325	call	*%r15
0000000000045328	cmpq	%rbx,%rax
000000000004532b	je	0x00045338
000000000004532d	addq	$0x08,%rsp
0000000000045331	popq	%rbx
0000000000045332	popq	%r14
0000000000045334	popq	%r15
0000000000045336	popq	%rbp
0000000000045337	ret
0000000000045338	movq	0x00060289(%rip),%rsi
000000000004533f	movq	%rbx,%rdi
0000000000045342	call	*0x0003ed90(%rip)
0000000000045348	movq	0x0005faa1(%rip),%rsi
000000000004534f	movq	%rax,%rdi
0000000000045352	call	*0x0003ed80(%rip)
0000000000045358	movq	0x00060809(%rip),%rsi
000000000004535f	movq	%rax,%rdi
0000000000045362	call	*0x0003ed70(%rip)
0000000000045368	movq	%rax,%rbx
000000000004536b	movq	0x000608e6(%rip),%rsi
0000000000045372	movq	%r14,%rdi
0000000000045375	call	*0x0003ed5d(%rip)
000000000004537b	movq	0x000608de(%rip),%rsi
0000000000045382	movq	%rbx,%rdi
0000000000045385	movq	%rax,%rdx
0000000000045388	movq	0x0003ed49(%rip),%rax
000000000004538f	addq	$0x08,%rsp
0000000000045393	popq	%rbx
0000000000045394	popq	%r14
0000000000045396	popq	%r15
0000000000045398	popq	%rbp
0000000000045399	jmp	*%rax
-[PBXLSThread invalidateFrameContainerValue]:
000000000004539b	pushq	%rbp
000000000004539c	movq	%rsp,%rbp
000000000004539f	movq	0x0005fec2(%rip),%rsi
00000000000453a6	call	*0x0003ed2c(%rip)
00000000000453ac	movq	0x00060a2d(%rip),%rsi
00000000000453b3	movq	0x00061a5e(%rip),%rdx
00000000000453ba	movq	%rax,%rdi
00000000000453bd	movq	0x0003ed14(%rip),%rax
00000000000453c4	popq	%rbp
00000000000453c5	jmp	*%rax
00000000000453c7	nop
00000000000453c8	nop
00000000000453c9	nop
-[PBXLSThread insertChild:atIndex:]:
00000000000453ca	pushq	%rbp
00000000000453cb	movq	%rsp,%rbp
00000000000453ce	subq	$0x10,%rsp
00000000000453d2	movq	%rdi,0xf0(%rbp)
00000000000453d6	movq	0x00063c43(%rip),%rax
00000000000453dd	movq	%rax,0xf8(%rbp)
00000000000453e1	movq	0x00062008(%rip),%rsi
00000000000453e8	leaq	0xf0(%rbp),%rdi
00000000000453ec	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
00000000000453f1	addq	$0x10,%rsp
00000000000453f5	popq	%rbp
00000000000453f6	ret
-[PBXLSThread removeAllChildren]:
00000000000453f7	pushq	%rbp
00000000000453f8	movq	%rsp,%rbp
00000000000453fb	pushq	%rbx
00000000000453fc	subq	$0x18,%rsp
0000000000045400	movq	%rdi,%rbx
0000000000045403	movq	0x00062296(%rip),%rsi
000000000004540a	xorl	%edx,%edx
000000000004540c	call	*0x0003ecc6(%rip)
0000000000045412	movq	%rbx,0xe8(%rbp)
0000000000045416	movq	0x00063c03(%rip),%rax
000000000004541d	movq	%rax,0xf0(%rbp)
0000000000045421	leaq	0xe8(%rbp),%rdi
0000000000045425	movq	0x0005fe04(%rip),%rsi
000000000004542c	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000045431	addq	$0x18,%rsp
0000000000045435	popq	%rbx
0000000000045436	popq	%rbp
0000000000045437	ret
0000000000045438	nop
0000000000045439	nop
-[PBXLSThread requestStepIntoInstruction]:
000000000004543a	pushq	%rbp
000000000004543b	movq	%rsp,%rbp
000000000004543e	pushq	%rbx
000000000004543f	pushq	%rax
0000000000045440	movq	%rdi,%rbx
0000000000045443	movq	0x0006017e(%rip),%rsi
000000000004544a	call	*0x0003ec88(%rip)
0000000000045450	movq	0x00062271(%rip),%rsi
0000000000045457	movq	%rax,%rdi
000000000004545a	movq	%rbx,%rdx
000000000004545d	movq	0x0003ec74(%rip),%rax
0000000000045464	addq	$0x08,%rsp
0000000000045468	popq	%rbx
0000000000045469	popq	%rbp
000000000004546a	jmp	*%rax
-[PBXLSThread requestStepOverInstruction]:
000000000004546c	pushq	%rbp
000000000004546d	movq	%rsp,%rbp
0000000000045470	pushq	%rbx
0000000000045471	pushq	%rax
0000000000045472	movq	%rdi,%rbx
0000000000045475	movq	0x0006014c(%rip),%rsi
000000000004547c	call	*0x0003ec56(%rip)
0000000000045482	movq	0x00062247(%rip),%rsi
0000000000045489	movq	%rax,%rdi
000000000004548c	movq	%rbx,%rdx
000000000004548f	movq	0x0003ec42(%rip),%rax
0000000000045496	addq	$0x08,%rsp
000000000004549a	popq	%rbx
000000000004549b	popq	%rbp
000000000004549c	jmp	*%rax
000000000004549e	nop
000000000004549f	nop
-[PBXLSThread requestStepUntilLineNumber:]:
00000000000454a0	pushq	%rbp
00000000000454a1	movq	%rsp,%rbp
00000000000454a4	pushq	%r14
00000000000454a6	pushq	%rbx
00000000000454a7	movq	%rdx,%r14
00000000000454aa	movq	%rdi,%rbx
00000000000454ad	movq	0x00060114(%rip),%rsi
00000000000454b4	call	*0x0003ec1e(%rip)
00000000000454ba	movq	0x0006222f(%rip),%rsi
00000000000454c1	movq	%rax,%rdi
00000000000454c4	movq	%rbx,%rdx
00000000000454c7	movq	%r14,%rcx
00000000000454ca	movq	0x0003ec07(%rip),%rax
00000000000454d1	popq	%rbx
00000000000454d2	popq	%r14
00000000000454d4	popq	%rbp
00000000000454d5	jmp	*%rax
-[PBXLSThread requestStepInOnThread]:
00000000000454d7	pushq	%rbp
00000000000454d8	movq	%rsp,%rbp
00000000000454db	pushq	%rbx
00000000000454dc	pushq	%rax
00000000000454dd	movq	%rdi,%rbx
00000000000454e0	movq	0x000600e1(%rip),%rsi
00000000000454e7	call	*0x0003ebeb(%rip)
00000000000454ed	movq	0x00062204(%rip),%rsi
00000000000454f4	movq	%rax,%rdi
00000000000454f7	movq	%rbx,%rdx
00000000000454fa	movq	0x0003ebd7(%rip),%rax
0000000000045501	addq	$0x08,%rsp
0000000000045505	popq	%rbx
0000000000045506	popq	%rbp
0000000000045507	jmp	*%rax
-[PBXLSThread requestStepOverOnThread]:
0000000000045509	pushq	%rbp
000000000004550a	movq	%rsp,%rbp
000000000004550d	pushq	%rbx
000000000004550e	pushq	%rax
000000000004550f	movq	%rdi,%rbx
0000000000045512	movq	0x000600af(%rip),%rsi
0000000000045519	call	*0x0003ebb9(%rip)
000000000004551f	movq	0x000621da(%rip),%rsi
0000000000045526	movq	%rax,%rdi
0000000000045529	movq	%rbx,%rdx
000000000004552c	movq	0x0003eba5(%rip),%rax
0000000000045533	addq	$0x08,%rsp
0000000000045537	popq	%rbx
0000000000045538	popq	%rbp
0000000000045539	jmp	*%rax
-[PBXLSThread requestContinue]:
000000000004553b	pushq	%rbp
000000000004553c	movq	%rsp,%rbp
000000000004553f	pushq	%rbx
0000000000045540	pushq	%rax
0000000000045541	movq	%rdi,%rbx
0000000000045544	movq	0x0006007d(%rip),%rsi
000000000004554b	call	*0x0003eb87(%rip)
0000000000045551	movq	0x000621b0(%rip),%rsi
0000000000045558	movq	%rax,%rdi
000000000004555b	movq	%rbx,%rdx
000000000004555e	movq	0x0003eb73(%rip),%rax
0000000000045565	addq	$0x08,%rsp
0000000000045569	popq	%rbx
000000000004556a	popq	%rbp
000000000004556b	jmp	*%rax
-[PBXLSThread requestResume]:
000000000004556d	pushq	%rbp
000000000004556e	movq	%rsp,%rbp
0000000000045571	pushq	%rbx
0000000000045572	pushq	%rax
0000000000045573	movq	%rdi,%rbx
0000000000045576	movq	0x0006004b(%rip),%rsi
000000000004557d	call	*0x0003eb55(%rip)
0000000000045583	movq	0x00062186(%rip),%rsi
000000000004558a	movq	%rax,%rdi
000000000004558d	movq	%rbx,%rdx
0000000000045590	movq	0x0003eb41(%rip),%rax
0000000000045597	addq	$0x08,%rsp
000000000004559b	popq	%rbx
000000000004559c	popq	%rbp
000000000004559d	jmp	*%rax
-[PBXLSThread requestSuspend]:
000000000004559f	pushq	%rbp
00000000000455a0	movq	%rsp,%rbp
00000000000455a3	pushq	%rbx
00000000000455a4	pushq	%rax
00000000000455a5	movq	%rdi,%rbx
00000000000455a8	movq	0x00060019(%rip),%rsi
00000000000455af	call	*0x0003eb23(%rip)
00000000000455b5	movq	0x0006215c(%rip),%rsi
00000000000455bc	movq	%rax,%rdi
00000000000455bf	movq	%rbx,%rdx
00000000000455c2	movq	0x0003eb0f(%rip),%rax
00000000000455c9	addq	$0x08,%rsp
00000000000455cd	popq	%rbx
00000000000455ce	popq	%rbp
00000000000455cf	jmp	*%rax
-[PBXLSThreadGroup displayName]:
00000000000455d1	pushq	%rbp
00000000000455d2	movq	%rsp,%rbp
00000000000455d5	movq	0x0005f6c4(%rip),%rsi
00000000000455dc	popq	%rbp
00000000000455dd	jmp	*0x0003eaf5(%rip)
-[PBXLSThreadGroup parentProcess]:
00000000000455e3	pushq	%rbp
00000000000455e4	movq	%rsp,%rbp
00000000000455e7	movq	0x00061d8a(%rip),%rsi
00000000000455ee	popq	%rbp
00000000000455ef	jmp	*0x0003eae3(%rip)
-[PBXLSThreadGroup debuggerDelete:]:
00000000000455f5	pushq	%rbp
00000000000455f6	movq	%rsp,%rbp
00000000000455f9	pushq	%r14
00000000000455fb	pushq	%rbx
00000000000455fc	movq	%rdx,%r14
00000000000455ff	movq	%rdi,%rbx
0000000000045602	movq	0x00062017(%rip),%rsi
0000000000045609	call	*0x0003eac9(%rip)
000000000004560f	movq	0x0006210a(%rip),%rsi
0000000000045616	movq	%rax,%rdi
0000000000045619	movq	%r14,%rdx
000000000004561c	movq	%rbx,%rcx
000000000004561f	movq	0x0003eab2(%rip),%rax
0000000000045626	popq	%rbx
0000000000045627	popq	%r14
0000000000045629	popq	%rbp
000000000004562a	jmp	*%rax
-[PBXLSType dealloc]:
000000000004562c	pushq	%rbp
000000000004562d	movq	%rsp,%rbp
0000000000045630	pushq	%rbx
0000000000045631	pushq	%rax
0000000000045632	movq	%rdi,%rbx
0000000000045635	movq	0x00061ccc(%rip),%rsi
000000000004563c	xorl	%edx,%edx
000000000004563e	call	*0x0003ea94(%rip)
0000000000045644	movq	0x00061cb5(%rip),%rsi
000000000004564b	movq	%rbx,%rdi
000000000004564e	xorl	%edx,%edx
0000000000045650	call	*0x0003ea82(%rip)
0000000000045656	movq	0x0005f83b(%rip),%rsi
000000000004565d	movq	%rbx,%rdi
0000000000045660	xorl	%edx,%edx
0000000000045662	movq	0x0003ea6f(%rip),%rax
0000000000045669	addq	$0x08,%rsp
000000000004566d	popq	%rbx
000000000004566e	popq	%rbp
000000000004566f	jmp	*%rax
-[PBXLSType description]:
0000000000045671	pushq	%rbp
0000000000045672	movq	%rsp,%rbp
0000000000045675	pushq	%r15
0000000000045677	pushq	%r14
0000000000045679	pushq	%rbx
000000000004567a	pushq	%rax
000000000004567b	movq	%rdi,%rbx
000000000004567e	movq	0x00062dcb(%rip),%r14
0000000000045685	leaq	0x00062ca4(%rip),%rsi
000000000004568c	call	*0x00062c9e(%rip)
0000000000045692	movq	%rax,%rdi
0000000000045695	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000004569a	movq	%rax,%r15
000000000004569d	movq	0x0005fde4(%rip),%rsi
00000000000456a4	movq	%rbx,%rdi
00000000000456a7	call	*0x0003ea2b(%rip)
00000000000456ad	leaq	0x0006e6c4(%rip),%rdx
00000000000456b4	movq	0x0005f4bd(%rip),%rsi
00000000000456bb	movq	%r14,%rdi
00000000000456be	movq	%r15,%rcx
00000000000456c1	movq	%rax,%r8
00000000000456c4	xorb	%al,%al
00000000000456c6	movq	0x0003ea0b(%rip),%r9
00000000000456cd	addq	$0x08,%rsp
00000000000456d1	popq	%rbx
00000000000456d2	popq	%r14
00000000000456d4	popq	%r15
00000000000456d6	popq	%rbp
00000000000456d7	jmp	*%r9
-[PBXLSType typeController]:
00000000000456da	pushq	%rbp
00000000000456db	movq	%rsp,%rbp
00000000000456de	movq	0x00069d43(%rip),%rax
00000000000456e5	movq	(%rdi,%rax),%rax
00000000000456e9	popq	%rbp
00000000000456ea	ret
-[PBXLSType isEqual:]:
00000000000456eb	pushq	%rbp
00000000000456ec	movq	%rsp,%rbp
00000000000456ef	pushq	%r15
00000000000456f1	pushq	%r14
00000000000456f3	pushq	%rbx
00000000000456f4	pushq	%rax
00000000000456f5	movq	%rdx,%rbx
00000000000456f8	movq	%rdi,%r14
00000000000456fb	xorb	%al,%al
00000000000456fd	testq	%rbx,%rbx
0000000000045700	je	0x0004576b
0000000000045702	leaq	0x00062c27(%rip),%rsi
0000000000045709	movq	%r14,%rdi
000000000004570c	call	*0x00062c1e(%rip)
0000000000045712	leaq	0x00062c27(%rip),%rsi
0000000000045719	movq	%rbx,%rdi
000000000004571c	movq	%rax,%rdx
000000000004571f	call	*0x00062c1b(%rip)
0000000000045725	movb	%al,%cl
0000000000045727	xorb	%al,%al
0000000000045729	testb	%cl,%cl
000000000004572b	je	0x0004576b
000000000004572d	movb	$0x01,%al
000000000004572f	cmpq	%r14,%rbx
0000000000045732	je	0x0004576b
0000000000045734	movq	0x0005fd4d(%rip),%rsi
000000000004573b	movq	0x0003e996(%rip),%r15
0000000000045742	movq	%r14,%rdi
0000000000045745	call	*%r15
0000000000045748	movq	%rax,%r14
000000000004574b	movq	0x0005fd36(%rip),%rsi
0000000000045752	movq	%rbx,%rdi
0000000000045755	call	*%r15
0000000000045758	leaq	0x00062c01(%rip),%rsi
000000000004575f	movq	%r14,%rdi
0000000000045762	movq	%rax,%rdx
0000000000045765	call	*0x00062bf5(%rip)
000000000004576b	movsbl	%al,%eax
000000000004576e	addq	$0x08,%rsp
0000000000045772	popq	%rbx
0000000000045773	popq	%r14
0000000000045775	popq	%r15
0000000000045777	popq	%rbp
0000000000045778	ret
-[PBXLSTypeController dealloc]:
0000000000045779	pushq	%rbp
000000000004577a	movq	%rsp,%rbp
000000000004577d	movq	%rdi,%rax
0000000000045780	movq	0x00069cc1(%rip),%rdx
0000000000045787	xorl	%edi,%edi
0000000000045789	movq	%rax,%rsi
000000000004578c	popq	%rbp
000000000004578d	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXLSTypeController debuggingSession]:
0000000000045792	pushq	%rbp
0000000000045793	movq	%rsp,%rbp
0000000000045796	movq	0x00069cab(%rip),%rax
000000000004579d	movq	(%rdi,%rax),%rax
00000000000457a1	popq	%rbp
00000000000457a2	ret
-[PBXLSTypeController typeByExpressionString:]:
00000000000457a3	pushq	%rbp
00000000000457a4	movq	%rsp,%rbp
00000000000457a7	xorl	%eax,%eax
00000000000457a9	popq	%rbp
00000000000457aa	ret
+[PBXLSTypeDescription fieldNameStringKey]:
00000000000457ab	pushq	%rbp
00000000000457ac	movq	%rsp,%rbp
00000000000457af	leaq	0x000701e2(%rip),%rax
00000000000457b6	popq	%rbp
00000000000457b7	ret
+[PBXLSAdaptor name]:
00000000000457b8	pushq	%rbp
00000000000457b9	movq	%rsp,%rbp
00000000000457bc	subq	$0x30,%rsp
00000000000457c0	movq	%rdi,0xf8(%rbp)
00000000000457c4	movq	%rsi,0xf0(%rbp)
00000000000457c8	leaq	0x00062b61(%rip),%rsi
00000000000457cf	call	*0x00062b5b(%rip)
00000000000457d5	movq	%rax,%rdi
00000000000457d8	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
00000000000457dd	leaq	0xf8(%rbp),%rdi
00000000000457e1	leaq	0xf0(%rbp),%rsi
00000000000457e5	leaq	0x0001d7bc(%rip),%rcx
00000000000457ec	leaq	0x0006b405(%rip),%r9
00000000000457f3	leaq	0x0001d799(%rip),%rdx
00000000000457fa	leaq	0x0006a037(%rip),%r8
0000000000045801	leaq	0x00017aca(%rip),%r10
0000000000045808	movq	%r10,0x18(%rsp)
000000000004580d	movq	%r8,0x10(%rsp)
0000000000045812	movq	%rax,0x08(%rsp)
0000000000045817	movq	%rdx,(%rsp)
000000000004581b	movl	$0x0000000c,%r8d
0000000000045821	xorb	%al,%al
0000000000045823	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000045828	xorl	%eax,%eax
000000000004582a	addq	$0x30,%rsp
000000000004582e	popq	%rbp
000000000004582f	ret
-[PBXLSAdaptor name]:
0000000000045830	pushq	%rbp
0000000000045831	movq	%rsp,%rbp
0000000000045834	leaq	0x00062af5(%rip),%rsi
000000000004583b	call	*0x00062aef(%rip)
0000000000045841	movq	0x0005f458(%rip),%rsi
0000000000045848	movq	%rax,%rdi
000000000004584b	popq	%rbp
000000000004584c	jmp	*0x0003e886(%rip)
-[PBXLSAdaptor updateArgumentsForLaunch:]:
0000000000045852	pushq	%rbp
0000000000045853	movq	%rsp,%rbp
0000000000045856	popq	%rbp
0000000000045857	ret
-[PBXLSAdaptor configureAdaptor]:
0000000000045858	pushq	%rbp
0000000000045859	movq	%rsp,%rbp
000000000004585c	subq	$0x30,%rsp
0000000000045860	movq	%rdi,0xf8(%rbp)
0000000000045864	movq	%rsi,0xf0(%rbp)
0000000000045868	leaq	0x00062ac1(%rip),%rsi
000000000004586f	call	*0x00062abb(%rip)
0000000000045875	movq	%rax,%rdi
0000000000045878	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000004587d	leaq	0xf8(%rbp),%rdi
0000000000045881	leaq	0xf0(%rbp),%rsi
0000000000045885	leaq	0x0001d71c(%rip),%rcx
000000000004588c	leaq	0x0006b365(%rip),%r9
0000000000045893	leaq	0x0001d767(%rip),%rdx
000000000004589a	leaq	0x00069f97(%rip),%r8
00000000000458a1	leaq	0x00017a2a(%rip),%r10
00000000000458a8	movq	%r10,0x18(%rsp)
00000000000458ad	movq	%r8,0x10(%rsp)
00000000000458b2	movq	%rax,0x08(%rsp)
00000000000458b7	movq	%rdx,(%rsp)
00000000000458bb	movl	$0x0000005f,%r8d
00000000000458c1	xorb	%al,%al
00000000000458c3	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
00000000000458c8	addq	$0x30,%rsp
00000000000458cc	popq	%rbp
00000000000458cd	ret
-[PBXLSAdaptor configureUI]:
00000000000458ce	pushq	%rbp
00000000000458cf	movq	%rsp,%rbp
00000000000458d2	subq	$0x30,%rsp
00000000000458d6	movq	%rdi,0xf8(%rbp)
00000000000458da	movq	%rsi,0xf0(%rbp)
00000000000458de	leaq	0x00062a4b(%rip),%rsi
00000000000458e5	call	*0x00062a45(%rip)
00000000000458eb	movq	%rax,%rdi
00000000000458ee	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
00000000000458f3	leaq	0xf8(%rbp),%rdi
00000000000458f7	leaq	0xf0(%rbp),%rsi
00000000000458fb	leaq	0x0001d6a6(%rip),%rcx
0000000000045902	leaq	0x0006b2ef(%rip),%r9
0000000000045909	leaq	0x0001d712(%rip),%rdx
0000000000045910	leaq	0x00069f21(%rip),%r8
0000000000045917	leaq	0x000179b4(%rip),%r10
000000000004591e	movq	%r10,0x18(%rsp)
0000000000045923	movq	%r8,0x10(%rsp)
0000000000045928	movq	%rax,0x08(%rsp)
000000000004592d	movq	%rdx,(%rsp)
0000000000045931	movl	$0x00000064,%r8d
0000000000045937	xorb	%al,%al
0000000000045939	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000004593e	addq	$0x30,%rsp
0000000000045942	popq	%rbp
0000000000045943	ret
-[PBXLSAdaptor unconfigureUI]:
0000000000045944	pushq	%rbp
0000000000045945	movq	%rsp,%rbp
0000000000045948	subq	$0x30,%rsp
000000000004594c	movq	%rdi,0xf8(%rbp)
0000000000045950	movq	%rsi,0xf0(%rbp)
0000000000045954	leaq	0x000629d5(%rip),%rsi
000000000004595b	call	*0x000629cf(%rip)
0000000000045961	movq	%rax,%rdi
0000000000045964	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000045969	leaq	0xf8(%rbp),%rdi
000000000004596d	leaq	0xf0(%rbp),%rsi
0000000000045971	leaq	0x0001d630(%rip),%rcx
0000000000045978	leaq	0x0006b279(%rip),%r9
000000000004597f	leaq	0x0001d6b8(%rip),%rdx
0000000000045986	leaq	0x00069eab(%rip),%r8
000000000004598d	leaq	0x0001793e(%rip),%r10
0000000000045994	movq	%r10,0x18(%rsp)
0000000000045999	movq	%r8,0x10(%rsp)
000000000004599e	movq	%rax,0x08(%rsp)
00000000000459a3	movq	%rdx,(%rsp)
00000000000459a7	movl	$0x00000069,%r8d
00000000000459ad	xorb	%al,%al
00000000000459af	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
00000000000459b4	addq	$0x30,%rsp
00000000000459b8	popq	%rbp
00000000000459b9	ret
-[PBXLSAdaptor parseAndApproveInputFromConsole:]:
00000000000459ba	pushq	%rbp
00000000000459bb	movq	%rsp,%rbp
00000000000459be	subq	$0x30,%rsp
00000000000459c2	movq	%rdi,0xf8(%rbp)
00000000000459c6	movq	%rsi,0xf0(%rbp)
00000000000459ca	leaq	0x0006295f(%rip),%rsi
00000000000459d1	call	*0x00062959(%rip)
00000000000459d7	movq	%rax,%rdi
00000000000459da	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
00000000000459df	leaq	0xf8(%rbp),%rdi
00000000000459e3	leaq	0xf0(%rbp),%rsi
00000000000459e7	leaq	0x0001d5ba(%rip),%rcx
00000000000459ee	leaq	0x0006b203(%rip),%r9
00000000000459f5	leaq	0x0001d660(%rip),%rdx
00000000000459fc	leaq	0x00069e35(%rip),%r8
0000000000045a03	leaq	0x000178c8(%rip),%r10
0000000000045a0a	movq	%r10,0x18(%rsp)
0000000000045a0f	movq	%r8,0x10(%rsp)
0000000000045a14	movq	%rax,0x08(%rsp)
0000000000045a19	movq	%rdx,(%rsp)
0000000000045a1d	movl	$0x0000006e,%r8d
0000000000045a23	xorb	%al,%al
0000000000045a25	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000045a2a	xorl	%eax,%eax
0000000000045a2c	addq	$0x30,%rsp
0000000000045a30	popq	%rbp
0000000000045a31	ret
-[PBXLSAdaptor parseAndApproveOutputFromDebugger:]:
0000000000045a32	pushq	%rbp
0000000000045a33	movq	%rsp,%rbp
0000000000045a36	subq	$0x30,%rsp
0000000000045a3a	movq	%rdi,0xf8(%rbp)
0000000000045a3e	movq	%rsi,0xf0(%rbp)
0000000000045a42	leaq	0x000628e7(%rip),%rsi
0000000000045a49	call	*0x000628e1(%rip)
0000000000045a4f	movq	%rax,%rdi
0000000000045a52	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000045a57	leaq	0xf8(%rbp),%rdi
0000000000045a5b	leaq	0xf0(%rbp),%rsi
0000000000045a5f	leaq	0x0001d542(%rip),%rcx
0000000000045a66	leaq	0x0006b18b(%rip),%r9
0000000000045a6d	leaq	0x0001d619(%rip),%rdx
0000000000045a74	leaq	0x00069dbd(%rip),%r8
0000000000045a7b	leaq	0x00017850(%rip),%r10
0000000000045a82	movq	%r10,0x18(%rsp)
0000000000045a87	movq	%r8,0x10(%rsp)
0000000000045a8c	movq	%rax,0x08(%rsp)
0000000000045a91	movq	%rdx,(%rsp)
0000000000045a95	movl	$0x00000074,%r8d
0000000000045a9b	xorb	%al,%al
0000000000045a9d	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000045aa2	xorl	%eax,%eax
0000000000045aa4	addq	$0x30,%rsp
0000000000045aa8	popq	%rbp
0000000000045aa9	ret
-[PBXLSAdaptor executableDidFinish]:
0000000000045aaa	pushq	%rbp
0000000000045aab	movq	%rsp,%rbp
0000000000045aae	popq	%rbp
0000000000045aaf	ret
-[PBXLSAdaptor dumpLog]:
0000000000045ab0	pushq	%rbp
0000000000045ab1	movq	%rsp,%rbp
0000000000045ab4	popq	%rbp
0000000000045ab5	ret
-[PBXLSAdaptor logString:]:
0000000000045ab6	pushq	%rbp
0000000000045ab7	movq	%rsp,%rbp
0000000000045aba	popq	%rbp
0000000000045abb	ret
-[PBXLSAdaptor clientInfoDictionary]:
0000000000045abc	pushq	%rbp
0000000000045abd	movq	%rsp,%rbp
0000000000045ac0	pushq	%rbx
0000000000045ac1	pushq	%rax
0000000000045ac2	movq	%rdi,%rbx
0000000000045ac5	movq	0x0006999c(%rip),%rax
0000000000045acc	movq	(%rbx,%rax),%rax
0000000000045ad0	testq	%rax,%rax
0000000000045ad3	jne	0x00045b16
0000000000045ad5	movq	0x000629d4(%rip),%rdi
0000000000045adc	leaq	0x000627fd(%rip),%rsi
0000000000045ae3	call	*0x000627f7(%rip)
0000000000045ae9	movq	0x0005ef80(%rip),%rsi
0000000000045af0	movq	%rax,%rdi
0000000000045af3	call	*0x0003e5df(%rip)
0000000000045af9	movq	0x00069968(%rip),%rdx
0000000000045b00	movq	%rax,%rdi
0000000000045b03	movq	%rbx,%rsi
0000000000045b06	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000045b0b	movq	0x00069956(%rip),%rax
0000000000045b12	movq	(%rbx,%rax),%rax
0000000000045b16	addq	$0x08,%rsp
0000000000045b1a	popq	%rbx
0000000000045b1b	popq	%rbp
0000000000045b1c	ret
-[PBXLSDebuggerAdaptor dealloc]:
0000000000045b1d	pushq	%rbp
0000000000045b1e	movq	%rsp,%rbp
0000000000045b21	pushq	%rbx
0000000000045b22	pushq	%rax
0000000000045b23	movq	%rdi,%rbx
0000000000045b26	movq	0x00069953(%rip),%rdx
0000000000045b2d	xorl	%edi,%edi
0000000000045b2f	movq	%rbx,%rsi
0000000000045b32	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000045b37	movq	0x0006994a(%rip),%rdx
0000000000045b3e	xorl	%edi,%edi
0000000000045b40	movq	%rbx,%rsi
0000000000045b43	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000045b48	movq	0x00069941(%rip),%rdx
0000000000045b4f	xorl	%edi,%edi
0000000000045b51	movq	%rbx,%rsi
0000000000045b54	addq	$0x08,%rsp
0000000000045b58	popq	%rbx
0000000000045b59	popq	%rbp
0000000000045b5a	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXLSDebuggerAdaptor deviceWasDetached:]:
0000000000045b5f	pushq	%rbp
0000000000045b60	movq	%rsp,%rbp
0000000000045b63	popq	%rbp
0000000000045b64	ret
-[PBXLSDebuggerAdaptor errorMessage:]:
0000000000045b65	pushq	%rbp
0000000000045b66	movq	%rsp,%rbp
0000000000045b69	pushq	%rbx
0000000000045b6a	pushq	%rax
0000000000045b6b	movq	%rdx,%rbx
0000000000045b6e	movq	0x0005f28b(%rip),%rsi
0000000000045b75	call	*0x0003e55d(%rip)
0000000000045b7b	movq	0x0005f556(%rip),%rsi
0000000000045b82	movq	%rax,%rdi
0000000000045b85	call	*0x0003e54d(%rip)
0000000000045b8b	movq	0x00061ba6(%rip),%rsi
0000000000045b92	movq	%rax,%rdi
0000000000045b95	movq	%rbx,%rdx
0000000000045b98	movq	0x0003e539(%rip),%rax
0000000000045b9f	addq	$0x08,%rsp
0000000000045ba3	popq	%rbx
0000000000045ba4	popq	%rbp
0000000000045ba5	jmp	*%rax
-[PBXLSDebuggerAdaptor invalidateAllFramesContainerDataValue]:
0000000000045ba7	pushq	%rbp
0000000000045ba8	movq	%rsp,%rbp
0000000000045bab	movq	0x0005f23e(%rip),%rsi
0000000000045bb2	call	*0x0003e520(%rip)
0000000000045bb8	movq	0x00060549(%rip),%rsi
0000000000045bbf	movq	%rax,%rdi
0000000000045bc2	call	*0x0003e510(%rip)
0000000000045bc8	movq	0x00060211(%rip),%rsi
0000000000045bcf	movq	0x00061b82(%rip),%rdx
0000000000045bd6	movq	%rax,%rdi
0000000000045bd9	movq	0x0003e4f8(%rip),%rax
0000000000045be0	popq	%rbp
0000000000045be1	jmp	*%rax
-[PBXLSDebuggerAdaptor setState:status:isCurrentThread:forServerThreadHandle:]:
0000000000045be3	pushq	%rbp
0000000000045be4	movq	%rsp,%rbp
0000000000045be7	pushq	%r15
0000000000045be9	pushq	%r14
0000000000045beb	pushq	%r13
0000000000045bed	pushq	%r12
0000000000045bef	pushq	%rbx
0000000000045bf0	pushq	%rax
0000000000045bf1	movq	%r9,%rbx
0000000000045bf4	movl	%r8d,0xd4(%rbp)
0000000000045bf8	movq	%rcx,%r12
0000000000045bfb	movl	%edx,%r13d
0000000000045bfe	movq	%rdi,%r15
0000000000045c01	movq	0x0005f1e8(%rip),%rsi
0000000000045c08	movq	0x0003e4c9(%rip),%r14
0000000000045c0f	call	*%r14
0000000000045c12	movq	0x00060027(%rip),%rsi
0000000000045c19	movq	%rax,%rdi
0000000000045c1c	movq	%rbx,%rdx
0000000000045c1f	call	*%r14
0000000000045c22	movq	%rax,%rbx
0000000000045c25	testq	%rbx,%rbx
0000000000045c28	je	0x00045c4a
0000000000045c2a	movq	0x00061477(%rip),%rsi
0000000000045c31	movq	%rbx,%rdi
0000000000045c34	movq	%r15,%rdx
0000000000045c37	movl	%r13d,%ecx
0000000000045c3a	movq	%r12,%r8
0000000000045c3d	call	*0x0003e495(%rip)
0000000000045c43	movl	0xd4(%rbp),%eax
0000000000045c46	testb	%al,%al
0000000000045c48	jne	0x00045c59
0000000000045c4a	addq	$0x08,%rsp
0000000000045c4e	popq	%rbx
0000000000045c4f	popq	%r12
0000000000045c51	popq	%r13
0000000000045c53	popq	%r14
0000000000045c55	popq	%r15
0000000000045c57	popq	%rbp
0000000000045c58	ret
0000000000045c59	movq	0x0005f190(%rip),%rsi
0000000000045c60	movq	%r15,%rdi
0000000000045c63	call	*0x0003e46f(%rip)
0000000000045c69	movq	0x0005ffd8(%rip),%rsi
0000000000045c70	movq	%rax,%rdi
0000000000045c73	movq	%r15,%rdx
0000000000045c76	movq	%rbx,%rcx
0000000000045c79	movq	0x0003e458(%rip),%rax
0000000000045c80	addq	$0x08,%rsp
0000000000045c84	popq	%rbx
0000000000045c85	popq	%r12
0000000000045c87	popq	%r13
0000000000045c89	popq	%r14
0000000000045c8b	popq	%r15
0000000000045c8d	popq	%rbp
0000000000045c8e	jmp	*%rax
-[PBXLSDebuggerAdaptor supportsDebuggerActionSideImplementation]:
0000000000045c90	pushq	%rbp
0000000000045c91	movq	%rsp,%rbp
0000000000045c94	movl	$0x00000001,%eax
0000000000045c99	popq	%rbp
0000000000045c9a	ret
-[PBXLSDebuggerAdaptor continueAfterInitialization]:
0000000000045c9b	pushq	%rbp
0000000000045c9c	movq	%rsp,%rbp
0000000000045c9f	subq	$0x30,%rsp
0000000000045ca3	movq	%rdi,0xf8(%rbp)
0000000000045ca7	movq	%rsi,0xf0(%rbp)
0000000000045cab	leaq	0x0006267e(%rip),%rsi
0000000000045cb2	call	*0x00062678(%rip)
0000000000045cb8	movq	%rax,%rdi
0000000000045cbb	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000045cc0	leaq	0xf8(%rbp),%rdi
0000000000045cc4	leaq	0xf0(%rbp),%rsi
0000000000045cc8	leaq	0x0001d435(%rip),%rcx
0000000000045ccf	leaq	0x0006af22(%rip),%r9
0000000000045cd6	leaq	0x0001d4fb(%rip),%rdx
0000000000045cdd	leaq	0x00069b54(%rip),%r8
0000000000045ce4	leaq	0x000175e7(%rip),%r10
0000000000045ceb	movq	%r10,0x18(%rsp)
0000000000045cf0	movq	%r8,0x10(%rsp)
0000000000045cf5	movq	%rax,0x08(%rsp)
0000000000045cfa	movq	%rdx,(%rsp)
0000000000045cfe	movl	$0x000000e9,%r8d
0000000000045d04	xorb	%al,%al
0000000000045d06	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000045d0b	addq	$0x30,%rsp
0000000000045d0f	popq	%rbp
0000000000045d10	ret
-[PBXLSDebuggerAdaptor canManageBreakpoint:]:
0000000000045d11	pushq	%rbp
0000000000045d12	movq	%rsp,%rbp
0000000000045d15	subq	$0x30,%rsp
0000000000045d19	movq	%rdi,0xf8(%rbp)
0000000000045d1d	movq	%rsi,0xf0(%rbp)
0000000000045d21	leaq	0x00062608(%rip),%rsi
0000000000045d28	call	*0x00062602(%rip)
0000000000045d2e	movq	%rax,%rdi
0000000000045d31	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000045d36	leaq	0xf8(%rbp),%rdi
0000000000045d3a	leaq	0xf0(%rbp),%rsi
0000000000045d3e	leaq	0x0001d3bf(%rip),%rcx
0000000000045d45	leaq	0x0006aeac(%rip),%r9
0000000000045d4c	leaq	0x0001d4b9(%rip),%rdx
0000000000045d53	leaq	0x00069ade(%rip),%r8
0000000000045d5a	leaq	0x00017571(%rip),%r10
0000000000045d61	movq	%r10,0x18(%rsp)
0000000000045d66	movq	%r8,0x10(%rsp)
0000000000045d6b	movq	%rax,0x08(%rsp)
0000000000045d70	movq	%rdx,(%rsp)
0000000000045d74	movl	$0x000000ee,%r8d
0000000000045d7a	xorb	%al,%al
0000000000045d7c	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000045d81	xorl	%eax,%eax
0000000000045d83	addq	$0x30,%rsp
0000000000045d87	popq	%rbp
0000000000045d88	ret
-[PBXLSDebuggerAdaptor threadRequestUpdateStack:]:
0000000000045d89	pushq	%rbp
0000000000045d8a	movq	%rsp,%rbp
0000000000045d8d	popq	%rbp
0000000000045d8e	ret
-[PBXLSDebuggerAdaptor threadRequestStepInstruction:]:
0000000000045d8f	pushq	%rbp
0000000000045d90	movq	%rsp,%rbp
0000000000045d93	movq	0x0006193e(%rip),%rsi
0000000000045d9a	popq	%rbp
0000000000045d9b	jmp	*0x0003e337(%rip)
-[PBXLSDebuggerAdaptor threadRequestNextInstruction:]:
0000000000045da1	pushq	%rbp
0000000000045da2	movq	%rsp,%rbp
0000000000045da5	movq	0x00061934(%rip),%rsi
0000000000045dac	popq	%rbp
0000000000045dad	jmp	*0x0003e325(%rip)
-[PBXLSDebuggerAdaptor threadRequestStepInto:]:
0000000000045db3	pushq	%rbp
0000000000045db4	movq	%rsp,%rbp
0000000000045db7	popq	%rbp
0000000000045db8	ret
-[PBXLSDebuggerAdaptor threadRequestStepOver:]:
0000000000045db9	pushq	%rbp
0000000000045dba	movq	%rsp,%rbp
0000000000045dbd	popq	%rbp
0000000000045dbe	ret
-[PBXLSDebuggerAdaptor threadRequestStepOut:]:
0000000000045dbf	pushq	%rbp
0000000000045dc0	movq	%rsp,%rbp
0000000000045dc3	popq	%rbp
0000000000045dc4	ret
-[PBXLSDebuggerAdaptor threadRequest:stepUntilLineNumber:]:
0000000000045dc5	pushq	%rbp
0000000000045dc6	movq	%rsp,%rbp
0000000000045dc9	popq	%rbp
0000000000045dca	ret
-[PBXLSDebuggerAdaptor threadRequestContinue:]:
0000000000045dcb	pushq	%rbp
0000000000045dcc	movq	%rsp,%rbp
0000000000045dcf	popq	%rbp
0000000000045dd0	ret
-[PBXLSDebuggerAdaptor threadRequestStepInSuspendOtherThreads:]:
0000000000045dd1	pushq	%rbp
0000000000045dd2	movq	%rsp,%rbp
0000000000045dd5	subq	$0x30,%rsp
0000000000045dd9	movq	%rdi,0xf8(%rbp)
0000000000045ddd	movq	%rsi,0xf0(%rbp)
0000000000045de1	leaq	0x00062548(%rip),%rsi
0000000000045de8	call	*0x00062542(%rip)
0000000000045dee	movq	%rax,%rdi
0000000000045df1	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000045df6	leaq	0xf8(%rbp),%rdi
0000000000045dfa	leaq	0xf0(%rbp),%rsi
0000000000045dfe	leaq	0x0001d2ff(%rip),%rcx
0000000000045e05	leaq	0x0006adec(%rip),%r9
0000000000045e0c	leaq	0x0001d426(%rip),%rdx
0000000000045e13	leaq	0x00069a1e(%rip),%r8
0000000000045e1a	leaq	0x000174b1(%rip),%r10
0000000000045e21	movq	%r10,0x18(%rsp)
0000000000045e26	movq	%r8,0x10(%rsp)
0000000000045e2b	movq	%rax,0x08(%rsp)
0000000000045e30	movq	%rdx,(%rsp)
0000000000045e34	movl	$0x00000126,%r8d
0000000000045e3a	xorb	%al,%al
0000000000045e3c	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000045e41	addq	$0x30,%rsp
0000000000045e45	popq	%rbp
0000000000045e46	ret
-[PBXLSDebuggerAdaptor threadRequestStepOverSuspendOtherThreads:]:
0000000000045e47	pushq	%rbp
0000000000045e48	movq	%rsp,%rbp
0000000000045e4b	subq	$0x30,%rsp
0000000000045e4f	movq	%rdi,0xf8(%rbp)
0000000000045e53	movq	%rsi,0xf0(%rbp)
0000000000045e57	leaq	0x000624d2(%rip),%rsi
0000000000045e5e	call	*0x000624cc(%rip)
0000000000045e64	movq	%rax,%rdi
0000000000045e67	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000045e6c	leaq	0xf8(%rbp),%rdi
0000000000045e70	leaq	0xf0(%rbp),%rsi
0000000000045e74	leaq	0x0001d289(%rip),%rcx
0000000000045e7b	leaq	0x0006ad76(%rip),%r9
0000000000045e82	leaq	0x0001d3f0(%rip),%rdx
0000000000045e89	leaq	0x000699a8(%rip),%r8
0000000000045e90	leaq	0x0001743b(%rip),%r10
0000000000045e97	movq	%r10,0x18(%rsp)
0000000000045e9c	movq	%r8,0x10(%rsp)
0000000000045ea1	movq	%rax,0x08(%rsp)
0000000000045ea6	movq	%rdx,(%rsp)
0000000000045eaa	movl	$0x0000012b,%r8d
0000000000045eb0	xorb	%al,%al
0000000000045eb2	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000045eb7	addq	$0x30,%rsp
0000000000045ebb	popq	%rbp
0000000000045ebc	ret
-[PBXLSDebuggerAdaptor threadRequestUnsuspend:]:
0000000000045ebd	pushq	%rbp
0000000000045ebe	movq	%rsp,%rbp
0000000000045ec1	subq	$0x30,%rsp
0000000000045ec5	movq	%rdi,0xf8(%rbp)
0000000000045ec9	movq	%rsi,0xf0(%rbp)
0000000000045ecd	leaq	0x0006245c(%rip),%rsi
0000000000045ed4	call	*0x00062456(%rip)
0000000000045eda	movq	%rax,%rdi
0000000000045edd	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000045ee2	leaq	0xf8(%rbp),%rdi
0000000000045ee6	leaq	0xf0(%rbp),%rsi
0000000000045eea	leaq	0x0001d213(%rip),%rcx
0000000000045ef1	leaq	0x0006ad00(%rip),%r9
0000000000045ef8	leaq	0x0001d3bc(%rip),%rdx
0000000000045eff	leaq	0x00069932(%rip),%r8
0000000000045f06	leaq	0x000173c5(%rip),%r10
0000000000045f0d	movq	%r10,0x18(%rsp)
0000000000045f12	movq	%r8,0x10(%rsp)
0000000000045f17	movq	%rax,0x08(%rsp)
0000000000045f1c	movq	%rdx,(%rsp)
0000000000045f20	movl	$0x00000130,%r8d
0000000000045f26	xorb	%al,%al
0000000000045f28	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000045f2d	addq	$0x30,%rsp
0000000000045f31	popq	%rbp
0000000000045f32	ret
-[PBXLSDebuggerAdaptor threadRequestSuspend:]:
0000000000045f33	pushq	%rbp
0000000000045f34	movq	%rsp,%rbp
0000000000045f37	subq	$0x30,%rsp
0000000000045f3b	movq	%rdi,0xf8(%rbp)
0000000000045f3f	movq	%rsi,0xf0(%rbp)
0000000000045f43	leaq	0x000623e6(%rip),%rsi
0000000000045f4a	call	*0x000623e0(%rip)
0000000000045f50	movq	%rax,%rdi
0000000000045f53	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000045f58	leaq	0xf8(%rbp),%rdi
0000000000045f5c	leaq	0xf0(%rbp),%rsi
0000000000045f60	leaq	0x0001d19d(%rip),%rcx
0000000000045f67	leaq	0x0006ac8a(%rip),%r9
0000000000045f6e	leaq	0x0001d376(%rip),%rdx
0000000000045f75	leaq	0x000698bc(%rip),%r8
0000000000045f7c	leaq	0x0001734f(%rip),%r10
0000000000045f83	movq	%r10,0x18(%rsp)
0000000000045f88	movq	%r8,0x10(%rsp)
0000000000045f8d	movq	%rax,0x08(%rsp)
0000000000045f92	movq	%rdx,(%rsp)
0000000000045f96	movl	$0x00000135,%r8d
0000000000045f9c	xorb	%al,%al
0000000000045f9e	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000045fa3	addq	$0x30,%rsp
0000000000045fa7	popq	%rbp
0000000000045fa8	ret
-[PBXLSDebuggerAdaptor requestDebuggerCreateWatchpoint:]:
0000000000045fa9	pushq	%rbp
0000000000045faa	movq	%rsp,%rbp
0000000000045fad	subq	$0x30,%rsp
0000000000045fb1	movq	%rdi,0xf8(%rbp)
0000000000045fb5	movq	%rsi,0xf0(%rbp)
0000000000045fb9	leaq	0x00062370(%rip),%rsi
0000000000045fc0	call	*0x0006236a(%rip)
0000000000045fc6	movq	%rax,%rdi
0000000000045fc9	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000045fce	leaq	0xf8(%rbp),%rdi
0000000000045fd2	leaq	0xf0(%rbp),%rsi
0000000000045fd6	leaq	0x0001d127(%rip),%rcx
0000000000045fdd	leaq	0x0006ac14(%rip),%r9
0000000000045fe4	leaq	0x0001d32e(%rip),%rdx
0000000000045feb	leaq	0x00069846(%rip),%r8
0000000000045ff2	leaq	0x000172d9(%rip),%r10
0000000000045ff9	movq	%r10,0x18(%rsp)
0000000000045ffe	movq	%r8,0x10(%rsp)
0000000000046003	movq	%rax,0x08(%rsp)
0000000000046008	movq	%rdx,(%rsp)
000000000004600c	movl	$0x0000013a,%r8d
0000000000046012	xorb	%al,%al
0000000000046014	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000046019	addq	$0x30,%rsp
000000000004601d	popq	%rbp
000000000004601e	ret
-[PBXLSDebuggerAdaptor requestDebuggerCreateWatchpointForDataValue:]:
000000000004601f	pushq	%rbp
0000000000046020	movq	%rsp,%rbp
0000000000046023	subq	$0x30,%rsp
0000000000046027	movq	%rdi,0xf8(%rbp)
000000000004602b	movq	%rsi,0xf0(%rbp)
000000000004602f	leaq	0x000622fa(%rip),%rsi
0000000000046036	call	*0x000622f4(%rip)
000000000004603c	movq	%rax,%rdi
000000000004603f	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000046044	leaq	0xf8(%rbp),%rdi
0000000000046048	leaq	0xf0(%rbp),%rsi
000000000004604c	leaq	0x0001d0b1(%rip),%rcx
0000000000046053	leaq	0x0006ab9e(%rip),%r9
000000000004605a	leaq	0x0001d2f1(%rip),%rdx
0000000000046061	leaq	0x000697d0(%rip),%r8
0000000000046068	leaq	0x00017263(%rip),%r10
000000000004606f	movq	%r10,0x18(%rsp)
0000000000046074	movq	%r8,0x10(%rsp)
0000000000046079	movq	%rax,0x08(%rsp)
000000000004607e	movq	%rdx,(%rsp)
0000000000046082	movl	$0x0000013f,%r8d
0000000000046088	xorb	%al,%al
000000000004608a	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000004608f	addq	$0x30,%rsp
0000000000046093	popq	%rbp
0000000000046094	ret
-[PBXLSDebuggerAdaptor requestDebuggerDeleteWatchpointForDataValue:]:
0000000000046095	pushq	%rbp
0000000000046096	movq	%rsp,%rbp
0000000000046099	subq	$0x30,%rsp
000000000004609d	movq	%rdi,0xf8(%rbp)
00000000000460a1	movq	%rsi,0xf0(%rbp)
00000000000460a5	leaq	0x00062284(%rip),%rsi
00000000000460ac	call	*0x0006227e(%rip)
00000000000460b2	movq	%rax,%rdi
00000000000460b5	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
00000000000460ba	leaq	0xf8(%rbp),%rdi
00000000000460be	leaq	0xf0(%rbp),%rsi
00000000000460c2	leaq	0x0001d03b(%rip),%rcx
00000000000460c9	leaq	0x0006ab28(%rip),%r9
00000000000460d0	leaq	0x0001d2c0(%rip),%rdx
00000000000460d7	leaq	0x0006975a(%rip),%r8
00000000000460de	leaq	0x000171ed(%rip),%r10
00000000000460e5	movq	%r10,0x18(%rsp)
00000000000460ea	movq	%r8,0x10(%rsp)
00000000000460ef	movq	%rax,0x08(%rsp)
00000000000460f4	movq	%rdx,(%rsp)
00000000000460f8	movl	$0x00000144,%r8d
00000000000460fe	xorb	%al,%al
0000000000046100	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000046105	addq	$0x30,%rsp
0000000000046109	popq	%rbp
000000000004610a	ret
-[PBXLSDebuggerAdaptor requestNewBreakpoint:]:
000000000004610b	pushq	%rbp
000000000004610c	movq	%rsp,%rbp
000000000004610f	subq	$0x30,%rsp
0000000000046113	movq	%rdi,0xf8(%rbp)
0000000000046117	movq	%rsi,0xf0(%rbp)
000000000004611b	leaq	0x0006220e(%rip),%rsi
0000000000046122	call	*0x00062208(%rip)
0000000000046128	movq	%rax,%rdi
000000000004612b	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000046130	leaq	0xf8(%rbp),%rdi
0000000000046134	leaq	0xf0(%rbp),%rsi
0000000000046138	leaq	0x0001cfc5(%rip),%rcx
000000000004613f	leaq	0x0006aab2(%rip),%r9
0000000000046146	leaq	0x0001d28f(%rip),%rdx
000000000004614d	leaq	0x000696e4(%rip),%r8
0000000000046154	leaq	0x00017177(%rip),%r10
000000000004615b	movq	%r10,0x18(%rsp)
0000000000046160	movq	%r8,0x10(%rsp)
0000000000046165	movq	%rax,0x08(%rsp)
000000000004616a	movq	%rdx,(%rsp)
000000000004616e	movl	$0x00000149,%r8d
0000000000046174	xorb	%al,%al
0000000000046176	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000004617b	addq	$0x30,%rsp
000000000004617f	popq	%rbp
0000000000046180	ret
-[PBXLSDebuggerAdaptor requestDeleteBreakpoint:]:
0000000000046181	pushq	%rbp
0000000000046182	movq	%rsp,%rbp
0000000000046185	subq	$0x30,%rsp
0000000000046189	movq	%rdi,0xf8(%rbp)
000000000004618d	movq	%rsi,0xf0(%rbp)
0000000000046191	leaq	0x00062198(%rip),%rsi
0000000000046198	call	*0x00062192(%rip)
000000000004619e	movq	%rax,%rdi
00000000000461a1	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
00000000000461a6	leaq	0xf8(%rbp),%rdi
00000000000461aa	leaq	0xf0(%rbp),%rsi
00000000000461ae	leaq	0x0001cf4f(%rip),%rcx
00000000000461b5	leaq	0x0006aa3c(%rip),%r9
00000000000461bc	leaq	0x0001d247(%rip),%rdx
00000000000461c3	leaq	0x0006966e(%rip),%r8
00000000000461ca	leaq	0x00017101(%rip),%r10
00000000000461d1	movq	%r10,0x18(%rsp)
00000000000461d6	movq	%r8,0x10(%rsp)
00000000000461db	movq	%rax,0x08(%rsp)
00000000000461e0	movq	%rdx,(%rsp)
00000000000461e4	movl	$0x0000014e,%r8d
00000000000461ea	xorb	%al,%al
00000000000461ec	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
00000000000461f1	addq	$0x30,%rsp
00000000000461f5	popq	%rbp
00000000000461f6	ret
-[PBXLSDebuggerAdaptor requestEnableDisableBreakpoint:]:
00000000000461f7	pushq	%rbp
00000000000461f8	movq	%rsp,%rbp
00000000000461fb	subq	$0x30,%rsp
00000000000461ff	movq	%rdi,0xf8(%rbp)
0000000000046203	movq	%rsi,0xf0(%rbp)
0000000000046207	leaq	0x00062122(%rip),%rsi
000000000004620e	call	*0x0006211c(%rip)
0000000000046214	movq	%rax,%rdi
0000000000046217	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000004621c	leaq	0xf8(%rbp),%rdi
0000000000046220	leaq	0xf0(%rbp),%rsi
0000000000046224	leaq	0x0001ced9(%rip),%rcx
000000000004622b	leaq	0x0006a9c6(%rip),%r9
0000000000046232	leaq	0x0001d202(%rip),%rdx
0000000000046239	leaq	0x000695f8(%rip),%r8
0000000000046240	leaq	0x0001708b(%rip),%r10
0000000000046247	movq	%r10,0x18(%rsp)
000000000004624c	movq	%r8,0x10(%rsp)
0000000000046251	movq	%rax,0x08(%rsp)
0000000000046256	movq	%rdx,(%rsp)
000000000004625a	movl	$0x00000153,%r8d
0000000000046260	xorb	%al,%al
0000000000046262	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000046267	addq	$0x30,%rsp
000000000004626b	popq	%rbp
000000000004626c	ret
-[PBXLSDebuggerAdaptor requestBreakpointCondition:]:
000000000004626d	pushq	%rbp
000000000004626e	movq	%rsp,%rbp
0000000000046271	subq	$0x30,%rsp
0000000000046275	movq	%rdi,0xf8(%rbp)
0000000000046279	movq	%rsi,0xf0(%rbp)
000000000004627d	leaq	0x000620ac(%rip),%rsi
0000000000046284	call	*0x000620a6(%rip)
000000000004628a	movq	%rax,%rdi
000000000004628d	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000046292	leaq	0xf8(%rbp),%rdi
0000000000046296	leaq	0xf0(%rbp),%rsi
000000000004629a	leaq	0x0001ce63(%rip),%rcx
00000000000462a1	leaq	0x0006a950(%rip),%r9
00000000000462a8	leaq	0x0001d1c4(%rip),%rdx
00000000000462af	leaq	0x00069582(%rip),%r8
00000000000462b6	leaq	0x00017015(%rip),%r10
00000000000462bd	movq	%r10,0x18(%rsp)
00000000000462c2	movq	%r8,0x10(%rsp)
00000000000462c7	movq	%rax,0x08(%rsp)
00000000000462cc	movq	%rdx,(%rsp)
00000000000462d0	movl	$0x00000158,%r8d
00000000000462d6	xorb	%al,%al
00000000000462d8	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
00000000000462dd	addq	$0x30,%rsp
00000000000462e1	popq	%rbp
00000000000462e2	ret
-[PBXLSDebuggerAdaptor requestBreakpointIgnoreCount:]:
00000000000462e3	pushq	%rbp
00000000000462e4	movq	%rsp,%rbp
00000000000462e7	subq	$0x30,%rsp
00000000000462eb	movq	%rdi,0xf8(%rbp)
00000000000462ef	movq	%rsi,0xf0(%rbp)
00000000000462f3	leaq	0x00062036(%rip),%rsi
00000000000462fa	call	*0x00062030(%rip)
0000000000046300	movq	%rax,%rdi
0000000000046303	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000046308	leaq	0xf8(%rbp),%rdi
000000000004630c	leaq	0xf0(%rbp),%rsi
0000000000046310	leaq	0x0001cded(%rip),%rcx
0000000000046317	leaq	0x0006a8da(%rip),%r9
000000000004631e	leaq	0x0001d182(%rip),%rdx
0000000000046325	leaq	0x0006950c(%rip),%r8
000000000004632c	leaq	0x00016f9f(%rip),%r10
0000000000046333	movq	%r10,0x18(%rsp)
0000000000046338	movq	%r8,0x10(%rsp)
000000000004633d	movq	%rax,0x08(%rsp)
0000000000046342	movq	%rdx,(%rsp)
0000000000046346	movl	$0x0000015d,%r8d
000000000004634c	xorb	%al,%al
000000000004634e	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000046353	addq	$0x30,%rsp
0000000000046357	popq	%rbp
0000000000046358	ret
-[PBXLSDebuggerAdaptor requestDebuggerMovePCInThread:fileSpec:]:
0000000000046359	pushq	%rbp
000000000004635a	movq	%rsp,%rbp
000000000004635d	subq	$0x30,%rsp
0000000000046361	movq	%rdi,0xf8(%rbp)
0000000000046365	movq	%rsi,0xf0(%rbp)
0000000000046369	leaq	0x00061fc0(%rip),%rsi
0000000000046370	call	*0x00061fba(%rip)
0000000000046376	movq	%rax,%rdi
0000000000046379	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000004637e	leaq	0xf8(%rbp),%rdi
0000000000046382	leaq	0xf0(%rbp),%rsi
0000000000046386	leaq	0x0001cd77(%rip),%rcx
000000000004638d	leaq	0x0006a864(%rip),%r9
0000000000046394	leaq	0x0001d142(%rip),%rdx
000000000004639b	leaq	0x00069496(%rip),%r8
00000000000463a2	leaq	0x00016f29(%rip),%r10
00000000000463a9	movq	%r10,0x18(%rsp)
00000000000463ae	movq	%r8,0x10(%rsp)
00000000000463b3	movq	%rax,0x08(%rsp)
00000000000463b8	movq	%rdx,(%rsp)
00000000000463bc	movl	$0x00000167,%r8d
00000000000463c2	xorb	%al,%al
00000000000463c4	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
00000000000463c9	addq	$0x30,%rsp
00000000000463cd	popq	%rbp
00000000000463ce	ret
-[PBXLSDebuggerAdaptor requestDebuggerStatus]:
00000000000463cf	pushq	%rbp
00000000000463d0	movq	%rsp,%rbp
00000000000463d3	subq	$0x30,%rsp
00000000000463d7	movq	%rdi,0xf8(%rbp)
00000000000463db	movq	%rsi,0xf0(%rbp)
00000000000463df	leaq	0x00061f4a(%rip),%rsi
00000000000463e6	call	*0x00061f44(%rip)
00000000000463ec	movq	%rax,%rdi
00000000000463ef	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
00000000000463f4	leaq	0xf8(%rbp),%rdi
00000000000463f8	leaq	0xf0(%rbp),%rsi
00000000000463fc	leaq	0x0001cd01(%rip),%rcx
0000000000046403	leaq	0x0006a7ee(%rip),%r9
000000000004640a	leaq	0x0001d10c(%rip),%rdx
0000000000046411	leaq	0x00069420(%rip),%r8
0000000000046418	leaq	0x00016eb3(%rip),%r10
000000000004641f	movq	%r10,0x18(%rsp)
0000000000046424	movq	%r8,0x10(%rsp)
0000000000046429	movq	%rax,0x08(%rsp)
000000000004642e	movq	%rdx,(%rsp)
0000000000046432	movl	$0x0000016c,%r8d
0000000000046438	xorb	%al,%al
000000000004643a	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000004643f	addq	$0x30,%rsp
0000000000046443	popq	%rbp
0000000000046444	ret
-[PBXLSDebuggerAdaptor requestDebuggerUndoToCheckpoint]:
0000000000046445	pushq	%rbp
0000000000046446	movq	%rsp,%rbp
0000000000046449	subq	$0x30,%rsp
000000000004644d	movq	%rdi,0xf8(%rbp)
0000000000046451	movq	%rsi,0xf0(%rbp)
0000000000046455	leaq	0x00061ed4(%rip),%rsi
000000000004645c	call	*0x00061ece(%rip)
0000000000046462	movq	%rax,%rdi
0000000000046465	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000004646a	leaq	0xf8(%rbp),%rdi
000000000004646e	leaq	0xf0(%rbp),%rsi
0000000000046472	leaq	0x0001cc8b(%rip),%rcx
0000000000046479	leaq	0x0006a778(%rip),%r9
0000000000046480	leaq	0x0001d0c4(%rip),%rdx
0000000000046487	leaq	0x000693aa(%rip),%r8
000000000004648e	leaq	0x00016e3d(%rip),%r10
0000000000046495	movq	%r10,0x18(%rsp)
000000000004649a	movq	%r8,0x10(%rsp)
000000000004649f	movq	%rax,0x08(%rsp)
00000000000464a4	movq	%rdx,(%rsp)
00000000000464a8	movl	$0x00000171,%r8d
00000000000464ae	xorb	%al,%al
00000000000464b0	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
00000000000464b5	addq	$0x30,%rsp
00000000000464b9	popq	%rbp
00000000000464ba	ret
-[PBXLSDebuggerAdaptor requestDebuggerContinueToFile:lineNumber:]:
00000000000464bb	pushq	%rbp
00000000000464bc	movq	%rsp,%rbp
00000000000464bf	subq	$0x30,%rsp
00000000000464c3	movq	%rdi,0xf8(%rbp)
00000000000464c7	movq	%rsi,0xf0(%rbp)
00000000000464cb	leaq	0x00061e5e(%rip),%rsi
00000000000464d2	call	*0x00061e58(%rip)
00000000000464d8	movq	%rax,%rdi
00000000000464db	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
00000000000464e0	leaq	0xf8(%rbp),%rdi
00000000000464e4	leaq	0xf0(%rbp),%rsi
00000000000464e8	leaq	0x0001cc15(%rip),%rcx
00000000000464ef	leaq	0x0006a702(%rip),%r9
00000000000464f6	leaq	0x0001d086(%rip),%rdx
00000000000464fd	leaq	0x00069334(%rip),%r8
0000000000046504	leaq	0x00016dc7(%rip),%r10
000000000004650b	movq	%r10,0x18(%rsp)
0000000000046510	movq	%r8,0x10(%rsp)
0000000000046515	movq	%rax,0x08(%rsp)
000000000004651a	movq	%rdx,(%rsp)
000000000004651e	movl	$0x00000176,%r8d
0000000000046524	xorb	%al,%al
0000000000046526	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000004652b	addq	$0x30,%rsp
000000000004652f	popq	%rbp
0000000000046530	ret
-[PBXLSDebuggerAdaptor requestDebuggerContinueToSymbol:]:
0000000000046531	pushq	%rbp
0000000000046532	movq	%rsp,%rbp
0000000000046535	subq	$0x30,%rsp
0000000000046539	movq	%rdi,0xf8(%rbp)
000000000004653d	movq	%rsi,0xf0(%rbp)
0000000000046541	leaq	0x00061de8(%rip),%rsi
0000000000046548	call	*0x00061de2(%rip)
000000000004654e	movq	%rax,%rdi
0000000000046551	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000046556	leaq	0xf8(%rbp),%rdi
000000000004655a	leaq	0xf0(%rbp),%rsi
000000000004655e	leaq	0x0001cb9f(%rip),%rcx
0000000000046565	leaq	0x0006a68c(%rip),%r9
000000000004656c	leaq	0x0001d052(%rip),%rdx
0000000000046573	leaq	0x000692be(%rip),%r8
000000000004657a	leaq	0x00016d51(%rip),%r10
0000000000046581	movq	%r10,0x18(%rsp)
0000000000046586	movq	%r8,0x10(%rsp)
000000000004658b	movq	%rax,0x08(%rsp)
0000000000046590	movq	%rdx,(%rsp)
0000000000046594	movl	$0x0000017b,%r8d
000000000004659a	xorb	%al,%al
000000000004659c	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
00000000000465a1	addq	$0x30,%rsp
00000000000465a5	popq	%rbp
00000000000465a6	ret
-[PBXLSDebuggerAdaptor requestDebuggerContinueToCallSymbol:inFile:lineNumber:]:
00000000000465a7	pushq	%rbp
00000000000465a8	movq	%rsp,%rbp
00000000000465ab	subq	$0x30,%rsp
00000000000465af	movq	%rdi,0xf8(%rbp)
00000000000465b3	movq	%rsi,0xf0(%rbp)
00000000000465b7	leaq	0x00061d72(%rip),%rsi
00000000000465be	call	*0x00061d6c(%rip)
00000000000465c4	movq	%rax,%rdi
00000000000465c7	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
00000000000465cc	leaq	0xf8(%rbp),%rdi
00000000000465d0	leaq	0xf0(%rbp),%rsi
00000000000465d4	leaq	0x0001cb29(%rip),%rcx
00000000000465db	leaq	0x0006a616(%rip),%r9
00000000000465e2	leaq	0x0001d015(%rip),%rdx
00000000000465e9	leaq	0x00069248(%rip),%r8
00000000000465f0	leaq	0x00016cdb(%rip),%r10
00000000000465f7	movq	%r10,0x18(%rsp)
00000000000465fc	movq	%r8,0x10(%rsp)
0000000000046601	movq	%rax,0x08(%rsp)
0000000000046606	movq	%rdx,(%rsp)
000000000004660a	movl	$0x00000180,%r8d
0000000000046610	xorb	%al,%al
0000000000046612	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000046617	addq	$0x30,%rsp
000000000004661b	popq	%rbp
000000000004661c	ret
-[PBXLSDebuggerAdaptor requestDebuggerExecUntilToFile:lineNumber:]:
000000000004661d	pushq	%rbp
000000000004661e	movq	%rsp,%rbp
0000000000046621	subq	$0x30,%rsp
0000000000046625	movq	%rdi,0xf8(%rbp)
0000000000046629	movq	%rsi,0xf0(%rbp)
000000000004662d	leaq	0x00061cfc(%rip),%rsi
0000000000046634	call	*0x00061cf6(%rip)
000000000004663a	movq	%rax,%rdi
000000000004663d	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000046642	leaq	0xf8(%rbp),%rdi
0000000000046646	leaq	0xf0(%rbp),%rsi
000000000004664a	leaq	0x0001cab3(%rip),%rcx
0000000000046651	leaq	0x0006a5a0(%rip),%r9
0000000000046658	leaq	0x0001cfee(%rip),%rdx
000000000004665f	leaq	0x000691d2(%rip),%r8
0000000000046666	leaq	0x00016c65(%rip),%r10
000000000004666d	movq	%r10,0x18(%rsp)
0000000000046672	movq	%r8,0x10(%rsp)
0000000000046677	movq	%rax,0x08(%rsp)
000000000004667c	movq	%rdx,(%rsp)
0000000000046680	movl	$0x00000185,%r8d
0000000000046686	xorb	%al,%al
0000000000046688	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000004668d	addq	$0x30,%rsp
0000000000046691	popq	%rbp
0000000000046692	ret
-[PBXLSDebuggerAdaptor requestDebuggerCompleteString:resultHandler:]:
0000000000046693	pushq	%rbp
0000000000046694	movq	%rsp,%rbp
0000000000046697	subq	$0x30,%rsp
000000000004669b	movq	%rdi,0xf8(%rbp)
000000000004669f	movq	%rsi,0xf0(%rbp)
00000000000466a3	leaq	0x00061c86(%rip),%rsi
00000000000466aa	call	*0x00061c80(%rip)
00000000000466b0	movq	%rax,%rdi
00000000000466b3	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
00000000000466b8	leaq	0xf8(%rbp),%rdi
00000000000466bc	leaq	0xf0(%rbp),%rsi
00000000000466c0	leaq	0x0001ca3d(%rip),%rcx
00000000000466c7	leaq	0x0006a52a(%rip),%r9
00000000000466ce	leaq	0x0001cfbb(%rip),%rdx
00000000000466d5	leaq	0x0006915c(%rip),%r8
00000000000466dc	leaq	0x00016bef(%rip),%r10
00000000000466e3	movq	%r10,0x18(%rsp)
00000000000466e8	movq	%r8,0x10(%rsp)
00000000000466ed	movq	%rax,0x08(%rsp)
00000000000466f2	movq	%rdx,(%rsp)
00000000000466f6	movl	$0x0000018a,%r8d
00000000000466fc	xorb	%al,%al
00000000000466fe	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000046703	addq	$0x30,%rsp
0000000000046707	popq	%rbp
0000000000046708	ret
-[PBXLSDebuggerAdaptor requestDebuggerFixAndContinue]:
0000000000046709	pushq	%rbp
000000000004670a	movq	%rsp,%rbp
000000000004670d	subq	$0x30,%rsp
0000000000046711	movq	%rdi,0xf8(%rbp)
0000000000046715	movq	%rsi,0xf0(%rbp)
0000000000046719	leaq	0x00061c10(%rip),%rsi
0000000000046720	call	*0x00061c0a(%rip)
0000000000046726	movq	%rax,%rdi
0000000000046729	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000004672e	leaq	0xf8(%rbp),%rdi
0000000000046732	leaq	0xf0(%rbp),%rsi
0000000000046736	leaq	0x0001c9c7(%rip),%rcx
000000000004673d	leaq	0x0006a4b4(%rip),%r9
0000000000046744	leaq	0x0001cf8a(%rip),%rdx
000000000004674b	leaq	0x000690e6(%rip),%r8
0000000000046752	leaq	0x00016b79(%rip),%r10
0000000000046759	movq	%r10,0x18(%rsp)
000000000004675e	movq	%r8,0x10(%rsp)
0000000000046763	movq	%rax,0x08(%rsp)
0000000000046768	movq	%rdx,(%rsp)
000000000004676c	movl	$0x0000018f,%r8d
0000000000046772	xorb	%al,%al
0000000000046774	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000046779	addq	$0x30,%rsp
000000000004677d	popq	%rbp
000000000004677e	ret
-[PBXLSDebuggerAdaptor requestFixAndContinueFile:patch:object:shlib:]:
000000000004677f	pushq	%rbp
0000000000046780	movq	%rsp,%rbp
0000000000046783	subq	$0x30,%rsp
0000000000046787	movq	%rdi,0xf8(%rbp)
000000000004678b	movq	%rsi,0xf0(%rbp)
000000000004678f	leaq	0x00061b9a(%rip),%rsi
0000000000046796	call	*0x00061b94(%rip)
000000000004679c	movq	%rax,%rdi
000000000004679f	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
00000000000467a4	leaq	0xf8(%rbp),%rdi
00000000000467a8	leaq	0xf0(%rbp),%rsi
00000000000467ac	leaq	0x0001c951(%rip),%rcx
00000000000467b3	leaq	0x0006a43e(%rip),%r9
00000000000467ba	leaq	0x0001cf4a(%rip),%rdx
00000000000467c1	leaq	0x00069070(%rip),%r8
00000000000467c8	leaq	0x00016b03(%rip),%r10
00000000000467cf	movq	%r10,0x18(%rsp)
00000000000467d4	movq	%r8,0x10(%rsp)
00000000000467d9	movq	%rax,0x08(%rsp)
00000000000467de	movq	%rdx,(%rsp)
00000000000467e2	movl	$0x00000194,%r8d
00000000000467e8	xorb	%al,%al
00000000000467ea	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
00000000000467ef	addq	$0x30,%rsp
00000000000467f3	popq	%rbp
00000000000467f4	ret
-[PBXLSDebuggerAdaptor requestDisassemblyOfFrame:mixedMode:resultHandler:]:
00000000000467f5	pushq	%rbp
00000000000467f6	movq	%rsp,%rbp
00000000000467f9	subq	$0x30,%rsp
00000000000467fd	movq	%rdi,0xf8(%rbp)
0000000000046801	movq	%rsi,0xf0(%rbp)
0000000000046805	leaq	0x00061b24(%rip),%rsi
000000000004680c	call	*0x00061b1e(%rip)
0000000000046812	movq	%rax,%rdi
0000000000046815	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000004681a	leaq	0xf8(%rbp),%rdi
000000000004681e	leaq	0xf0(%rbp),%rsi
0000000000046822	leaq	0x0001c8db(%rip),%rcx
0000000000046829	leaq	0x0006a3c8(%rip),%r9
0000000000046830	leaq	0x0001cf1a(%rip),%rdx
0000000000046837	leaq	0x00068ffa(%rip),%r8
000000000004683e	leaq	0x00016a8d(%rip),%r10
0000000000046845	movq	%r10,0x18(%rsp)
000000000004684a	movq	%r8,0x10(%rsp)
000000000004684f	movq	%rax,0x08(%rsp)
0000000000046854	movq	%rdx,(%rsp)
0000000000046858	movl	$0x00000199,%r8d
000000000004685e	xorb	%al,%al
0000000000046860	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000046865	addq	$0x30,%rsp
0000000000046869	popq	%rbp
000000000004686a	ret
-[PBXLSDebuggerAdaptor supportsContinueToHere]:
000000000004686b	pushq	%rbp
000000000004686c	movq	%rsp,%rbp
000000000004686f	xorl	%eax,%eax
0000000000046871	popq	%rbp
0000000000046872	ret
-[PBXLSDebuggerAdaptor supportsFixAndContinue]:
0000000000046873	pushq	%rbp
0000000000046874	movq	%rsp,%rbp
0000000000046877	xorl	%eax,%eax
0000000000046879	popq	%rbp
000000000004687a	ret
-[PBXLSDebuggerAdaptor supportsWatchpoints]:
000000000004687b	pushq	%rbp
000000000004687c	movq	%rsp,%rbp
000000000004687f	xorl	%eax,%eax
0000000000046881	popq	%rbp
0000000000046882	ret
-[PBXLSDebuggerAdaptor sendSIGINT]:
0000000000046883	pushq	%rbp
0000000000046884	movq	%rsp,%rbp
0000000000046887	popq	%rbp
0000000000046888	ret
-[PBXLSDebuggerAdaptor requestSuspendAllThreads]:
0000000000046889	pushq	%rbp
000000000004688a	movq	%rsp,%rbp
000000000004688d	popq	%rbp
000000000004688e	ret
-[PBXLSDebuggerAdaptor newDataValueForFrame:]:
000000000004688f	pushq	%rbp
0000000000046890	movq	%rsp,%rbp
0000000000046893	xorl	%eax,%eax
0000000000046895	popq	%rbp
0000000000046896	ret
-[PBXLSDebuggerAdaptor newFrameContextContainerDataValue]:
0000000000046897	pushq	%rbp
0000000000046898	movq	%rsp,%rbp
000000000004689b	xorl	%eax,%eax
000000000004689d	popq	%rbp
000000000004689e	ret
-[PBXLSDebuggerAdaptor newGlobalContainerDataValue]:
000000000004689f	pushq	%rbp
00000000000468a0	movq	%rsp,%rbp
00000000000468a3	xorl	%eax,%eax
00000000000468a5	popq	%rbp
00000000000468a6	ret
-[PBXLSDebuggerAdaptor globalVariableDVAddDataValue:forGlobalDict:]:
00000000000468a7	pushq	%rbp
00000000000468a8	movq	%rsp,%rbp
00000000000468ab	popq	%rbp
00000000000468ac	ret
-[PBXLSDebuggerAdaptor globalVariableDVRemoveDataValueForDict:]:
00000000000468ad	pushq	%rbp
00000000000468ae	movq	%rsp,%rbp
00000000000468b1	popq	%rbp
00000000000468b2	ret
-[PBXLSDebuggerAdaptor requestNewDataValueForExpression:addToContainerDataValue:blockStartAddress:]:
00000000000468b3	pushq	%rbp
00000000000468b4	movq	%rsp,%rbp
00000000000468b7	popq	%rbp
00000000000468b8	ret
-[PBXLSDebuggerAdaptor requestNewDataValueForExpression:addToContainerDataValue:bindToFrame:]:
00000000000468b9	pushq	%rbp
00000000000468ba	movq	%rsp,%rbp
00000000000468bd	popq	%rbp
00000000000468be	ret
-[PBXLSDebuggerAdaptor requestNewDataValueForExpression:addToContainerDataValue:locationSpecifier:]:
00000000000468bf	pushq	%rbp
00000000000468c0	movq	%rsp,%rbp
00000000000468c3	popq	%rbp
00000000000468c4	ret
-[PBXLSDebuggerAdaptor canCloneDataValue:]:
00000000000468c5	pushq	%rbp
00000000000468c6	movq	%rsp,%rbp
00000000000468c9	xorl	%eax,%eax
00000000000468cb	popq	%rbp
00000000000468cc	ret
-[PBXLSDebuggerAdaptor requestCloneDataValueByPathExpression:addToContainerDataValue:]:
00000000000468cd	pushq	%rbp
00000000000468ce	movq	%rsp,%rbp
00000000000468d1	popq	%rbp
00000000000468d2	ret
-[PBXLSDebuggerAdaptor requestCloneDataValueByContent:viewAsExpression:addToContainerDataValue:]:
00000000000468d3	pushq	%rbp
00000000000468d4	movq	%rsp,%rbp
00000000000468d7	popq	%rbp
00000000000468d8	ret
-[PBXLSDebuggerAdaptor logMessage:]:
00000000000468d9	pushq	%rbp
00000000000468da	movq	%rsp,%rbp
00000000000468dd	popq	%rbp
00000000000468de	ret
-[PBXLSDebuggerAdaptor requestDynamicLinkerImageControllerUpdate]:
00000000000468df	pushq	%rbp
00000000000468e0	movq	%rsp,%rbp
00000000000468e3	popq	%rbp
00000000000468e4	ret
-[PBXLSDebuggerAdaptor requestGlobalsBrowserUpdate]:
00000000000468e5	pushq	%rbp
00000000000468e6	movq	%rsp,%rbp
00000000000468e9	popq	%rbp
00000000000468ea	ret
-[PBXLSDebuggerAdaptor rawMemoryDataForAddressExpression:numberOfBytes:resultHandler:]:
00000000000468eb	pushq	%rbp
00000000000468ec	movq	%rsp,%rbp
00000000000468ef	subq	$0x30,%rsp
00000000000468f3	movq	%rdi,0xf8(%rbp)
00000000000468f7	movq	%rsi,0xf0(%rbp)
00000000000468fb	leaq	0x00061a2e(%rip),%rsi
0000000000046902	call	*0x00061a28(%rip)
0000000000046908	movq	%rax,%rdi
000000000004690b	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000046910	leaq	0xf8(%rbp),%rdi
0000000000046914	leaq	0xf0(%rbp),%rsi
0000000000046918	leaq	0x0001c7e5(%rip),%rcx
000000000004691f	leaq	0x0006a2d2(%rip),%r9
0000000000046926	leaq	0x0001ce6f(%rip),%rdx
000000000004692d	leaq	0x00068f04(%rip),%r8
0000000000046934	leaq	0x00016997(%rip),%r10
000000000004693b	movq	%r10,0x18(%rsp)
0000000000046940	movq	%r8,0x10(%rsp)
0000000000046945	movq	%rax,0x08(%rsp)
000000000004694a	movq	%rdx,(%rsp)
000000000004694e	movl	$0x0000020b,%r8d
0000000000046954	xorb	%al,%al
0000000000046956	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000004695b	addq	$0x30,%rsp
000000000004695f	popq	%rbp
0000000000046960	ret
-[PBXLSDebuggerAdaptor requestStackFramesForThread:numberOfStackFrames:resultHandler:]:
0000000000046961	pushq	%rbp
0000000000046962	movq	%rsp,%rbp
0000000000046965	subq	$0x30,%rsp
0000000000046969	movq	%rdi,0xf8(%rbp)
000000000004696d	movq	%rsi,0xf0(%rbp)
0000000000046971	leaq	0x000619b8(%rip),%rsi
0000000000046978	call	*0x000619b2(%rip)
000000000004697e	movq	%rax,%rdi
0000000000046981	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000046986	leaq	0xf8(%rbp),%rdi
000000000004698a	leaq	0xf0(%rbp),%rsi
000000000004698e	leaq	0x0001c76f(%rip),%rcx
0000000000046995	leaq	0x0006a25c(%rip),%r9
000000000004699c	leaq	0x0001ce50(%rip),%rdx
00000000000469a3	leaq	0x00068e8e(%rip),%r8
00000000000469aa	leaq	0x00016921(%rip),%r10
00000000000469b1	movq	%r10,0x18(%rsp)
00000000000469b6	movq	%r8,0x10(%rsp)
00000000000469bb	movq	%rax,0x08(%rsp)
00000000000469c0	movq	%rdx,(%rsp)
00000000000469c4	movl	$0x00000210,%r8d
00000000000469ca	xorb	%al,%al
00000000000469cc	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
00000000000469d1	addq	$0x30,%rsp
00000000000469d5	popq	%rbp
00000000000469d6	ret
-[PBXLSDebuggerAdaptor requestLoadGlobalsInDict:]:
00000000000469d7	pushq	%rbp
00000000000469d8	movq	%rsp,%rbp
00000000000469db	popq	%rbp
00000000000469dc	ret
-[PBXLSDebuggerAdaptor requestLoadInferiorPlugin:]:
00000000000469dd	pushq	%rbp
00000000000469de	movq	%rsp,%rbp
00000000000469e1	popq	%rbp
00000000000469e2	ret
-[PBXLSDebuggerAdaptor registerIDforRelease:]:
00000000000469e3	pushq	%rbp
00000000000469e4	movq	%rsp,%rbp
00000000000469e7	pushq	%rbx
00000000000469e8	pushq	%rax
00000000000469e9	movq	%rdi,%rbx
00000000000469ec	movq	0x00068a8d(%rip),%rax
00000000000469f3	movq	(%rbx,%rax),%rdi
00000000000469f7	testq	%rdi,%rdi
00000000000469fa	jne	0x00046a28
00000000000469fc	movq	0x0005eafd(%rip),%rsi
0000000000046a03	movq	0x00061a56(%rip),%rdi
0000000000046a0a	call	*0x0003d6c8(%rip)
0000000000046a10	movq	0x00068a69(%rip),%rdx
0000000000046a17	movq	%rax,%rdi
0000000000046a1a	movq	%rbx,%rsi
0000000000046a1d	addq	$0x08,%rsp
0000000000046a21	popq	%rbx
0000000000046a22	popq	%rbp
0000000000046a23	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000046a28	movq	0x000618d1(%rip),%rax
0000000000046a2f	leaq	0x000618ca(%rip),%rsi
0000000000046a36	addq	$0x08,%rsp
0000000000046a3a	popq	%rbx
0000000000046a3b	popq	%rbp
0000000000046a3c	jmp	*%rax
-[PBXLSDebuggerAdaptor releaseInferiorResources]:
0000000000046a3e	pushq	%rbp
0000000000046a3f	movq	%rsp,%rbp
0000000000046a42	movq	0x00068a37(%rip),%rax
0000000000046a49	movq	(%rdi,%rax),%rdi
0000000000046a4d	movq	0x0005e5fc(%rip),%rsi
0000000000046a54	popq	%rbp
0000000000046a55	jmp	*0x0003d67d(%rip)
-[PBXLSDebuggerAdaptor expressionsDescriptionDV]:
0000000000046a5b	pushq	%rbp
0000000000046a5c	movq	%rsp,%rbp
0000000000046a5f	xorl	%eax,%eax
0000000000046a61	popq	%rbp
0000000000046a62	ret
-[PBXLSDebuggerAdaptor createNewExpressionsDescriptionDV]:
0000000000046a63	pushq	%rbp
0000000000046a64	movq	%rsp,%rbp
0000000000046a67	xorl	%eax,%eax
0000000000046a69	popq	%rbp
0000000000046a6a	ret
-[PBXLSDebuggerAdaptor globalsDescriptionDV]:
0000000000046a6b	pushq	%rbp
0000000000046a6c	movq	%rsp,%rbp
0000000000046a6f	xorl	%eax,%eax
0000000000046a71	popq	%rbp
0000000000046a72	ret
-[PBXLSDebuggerAdaptor registersDescriptionDVExpressionsWindow]:
0000000000046a73	pushq	%rbp
0000000000046a74	movq	%rsp,%rbp
0000000000046a77	xorl	%eax,%eax
0000000000046a79	popq	%rbp
0000000000046a7a	ret
-[PBXLSDebuggerAdaptor requestUpdateUnboundDataValuesForStackFrame:]:
0000000000046a7b	pushq	%rbp
0000000000046a7c	movq	%rsp,%rbp
0000000000046a7f	popq	%rbp
0000000000046a80	ret
-[PBXLSDebuggerAdaptor undoSupported]:
0000000000046a81	pushq	%rbp
0000000000046a82	movq	%rsp,%rbp
0000000000046a85	xorl	%eax,%eax
0000000000046a87	popq	%rbp
0000000000046a88	ret
-[PBXLSDebuggerAdaptor requestDebuggerTurnBreakpointsOn]:
0000000000046a89	pushq	%rbp
0000000000046a8a	movq	%rsp,%rbp
0000000000046a8d	subq	$0x30,%rsp
0000000000046a91	movq	%rdi,0xf8(%rbp)
0000000000046a95	movq	%rsi,0xf0(%rbp)
0000000000046a99	leaq	0x00061890(%rip),%rsi
0000000000046aa0	call	*0x0006188a(%rip)
0000000000046aa6	movq	%rax,%rdi
0000000000046aa9	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000046aae	leaq	0xf8(%rbp),%rdi
0000000000046ab2	leaq	0xf0(%rbp),%rsi
0000000000046ab6	leaq	0x0001c647(%rip),%rcx
0000000000046abd	leaq	0x0006a134(%rip),%r9
0000000000046ac4	leaq	0x0001cd7f(%rip),%rdx
0000000000046acb	leaq	0x00068d66(%rip),%r8
0000000000046ad2	leaq	0x000167f9(%rip),%r10
0000000000046ad9	movq	%r10,0x18(%rsp)
0000000000046ade	movq	%r8,0x10(%rsp)
0000000000046ae3	movq	%rax,0x08(%rsp)
0000000000046ae8	movq	%rdx,(%rsp)
0000000000046aec	movl	$0x00000251,%r8d
0000000000046af2	xorb	%al,%al
0000000000046af4	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000046af9	addq	$0x30,%rsp
0000000000046afd	popq	%rbp
0000000000046afe	ret
-[PBXLSDebuggerAdaptor requestDebuggerTurnBreakpointsOff]:
0000000000046aff	pushq	%rbp
0000000000046b00	movq	%rsp,%rbp
0000000000046b03	subq	$0x30,%rsp
0000000000046b07	movq	%rdi,0xf8(%rbp)
0000000000046b0b	movq	%rsi,0xf0(%rbp)
0000000000046b0f	leaq	0x0006181a(%rip),%rsi
0000000000046b16	call	*0x00061814(%rip)
0000000000046b1c	movq	%rax,%rdi
0000000000046b1f	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000046b24	leaq	0xf8(%rbp),%rdi
0000000000046b28	leaq	0xf0(%rbp),%rsi
0000000000046b2c	leaq	0x0001c5d1(%rip),%rcx
0000000000046b33	leaq	0x0006a0be(%rip),%r9
0000000000046b3a	leaq	0x0001cd42(%rip),%rdx
0000000000046b41	leaq	0x00068cf0(%rip),%r8
0000000000046b48	leaq	0x00016783(%rip),%r10
0000000000046b4f	movq	%r10,0x18(%rsp)
0000000000046b54	movq	%r8,0x10(%rsp)
0000000000046b59	movq	%rax,0x08(%rsp)
0000000000046b5e	movq	%rdx,(%rsp)
0000000000046b62	movl	$0x00000256,%r8d
0000000000046b68	xorb	%al,%al
0000000000046b6a	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000046b6f	addq	$0x30,%rsp
0000000000046b73	popq	%rbp
0000000000046b74	ret
-[PBXLSDebuggerAdaptor requestDebuggerSetStopOnDebuggerDebugStrState]:
0000000000046b75	pushq	%rbp
0000000000046b76	movq	%rsp,%rbp
0000000000046b79	popq	%rbp
0000000000046b7a	ret
-[PBXLSDebuggerAdaptor supportsCleanQuit]:
0000000000046b7b	pushq	%rbp
0000000000046b7c	movq	%rsp,%rbp
0000000000046b7f	xorl	%eax,%eax
0000000000046b81	popq	%rbp
0000000000046b82	ret
-[PBXLSDebuggerAdaptor requestDebuggerQuit]:
0000000000046b83	pushq	%rbp
0000000000046b84	movq	%rsp,%rbp
0000000000046b87	popq	%rbp
0000000000046b88	ret
-[PBXLSDebuggerAdaptor isIntrospectionLibraryLoaded]:
0000000000046b89	pushq	%rbp
0000000000046b8a	movq	%rsp,%rbp
0000000000046b8d	xorl	%eax,%eax
0000000000046b8f	popq	%rbp
0000000000046b90	ret
-[PBXLSDebuggerAdaptor isRemoteDebugging]:
0000000000046b91	pushq	%rbp
0000000000046b92	movq	%rsp,%rbp
0000000000046b95	xorl	%eax,%eax
0000000000046b97	popq	%rbp
0000000000046b98	ret
-[PBXLSDebuggerAdaptor supportsRunInDebugger]:
0000000000046b99	pushq	%rbp
0000000000046b9a	movq	%rsp,%rbp
0000000000046b9d	xorl	%eax,%eax
0000000000046b9f	popq	%rbp
0000000000046ba0	ret
-[PBXLSDebuggerAdaptor supportsUnicharXcode_CFDataFormatters]:
0000000000046ba1	pushq	%rbp
0000000000046ba2	movq	%rsp,%rbp
0000000000046ba5	movl	$0x00000001,%eax
0000000000046baa	popq	%rbp
0000000000046bab	ret
-[PBXLSDebuggerAdaptor setSupportsUnicharXcode_CFDataFormatters:]:
0000000000046bac	pushq	%rbp
0000000000046bad	movq	%rsp,%rbp
0000000000046bb0	subq	$0x30,%rsp
0000000000046bb4	movq	%rdi,0xf8(%rbp)
0000000000046bb8	movq	%rsi,0xf0(%rbp)
0000000000046bbc	leaq	0x0006176d(%rip),%rsi
0000000000046bc3	call	*0x00061767(%rip)
0000000000046bc9	movq	%rax,%rdi
0000000000046bcc	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000046bd1	leaq	0xf8(%rbp),%rdi
0000000000046bd5	leaq	0xf0(%rbp),%rsi
0000000000046bd9	leaq	0x0001c524(%rip),%rcx
0000000000046be0	leaq	0x0006a011(%rip),%r9
0000000000046be7	leaq	0x0001cccf(%rip),%rdx
0000000000046bee	leaq	0x00068c43(%rip),%r8
0000000000046bf5	leaq	0x000166d6(%rip),%r10
0000000000046bfc	movq	%r10,0x18(%rsp)
0000000000046c01	movq	%r8,0x10(%rsp)
0000000000046c06	movq	%rax,0x08(%rsp)
0000000000046c0b	movq	%rdx,(%rsp)
0000000000046c0f	movl	$0x00000283,%r8d
0000000000046c15	xorb	%al,%al
0000000000046c17	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000046c1c	addq	$0x30,%rsp
0000000000046c20	popq	%rbp
0000000000046c21	ret
0000000000046c22	nop
0000000000046c23	nop
0000000000046c24	nop
___51-[PBXLSDebuggingSession setFoundationDebugSession:]_block_invoke_0:
0000000000046c25	pushq	%rbp
0000000000046c26	movq	%rsp,%rbp
0000000000046c29	pushq	%r15
0000000000046c2b	pushq	%r14
0000000000046c2d	pushq	%r13
0000000000046c2f	pushq	%r12
0000000000046c31	pushq	%rbx
0000000000046c32	subq	$0x000000d8,%rsp
0000000000046c39	movq	%rcx,0xffffff08(%rbp)
0000000000046c40	movq	%rdi,%r15
0000000000046c43	movq	0x0003d456(%rip),%rax
0000000000046c4a	movq	(%rax),%rax
0000000000046c4d	movq	%rax,0xd0(%rbp)
0000000000046c51	movq	0x20(%r15),%rax
0000000000046c55	movq	0x0006885c(%rip),%rcx
0000000000046c5c	movq	(%rax,%rcx),%rdi
0000000000046c60	movq	0x0005e141(%rip),%rsi
0000000000046c67	movq	0x0003d46a(%rip),%rbx
0000000000046c6e	call	*%rbx
0000000000046c70	movq	0x00060989(%rip),%rsi
0000000000046c77	movq	%rax,%rdi
0000000000046c7a	call	*%rbx
0000000000046c7c	cmpl	$0x03,%eax
0000000000046c7f	jne	0x00046d5e
0000000000046c85	xorps	%xmm0,%xmm0
0000000000046c88	movaps	%xmm0,0xc0(%rbp)
0000000000046c8c	movaps	%xmm0,0xb0(%rbp)
0000000000046c90	movaps	%xmm0,0xa0(%rbp)
0000000000046c94	movaps	%xmm0,0x90(%rbp)
0000000000046c98	movq	0x20(%r15),%rax
0000000000046c9c	movq	0x00068815(%rip),%rcx
0000000000046ca3	movq	(%rax,%rcx),%rdi
0000000000046ca7	movq	0x0005f73a(%rip),%rsi
0000000000046cae	movq	0x0003d423(%rip),%rbx
0000000000046cb5	call	*%rbx
0000000000046cb7	movq	0x00060b02(%rip),%rsi
0000000000046cbe	movq	%rax,%rdi
0000000000046cc1	call	*%rbx
0000000000046cc3	movq	%rax,%r13
0000000000046cc6	leaq	0x000616b3(%rip),%rsi
0000000000046ccd	leaq	0x90(%rbp),%rdx
0000000000046cd1	leaq	0xffffff10(%rbp),%rcx
0000000000046cd8	movq	%r13,%rdi
0000000000046cdb	movl	$0x00000010,%r8d
0000000000046ce1	call	*0x00061699(%rip)
0000000000046ce7	movq	%rax,%rbx
0000000000046cea	testq	%rbx,%rbx
0000000000046ced	je	0x00046d54
0000000000046cef	movq	0xa0(%rbp),%rax
0000000000046cf3	movq	(%rax),%r14
0000000000046cf6	xorl	%r12d,%r12d
0000000000046cf9	movq	0xa0(%rbp),%rax
0000000000046cfd	cmpq	%r14,(%rax)
0000000000046d00	je	0x00046d0a
0000000000046d02	movq	%r13,%rdi
0000000000046d05	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
0000000000046d0a	movq	0x98(%rbp),%rax
0000000000046d0e	movq	(%rax,%r12,8),%rdx
0000000000046d12	movq	0x20(%r15),%rdi
0000000000046d16	movq	0x00060aab(%rip),%rsi
0000000000046d1d	call	*0x0003d3b5(%rip)
0000000000046d23	incq	%r12
0000000000046d26	cmpq	%rbx,%r12
0000000000046d29	jb	0x00046cf9
0000000000046d2b	movq	%r13,%rdi
0000000000046d2e	leaq	0x0006164b(%rip),%rsi
0000000000046d35	leaq	0x90(%rbp),%rdx
0000000000046d39	leaq	0xffffff10(%rbp),%rcx
0000000000046d40	movl	$0x00000010,%r8d
0000000000046d46	call	*0x00061634(%rip)
0000000000046d4c	movq	%rax,%rbx
0000000000046d4f	testq	%rbx,%rbx
0000000000046d52	jne	0x00046cf6
0000000000046d54	movq	0xffffff08(%rbp),%rax
0000000000046d5b	movb	$0x01,(%rax)
0000000000046d5e	movq	0x0003d33b(%rip),%rax
0000000000046d65	movq	(%rax),%rax
0000000000046d68	cmpq	0xd0(%rbp),%rax
0000000000046d6c	jne	0x00046d80
0000000000046d6e	addq	$0x000000d8,%rsp
0000000000046d75	popq	%rbx
0000000000046d76	popq	%r12
0000000000046d78	popq	%r13
0000000000046d7a	popq	%r14
0000000000046d7c	popq	%r15
0000000000046d7e	popq	%rbp
0000000000046d7f	ret
0000000000046d80	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
0000000000046d85	nopl	%cs:0x00000000(%rax,%rax)
___copy_helper_block_:
0000000000046d90	pushq	%rbp
0000000000046d91	movq	%rsp,%rbp
0000000000046d94	addq	$0x20,%rdi
0000000000046d98	movq	0x20(%rsi),%rsi
0000000000046d9c	movl	$0x00000003,%edx
0000000000046da1	popq	%rbp
0000000000046da2	jmp	0x0004e662	; symbol stub for: __Block_object_assign
0000000000046da7	nopw	0x00000000(%rax,%rax)
___destroy_helper_block_:
0000000000046db0	pushq	%rbp
0000000000046db1	movq	%rsp,%rbp
0000000000046db4	movq	0x20(%rdi),%rdi
0000000000046db8	movl	$0x00000003,%esi
0000000000046dbd	popq	%rbp
0000000000046dbe	jmp	0x0004e668	; symbol stub for: __Block_object_dispose
0000000000046dc3	nop
0000000000046dc4	nop
0000000000046dc5	nop
0000000000046dc6	nop
0000000000046dc7	nop
0000000000046dc8	nop
0000000000046dc9	nop
0000000000046dca	nop
0000000000046dcb	nop
0000000000046dcc	nop
0000000000046dcd	nop
0000000000046dce	nop
-[PBXLSDebuggingSession debuggerAdaptorForExecutableRestart]:
0000000000046dcf	pushq	%rbp
0000000000046dd0	movq	%rsp,%rbp
0000000000046dd3	pushq	%r14
0000000000046dd5	pushq	%rbx
0000000000046dd6	movq	%rdi,%rbx
0000000000046dd9	movq	0x000686e8(%rip),%rdi
0000000000046de0	addq	%rbx,%rdi
0000000000046de3	callq	0x0004e63e	; symbol stub for: _objc_read_weak
0000000000046de8	testq	%rax,%rax
0000000000046deb	je	0x00046e01
0000000000046ded	movq	0x000686d4(%rip),%rax
0000000000046df4	addq	%rax,%rbx
0000000000046df7	movq	%rbx,%rdi
0000000000046dfa	callq	0x0004e63e	; symbol stub for: _objc_read_weak
0000000000046dff	jmp	0x00046e50
0000000000046e01	movq	0x00060928(%rip),%rsi
0000000000046e08	movq	0x0003d2c9(%rip),%r14
0000000000046e0f	movq	%rbx,%rdi
0000000000046e12	call	*%r14
0000000000046e15	movq	0x000609c4(%rip),%rsi
0000000000046e1c	movq	%rax,%rdi
0000000000046e1f	call	*%r14
0000000000046e22	movq	%rax,%rbx
0000000000046e25	leaq	0x000614e4(%rip),%rsi
0000000000046e2c	movq	%rbx,%rdi
0000000000046e2f	call	*0x000614db(%rip)
0000000000046e35	movq	%rax,%rcx
0000000000046e38	xorl	%eax,%eax
0000000000046e3a	cmpq	$0x01,%rcx
0000000000046e3e	jne	0x00046e50
0000000000046e40	movq	0x0005fa59(%rip),%rsi
0000000000046e47	movq	%rbx,%rdi
0000000000046e4a	call	*0x0003d288(%rip)
0000000000046e50	popq	%rbx
0000000000046e51	popq	%r14
0000000000046e53	popq	%rbp
0000000000046e54	ret
0000000000046e55	nop
0000000000046e56	nop
0000000000046e57	nop
0000000000046e58	nop
0000000000046e59	nop
0000000000046e5a	nop
0000000000046e5b	nop
-[PBXLSDebuggingSession syncWithDebugger]:
0000000000046e5c	pushq	%rbp
0000000000046e5d	movq	%rsp,%rbp
0000000000046e60	movq	0x000608c9(%rip),%rsi
0000000000046e67	call	*0x0003d26b(%rip)
0000000000046e6d	movq	0x0006096c(%rip),%rsi
0000000000046e74	movq	%rax,%rdi
0000000000046e77	call	*0x0003d25b(%rip)
0000000000046e7d	movq	0x0005ef5c(%rip),%rsi
0000000000046e84	movq	0x0005e54d(%rip),%rdx
0000000000046e8b	movq	%rax,%rdi
0000000000046e8e	movq	0x0003d243(%rip),%rax
0000000000046e95	popq	%rbp
0000000000046e96	jmp	*%rax
-[PBXLSDebuggingSession suspendExecutable]:
0000000000046e98	pushq	%rbp
0000000000046e99	movq	%rsp,%rbp
0000000000046e9c	movq	0x0006088d(%rip),%rsi
0000000000046ea3	call	*0x0003d22f(%rip)
0000000000046ea9	movq	0x00060930(%rip),%rsi
0000000000046eb0	movq	%rax,%rdi
0000000000046eb3	call	*0x0003d21f(%rip)
0000000000046eb9	movq	0x0005ef20(%rip),%rsi
0000000000046ec0	movq	0x00060949(%rip),%rdx
0000000000046ec7	movq	%rax,%rdi
0000000000046eca	movq	0x0003d207(%rip),%rax
0000000000046ed1	popq	%rbp
0000000000046ed2	jmp	*%rax
-[PBXLSDebuggingSession restartExecutable]:
0000000000046ed4	pushq	%rbp
0000000000046ed5	movq	%rsp,%rbp
0000000000046ed8	pushq	%rbx
0000000000046ed9	pushq	%rax
0000000000046eda	movq	%rdi,%rbx
0000000000046edd	movq	0x000685e4(%rip),%rdi
0000000000046ee4	addq	%rbx,%rdi
0000000000046ee7	callq	0x0004e63e	; symbol stub for: _objc_read_weak
0000000000046eec	testq	%rax,%rax
0000000000046eef	jne	0x00046ef8
0000000000046ef1	addq	$0x08,%rsp
0000000000046ef5	popq	%rbx
0000000000046ef6	popq	%rbp
0000000000046ef7	ret
0000000000046ef8	movq	0x000685c9(%rip),%rax
0000000000046eff	addq	%rax,%rbx
0000000000046f02	movq	%rbx,%rdi
0000000000046f05	callq	0x0004e63e	; symbol stub for: _objc_read_weak
0000000000046f0a	movq	0x0005f5b7(%rip),%rsi
0000000000046f11	movq	%rax,%rdi
0000000000046f14	addq	$0x08,%rsp
0000000000046f18	popq	%rbx
0000000000046f19	popq	%rbp
0000000000046f1a	jmp	*0x0003d1b8(%rip)
-[PBXLSDebuggingSession sendLogMessageToDebuggers:]:
0000000000046f20	pushq	%rbp
0000000000046f21	movq	%rsp,%rbp
0000000000046f24	pushq	%rbx
0000000000046f25	pushq	%rax
0000000000046f26	movq	%rdx,%rbx
0000000000046f29	movq	0x00060800(%rip),%rsi
0000000000046f30	call	*0x0003d1a2(%rip)
0000000000046f36	movq	0x000608a3(%rip),%rsi
0000000000046f3d	movq	%rax,%rdi
0000000000046f40	call	*0x0003d192(%rip)
0000000000046f46	movq	0x000605c3(%rip),%rsi
0000000000046f4d	movq	0x000608f4(%rip),%rdx
0000000000046f54	movq	%rax,%rdi
0000000000046f57	movq	%rbx,%rcx
0000000000046f5a	movq	0x0003d177(%rip),%rax
0000000000046f61	addq	$0x08,%rsp
0000000000046f65	popq	%rbx
0000000000046f66	popq	%rbp
0000000000046f67	jmp	*%rax
-[PBXLSDebuggingSession customDataFormattersEnabled]:
0000000000046f69	pushq	%rbp
0000000000046f6a	movq	%rsp,%rbp
0000000000046f6d	xorl	%eax,%eax
0000000000046f6f	popq	%rbp
0000000000046f70	ret
0000000000046f71	nop
0000000000046f72	nop
0000000000046f73	nop
0000000000046f74	nop
0000000000046f75	nop
0000000000046f76	nop
0000000000046f77	nop
0000000000046f78	nop
0000000000046f79	nop
0000000000046f7a	nop
0000000000046f7b	nop
0000000000046f7c	nop
0000000000046f7d	nop
0000000000046f7e	nop
0000000000046f7f	nop
___copy_helper_block_170:
0000000000046f80	pushq	%rbp
0000000000046f81	movq	%rsp,%rbp
0000000000046f84	addq	$0x20,%rdi
0000000000046f88	movq	0x20(%rsi),%rsi
0000000000046f8c	movl	$0x00000003,%edx
0000000000046f91	popq	%rbp
0000000000046f92	jmp	0x0004e662	; symbol stub for: __Block_object_assign
0000000000046f97	nopw	0x00000000(%rax,%rax)
___destroy_helper_block_171:
0000000000046fa0	pushq	%rbp
0000000000046fa1	movq	%rsp,%rbp
0000000000046fa4	movq	0x20(%rdi),%rdi
0000000000046fa8	movl	$0x00000003,%esi
0000000000046fad	popq	%rbp
0000000000046fae	jmp	0x0004e668	; symbol stub for: __Block_object_dispose
0000000000046fb3	nop
0000000000046fb4	nop
0000000000046fb5	nop
0000000000046fb6	nop
0000000000046fb7	nop
0000000000046fb8	nop
0000000000046fb9	nop
0000000000046fba	nop
0000000000046fbb	nop
0000000000046fbc	nop
0000000000046fbd	nop
0000000000046fbe	nop
-[PBXLSDebuggingSession _addFileBreakpointObserversIfNeeded:]:
0000000000046fbf	pushq	%rbp
0000000000046fc0	movq	%rsp,%rbp
0000000000046fc3	pushq	%r14
0000000000046fc5	pushq	%rbx
0000000000046fc6	movq	%rdx,%rbx
0000000000046fc9	movq	%rdi,%r14
0000000000046fcc	movq	0x00060905(%rip),%rsi
0000000000046fd3	movq	0x00061b9e(%rip),%rdi
0000000000046fda	call	*0x0003d0f8(%rip)
0000000000046fe0	testb	%al,%al
0000000000046fe2	jne	0x00046fe9
0000000000046fe4	popq	%rbx
0000000000046fe5	popq	%r14
0000000000046fe7	popq	%rbp
0000000000046fe8	ret
0000000000046fe9	movq	0x000607e0(%rip),%rsi
0000000000046ff0	movq	0x0006fd71(%rip),%rcx
0000000000046ff7	leaq	0x0006fd6a(%rip),%r9
0000000000046ffe	movq	%rbx,%rdi
0000000000047001	movq	%r14,%rdx
0000000000047004	movl	$0x00000001,%r8d
000000000004700a	popq	%rbx
000000000004700b	popq	%r14
000000000004700d	popq	%rbp
000000000004700e	jmp	*0x0003d0c4(%rip)
-[PBXLSDebuggingSession _removeFileBreakpointObserversIfNeeded:]:
0000000000047014	pushq	%rbp
0000000000047015	movq	%rsp,%rbp
0000000000047018	pushq	%r14
000000000004701a	pushq	%rbx
000000000004701b	movq	%rdx,%rbx
000000000004701e	movq	%rdi,%r14
0000000000047021	movq	0x000608b0(%rip),%rsi
0000000000047028	movq	0x00061b49(%rip),%rdi
000000000004702f	call	*0x0003d0a3(%rip)
0000000000047035	testb	%al,%al
0000000000047037	jne	0x0004703e
0000000000047039	popq	%rbx
000000000004703a	popq	%r14
000000000004703c	popq	%rbp
000000000004703d	ret
000000000004703e	movq	0x00060773(%rip),%rsi
0000000000047045	movq	0x0006fd1c(%rip),%rcx
000000000004704c	leaq	0x0006fd15(%rip),%r8
0000000000047053	movq	%rbx,%rdi
0000000000047056	movq	%r14,%rdx
0000000000047059	popq	%rbx
000000000004705a	popq	%r14
000000000004705c	popq	%rbp
000000000004705d	jmp	*0x0003d075(%rip)
0000000000047063	nop
0000000000047064	nop
0000000000047065	nop
0000000000047066	nop
0000000000047067	nop
0000000000047068	nop
0000000000047069	nop
000000000004706a	nop
000000000004706b	nop
000000000004706c	nop
000000000004706d	nop
-[PBXLSDebuggingSession _ensureEnabledBreakpointsAreCreated]:
000000000004706e	pushq	%rbp
000000000004706f	movq	%rsp,%rbp
0000000000047072	pushq	%r15
0000000000047074	pushq	%r14
0000000000047076	pushq	%r13
0000000000047078	pushq	%r12
000000000004707a	pushq	%rbx
000000000004707b	subq	$0x000000e8,%rsp
0000000000047082	movq	%rdi,%rbx
0000000000047085	movq	0x0003d014(%rip),%rax
000000000004708c	movq	(%rax),%rax
000000000004708f	movq	%rax,0xd0(%rbp)
0000000000047093	movq	0x00060696(%rip),%rsi
000000000004709a	movq	0x0003d037(%rip),%r14
00000000000470a1	call	*%r14
00000000000470a4	movq	0x00060735(%rip),%rsi
00000000000470ab	movq	%rax,%rdi
00000000000470ae	call	*%r14
00000000000470b1	movq	%rax,0xffffff00(%rbp)
00000000000470b8	leaq	0x00061251(%rip),%rsi
00000000000470bf	movq	%rax,%rdi
00000000000470c2	call	*0x00061248(%rip)
00000000000470c8	testq	%rax,%rax
00000000000470cb	je	0x00047218
00000000000470d1	xorps	%xmm0,%xmm0
00000000000470d4	movaps	%xmm0,0xc0(%rbp)
00000000000470d8	movaps	%xmm0,0xb0(%rbp)
00000000000470dc	movaps	%xmm0,0xa0(%rbp)
00000000000470e0	movaps	%xmm0,0x90(%rbp)
00000000000470e4	movq	0x0005dc05(%rip),%rsi
00000000000470eb	movq	0x0003cfe6(%rip),%r14
00000000000470f2	movq	%rbx,%rdi
00000000000470f5	call	*%r14
00000000000470f8	movq	0x0005f2e9(%rip),%rsi
00000000000470ff	movq	%rax,%rdi
0000000000047102	call	*%r14
0000000000047105	movq	0x000606b4(%rip),%rsi
000000000004710c	movq	%rax,%rdi
000000000004710f	call	*%r14
0000000000047112	movq	%rax,0xffffff08(%rbp)
0000000000047119	leaq	0x00061260(%rip),%rsi
0000000000047120	leaq	0x90(%rbp),%rdx
0000000000047124	leaq	0xffffff10(%rbp),%rcx
000000000004712b	movq	%rax,%rdi
000000000004712e	movl	$0x00000010,%r8d
0000000000047134	call	*0x00061246(%rip)
000000000004713a	movq	%rax,%r12
000000000004713d	testq	%r12,%r12
0000000000047140	je	0x00047218
0000000000047146	movq	0xa0(%rbp),%rax
000000000004714a	movq	(%rax),%rax
000000000004714d	movq	%rax,0xfffffef8(%rbp)
0000000000047154	movq	0x0003cf7d(%rip),%r15
000000000004715b	xorl	%r14d,%r14d
000000000004715e	movq	0xa0(%rbp),%rax
0000000000047162	movq	0xfffffef8(%rbp),%rcx
0000000000047169	cmpq	%rcx,(%rax)
000000000004716c	je	0x0004717a
000000000004716e	movq	0xffffff08(%rbp),%rdi
0000000000047175	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
000000000004717a	movq	0x98(%rbp),%rax
000000000004717e	movq	(%rax,%r14,8),%r13
0000000000047182	movq	%rbx,%rdi
0000000000047185	movq	0x0005db64(%rip),%rsi
000000000004718c	call	*%r15
000000000004718f	movq	%rax,%rdi
0000000000047192	movq	0x000606bf(%rip),%rsi
0000000000047199	movq	%r13,%rdx
000000000004719c	call	*%r15
000000000004719f	testb	%al,%al
00000000000471a1	jne	0x000471db
00000000000471a3	movq	%r13,%rdi
00000000000471a6	movq	0x00060673(%rip),%rsi
00000000000471ad	call	*0x0003cf25(%rip)
00000000000471b3	testb	%al,%al
00000000000471b5	je	0x000471db
00000000000471b7	movq	0xffffff00(%rbp),%rdi
00000000000471be	movq	0x0005f6db(%rip),%rsi
00000000000471c5	call	*%r15
00000000000471c8	movq	%rbx,%rdi
00000000000471cb	movq	0x00060616(%rip),%rsi
00000000000471d2	movq	%r13,%rdx
00000000000471d5	movq	%rax,%rcx
00000000000471d8	call	*%r15
00000000000471db	incq	%r14
00000000000471de	cmpq	%r12,%r14
00000000000471e1	jb	0x0004715e
00000000000471e7	movq	0xffffff08(%rbp),%rdi
00000000000471ee	leaq	0x0006118b(%rip),%rsi
00000000000471f5	leaq	0x90(%rbp),%rdx
00000000000471f9	leaq	0xffffff10(%rbp),%rcx
0000000000047200	movl	$0x00000010,%r8d
0000000000047206	call	*0x00061174(%rip)
000000000004720c	movq	%rax,%r12
000000000004720f	testq	%r12,%r12
0000000000047212	jne	0x0004715b
0000000000047218	movq	0x0003ce81(%rip),%rax
000000000004721f	movq	(%rax),%rax
0000000000047222	cmpq	0xd0(%rbp),%rax
0000000000047226	jne	0x0004723a
0000000000047228	addq	$0x000000e8,%rsp
000000000004722f	popq	%rbx
0000000000047230	popq	%r12
0000000000047232	popq	%r13
0000000000047234	popq	%r14
0000000000047236	popq	%r15
0000000000047238	popq	%rbp
0000000000047239	ret
000000000004723a	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
+[PBXLSDebuggingSession _isFileBreakpoint:]:
000000000004723f	pushq	%rbp
0000000000047240	movq	%rsp,%rbp
0000000000047243	pushq	%rbx
0000000000047244	pushq	%rax
0000000000047245	movq	%rdx,%rbx
0000000000047248	movq	0x00061739(%rip),%rdi
000000000004724f	leaq	0x000610da(%rip),%rsi
0000000000047256	call	*0x000610d4(%rip)
000000000004725c	leaq	0x000610dd(%rip),%rsi
0000000000047263	movq	%rbx,%rdi
0000000000047266	movq	%rax,%rdx
0000000000047269	call	*0x000610d1(%rip)
000000000004726f	movsbl	%al,%eax
0000000000047272	addq	$0x08,%rsp
0000000000047276	popq	%rbx
0000000000047277	popq	%rbp
0000000000047278	ret
0000000000047279	nop
000000000004727a	nop
000000000004727b	nop
+[PBXLSDebuggingSystem localizedStringForStateNextInstruction]:
000000000004727c	pushq	%rbp
000000000004727d	movq	%rsp,%rbp
0000000000047280	movq	0x00060181(%rip),%rsi
0000000000047287	call	*0x0003ce4b(%rip)
000000000004728d	leaq	0x0006e924(%rip),%rdx
0000000000047294	leaq	0x0006869d(%rip),%rcx
000000000004729b	leaq	0x0006deb6(%rip),%r8
00000000000472a2	movq	0x00060167(%rip),%rsi
00000000000472a9	movq	%rax,%rdi
00000000000472ac	movq	0x0003ce25(%rip),%rax
00000000000472b3	popq	%rbp
00000000000472b4	jmp	*%rax
+[PBXLSDebuggingSystem localizedStringForStateStepInstruction]:
00000000000472b6	pushq	%rbp
00000000000472b7	movq	%rsp,%rbp
00000000000472ba	movq	0x00060147(%rip),%rsi
00000000000472c1	call	*0x0003ce11(%rip)
00000000000472c7	leaq	0x0006e90a(%rip),%rdx
00000000000472ce	leaq	0x00068663(%rip),%rcx
00000000000472d5	leaq	0x0006de7c(%rip),%r8
00000000000472dc	movq	0x0006012d(%rip),%rsi
00000000000472e3	movq	%rax,%rdi
00000000000472e6	movq	0x0003cdeb(%rip),%rax
00000000000472ed	popq	%rbp
00000000000472ee	jmp	*%rax
00000000000472f0	nop
00000000000472f1	nop
+[PBXLSDebuggingSystem localizedStringForStateInterrupted]:
00000000000472f2	pushq	%rbp
00000000000472f3	movq	%rsp,%rbp
00000000000472f6	movq	0x0006010b(%rip),%rsi
00000000000472fd	call	*0x0003cdd5(%rip)
0000000000047303	leaq	0x0006e94e(%rip),%rdx
000000000004730a	leaq	0x00068627(%rip),%rcx
0000000000047311	leaq	0x0006de40(%rip),%r8
0000000000047318	movq	0x000600f1(%rip),%rsi
000000000004731f	movq	%rax,%rdi
0000000000047322	movq	0x0003cdaf(%rip),%rax
0000000000047329	popq	%rbp
000000000004732a	jmp	*%rax
+[PBXLSDebuggingSystem localizedStringForStateStopped]:
000000000004732c	pushq	%rbp
000000000004732d	movq	%rsp,%rbp
0000000000047330	movq	0x000600d1(%rip),%rsi
0000000000047337	call	*0x0003cd9b(%rip)
000000000004733d	leaq	0x0006e934(%rip),%rdx
0000000000047344	leaq	0x000685ed(%rip),%rcx
000000000004734b	leaq	0x0006de06(%rip),%r8
0000000000047352	movq	0x000600b7(%rip),%rsi
0000000000047359	movq	%rax,%rdi
000000000004735c	movq	0x0003cd75(%rip),%rax
0000000000047363	popq	%rbp
0000000000047364	jmp	*%rax
+[PBXLSDebuggingSystem localizedStringForStateNotExecuting]:
0000000000047366	pushq	%rbp
0000000000047367	movq	%rsp,%rbp
000000000004736a	movq	0x00060097(%rip),%rsi
0000000000047371	call	*0x0003cd61(%rip)
0000000000047377	leaq	0x0006e91a(%rip),%rdx
000000000004737e	leaq	0x000685b3(%rip),%rcx
0000000000047385	leaq	0x0006ddcc(%rip),%r8
000000000004738c	movq	0x0006007d(%rip),%rsi
0000000000047393	movq	%rax,%rdi
0000000000047396	movq	0x0003cd3b(%rip),%rax
000000000004739d	popq	%rbp
000000000004739e	jmp	*%rax
+[PBXLSDebuggingSystem localizedStringForStateAtBreakpoint]:
00000000000473a0	pushq	%rbp
00000000000473a1	movq	%rsp,%rbp
00000000000473a4	movq	0x0006005d(%rip),%rsi
00000000000473ab	call	*0x0003cd27(%rip)
00000000000473b1	leaq	0x0006e900(%rip),%rdx
00000000000473b8	leaq	0x00068579(%rip),%rcx
00000000000473bf	leaq	0x0006dd92(%rip),%r8
00000000000473c6	movq	0x00060043(%rip),%rsi
00000000000473cd	movq	%rax,%rdi
00000000000473d0	movq	0x0003cd01(%rip),%rax
00000000000473d7	popq	%rbp
00000000000473d8	jmp	*%rax
00000000000473da	nop
00000000000473db	nop
+[PBXLSDebuggingSystem localizedStringForStateAtWatchpoint:]:
00000000000473dc	pushq	%rbp
00000000000473dd	movq	%rsp,%rbp
00000000000473e0	pushq	%r15
00000000000473e2	pushq	%r14
00000000000473e4	pushq	%r13
00000000000473e6	pushq	%r12
00000000000473e8	pushq	%rbx
00000000000473e9	pushq	%rax
00000000000473ea	movq	%rdx,%rbx
00000000000473ed	movq	%rdi,%r15
00000000000473f0	movq	0x00060511(%rip),%rsi
00000000000473f7	movq	%rbx,%rdi
00000000000473fa	call	*0x0003ccd8(%rip)
0000000000047400	movq	0x00061049(%rip),%r12
0000000000047407	testq	%rax,%rax
000000000004740a	jne	0x0004744b
000000000004740c	movq	0x000604fd(%rip),%rsi
0000000000047413	movq	0x0003ccbe(%rip),%r14
000000000004741a	movq	%rbx,%rdi
000000000004741d	call	*%r14
0000000000047420	movq	0x0005f019(%rip),%rsi
0000000000047427	movq	%rax,%rdi
000000000004742a	call	*%r14
000000000004742d	leaq	0x0006e8c4(%rip),%rdx
0000000000047434	movq	0x0005d73d(%rip),%rsi
000000000004743b	movq	%r12,%rdi
000000000004743e	movq	%rax,%rcx
0000000000047441	xorb	%al,%al
0000000000047443	call	*%r14
0000000000047446	jmp	0x000474de
000000000004744b	movq	0x0005ffb6(%rip),%rsi
0000000000047452	movq	0x0003cc7f(%rip),%r14
0000000000047459	movq	%r15,%rdi
000000000004745c	call	*%r14
000000000004745f	movq	0x0005ffaa(%rip),%rsi
0000000000047466	leaq	0x0006e8ab(%rip),%rdx
000000000004746d	leaq	0x000684c4(%rip),%rcx
0000000000047474	leaq	0x0006dcdd(%rip),%r8
000000000004747b	movq	%rax,%rdi
000000000004747e	call	*%r14
0000000000047481	movq	%rax,0xd0(%rbp)
0000000000047485	movq	0x00060484(%rip),%rsi
000000000004748c	movq	%rbx,%rdi
000000000004748f	call	*%r14
0000000000047492	movq	0x0006047f(%rip),%rsi
0000000000047499	movq	%rax,%rdi
000000000004749c	call	*%r14
000000000004749f	movq	%r12,%r15
00000000000474a2	movq	%rax,%r12
00000000000474a5	movq	0x0006045c(%rip),%rsi
00000000000474ac	movq	%rbx,%rdi
00000000000474af	call	*%r14
00000000000474b2	movq	%rax,%r13
00000000000474b5	movq	0x00060464(%rip),%rsi
00000000000474bc	movq	%rbx,%rdi
00000000000474bf	call	*%r14
00000000000474c2	movq	0x0005d6af(%rip),%rsi
00000000000474c9	movq	%r15,%rdi
00000000000474cc	movq	0xd0(%rbp),%rdx
00000000000474d0	movq	%r12,%rcx
00000000000474d3	movq	%r13,%r8
00000000000474d6	movq	%rax,%r9
00000000000474d9	xorb	%al,%al
00000000000474db	call	*%r14
00000000000474de	addq	$0x08,%rsp
00000000000474e2	popq	%rbx
00000000000474e3	popq	%r12
00000000000474e5	popq	%r13
00000000000474e7	popq	%r14
00000000000474e9	popq	%r15
00000000000474eb	popq	%rbp
00000000000474ec	ret
00000000000474ed	nop
00000000000474ee	nop
+[PBXLSDebuggingSystem localizedStringForStateGotSignal:]:
00000000000474ef	pushq	%rbp
00000000000474f0	movq	%rsp,%rbp
00000000000474f3	pushq	%r14
00000000000474f5	pushq	%rbx
00000000000474f6	movq	%rdx,%r14
00000000000474f9	movq	0x00060f50(%rip),%rbx
0000000000047500	movq	0x0005ff01(%rip),%rsi
0000000000047507	call	*0x0003cbcb(%rip)
000000000004750d	movq	0x0005fefc(%rip),%rsi
0000000000047514	leaq	0x0006e83d(%rip),%rdx
000000000004751b	leaq	0x00068416(%rip),%rcx
0000000000047522	leaq	0x0006dc2f(%rip),%r8
0000000000047529	movq	%rax,%rdi
000000000004752c	call	*0x0003cba6(%rip)
0000000000047532	movq	0x0005d63f(%rip),%rsi
0000000000047539	movq	%rbx,%rdi
000000000004753c	movq	%rax,%rdx
000000000004753f	movq	%r14,%rcx
0000000000047542	xorb	%al,%al
0000000000047544	movq	0x0003cb8d(%rip),%r8
000000000004754b	popq	%rbx
000000000004754c	popq	%r14
000000000004754e	popq	%rbp
000000000004754f	jmp	*%r8
+[PBXLSDebuggingSystem localizedStringForStateGotCaughtException:]:
0000000000047552	pushq	%rbp
0000000000047553	movq	%rsp,%rbp
0000000000047556	pushq	%r14
0000000000047558	pushq	%rbx
0000000000047559	movq	%rdx,%r14
000000000004755c	movq	0x00060eed(%rip),%rbx
0000000000047563	movq	0x0005fe9e(%rip),%rsi
000000000004756a	call	*0x0003cb68(%rip)
0000000000047570	movq	0x0005fe99(%rip),%rsi
0000000000047577	leaq	0x0006e7fa(%rip),%rdx
000000000004757e	leaq	0x000683b3(%rip),%rcx
0000000000047585	leaq	0x0006dbcc(%rip),%r8
000000000004758c	movq	%rax,%rdi
000000000004758f	call	*0x0003cb43(%rip)
0000000000047595	movq	0x0005d5dc(%rip),%rsi
000000000004759c	movq	%rbx,%rdi
000000000004759f	movq	%rax,%rdx
00000000000475a2	movq	%r14,%rcx
00000000000475a5	xorb	%al,%al
00000000000475a7	movq	0x0003cb2a(%rip),%r8
00000000000475ae	popq	%rbx
00000000000475af	popq	%r14
00000000000475b1	popq	%rbp
00000000000475b2	jmp	*%r8
+[PBXLSDebuggingSystem localizedStringForStateGotUncaughtException:]:
00000000000475b5	pushq	%rbp
00000000000475b6	movq	%rsp,%rbp
00000000000475b9	pushq	%r14
00000000000475bb	pushq	%rbx
00000000000475bc	movq	%rdx,%r14
00000000000475bf	movq	0x00060e8a(%rip),%rbx
00000000000475c6	movq	0x0005fe3b(%rip),%rsi
00000000000475cd	call	*0x0003cb05(%rip)
00000000000475d3	movq	0x0005fe36(%rip),%rsi
00000000000475da	leaq	0x0006e7b7(%rip),%rdx
00000000000475e1	leaq	0x00068350(%rip),%rcx
00000000000475e8	leaq	0x0006db69(%rip),%r8
00000000000475ef	movq	%rax,%rdi
00000000000475f2	call	*0x0003cae0(%rip)
00000000000475f8	movq	0x0005d579(%rip),%rsi
00000000000475ff	movq	%rbx,%rdi
0000000000047602	movq	%rax,%rdx
0000000000047605	movq	%r14,%rcx
0000000000047608	xorb	%al,%al
000000000004760a	movq	0x0003cac7(%rip),%r8
0000000000047611	popq	%rbx
0000000000047612	popq	%r14
0000000000047614	popq	%rbp
0000000000047615	jmp	*%r8
+[PBXLSDebuggingSystem localizedStringForStateExitedWithValue:]:
0000000000047618	pushq	%rbp
0000000000047619	movq	%rsp,%rbp
000000000004761c	pushq	%r14
000000000004761e	pushq	%rbx
000000000004761f	movl	%edx,%ebx
0000000000047621	movq	0x00060e28(%rip),%r14
0000000000047628	movq	0x0005fdd9(%rip),%rsi
000000000004762f	call	*0x0003caa3(%rip)
0000000000047635	movq	0x0005fdd4(%rip),%rsi
000000000004763c	leaq	0x0006e775(%rip),%rdx
0000000000047643	leaq	0x000682ee(%rip),%rcx
000000000004764a	leaq	0x0006db07(%rip),%r8
0000000000047651	movq	%rax,%rdi
0000000000047654	call	*0x0003ca7e(%rip)
000000000004765a	movslq	%ebx,%rcx
000000000004765d	movq	0x0005d514(%rip),%rsi
0000000000047664	movq	%r14,%rdi
0000000000047667	movq	%rax,%rdx
000000000004766a	xorb	%al,%al
000000000004766c	movq	0x0003ca65(%rip),%r8
0000000000047673	popq	%rbx
0000000000047674	popq	%r14
0000000000047676	popq	%rbp
0000000000047677	jmp	*%r8
+[PBXLSDebuggingSystem localizedStringForFailedLoadingExecutable]:
000000000004767a	pushq	%rbp
000000000004767b	movq	%rsp,%rbp
000000000004767e	movq	0x0005fd83(%rip),%rsi
0000000000047685	call	*0x0003ca4d(%rip)
000000000004768b	leaq	0x0006e786(%rip),%rdx
0000000000047692	leaq	0x0006829f(%rip),%rcx
0000000000047699	leaq	0x0006dab8(%rip),%r8
00000000000476a0	movq	0x0005fd69(%rip),%rsi
00000000000476a7	movq	%rax,%rdi
00000000000476aa	movq	0x0003ca27(%rip),%rax
00000000000476b1	popq	%rbp
00000000000476b2	jmp	*%rax
+[PBXLSDebuggingSystem localizedStringForLoadedOneSharedLibrary]:
00000000000476b4	pushq	%rbp
00000000000476b5	movq	%rsp,%rbp
00000000000476b8	movq	0x0005fd49(%rip),%rsi
00000000000476bf	call	*0x0003ca13(%rip)
00000000000476c5	leaq	0x0006e76c(%rip),%rdx
00000000000476cc	leaq	0x00068265(%rip),%rcx
00000000000476d3	leaq	0x0006da7e(%rip),%r8
00000000000476da	movq	0x0005fd2f(%rip),%rsi
00000000000476e1	movq	%rax,%rdi
00000000000476e4	movq	0x0003c9ed(%rip),%rax
00000000000476eb	popq	%rbp
00000000000476ec	jmp	*%rax
+[PBXLSDebuggingSystem localizedStringForLoadedSharedLibraries:]:
00000000000476ee	pushq	%rbp
00000000000476ef	movq	%rsp,%rbp
00000000000476f2	pushq	%r14
00000000000476f4	pushq	%rbx
00000000000476f5	movq	%rdx,%r14
00000000000476f8	movq	0x00060d51(%rip),%rbx
00000000000476ff	movq	0x0005fd02(%rip),%rsi
0000000000047706	call	*0x0003c9cc(%rip)
000000000004770c	movq	0x0005fcfd(%rip),%rsi
0000000000047713	leaq	0x0006e73e(%rip),%rdx
000000000004771a	leaq	0x00068217(%rip),%rcx
0000000000047721	leaq	0x0006da30(%rip),%r8
0000000000047728	movq	%rax,%rdi
000000000004772b	call	*0x0003c9a7(%rip)
0000000000047731	movq	0x0005d440(%rip),%rsi
0000000000047738	movq	%rbx,%rdi
000000000004773b	movq	%rax,%rdx
000000000004773e	movq	%r14,%rcx
0000000000047741	xorb	%al,%al
0000000000047743	movq	0x0003c98e(%rip),%r8
000000000004774a	popq	%rbx
000000000004774b	popq	%r14
000000000004774d	popq	%rbp
000000000004774e	jmp	*%r8
+[PBXLSDebuggingSystem localizedStringForLoadingSymbolsForSharedLibrary:]:
0000000000047751	pushq	%rbp
0000000000047752	movq	%rsp,%rbp
0000000000047755	pushq	%r14
0000000000047757	pushq	%rbx
0000000000047758	movq	%rdx,%r14
000000000004775b	movq	0x00060cee(%rip),%rbx
0000000000047762	movq	0x0005fc9f(%rip),%rsi
0000000000047769	call	*0x0003c969(%rip)
000000000004776f	movq	0x0005fc9a(%rip),%rsi
0000000000047776	leaq	0x0006e6fb(%rip),%rdx
000000000004777d	leaq	0x000681b4(%rip),%rcx
0000000000047784	leaq	0x0006d9cd(%rip),%r8
000000000004778b	movq	%rax,%rdi
000000000004778e	call	*0x0003c944(%rip)
0000000000047794	movq	0x0005d3dd(%rip),%rsi
000000000004779b	movq	%rbx,%rdi
000000000004779e	movq	%rax,%rdx
00000000000477a1	movq	%r14,%rcx
00000000000477a4	xorb	%al,%al
00000000000477a6	movq	0x0003c92b(%rip),%r8
00000000000477ad	popq	%rbx
00000000000477ae	popq	%r14
00000000000477b0	popq	%rbp
00000000000477b1	jmp	*%r8
+[PBXLSDebuggingSystem localizedStringForLoadingTotalStackFrames:percentDone:]:
00000000000477b4	pushq	%rbp
00000000000477b5	movq	%rsp,%rbp
00000000000477b8	pushq	%r15
00000000000477ba	pushq	%r14
00000000000477bc	pushq	%r12
00000000000477be	pushq	%rbx
00000000000477bf	movq	%rcx,%r12
00000000000477c2	movq	%rdx,%r14
00000000000477c5	movq	0x00060c84(%rip),%r15
00000000000477cc	movq	0x0005fc35(%rip),%rsi
00000000000477d3	call	*0x0003c8ff(%rip)
00000000000477d9	movq	0x0005fc30(%rip),%rsi
00000000000477e0	leaq	0x0006e6b1(%rip),%rdx
00000000000477e7	leaq	0x0006814a(%rip),%rcx
00000000000477ee	leaq	0x0006d963(%rip),%r8
00000000000477f5	movq	%rax,%rdi
00000000000477f8	call	*0x0003c8da(%rip)
00000000000477fe	movq	%rax,%rbx
0000000000047801	cvtsi2sd	%r12,%xmm0
0000000000047806	callq	0x0004e6e0	; symbol stub for: _rint
000000000004780b	cvttsd2si	%xmm0,%r8
0000000000047810	movq	0x0005d361(%rip),%rsi
0000000000047817	movq	%r15,%rdi
000000000004781a	movq	%rbx,%rdx
000000000004781d	movq	%r14,%rcx
0000000000047820	xorb	%al,%al
0000000000047822	movq	0x0003c8af(%rip),%r9
0000000000047829	popq	%rbx
000000000004782a	popq	%r12
000000000004782c	popq	%r14
000000000004782e	popq	%r15
0000000000047830	popq	%rbp
0000000000047831	jmp	*%r9
+[PBXLSDebuggingSystem localizedStringForMovePCFailed:]:
0000000000047834	pushq	%rbp
0000000000047835	movq	%rsp,%rbp
0000000000047838	pushq	%r14
000000000004783a	pushq	%rbx
000000000004783b	movq	%rdx,%r14
000000000004783e	movq	0x00060c0b(%rip),%rbx
0000000000047845	movq	0x0005fbbc(%rip),%rsi
000000000004784c	call	*0x0003c886(%rip)
0000000000047852	movq	0x0005fbb7(%rip),%rsi
0000000000047859	leaq	0x0006e658(%rip),%rdx
0000000000047860	leaq	0x000680d1(%rip),%rcx
0000000000047867	leaq	0x0006d8ea(%rip),%r8
000000000004786e	movq	%rax,%rdi
0000000000047871	call	*0x0003c861(%rip)
0000000000047877	movq	0x0005d2fa(%rip),%rsi
000000000004787e	movq	%rbx,%rdi
0000000000047881	movq	%rax,%rdx
0000000000047884	movq	%r14,%rcx
0000000000047887	xorb	%al,%al
0000000000047889	movq	0x0003c848(%rip),%r8
0000000000047890	popq	%rbx
0000000000047891	popq	%r14
0000000000047893	popq	%rbp
0000000000047894	jmp	*%r8
+[PBXLSDebuggingSystem localizedStringForMovePC:]:
0000000000047897	pushq	%rbp
0000000000047898	movq	%rsp,%rbp
000000000004789b	pushq	%r14
000000000004789d	pushq	%rbx
000000000004789e	movq	%rdx,%r14
00000000000478a1	movq	0x00060ba8(%rip),%rbx
00000000000478a8	movq	0x0005fb59(%rip),%rsi
00000000000478af	call	*0x0003c823(%rip)
00000000000478b5	movq	0x0005fb54(%rip),%rsi
00000000000478bc	leaq	0x0006e615(%rip),%rdx
00000000000478c3	leaq	0x0006806e(%rip),%rcx
00000000000478ca	leaq	0x0006d887(%rip),%r8
00000000000478d1	movq	%rax,%rdi
00000000000478d4	call	*0x0003c7fe(%rip)
00000000000478da	movq	0x0005d297(%rip),%rsi
00000000000478e1	movq	%rbx,%rdi
00000000000478e4	movq	%rax,%rdx
00000000000478e7	movq	%r14,%rcx
00000000000478ea	xorb	%al,%al
00000000000478ec	movq	0x0003c7e5(%rip),%r8
00000000000478f3	popq	%rbx
00000000000478f4	popq	%r14
00000000000478f6	popq	%rbp
00000000000478f7	jmp	*%r8
+[PBXLSDebuggingSystem localizedStringForFixAndContinueError:WithFile:]:
00000000000478fa	pushq	%rbp
00000000000478fb	movq	%rsp,%rbp
00000000000478fe	pushq	%r15
0000000000047900	pushq	%r14
0000000000047902	pushq	%rbx
0000000000047903	pushq	%rax
0000000000047904	movq	%rcx,%r15
0000000000047907	movq	%rdx,%r14
000000000004790a	movq	0x00060b3f(%rip),%rbx
0000000000047911	movq	0x0005faf0(%rip),%rsi
0000000000047918	call	*0x0003c7ba(%rip)
000000000004791e	movq	0x0005faeb(%rip),%rsi
0000000000047925	leaq	0x0006e5cc(%rip),%rdx
000000000004792c	leaq	0x00068005(%rip),%rcx
0000000000047933	leaq	0x0006d81e(%rip),%r8
000000000004793a	movq	%rax,%rdi
000000000004793d	call	*0x0003c795(%rip)
0000000000047943	movq	0x0005d22e(%rip),%rsi
000000000004794a	movq	%rbx,%rdi
000000000004794d	movq	%rax,%rdx
0000000000047950	movq	%r15,%rcx
0000000000047953	movq	%r14,%r8
0000000000047956	xorb	%al,%al
0000000000047958	movq	0x0003c779(%rip),%r9
000000000004795f	addq	$0x08,%rsp
0000000000047963	popq	%rbx
0000000000047964	popq	%r14
0000000000047966	popq	%r15
0000000000047968	popq	%rbp
0000000000047969	jmp	*%r9
+[PBXLSDebuggingSystem localizedStringForFixAndContinuePatchedFile:patchFile:]:
000000000004796c	pushq	%rbp
000000000004796d	movq	%rsp,%rbp
0000000000047970	pushq	%r15
0000000000047972	pushq	%r14
0000000000047974	pushq	%rbx
0000000000047975	pushq	%rax
0000000000047976	movq	%rcx,%r14
0000000000047979	movq	%rdx,%r15
000000000004797c	movq	0x00060acd(%rip),%rbx
0000000000047983	movq	0x0005fa7e(%rip),%rsi
000000000004798a	call	*0x0003c748(%rip)
0000000000047990	movq	0x0005fa79(%rip),%rsi
0000000000047997	leaq	0x0006e57a(%rip),%rdx
000000000004799e	leaq	0x00067f93(%rip),%rcx
00000000000479a5	leaq	0x0006d7ac(%rip),%r8
00000000000479ac	movq	%rax,%rdi
00000000000479af	call	*0x0003c723(%rip)
00000000000479b5	movq	0x0005d1bc(%rip),%rsi
00000000000479bc	movq	%rbx,%rdi
00000000000479bf	movq	%rax,%rdx
00000000000479c2	movq	%r15,%rcx
00000000000479c5	movq	%r14,%r8
00000000000479c8	xorb	%al,%al
00000000000479ca	movq	0x0003c707(%rip),%r9
00000000000479d1	addq	$0x08,%rsp
00000000000479d5	popq	%rbx
00000000000479d6	popq	%r14
00000000000479d8	popq	%r15
00000000000479da	popq	%rbp
00000000000479db	jmp	*%r9
+[PBXLSDebuggingSystem localizedStringForDebuggerStopped]:
00000000000479de	pushq	%rbp
00000000000479df	movq	%rsp,%rbp
00000000000479e2	movq	0x0005fa1f(%rip),%rsi
00000000000479e9	call	*0x0003c6e9(%rip)
00000000000479ef	leaq	0x0006e542(%rip),%rdx
00000000000479f6	leaq	0x00067f3b(%rip),%rcx
00000000000479fd	leaq	0x0006d754(%rip),%r8
0000000000047a04	movq	0x0005fa05(%rip),%rsi
0000000000047a0b	movq	%rax,%rdi
0000000000047a0e	movq	0x0003c6c3(%rip),%rax
0000000000047a15	popq	%rbp
0000000000047a16	jmp	*%rax
+[PBXLSDebuggingSystem localizedStringForFixAndContinueStarted]:
0000000000047a18	pushq	%rbp
0000000000047a19	movq	%rsp,%rbp
0000000000047a1c	movq	0x0005f9e5(%rip),%rsi
0000000000047a23	call	*0x0003c6af(%rip)
0000000000047a29	leaq	0x0006e528(%rip),%rdx
0000000000047a30	leaq	0x00067f01(%rip),%rcx
0000000000047a37	leaq	0x0006d71a(%rip),%r8
0000000000047a3e	movq	0x0005f9cb(%rip),%rsi
0000000000047a45	movq	%rax,%rdi
0000000000047a48	movq	0x0003c689(%rip),%rax
0000000000047a4f	popq	%rbp
0000000000047a50	jmp	*%rax
+[PBXLSDebuggingSystem localizedStringForOKButtonLabel]:
0000000000047a52	pushq	%rbp
0000000000047a53	movq	%rsp,%rbp
0000000000047a56	movq	0x0005f9ab(%rip),%rsi
0000000000047a5d	call	*0x0003c675(%rip)
0000000000047a63	leaq	0x0006e50e(%rip),%rdx
0000000000047a6a	leaq	0x00067ec7(%rip),%rcx
0000000000047a71	leaq	0x0006d6e0(%rip),%r8
0000000000047a78	movq	0x0005f991(%rip),%rsi
0000000000047a7f	movq	%rax,%rdi
0000000000047a82	movq	0x0003c64f(%rip),%rax
0000000000047a89	popq	%rbp
0000000000047a8a	jmp	*%rax
+[PBXLSDebuggingSystem localizedStringForFixAndContinueSheetTitle]:
0000000000047a8c	pushq	%rbp
0000000000047a8d	movq	%rsp,%rbp
0000000000047a90	movq	0x0005f971(%rip),%rsi
0000000000047a97	call	*0x0003c63b(%rip)
0000000000047a9d	leaq	0x0006e4f4(%rip),%rdx
0000000000047aa4	leaq	0x00067e8d(%rip),%rcx
0000000000047aab	leaq	0x0006d6a6(%rip),%r8
0000000000047ab2	movq	0x0005f957(%rip),%rsi
0000000000047ab9	movq	%rax,%rdi
0000000000047abc	movq	0x0003c615(%rip),%rax
0000000000047ac3	popq	%rbp
0000000000047ac4	jmp	*%rax
+[PBXLSDebuggingSystem localizedStringForDataFetchTimeout]:
0000000000047ac6	pushq	%rbp
0000000000047ac7	movq	%rsp,%rbp
0000000000047aca	movq	0x0005f937(%rip),%rsi
0000000000047ad1	call	*0x0003c601(%rip)
0000000000047ad7	leaq	0x0006e4da(%rip),%rdx
0000000000047ade	leaq	0x00067e53(%rip),%rcx
0000000000047ae5	leaq	0x0006d66c(%rip),%r8
0000000000047aec	movq	0x0005f91d(%rip),%rsi
0000000000047af3	movq	%rax,%rdi
0000000000047af6	movq	0x0003c5db(%rip),%rax
0000000000047afd	popq	%rbp
0000000000047afe	jmp	*%rax
+[PBXLSDebuggingSystem localizedStringForContinueToLocation:]:
0000000000047b00	pushq	%rbp
0000000000047b01	movq	%rsp,%rbp
0000000000047b04	pushq	%r14
0000000000047b06	pushq	%rbx
0000000000047b07	movq	%rdx,%r14
0000000000047b0a	movq	0x0006093f(%rip),%rbx
0000000000047b11	movq	0x0005f8f0(%rip),%rsi
0000000000047b18	call	*0x0003c5ba(%rip)
0000000000047b1e	movq	0x0005f8eb(%rip),%rsi
0000000000047b25	leaq	0x0006e4ac(%rip),%rdx
0000000000047b2c	leaq	0x00067e05(%rip),%rcx
0000000000047b33	leaq	0x0006d61e(%rip),%r8
0000000000047b3a	movq	%rax,%rdi
0000000000047b3d	call	*0x0003c595(%rip)
0000000000047b43	movq	0x0005d02e(%rip),%rsi
0000000000047b4a	movq	%rbx,%rdi
0000000000047b4d	movq	%rax,%rdx
0000000000047b50	movq	%r14,%rcx
0000000000047b53	xorb	%al,%al
0000000000047b55	movq	0x0003c57c(%rip),%r8
0000000000047b5c	popq	%rbx
0000000000047b5d	popq	%r14
0000000000047b5f	popq	%rbp
0000000000047b60	jmp	*%r8
-[PBXLSLaunchSession setKeepStats:]:
0000000000047b63	pushq	%rbp
0000000000047b64	movq	%rsp,%rbp
0000000000047b67	movq	0x00067972(%rip),%rax
0000000000047b6e	movb	%dl,(%rdi,%rax)
0000000000047b71	popq	%rbp
0000000000047b72	ret
-[PBXLSLaunchSession keepStats]:
0000000000047b73	pushq	%rbp
0000000000047b74	movq	%rsp,%rbp
0000000000047b77	movq	0x00067962(%rip),%rax
0000000000047b7e	movsbl	(%rdi,%rax),%eax
0000000000047b82	popq	%rbp
0000000000047b83	ret
-[PBXLSLaunchSession displayName]:
0000000000047b84	pushq	%rbp
0000000000047b85	movq	%rsp,%rbp
0000000000047b88	leaq	0x0006e469(%rip),%rax
0000000000047b8f	popq	%rbp
0000000000047b90	ret
-[PBXLSLaunchSession launchSessionState]:
0000000000047b91	pushq	%rbp
0000000000047b92	movq	%rsp,%rbp
0000000000047b95	movq	0x0006794c(%rip),%rax
0000000000047b9c	movl	(%rdi,%rax),%eax
0000000000047b9f	popq	%rbp
0000000000047ba0	ret
-[PBXLSLaunchSession launchSessionStartDate]:
0000000000047ba1	pushq	%rbp
0000000000047ba2	movq	%rsp,%rbp
0000000000047ba5	movq	0x00067944(%rip),%rax
0000000000047bac	movq	(%rdi,%rax),%rax
0000000000047bb0	popq	%rbp
0000000000047bb1	ret
-[PBXLSLaunchSession launch]:
0000000000047bb2	pushq	%rbp
0000000000047bb3	movq	%rsp,%rbp
0000000000047bb6	pushq	%rbx
0000000000047bb7	pushq	%rax
0000000000047bb8	movq	%rdi,%rbx
0000000000047bbb	movq	0x0005fd76(%rip),%rsi
0000000000047bc2	movq	0x00060dd7(%rip),%rdi
0000000000047bc9	call	*0x0003c509(%rip)
0000000000047bcf	movq	0x0006791a(%rip),%rdx
0000000000047bd6	movq	%rax,%rdi
0000000000047bd9	movq	%rbx,%rsi
0000000000047bdc	addq	$0x08,%rsp
0000000000047be0	popq	%rbx
0000000000047be1	popq	%rbp
0000000000047be2	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXLSLaunchSession stop]:
0000000000047be7	pushq	%rbp
0000000000047be8	movq	%rsp,%rbp
0000000000047beb	popq	%rbp
0000000000047bec	ret
-[PBXLSLaunchSession terminationStatus]:
0000000000047bed	pushq	%rbp
0000000000047bee	movq	%rsp,%rbp
0000000000047bf1	xorl	%eax,%eax
0000000000047bf3	popq	%rbp
0000000000047bf4	ret
-[PBXLSLaunchSession cleanup]:
0000000000047bf5	pushq	%rbp
0000000000047bf6	movq	%rsp,%rbp
0000000000047bf9	movq	0x000678d8(%rip),%rax
0000000000047c00	movq	(%rdi,%rax),%rdi
0000000000047c04	movq	0x0005d445(%rip),%rsi
0000000000047c0b	popq	%rbp
0000000000047c0c	jmp	*0x0003c4c6(%rip)
-[PBXLSLaunchSession fixedFile:]:
0000000000047c12	pushq	%rbp
0000000000047c13	movq	%rsp,%rbp
0000000000047c16	pushq	%r14
0000000000047c18	pushq	%rbx
0000000000047c19	movq	%rdx,%rbx
0000000000047c1c	testq	%rbx,%rbx
0000000000047c1f	jne	0x00047c26
0000000000047c21	popq	%rbx
0000000000047c22	popq	%r14
0000000000047c24	popq	%rbp
0000000000047c25	ret
0000000000047c26	movq	0x000678ab(%rip),%rax
0000000000047c2d	movq	(%rdi,%rax),%r14
0000000000047c31	movq	0x0005fd00(%rip),%rsi
0000000000047c38	movq	0x00060d61(%rip),%rdi
0000000000047c3f	call	*0x0003c493(%rip)
0000000000047c45	movq	0x0005d0e4(%rip),%rsi
0000000000047c4c	movq	%r14,%rdi
0000000000047c4f	movq	%rax,%rdx
0000000000047c52	movq	%rbx,%rcx
0000000000047c55	movq	0x0003c47c(%rip),%rax
0000000000047c5c	popq	%rbx
0000000000047c5d	popq	%r14
0000000000047c5f	popq	%rbp
0000000000047c60	jmp	*%rax
-[PBXLSPlugableClass plugin]:
0000000000047c62	pushq	%rbp
0000000000047c63	movq	%rsp,%rbp
0000000000047c66	movq	0x0005fcd3(%rip),%rsi
0000000000047c6d	call	*0x0003c465(%rip)
0000000000047c73	xorl	%eax,%eax
0000000000047c75	popq	%rbp
0000000000047c76	ret
-[PBXLSPlugableClass pluginClass]:
0000000000047c77	pushq	%rbp
0000000000047c78	movq	%rsp,%rbp
0000000000047c7b	subq	$0x30,%rsp
0000000000047c7f	movq	%rdi,0xf8(%rbp)
0000000000047c83	movq	%rsi,0xf0(%rbp)
0000000000047c87	leaq	0x000606a2(%rip),%rsi
0000000000047c8e	call	*0x0006069c(%rip)
0000000000047c94	movq	%rax,%rdi
0000000000047c97	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
0000000000047c9c	leaq	0xf8(%rbp),%rdi
0000000000047ca0	leaq	0xf0(%rbp),%rsi
0000000000047ca4	leaq	0x0001c42e(%rip),%rcx
0000000000047cab	leaq	0x00068f46(%rip),%r9
0000000000047cb2	leaq	0x0001c3fe(%rip),%rdx
0000000000047cb9	leaq	0x00067b78(%rip),%r8
0000000000047cc0	leaq	0x0001560b(%rip),%r10
0000000000047cc7	movq	%r10,0x18(%rsp)
0000000000047ccc	movq	%r8,0x10(%rsp)
0000000000047cd1	movq	%rax,0x08(%rsp)
0000000000047cd6	movq	%rdx,(%rsp)
0000000000047cda	movl	$0x0000001f,%r8d
0000000000047ce0	xorb	%al,%al
0000000000047ce2	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000047ce7	xorl	%eax,%eax
0000000000047ce9	addq	$0x30,%rsp
0000000000047ced	popq	%rbp
0000000000047cee	ret
-[DBGGDBLauncher _setFinishedRunning]:
0000000000047cef	pushq	%rbp
0000000000047cf0	movq	%rsp,%rbp
0000000000047cf3	pushq	%r14
0000000000047cf5	pushq	%rbx
0000000000047cf6	subq	$0x10,%rsp
0000000000047cfa	movq	%rdi,%rbx
0000000000047cfd	movq	%rbx,0xe0(%rbp)
0000000000047d01	movq	0x00061350(%rip),%rax
0000000000047d08	movq	%rax,0xe8(%rbp)
0000000000047d0c	movq	0x0005fd0d(%rip),%rsi
0000000000047d13	leaq	0xe0(%rbp),%rdi
0000000000047d17	xorl	%edx,%edx
0000000000047d19	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
0000000000047d1e	movq	0x0003c3b3(%rip),%r14
0000000000047d25	movq	0x0005fd2c(%rip),%rsi
0000000000047d2c	movq	%rbx,%rdi
0000000000047d2f	call	*%r14
0000000000047d32	movq	0x0005fd27(%rip),%rsi
0000000000047d39	movq	%rax,%rdi
0000000000047d3c	movq	%rbx,%rdx
0000000000047d3f	xorl	%ecx,%ecx
0000000000047d41	call	*%r14
0000000000047d44	addq	$0x10,%rsp
0000000000047d48	popq	%rbx
0000000000047d49	popq	%r14
0000000000047d4b	popq	%rbp
0000000000047d4c	ret
0000000000047d4d	nop
0000000000047d4e	nop
0000000000047d4f	nop
___copy_helper_block_:
0000000000047d50	pushq	%rbp
0000000000047d51	movq	%rsp,%rbp
0000000000047d54	addq	$0x20,%rdi
0000000000047d58	movq	0x20(%rsi),%rsi
0000000000047d5c	movl	$0x00000003,%edx
0000000000047d61	popq	%rbp
0000000000047d62	jmp	0x0004e662	; symbol stub for: __Block_object_assign
0000000000047d67	nopw	0x00000000(%rax,%rax)
___destroy_helper_block_:
0000000000047d70	pushq	%rbp
0000000000047d71	movq	%rsp,%rbp
0000000000047d74	movq	0x20(%rdi),%rdi
0000000000047d78	movl	$0x00000003,%esi
0000000000047d7d	popq	%rbp
0000000000047d7e	jmp	0x0004e668	; symbol stub for: __Block_object_dispose
0000000000047d83	nop
0000000000047d84	nop
0000000000047d85	nop
0000000000047d86	nop
0000000000047d87	nop
0000000000047d88	nop
0000000000047d89	nop
0000000000047d8a	nop
0000000000047d8b	nop
0000000000047d8c	nop
0000000000047d8d	nop
0000000000047d8e	nop
0000000000047d8f	nop
___copy_helper_block_255:
0000000000047d90	pushq	%rbp
0000000000047d91	movq	%rsp,%rbp
0000000000047d94	addq	$0x20,%rdi
0000000000047d98	movq	0x20(%rsi),%rsi
0000000000047d9c	movl	$0x00000003,%edx
0000000000047da1	popq	%rbp
0000000000047da2	jmp	0x0004e662	; symbol stub for: __Block_object_assign
0000000000047da7	nopw	0x00000000(%rax,%rax)
___destroy_helper_block_256:
0000000000047db0	pushq	%rbp
0000000000047db1	movq	%rsp,%rbp
0000000000047db4	movq	0x20(%rdi),%rdi
0000000000047db8	movl	$0x00000003,%esi
0000000000047dbd	popq	%rbp
0000000000047dbe	jmp	0x0004e668	; symbol stub for: __Block_object_dispose
-[DBGGDBLauncher attachableProcessName]:
0000000000047dc3	pushq	%rbp
0000000000047dc4	movq	%rsp,%rbp
0000000000047dc7	pushq	%r15
0000000000047dc9	pushq	%r14
0000000000047dcb	pushq	%r12
0000000000047dcd	pushq	%rbx
0000000000047dce	subq	$0x30,%rsp
0000000000047dd2	movq	%rsi,%r14
0000000000047dd5	movq	%rdi,%rbx
0000000000047dd8	movq	%rbx,0xd8(%rbp)
0000000000047ddc	movq	%r14,0xd0(%rbp)
0000000000047de0	movq	0x0005d0e1(%rip),%rsi
0000000000047de7	movq	0x0006067a(%rip),%rdi
0000000000047dee	movq	0x0003c2e3(%rip),%r12
0000000000047df5	call	*%r12
0000000000047df8	movq	%rax,%r15
0000000000047dfb	movq	0x0005fbd6(%rip),%rsi
0000000000047e02	movq	0x0006065f(%rip),%rdi
0000000000047e09	call	*%r12
0000000000047e0c	cmpq	%rax,%r15
0000000000047e0f	je	0x00047e63
0000000000047e11	movq	%r14,%rdi
0000000000047e14	callq	0x0004e5cc	; symbol stub for: _NSStringFromSelector
0000000000047e19	leaq	0x00067a18(%rip),%rcx
0000000000047e20	leaq	0x0001c41b(%rip),%rdx
0000000000047e27	movq	%rdx,0x10(%rsp)
0000000000047e2c	movq	%rcx,0x08(%rsp)
0000000000047e31	movq	%rax,(%rsp)
0000000000047e35	leaq	0xd8(%rbp),%rdi
0000000000047e39	leaq	0xd0(%rbp),%rsi
0000000000047e3d	leaq	0x0001c5e5(%rip),%rdx
0000000000047e44	leaq	0x0001c37f(%rip),%rcx
0000000000047e4b	leaq	0x0006e306(%rip),%r9
0000000000047e52	movl	$0x00000185,%r8d
0000000000047e58	xorb	%al,%al
0000000000047e5a	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000047e5f	movq	0xd8(%rbp),%rbx
0000000000047e63	movq	0x0005cf3e(%rip),%rsi
0000000000047e6a	movq	0x0003c267(%rip),%r14
0000000000047e71	movq	%rbx,%rdi
0000000000047e74	call	*%r14
0000000000047e77	movq	0x0005fd02(%rip),%rsi
0000000000047e7e	movq	%rax,%rdi
0000000000047e81	call	*%r14
0000000000047e84	addq	$0x30,%rsp
0000000000047e88	popq	%rbx
0000000000047e89	popq	%r12
0000000000047e8b	popq	%r14
0000000000047e8d	popq	%r15
0000000000047e8f	popq	%rbp
0000000000047e90	ret
0000000000047e91	nop
-[DBGGDBLauncher gdbTask]:
0000000000047e92	pushq	%rbp
0000000000047e93	movq	%rsp,%rbp
0000000000047e96	movq	0x00067673(%rip),%rax
0000000000047e9d	movq	(%rdi,%rax),%rax
0000000000047ea1	popq	%rbp
0000000000047ea2	ret
-[PBXGDB_BreakpointController foundationDebugSession]:
0000000000047ea3	pushq	%rbp
0000000000047ea4	movq	%rsp,%rbp
0000000000047ea7	movq	0x0005cc0a(%rip),%rsi
0000000000047eae	call	*0x0003c224(%rip)
0000000000047eb4	movq	0x0005ce2d(%rip),%rsi
0000000000047ebb	movq	%rax,%rdi
0000000000047ebe	call	*0x0003c214(%rip)
0000000000047ec4	movq	0x0005ce25(%rip),%rsi
0000000000047ecb	movq	%rax,%rdi
0000000000047ece	movq	0x0003c203(%rip),%rax
0000000000047ed5	popq	%rbp
0000000000047ed6	jmp	*%rax
-[PBXGDB_BreakpointController setConditionIsValid:forBreakpointNumber:]:
0000000000047ed8	pushq	%rbp
0000000000047ed9	movq	%rsp,%rbp
0000000000047edc	popq	%rbp
0000000000047edd	ret
-[PBXGDB_BreakpointController _initSequence:breakpoint:]:
0000000000047ede	pushq	%rbp
0000000000047edf	movq	%rsp,%rbp
0000000000047ee2	pushq	%r15
0000000000047ee4	pushq	%r14
0000000000047ee6	pushq	%rbx
0000000000047ee7	pushq	%rax
0000000000047ee8	movq	%rcx,%r14
0000000000047eeb	movq	%rdx,%rbx
0000000000047eee	movq	%rdi,%r15
0000000000047ef1	movq	0x0005cbc0(%rip),%rsi
0000000000047ef8	call	*0x0003c1da(%rip)
0000000000047efe	movq	0x0005cecb(%rip),%rsi
0000000000047f05	movq	%rax,%rdi
0000000000047f08	call	*0x0003c1ca(%rip)
0000000000047f0e	movq	0x0005cec3(%rip),%rsi
0000000000047f15	movq	%rbx,%rdi
0000000000047f18	movq	%rax,%rdx
0000000000047f1b	call	*0x0003c1b7(%rip)
0000000000047f21	movq	0x0005fc68(%rip),%rsi
0000000000047f28	movq	%rbx,%rdi
0000000000047f2b	movq	%r15,%rdx
0000000000047f2e	call	*0x0003c1a4(%rip)
0000000000047f34	movq	0x0005fc65(%rip),%rsi
0000000000047f3b	movq	%rbx,%rdi
0000000000047f3e	movq	%r14,%rdx
0000000000047f41	movq	0x0003c190(%rip),%rax
0000000000047f48	addq	$0x08,%rsp
0000000000047f4c	popq	%rbx
0000000000047f4d	popq	%r14
0000000000047f4f	popq	%r15
0000000000047f51	popq	%rbp
0000000000047f52	jmp	*%rax
-[PBXGDB_BreakpointController enqueBreakpointConditionSequence:]:
0000000000047f54	pushq	%rbp
0000000000047f55	movq	%rsp,%rbp
0000000000047f58	pushq	%r15
0000000000047f5a	pushq	%r14
0000000000047f5c	pushq	%r12
0000000000047f5e	pushq	%rbx
0000000000047f5f	subq	$0x20,%rsp
0000000000047f63	movq	%rdx,%r14
0000000000047f66	movq	%rdi,%rbx
0000000000047f69	movq	%rbx,0xd8(%rbp)
0000000000047f6d	movq	%rsi,0xd0(%rbp)
0000000000047f71	movq	0x0005cd78(%rip),%rsi
0000000000047f78	movq	0x0003c159(%rip),%r15
0000000000047f7f	call	*%r15
0000000000047f82	movq	0x0005f8cf(%rip),%rsi
0000000000047f89	movq	%rax,%rdi
0000000000047f8c	movq	%r14,%rdx
0000000000047f8f	call	*%r15
0000000000047f92	testb	%al,%al
0000000000047f94	jne	0x00047fcf
0000000000047f96	leaq	0x0001c702(%rip),%rax
0000000000047f9d	movq	%rax,(%rsp)
0000000000047fa1	leaq	0xd8(%rbp),%rdi
0000000000047fa5	leaq	0xd0(%rbp),%rsi
0000000000047fa9	leaq	0x0001c623(%rip),%rdx
0000000000047fb0	leaq	0x0001c65d(%rip),%rcx
0000000000047fb7	leaq	0x0006787a(%rip),%r9
0000000000047fbe	movl	$0x0000008b,%r8d
0000000000047fc4	xorb	%al,%al
0000000000047fc6	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000047fcb	movq	0xd8(%rbp),%rbx
0000000000047fcf	movq	0x0005cd1a(%rip),%rsi
0000000000047fd6	movq	0x0003c0fb(%rip),%r12
0000000000047fdd	movq	%rbx,%rdi
0000000000047fe0	call	*%r12
0000000000047fe3	movq	0x0005e7d6(%rip),%rsi
0000000000047fea	movq	%rax,%rdi
0000000000047fed	movq	%r14,%rdx
0000000000047ff0	call	*%r12
0000000000047ff3	movq	%rax,%r15
0000000000047ff6	movq	0x00060bd3(%rip),%rbx
0000000000047ffd	movq	0x0005fba4(%rip),%rsi
0000000000048004	movq	%r14,%rdi
0000000000048007	call	*%r12
000000000004800a	movq	0x0005fb9f(%rip),%rsi
0000000000048011	movq	%rbx,%rdi
0000000000048014	movq	%rax,%rdx
0000000000048017	movq	%r15,%rcx
000000000004801a	call	*%r12
000000000004801d	movq	%rax,%rbx
0000000000048020	movq	0x0005fb91(%rip),%rsi
0000000000048027	movq	0xd8(%rbp),%rdi
000000000004802b	movq	%rbx,%rdx
000000000004802e	xorl	%ecx,%ecx
0000000000048030	call	*%r12
0000000000048033	movq	0x0005ca7e(%rip),%rsi
000000000004803a	movq	0xd8(%rbp),%rdi
000000000004803e	call	*%r12
0000000000048041	movq	0x0005cd88(%rip),%rsi
0000000000048048	movq	%rax,%rdi
000000000004804b	call	*%r12
000000000004804e	movq	0x0005cd8b(%rip),%rsi
0000000000048055	movq	%rax,%rdi
0000000000048058	movq	%rbx,%rdx
000000000004805b	call	*%r12
000000000004805e	addq	$0x20,%rsp
0000000000048062	popq	%rbx
0000000000048063	popq	%r12
0000000000048065	popq	%r14
0000000000048067	popq	%r15
0000000000048069	popq	%rbp
000000000004806a	ret
-[PBXGDB_BreakpointController enqueBreakpointIgnoreCountSequence:]:
000000000004806b	pushq	%rbp
000000000004806c	movq	%rsp,%rbp
000000000004806f	pushq	%r15
0000000000048071	pushq	%r14
0000000000048073	pushq	%r12
0000000000048075	pushq	%rbx
0000000000048076	subq	$0x20,%rsp
000000000004807a	movq	%rdx,%r14
000000000004807d	movq	%rdi,%rbx
0000000000048080	movq	%rbx,0xd8(%rbp)
0000000000048084	movq	%rsi,0xd0(%rbp)
0000000000048088	movq	0x0005cc61(%rip),%rsi
000000000004808f	movq	0x0003c042(%rip),%r15
0000000000048096	call	*%r15
0000000000048099	movq	0x0005f7b8(%rip),%rsi
00000000000480a0	movq	%rax,%rdi
00000000000480a3	movq	%r14,%rdx
00000000000480a6	call	*%r15
00000000000480a9	testb	%al,%al
00000000000480ab	jne	0x000480e6
00000000000480ad	leaq	0x0001c5eb(%rip),%rax
00000000000480b4	movq	%rax,(%rsp)
00000000000480b8	leaq	0xd8(%rbp),%rdi
00000000000480bc	leaq	0xd0(%rbp),%rsi
00000000000480c0	leaq	0x0001c613(%rip),%rdx
00000000000480c7	leaq	0x0001c546(%rip),%rcx
00000000000480ce	leaq	0x00067763(%rip),%r9
00000000000480d5	movl	$0x00000095,%r8d
00000000000480db	xorb	%al,%al
00000000000480dd	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
00000000000480e2	movq	0xd8(%rbp),%rbx
00000000000480e6	movq	0x0005cc03(%rip),%rsi
00000000000480ed	movq	0x0003bfe4(%rip),%r12
00000000000480f4	movq	%rbx,%rdi
00000000000480f7	call	*%r12
00000000000480fa	movq	0x0005e6bf(%rip),%rsi
0000000000048101	movq	%rax,%rdi
0000000000048104	movq	%r14,%rdx
0000000000048107	call	*%r12
000000000004810a	movq	%rax,%r15
000000000004810d	movq	0x00060ac4(%rip),%rbx
0000000000048114	movq	0x0005faa5(%rip),%rsi
000000000004811b	movq	%r14,%rdi
000000000004811e	call	*%r12
0000000000048121	movq	0x0005faa0(%rip),%rsi
0000000000048128	movq	%rbx,%rdi
000000000004812b	movq	%rax,%rdx
000000000004812e	movq	%r15,%rcx
0000000000048131	call	*%r12
0000000000048134	movq	%rax,%rbx
0000000000048137	movq	0x0005fa7a(%rip),%rsi
000000000004813e	movq	0xd8(%rbp),%rdi
0000000000048142	movq	%rbx,%rdx
0000000000048145	xorl	%ecx,%ecx
0000000000048147	call	*%r12
000000000004814a	movq	0x0005c967(%rip),%rsi
0000000000048151	movq	0xd8(%rbp),%rdi
0000000000048155	call	*%r12
0000000000048158	movq	0x0005cc71(%rip),%rsi
000000000004815f	movq	%rax,%rdi
0000000000048162	call	*%r12
0000000000048165	movq	0x0005cc74(%rip),%rsi
000000000004816c	movq	%rax,%rdi
000000000004816f	movq	%rbx,%rdx
0000000000048172	call	*%r12
0000000000048175	addq	$0x20,%rsp
0000000000048179	popq	%rbx
000000000004817a	popq	%r12
000000000004817c	popq	%r14
000000000004817e	popq	%r15
0000000000048180	popq	%rbp
0000000000048181	ret
-[PBXGDB_BreakpointController enqueBreakpointCommandSequence:forBreakpointNum:]:
0000000000048182	pushq	%rbp
0000000000048183	movq	%rsp,%rbp
0000000000048186	pushq	%r14
0000000000048188	pushq	%rbx
0000000000048189	movq	%rdi,%rbx
000000000004818c	movq	0x0005fa3d(%rip),%rsi
0000000000048193	movq	0x00060a46(%rip),%rdi
000000000004819a	call	*0x0003bf38(%rip)
00000000000481a0	movq	%rax,%r14
00000000000481a3	movq	0x0005fa0e(%rip),%rsi
00000000000481aa	movq	%rbx,%rdi
00000000000481ad	movq	%r14,%rdx
00000000000481b0	xorl	%ecx,%ecx
00000000000481b2	call	*0x0003bf20(%rip)
00000000000481b8	movq	0x0005c8f9(%rip),%rsi
00000000000481bf	movq	%rbx,%rdi
00000000000481c2	call	*0x0003bf10(%rip)
00000000000481c8	movq	0x0005cc01(%rip),%rsi
00000000000481cf	movq	%rax,%rdi
00000000000481d2	call	*0x0003bf00(%rip)
00000000000481d8	movq	0x0005cc01(%rip),%rsi
00000000000481df	movq	%rax,%rdi
00000000000481e2	movq	%r14,%rdx
00000000000481e5	movq	0x0003beec(%rip),%rax
00000000000481ec	popq	%rbx
00000000000481ed	popq	%r14
00000000000481ef	popq	%rbp
00000000000481f0	jmp	*%rax
-[PBXGDB_BreakpointController setGDBNumber:forBreakpoint:]:
00000000000481f2	pushq	%rbp
00000000000481f3	movq	%rsp,%rbp
00000000000481f6	pushq	%r15
00000000000481f8	pushq	%r14
00000000000481fa	pushq	%r13
00000000000481fc	pushq	%r12
00000000000481fe	pushq	%rbx
00000000000481ff	pushq	%rax
0000000000048200	movq	%rcx,%r15
0000000000048203	movq	%rdx,%rbx
0000000000048206	movq	%rdi,0xd0(%rbp)
000000000004820a	movq	0x000609d7(%rip),%rdi
0000000000048211	leaq	0x000600c8(%rip),%r13
0000000000048218	movq	%r13,%rsi
000000000004821b	call	*0x000600bf(%rip)
0000000000048221	movq	0x0005c848(%rip),%rsi
0000000000048228	movq	0x0003bea9(%rip),%r14
000000000004822f	movq	%rax,%rdi
0000000000048232	call	*%r14
0000000000048235	movq	%rax,%r12
0000000000048238	movq	0x0005f9c1(%rip),%rsi
000000000004823f	movq	%r12,%rdi
0000000000048242	movq	%rbx,%rdx
0000000000048245	call	*%r14
0000000000048248	movq	0x000609a1(%rip),%rdi
000000000004824f	movq	%r13,%rsi
0000000000048252	call	*0x00060088(%rip)
0000000000048258	movq	0x0005c811(%rip),%rsi
000000000004825f	movq	%rax,%rdi
0000000000048262	call	*%r14
0000000000048265	movq	%rax,%rbx
0000000000048268	movq	0x0005f931(%rip),%rsi
000000000004826f	movq	%rbx,%rdi
0000000000048272	movq	%r15,%rdx
0000000000048275	call	*%r14
0000000000048278	movq	0x0005f989(%rip),%rsi
000000000004827f	movq	%rbx,%rdi
0000000000048282	movq	%r12,%rdx
0000000000048285	call	*%r14
0000000000048288	movq	0x0005f981(%rip),%rsi
000000000004828f	movq	%rbx,%rdi
0000000000048292	call	*%r14
0000000000048295	movq	0x0005f97c(%rip),%rsi
000000000004829c	movq	%r12,%rdi
000000000004829f	movl	$0x00000001,%edx
00000000000482a4	call	*%r14
00000000000482a7	leaq	0x00060052(%rip),%rsi
00000000000482ae	movq	0x0006727b(%rip),%rax
00000000000482b5	movq	0xd0(%rbp),%rcx
00000000000482b9	movq	(%rcx,%rax),%rdi
00000000000482bd	movq	0x0006003c(%rip),%rax
00000000000482c4	movq	%rbx,%rdx
00000000000482c7	addq	$0x08,%rsp
00000000000482cb	popq	%rbx
00000000000482cc	popq	%r12
00000000000482ce	popq	%r13
00000000000482d0	popq	%r14
00000000000482d2	popq	%r15
00000000000482d4	popq	%rbp
00000000000482d5	jmp	*%rax
-[PBXGDB_BreakpointController setCommandForBreakpoint:gdbNumber:]:
00000000000482d7	pushq	%rbp
00000000000482d8	movq	%rsp,%rbp
00000000000482db	pushq	%r15
00000000000482dd	pushq	%r14
00000000000482df	pushq	%rbx
00000000000482e0	pushq	%rax
00000000000482e1	movq	%rcx,%r14
00000000000482e4	movq	%rdi,%r15
00000000000482e7	testq	%r14,%r14
00000000000482ea	jle	0x0004831a
00000000000482ec	movq	0x0005f93d(%rip),%rsi
00000000000482f3	movq	%r15,%rdi
00000000000482f6	call	*0x0003bddc(%rip)
00000000000482fc	movq	%rax,%rbx
00000000000482ff	leaq	0x0006005a(%rip),%rsi
0000000000048306	leaq	0x0006762b(%rip),%rdx
000000000004830d	movq	%rbx,%rdi
0000000000048310	call	*0x0006004a(%rip)
0000000000048316	testb	%al,%al
0000000000048318	je	0x00048325
000000000004831a	addq	$0x08,%rsp
000000000004831e	popq	%rbx
000000000004831f	popq	%r14
0000000000048321	popq	%r15
0000000000048323	popq	%rbp
0000000000048324	ret
0000000000048325	movq	0x0005f90c(%rip),%rsi
000000000004832c	movq	%r15,%rdi
000000000004832f	movq	%rbx,%rdx
0000000000048332	movq	%r14,%rcx
0000000000048335	addq	$0x08,%rsp
0000000000048339	popq	%rbx
000000000004833a	popq	%r14
000000000004833c	popq	%r15
000000000004833e	popq	%rbp
000000000004833f	jmp	*0x0003bd93(%rip)
-[PBXGDB_BreakpointController _findDynamicLinkerImageForBreakpointInfo:]:
0000000000048345	pushq	%rbp
0000000000048346	movq	%rsp,%rbp
0000000000048349	pushq	%r15
000000000004834b	pushq	%r14
000000000004834d	pushq	%r13
000000000004834f	pushq	%r12
0000000000048351	pushq	%rbx
0000000000048352	subq	$0x18,%rsp
0000000000048356	movq	%rdx,%rbx
0000000000048359	movq	0x0005e708(%rip),%rsi
0000000000048360	movq	0x0003bd71(%rip),%r14
0000000000048367	call	*%r14
000000000004836a	movq	%rax,0xd0(%rbp)
000000000004836e	movq	0x0005f8f3(%rip),%rsi
0000000000048375	movq	%rbx,%rdi
0000000000048378	call	*%r14
000000000004837b	xorb	%r15b,%r15b
000000000004837e	testb	%al,%al
0000000000048380	je	0x0004847d
0000000000048386	movq	0x0005f7fb(%rip),%rsi
000000000004838d	movq	0x0003bd44(%rip),%r14
0000000000048394	movq	%rbx,%rdi
0000000000048397	call	*%r14
000000000004839a	movq	0x0005f47f(%rip),%rsi
00000000000483a1	movq	%rax,%rdi
00000000000483a4	call	*%r14
00000000000483a7	xorb	%r15b,%r15b
00000000000483aa	testb	%al,%al
00000000000483ac	je	0x0004847d
00000000000483b2	movq	0x0005f89f(%rip),%rsi
00000000000483b9	movq	%rbx,%rdi
00000000000483bc	call	*0x0003bd16(%rip)
00000000000483c2	movq	%rax,0xc8(%rbp)
00000000000483c6	leaq	0x0005ff43(%rip),%rsi
00000000000483cd	movq	%rax,%rdi
00000000000483d0	call	*0x0005ff3a(%rip)
00000000000483d6	movq	%rax,%r12
00000000000483d9	xorb	%r15b,%r15b
00000000000483dc	testq	%r12,%r12
00000000000483df	je	0x0004847d
00000000000483e5	xorb	%r15b,%r15b
00000000000483e8	xorl	%ebx,%ebx
00000000000483ea	movq	0xc8(%rbp),%rdi
00000000000483ee	leaq	0x0005ff2b(%rip),%rsi
00000000000483f5	movq	%rbx,%rdx
00000000000483f8	call	*0x0005ff22(%rip)
00000000000483fe	movq	%rax,%r13
0000000000048401	movq	%r13,%rdi
0000000000048404	movq	0x0005f865(%rip),%rsi
000000000004840b	call	*0x0003bcc7(%rip)
0000000000048411	testl	%eax,%eax
0000000000048413	jne	0x00048471
0000000000048415	movq	%r13,%rdi
0000000000048418	movq	0x0005f859(%rip),%rsi
000000000004841f	call	*0x0003bcb3(%rip)
0000000000048425	movq	%rax,%r14
0000000000048428	testq	%r14,%r14
000000000004842b	je	0x00048471
000000000004842d	movq	%r13,%rdi
0000000000048430	movq	0x0005f849(%rip),%rsi
0000000000048437	call	*0x0003bc9b(%rip)
000000000004843d	testq	%rax,%rax
0000000000048440	jne	0x00048471
0000000000048442	movq	0xd0(%rbp),%rdi
0000000000048446	movq	0x0005cf1b(%rip),%rsi
000000000004844d	movq	%r14,%rdx
0000000000048450	call	*0x0003bc82(%rip)
0000000000048456	testq	%rax,%rax
0000000000048459	je	0x00048471
000000000004845b	movq	%r13,%rdi
000000000004845e	movq	0x0005f7eb(%rip),%rsi
0000000000048465	movq	%rax,%rdx
0000000000048468	call	*0x0003bc6a(%rip)
000000000004846e	movb	$0x01,%r15b
0000000000048471	incq	%rbx
0000000000048474	cmpq	%rbx,%r12
0000000000048477	jne	0x000483ea
000000000004847d	movsbl	%bh,%eax
0000000000048481	addq	$0x18,%rsp
0000000000048485	popq	%rbx
0000000000048486	popq	%r12
0000000000048488	popq	%r13
000000000004848a	popq	%r14
000000000004848c	popq	%r15
000000000004848e	popq	%rbp
000000000004848f	ret
-[PBXGDB_BreakpointController _enqueueSetEnableBreakpointSequenceForBreakpoint:]:
0000000000048490	pushq	%rbp
0000000000048491	movq	%rsp,%rbp
0000000000048494	pushq	%r15
0000000000048496	pushq	%r14
0000000000048498	pushq	%r12
000000000004849a	pushq	%rbx
000000000004849b	movq	%rdx,%r12
000000000004849e	movq	%rdi,%r14
00000000000484a1	movq	0x00060758(%rip),%rdi
00000000000484a8	leaq	0x0005fe81(%rip),%rsi
00000000000484af	call	*0x0005fe7b(%rip)
00000000000484b5	leaq	0x0005fe84(%rip),%rsi
00000000000484bc	movq	%r12,%rdi
00000000000484bf	movq	%rax,%rdx
00000000000484c2	call	*0x0005fe78(%rip)
00000000000484c8	testb	%al,%al
00000000000484ca	je	0x0004850c
00000000000484cc	movq	0x0005f7bd(%rip),%rsi
00000000000484d3	movq	%r12,%rdi
00000000000484d6	call	*0x0003bbfc(%rip)
00000000000484dc	movq	%rax,%rbx
00000000000484df	movq	0x000605ca(%rip),%rdi
00000000000484e6	leaq	0x0005fe43(%rip),%rsi
00000000000484ed	call	*0x0005fe3d(%rip)
00000000000484f3	leaq	0x0005fe46(%rip),%rsi
00000000000484fa	movq	%rbx,%rdi
00000000000484fd	movq	%rax,%rdx
0000000000048500	call	*0x0005fe3a(%rip)
0000000000048506	testb	%al,%al
0000000000048508	cmovneq	%rbx,%r12
000000000004850c	movq	0x0005f6c5(%rip),%rsi
0000000000048513	movq	0x00060596(%rip),%rdi
000000000004851a	movq	%r12,%rdx
000000000004851d	call	*0x0003bbb5(%rip)
0000000000048523	testb	%al,%al
0000000000048525	jne	0x00048542
0000000000048527	movq	0x0005f6ba(%rip),%rsi
000000000004852e	movq	0x0006057b(%rip),%rdi
0000000000048535	movq	%r12,%rdx
0000000000048538	call	*0x0003bb9a(%rip)
000000000004853e	testb	%al,%al
0000000000048540	je	0x0004856f
0000000000048542	movq	0x0005f697(%rip),%rsi
0000000000048549	movq	%r12,%rdi
000000000004854c	call	*0x0003bb86(%rip)
0000000000048552	testl	%eax,%eax
0000000000048554	jne	0x0004855f
0000000000048556	movq	0x0005f693(%rip),%rsi
000000000004855d	jmp	0x00048566
000000000004855f	movq	0x0005f692(%rip),%rsi
0000000000048566	movq	%r14,%rdi
0000000000048569	call	*0x0003bb69(%rip)
000000000004856f	movq	0x0005f672(%rip),%rsi
0000000000048576	movq	0x00060533(%rip),%rdi
000000000004857d	movq	%r12,%rdx
0000000000048580	call	*0x0003bb52(%rip)
0000000000048586	testb	%al,%al
0000000000048588	je	0x00048593
000000000004858a	popq	%rbx
000000000004858b	popq	%r12
000000000004858d	popq	%r14
000000000004858f	popq	%r15
0000000000048591	popq	%rbp
0000000000048592	ret
0000000000048593	movq	0x0006066e(%rip),%rdi
000000000004859a	leaq	0x0005fd3f(%rip),%rsi
00000000000485a1	call	*0x0005fd39(%rip)
00000000000485a7	movq	0x0005c4c2(%rip),%rsi
00000000000485ae	movq	%rax,%rdi
00000000000485b1	call	*0x0003bb21(%rip)
00000000000485b7	movq	%rax,%r15
00000000000485ba	movq	0x0005f6d7(%rip),%rsi
00000000000485c1	movq	%r14,%rdi
00000000000485c4	movq	%r15,%rdx
00000000000485c7	movq	%r12,%rcx
00000000000485ca	call	*0x0003bb08(%rip)
00000000000485d0	movq	0x0005c4e1(%rip),%rsi
00000000000485d7	movq	%r14,%rdi
00000000000485da	call	*0x0003baf8(%rip)
00000000000485e0	movq	0x0005c7e9(%rip),%rsi
00000000000485e7	movq	%rax,%rdi
00000000000485ea	call	*0x0003bae8(%rip)
00000000000485f0	movq	0x0005c7e9(%rip),%rsi
00000000000485f7	movq	%rax,%rdi
00000000000485fa	movq	%r15,%rdx
00000000000485fd	movq	0x0003bad4(%rip),%rax
0000000000048604	popq	%rbx
0000000000048605	popq	%r12
0000000000048607	popq	%r14
0000000000048609	popq	%r15
000000000004860b	popq	%rbp
000000000004860c	jmp	*%rax
-[PBXGDB_BreakpointController enqueueSetEnableBreakpointSequenceForBreakpoint:]:
000000000004860e	pushq	%rbp
000000000004860f	movq	%rsp,%rbp
0000000000048612	pushq	%r15
0000000000048614	pushq	%r14
0000000000048616	pushq	%rbx
0000000000048617	pushq	%rax
0000000000048618	movq	%rdx,%rbx
000000000004861b	movq	%rdi,%r14
000000000004861e	movq	0x00060303(%rip),%rdi
0000000000048625	leaq	0x0005fd04(%rip),%rsi
000000000004862c	call	*0x0005fcfe(%rip)
0000000000048632	leaq	0x0005fd07(%rip),%rsi
0000000000048639	movq	%rbx,%rdi
000000000004863c	movq	%rax,%rdx
000000000004863f	call	*0x0005fcfb(%rip)
0000000000048645	movb	%al,%r15b
0000000000048648	movq	0x0005c6a1(%rip),%rsi
000000000004864f	movq	%r14,%rdi
0000000000048652	call	*0x0003ba80(%rip)
0000000000048658	movq	%rax,%rdi
000000000004865b	testb	%r15b,%r15b
000000000004865e	je	0x00048669
0000000000048660	movq	0x0005f211(%rip),%rsi
0000000000048667	jmp	0x00048670
0000000000048669	movq	0x0005f1e8(%rip),%rsi
0000000000048670	movq	%rbx,%rdx
0000000000048673	call	*0x0003ba5f(%rip)
0000000000048679	testb	%al,%al
000000000004867b	je	0x00048705
0000000000048681	movq	0x00060578(%rip),%rdi
0000000000048688	leaq	0x0005fca1(%rip),%rsi
000000000004868f	call	*0x0005fc9b(%rip)
0000000000048695	leaq	0x0005fca4(%rip),%rsi
000000000004869c	movq	%rbx,%rdi
000000000004869f	movq	%rax,%rdx
00000000000486a2	call	*0x0005fc98(%rip)
00000000000486a8	testb	%al,%al
00000000000486aa	movq	%rbx,%rdx
00000000000486ad	je	0x000486c2
00000000000486af	movq	0x0005f5da(%rip),%rsi
00000000000486b6	movq	%rbx,%rdi
00000000000486b9	call	*0x0003ba19(%rip)
00000000000486bf	movq	%rax,%rdx
00000000000486c2	movq	0x0005de17(%rip),%rsi
00000000000486c9	movq	%r14,%rdi
00000000000486cc	call	*0x0003ba06(%rip)
00000000000486d2	movq	0x0005f5cf(%rip),%rsi
00000000000486d9	movq	%r14,%rdi
00000000000486dc	movq	%rax,%rdx
00000000000486df	call	*0x0003b9f3(%rip)
00000000000486e5	movq	0x0005f5c4(%rip),%rsi
00000000000486ec	movq	%r14,%rdi
00000000000486ef	movq	%rbx,%rdx
00000000000486f2	movq	0x0003b9df(%rip),%rax
00000000000486f9	addq	$0x08,%rsp
00000000000486fd	popq	%rbx
00000000000486fe	popq	%r14
0000000000048700	popq	%r15
0000000000048702	popq	%rbp
0000000000048703	jmp	*%rax
0000000000048705	addq	$0x08,%rsp
0000000000048709	popq	%rbx
000000000004870a	popq	%r14
000000000004870c	popq	%r15
000000000004870e	popq	%rbp
000000000004870f	ret
+[PBXGDB_BreakpointController _createRegexForBreakpoints:]:
0000000000048710	pushq	%rbp
0000000000048711	movq	%rsp,%rbp
0000000000048714	pushq	%r15
0000000000048716	pushq	%r14
0000000000048718	pushq	%r13
000000000004871a	pushq	%r12
000000000004871c	pushq	%rbx
000000000004871d	subq	$0x000000e8,%rsp
0000000000048724	movq	%rdx,%r14
0000000000048727	movq	%r14,0xffffff00(%rbp)
000000000004872e	movq	0x0003b96b(%rip),%rax
0000000000048735	movq	(%rax),%rax
0000000000048738	movq	%rax,0xd0(%rbp)
000000000004873c	movq	0x0005fcf5(%rip),%rdi
0000000000048743	leaq	0x0005fb96(%rip),%rsi
000000000004874a	call	*0x0005fb90(%rip)
0000000000048750	movq	-[PBXGDB_MIBaseVarObjCommand currentVarObjNewDynamicTypeExpressionString](%rip),%rbx
0000000000048757	movq	0x0005c312(%rip),%rsi
000000000004875e	movq	%rax,%rdi
0000000000048761	call	*%rbx
0000000000048763	movq	%rax,0xfffffef0(%rbp)
000000000004876a	movq	0x0005ccbf(%rip),%rsi
0000000000048771	movq	0x0005fce8(%rip),%rdi
0000000000048778	call	*%rbx
000000000004877a	movq	%rax,0xfffffef8(%rbp)
0000000000048781	movq	0x0005cca8(%rip),%rsi
0000000000048788	movq	0x0005fcd1(%rip),%rdi
000000000004878f	call	*%rbx
0000000000048791	movq	%rax,0xffffff08(%rbp)
0000000000048798	leaq	0x0005fbe1(%rip),%rsi
000000000004879f	leaq	0x90(%rbp),%rdx
00000000000487a3	leaq	0xffffff10(%rbp),%rcx
00000000000487aa	xorps	%xmm0,%xmm0
00000000000487ad	movaps	%xmm0,0xc0(%rbp)
00000000000487b1	movaps	%xmm0,0xb0(%rbp)
00000000000487b5	movaps	%xmm0,0xa0(%rbp)
00000000000487b9	movaps	%xmm0,0x90(%rbp)
00000000000487bd	movq	%r14,%rdi
00000000000487c0	movl	$0x00000010,%r8d
00000000000487c6	call	*0x0005fbb4(%rip)
00000000000487cc	movq	%rax,%rbx
00000000000487cf	testq	%rbx,%rbx
00000000000487d2	je	0x00048886
00000000000487d8	movq	0xa0(%rbp),%rax
00000000000487dc	movq	(%rax),%r15
00000000000487df	leaq	0x0005fb1a(%rip),%r12
00000000000487e6	xorl	%r13d,%r13d
00000000000487e9	movq	0xa0(%rbp),%rax
00000000000487ed	cmpq	%r15,(%rax)
00000000000487f0	je	0x000487fe
00000000000487f2	movq	0xffffff00(%rbp),%rdi
00000000000487f9	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
00000000000487fe	movq	0x98(%rbp),%rax
0000000000048802	movq	(%rax,%r13,8),%r14
0000000000048806	movq	%r14,%rdi
0000000000048809	movq	0x0005f010(%rip),%rsi
0000000000048810	call	*0x0003b8c2(%rip)
0000000000048816	testb	%al,%al
0000000000048818	je	0x0004884d
000000000004881a	movq	%r14,%rdi
000000000004881d	movq	0x0005f494(%rip),%rsi
0000000000048824	call	*0x0003b8ae(%rip)
000000000004882a	movq	0x0005facf(%rip),%rcx
0000000000048831	testb	%al,%al
0000000000048833	je	0x0004883e
0000000000048835	movq	0xfffffef8(%rbp),%rdi
000000000004883c	jmp	0x00048845
000000000004883e	movq	0xffffff08(%rbp),%rdi
0000000000048845	movq	%r12,%rsi
0000000000048848	movq	%r14,%rdx
000000000004884b	call	*%rcx
000000000004884d	incq	%r13
0000000000048850	cmpq	%rbx,%r13
0000000000048853	jb	0x000487e9
0000000000048855	movq	0xffffff00(%rbp),%rdi
000000000004885c	leaq	0x0005fb1d(%rip),%rsi
0000000000048863	leaq	0x90(%rbp),%rdx
0000000000048867	leaq	0xffffff10(%rbp),%rcx
000000000004886e	movl	$0x00000010,%r8d
0000000000048874	call	*0x0005fb06(%rip)
000000000004887a	movq	%rax,%rbx
000000000004887d	testq	%rbx,%rbx
0000000000048880	jne	0x000487e6
0000000000048886	leaq	0x0005fa83(%rip),%rsi
000000000004888d	movq	0xffffff08(%rbp),%rdi
0000000000048894	call	*0x0005fa76(%rip)
000000000004889a	movq	%rax,%rbx
000000000004889d	movq	%rbx,0xffffff00(%rbp)
00000000000488a4	movq	0x0005fdbd(%rip),%rdi
00000000000488ab	leaq	0x0005fa2e(%rip),%rsi
00000000000488b2	call	*0x0005fa28(%rip)
00000000000488b8	movq	0x0005c1b1(%rip),%rsi
00000000000488bf	movq	%rax,%rdi
00000000000488c2	call	*0x0003b810(%rip)
00000000000488c8	movq	%rax,%r12
00000000000488cb	testq	%rbx,%rbx
00000000000488ce	jle	0x000489ac
00000000000488d4	xorl	%r13d,%r13d
00000000000488d7	movq	0x0003b7fa(%rip),%r15
00000000000488de	movq	0xffffff08(%rbp),%rdi
00000000000488e5	leaq	0x0005fa34(%rip),%rsi
00000000000488ec	movq	%r13,%rdx
00000000000488ef	call	*0x0005fa2b(%rip)
00000000000488f5	movq	%rax,%rbx
00000000000488f8	movq	%rbx,%rdi
00000000000488fb	movq	0x0005ef1e(%rip),%rsi
0000000000048902	call	*0x0003b7d0(%rip)
0000000000048908	testb	%al,%al
000000000004890a	je	0x0004899c
0000000000048910	movq	%rbx,%rdi
0000000000048913	movq	0x0005f3a6(%rip),%rsi
000000000004891a	call	*%r15
000000000004891d	movq	%rax,%rbx
0000000000048920	movq	%r12,%rdi
0000000000048923	movq	0x0005e9a6(%rip),%rsi
000000000004892a	movq	%rbx,%rdx
000000000004892d	call	*%r15
0000000000048930	testq	%rax,%rax
0000000000048933	jne	0x0004899c
0000000000048935	movq	%r12,%rdi
0000000000048938	leaq	0x0005f9c1(%rip),%rsi
000000000004893f	movq	%rbx,%rdx
0000000000048942	call	*0x0005f9b8(%rip)
0000000000048948	movq	0xfffffef0(%rbp),%r14
000000000004894f	movq	%r14,%rdi
0000000000048952	leaq	0x0005f997(%rip),%rsi
0000000000048959	call	*0x0005f991(%rip)
000000000004895f	testq	%rax,%rax
0000000000048962	jne	0x00048979
0000000000048964	movq	%r14,%rdi
0000000000048967	movq	0x0005c192(%rip),%rsi
000000000004896e	movq	%rbx,%rdx
0000000000048971	call	*0x0003b761(%rip)
0000000000048977	jmp	0x0004899c
0000000000048979	movq	%r14,%rdi
000000000004897c	movq	%r14,0xfffffef0(%rbp)
0000000000048983	movq	0x0005c30e(%rip),%rsi
000000000004898a	leaq	0x0006d887(%rip),%rdx
0000000000048991	movq	%rbx,%rcx
0000000000048994	xorb	%al,%al
0000000000048996	call	*0x0003b73c(%rip)
000000000004899c	incq	%r13
000000000004899f	cmpq	%r13,0xffffff00(%rbp)
00000000000489a6	jne	0x000488de
00000000000489ac	leaq	0x0005f93d(%rip),%rsi
00000000000489b3	movq	0xfffffef0(%rbp),%rbx
00000000000489ba	movq	%rbx,%rdi
00000000000489bd	call	*0x0005f92d(%rip)
00000000000489c3	testq	%rax,%rax
00000000000489c6	je	0x00048a01
00000000000489c8	leaq	0x0005f941(%rip),%rsi
00000000000489cf	movq	0xfffffef8(%rbp),%rdi
00000000000489d6	call	*0x0005f934(%rip)
00000000000489dc	testq	%rax,%rax
00000000000489df	je	0x00048a01
00000000000489e1	movq	0x0005c2b0(%rip),%rsi
00000000000489e8	leaq	0x0006d829(%rip),%rdx
00000000000489ef	leaq	0x0006d7c2(%rip),%rcx
00000000000489f6	movq	%rbx,%rdi
00000000000489f9	xorb	%al,%al
00000000000489fb	call	*0x0003b6d7(%rip)
0000000000048a01	movq	0x0003b698(%rip),%rax
0000000000048a08	movq	(%rax),%rax
0000000000048a0b	cmpq	0xd0(%rbp),%rax
0000000000048a0f	jne	0x00048a26
0000000000048a11	movq	%rbx,%rax
0000000000048a14	addq	$0x000000e8,%rsp
0000000000048a1b	popq	%rbx
0000000000048a1c	popq	%r12
0000000000048a1e	popq	%r13
0000000000048a20	popq	%r14
0000000000048a22	popq	%r15
0000000000048a24	popq	%rbp
0000000000048a25	ret
0000000000048a26	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
-[PBXGDB_BreakpointController _breakpontsAreEnabledInArray:]:
0000000000048a2b	pushq	%rbp
0000000000048a2c	movq	%rsp,%rbp
0000000000048a2f	pushq	%r15
0000000000048a31	pushq	%r14
0000000000048a33	pushq	%r13
0000000000048a35	pushq	%r12
0000000000048a37	pushq	%rbx
0000000000048a38	subq	$0x000000c8,%rsp
0000000000048a3f	movq	%rdx,%r14
0000000000048a42	movq	0x0003b657(%rip),%rax
0000000000048a49	movq	(%rax),%rax
0000000000048a4c	movq	%rax,0xd0(%rbp)
0000000000048a50	xorps	%xmm0,%xmm0
0000000000048a53	movaps	%xmm0,0xc0(%rbp)
0000000000048a57	movaps	%xmm0,0xb0(%rbp)
0000000000048a5b	movaps	%xmm0,0xa0(%rbp)
0000000000048a5f	movaps	%xmm0,0x90(%rbp)
0000000000048a63	leaq	0x0005f916(%rip),%rsi
0000000000048a6a	leaq	0x90(%rbp),%rdx
0000000000048a6e	leaq	0xffffff10(%rbp),%rcx
0000000000048a75	movq	%r14,%rdi
0000000000048a78	movl	$0x00000010,%r8d
0000000000048a7e	call	*0x0005f8fc(%rip)
0000000000048a84	movq	%rax,%rbx
0000000000048a87	xorb	%cl,%cl
0000000000048a89	testq	%rbx,%rbx
0000000000048a8c	je	0x00048afa
0000000000048a8e	movq	0xa0(%rbp),%rax
0000000000048a92	movq	(%rax),%r13
0000000000048a95	movq	0x0005ed84(%rip),%r15
0000000000048a9c	xorl	%r12d,%r12d
0000000000048a9f	movq	0xa0(%rbp),%rax
0000000000048aa3	cmpq	%r13,(%rax)
0000000000048aa6	je	0x00048ab0
0000000000048aa8	movq	%r14,%rdi
0000000000048aab	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
0000000000048ab0	movq	0x98(%rbp),%rax
0000000000048ab4	movq	(%rax,%r12,8),%rdi
0000000000048ab8	movq	%r15,%rsi
0000000000048abb	call	*0x0003b617(%rip)
0000000000048ac1	movb	$0x01,%cl
0000000000048ac3	cmpb	$0x01,%al
0000000000048ac5	je	0x00048afa
0000000000048ac7	incq	%r12
0000000000048aca	cmpq	%rbx,%r12
0000000000048acd	jb	0x00048a9f
0000000000048acf	movq	%r14,%rdi
0000000000048ad2	leaq	0x0005f8a7(%rip),%rsi
0000000000048ad9	leaq	0x90(%rbp),%rdx
0000000000048add	leaq	0xffffff10(%rbp),%rcx
0000000000048ae4	movl	$0x00000010,%r8d
0000000000048aea	call	*0x0005f890(%rip)
0000000000048af0	movq	%rax,%rbx
0000000000048af3	xorb	%cl,%cl
0000000000048af5	testq	%rbx,%rbx
0000000000048af8	jne	0x00048a9c
0000000000048afa	movq	0x0003b59f(%rip),%rax
0000000000048b01	movq	(%rax),%rax
0000000000048b04	cmpq	0xd0(%rbp),%rax
0000000000048b08	jne	0x00048b1f
0000000000048b0a	movzbl	%cl,%eax
0000000000048b0d	addq	$0x000000c8,%rsp
0000000000048b14	popq	%rbx
0000000000048b15	popq	%r12
0000000000048b17	popq	%r13
0000000000048b19	popq	%r14
0000000000048b1b	popq	%r15
0000000000048b1d	popq	%rbp
0000000000048b1e	ret
0000000000048b1f	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
-[PBXGDB_BreakpointController enqueueDeleteStopOnCPPThrowSequence]:
0000000000048b24	pushq	%rbp
0000000000048b25	movq	%rsp,%rbp
0000000000048b28	pushq	%r14
0000000000048b2a	pushq	%rbx
0000000000048b2b	movq	%rdi,%r14
0000000000048b2e	movq	0x000600e3(%rip),%rdi
0000000000048b35	leaq	0x0005f7a4(%rip),%rsi
0000000000048b3c	call	*0x0005f79e(%rip)
0000000000048b42	movq	0x0005bf27(%rip),%rsi
0000000000048b49	movq	%rax,%rdi
0000000000048b4c	call	*0x0003b586(%rip)
0000000000048b52	movq	%rax,%rbx
0000000000048b55	movq	0x0005bf5c(%rip),%rsi
0000000000048b5c	movq	%r14,%rdi
0000000000048b5f	call	*0x0003b573(%rip)
0000000000048b65	movq	0x0005c264(%rip),%rsi
0000000000048b6c	movq	%rax,%rdi
0000000000048b6f	call	*0x0003b563(%rip)
0000000000048b75	movq	0x0005c264(%rip),%rsi
0000000000048b7c	movq	%rax,%rdi
0000000000048b7f	movq	%rbx,%rdx
0000000000048b82	movq	0x0003b54f(%rip),%rax
0000000000048b89	popq	%rbx
0000000000048b8a	popq	%r14
0000000000048b8c	popq	%rbp
0000000000048b8d	jmp	*%rax
-[PBXGDB_BreakpointController enqueueStopOnCPPThrowSequence]:
0000000000048b8f	pushq	%rbp
0000000000048b90	movq	%rsp,%rbp
0000000000048b93	pushq	%r15
0000000000048b95	pushq	%r14
0000000000048b97	pushq	%rbx
0000000000048b98	pushq	%rax
0000000000048b99	movq	%rdi,%rbx
0000000000048b9c	movq	0x000669a5(%rip),%rax
0000000000048ba3	cmpq	$0x00,(%rbx,%rax)
0000000000048ba8	je	0x00048c12
0000000000048baa	leaq	0x0005f77f(%rip),%rsi
0000000000048bb1	movq	%rbx,%rdi
0000000000048bb4	call	*0x0005f776(%rip)
0000000000048bba	movq	0x00066987(%rip),%rcx
0000000000048bc1	movq	(%rbx,%rcx),%rdx
0000000000048bc5	movq	0x0005f0fc(%rip),%rsi
0000000000048bcc	movq	0x0003b505(%rip),%r15
0000000000048bd3	movq	%rax,%rdi
0000000000048bd6	call	*%r15
0000000000048bd9	movq	%rax,%r14
0000000000048bdc	movq	0x00066965(%rip),%rax
0000000000048be3	movq	(%rbx,%rax),%rdx
0000000000048be7	movq	0x0005f0e2(%rip),%rsi
0000000000048bee	movq	%rbx,%rdi
0000000000048bf1	call	*%r15
0000000000048bf4	cmpb	$0x01,%al
0000000000048bf6	je	0x00048c1d
0000000000048bf8	movq	0x0005f0e1(%rip),%rsi
0000000000048bff	movq	%rbx,%rdi
0000000000048c02	addq	$0x08,%rsp
0000000000048c06	popq	%rbx
0000000000048c07	popq	%r14
0000000000048c09	popq	%r15
0000000000048c0b	popq	%rbp
0000000000048c0c	jmp	*0x0003b4c6(%rip)
0000000000048c12	addq	$0x08,%rsp
0000000000048c16	popq	%rbx
0000000000048c17	popq	%r14
0000000000048c19	popq	%r15
0000000000048c1b	popq	%rbp
0000000000048c1c	ret
0000000000048c1d	movq	0x0005fffc(%rip),%rdi
0000000000048c24	leaq	0x0005f6b5(%rip),%rsi
0000000000048c2b	call	*0x0005f6af(%rip)
0000000000048c31	movq	0x0005be38(%rip),%rsi
0000000000048c38	movq	%rax,%rdi
0000000000048c3b	call	*0x0003b497(%rip)
0000000000048c41	movq	%rax,%r15
0000000000048c44	movq	0x0005f08d(%rip),%rsi
0000000000048c4b	movq	%r15,%rdi
0000000000048c4e	movq	%r14,%rdx
0000000000048c51	call	*0x0003b481(%rip)
0000000000048c57	movq	0x0005be5a(%rip),%rsi
0000000000048c5e	movq	%rbx,%rdi
0000000000048c61	call	*0x0003b471(%rip)
0000000000048c67	movq	0x0005c162(%rip),%rsi
0000000000048c6e	movq	%rax,%rdi
0000000000048c71	call	*0x0003b461(%rip)
0000000000048c77	movq	0x0005c162(%rip),%rsi
0000000000048c7e	movq	%rax,%rdi
0000000000048c81	movq	%r15,%rdx
0000000000048c84	movq	0x0003b44d(%rip),%rax
0000000000048c8b	addq	$0x08,%rsp
0000000000048c8f	popq	%rbx
0000000000048c90	popq	%r14
0000000000048c92	popq	%r15
0000000000048c94	popq	%rbp
0000000000048c95	jmp	*%rax
-[PBXGDB_BreakpointController enqueueDeleteStopOnCPPCatchSequence]:
0000000000048c97	pushq	%rbp
0000000000048c98	movq	%rsp,%rbp
0000000000048c9b	pushq	%r14
0000000000048c9d	pushq	%rbx
0000000000048c9e	movq	%rdi,%r14
0000000000048ca1	movq	0x0005ff80(%rip),%rdi
0000000000048ca8	leaq	0x0005f631(%rip),%rsi
0000000000048caf	call	*0x0005f62b(%rip)
0000000000048cb5	movq	0x0005bdb4(%rip),%rsi
0000000000048cbc	movq	%rax,%rdi
0000000000048cbf	call	*0x0003b413(%rip)
0000000000048cc5	movq	%rax,%rbx
0000000000048cc8	movq	0x0005bde9(%rip),%rsi
0000000000048ccf	movq	%r14,%rdi
0000000000048cd2	call	*0x0003b400(%rip)
0000000000048cd8	movq	0x0005c0f1(%rip),%rsi
0000000000048cdf	movq	%rax,%rdi
0000000000048ce2	call	*0x0003b3f0(%rip)
0000000000048ce8	movq	0x0005c0f1(%rip),%rsi
0000000000048cef	movq	%rax,%rdi
0000000000048cf2	movq	%rbx,%rdx
0000000000048cf5	movq	0x0003b3dc(%rip),%rax
0000000000048cfc	popq	%rbx
0000000000048cfd	popq	%r14
0000000000048cff	popq	%rbp
0000000000048d00	jmp	*%rax
-[PBXGDB_BreakpointController enqueueStopOnCPPCatchSequence]:
0000000000048d02	pushq	%rbp
0000000000048d03	movq	%rsp,%rbp
0000000000048d06	pushq	%r15
0000000000048d08	pushq	%r14
0000000000048d0a	pushq	%rbx
0000000000048d0b	pushq	%rax
0000000000048d0c	movq	%rdi,%rbx
0000000000048d0f	movq	0x0006683a(%rip),%rax
0000000000048d16	cmpq	$0x00,(%rbx,%rax)
0000000000048d1b	je	0x00048d85
0000000000048d1d	leaq	0x0005f60c(%rip),%rsi
0000000000048d24	movq	%rbx,%rdi
0000000000048d27	call	*0x0005f603(%rip)
0000000000048d2d	movq	0x0006681c(%rip),%rcx
0000000000048d34	movq	(%rbx,%rcx),%rdx
0000000000048d38	movq	0x0005ef89(%rip),%rsi
0000000000048d3f	movq	0x0003b392(%rip),%r15
0000000000048d46	movq	%rax,%rdi
0000000000048d49	call	*%r15
0000000000048d4c	movq	%rax,%r14
0000000000048d4f	movq	0x000667fa(%rip),%rax
0000000000048d56	movq	(%rbx,%rax),%rdx
0000000000048d5a	movq	0x0005ef6f(%rip),%rsi
0000000000048d61	movq	%rbx,%rdi
0000000000048d64	call	*%r15
0000000000048d67	cmpb	$0x01,%al
0000000000048d69	je	0x00048d90
0000000000048d6b	movq	0x0005ef76(%rip),%rsi
0000000000048d72	movq	%rbx,%rdi
0000000000048d75	addq	$0x08,%rsp
0000000000048d79	popq	%rbx
0000000000048d7a	popq	%r14
0000000000048d7c	popq	%r15
0000000000048d7e	popq	%rbp
0000000000048d7f	jmp	*0x0003b353(%rip)
0000000000048d85	addq	$0x08,%rsp
0000000000048d89	popq	%rbx
0000000000048d8a	popq	%r14
0000000000048d8c	popq	%r15
0000000000048d8e	popq	%rbp
0000000000048d8f	ret
0000000000048d90	movq	0x0005fe99(%rip),%rdi
0000000000048d97	leaq	0x0005f542(%rip),%rsi
0000000000048d9e	call	*0x0005f53c(%rip)
0000000000048da4	movq	0x0005bcc5(%rip),%rsi
0000000000048dab	movq	%rax,%rdi
0000000000048dae	call	*0x0003b324(%rip)
0000000000048db4	movq	%rax,%r15
0000000000048db7	movq	0x0005ef1a(%rip),%rsi
0000000000048dbe	movq	%r15,%rdi
0000000000048dc1	movq	%r14,%rdx
0000000000048dc4	call	*0x0003b30e(%rip)
0000000000048dca	movq	0x0005bce7(%rip),%rsi
0000000000048dd1	movq	%rbx,%rdi
0000000000048dd4	call	*0x0003b2fe(%rip)
0000000000048dda	movq	0x0005bfef(%rip),%rsi
0000000000048de1	movq	%rax,%rdi
0000000000048de4	call	*0x0003b2ee(%rip)
0000000000048dea	movq	0x0005bfef(%rip),%rsi
0000000000048df1	movq	%rax,%rdi
0000000000048df4	movq	%r15,%rdx
0000000000048df7	movq	0x0003b2da(%rip),%rax
0000000000048dfe	addq	$0x08,%rsp
0000000000048e02	popq	%rbx
0000000000048e03	popq	%r14
0000000000048e05	popq	%r15
0000000000048e07	popq	%rbp
0000000000048e08	jmp	*%rax
-[PBXGDB_BreakpointController resolvedAllMatchesOfBreakpointInfo:]:
0000000000048e0a	pushq	%rbp
0000000000048e0b	movq	%rsp,%rbp
0000000000048e0e	pushq	%rbx
0000000000048e0f	pushq	%rax
0000000000048e10	movq	%rdi,%rbx
0000000000048e13	movq	0x00066716(%rip),%rax
0000000000048e1a	movq	(%rbx,%rax),%rdi
0000000000048e1e	movq	0x0005c593(%rip),%rsi
0000000000048e25	call	*0x0003b2ad(%rip)
0000000000048e2b	testb	%al,%al
0000000000048e2d	je	0x00048e54
0000000000048e2f	movq	0x00066722(%rip),%rax
0000000000048e36	movq	(%rbx,%rax),%rcx
0000000000048e3a	testq	%rcx,%rcx
0000000000048e3d	je	0x00048e5b
0000000000048e3f	decq	%rcx
0000000000048e42	movq	%rcx,(%rbx,%rax)
0000000000048e46	movq	0x0006670b(%rip),%rax
0000000000048e4d	cmpq	$0x00,(%rbx,%rax)
0000000000048e52	je	0x00048e5b
0000000000048e54	addq	$0x08,%rsp
0000000000048e58	popq	%rbx
0000000000048e59	popq	%rbp
0000000000048e5a	ret
0000000000048e5b	movq	0x0005bc56(%rip),%rsi
0000000000048e62	movq	%rbx,%rdi
0000000000048e65	call	*0x0003b26d(%rip)
0000000000048e6b	movq	0x0005e996(%rip),%rsi
0000000000048e72	movq	%rax,%rdi
0000000000048e75	movq	0x0003b25c(%rip),%rax
0000000000048e7c	addq	$0x08,%rsp
0000000000048e80	popq	%rbx
0000000000048e81	popq	%rbp
0000000000048e82	jmp	*%rax
-[PBXGDB_BreakpointController pendingBreakpointCount]:
0000000000048e84	pushq	%rbp
0000000000048e85	movq	%rsp,%rbp
0000000000048e88	movq	0x000666c9(%rip),%rax
0000000000048e8f	movq	(%rdi,%rax),%rax
0000000000048e93	popq	%rbp
0000000000048e94	ret
-[PBXGDB_BreakpointController rescanBreakpoints]:
0000000000048e95	pushq	%rbp
0000000000048e96	movq	%rsp,%rbp
0000000000048e99	popq	%rbp
0000000000048e9a	ret
-[PBXGDB_BreakpointController resetExceptionBreakpointData]:
0000000000048e9b	pushq	%rbp
0000000000048e9c	movq	%rsp,%rbp
0000000000048e9f	pushq	%rbx
0000000000048ea0	pushq	%rax
0000000000048ea1	movq	%rdi,%rbx
0000000000048ea4	movq	0x000666a5(%rip),%rdx
0000000000048eab	xorl	%edi,%edi
0000000000048ead	movq	%rbx,%rsi
0000000000048eb0	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000048eb5	movq	0x0006668c(%rip),%rdx
0000000000048ebc	xorl	%edi,%edi
0000000000048ebe	movq	%rbx,%rsi
0000000000048ec1	addq	$0x08,%rsp
0000000000048ec5	popq	%rbx
0000000000048ec6	popq	%rbp
0000000000048ec7	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_BreakpointController gdbCommandStringForAction:]:
0000000000048ecc	pushq	%rbp
0000000000048ecd	movq	%rsp,%rbp
0000000000048ed0	pushq	%r15
0000000000048ed2	pushq	%r14
0000000000048ed4	pushq	%r13
0000000000048ed6	pushq	%r12
0000000000048ed8	pushq	%rbx
0000000000048ed9	subq	$0x000000d8,%rsp
0000000000048ee0	movq	%rdx,%rbx
0000000000048ee3	movq	0x0003b1b6(%rip),%rax
0000000000048eea	movq	(%rax),%rax
0000000000048eed	movq	%rax,0xd0(%rbp)
0000000000048ef1	movq	0x0005bd98(%rip),%rsi
0000000000048ef8	movq	0x0005f539(%rip),%rdi
0000000000048eff	movq	0x0003b1d2(%rip),%r14
0000000000048f06	call	*%r14
0000000000048f09	movq	%rax,0xffffff00(%rbp)
0000000000048f10	movq	0x0005ede9(%rip),%rsi
0000000000048f17	movq	%rbx,%rdi
0000000000048f1a	call	*%r14
0000000000048f1d	testq	%rax,%rax
0000000000048f20	jne	0x00048f2b
0000000000048f22	leaq	0x00066a0f(%rip),%rax
0000000000048f29	jmp	0x00048f3b
0000000000048f2b	movq	0x0005edce(%rip),%rsi
0000000000048f32	movq	%rbx,%rdi
0000000000048f35	call	*0x0003b19d(%rip)
0000000000048f3b	movq	0x0005d36e(%rip),%rsi
0000000000048f42	leaq	0x000667cf(%rip),%rdx
0000000000048f49	movq	%rax,%rdi
0000000000048f4c	call	*0x0003b186(%rip)
0000000000048f52	movq	%rax,0xffffff08(%rbp)
0000000000048f59	xorps	%xmm0,%xmm0
0000000000048f5c	movaps	%xmm0,0xc0(%rbp)
0000000000048f60	movaps	%xmm0,0xb0(%rbp)
0000000000048f64	movaps	%xmm0,0xa0(%rbp)
0000000000048f68	movaps	%xmm0,0x90(%rbp)
0000000000048f6c	leaq	0x0005f40d(%rip),%rsi
0000000000048f73	leaq	0x90(%rbp),%rdx
0000000000048f77	leaq	0xffffff10(%rbp),%rcx
0000000000048f7e	movq	%rax,%rdi
0000000000048f81	movl	$0x00000010,%r8d
0000000000048f87	call	*0x0005f3f3(%rip)
0000000000048f8d	movq	%rax,%rbx
0000000000048f90	testq	%rbx,%rbx
0000000000048f93	je	0x0004906b
0000000000048f99	movq	0xa0(%rbp),%rax
0000000000048f9d	movq	(%rax),%r13
0000000000048fa0	movq	0x0003b131(%rip),%r14
0000000000048fa7	xorl	%r12d,%r12d
0000000000048faa	movq	0xa0(%rbp),%rax
0000000000048fae	cmpq	%r13,(%rax)
0000000000048fb1	je	0x00048fbf
0000000000048fb3	movq	0xffffff08(%rbp),%rdi
0000000000048fba	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
0000000000048fbf	movq	0x98(%rbp),%rax
0000000000048fc3	movq	(%rax,%r12,8),%r15
0000000000048fc7	movq	0x0005f60a(%rip),%rdi
0000000000048fce	movq	0x0005c26b(%rip),%rsi
0000000000048fd5	call	*%r14
0000000000048fd8	movq	%r15,%rdi
0000000000048fdb	movq	0x0005ed16(%rip),%rsi
0000000000048fe2	movq	%rax,%rdx
0000000000048fe5	call	*%r14
0000000000048fe8	movq	%rax,%rdi
0000000000048feb	leaq	0x0005f2fe(%rip),%rsi
0000000000048ff2	call	*0x0005f2f8(%rip)
0000000000048ff8	testq	%rax,%rax
0000000000048ffb	je	0x0004902e
0000000000048ffd	movq	%r15,%rdi
0000000000049000	movq	0x0005bf79(%rip),%rsi
0000000000049007	xorl	%edx,%edx
0000000000049009	xorl	%ecx,%ecx
000000000004900b	xorl	%r8d,%r8d
000000000004900e	call	*%r14
0000000000049011	movq	0xffffff00(%rbp),%rdi
0000000000049018	movq	0x0005bc79(%rip),%rsi
000000000004901f	leaq	0x0006d212(%rip),%rdx
0000000000049026	movq	%rax,%rcx
0000000000049029	xorb	%al,%al
000000000004902b	call	*%r14
000000000004902e	incq	%r12
0000000000049031	cmpq	%rbx,%r12
0000000000049034	jb	0x00048faa
000000000004903a	movq	0xffffff08(%rbp),%rdi
0000000000049041	leaq	0x0005f338(%rip),%rsi
0000000000049048	leaq	0x90(%rbp),%rdx
000000000004904c	leaq	0xffffff10(%rbp),%rcx
0000000000049053	movl	$0x00000010,%r8d
0000000000049059	call	*0x0005f321(%rip)
000000000004905f	movq	%rax,%rbx
0000000000049062	testq	%rbx,%rbx
0000000000049065	jne	0x00048fa7
000000000004906b	movq	0x0003b02e(%rip),%rax
0000000000049072	movq	(%rax),%rax
0000000000049075	cmpq	0xd0(%rbp),%rax
0000000000049079	jne	0x00049094
000000000004907b	movq	0xffffff00(%rbp),%rax
0000000000049082	addq	$0x000000d8,%rsp
0000000000049089	popq	%rbx
000000000004908a	popq	%r12
000000000004908c	popq	%r13
000000000004908e	popq	%r14
0000000000049090	popq	%r15
0000000000049092	popq	%rbp
0000000000049093	ret
0000000000049094	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
-[PBXGDB_BreakpointController useDebuggerSideImplementationForCommandAction:breakpoint:]:
0000000000049099	pushq	%rbp
000000000004909a	movq	%rsp,%rbp
000000000004909d	pushq	%r15
000000000004909f	pushq	%r14
00000000000490a1	pushq	%r13
00000000000490a3	pushq	%r12
00000000000490a5	pushq	%rbx
00000000000490a6	subq	$0x000000e8,%rsp
00000000000490ad	movq	%rdx,0xffffff00(%rbp)
00000000000490b4	movq	0x0003afe5(%rip),%rax
00000000000490bb	movq	(%rax),%rax
00000000000490be	movq	%rax,0xd0(%rbp)
00000000000490c2	xorps	%xmm0,%xmm0
00000000000490c5	movaps	%xmm0,0xc0(%rbp)
00000000000490c9	movaps	%xmm0,0xb0(%rbp)
00000000000490cd	movaps	%xmm0,0xa0(%rbp)
00000000000490d1	movaps	%xmm0,0x90(%rbp)
00000000000490d5	movq	0x0005e054(%rip),%rsi
00000000000490dc	movq	%rcx,%rdi
00000000000490df	call	*0x0003aff3(%rip)
00000000000490e5	movq	%rax,0xffffff08(%rbp)
00000000000490ec	leaq	0x0005f28d(%rip),%rsi
00000000000490f3	leaq	0x90(%rbp),%rdx
00000000000490f7	leaq	0xffffff10(%rbp),%rcx
00000000000490fe	movq	%rax,%rdi
0000000000049101	movl	$0x00000010,%r8d
0000000000049107	call	*0x0005f273(%rip)
000000000004910d	movq	%rax,%r12
0000000000049110	movb	$0x01,%bl
0000000000049112	testq	%r12,%r12
0000000000049115	je	0x000491e1
000000000004911b	movq	0xa0(%rbp),%rax
000000000004911f	movq	(%rax),%rax
0000000000049122	movq	%rax,0xfffffef8(%rbp)
0000000000049129	movb	$0x01,%r14b
000000000004912c	xorl	%r15d,%r15d
000000000004912f	movq	0xa0(%rbp),%rax
0000000000049133	movq	0xfffffef8(%rbp),%rcx
000000000004913a	cmpq	%rcx,(%rax)
000000000004913d	je	0x0004914b
000000000004913f	movq	0xffffff08(%rbp),%rdi
0000000000049146	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
000000000004914b	movq	0x98(%rbp),%rax
000000000004914f	movq	(%rax,%r15,8),%r13
0000000000049153	movq	0xffffff00(%rbp),%rdi
000000000004915a	leaq	0x0005f22f(%rip),%rsi
0000000000049161	movq	%r13,%rdx
0000000000049164	call	*0x0005f226(%rip)
000000000004916a	testb	%al,%al
000000000004916c	jne	0x00049206
0000000000049172	movq	0x0005f94f(%rip),%rdi
0000000000049179	leaq	0x0005f1b0(%rip),%rsi
0000000000049180	call	*0x0005f1aa(%rip)
0000000000049186	movq	%r13,%rdi
0000000000049189	leaq	0x0005f1b0(%rip),%rsi
0000000000049190	movq	%rax,%rdx
0000000000049193	call	*0x0005f1a7(%rip)
0000000000049199	xorb	%bl,%bl
000000000004919b	testb	%al,%al
000000000004919d	je	0x000491a2
000000000004919f	movb	%r14b,%bl
00000000000491a2	incq	%r15
00000000000491a5	cmpq	%r12,%r15
00000000000491a8	movb	%bl,%r14b
00000000000491ab	jb	0x0004912f
00000000000491ad	movq	0xffffff08(%rbp),%rdi
00000000000491b4	leaq	0x0005f1c5(%rip),%rsi
00000000000491bb	leaq	0x90(%rbp),%rdx
00000000000491bf	leaq	0xffffff10(%rbp),%rcx
00000000000491c6	movl	$0x00000010,%r8d
00000000000491cc	call	*0x0005f1ae(%rip)
00000000000491d2	movq	%rax,%r12
00000000000491d5	testq	%r12,%r12
00000000000491d8	movb	%bl,%r14b
00000000000491db	jne	0x0004912c
00000000000491e1	movq	0x0003aeb8(%rip),%rax
00000000000491e8	movq	(%rax),%rax
00000000000491eb	cmpq	0xd0(%rbp),%rax
00000000000491ef	jne	0x0004920b
00000000000491f1	movsbl	%bl,%eax
00000000000491f4	addq	$0x000000e8,%rsp
00000000000491fb	popq	%rbx
00000000000491fc	popq	%r12
00000000000491fe	popq	%r13
0000000000049200	popq	%r14
0000000000049202	popq	%r15
0000000000049204	popq	%rbp
0000000000049205	ret
0000000000049206	movb	%r14b,%bl
0000000000049209	jmp	0x000491e1
000000000004920b	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
-[PBXGDB_BreakpointController setDataValue:forWatchpointNumber:]:
0000000000049210	pushq	%rbp
0000000000049211	movq	%rsp,%rbp
0000000000049214	pushq	%r14
0000000000049216	pushq	%rbx
0000000000049217	movq	%rdx,%r14
000000000004921a	movq	%rdi,%rbx
000000000004921d	movq	0x0005eae4(%rip),%rsi
0000000000049224	movq	0x0005f4c5(%rip),%rdi
000000000004922b	movq	%rcx,%rdx
000000000004922e	call	*0x0003aea4(%rip)
0000000000049234	movq	0x000662fd(%rip),%rcx
000000000004923b	movq	(%rbx,%rcx),%rdi
000000000004923f	movq	0x0005baea(%rip),%rsi
0000000000049246	movq	%r14,%rdx
0000000000049249	movq	%rax,%rcx
000000000004924c	movq	0x0003ae85(%rip),%rax
0000000000049253	popq	%rbx
0000000000049254	popq	%r14
0000000000049256	popq	%rbp
0000000000049257	jmp	*%rax
-[PBXGDB_BreakpointController dataValueForWatchpointNumber:]:
0000000000049259	pushq	%rbp
000000000004925a	movq	%rsp,%rbp
000000000004925d	pushq	%rbx
000000000004925e	pushq	%rax
000000000004925f	movq	0x000662d2(%rip),%rax
0000000000049266	movq	(%rdi,%rax),%rbx
000000000004926a	movq	0x0005ea97(%rip),%rsi
0000000000049271	movq	0x0005f478(%rip),%rdi
0000000000049278	call	*0x0003ae5a(%rip)
000000000004927e	leaq	0x0005f0cb(%rip),%rsi
0000000000049285	movq	0x0005f0c4(%rip),%rcx
000000000004928c	movq	%rbx,%rdi
000000000004928f	movq	%rax,%rdx
0000000000049292	addq	$0x08,%rsp
0000000000049296	popq	%rbx
0000000000049297	popq	%rbp
0000000000049298	jmp	*%rcx
-[PBXGDB_BreakpointController watchpointNumberForDataValue:]:
000000000004929a	pushq	%rbp
000000000004929b	movq	%rsp,%rbp
000000000004929e	pushq	%rbx
000000000004929f	pushq	%rax
00000000000492a0	movq	0x00066291(%rip),%rax
00000000000492a7	movq	(%rdi,%rax),%rdi
00000000000492ab	movq	0x0005ea5e(%rip),%rsi
00000000000492b2	call	*0x0003ae20(%rip)
00000000000492b8	movq	%rax,%rbx
00000000000492bb	leaq	0x0005f04e(%rip),%rsi
00000000000492c2	movq	%rbx,%rdi
00000000000492c5	call	*0x0005f045(%rip)
00000000000492cb	cmpq	$0x01,%rax
00000000000492cf	je	0x000492da
00000000000492d1	xorl	%eax,%eax
00000000000492d3	addq	$0x08,%rsp
00000000000492d7	popq	%rbx
00000000000492d8	popq	%rbp
00000000000492d9	ret
00000000000492da	leaq	0x0005f03f(%rip),%rsi
00000000000492e1	movq	%rbx,%rdi
00000000000492e4	xorl	%edx,%edx
00000000000492e6	call	*0x0005f034(%rip)
00000000000492ec	movq	0x0005bfed(%rip),%rsi
00000000000492f3	movq	%rax,%rdi
00000000000492f6	addq	$0x08,%rsp
00000000000492fa	popq	%rbx
00000000000492fb	popq	%rbp
00000000000492fc	jmp	*0x0003add6(%rip)
-[PBXGDB_BreakpointController _handleDebuggerCommandChanged:]:
0000000000049302	pushq	%rbp
0000000000049303	movq	%rsp,%rbp
0000000000049306	pushq	%r14
0000000000049308	pushq	%rbx
0000000000049309	movq	%rdi,%rbx
000000000004930c	movq	0x0006622d(%rip),%rax
0000000000049313	movq	(%rbx,%rax),%rdi
0000000000049317	leaq	0x0005f032(%rip),%rsi
000000000004931e	call	*0x0005f02c(%rip)
0000000000049324	movq	%rax,%r14
0000000000049327	movq	0x0005d1b2(%rip),%rsi
000000000004932e	movq	%rbx,%rdi
0000000000049331	movq	%r14,%rdx
0000000000049334	call	*0x0003ad9e(%rip)
000000000004933a	movq	0x0005cec7(%rip),%rsi
0000000000049341	movq	%rax,%rdi
0000000000049344	call	*0x0003ad8e(%rip)
000000000004934a	movq	0x0005e9df(%rip),%rsi
0000000000049351	movq	%rbx,%rdi
0000000000049354	movq	%r14,%rdx
0000000000049357	movq	%rax,%rcx
000000000004935a	movq	0x0003ad77(%rip),%rax
0000000000049361	popq	%rbx
0000000000049362	popq	%r14
0000000000049364	popq	%rbp
0000000000049365	jmp	*%rax
-[PBXGDB_BaseBreakpointSequence breakpointController]:
0000000000049367	pushq	%rbp
0000000000049368	movq	%rsp,%rbp
000000000004936b	movq	0x000661ee(%rip),%rax
0000000000049372	movq	(%rdi,%rax),%rax
0000000000049376	popq	%rbp
0000000000049377	ret
+[PBXGDB_BaseBreakpointSequence _symbolNameFromGDBAtParameter:]:
0000000000049378	pushq	%rbp
0000000000049379	movq	%rsp,%rbp
000000000004937c	pushq	%rbx
000000000004937d	pushq	%rax
000000000004937e	movq	%rdx,%rbx
0000000000049381	movq	0x0006e378(%rip),%rdi
0000000000049388	testq	%rdi,%rdi
000000000004938b	jne	0x000493d3
000000000004938d	movq	0x0005f8a4(%rip),%rdi
0000000000049394	leaq	0x0005ef45(%rip),%rsi
000000000004939b	call	*0x0005ef3f(%rip)
00000000000493a1	movq	0x0005e990(%rip),%rsi
00000000000493a8	leaq	0x0006cf09(%rip),%rdx
00000000000493af	movq	%rax,%rdi
00000000000493b2	xorl	%ecx,%ecx
00000000000493b4	xorl	%r8d,%r8d
00000000000493b7	call	*0x0003ad1b(%rip)
00000000000493bd	leaq	0x0006e33c(%rip),%rsi
00000000000493c4	movq	%rax,%rdi
00000000000493c7	callq	0x0004e602	; symbol stub for: _objc_assign_global
00000000000493cc	movq	0x0006e32d(%rip),%rdi
00000000000493d3	movq	0x0005e966(%rip),%rsi
00000000000493da	movq	%rbx,%rdx
00000000000493dd	xorl	%ecx,%ecx
00000000000493df	call	*0x0003acf3(%rip)
00000000000493e5	movq	0x0005e95c(%rip),%rsi
00000000000493ec	movq	%rax,%rdi
00000000000493ef	movl	$0x00000002,%edx
00000000000493f4	movq	0x0003acdd(%rip),%rax
00000000000493fb	addq	$0x08,%rsp
00000000000493ff	popq	%rbx
0000000000049400	popq	%rbp
0000000000049401	jmp	*%rax
-[PBXGDB_BaseBreakpointSequence breakpoint]:
0000000000049403	pushq	%rbp
0000000000049404	movq	%rsp,%rbp
0000000000049407	movq	0x00066162(%rip),%rax
000000000004940e	movq	(%rdi,%rax),%rax
0000000000049412	popq	%rbp
0000000000049413	ret
-[PBXGDB_BaseBreakpointSequence setBreakpoint:]:
0000000000049414	pushq	%rbp
0000000000049415	movq	%rsp,%rbp
0000000000049418	movq	%rdx,%rax
000000000004941b	movq	%rdi,%rcx
000000000004941e	movq	0x0006614b(%rip),%rdx
0000000000049425	movq	%rax,%rdi
0000000000049428	movq	%rcx,%rsi
000000000004942b	popq	%rbp
000000000004942c	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_NewBreakpointSequence handleErrorForMICommand:]:
0000000000049431	pushq	%rbp
0000000000049432	movq	%rsp,%rbp
0000000000049435	pushq	%r15
0000000000049437	pushq	%r14
0000000000049439	pushq	%r13
000000000004943b	pushq	%r12
000000000004943d	pushq	%rbx
000000000004943e	subq	$0x18,%rsp
0000000000049442	movq	%rdx,%rbx
0000000000049445	movq	%rbx,0xc0(%rbp)
0000000000049449	movq	%rdi,0xc8(%rbp)
000000000004944d	movq	0x0006610c(%rip),%rax
0000000000049454	movq	(%rdi,%rax),%rdi
0000000000049458	movq	0x0005b659(%rip),%rsi
000000000004945f	movq	0x0003ac72(%rip),%r14
0000000000049466	call	*%r14
0000000000049469	movq	%rax,0xd0(%rbp)
000000000004946d	movq	0x0005cdcc(%rip),%rsi
0000000000049474	movq	%rbx,%rdi
0000000000049477	call	*%r14
000000000004947a	leaq	0x000672f7(%rip),%rdx
0000000000049481	movq	0x0005ce28(%rip),%rsi
0000000000049488	movq	%rax,%rdi
000000000004948b	call	*%r14
000000000004948e	movq	%rax,%r13
0000000000049491	leaq	0x0005ee78(%rip),%rsi
0000000000049498	movq	%r13,%rdi
000000000004949b	call	*0x0005ee6f(%rip)
00000000000494a1	movq	%rax,%r14
00000000000494a4	xorl	%ebx,%ebx
00000000000494a6	leaq	0x0005eeb3(%rip),%r12
00000000000494ad	leaq	0x00066484(%rip),%r15
00000000000494b4	testq	%r14,%r14
00000000000494b7	jle	0x000494e5
00000000000494b9	decq	%r14
00000000000494bc	movq	%r13,%rdi
00000000000494bf	leaq	0x0005ee5a(%rip),%rsi
00000000000494c6	movq	%r14,%rdx
00000000000494c9	call	*0x0005ee51(%rip)
00000000000494cf	movq	%rax,%rbx
00000000000494d2	movq	%rbx,%rdi
00000000000494d5	movq	%r12,%rsi
00000000000494d8	movq	%r15,%rdx
00000000000494db	call	*0x0005ee7f(%rip)
00000000000494e1	testb	%al,%al
00000000000494e3	jne	0x000494b4
00000000000494e5	movq	0x0005cdc4(%rip),%rsi
00000000000494ec	leaq	0x0006cde5(%rip),%rdx
00000000000494f3	movq	%rbx,%rdi
00000000000494f6	call	*0x0003abdc(%rip)
00000000000494fc	movq	%rax,%r14
00000000000494ff	leaq	0x0005ee0a(%rip),%rsi
0000000000049506	movq	%r14,%rdi
0000000000049509	call	*0x0005ee01(%rip)
000000000004950f	testq	%rax,%rax
0000000000049512	je	0x0004952e
0000000000049514	leaq	0x0005ee05(%rip),%rsi
000000000004951b	movq	%r14,%rdi
000000000004951e	xorl	%edx,%edx
0000000000049520	call	*0x0005edfa(%rip)
0000000000049526	movq	%rax,%r13
0000000000049529	testq	%r13,%r13
000000000004952c	jne	0x00049575
000000000004952e	movq	0x0005cd7b(%rip),%rsi
0000000000049535	leaq	0x0006723c(%rip),%rdx
000000000004953c	movq	%rbx,%rdi
000000000004953f	call	*0x0003ab93(%rip)
0000000000049545	movq	%rax,%r14
0000000000049548	leaq	0x0005edc1(%rip),%rsi
000000000004954f	movq	%r14,%rdi
0000000000049552	call	*0x0005edb8(%rip)
0000000000049558	xorl	%r13d,%r13d
000000000004955b	testq	%rax,%rax
000000000004955e	je	0x00049575
0000000000049560	leaq	0x0005edb9(%rip),%rsi
0000000000049567	movq	%r14,%rdi
000000000004956a	xorl	%edx,%edx
000000000004956c	call	*0x0005edae(%rip)
0000000000049572	movq	%rax,%r13
0000000000049575	movq	0x0005eed4(%rip),%r14
000000000004957c	movq	0x0005f0d5(%rip),%r15
0000000000049583	movq	0x0005f41e(%rip),%rdi
000000000004958a	leaq	0x0005ed9f(%rip),%rsi
0000000000049591	call	*0x0005ed99(%rip)
0000000000049597	movq	0x0005bf22(%rip),%rsi
000000000004959e	movq	0x0003ab33(%rip),%r12
00000000000495a5	movq	%r15,%rdi
00000000000495a8	movq	%rax,%rdx
00000000000495ab	call	*%r12
00000000000495ae	leaq	0x0006cd43(%rip),%rdx
00000000000495b5	leaq	0x0006637c(%rip),%rcx
00000000000495bc	leaq	0x0006cd55(%rip),%r8
00000000000495c3	movq	0x0005de46(%rip),%rsi
00000000000495ca	movq	%rax,%rdi
00000000000495cd	call	*%r12
00000000000495d0	movq	0x0005b5a1(%rip),%rsi
00000000000495d7	movq	%r14,%rdi
00000000000495da	movq	%rax,%rdx
00000000000495dd	movq	%rbx,%rcx
00000000000495e0	movq	%r13,%r8
00000000000495e3	xorb	%al,%al
00000000000495e5	call	*%r12
00000000000495e8	movq	%rax,%r14
00000000000495eb	movq	0x0005c626(%rip),%rsi
00000000000495f2	movq	0xc0(%rbp),%rdi
00000000000495f6	call	*%r12
00000000000495f9	testq	%rax,%rax
00000000000495fc	jne	0x00049604
00000000000495fe	movq	0xd0(%rbp),%rbx
0000000000049602	jmp	0x0004961b
0000000000049604	movq	0x0005c8e5(%rip),%rsi
000000000004960b	movq	0xd0(%rbp),%rbx
000000000004960f	movq	%rbx,%rdi
0000000000049612	movq	%rax,%rdx
0000000000049615	call	*0x0003aabd(%rip)
000000000004961b	movq	0x0005c8ce(%rip),%rsi
0000000000049622	movq	0x0003aaaf(%rip),%r15
0000000000049629	movq	%rbx,%rdi
000000000004962c	movq	%r14,%rdx
000000000004962f	call	*%r15
0000000000049632	movq	0x0005b4ff(%rip),%rsi
0000000000049639	movq	0xc8(%rbp),%rdi
000000000004963d	call	*%r15
0000000000049640	movl	$0x00000001,%eax
0000000000049645	addq	$0x18,%rsp
0000000000049649	popq	%rbx
000000000004964a	popq	%r12
000000000004964c	popq	%r13
000000000004964e	popq	%r14
0000000000049650	popq	%r15
0000000000049652	popq	%rbp
0000000000049653	ret
+[PBXGDB_NewBreakpointSequence createBreakpointLoationForBreakpoint:fromListItem:inDebugSession:]:
0000000000049654	pushq	%rbp
0000000000049655	movq	%rsp,%rbp
0000000000049658	pushq	%r15
000000000004965a	pushq	%r14
000000000004965c	pushq	%r13
000000000004965e	pushq	%r12
0000000000049660	pushq	%rbx
0000000000049661	subq	$0x38,%rsp
0000000000049665	movq	%r8,0xc0(%rbp)
0000000000049669	movq	%rcx,%rbx
000000000004966c	movq	%rdx,0xb8(%rbp)
0000000000049670	movq	%rdi,0xd0(%rbp)
0000000000049674	movq	%rsi,0xc8(%rbp)
0000000000049678	movq	0x0005cb61(%rip),%rsi
000000000004967f	movq	%rbx,%rdi
0000000000049682	call	*0x0003aa50(%rip)
0000000000049688	leaq	0x0005ecd1(%rip),%rsi
000000000004968f	leaq	0x00066622(%rip),%rdx
0000000000049696	movq	%rax,%rdi
0000000000049699	call	*0x0005ecc1(%rip)
000000000004969f	testb	%al,%al
00000000000496a1	jne	0x000496d8
00000000000496a3	leaq	0x0001b381(%rip),%rax
00000000000496aa	movq	%rax,(%rsp)
00000000000496ae	leaq	0xd0(%rbp),%rdi
00000000000496b2	leaq	0xc8(%rbp),%rsi
00000000000496b6	leaq	0x0001b30c(%rip),%rdx
00000000000496bd	leaq	0x0001b246(%rip),%rcx
00000000000496c4	leaq	0x0006616d(%rip),%r9
00000000000496cb	movl	$0x0000009f,%r8d
00000000000496d1	xorb	%al,%al
00000000000496d3	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
00000000000496d8	movq	0x0005b401(%rip),%rsi
00000000000496df	movq	0x0003a9f2(%rip),%r12
00000000000496e6	movq	%rbx,%rdi
00000000000496e9	call	*%r12
00000000000496ec	movq	%rax,%rbx
00000000000496ef	movq	0x0005b3e2(%rip),%rsi
00000000000496f6	leaq	0x00066afb(%rip),%rdx
00000000000496fd	movq	%rbx,%rdi
0000000000049700	call	*%r12
0000000000049703	movq	0x0005b3fe(%rip),%rsi
000000000004970a	movq	%rax,%rdi
000000000004970d	call	*%r12
0000000000049710	movq	%rax,%r14
0000000000049713	leaq	0x00066a3e(%rip),%rdx
000000000004971a	movq	0x0005b3b7(%rip),%rsi
0000000000049721	movq	%rbx,%rdi
0000000000049724	call	*%r12
0000000000049727	movq	0x0005b3da(%rip),%rsi
000000000004972e	movq	%rax,%rdi
0000000000049731	call	*%r12
0000000000049734	movq	%rax,%r15
0000000000049737	leaq	0x0006605a(%rip),%rdx
000000000004973e	movq	0x0005b393(%rip),%rsi
0000000000049745	movq	%rbx,%rdi
0000000000049748	call	*%r12
000000000004974b	movq	0x0005b3b6(%rip),%rsi
0000000000049752	movq	%rax,%rdi
0000000000049755	call	*%r12
0000000000049758	movq	%rax,0xa8(%rbp)
000000000004975c	leaq	0x00066855(%rip),%rdx
0000000000049763	movq	0x0005b36e(%rip),%rsi
000000000004976a	movq	%rbx,%rdi
000000000004976d	call	*%r12
0000000000049770	movq	0x0005b391(%rip),%rsi
0000000000049777	movq	%rax,%rdi
000000000004977a	call	*%r12
000000000004977d	movq	%rax,0xb0(%rbp)
0000000000049781	testq	%r15,%r15
0000000000049784	movq	0x0005b34d(%rip),%rsi
000000000004978b	je	0x00049839
0000000000049791	leaq	0x000666c0(%rip),%rdx
0000000000049798	movq	0x0003a939(%rip),%r13
000000000004979f	movq	%rbx,%rdi
00000000000497a2	call	*%r13
00000000000497a5	movq	0x0005b35c(%rip),%rsi
00000000000497ac	movq	%rax,%rdi
00000000000497af	call	*%r13
00000000000497b2	movq	%rax,%r12
00000000000497b5	movq	0x0005bb24(%rip),%rsi
00000000000497bc	movq	%r14,%rdi
00000000000497bf	call	*%r13
00000000000497c2	movq	%rax,%r14
00000000000497c5	movq	0x0005d044(%rip),%rsi
00000000000497cc	movq	0x0005f1c5(%rip),%rdi
00000000000497d3	movq	%r15,%rdx
00000000000497d6	call	*%r13
00000000000497d9	movq	%rax,%r15
00000000000497dc	movq	0x0005ef0d(%rip),%rbx
00000000000497e3	movq	0x0005d02e(%rip),%rsi
00000000000497ea	movq	0x0005f1af(%rip),%rdi
00000000000497f1	call	*%r13
00000000000497f4	movq	0x0005d025(%rip),%rsi
00000000000497fb	movq	%rbx,%rdi
00000000000497fe	call	*%r13
0000000000049801	movq	%rax,%rbx
0000000000049804	leaq	0x0005ead5(%rip),%rsi
000000000004980b	movq	0x0005f17e(%rip),%rdi
0000000000049812	call	*0x0005eac8(%rip)
0000000000049818	movq	0x0005cfe1(%rip),%rsi
000000000004981f	movq	%rax,%rdi
0000000000049822	movq	%r15,%rdx
0000000000049825	movq	%rbx,%rcx
0000000000049828	movq	%r14,%r8
000000000004982b	movl	$0x00000001,%r9d
0000000000049831	call	*%r13
0000000000049834	movq	%rax,%r14
0000000000049837	jmp	0x00049874
0000000000049839	leaq	0x00069e18(%rip),%rdx
0000000000049840	movq	0x0003a891(%rip),%r14
0000000000049847	movq	%rbx,%rdi
000000000004984a	call	*%r14
000000000004984d	movq	0x0005b2b4(%rip),%rsi
0000000000049854	movq	%rax,%rdi
0000000000049857	call	*%r14
000000000004985a	movq	0x0005e4f7(%rip),%rsi
0000000000049861	movq	0x0005f3d8(%rip),%rdi
0000000000049868	movq	%rax,%rdx
000000000004986b	call	*%r14
000000000004986e	movq	%rax,%r12
0000000000049871	xorl	%r14d,%r14d
0000000000049874	movq	0x0005b2b5(%rip),%rsi
000000000004987b	movq	0x0003a856(%rip),%r13
0000000000049882	movq	0xa8(%rbp),%rdi
0000000000049886	call	*%r13
0000000000049889	movq	%rax,%rdi
000000000004988c	xorl	%esi,%esi
000000000004988e	xorl	%edx,%edx
0000000000049890	callq	0x0004e71c	; symbol stub for: _strtoull
0000000000049895	movq	%rax,%rbx
0000000000049898	movq	0x0005ba41(%rip),%rsi
000000000004989f	movq	0xb0(%rbp),%rdi
00000000000498a3	call	*%r13
00000000000498a6	movq	%rax,%r15
00000000000498a9	leaq	0x0005ea30(%rip),%rsi
00000000000498b0	movq	0x0005f349(%rip),%rdi
00000000000498b7	call	*0x0005ea23(%rip)
00000000000498bd	movq	0x0005e49c(%rip),%rsi
00000000000498c4	movq	%rax,%rdi
00000000000498c7	movq	0xb8(%rbp),%rdx
00000000000498cb	movq	%r14,%rcx
00000000000498ce	movq	%r12,%r8
00000000000498d1	movq	%rbx,%r9
00000000000498d4	call	*%r13
00000000000498d7	movq	%rax,%rbx
00000000000498da	movq	0x0005cc1f(%rip),%rsi
00000000000498e1	movq	0xc0(%rbp),%rdi
00000000000498e5	movq	%r15,%rdx
00000000000498e8	movq	%rbx,%rcx
00000000000498eb	call	*%r13
00000000000498ee	movq	%rbx,%rax
00000000000498f1	addq	$0x38,%rsp
00000000000498f5	popq	%rbx
00000000000498f6	popq	%r12
00000000000498f8	popq	%r13
00000000000498fa	popq	%r14
00000000000498fc	popq	%r15
00000000000498fe	popq	%rbp
00000000000498ff	ret
-[PBXGDB_SetEnabledBreakpointSequence _breakpointWasEnabled:]:
0000000000049900	pushq	%rbp
0000000000049901	movq	%rsp,%rbp
0000000000049904	pushq	%r15
0000000000049906	pushq	%r14
0000000000049908	pushq	%r12
000000000004990a	pushq	%rbx
000000000004990b	movq	%rdx,%r14
000000000004990e	movq	%rdi,%rbx
0000000000049911	movq	0x0005b1b8(%rip),%rsi
0000000000049918	movq	0x0003a7b9(%rip),%r12
000000000004991f	movq	%r14,%rdi
0000000000049922	call	*%r12
0000000000049925	movq	0x0005b1ac(%rip),%rsi
000000000004992c	leaq	0x00069d45(%rip),%rdx
0000000000049933	movq	%rax,%rdi
0000000000049936	call	*%r12
0000000000049939	movq	0x0005b1c8(%rip),%rsi
0000000000049940	movq	%rax,%rdi
0000000000049943	call	*%r12
0000000000049946	movq	0x0005ba83(%rip),%rsi
000000000004994d	movq	%rax,%rdi
0000000000049950	call	*%r12
0000000000049953	movb	%al,%r15b
0000000000049956	movq	0x0005e22b(%rip),%rsi
000000000004995d	movq	%rbx,%rdi
0000000000049960	call	*%r12
0000000000049963	testq	%rax,%rax
0000000000049966	je	0x00049a01
000000000004996c	testb	%r15b,%r15b
000000000004996f	je	0x00049997
0000000000049971	movq	0x0005e210(%rip),%rsi
0000000000049978	movq	0x0003a759(%rip),%r15
000000000004997f	movq	%rbx,%rdi
0000000000049982	call	*%r15
0000000000049985	movq	0x0005ca6c(%rip),%rsi
000000000004998c	movq	%rax,%rdi
000000000004998f	movl	$0x00000001,%edx
0000000000049994	call	*%r15
0000000000049997	movq	0x0005f2ca(%rip),%rdi
000000000004999e	leaq	0x0005e98b(%rip),%rsi
00000000000499a5	call	*0x0005e985(%rip)
00000000000499ab	leaq	0x0005e98e(%rip),%rsi
00000000000499b2	movq	%r14,%rdi
00000000000499b5	movq	%rax,%rdx
00000000000499b8	call	*0x0005e982(%rip)
00000000000499be	testb	%al,%al
00000000000499c0	je	0x00049a01
00000000000499c2	movq	0x0005b327(%rip),%rsi
00000000000499c9	movq	0x0003a708(%rip),%r14
00000000000499d0	movq	%rbx,%rdi
00000000000499d3	call	*%r14
00000000000499d6	movq	0x0005b5db(%rip),%rsi
00000000000499dd	movq	%rax,%rdi
00000000000499e0	call	*%r14
00000000000499e3	testb	%al,%al
00000000000499e5	jne	0x00049a01
00000000000499e7	movq	0x00065b72(%rip),%rax
00000000000499ee	movq	(%rbx,%rax),%rdi
00000000000499f2	movq	0x0005b79f(%rip),%rsi
00000000000499f9	xorl	%edx,%edx
00000000000499fb	call	*0x0003a6d7(%rip)
0000000000049a01	movq	0x00065b70(%rip),%rcx
0000000000049a08	movq	(%rbx,%rcx),%rax
0000000000049a0c	decq	%rax
0000000000049a0f	movq	%rax,(%rbx,%rcx)
0000000000049a13	testq	%rax,%rax
0000000000049a16	jle	0x00049a21
0000000000049a18	popq	%rbx
0000000000049a19	popq	%r12
0000000000049a1b	popq	%r14
0000000000049a1d	popq	%r15
0000000000049a1f	popq	%rbp
0000000000049a20	ret
0000000000049a21	movq	0x0005b110(%rip),%rsi
0000000000049a28	movq	%rbx,%rdi
0000000000049a2b	popq	%rbx
0000000000049a2c	popq	%r12
0000000000049a2e	popq	%r14
0000000000049a30	popq	%r15
0000000000049a32	popq	%rbp
0000000000049a33	jmp	*0x0003a69f(%rip)
-[PBXGDB_SetEnabledBreakpointSequence execute]:
0000000000049a39	pushq	%rbp
0000000000049a3a	movq	%rsp,%rbp
0000000000049a3d	pushq	%r15
0000000000049a3f	pushq	%r14
0000000000049a41	pushq	%r13
0000000000049a43	pushq	%r12
0000000000049a45	pushq	%rbx
0000000000049a46	subq	$0x00000108,%rsp
0000000000049a4d	movq	%rdi,%rbx
0000000000049a50	movq	0x0003a649(%rip),%rax
0000000000049a57	movq	(%rax),%rax
0000000000049a5a	movq	%rax,0xd0(%rbp)
0000000000049a5e	movq	%rbx,0xc8(%rbp)
0000000000049a62	movq	%rsi,0xc0(%rbp)
0000000000049a66	movq	0x0005e11b(%rip),%rsi
0000000000049a6d	call	*0x0003a665(%rip)
0000000000049a73	testq	%rax,%rax
0000000000049a76	jne	0x00049ac9
0000000000049a78	leaq	0x0001b28a(%rip),%rax
0000000000049a7f	leaq	0x00065db2(%rip),%rcx
0000000000049a86	leaq	0x0001b28e(%rip),%rdx
0000000000049a8d	movq	%rdx,0x10(%rsp)
0000000000049a92	movq	%rcx,0x08(%rsp)
0000000000049a97	movq	%rax,(%rsp)
0000000000049a9b	leaq	0xc8(%rbp),%rdi
0000000000049a9f	leaq	0xc0(%rbp),%rsi
0000000000049aa3	leaq	0x0001b230(%rip),%rdx
0000000000049aaa	leaq	0x0001ae59(%rip),%rcx
0000000000049ab1	leaq	0x0006a620(%rip),%r9
0000000000049ab8	movl	$0x000001f0,%r8d
0000000000049abe	xorb	%al,%al
0000000000049ac0	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
0000000000049ac5	movq	0xc8(%rbp),%rbx
0000000000049ac9	movq	0x00065aa8(%rip),%rax
0000000000049ad0	movq	$0x00000000,(%rbx,%rax)
0000000000049ad8	movq	0x0005e0a9(%rip),%rsi
0000000000049adf	movq	0xc8(%rbp),%rdi
0000000000049ae3	movq	0x0003a5ee(%rip),%r13
0000000000049aea	call	*%r13
0000000000049aed	movq	%rax,%rbx
0000000000049af0	movq	0x0005f109(%rip),%rdi
0000000000049af7	leaq	0x0005e832(%rip),%r15
0000000000049afe	movq	%r15,%rsi
0000000000049b01	call	*0x0005e829(%rip)
0000000000049b07	leaq	0x0005e832(%rip),%r14
0000000000049b0e	movq	%rbx,%rdi
0000000000049b11	movq	%r14,%rsi
0000000000049b14	movq	%rax,%rdx
0000000000049b17	call	*0x0005e823(%rip)
0000000000049b1d	movb	%al,%r12b
0000000000049b20	movq	0x0005e061(%rip),%rsi
0000000000049b27	movq	0xc8(%rbp),%rdi
0000000000049b2b	call	*%r13
0000000000049b2e	movq	%rax,%rbx
0000000000049b31	movq	0x0005edf0(%rip),%rdi
0000000000049b38	movq	%r15,%rsi
0000000000049b3b	call	*0x0005e7ef(%rip)
0000000000049b41	movq	%rbx,%rdi
0000000000049b44	movq	%r14,%rsi
0000000000049b47	movq	%rax,%rdx
0000000000049b4a	call	*0x0005e7f0(%rip)
0000000000049b50	movb	%al,%bl
0000000000049b52	movb	%bl,0xfffffef7(%rbp)
0000000000049b58	movq	0x0005e029(%rip),%rsi
0000000000049b5f	movq	0xc8(%rbp),%rdi
0000000000049b63	call	*%r13
0000000000049b66	movq	0x0005dcb3(%rip),%rsi
0000000000049b6d	movq	%rax,%rdi
0000000000049b70	call	*%r13
0000000000049b73	movb	%al,0xfffffef6(%rbp)
0000000000049b79	orb	%bl,%r12b
0000000000049b7c	je	0x00049bac
0000000000049b7e	movq	0x0005eadb(%rip),%rbx
0000000000049b85	movq	0x0005dffc(%rip),%rsi
0000000000049b8c	movq	0xc8(%rbp),%rdi
0000000000049b90	movq	0x0003a541(%rip),%r14
0000000000049b97	call	*%r14
0000000000049b9a	movq	0x0005b95f(%rip),%rsi
0000000000049ba1	movq	%rbx,%rdi
0000000000049ba4	movq	%rax,%rdx
0000000000049ba7	call	*%r14
0000000000049baa	jmp	0x00049bcc
0000000000049bac	movq	0x0005dfd5(%rip),%rsi
0000000000049bb3	movq	0xc8(%rbp),%rdi
0000000000049bb7	movq	0x0003a51a(%rip),%rbx
0000000000049bbe	call	*%rbx
0000000000049bc0	movq	0x0005cbf1(%rip),%rsi
0000000000049bc7	movq	%rax,%rdi
0000000000049bca	call	*%rbx
0000000000049bcc	movq	%rax,%rbx
0000000000049bcf	xorps	%xmm0,%xmm0
0000000000049bd2	movaps	%xmm0,0xb0(%rbp)
0000000000049bd6	movaps	%xmm0,0xa0(%rbp)
0000000000049bda	movaps	%xmm0,0x90(%rbp)
0000000000049bde	movaps	%xmm0,0x80(%rbp)
0000000000049be2	leaq	0x0005e797(%rip),%rsi
0000000000049be9	leaq	0x80(%rbp),%rdx
0000000000049bed	leaq	0xffffff00(%rbp),%rcx
0000000000049bf4	movq	%rbx,%rdi
0000000000049bf7	movl	$0x00000010,%r8d
0000000000049bfd	call	*0x0005e77d(%rip)
0000000000049c03	movq	%rax,0xfffffef8(%rbp)
0000000000049c0a	testq	%rax,%rax
0000000000049c0d	je	0x00049d71
0000000000049c13	movq	0x90(%rbp),%rax
0000000000049c17	movq	(%rax),%rax
0000000000049c1a	movq	%rax,0xfffffee8(%rbp)
0000000000049c21	movq	0x0003a4b0(%rip),%r15
0000000000049c28	xorl	%r12d,%r12d
0000000000049c2b	movq	0x90(%rbp),%rax
0000000000049c2f	movq	0xfffffee8(%rbp),%rcx
0000000000049c36	cmpq	%rcx,(%rax)
0000000000049c39	je	0x00049c43
0000000000049c3b	movq	%rbx,%rdi
0000000000049c3e	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
0000000000049c43	movq	%rbx,%r13
0000000000049c46	movq	0x88(%rbp),%rax
0000000000049c4a	movq	(%rax,%r12,8),%rbx
0000000000049c4e	movq	0xc8(%rbp),%rdi
0000000000049c52	movq	0x0005b097(%rip),%rsi
0000000000049c59	call	*0x0003a479(%rip)
0000000000049c5f	movq	%rax,%rdi
0000000000049c62	cmpb	$0x00,0xfffffef7(%rbp)
0000000000049c69	je	0x00049c74
0000000000049c6b	movq	0x0005e166(%rip),%rsi
0000000000049c72	jmp	0x00049c7b
0000000000049c74	movq	0x0005cb45(%rip),%rsi
0000000000049c7b	movq	%rbx,%rdx
0000000000049c7e	call	*0x0003a454(%rip)
0000000000049c84	movq	%rax,%r14
0000000000049c87	testq	%r14,%r14
0000000000049c8a	je	0x00049d2d
0000000000049c90	cmpb	$0x00,0xfffffef6(%rbp)
0000000000049c97	je	0x00049ca2
0000000000049c99	movq	0x0005efc8(%rip),%rdi
0000000000049ca0	jmp	0x00049ca9
0000000000049ca2	movq	0x0005efc7(%rip),%rdi
0000000000049ca9	movq	0x0005add0(%rip),%rsi
0000000000049cb0	call	*0x0003a422(%rip)
0000000000049cb6	movq	%rax,%rbx
0000000000049cb9	movq	%rbx,%rdi
0000000000049cbc	movq	0x0005df3d(%rip),%rsi
0000000000049cc3	movq	%r14,%rdx
0000000000049cc6	call	*%r15
0000000000049cc9	movq	0xc8(%rbp),%rdx
0000000000049ccd	movq	%rbx,%rdi
0000000000049cd0	movq	0x0005adb1(%rip),%rsi
0000000000049cd7	call	*%r15
0000000000049cda	movq	%rbx,%rdi
0000000000049cdd	movq	0x0005adb4(%rip),%rsi
0000000000049ce4	movq	0x0005e0f5(%rip),%rdx
0000000000049ceb	call	*%r15
0000000000049cee	movq	0xc8(%rbp),%rdi
0000000000049cf2	movq	0x0005adbf(%rip),%rsi
0000000000049cf9	call	*%r15
0000000000049cfc	movq	%rax,%rdi
0000000000049cff	movq	0x0005adba(%rip),%rsi
0000000000049d06	call	*%r15
0000000000049d09	movq	%rax,%rdi
0000000000049d0c	movq	0x0005c44d(%rip),%rsi
0000000000049d13	movq	%rbx,%rdx
0000000000049d16	movl	$0x00000001,%ecx
0000000000049d1b	call	*%r15
0000000000049d1e	movq	0xc8(%rbp),%rax
0000000000049d22	movq	0x0006584f(%rip),%rcx
0000000000049d29	incq	(%rax,%rcx)
0000000000049d2d	incq	%r12
0000000000049d30	cmpq	0xfffffef8(%rbp),%r12
0000000000049d37	movq	%r13,%rbx
0000000000049d3a	jb	0x00049c2b
0000000000049d40	movq	%rbx,%rdi
0000000000049d43	leaq	0x0005e636(%rip),%rsi
0000000000049d4a	leaq	0x80(%rbp),%rdx
0000000000049d4e	leaq	0xffffff00(%rbp),%rcx
0000000000049d55	movl	$0x00000010,%r8d
0000000000049d5b	call	*0x0005e61f(%rip)
0000000000049d61	movq	%rax,0xfffffef8(%rbp)
0000000000049d68	testq	%rax,%rax
0000000000049d6b	jne	0x00049c28
0000000000049d71	movq	0xc8(%rbp),%rdi
0000000000049d75	movq	0x000657fc(%rip),%rax
0000000000049d7c	cmpq	$0x00,(%rdi,%rax)
0000000000049d81	jne	0x00049d90
0000000000049d83	movq	0x0005adae(%rip),%rsi
0000000000049d8a	call	*0x0003a348(%rip)
0000000000049d90	movq	0x0003a309(%rip),%rax
0000000000049d97	movq	(%rax),%rax
0000000000049d9a	cmpq	0xd0(%rbp),%rax
0000000000049d9e	jne	0x00049db2
0000000000049da0	addq	$0x00000108,%rsp
0000000000049da7	popq	%rbx
0000000000049da8	popq	%r12
0000000000049daa	popq	%r13
0000000000049dac	popq	%r14
0000000000049dae	popq	%r15
0000000000049db0	popq	%rbp
0000000000049db1	ret
0000000000049db2	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
+[PBXGDB_BreakpointConditionSequence sequenceWithCondition:forBreakpointNum:]:
0000000000049db7	pushq	%rbp
0000000000049db8	movq	%rsp,%rbp
0000000000049dbb	pushq	%r15
0000000000049dbd	pushq	%r14
0000000000049dbf	pushq	%r12
0000000000049dc1	pushq	%rbx
0000000000049dc2	movq	%rcx,%r14
0000000000049dc5	movq	%rdx,%r15
0000000000049dc8	movq	0x0005ee01(%rip),%rdi
0000000000049dcf	leaq	0x0005e50a(%rip),%rsi
0000000000049dd6	call	*0x0005e504(%rip)
0000000000049ddc	movq	0x0005ac8d(%rip),%rsi
0000000000049de3	movq	0x0003a2ee(%rip),%r12
0000000000049dea	movq	%rax,%rdi
0000000000049ded	call	*%r12
0000000000049df0	movq	%rax,%rbx
0000000000049df3	movq	0x0005ac7e(%rip),%rsi
0000000000049dfa	movq	%r15,%rdi
0000000000049dfd	call	*%r12
0000000000049e00	movq	0x00065779(%rip),%rdx
0000000000049e07	movq	%rax,%rdi
0000000000049e0a	movq	%rbx,%rsi
0000000000049e0d	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
0000000000049e12	movq	0x0006576f(%rip),%rax
0000000000049e19	movq	%r14,(%rbx,%rax)
0000000000049e1d	movq	%rbx,%rax
0000000000049e20	popq	%rbx
0000000000049e21	popq	%r12
0000000000049e23	popq	%r14
0000000000049e25	popq	%r15
0000000000049e27	popq	%rbp
0000000000049e28	ret
-[PBXGDB_BreakpointConditionSequence handleErrorForMICommand:]:
0000000000049e29	pushq	%rbp
0000000000049e2a	movq	%rsp,%rbp
0000000000049e2d	pushq	%r14
0000000000049e2f	pushq	%rbx
0000000000049e30	movq	%rdi,%rbx
0000000000049e33	movq	0x0005acfe(%rip),%rsi
0000000000049e3a	movq	0x0003a297(%rip),%r14
0000000000049e41	call	*%r14
0000000000049e44	movq	0x0006573d(%rip),%rax
0000000000049e4b	movq	(%rbx,%rax),%rcx
0000000000049e4f	movq	0x0006570a(%rip),%rax
0000000000049e56	movq	(%rbx,%rax),%rdi
0000000000049e5a	movq	0x0005df87(%rip),%rsi
0000000000049e61	xorl	%edx,%edx
0000000000049e63	call	*%r14
0000000000049e66	xorl	%eax,%eax
0000000000049e68	popq	%rbx
0000000000049e69	popq	%r14
0000000000049e6b	popq	%rbp
0000000000049e6c	ret
-[PBXGDB_BreakpointConditionSequence _breakpointConditionSet:]:
0000000000049e6d	pushq	%rbp
0000000000049e6e	movq	%rsp,%rbp
0000000000049e71	pushq	%rbx
0000000000049e72	pushq	%rax
0000000000049e73	movq	%rdi,%rbx
0000000000049e76	movq	0x0006570b(%rip),%rax
0000000000049e7d	movq	(%rbx,%rax),%rcx
0000000000049e81	movq	0x000656d8(%rip),%rax
0000000000049e88	movq	(%rbx,%rax),%rdi
0000000000049e8c	movq	0x0005df55(%rip),%rsi
0000000000049e93	movl	$0x00000001,%edx
0000000000049e98	call	*0x0003a23a(%rip)
0000000000049e9e	movq	0x0005ac93(%rip),%rsi
0000000000049ea5	movq	%rbx,%rdi
0000000000049ea8	movq	0x0003a229(%rip),%rax
0000000000049eaf	addq	$0x08,%rsp
0000000000049eb3	popq	%rbx
0000000000049eb4	popq	%rbp
0000000000049eb5	jmp	*%rax
-[PBXGDB_BreakpointConditionSequence execute]:
0000000000049eb7	pushq	%rbp
0000000000049eb8	movq	%rsp,%rbp
0000000000049ebb	pushq	%r14
0000000000049ebd	pushq	%rbx
0000000000049ebe	movq	%rdi,%rbx
0000000000049ec1	movq	0x000656c0(%rip),%rax
0000000000049ec8	movq	(%rbx,%rax),%rcx
0000000000049ecc	movq	0x000656ad(%rip),%rax
0000000000049ed3	movq	(%rbx,%rax),%rdx
0000000000049ed7	movq	0x0005df12(%rip),%rsi
0000000000049ede	movq	0x0005e9f3(%rip),%rdi
0000000000049ee5	call	*0x0003a1ed(%rip)
0000000000049eeb	movq	%rax,%r14
0000000000049eee	movq	0x0005ab93(%rip),%rsi
0000000000049ef5	movq	%r14,%rdi
0000000000049ef8	movq	%rbx,%rdx
0000000000049efb	call	*0x0003a1d7(%rip)
0000000000049f01	movq	0x0005ab90(%rip),%rsi
0000000000049f08	movq	0x0005dee9(%rip),%rdx
0000000000049f0f	movq	%r14,%rdi
0000000000049f12	call	*0x0003a1c0(%rip)
0000000000049f18	movq	0x0005ab99(%rip),%rsi
0000000000049f1f	movq	%rbx,%rdi
0000000000049f22	call	*0x0003a1b0(%rip)
0000000000049f28	movq	0x0005ab91(%rip),%rsi
0000000000049f2f	movq	%rax,%rdi
0000000000049f32	call	*0x0003a1a0(%rip)
0000000000049f38	movq	0x0005c221(%rip),%rsi
0000000000049f3f	movq	%rax,%rdi
0000000000049f42	movq	%r14,%rdx
0000000000049f45	movl	$0x00000001,%ecx
0000000000049f4a	movq	0x0003a187(%rip),%rax
0000000000049f51	popq	%rbx
0000000000049f52	popq	%r14
0000000000049f54	popq	%rbp
0000000000049f55	jmp	*%rax
+[PBXGDB_BreakpointIgnoreCountSequence sequenceWithIgnoreCount:forBreakpointNum:]:
0000000000049f57	pushq	%rbp
0000000000049f58	movq	%rsp,%rbp
0000000000049f5b	pushq	%r14
0000000000049f5d	pushq	%rbx
0000000000049f5e	movq	%rcx,%r14
0000000000049f61	movq	%rdx,%rbx
0000000000049f64	movq	0x0005ec6d(%rip),%rdi
0000000000049f6b	leaq	0x0005e36e(%rip),%rsi
0000000000049f72	call	*0x0005e368(%rip)
0000000000049f78	movq	0x0005aaf1(%rip),%rsi
0000000000049f7f	movq	%rax,%rdi
0000000000049f82	call	*0x0003a150(%rip)
0000000000049f88	movq	0x00065601(%rip),%rcx
0000000000049f8f	movq	%rbx,(%rax,%rcx)
0000000000049f93	movq	0x000655fe(%rip),%rcx
0000000000049f9a	movq	%r14,(%rax,%rcx)
0000000000049f9e	popq	%rbx
0000000000049f9f	popq	%r14
0000000000049fa1	popq	%rbp
0000000000049fa2	ret
-[PBXGDB_BreakpointIgnoreCountSequence execute]:
0000000000049fa3	pushq	%rbp
0000000000049fa4	movq	%rsp,%rbp
0000000000049fa7	pushq	%r14
0000000000049fa9	pushq	%rbx
0000000000049faa	movq	%rdi,%rbx
0000000000049fad	movq	0x000655e4(%rip),%rax
0000000000049fb4	movq	(%rbx,%rax),%rcx
0000000000049fb8	movq	0x000655d1(%rip),%rax
0000000000049fbf	movq	(%rbx,%rax),%rdx
0000000000049fc3	movq	0x0005de36(%rip),%rsi
0000000000049fca	movq	0x0005e90f(%rip),%rdi
0000000000049fd1	call	*0x0003a101(%rip)
0000000000049fd7	movq	%rax,%r14
0000000000049fda	movq	0x0005aaa7(%rip),%rsi
0000000000049fe1	movq	%r14,%rdi
0000000000049fe4	movq	%rbx,%rdx
0000000000049fe7	call	*0x0003a0eb(%rip)
0000000000049fed	movq	0x0005aaa4(%rip),%rsi
0000000000049ff4	movq	0x0005de0d(%rip),%rdx
0000000000049ffb	movq	%r14,%rdi
0000000000049ffe	call	*0x0003a0d4(%rip)
000000000004a004	movq	0x0005aaad(%rip),%rsi
000000000004a00b	movq	%rbx,%rdi
000000000004a00e	call	*0x0003a0c4(%rip)
000000000004a014	movq	0x0005aaa5(%rip),%rsi
000000000004a01b	movq	%rax,%rdi
000000000004a01e	call	*0x0003a0b4(%rip)
000000000004a024	movq	0x0005c135(%rip),%rsi
000000000004a02b	movq	%rax,%rdi
000000000004a02e	movq	%r14,%rdx
000000000004a031	movl	$0x00000001,%ecx
000000000004a036	movq	0x0003a09b(%rip),%rax
000000000004a03d	popq	%rbx
000000000004a03e	popq	%r14
000000000004a040	popq	%rbp
000000000004a041	jmp	*%rax
-[PBXGDB_BreakpointIgnoreCountSequence _setIgnoreCount:]:
000000000004a043	pushq	%rbp
000000000004a044	movq	%rsp,%rbp
000000000004a047	subq	$0x10,%rsp
000000000004a04b	movq	%rdi,0xf0(%rbp)
000000000004a04f	movq	0x0005f01a(%rip),%rax
000000000004a056	movq	%rax,0xf8(%rbp)
000000000004a05a	movq	0x0005aad7(%rip),%rsi
000000000004a061	leaq	0xf0(%rbp),%rdi
000000000004a065	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000004a06a	addq	$0x10,%rsp
000000000004a06e	popq	%rbp
000000000004a06f	ret
+[PBXGDB_BreakpointCommandSequence sequenceWithCommand:forBreakpointNum:]:
000000000004a070	pushq	%rbp
000000000004a071	movq	%rsp,%rbp
000000000004a074	pushq	%r15
000000000004a076	pushq	%r14
000000000004a078	pushq	%r12
000000000004a07a	pushq	%rbx
000000000004a07b	movq	%rcx,%r14
000000000004a07e	movq	%rdx,%r15
000000000004a081	movq	0x0005eb58(%rip),%rdi
000000000004a088	leaq	0x0005e251(%rip),%rsi
000000000004a08f	call	*0x0005e24b(%rip)
000000000004a095	movq	0x0005a9d4(%rip),%rsi
000000000004a09c	movq	0x0003a035(%rip),%r12
000000000004a0a3	movq	%rax,%rdi
000000000004a0a6	call	*%r12
000000000004a0a9	movq	%rax,%rbx
000000000004a0ac	movq	0x0005a9c5(%rip),%rsi
000000000004a0b3	movq	%r15,%rdi
000000000004a0b6	call	*%r12
000000000004a0b9	movq	0x000654e0(%rip),%rdx
000000000004a0c0	movq	%rax,%rdi
000000000004a0c3	movq	%rbx,%rsi
000000000004a0c6	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000004a0cb	movq	0x000654d6(%rip),%rax
000000000004a0d2	movq	%r14,(%rbx,%rax)
000000000004a0d6	movq	%rbx,%rax
000000000004a0d9	popq	%rbx
000000000004a0da	popq	%r12
000000000004a0dc	popq	%r14
000000000004a0de	popq	%r15
000000000004a0e0	popq	%rbp
000000000004a0e1	ret
-[PBXGDB_BreakpointCommandSequence handleErrorForMICommand:]:
000000000004a0e2	pushq	%rbp
000000000004a0e3	movq	%rsp,%rbp
000000000004a0e6	movq	0x0005aa4b(%rip),%rsi
000000000004a0ed	call	*0x00039fe5(%rip)
000000000004a0f3	xorl	%eax,%eax
000000000004a0f5	popq	%rbp
000000000004a0f6	ret
-[PBXGDB_BreakpointCommandSequence _breakpointCommandSet:]:
000000000004a0f7	pushq	%rbp
000000000004a0f8	movq	%rsp,%rbp
000000000004a0fb	movq	0x0005aa36(%rip),%rsi
000000000004a102	popq	%rbp
000000000004a103	jmp	*0x00039fcf(%rip)
-[PBXGDB_BreakpointCommandSequence execute]:
000000000004a109	pushq	%rbp
000000000004a10a	movq	%rsp,%rbp
000000000004a10d	pushq	%r14
000000000004a10f	pushq	%rbx
000000000004a110	movq	%rdi,%rbx
000000000004a113	movq	0x0006548e(%rip),%rax
000000000004a11a	movq	(%rbx,%rax),%rcx
000000000004a11e	movq	0x0006547b(%rip),%rax
000000000004a125	movq	(%rbx,%rax),%rdx
000000000004a129	movq	0x0005dce0(%rip),%rsi
000000000004a130	movq	0x0005e7b1(%rip),%rdi
000000000004a137	call	*0x00039f9b(%rip)
000000000004a13d	movq	%rax,%r14
000000000004a140	movq	0x0005a941(%rip),%rsi
000000000004a147	movq	%r14,%rdi
000000000004a14a	movq	%rbx,%rdx
000000000004a14d	call	*0x00039f85(%rip)
000000000004a153	movq	0x0005a93e(%rip),%rsi
000000000004a15a	movq	0x0005dcb7(%rip),%rdx
000000000004a161	movq	%r14,%rdi
000000000004a164	call	*0x00039f6e(%rip)
000000000004a16a	movq	0x0005a947(%rip),%rsi
000000000004a171	movq	%rbx,%rdi
000000000004a174	call	*0x00039f5e(%rip)
000000000004a17a	movq	0x0005a93f(%rip),%rsi
000000000004a181	movq	%rax,%rdi
000000000004a184	call	*0x00039f4e(%rip)
000000000004a18a	movq	0x0005bfcf(%rip),%rsi
000000000004a191	movq	%rax,%rdi
000000000004a194	movq	%r14,%rdx
000000000004a197	movl	$0x00000001,%ecx
000000000004a19c	movq	0x00039f35(%rip),%rax
000000000004a1a3	popq	%rbx
000000000004a1a4	popq	%r14
000000000004a1a6	popq	%rbp
000000000004a1a7	jmp	*%rax
-[PBXGDB_BaseCPPExceptionHandlingSequence interruptIfNeeded]:
000000000004a1a9	pushq	%rbp
000000000004a1aa	movq	%rsp,%rbp
000000000004a1ad	movl	$0x00000001,%eax
000000000004a1b2	popq	%rbp
000000000004a1b3	ret
-[PBXGDB_BaseCPPExceptionHandlingSequence handleErrorForMICommand:]:
000000000004a1b4	pushq	%rbp
000000000004a1b5	movq	%rsp,%rbp
000000000004a1b8	pushq	%r14
000000000004a1ba	pushq	%rbx
000000000004a1bb	movq	%rdi,%rbx
000000000004a1be	movq	0x0005db13(%rip),%rsi
000000000004a1c5	movq	0x00039f0c(%rip),%r14
000000000004a1cc	xorl	%edx,%edx
000000000004a1ce	call	*%r14
000000000004a1d1	movq	0x0005a960(%rip),%rsi
000000000004a1d8	movq	%rbx,%rdi
000000000004a1db	call	*%r14
000000000004a1de	movl	$0x00000001,%eax
000000000004a1e3	popq	%rbx
000000000004a1e4	popq	%r14
000000000004a1e6	popq	%rbp
000000000004a1e7	ret
-[PBXGDB_BaseCPPExceptionHandlingSequence setupCommand:]:
000000000004a1e8	pushq	%rbp
000000000004a1e9	movq	%rsp,%rbp
000000000004a1ec	pushq	%rbx
000000000004a1ed	pushq	%rax
000000000004a1ee	movq	%rdx,%rbx
000000000004a1f1	movq	0x0005a8b0(%rip),%rsi
000000000004a1f8	movq	%rbx,%rdi
000000000004a1fb	movq	$0xffffffff,%rdx
000000000004a202	call	*0x00039ed0(%rip)
000000000004a208	movq	0x0005a8a1(%rip),%rsi
000000000004a20f	movq	%rbx,%rdi
000000000004a212	movq	$0xffffffff,%rdx
000000000004a219	movq	0x00039eb8(%rip),%rax
000000000004a220	addq	$0x08,%rsp
000000000004a224	popq	%rbx
000000000004a225	popq	%rbp
000000000004a226	jmp	*%rax
-[PBXGDB_BaseCPPExceptionHandlingSequence setRegex:]:
000000000004a228	pushq	%rbp
000000000004a229	movq	%rsp,%rbp
000000000004a22c	movq	%rdx,%rax
000000000004a22f	movq	%rdi,%rcx
000000000004a232	movq	0x00065377(%rip),%rdx
000000000004a239	movq	%rax,%rdi
000000000004a23c	movq	%rcx,%rsi
000000000004a23f	popq	%rbp
000000000004a240	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_BaseCPPExceptionHandlingSequence cleanup:]:
000000000004a245	pushq	%rbp
000000000004a246	movq	%rsp,%rbp
000000000004a249	movq	0x0005a8e8(%rip),%rsi
000000000004a250	popq	%rbp
000000000004a251	jmp	*0x00039e81(%rip)
-[PBXGDB_BaseCPPExceptionHandlingSequence execute]:
000000000004a257	pushq	%rbp
000000000004a258	movq	%rsp,%rbp
000000000004a25b	pushq	%r14
000000000004a25d	pushq	%rbx
000000000004a25e	movq	%rdi,%r14
000000000004a261	movq	0x0005a818(%rip),%rsi
000000000004a268	movq	0x0005ea09(%rip),%rdi
000000000004a26f	call	*0x00039e63(%rip)
000000000004a275	movq	%rax,%rbx
000000000004a278	movq	0x0005a809(%rip),%rsi
000000000004a27f	movq	%rbx,%rdi
000000000004a282	movq	%r14,%rdx
000000000004a285	call	*0x00039e4d(%rip)
000000000004a28b	movq	0x0005a806(%rip),%rsi
000000000004a292	movq	0x0005db87(%rip),%rdx
000000000004a299	movq	%rbx,%rdi
000000000004a29c	call	*0x00039e36(%rip)
000000000004a2a2	movq	0x0005db7f(%rip),%rsi
000000000004a2a9	movq	%r14,%rdi
000000000004a2ac	movq	%rbx,%rdx
000000000004a2af	call	*0x00039e23(%rip)
000000000004a2b5	movq	0x0005a7fc(%rip),%rsi
000000000004a2bc	movq	%r14,%rdi
000000000004a2bf	call	*0x00039e13(%rip)
000000000004a2c5	movq	0x0005a7f4(%rip),%rsi
000000000004a2cc	movq	%rax,%rdi
000000000004a2cf	call	*0x00039e03(%rip)
000000000004a2d5	movq	0x0005be84(%rip),%rsi
000000000004a2dc	movq	%rax,%rdi
000000000004a2df	movq	%rbx,%rdx
000000000004a2e2	movl	$0x00000001,%ecx
000000000004a2e7	movq	0x00039dea(%rip),%rax
000000000004a2ee	popq	%rbx
000000000004a2ef	popq	%r14
000000000004a2f1	popq	%rbp
000000000004a2f2	jmp	*%rax
-[PBXGDB_StopOnCPPThrowSequence execute]:
000000000004a2f4	pushq	%rbp
000000000004a2f5	movq	%rsp,%rbp
000000000004a2f8	subq	$0x10,%rsp
000000000004a2fc	movq	%rdi,0xf0(%rbp)
000000000004a300	movq	0x0005ed71(%rip),%rax
000000000004a307	movq	%rax,0xf8(%rbp)
000000000004a30b	movq	0x0005b706(%rip),%rsi
000000000004a312	leaq	0xf0(%rbp),%rdi
000000000004a316	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000004a31b	addq	$0x10,%rsp
000000000004a31f	popq	%rbp
000000000004a320	ret
-[PBXGDB_StopOnCPPThrowSequence setupCommand:]:
000000000004a321	pushq	%rbp
000000000004a322	movq	%rsp,%rbp
000000000004a325	pushq	%r14
000000000004a327	pushq	%rbx
000000000004a328	subq	$0x10,%rsp
000000000004a32c	movq	%rdx,%rbx
000000000004a32f	movq	%rdi,0xe0(%rbp)
000000000004a333	movq	0x0005ed3e(%rip),%rax
000000000004a33a	movq	%rax,0xe8(%rbp)
000000000004a33e	movq	0x0005dae3(%rip),%rsi
000000000004a345	leaq	0xe0(%rbp),%rdi
000000000004a349	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000004a34e	movq	0x00039d83(%rip),%r14
000000000004a355	movq	0x0005aa6c(%rip),%rsi
000000000004a35c	movq	%rbx,%rdi
000000000004a35f	movl	$0x00000001,%edx
000000000004a364	call	*%r14
000000000004a367	movq	0x0005dac2(%rip),%rsi
000000000004a36e	movq	%rbx,%rdi
000000000004a371	movl	$0x00000001,%edx
000000000004a376	call	*%r14
000000000004a379	addq	$0x10,%rsp
000000000004a37d	popq	%rbx
000000000004a37e	popq	%r14
000000000004a380	popq	%rbp
000000000004a381	ret
-[PBXGDB_StopOnCPPThrowSequence sendRegex:]:
000000000004a382	pushq	%rbp
000000000004a383	movq	%rsp,%rbp
000000000004a386	pushq	%r14
000000000004a388	pushq	%rbx
000000000004a389	movq	%rdi,%rbx
000000000004a38c	movq	0x0006521d(%rip),%rdx
000000000004a393	cmpq	$0x00,(%rbx,%rdx)
000000000004a398	jne	0x0004a3af
000000000004a39a	addq	%rbx,%rdx
000000000004a39d	subq	%rbx,%rdx
000000000004a3a0	leaq	0x00065591(%rip),%rdi
000000000004a3a7	movq	%rbx,%rsi
000000000004a3aa	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000004a3af	movq	0x0005a6ca(%rip),%rsi
000000000004a3b6	movq	0x0005e15b(%rip),%rdi
000000000004a3bd	call	*0x00039d15(%rip)
000000000004a3c3	movq	%rax,%r14
000000000004a3c6	movq	0x000651e3(%rip),%rax
000000000004a3cd	movq	(%rbx,%rax),%rcx
000000000004a3d1	movq	0x0005a7a0(%rip),%rsi
000000000004a3d8	movq	0x0005e071(%rip),%rdi
000000000004a3df	leaq	0x0006bfb2(%rip),%rdx
000000000004a3e6	xorb	%al,%al
000000000004a3e8	call	*0x00039cea(%rip)
000000000004a3ee	movq	0x0005ab4b(%rip),%rsi
000000000004a3f5	movq	%r14,%rdi
000000000004a3f8	movq	%rax,%rdx
000000000004a3fb	call	*0x00039cd7(%rip)
000000000004a401	movq	0x0005a680(%rip),%rsi
000000000004a408	movq	%r14,%rdi
000000000004a40b	movq	%rbx,%rdx
000000000004a40e	call	*0x00039cc4(%rip)
000000000004a414	movq	0x0005a67d(%rip),%rsi
000000000004a41b	movq	0x0005da16(%rip),%rdx
000000000004a422	movq	%r14,%rdi
000000000004a425	call	*0x00039cad(%rip)
000000000004a42b	movq	0x0005a686(%rip),%rsi
000000000004a432	movq	%rbx,%rdi
000000000004a435	call	*0x00039c9d(%rip)
000000000004a43b	movq	0x0005a67e(%rip),%rsi
000000000004a442	movq	%rax,%rdi
000000000004a445	call	*0x00039c8d(%rip)
000000000004a44b	movq	0x0005bd0e(%rip),%rsi
000000000004a452	movq	%rax,%rdi
000000000004a455	movq	%r14,%rdx
000000000004a458	movl	$0x00000001,%ecx
000000000004a45d	movq	0x00039c74(%rip),%rax
000000000004a464	popq	%rbx
000000000004a465	popq	%r14
000000000004a467	popq	%rbp
000000000004a468	jmp	*%rax
-[PBXGDB_DeleteStopOnCPPThrowSequence setupCommand:]:
000000000004a46a	pushq	%rbp
000000000004a46b	movq	%rsp,%rbp
000000000004a46e	pushq	%r15
000000000004a470	pushq	%r14
000000000004a472	pushq	%rbx
000000000004a473	subq	$0x18,%rsp
000000000004a477	movq	%rdx,%rbx
000000000004a47a	movq	%rdi,%r14
000000000004a47d	movq	%r14,0xd8(%rbp)
000000000004a481	movq	0x0005ebf8(%rip),%rax
000000000004a488	movq	%rax,0xe0(%rbp)
000000000004a48c	movq	0x0005d995(%rip),%rsi
000000000004a493	leaq	0xd8(%rbp),%rdi
000000000004a497	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000004a49c	movq	0x00039c35(%rip),%r15
000000000004a4a3	movq	0x0005a91e(%rip),%rsi
000000000004a4aa	movq	%rbx,%rdi
000000000004a4ad	xorl	%edx,%edx
000000000004a4af	call	*%r15
000000000004a4b2	movq	0x0005d977(%rip),%rsi
000000000004a4b9	movq	%rbx,%rdi
000000000004a4bc	movl	$0x00000001,%edx
000000000004a4c1	call	*%r15
000000000004a4c4	movq	0x0005a5bd(%rip),%rsi
000000000004a4cb	movq	%rbx,%rdi
000000000004a4ce	movq	%r14,%rdx
000000000004a4d1	call	*%r15
000000000004a4d4	movq	0x0005a5bd(%rip),%rsi
000000000004a4db	movq	0x0005d93e(%rip),%rdx
000000000004a4e2	movq	%rbx,%rdi
000000000004a4e5	call	*%r15
000000000004a4e8	addq	$0x18,%rsp
000000000004a4ec	popq	%rbx
000000000004a4ed	popq	%r14
000000000004a4ef	popq	%r15
000000000004a4f1	popq	%rbp
000000000004a4f2	ret
-[PBXGDB_StopOnCPPCatchSequence setupCommand:]:
000000000004a4f3	pushq	%rbp
000000000004a4f4	movq	%rsp,%rbp
000000000004a4f7	pushq	%r14
000000000004a4f9	pushq	%rbx
000000000004a4fa	subq	$0x10,%rsp
000000000004a4fe	movq	%rdx,%rbx
000000000004a501	movq	%rdi,0xe0(%rbp)
000000000004a505	movq	0x0005eb7c(%rip),%rax
000000000004a50c	movq	%rax,0xe8(%rbp)
000000000004a510	movq	0x0005d911(%rip),%rsi
000000000004a517	leaq	0xe0(%rbp),%rdi
000000000004a51b	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000004a520	movq	0x00039bb1(%rip),%r14
000000000004a527	movq	0x0005a89a(%rip),%rsi
000000000004a52e	movq	%rbx,%rdi
000000000004a531	movl	$0x00000001,%edx
000000000004a536	call	*%r14
000000000004a539	movq	0x0005d8f0(%rip),%rsi
000000000004a540	movq	%rbx,%rdi
000000000004a543	xorl	%edx,%edx
000000000004a545	call	*%r14
000000000004a548	addq	$0x10,%rsp
000000000004a54c	popq	%rbx
000000000004a54d	popq	%r14
000000000004a54f	popq	%rbp
000000000004a550	ret
-[PBXGDB_StopOnCPPCatchSequence sendRegex:]:
000000000004a551	pushq	%rbp
000000000004a552	movq	%rsp,%rbp
000000000004a555	pushq	%r14
000000000004a557	pushq	%rbx
000000000004a558	movq	%rdi,%rbx
000000000004a55b	movq	0x0006504e(%rip),%rdx
000000000004a562	cmpq	$0x00,(%rbx,%rdx)
000000000004a567	jne	0x0004a57e
000000000004a569	addq	%rbx,%rdx
000000000004a56c	subq	%rbx,%rdx
000000000004a56f	leaq	0x000653c2(%rip),%rdi
000000000004a576	movq	%rbx,%rsi
000000000004a579	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000004a57e	movq	0x0005a4fb(%rip),%rsi
000000000004a585	movq	0x0005df8c(%rip),%rdi
000000000004a58c	call	*0x00039b46(%rip)
000000000004a592	movq	%rax,%r14
000000000004a595	movq	0x00065014(%rip),%rax
000000000004a59c	movq	(%rbx,%rax),%rcx
000000000004a5a0	movq	0x0005a5d1(%rip),%rsi
000000000004a5a7	movq	0x0005dea2(%rip),%rdi
000000000004a5ae	leaq	0x0006be03(%rip),%rdx
000000000004a5b5	xorb	%al,%al
000000000004a5b7	call	*0x00039b1b(%rip)
000000000004a5bd	movq	0x0005a97c(%rip),%rsi
000000000004a5c4	movq	%r14,%rdi
000000000004a5c7	movq	%rax,%rdx
000000000004a5ca	call	*0x00039b08(%rip)
000000000004a5d0	movq	0x0005a4b1(%rip),%rsi
000000000004a5d7	movq	%r14,%rdi
000000000004a5da	movq	%rbx,%rdx
000000000004a5dd	call	*0x00039af5(%rip)
000000000004a5e3	movq	0x0005a4ae(%rip),%rsi
000000000004a5ea	movq	0x0005d847(%rip),%rdx
000000000004a5f1	movq	%r14,%rdi
000000000004a5f4	call	*0x00039ade(%rip)
000000000004a5fa	movq	0x0005a4b7(%rip),%rsi
000000000004a601	movq	%rbx,%rdi
000000000004a604	call	*0x00039ace(%rip)
000000000004a60a	movq	0x0005a4af(%rip),%rsi
000000000004a611	movq	%rax,%rdi
000000000004a614	call	*0x00039abe(%rip)
000000000004a61a	movq	0x0005bb3f(%rip),%rsi
000000000004a621	movq	%rax,%rdi
000000000004a624	movq	%r14,%rdx
000000000004a627	movl	$0x00000001,%ecx
000000000004a62c	movq	0x00039aa5(%rip),%rax
000000000004a633	popq	%rbx
000000000004a634	popq	%r14
000000000004a636	popq	%rbp
000000000004a637	jmp	*%rax
-[PBXGDB_DeleteStopOnCPPCatchSequence setupCommand:]:
000000000004a639	pushq	%rbp
000000000004a63a	movq	%rsp,%rbp
000000000004a63d	pushq	%r15
000000000004a63f	pushq	%r14
000000000004a641	pushq	%rbx
000000000004a642	subq	$0x18,%rsp
000000000004a646	movq	%rdx,%rbx
000000000004a649	movq	%rdi,%r14
000000000004a64c	movq	%r14,0xd8(%rbp)
000000000004a650	movq	0x0005ea39(%rip),%rax
000000000004a657	movq	%rax,0xe0(%rbp)
000000000004a65b	movq	0x0005d7c6(%rip),%rsi
000000000004a662	leaq	0xd8(%rbp),%rdi
000000000004a666	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000004a66b	movq	0x00039a66(%rip),%r15
000000000004a672	movq	0x0005a74f(%rip),%rsi
000000000004a679	movq	%rbx,%rdi
000000000004a67c	xorl	%edx,%edx
000000000004a67e	call	*%r15
000000000004a681	movq	0x0005d7a8(%rip),%rsi
000000000004a688	movq	%rbx,%rdi
000000000004a68b	xorl	%edx,%edx
000000000004a68d	call	*%r15
000000000004a690	movq	0x0005a3f1(%rip),%rsi
000000000004a697	movq	%rbx,%rdi
000000000004a69a	movq	%r14,%rdx
000000000004a69d	call	*%r15
000000000004a6a0	movq	0x0005a3f1(%rip),%rsi
000000000004a6a7	movq	0x0005d772(%rip),%rdx
000000000004a6ae	movq	%rbx,%rdi
000000000004a6b1	call	*%r15
000000000004a6b4	addq	$0x18,%rsp
000000000004a6b8	popq	%rbx
000000000004a6b9	popq	%r14
000000000004a6bb	popq	%r15
000000000004a6bd	popq	%rbp
000000000004a6be	ret
+[PBXGDB_NewWatchpointSequence sequenceWithExpression:]:
000000000004a6bf	pushq	%rbp
000000000004a6c0	movq	%rsp,%rbp
000000000004a6c3	pushq	%r14
000000000004a6c5	pushq	%rbx
000000000004a6c6	movq	%rdx,%r14
000000000004a6c9	movq	0x0005dec8(%rip),%rdi
000000000004a6d0	leaq	0x0005dc09(%rip),%rsi
000000000004a6d7	call	*0x0005dc03(%rip)
000000000004a6dd	movq	0x0005a38c(%rip),%rsi
000000000004a6e4	movq	%rax,%rdi
000000000004a6e7	call	*0x000399eb(%rip)
000000000004a6ed	movq	%rax,%rbx
000000000004a6f0	movq	0x00064ec1(%rip),%rdx
000000000004a6f7	movq	%r14,%rdi
000000000004a6fa	movq	%rbx,%rsi
000000000004a6fd	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000004a702	movq	%rbx,%rax
000000000004a705	popq	%rbx
000000000004a706	popq	%r14
000000000004a708	popq	%rbp
000000000004a709	ret
-[PBXGDB_NewWatchpointSequence _watchpointWasEnabled:]:
000000000004a70a	pushq	%rbp
000000000004a70b	movq	%rsp,%rbp
000000000004a70e	pushq	%r15
000000000004a710	pushq	%r14
000000000004a712	pushq	%r13
000000000004a714	pushq	%r12
000000000004a716	pushq	%rbx
000000000004a717	subq	$0x58,%rsp
000000000004a71b	movq	%rdx,%r14
000000000004a71e	movq	%rdi,%r13
000000000004a721	movq	%r13,0xd0(%rbp)
000000000004a725	movq	%rsi,0xc8(%rbp)
000000000004a729	movq	0x0005e550(%rip),%rdi
000000000004a730	leaq	0x0005dbf9(%rip),%rsi
000000000004a737	call	*0x0005dbf3(%rip)
000000000004a73d	leaq	0x0005dbfc(%rip),%rsi
000000000004a744	movq	%r14,%rdi
000000000004a747	movq	%rax,%rdx
000000000004a74a	call	*0x0005dbf0(%rip)
000000000004a750	cmpb	$0x01,%al
000000000004a752	jne	0x0004aa5a
000000000004a758	movq	0x0005a371(%rip),%rsi
000000000004a75f	movq	0x00039972(%rip),%r15
000000000004a766	movq	%r14,%rdi
000000000004a769	call	*%r15
000000000004a76c	movq	0x0005a365(%rip),%rsi
000000000004a773	leaq	0x0006777e(%rip),%rdx
000000000004a77a	movq	%rax,%rdi
000000000004a77d	call	*%r15
000000000004a780	movq	0x0005a359(%rip),%rsi
000000000004a787	movq	%rax,%rdi
000000000004a78a	call	*%r15
000000000004a78d	movq	%rax,0xb0(%rbp)
000000000004a791	leaq	0x00065840(%rip),%rdx
000000000004a798	movq	0x0005a339(%rip),%rsi
000000000004a79f	movq	%rax,%rdi
000000000004a7a2	call	*%r15
000000000004a7a5	movq	0x0005a35c(%rip),%rsi
000000000004a7ac	movq	%rax,%rdi
000000000004a7af	call	*%r15
000000000004a7b2	leaq	0x00064f9f(%rip),%rdx
000000000004a7b9	movq	0x0005baf0(%rip),%rsi
000000000004a7c0	movq	%rax,%rdi
000000000004a7c3	call	*%r15
000000000004a7c6	movq	%rax,%r12
000000000004a7c9	leaq	0x0005db10(%rip),%rsi
000000000004a7d0	movq	0x0005e4b1(%rip),%rdi
000000000004a7d7	call	*0x0005db03(%rip)
000000000004a7dd	movq	0x0005a28c(%rip),%rsi
000000000004a7e4	movq	%rax,%rdi
000000000004a7e7	call	*%r15
000000000004a7ea	movq	%rax,%rbx
000000000004a7ed	movq	0x0005d64c(%rip),%rsi
000000000004a7f4	movq	%rbx,%rdi
000000000004a7f7	movl	$0x00000001,%edx
000000000004a7fc	call	*%r15
000000000004a7ff	leaq	0x0005db1a(%rip),%rsi
000000000004a806	movq	%r12,%rdi
000000000004a809	movl	$0x00000002,%edx
000000000004a80e	call	*0x0005db0c(%rip)
000000000004a814	movq	0x0005d62d(%rip),%rsi
000000000004a81b	movq	%rbx,%rdi
000000000004a81e	movq	%rax,%rdx
000000000004a821	call	*%r15
000000000004a824	movq	0x0005d625(%rip),%rsi
000000000004a82b	movq	%rax,%rdi
000000000004a82e	call	*%r15
000000000004a831	movq	%rax,0xa8(%rbp)
000000000004a835	movq	0x0005d514(%rip),%rsi
000000000004a83c	movq	%r13,%rdi
000000000004a83f	call	*%r15
000000000004a842	movq	0x0005d33f(%rip),%rsi
000000000004a849	movq	%rax,%rdi
000000000004a84c	call	*%r15
000000000004a84f	movq	%rax,%r13
000000000004a852	testq	%r13,%r13
000000000004a855	jne	0x0004a8b9
000000000004a857	movq	0x0005e0ca(%rip),%rdi
000000000004a85e	leaq	0x0005dacb(%rip),%rsi
000000000004a865	call	*0x0005dac5(%rip)
000000000004a86b	movq	%rax,%rdi
000000000004a86e	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000004a873	leaq	0xd0(%rbp),%rdi
000000000004a877	leaq	0xc8(%rbp),%rsi
000000000004a87b	leaq	0x0001a4f2(%rip),%rdx
000000000004a882	leaq	0x0001a081(%rip),%rcx
000000000004a889	leaq	0x00065128(%rip),%r9
000000000004a890	leaq	0x00014c94(%rip),%r8
000000000004a897	leaq	0x00014c98(%rip),%rbx
000000000004a89e	movq	%rbx,0x18(%rsp)
000000000004a8a3	leaq	0x00064f8e(%rip),%rbx
000000000004a8aa	movq	%rbx,0x10(%rsp)
000000000004a8af	movq	%rax,0x08(%rsp)
000000000004a8b4	jmp	0x0004a95d
000000000004a8b9	movq	0x0005e068(%rip),%rdi
000000000004a8c0	leaq	0x0005da69(%rip),%rsi
000000000004a8c7	call	*0x0005da63(%rip)
000000000004a8cd	leaq	0x0005da6c(%rip),%rsi
000000000004a8d4	movq	%r13,%rdi
000000000004a8d7	movq	%rax,%rdx
000000000004a8da	call	*0x0005da60(%rip)
000000000004a8e0	testb	%al,%al
000000000004a8e2	jne	0x0004a96e
000000000004a8e8	movq	0x0005e039(%rip),%rdi
000000000004a8ef	leaq	0x0005da3a(%rip),%rsi
000000000004a8f6	call	*0x0005da34(%rip)
000000000004a8fc	movq	%rax,%rdi
000000000004a8ff	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000004a904	movq	%rax,%r15
000000000004a907	movq	0x0005a352(%rip),%rsi
000000000004a90e	movq	%r13,%rdi
000000000004a911	call	*0x000397c1(%rip)
000000000004a917	leaq	0x00014c2c(%rip),%r8
000000000004a91e	leaq	0xd0(%rbp),%rdi
000000000004a922	leaq	0xc8(%rbp),%rsi
000000000004a926	leaq	0x0001a447(%rip),%rdx
000000000004a92d	leaq	0x00019fd6(%rip),%rcx
000000000004a934	leaq	0x0006509d(%rip),%r9
000000000004a93b	movq	%r8,0x20(%rsp)
000000000004a940	leaq	0x00064ef1(%rip),%rbx
000000000004a947	movq	%rbx,0x18(%rsp)
000000000004a94c	leaq	0x00014bd8(%rip),%r8
000000000004a953	movq	%rax,0x10(%rsp)
000000000004a958	movq	%r15,0x08(%rsp)
000000000004a95d	movq	%r8,(%rsp)
000000000004a961	movl	$0x00000303,%r8d
000000000004a967	xorb	%al,%al
000000000004a969	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000004a96e	movq	0x0005bb7b(%rip),%rsi
000000000004a975	movq	0x0003975c(%rip),%r12
000000000004a97c	movq	%r13,%rdi
000000000004a97f	movq	0xa8(%rbp),%rdx
000000000004a983	call	*%r12
000000000004a986	movq	0x0005a14b(%rip),%rsi
000000000004a98d	leaq	0x00065624(%rip),%rdx
000000000004a994	movq	0xb0(%rbp),%rdi
000000000004a998	call	*%r12
000000000004a99b	movq	0x0005a166(%rip),%rsi
000000000004a9a2	movq	%rax,%rdi
000000000004a9a5	call	*%r12
000000000004a9a8	movq	0x0005a931(%rip),%rsi
000000000004a9af	movq	%rax,%rdi
000000000004a9b2	call	*%r12
000000000004a9b5	movq	%rax,%r15
000000000004a9b8	movq	0x0005d3a9(%rip),%rsi
000000000004a9bf	movq	%r14,%rdi
000000000004a9c2	call	*%r12
000000000004a9c5	movq	%rax,%rbx
000000000004a9c8	movq	0x0005d381(%rip),%rsi
000000000004a9cf	movq	0xd0(%rbp),%rdi
000000000004a9d3	call	*%r12
000000000004a9d6	movq	0x0005d27b(%rip),%rsi
000000000004a9dd	movq	%rax,%rdi
000000000004a9e0	call	*%r12
000000000004a9e3	leaq	0x0005d936(%rip),%rsi
000000000004a9ea	movq	%rax,%rdi
000000000004a9ed	movq	%rbx,%rdx
000000000004a9f0	call	*0x0005d92a(%rip)
000000000004a9f6	movq	%rax,%rbx
000000000004a9f9	movq	0x0005d200(%rip),%rsi
000000000004aa00	movq	%rbx,%rdi
000000000004aa03	movq	%r15,%rdx
000000000004aa06	call	*%r12
000000000004aa09	movq	0x0005d208(%rip),%rsi
000000000004aa10	movq	%rbx,%rdi
000000000004aa13	movl	$0x00000001,%edx
000000000004aa18	call	*%r12
000000000004aa1b	movq	0x0005a096(%rip),%rsi
000000000004aa22	movq	0xd0(%rbp),%rdi
000000000004aa26	call	*%r12
000000000004aa29	movq	0x0005a2b8(%rip),%rsi
000000000004aa30	movq	%rax,%rdi
000000000004aa33	call	*%r12
000000000004aa36	movq	0x0005a2b3(%rip),%rsi
000000000004aa3d	movq	%rax,%rdi
000000000004aa40	call	*%r12
000000000004aa43	movq	0x0005b9c6(%rip),%rsi
000000000004aa4a	movq	%rax,%rdi
000000000004aa4d	movq	%r15,%rdx
000000000004aa50	movq	%r13,%rcx
000000000004aa53	call	*%r12
000000000004aa56	movq	0xd0(%rbp),%r13
000000000004aa5a	movq	%r13,0xb8(%rbp)
000000000004aa5e	movq	0x0005e633(%rip),%rax
000000000004aa65	movq	%rax,0xc0(%rbp)
000000000004aa69	movq	0x0005a0c8(%rip),%rsi
000000000004aa70	leaq	0xb8(%rbp),%rdi
000000000004aa74	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000004aa79	addq	$0x58,%rsp
000000000004aa7d	popq	%rbx
000000000004aa7e	popq	%r12
000000000004aa80	popq	%r13
000000000004aa82	popq	%r14
000000000004aa84	popq	%r15
000000000004aa86	popq	%rbp
000000000004aa87	ret
-[PBXGDB_NewWatchpointSequence execute]:
000000000004aa88	pushq	%rbp
000000000004aa89	movq	%rsp,%rbp
000000000004aa8c	pushq	%r15
000000000004aa8e	pushq	%r14
000000000004aa90	pushq	%r12
000000000004aa92	pushq	%rbx
000000000004aa93	movq	%rdi,%rbx
000000000004aa96	movq	0x00064b23(%rip),%rax
000000000004aa9d	movl	(%rbx,%rax),%ecx
000000000004aaa0	cmpl	$0x01,%ecx
000000000004aaa3	ja	0x0004abd7
000000000004aaa9	incl	%ecx
000000000004aaab	movl	%ecx,(%rbx,%rax)
000000000004aaae	movq	0x0005a003(%rip),%rsi
000000000004aab5	movq	0x0003961c(%rip),%r14
000000000004aabc	movq	%rbx,%rdi
000000000004aabf	call	*%r14
000000000004aac2	movq	0x00059ff7(%rip),%rsi
000000000004aac9	movq	%rax,%rdi
000000000004aacc	call	*%r14
000000000004aacf	leaq	0x0006b902(%rip),%rdx
000000000004aad6	movq	0x0005af1b(%rip),%rsi
000000000004aadd	movq	%rax,%rdi
000000000004aae0	call	*%r14
000000000004aae3	orl	$0x02,%eax
000000000004aae6	cmpl	$0x02,%eax
000000000004aae9	jne	0x0004aaf4
000000000004aaeb	leaq	0x0006b906(%rip),%r15
000000000004aaf2	jmp	0x0004aafb
000000000004aaf4	leaq	0x00064e3d(%rip),%r15
000000000004aafb	movq	0x00059f7e(%rip),%rsi
000000000004ab02	movq	0x0005e177(%rip),%rdi
000000000004ab09	call	*0x000395c9(%rip)
000000000004ab0f	movq	%rax,%r14
000000000004ab12	movq	0x0005d937(%rip),%r12
000000000004ab19	movq	0x0005b700(%rip),%rsi
000000000004ab20	movq	0x0005e159(%rip),%rdi
000000000004ab27	call	*0x000395ab(%rip)
000000000004ab2d	leaq	0x0006b8e4(%rip),%rdx
000000000004ab34	movq	0x00064a7d(%rip),%rcx
000000000004ab3b	movq	(%rbx,%rcx),%r9
000000000004ab3f	movq	0x0005a032(%rip),%rsi
000000000004ab46	movq	%r12,%rdi
000000000004ab49	movq	%rax,%rcx
000000000004ab4c	movq	%r15,%r8
000000000004ab4f	xorb	%al,%al
000000000004ab51	call	*0x00039581(%rip)
000000000004ab57	movq	0x0005b6ba(%rip),%rsi
000000000004ab5e	movq	%r14,%rdi
000000000004ab61	movq	%rax,%rdx
000000000004ab64	call	*0x0003956e(%rip)
000000000004ab6a	movq	0x00059f17(%rip),%rsi
000000000004ab71	movq	%r14,%rdi
000000000004ab74	movq	%rbx,%rdx
000000000004ab77	call	*0x0003955b(%rip)
000000000004ab7d	movq	0x00059f14(%rip),%rsi
000000000004ab84	movq	0x0005d2cd(%rip),%rdx
000000000004ab8b	movq	%r14,%rdi
000000000004ab8e	call	*0x00039544(%rip)
000000000004ab94	movq	0x00059f1d(%rip),%rsi
000000000004ab9b	movq	%rbx,%rdi
000000000004ab9e	call	*0x00039534(%rip)
000000000004aba4	movq	0x00059f15(%rip),%rsi
000000000004abab	movq	%rax,%rdi
000000000004abae	call	*0x00039524(%rip)
000000000004abb4	movq	0x0005b5a5(%rip),%rsi
000000000004abbb	movq	%rax,%rdi
000000000004abbe	movq	%r14,%rdx
000000000004abc1	movl	$0x00000001,%ecx
000000000004abc6	movq	0x0003950b(%rip),%rax
000000000004abcd	popq	%rbx
000000000004abce	popq	%r12
000000000004abd0	popq	%r14
000000000004abd2	popq	%r15
000000000004abd4	popq	%rbp
000000000004abd5	jmp	*%rax
000000000004abd7	movq	0x00059f5a(%rip),%rsi
000000000004abde	movq	%rbx,%rdi
000000000004abe1	popq	%rbx
000000000004abe2	popq	%r12
000000000004abe4	popq	%r14
000000000004abe6	popq	%r15
000000000004abe8	popq	%rbp
000000000004abe9	jmp	*0x000394e9(%rip)
-[PBXGDB_NewWatchpointSequence handleErrorForMICommand:]:
000000000004abef	pushq	%rbp
000000000004abf0	movq	%rsp,%rbp
000000000004abf3	pushq	%r15
000000000004abf5	pushq	%r14
000000000004abf7	pushq	%rbx
000000000004abf8	pushq	%rax
000000000004abf9	movq	%rdi,%r14
000000000004abfc	movq	0x00059ecd(%rip),%rsi
000000000004ac03	movq	0x000394ce(%rip),%r15
000000000004ac0a	movq	%rdx,%rdi
000000000004ac0d	call	*%r15
000000000004ac10	movq	0x00059ec1(%rip),%rsi
000000000004ac17	leaq	0x000660da(%rip),%rdx
000000000004ac1e	movq	%rax,%rdi
000000000004ac21	call	*%r15
000000000004ac24	movq	0x00059edd(%rip),%rsi
000000000004ac2b	movq	%rax,%rdi
000000000004ac2e	call	*%r15
000000000004ac31	leaq	0x0005d728(%rip),%rsi
000000000004ac38	leaq	0x0006b7f9(%rip),%rdx
000000000004ac3f	movq	%rax,%rdi
000000000004ac42	call	*0x0005d718(%rip)
000000000004ac48	movb	%al,%bl
000000000004ac4a	movq	0x00059e67(%rip),%rsi
000000000004ac51	movq	%r14,%rdi
000000000004ac54	call	*%r15
000000000004ac57	movq	%rax,%rdi
000000000004ac5a	cmpb	$0x01,%bl
000000000004ac5d	jne	0x0004ac97
000000000004ac5f	movq	0x00059e5a(%rip),%rsi
000000000004ac66	movq	0x0003946b(%rip),%rbx
000000000004ac6d	call	*%rbx
000000000004ac6f	movq	0x0005adda(%rip),%rsi
000000000004ac76	leaq	0x0006b75b(%rip),%rcx
000000000004ac7d	movq	%rax,%rdi
000000000004ac80	movl	$0x00000001,%edx
000000000004ac85	call	*%rbx
000000000004ac87	movq	0x0005ad8a(%rip),%rsi
000000000004ac8e	movq	%r14,%rdi
000000000004ac91	call	*%rbx
000000000004ac93	movb	$0x01,%al
000000000004ac95	jmp	0x0004acf1
000000000004ac97	movq	0x0005a04a(%rip),%rsi
000000000004ac9e	movq	0x00039433(%rip),%r15
000000000004aca5	call	*%r15
000000000004aca8	movq	0x0005a041(%rip),%rsi
000000000004acaf	movq	%rax,%rdi
000000000004acb2	call	*%r15
000000000004acb5	movq	0x0005b72c(%rip),%rsi
000000000004acbc	movq	%rax,%rdi
000000000004acbf	call	*%r15
000000000004acc2	movq	%rax,%rbx
000000000004acc5	movq	0x0005cebc(%rip),%rsi
000000000004accc	movq	%r14,%rdi
000000000004accf	call	*%r15
000000000004acd2	movq	0x0005d187(%rip),%rsi
000000000004acd9	movq	%rbx,%rdi
000000000004acdc	movq	%rax,%rdx
000000000004acdf	call	*%r15
000000000004ace2	movq	0x00059e4f(%rip),%rsi
000000000004ace9	movq	%r14,%rdi
000000000004acec	call	*%r15
000000000004acef	xorb	%al,%al
000000000004acf1	movzbl	%al,%eax
000000000004acf4	addq	$0x08,%rsp
000000000004acf8	popq	%rbx
000000000004acf9	popq	%r14
000000000004acfb	popq	%r15
000000000004acfd	popq	%rbp
000000000004acfe	ret
+[PBXGDB_TemporaryBreakpointSequence sequenceWithSymbol:]:
000000000004acff	pushq	%rbp
000000000004ad00	movq	%rsp,%rbp
000000000004ad03	pushq	%r14
000000000004ad05	pushq	%rbx
000000000004ad06	movq	%rdx,%r14
000000000004ad09	movq	0x0005df80(%rip),%rdi
000000000004ad10	leaq	0x0005d5c9(%rip),%rsi
000000000004ad17	call	*0x0005d5c3(%rip)
000000000004ad1d	movq	0x00059d4c(%rip),%rsi
000000000004ad24	movq	%rax,%rdi
000000000004ad27	call	*0x000393ab(%rip)
000000000004ad2d	movq	%rax,%rbx
000000000004ad30	movq	0x00064891(%rip),%rdx
000000000004ad37	movq	%r14,%rdi
000000000004ad3a	movq	%rbx,%rsi
000000000004ad3d	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000004ad42	movq	%rbx,%rax
000000000004ad45	popq	%rbx
000000000004ad46	popq	%r14
000000000004ad48	popq	%rbp
000000000004ad49	ret
-[PBXGDB_TemporaryBreakpointSequence handleErrorForMICommand:]:
000000000004ad4a	pushq	%rbp
000000000004ad4b	movq	%rsp,%rbp
000000000004ad4e	movq	0x00059de3(%rip),%rsi
000000000004ad55	call	*0x0003937d(%rip)
000000000004ad5b	xorl	%eax,%eax
000000000004ad5d	popq	%rbp
000000000004ad5e	ret
-[PBXGDB_TemporaryBreakpointSequence _resultAllThreadsRunning:]:
000000000004ad5f	pushq	%rbp
000000000004ad60	movq	%rsp,%rbp
000000000004ad63	pushq	%rbx
000000000004ad64	pushq	%rax
000000000004ad65	movq	%rdi,%rbx
000000000004ad68	movq	0x00059d49(%rip),%rsi
000000000004ad6f	call	*0x00039363(%rip)
000000000004ad75	movq	0x0005a43c(%rip),%rsi
000000000004ad7c	movq	%rax,%rdi
000000000004ad7f	call	*0x00039353(%rip)
000000000004ad85	movq	0x0005adf4(%rip),%rsi
000000000004ad8c	movq	%rax,%rdi
000000000004ad8f	call	*0x00039343(%rip)
000000000004ad95	movq	0x00059d9c(%rip),%rsi
000000000004ad9c	movq	%rbx,%rdi
000000000004ad9f	movq	0x00039332(%rip),%rax
000000000004ada6	addq	$0x08,%rsp
000000000004adaa	popq	%rbx
000000000004adab	popq	%rbp
000000000004adac	jmp	*%rax
-[PBXGDB_TemporaryBreakpointSequence _breakpointSet:]:
000000000004adae	pushq	%rbp
000000000004adaf	movq	%rsp,%rbp
000000000004adb2	pushq	%r14
000000000004adb4	pushq	%rbx
000000000004adb5	movq	%rdi,%r14
000000000004adb8	movq	0x00059cc1(%rip),%rsi
000000000004adbf	movq	0x0005d99a(%rip),%rdi
000000000004adc6	call	*0x0003930c(%rip)
000000000004adcc	movq	%rax,%rbx
000000000004adcf	movq	0x00059cb2(%rip),%rsi
000000000004add6	movq	%rbx,%rdi
000000000004add9	movq	%r14,%rdx
000000000004addc	call	*0x000392f6(%rip)
000000000004ade2	movq	0x0005ad37(%rip),%rsi
000000000004ade9	movq	0x0005ad98(%rip),%rdx
000000000004adf0	movq	%rbx,%rdi
000000000004adf3	call	*0x000392df(%rip)
000000000004adf9	movq	0x00059cb8(%rip),%rsi
000000000004ae00	movq	%r14,%rdi
000000000004ae03	call	*0x000392cf(%rip)
000000000004ae09	movq	0x00059cb0(%rip),%rsi
000000000004ae10	movq	%rax,%rdi
000000000004ae13	call	*0x000392bf(%rip)
000000000004ae19	movq	0x00059ca8(%rip),%rsi
000000000004ae20	movq	%rax,%rdi
000000000004ae23	movq	%rbx,%rdx
000000000004ae26	movq	0x000392ab(%rip),%rax
000000000004ae2d	popq	%rbx
000000000004ae2e	popq	%r14
000000000004ae30	popq	%rbp
000000000004ae31	jmp	*%rax
-[PBXGDB_TemporaryBreakpointSequence execute]:
000000000004ae33	pushq	%rbp
000000000004ae34	movq	%rsp,%rbp
000000000004ae37	pushq	%r14
000000000004ae39	pushq	%rbx
000000000004ae3a	movq	%rdi,%rbx
000000000004ae3d	movq	0x00064784(%rip),%rax
000000000004ae44	movq	(%rbx,%rax),%rdx
000000000004ae48	movq	0x0005d019(%rip),%rsi
000000000004ae4f	movq	0x0005da7a(%rip),%rdi
000000000004ae56	call	*0x0003927c(%rip)
000000000004ae5c	movq	%rax,%r14
000000000004ae5f	movq	0x00059c22(%rip),%rsi
000000000004ae66	movq	%r14,%rdi
000000000004ae69	movq	%rbx,%rdx
000000000004ae6c	call	*0x00039266(%rip)
000000000004ae72	movq	0x00059c1f(%rip),%rsi
000000000004ae79	movq	0x0005cff0(%rip),%rdx
000000000004ae80	movq	%r14,%rdi
000000000004ae83	call	*0x0003924f(%rip)
000000000004ae89	movq	0x00059c28(%rip),%rsi
000000000004ae90	movq	%rbx,%rdi
000000000004ae93	call	*0x0003923f(%rip)
000000000004ae99	movq	0x00059c20(%rip),%rsi
000000000004aea0	movq	%rax,%rdi
000000000004aea3	call	*0x0003922f(%rip)
000000000004aea9	movq	0x0005b2b0(%rip),%rsi
000000000004aeb0	movq	%rax,%rdi
000000000004aeb3	movq	%r14,%rdx
000000000004aeb6	movl	$0x00000001,%ecx
000000000004aebb	movq	0x00039216(%rip),%rax
000000000004aec2	popq	%rbx
000000000004aec3	popq	%r14
000000000004aec5	popq	%rbp
000000000004aec6	jmp	*%rax
+[PBXGDB_BreakpointActionEvaluateExpressionSequence sequenceWithBreakpoint:andAction:]:
000000000004aec8	pushq	%rbp
000000000004aec9	movq	%rsp,%rbp
000000000004aecc	pushq	%r15
000000000004aece	pushq	%r14
000000000004aed0	pushq	%rbx
000000000004aed1	pushq	%rax
000000000004aed2	movq	%rcx,%r14
000000000004aed5	movq	%rdx,%r15
000000000004aed8	movq	0x0005dbe1(%rip),%rdi
000000000004aedf	leaq	0x0005d3fa(%rip),%rsi
000000000004aee6	call	*0x0005d3f4(%rip)
000000000004aeec	movq	0x00059b7d(%rip),%rsi
000000000004aef3	movq	%rax,%rdi
000000000004aef6	call	*0x000391dc(%rip)
000000000004aefc	movq	%rax,%rbx
000000000004aeff	testq	%rbx,%rbx
000000000004af02	je	0x0004af28
000000000004af04	movq	0x000646c5(%rip),%rdx
000000000004af0b	movq	%r15,%rdi
000000000004af0e	movq	%rbx,%rsi
000000000004af11	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000004af16	movq	0x000646bb(%rip),%rdx
000000000004af1d	movq	%r14,%rdi
000000000004af20	movq	%rbx,%rsi
000000000004af23	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000004af28	movq	%rbx,%rax
000000000004af2b	addq	$0x08,%rsp
000000000004af2f	popq	%rbx
000000000004af30	popq	%r14
000000000004af32	popq	%r15
000000000004af34	popq	%rbp
000000000004af35	ret
-[PBXGDB_BreakpointActionEvaluateExpressionSequence execute]:
000000000004af36	pushq	%rbp
000000000004af37	movq	%rsp,%rbp
000000000004af3a	pushq	%r15
000000000004af3c	pushq	%r14
000000000004af3e	pushq	%r13
000000000004af40	pushq	%r12
000000000004af42	pushq	%rbx
000000000004af43	subq	$0x18,%rsp
000000000004af47	movq	%rdi,%r12
000000000004af4a	movq	0x00064687(%rip),%rax
000000000004af51	movq	(%r12,%rax),%rdi
000000000004af55	movq	0x0005cf1c(%rip),%rsi
000000000004af5c	call	*0x00039176(%rip)
000000000004af62	movq	%rax,0xd0(%rbp)
000000000004af66	leaq	0x0005d3a3(%rip),%rsi
000000000004af6d	movq	%rax,%rdi
000000000004af70	call	*0x0005d39a(%rip)
000000000004af76	movq	%rax,%r15
000000000004af79	testq	%r15,%r15
000000000004af7c	jle	0x0004b030
000000000004af82	xorl	%ebx,%ebx
000000000004af84	leaq	0xff(%r15),%rax
000000000004af88	movq	%rax,0xc8(%rbp)
000000000004af8c	movq	0x00039145(%rip),%r14
000000000004af93	movq	0xd0(%rbp),%rdi
000000000004af97	leaq	0x0005d382(%rip),%rsi
000000000004af9e	movq	%rbx,%rdx
000000000004afa1	call	*0x0005d379(%rip)
000000000004afa7	movq	0x0005d9a2(%rip),%rdi
000000000004afae	movq	0x0005cecb(%rip),%rsi
000000000004afb5	movq	%rax,%rdx
000000000004afb8	call	*%r14
000000000004afbb	movq	%rax,%r13
000000000004afbe	movq	%r13,%rdi
000000000004afc1	movq	0x00059ac0(%rip),%rsi
000000000004afc8	movq	%r12,%rdx
000000000004afcb	call	*%r14
000000000004afce	movq	%r13,%rdi
000000000004afd1	movq	0x00059ac0(%rip),%rsi
000000000004afd8	movq	0x0005cea9(%rip),%rdx
000000000004afdf	call	*%r14
000000000004afe2	cmpq	%rbx,0xc8(%rbp)
000000000004afe6	jne	0x0004affa
000000000004afe8	movq	%r13,%rdi
000000000004afeb	movq	%r12,%rsi
000000000004afee	movq	0x000645eb(%rip),%rdx
000000000004aff5	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000004affa	movq	%r12,%rdi
000000000004affd	movq	0x00059ab4(%rip),%rsi
000000000004b004	call	*%r14
000000000004b007	movq	%rax,%rdi
000000000004b00a	movq	0x00059aaf(%rip),%rsi
000000000004b011	call	*%r14
000000000004b014	movq	%rax,%rdi
000000000004b017	movq	0x00059aaa(%rip),%rsi
000000000004b01e	movq	%r13,%rdx
000000000004b021	call	*%r14
000000000004b024	incq	%rbx
000000000004b027	cmpq	%rbx,%r15
000000000004b02a	jne	0x0004af93
000000000004b030	addq	$0x18,%rsp
000000000004b034	popq	%rbx
000000000004b035	popq	%r12
000000000004b037	popq	%r13
000000000004b039	popq	%r14
000000000004b03b	popq	%r15
000000000004b03d	popq	%rbp
000000000004b03e	ret
-[PBXGDB_BreakpointActionEvaluateExpressionSequence breakpointActionExpressionEvaluated:]:
000000000004b03f	pushq	%rbp
000000000004b040	movq	%rsp,%rbp
000000000004b043	pushq	%r15
000000000004b045	pushq	%r14
000000000004b047	pushq	%r12
000000000004b049	pushq	%rbx
000000000004b04a	movq	%rdx,%r14
000000000004b04d	movq	%rdi,%r15
000000000004b050	movq	0x00059a79(%rip),%rsi
000000000004b057	movq	0x0003907a(%rip),%rbx
000000000004b05e	movq	%r14,%rdi
000000000004b061	call	*%rbx
000000000004b063	movq	0x00059a6e(%rip),%rsi
000000000004b06a	leaq	0x000650c7(%rip),%rdx
000000000004b071	movq	%rax,%rdi
000000000004b074	call	*%rbx
000000000004b076	movq	0x00059a8b(%rip),%rsi
000000000004b07d	movq	%rax,%rdi
000000000004b080	call	*%rbx
000000000004b082	movq	%rax,%r12
000000000004b085	leaq	0x000689ac(%rip),%rdx
000000000004b08c	movq	0x0005a245(%rip),%rsi
000000000004b093	movq	%r12,%rdi
000000000004b096	call	*%rbx
000000000004b098	testq	%rax,%rax
000000000004b09b	jne	0x0004b0f5
000000000004b09d	movq	0x0005a234(%rip),%rsi
000000000004b0a4	leaq	0x000646ad(%rip),%rdx
000000000004b0ab	movq	%r12,%rdi
000000000004b0ae	call	*0x00039024(%rip)
000000000004b0b4	movq	%rax,%rbx
000000000004b0b7	movq	$0x7fffffffffffffff,%rax
000000000004b0c1	cmpq	%rax,%rbx
000000000004b0c4	je	0x0004b0f5
000000000004b0c6	leaq	0x0005d223(%rip),%rsi
000000000004b0cd	movq	%r12,%rdi
000000000004b0d0	call	*0x0005d21a(%rip)
000000000004b0d6	incq	%rbx
000000000004b0d9	subq	%rbx,%rax
000000000004b0dc	movq	0x00059a75(%rip),%rsi
000000000004b0e3	movq	%r12,%rdi
000000000004b0e6	movq	%rbx,%rdx
000000000004b0e9	movq	%rax,%rcx
000000000004b0ec	call	*0x00038fe6(%rip)
000000000004b0f2	movq	%rax,%r12
000000000004b0f5	testq	%r12,%r12
000000000004b0f8	jne	0x0004b14e
000000000004b0fa	movq	0x0005d34f(%rip),%r12
000000000004b101	movq	0x000599c8(%rip),%rsi
000000000004b108	movq	0x00038fc9(%rip),%rbx
000000000004b10f	movq	%r14,%rdi
000000000004b112	call	*%rbx
000000000004b114	movq	0x000599bd(%rip),%rsi
000000000004b11b	leaq	0x00065bd6(%rip),%rdx
000000000004b122	movq	%rax,%rdi
000000000004b125	call	*%rbx
000000000004b127	movq	0x000599da(%rip),%rsi
000000000004b12e	movq	%rax,%rdi
000000000004b131	call	*%rbx
000000000004b133	leaq	0x0006b31e(%rip),%rdx
000000000004b13a	movq	0x00059a37(%rip),%rsi
000000000004b141	movq	%r12,%rdi
000000000004b144	movq	%rax,%rcx
000000000004b147	xorb	%al,%al
000000000004b149	call	*%rbx
000000000004b14b	movq	%rax,%r12
000000000004b14e	movq	0x0005b2eb(%rip),%rsi
000000000004b155	movq	0x00038f7c(%rip),%rbx
000000000004b15c	movq	%r14,%rdi
000000000004b15f	call	*%rbx
000000000004b161	movq	0x0005add0(%rip),%rsi
000000000004b168	movq	%rax,%rdi
000000000004b16b	movq	%r12,%rdx
000000000004b16e	call	*%rbx
000000000004b170	movq	0x00064461(%rip),%rax
000000000004b177	movq	(%r15,%rax),%rdi
000000000004b17b	movq	0x0005bfde(%rip),%rsi
000000000004b182	call	*%rbx
000000000004b184	testb	%al,%al
000000000004b186	je	0x0004b1c9
000000000004b188	movq	0x00059929(%rip),%rsi
000000000004b18f	movq	0x00038f42(%rip),%rbx
000000000004b196	movq	%r15,%rdi
000000000004b199	call	*%rbx
000000000004b19b	movq	0x0005a016(%rip),%rsi
000000000004b1a2	movq	%rax,%rdi
000000000004b1a5	call	*%rbx
000000000004b1a7	movq	0x0006442a(%rip),%rcx
000000000004b1ae	movq	(%r15,%rcx),%rcx
000000000004b1b2	movq	0x00064417(%rip),%rdx
000000000004b1b9	movq	(%r15,%rdx),%rdx
000000000004b1bd	movq	0x0005bf74(%rip),%rsi
000000000004b1c4	movq	%rax,%rdi
000000000004b1c7	call	*%rbx
000000000004b1c9	movq	0x00064410(%rip),%rax
000000000004b1d0	cmpq	%r14,(%r15,%rax)
000000000004b1d4	je	0x0004b1df
000000000004b1d6	popq	%rbx
000000000004b1d7	popq	%r12
000000000004b1d9	popq	%r14
000000000004b1db	popq	%r15
000000000004b1dd	popq	%rbp
000000000004b1de	ret
000000000004b1df	movq	0x00059952(%rip),%rsi
000000000004b1e6	movq	%r15,%rdi
000000000004b1e9	popq	%rbx
000000000004b1ea	popq	%r12
000000000004b1ec	popq	%r14
000000000004b1ee	popq	%r15
000000000004b1f0	popq	%rbp
000000000004b1f1	jmp	*0x00038ee1(%rip)
-[PBXGDB_BreakpointActionEvaluateExpressionSequence handleErrorForMICommand:]:
000000000004b1f7	pushq	%rbp
000000000004b1f8	movq	%rsp,%rbp
000000000004b1fb	movq	0x0005cc86(%rip),%rsi
000000000004b202	call	*0x00038ed0(%rip)
000000000004b208	movl	$0x00000001,%eax
000000000004b20d	popq	%rbp
000000000004b20e	ret
-[PBXGDB_TurnBreakpointsOnOffSequence handleErrorForMICommand:]:
000000000004b20f	pushq	%rbp
000000000004b210	movq	%rsp,%rbp
000000000004b213	movq	0x0005991e(%rip),%rsi
000000000004b21a	call	*0x00038eb8(%rip)
000000000004b220	xorl	%eax,%eax
000000000004b222	popq	%rbp
000000000004b223	ret
-[PBXGDB_BreakpointInfo addNewContextWithGDBNumber:address:shlibPath:]:
000000000004b224	pushq	%rbp
000000000004b225	movq	%rsp,%rbp
000000000004b228	pushq	%r15
000000000004b22a	pushq	%r14
000000000004b22c	pushq	%r13
000000000004b22e	pushq	%r12
000000000004b230	pushq	%rbx
000000000004b231	pushq	%rax
000000000004b232	movq	%r8,%r15
000000000004b235	movq	%rcx,%r12
000000000004b238	movq	%rdx,%r13
000000000004b23b	movq	%rdi,0xd0(%rbp)
000000000004b23f	movq	0x0005d9a2(%rip),%rdi
000000000004b246	leaq	0x0005d093(%rip),%rsi
000000000004b24d	call	*0x0005d08d(%rip)
000000000004b253	movq	0x00059816(%rip),%rsi
000000000004b25a	movq	0x00038e77(%rip),%r14
000000000004b261	movq	%rax,%rdi
000000000004b264	call	*%r14
000000000004b267	movq	%rax,%rbx
000000000004b26a	movq	0x0005c98f(%rip),%rsi
000000000004b271	movq	%rbx,%rdi
000000000004b274	movq	%r13,%rdx
000000000004b277	call	*%r14
000000000004b27a	movq	0x0005c997(%rip),%rsi
000000000004b281	movq	%rbx,%rdi
000000000004b284	movl	$0x00000001,%edx
000000000004b289	call	*%r14
000000000004b28c	movq	0x0005b25d(%rip),%rsi
000000000004b293	movq	%rbx,%rdi
000000000004b296	movq	%r12,%rdx
000000000004b299	call	*%r14
000000000004b29c	testq	%r15,%r15
000000000004b29f	je	0x0004b2cf
000000000004b2a1	leaq	0x0005d0b8(%rip),%rsi
000000000004b2a8	leaq	0x00064689(%rip),%rdx
000000000004b2af	movq	%r15,%rdi
000000000004b2b2	call	*0x0005d0a8(%rip)
000000000004b2b8	testb	%al,%al
000000000004b2ba	jne	0x0004b2cf
000000000004b2bc	movq	0x0005c985(%rip),%rsi
000000000004b2c3	movq	%rbx,%rdi
000000000004b2c6	movq	%r15,%rdx
000000000004b2c9	call	*0x00038e09(%rip)
000000000004b2cf	movq	0x0005c932(%rip),%rsi
000000000004b2d6	movq	0xd0(%rbp),%rdi
000000000004b2da	movq	%rbx,%rdx
000000000004b2dd	addq	$0x08,%rsp
000000000004b2e1	popq	%rbx
000000000004b2e2	popq	%r12
000000000004b2e4	popq	%r13
000000000004b2e6	popq	%r14
000000000004b2e8	popq	%r15
000000000004b2ea	popq	%rbp
000000000004b2eb	jmp	*0x00038de7(%rip)
-[PBXGDB_BreakpointInfo removeGDBContextWithGDBNumber:]:
000000000004b2f1	pushq	%rbp
000000000004b2f2	movq	%rsp,%rbp
000000000004b2f5	pushq	%rbx
000000000004b2f6	pushq	%rax
000000000004b2f7	movq	%rdi,%rbx
000000000004b2fa	movq	0x0005b1e7(%rip),%rsi
000000000004b301	call	*0x00038dd1(%rip)
000000000004b307	movq	0x000642e2(%rip),%rcx
000000000004b30e	movq	(%rbx,%rcx),%rdi
000000000004b312	movq	0x00059a07(%rip),%rsi
000000000004b319	movq	%rax,%rdx
000000000004b31c	movq	0x00038db5(%rip),%rax
000000000004b323	addq	$0x08,%rsp
000000000004b327	popq	%rbx
000000000004b328	popq	%rbp
000000000004b329	jmp	*%rax
-[PBXGDB_BreakpointGDBContext address]:
000000000004b32b	pushq	%rbp
000000000004b32c	movq	%rsp,%rbp
000000000004b32f	movq	0x000642e2(%rip),%rax
000000000004b336	movq	(%rdi,%rax),%rcx
000000000004b33a	leaq	0x000645f7(%rip),%rax
000000000004b341	testq	%rcx,%rcx
000000000004b344	cmovneq	%rcx,%rax
000000000004b348	popq	%rbp
000000000004b349	ret
-[PBXGDB_BreakpointGDBContext setTargetProductPath:]:
000000000004b34a	pushq	%rbp
000000000004b34b	movq	%rsp,%rbp
000000000004b34e	movq	%rdx,%rax
000000000004b351	movq	%rdi,%rcx
000000000004b354	movq	0x000642c5(%rip),%rdx
000000000004b35b	movq	%rax,%rdi
000000000004b35e	movq	%rcx,%rsi
000000000004b361	popq	%rbp
000000000004b362	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_BreakpointGDBContext setDynamicLinkerImage:]:
000000000004b367	pushq	%rbp
000000000004b368	movq	%rsp,%rbp
000000000004b36b	movq	%rdx,%rax
000000000004b36e	movq	%rdi,%rcx
000000000004b371	movq	0x000642b0(%rip),%rdx
000000000004b378	movq	%rax,%rdi
000000000004b37b	movq	%rcx,%rsi
000000000004b37e	popq	%rbp
000000000004b37f	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[PBXGDB_BreakpointGDBContext dynamicLinkerImage]:
000000000004b384	pushq	%rbp
000000000004b385	movq	%rsp,%rbp
000000000004b388	movq	0x00064299(%rip),%rax
000000000004b38f	movq	(%rdi,%rax),%rax
000000000004b393	popq	%rbp
000000000004b394	ret
-[DBGGDBProcess displayStatus]:
000000000004b395	pushq	%rbp
000000000004b396	movq	%rsp,%rbp
000000000004b399	pushq	%r15
000000000004b39b	pushq	%r14
000000000004b39d	pushq	%rbx
000000000004b39e	pushq	%rax
000000000004b39f	movq	%rdi,%r14
000000000004b3a2	movq	0x0005caff(%rip),%rsi
000000000004b3a9	movq	0x00038d28(%rip),%r15
000000000004b3b0	call	*%r15
000000000004b3b3	movb	%al,%bl
000000000004b3b5	movq	0x0005c19c(%rip),%rsi
000000000004b3bc	movq	%r14,%rdi
000000000004b3bf	call	*%r15
000000000004b3c2	movq	%rax,%rdi
000000000004b3c5	testb	%bl,%bl
000000000004b3c7	je	0x0004b3d2
000000000004b3c9	movq	0x0005cae0(%rip),%rsi
000000000004b3d0	jmp	0x0004b3d9
000000000004b3d2	movq	0x0005c227(%rip),%rsi
000000000004b3d9	call	*0x00038cf9(%rip)
000000000004b3df	movl	%eax,%ebx
000000000004b3e1	movq	0x0005c170(%rip),%rsi
000000000004b3e8	movq	%r14,%rdi
000000000004b3eb	call	*0x00038ce7(%rip)
000000000004b3f1	movq	0x0005cac0(%rip),%rsi
000000000004b3f8	movq	%rax,%rdi
000000000004b3fb	movl	%ebx,%edx
000000000004b3fd	movq	0x00038cd4(%rip),%rax
000000000004b404	addq	$0x08,%rsp
000000000004b408	popq	%rbx
000000000004b409	popq	%r14
000000000004b40b	popq	%r15
000000000004b40d	popq	%rbp
000000000004b40e	jmp	*%rax
-[DBGGDBProcess rawMemoryDataForAddressExpression:numberOfBytes:resultHandler:]:
000000000004b410	pushq	%rbp
000000000004b411	movq	%rsp,%rbp
000000000004b414	pushq	%r15
000000000004b416	pushq	%r14
000000000004b418	pushq	%rbx
000000000004b419	pushq	%rax
000000000004b41a	movq	%r8,%r14
000000000004b41d	movq	%rcx,%r15
000000000004b420	movq	%rdx,%rbx
000000000004b423	movq	0x0005c306(%rip),%rsi
000000000004b42a	call	*0x00038ca8(%rip)
000000000004b430	movq	0x00059681(%rip),%rsi
000000000004b437	movq	%rax,%rdi
000000000004b43a	call	*0x00038c98(%rip)
000000000004b440	movq	0x0005caa1(%rip),%rsi
000000000004b447	movq	%rax,%rdi
000000000004b44a	movq	%rbx,%rdx
000000000004b44d	movq	%r15,%rcx
000000000004b450	movq	%r14,%r8
000000000004b453	movq	0x00038c7e(%rip),%rax
000000000004b45a	addq	$0x08,%rsp
000000000004b45e	popq	%rbx
000000000004b45f	popq	%r14
000000000004b461	popq	%r15
000000000004b463	popq	%rbp
000000000004b464	jmp	*%rax
-[DBGGDBProcess readMemoryAtAddress:numberOfBytes:resultHandler:]:
000000000004b466	pushq	%rbp
000000000004b467	movq	%rsp,%rbp
000000000004b46a	pushq	%r15
000000000004b46c	pushq	%r14
000000000004b46e	pushq	%r13
000000000004b470	pushq	%r12
000000000004b472	pushq	%rbx
000000000004b473	pushq	%rax
000000000004b474	movq	%r8,0xd0(%rbp)
000000000004b478	movq	%rcx,%r15
000000000004b47b	movq	%rdx,%r13
000000000004b47e	movq	%rdi,%r12
000000000004b481	movq	0x0005d818(%rip),%rdi
000000000004b488	leaq	0x0005ce51(%rip),%rsi
000000000004b48f	call	*0x0005ce4b(%rip)
000000000004b495	movq	0x000595d4(%rip),%rsi
000000000004b49c	movq	0x00038c35(%rip),%r14
000000000004b4a3	movq	%rax,%rdi
000000000004b4a6	call	*%r14
000000000004b4a9	movq	%rax,%rbx
000000000004b4ac	leaq	0x0006b045(%rip),%rdx
000000000004b4b3	movq	0x000596be(%rip),%rsi
000000000004b4ba	movq	0x0005cf8f(%rip),%rdi
000000000004b4c1	movq	%r13,%rcx
000000000004b4c4	xorb	%al,%al
000000000004b4c6	call	*%r14
000000000004b4c9	movq	0x0005ca18(%rip),%rsi
000000000004b4d0	movq	%r12,%rdi
000000000004b4d3	movq	%rax,%rdx
000000000004b4d6	movq	%r15,%rcx
000000000004b4d9	movq	0xd0(%rbp),%r8
000000000004b4dd	call	*%r14
000000000004b4e0	movq	%rbx,%rax
000000000004b4e3	addq	$0x08,%rsp
000000000004b4e7	popq	%rbx
000000000004b4e8	popq	%r12
000000000004b4ea	popq	%r13
000000000004b4ec	popq	%r14
000000000004b4ee	popq	%r15
000000000004b4f0	popq	%rbp
000000000004b4f1	ret
-[DBGGDBProcess isSendingConsoleCommand]:
000000000004b4f2	pushq	%rbp
000000000004b4f3	movq	%rsp,%rbp
000000000004b4f6	movq	0x00064143(%rip),%rax
000000000004b4fd	movb	(%rdi,%rax),%al
000000000004b500	movsbl	%al,%eax
000000000004b503	popq	%rbp
000000000004b504	ret
-[DBGGDBProcess setIsSendingConsoleCommand:]:
000000000004b505	pushq	%rbp
000000000004b506	movq	%rsp,%rbp
000000000004b509	movq	0x00064130(%rip),%rax
000000000004b510	movb	%dl,(%rdi,%rax)
000000000004b513	popq	%rbp
000000000004b514	ret
000000000004b515	nop
000000000004b516	nop
000000000004b517	nop
000000000004b518	nop
-[DBGGDBSession PBXProcess]:
000000000004b519	pushq	%rbp
000000000004b51a	movq	%rsp,%rbp
000000000004b51d	movq	0x0005999c(%rip),%rsi
000000000004b524	call	*0x00038bae(%rip)
000000000004b52a	movq	0x0005c98f(%rip),%rsi
000000000004b531	movq	%rax,%rdi
000000000004b534	movq	0x00038b9d(%rip),%rax
000000000004b53b	popq	%rbp
000000000004b53c	jmp	*%rax
-[DBGGDBSession launcher]:
000000000004b53e	pushq	%rbp
000000000004b53f	movq	%rsp,%rbp
000000000004b542	subq	$0x10,%rsp
000000000004b546	movq	%rdi,0xf0(%rbp)
000000000004b54a	movq	0x0005db67(%rip),%rax
000000000004b551	movq	%rax,0xf8(%rbp)
000000000004b555	movq	0x0005c27c(%rip),%rsi
000000000004b55c	leaq	0xf0(%rbp),%rdi
000000000004b560	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000004b565	addq	$0x10,%rsp
000000000004b569	popq	%rbp
000000000004b56a	ret
000000000004b56b	nop
000000000004b56c	nop
000000000004b56d	nop
000000000004b56e	nop
000000000004b56f	nop
000000000004b570	nop
000000000004b571	nop
000000000004b572	nop
-[DBGGDBSession requestPause:]:
000000000004b573	pushq	%rbp
000000000004b574	movq	%rsp,%rbp
000000000004b577	movq	0x0005c1b2(%rip),%rsi
000000000004b57e	call	*0x00038b54(%rip)
000000000004b584	movq	0x0005952d(%rip),%rsi
000000000004b58b	movq	%rax,%rdi
000000000004b58e	call	*0x00038b44(%rip)
000000000004b594	movq	0x0005c275(%rip),%rsi
000000000004b59b	movq	%rax,%rdi
000000000004b59e	movq	0x00038b33(%rip),%rax
000000000004b5a5	popq	%rbp
000000000004b5a6	jmp	*%rax
-[DBGGDBSession requestContinue:]:
000000000004b5a8	pushq	%rbp
000000000004b5a9	movq	%rsp,%rbp
000000000004b5ac	movq	0x0005c94d(%rip),%rsi
000000000004b5b3	call	*0x00038b1f(%rip)
000000000004b5b9	movq	0x0005c970(%rip),%rsi
000000000004b5c0	movq	%rax,%rdi
000000000004b5c3	movq	0x00038b0e(%rip),%rax
000000000004b5ca	popq	%rbp
000000000004b5cb	jmp	*%rax
-[DBGGDBSession requestStop:]:
000000000004b5cd	pushq	%rbp
000000000004b5ce	movq	%rsp,%rbp
000000000004b5d1	movq	0x0005c158(%rip),%rsi
000000000004b5d8	call	*0x00038afa(%rip)
000000000004b5de	movq	0x000599eb(%rip),%rsi
000000000004b5e5	movq	%rax,%rdi
000000000004b5e8	movq	0x00038ae9(%rip),%rax
000000000004b5ef	popq	%rbp
000000000004b5f0	jmp	*%rax
-[DBGGDBSession requestStepIntoInstruction:]:
000000000004b5f2	pushq	%rbp
000000000004b5f3	movq	%rsp,%rbp
000000000004b5f6	pushq	%r14
000000000004b5f8	pushq	%rbx
000000000004b5f9	subq	$0x10,%rsp
000000000004b5fd	movq	%rdi,%rbx
000000000004b600	movq	%rbx,0xe0(%rbp)
000000000004b604	movq	0x0005daad(%rip),%rax
000000000004b60b	movq	%rax,0xe8(%rbp)
000000000004b60f	movq	0x0005c922(%rip),%rsi
000000000004b616	leaq	0xe0(%rbp),%rdi
000000000004b61a	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000004b61f	movq	0x00038ab2(%rip),%r14
000000000004b626	movq	0x0005c8d3(%rip),%rsi
000000000004b62d	movq	%rbx,%rdi
000000000004b630	call	*%r14
000000000004b633	movq	0x0005c906(%rip),%rsi
000000000004b63a	movq	%rax,%rdi
000000000004b63d	call	*%r14
000000000004b640	addq	$0x10,%rsp
000000000004b644	popq	%rbx
000000000004b645	popq	%r14
000000000004b647	popq	%rbp
000000000004b648	ret
-[DBGGDBSession requestStepOverInstruction:]:
000000000004b649	pushq	%rbp
000000000004b64a	movq	%rsp,%rbp
000000000004b64d	pushq	%r14
000000000004b64f	pushq	%rbx
000000000004b650	subq	$0x10,%rsp
000000000004b654	movq	%rdi,%rbx
000000000004b657	movq	%rbx,0xe0(%rbp)
000000000004b65b	movq	0x0005da56(%rip),%rax
000000000004b662	movq	%rax,0xe8(%rbp)
000000000004b666	movq	0x0005c8db(%rip),%rsi
000000000004b66d	leaq	0xe0(%rbp),%rdi
000000000004b671	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000004b676	movq	0x00038a5b(%rip),%r14
000000000004b67d	movq	0x0005c87c(%rip),%rsi
000000000004b684	movq	%rbx,%rdi
000000000004b687	call	*%r14
000000000004b68a	movq	0x0005c8bf(%rip),%rsi
000000000004b691	movq	%rax,%rdi
000000000004b694	call	*%r14
000000000004b697	addq	$0x10,%rsp
000000000004b69b	popq	%rbx
000000000004b69c	popq	%r14
000000000004b69e	popq	%rbp
000000000004b69f	ret
-[DBGGDBSession requestStepInSuspendOtherThreads:]:
000000000004b6a0	pushq	%rbp
000000000004b6a1	movq	%rsp,%rbp
000000000004b6a4	pushq	%r14
000000000004b6a6	pushq	%rbx
000000000004b6a7	subq	$0x10,%rsp
000000000004b6ab	movq	%rdi,%rbx
000000000004b6ae	movq	%rbx,0xe0(%rbp)
000000000004b6b2	movq	0x0005d9ff(%rip),%rax
000000000004b6b9	movq	%rax,0xe8(%rbp)
000000000004b6bd	movq	0x0005c894(%rip),%rsi
000000000004b6c4	leaq	0xe0(%rbp),%rdi
000000000004b6c8	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000004b6cd	movq	0x00038a04(%rip),%r14
000000000004b6d4	movq	0x0005c825(%rip),%rsi
000000000004b6db	movq	%rbx,%rdi
000000000004b6de	call	*%r14
000000000004b6e1	movq	0x0005c878(%rip),%rsi
000000000004b6e8	movq	%rax,%rdi
000000000004b6eb	call	*%r14
000000000004b6ee	addq	$0x10,%rsp
000000000004b6f2	popq	%rbx
000000000004b6f3	popq	%r14
000000000004b6f5	popq	%rbp
000000000004b6f6	ret
-[DBGGDBSession requestStepOverSuspendOtherThreads:]:
000000000004b6f7	pushq	%rbp
000000000004b6f8	movq	%rsp,%rbp
000000000004b6fb	pushq	%r14
000000000004b6fd	pushq	%rbx
000000000004b6fe	subq	$0x10,%rsp
000000000004b702	movq	%rdi,%rbx
000000000004b705	movq	%rbx,0xe0(%rbp)
000000000004b709	movq	0x0005d9a8(%rip),%rax
000000000004b710	movq	%rax,0xe8(%rbp)
000000000004b714	movq	0x0005c84d(%rip),%rsi
000000000004b71b	leaq	0xe0(%rbp),%rdi
000000000004b71f	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000004b724	movq	0x000389ad(%rip),%r14
000000000004b72b	movq	0x0005c7ce(%rip),%rsi
000000000004b732	movq	%rbx,%rdi
000000000004b735	call	*%r14
000000000004b738	movq	0x0005c831(%rip),%rsi
000000000004b73f	movq	%rax,%rdi
000000000004b742	call	*%r14
000000000004b745	addq	$0x10,%rsp
000000000004b749	popq	%rbx
000000000004b74a	popq	%r14
000000000004b74c	popq	%rbp
000000000004b74d	ret
-[DBGGDBSession requestStepIntoCallSymbol:atLocation:inContext:]:
000000000004b74e	pushq	%rbp
000000000004b74f	movq	%rsp,%rbp
000000000004b752	pushq	%r15
000000000004b754	pushq	%r14
000000000004b756	pushq	%r13
000000000004b758	pushq	%r12
000000000004b75a	pushq	%rbx
000000000004b75b	subq	$0x48,%rsp
000000000004b75f	movq	%rcx,%r13
000000000004b762	movq	%rdx,0xb8(%rbp)
000000000004b766	movq	%rdi,%r12
000000000004b769	movq	%r12,0xd0(%rbp)
000000000004b76d	movq	%rsi,0xc8(%rbp)
000000000004b771	movq	0x0005bfb8(%rip),%rsi
000000000004b778	movq	0x00038959(%rip),%r14
000000000004b77f	call	*%r14
000000000004b782	movq	0x0005932f(%rip),%rsi
000000000004b789	movq	%rax,%rdi
000000000004b78c	call	*%r14
000000000004b78f	movq	%rax,0xb0(%rbp)
000000000004b793	movq	0x0005b056(%rip),%rsi
000000000004b79a	movq	%r13,%rdi
000000000004b79d	call	*%r14
000000000004b7a0	movq	0x0005c5e9(%rip),%rsi
000000000004b7a7	movq	%rax,%rdi
000000000004b7aa	call	*%r14
000000000004b7ad	movq	%rax,%rbx
000000000004b7b0	movq	%rbx,0xc0(%rbp)
000000000004b7b4	movq	0x0005b02d(%rip),%rsi
000000000004b7bb	movq	%r13,%rdi
000000000004b7be	call	*%r14
000000000004b7c1	movq	%rax,%r15
000000000004b7c4	movq	0x000596f5(%rip),%rsi
000000000004b7cb	movq	%r12,%rdi
000000000004b7ce	call	*%r14
000000000004b7d1	movq	0x000596f8(%rip),%rsi
000000000004b7d8	movq	%rax,%rdi
000000000004b7db	call	*%r14
000000000004b7de	movq	%rax,%r14
000000000004b7e1	testq	%rbx,%rbx
000000000004b7e4	jne	0x0004b833
000000000004b7e6	leaq	0x00019854(%rip),%rax
000000000004b7ed	leaq	0x00064044(%rip),%rcx
000000000004b7f4	leaq	0x00019851(%rip),%rdx
000000000004b7fb	movq	%rdx,0x10(%rsp)
000000000004b800	movq	%rcx,0x08(%rsp)
000000000004b805	movq	%rax,(%rsp)
000000000004b809	leaq	0xd0(%rbp),%rdi
000000000004b80d	leaq	0xc8(%rbp),%rsi
000000000004b811	leaq	0x0001979a(%rip),%rdx
000000000004b818	leaq	0x000197d4(%rip),%rcx
000000000004b81f	leaq	0x000688b2(%rip),%r9
000000000004b826	movl	$0x0000008f,%r8d
000000000004b82c	xorb	%al,%al
000000000004b82e	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000004b833	incq	%r15
000000000004b836	movq	0x0005c73b(%rip),%rsi
000000000004b83d	movq	0x00038894(%rip),%r12
000000000004b844	movq	%r14,%rdi
000000000004b847	call	*%r12
000000000004b84a	movq	%rax,%rbx
000000000004b84d	movq	0x0005af9c(%rip),%rsi
000000000004b854	movq	%r13,%rdi
000000000004b857	call	*%r12
000000000004b85a	movq	0x0005c71f(%rip),%rsi
000000000004b861	movq	%rbx,%rdi
000000000004b864	movq	%rax,%rdx
000000000004b867	call	*%r12
000000000004b86a	testb	%al,%al
000000000004b86c	je	0x0004b89d
000000000004b86e	movq	0x00059a33(%rip),%rsi
000000000004b875	movq	0x0003885c(%rip),%rbx
000000000004b87c	movq	%r14,%rdi
000000000004b87f	call	*%rbx
000000000004b881	movq	0x00059a58(%rip),%rsi
000000000004b888	movq	%rax,%rdi
000000000004b88b	call	*%rbx
000000000004b88d	cmpq	%rax,%r15
000000000004b890	jne	0x0004b89d
000000000004b892	leaq	0x00068bdf(%rip),%rax
000000000004b899	movq	%rax,0xc0(%rbp)
000000000004b89d	movq	0x0005c6e4(%rip),%rsi
000000000004b8a4	movq	0xb0(%rbp),%rdi
000000000004b8a8	movq	0xb8(%rbp),%rdx
000000000004b8ac	movq	0xc0(%rbp),%rcx
000000000004b8b0	movq	%r15,%r8
000000000004b8b3	call	*0x0003881f(%rip)
000000000004b8b9	addq	$0x48,%rsp
000000000004b8bd	popq	%rbx
000000000004b8be	popq	%r12
000000000004b8c0	popq	%r13
000000000004b8c2	popq	%r14
000000000004b8c4	popq	%r15
000000000004b8c6	popq	%rbp
000000000004b8c7	ret
-[DBGGDBSession requestContinueToLocation:inContext:]:
000000000004b8c8	pushq	%rbp
000000000004b8c9	movq	%rsp,%rbp
000000000004b8cc	pushq	%r15
000000000004b8ce	pushq	%r14
000000000004b8d0	pushq	%r12
000000000004b8d2	pushq	%rbx
000000000004b8d3	subq	$0x30,%rsp
000000000004b8d7	movq	%rdx,%r12
000000000004b8da	movq	%rdi,0xd8(%rbp)
000000000004b8de	movq	%rsi,0xd0(%rbp)
000000000004b8e2	movq	0x0005be47(%rip),%rsi
000000000004b8e9	movq	0x000387e8(%rip),%rbx
000000000004b8f0	call	*%rbx
000000000004b8f2	movq	0x000591bf(%rip),%rsi
000000000004b8f9	movq	%rax,%rdi
000000000004b8fc	call	*%rbx
000000000004b8fe	movq	%rax,%r14
000000000004b901	movq	0x0005aee8(%rip),%rsi
000000000004b908	movq	%r12,%rdi
000000000004b90b	call	*%rbx
000000000004b90d	movq	0x0005c47c(%rip),%rsi
000000000004b914	movq	%rax,%rdi
000000000004b917	call	*%rbx
000000000004b919	movq	%rax,%r15
000000000004b91c	movq	0x0005aec5(%rip),%rsi
000000000004b923	movq	%r12,%rdi
000000000004b926	call	*%rbx
000000000004b928	movq	%rax,%rbx
000000000004b92b	incq	%rbx
000000000004b92e	testq	%r15,%r15
000000000004b931	jne	0x0004b980
000000000004b933	leaq	0x00019707(%rip),%rax
000000000004b93a	leaq	0x00063ef7(%rip),%rcx
000000000004b941	leaq	0x00019704(%rip),%rdx
000000000004b948	movq	%rdx,0x10(%rsp)
000000000004b94d	movq	%rcx,0x08(%rsp)
000000000004b952	movq	%rax,(%rsp)
000000000004b956	leaq	0xd8(%rbp),%rdi
000000000004b95a	leaq	0xd0(%rbp),%rsi
000000000004b95e	leaq	0x000196fb(%rip),%rdx
000000000004b965	leaq	0x00019687(%rip),%rcx
000000000004b96c	leaq	0x00068765(%rip),%r9
000000000004b973	movl	$0x000000a1,%r8d
000000000004b979	xorb	%al,%al
000000000004b97b	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000004b980	movq	0x0005c609(%rip),%rsi
000000000004b987	movq	%r14,%rdi
000000000004b98a	movq	%r15,%rdx
000000000004b98d	movq	%rbx,%rcx
000000000004b990	call	*0x00038742(%rip)
000000000004b996	addq	$0x30,%rsp
000000000004b99a	popq	%rbx
000000000004b99b	popq	%r12
000000000004b99d	popq	%r14
000000000004b99f	popq	%r15
000000000004b9a1	popq	%rbp
000000000004b9a2	ret
-[DBGGDBSession executeDebuggerCommand:threadID:frameID:]:
000000000004b9a3	pushq	%rbp
000000000004b9a4	movq	%rsp,%rbp
000000000004b9a7	pushq	%rbx
000000000004b9a8	pushq	%rax
000000000004b9a9	movq	%rdx,%rbx
000000000004b9ac	movq	0x0005bd7d(%rip),%rsi
000000000004b9b3	call	*0x0003871f(%rip)
000000000004b9b9	movq	0x000590f8(%rip),%rsi
000000000004b9c0	movq	%rax,%rdi
000000000004b9c3	call	*0x0003870f(%rip)
000000000004b9c9	movq	0x0005c098(%rip),%rsi
000000000004b9d0	movq	%rax,%rdi
000000000004b9d3	movq	%rbx,%rdx
000000000004b9d6	movq	0x000386fb(%rip),%rax
000000000004b9dd	addq	$0x08,%rsp
000000000004b9e1	popq	%rbx
000000000004b9e2	popq	%rbp
000000000004b9e3	jmp	*%rax
-[DBGGDBSession supportsPCAnnotationDragging]:
000000000004b9e5	pushq	%rbp
000000000004b9e6	movq	%rsp,%rbp
000000000004b9e9	movl	$0x00000001,%eax
000000000004b9ee	popq	%rbp
000000000004b9ef	ret
-[DBGGDBSession loadDebugSymbolsForSharedLibrary:]:
000000000004b9f0	pushq	%rbp
000000000004b9f1	movq	%rsp,%rbp
000000000004b9f4	pushq	%r15
000000000004b9f6	pushq	%r14
000000000004b9f8	pushq	%rbx
000000000004b9f9	pushq	%rax
000000000004b9fa	movq	%rdx,%rbx
000000000004b9fd	movq	%rdi,%r14
000000000004ba00	movq	0x0005b151(%rip),%rsi
000000000004ba07	movq	%rbx,%rdi
000000000004ba0a	movl	$0x00000001,%edx
000000000004ba0f	call	*0x000386c3(%rip)
000000000004ba15	movq	0x0005d28c(%rip),%rdi
000000000004ba1c	leaq	0x0005c8bd(%rip),%rsi
000000000004ba23	call	*0x0005c8b7(%rip)
000000000004ba29	movq	0x00059040(%rip),%rsi
000000000004ba30	movq	%rax,%rdi
000000000004ba33	call	*0x0003869f(%rip)
000000000004ba39	movq	%rax,%r15
000000000004ba3c	movq	0x0005c555(%rip),%rsi
000000000004ba43	movq	%r15,%rdi
000000000004ba46	movq	%rbx,%rdx
000000000004ba49	call	*0x00038689(%rip)
000000000004ba4f	movq	0x0005bcda(%rip),%rsi
000000000004ba56	movq	%r14,%rdi
000000000004ba59	call	*0x00038679(%rip)
000000000004ba5f	movq	0x00059052(%rip),%rsi
000000000004ba66	movq	%rax,%rdi
000000000004ba69	call	*0x00038669(%rip)
000000000004ba6f	movq	0x0005935a(%rip),%rsi
000000000004ba76	movq	%rax,%rdi
000000000004ba79	call	*0x00038659(%rip)
000000000004ba7f	movq	0x00059352(%rip),%rsi
000000000004ba86	movq	%r15,%rdi
000000000004ba89	movq	%rax,%rdx
000000000004ba8c	call	*0x00038646(%rip)
000000000004ba92	movq	0x0005bc97(%rip),%rsi
000000000004ba99	movq	%r14,%rdi
000000000004ba9c	call	*0x00038636(%rip)
000000000004baa2	movq	0x0005900f(%rip),%rsi
000000000004baa9	movq	%rax,%rdi
000000000004baac	call	*0x00038626(%rip)
000000000004bab2	movq	0x00059317(%rip),%rsi
000000000004bab9	movq	%rax,%rdi
000000000004babc	call	*0x00038616(%rip)
000000000004bac2	movq	0x00059317(%rip),%rsi
000000000004bac9	movq	%rax,%rdi
000000000004bacc	movq	%r15,%rdx
000000000004bacf	movq	0x00038602(%rip),%rax
000000000004bad6	addq	$0x08,%rsp
000000000004bada	popq	%rbx
000000000004badb	popq	%r14
000000000004badd	popq	%r15
000000000004badf	popq	%rbp
000000000004bae0	jmp	*%rax
-[DBGGDBSession requestMovePCInStackFrame:toLineNumber:]:
000000000004bae2	pushq	%rbp
000000000004bae3	movq	%rsp,%rbp
000000000004bae6	pushq	%r15
000000000004bae8	pushq	%r14
000000000004baea	pushq	%r13
000000000004baec	pushq	%r12
000000000004baee	pushq	%rbx
000000000004baef	pushq	%rax
000000000004baf0	movq	%rcx,%r14
000000000004baf3	movq	%rdx,%rbx
000000000004baf6	movq	%rdi,%r15
000000000004baf9	movq	0x000593e0(%rip),%rsi
000000000004bb00	movq	%rbx,%rdi
000000000004bb03	call	*0x000385cf(%rip)
000000000004bb09	movq	%rax,%r12
000000000004bb0c	movq	0x0005bb5d(%rip),%rsi
000000000004bb13	movq	%r12,%rdi
000000000004bb16	call	*+[PBXGDB_MIBreakpointCommandCommand commandWithCommand:forBreakpointNum:](%rip)
000000000004bb1c	movq	0x0005bc0d(%rip),%rsi
000000000004bb23	movq	%r15,%rdi
000000000004bb26	call	*0x000385ac(%rip)
000000000004bb2c	movq	0x00058f85(%rip),%rsi
000000000004bb33	movq	%rax,%rdi
000000000004bb36	call	*0x0003859c(%rip)
000000000004bb3c	movq	%rax,%r15
000000000004bb3f	movq	0x0005c90a(%rip),%r13
000000000004bb46	movq	0x0005c42b(%rip),%rsi
000000000004bb4d	movq	%rbx,%rdi
000000000004bb50	call	*0x00038582(%rip)
000000000004bb56	movq	0x0005c233(%rip),%rsi
000000000004bb5d	movq	%rax,%rdi
000000000004bb60	call	*0x00038572(%rip)
000000000004bb66	movq	0x0005a393(%rip),%rsi
000000000004bb6d	movq	%rax,%rdi
000000000004bb70	call	*0x00038562(%rip)
000000000004bb76	leaq	0x0006a99b(%rip),%rdx
000000000004bb7d	movq	0x00058ff4(%rip),%rsi
000000000004bb84	movq	%r13,%rdi
000000000004bb87	movq	%rax,%rcx
000000000004bb8a	movq	%r14,%r8
000000000004bb8d	xorb	%al,%al
000000000004bb8f	call	*0x00038543(%rip)
000000000004bb95	movq	%rax,%rbx
000000000004bb98	movq	0x000596f9(%rip),%rsi
000000000004bb9f	movq	%r12,%rdi
000000000004bba2	call	*0x00038530(%rip)
000000000004bba8	movq	0x00059541(%rip),%rsi
000000000004bbaf	movq	%rax,%rdi
000000000004bbb2	call	*0x00038520(%rip)
000000000004bbb8	movq	0x0005c3e1(%rip),%rsi
000000000004bbbf	movq	%r15,%rdi
000000000004bbc2	movq	%rax,%rdx
000000000004bbc5	movq	%rbx,%rcx
000000000004bbc8	movq	0x00038509(%rip),%rax
000000000004bbcf	addq	$0x08,%rsp
000000000004bbd3	popq	%rbx
000000000004bbd4	popq	%r12
000000000004bbd6	popq	%r13
000000000004bbd8	popq	%r14
000000000004bbda	popq	%r15
000000000004bbdc	popq	%rbp
000000000004bbdd	jmp	*%rax
-[DBGGDBSession shouldRelinquishToDebugSession:error:]:
000000000004bbdf	pushq	%rbp
000000000004bbe0	movq	%rsp,%rbp
000000000004bbe3	pushq	%r15
000000000004bbe5	pushq	%r14
000000000004bbe7	pushq	%r13
000000000004bbe9	pushq	%r12
000000000004bbeb	pushq	%rbx
000000000004bbec	subq	$0x38,%rsp
000000000004bbf0	movq	%rcx,%r14
000000000004bbf3	movq	%rdx,%r15
000000000004bbf6	movq	%rsi,%r12
000000000004bbf9	movq	%rdi,%rbx
000000000004bbfc	movq	%rbx,0xd0(%rbp)
000000000004bc00	movq	%r12,0xc8(%rbp)
000000000004bc04	movq	0x0005919d(%rip),%rsi
000000000004bc0b	movq	0x000384c6(%rip),%r13
000000000004bc12	call	*%r13
000000000004bc15	movq	0x0005c38c(%rip),%rsi
000000000004bc1c	movq	%rax,%rdi
000000000004bc1f	call	*%r13
000000000004bc22	cmpq	%rbx,%rax
000000000004bc25	je	0x0004bc7a
000000000004bc27	movq	%r12,%rdi
000000000004bc2a	callq	0x0004e5cc	; symbol stub for: _NSStringFromSelector
000000000004bc2f	leaq	0x00063c02(%rip),%rcx
000000000004bc36	leaq	0x000194e0(%rip),%rdx
000000000004bc3d	movq	%rdx,0x18(%rsp)
000000000004bc42	movq	%rcx,0x10(%rsp)
000000000004bc47	movq	%rbx,0x08(%rsp)
000000000004bc4c	movq	%rax,(%rsp)
000000000004bc50	leaq	0xd0(%rbp),%rdi
000000000004bc54	leaq	0xc8(%rbp),%rsi
000000000004bc58	leaq	0x0001943e(%rip),%rdx
000000000004bc5f	leaq	0x0001938d(%rip),%rcx
000000000004bc66	leaq	0x0006a8cb(%rip),%r9
000000000004bc6d	movl	$0x000000cc,%r8d
000000000004bc73	xorb	%al,%al
000000000004bc75	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000004bc7a	movq	0x0005bb57(%rip),%rsi
000000000004bc81	movq	0x00038450(%rip),%rbx
000000000004bc88	movq	%r15,%rdi
000000000004bc8b	call	*%rbx
000000000004bc8d	movq	0x0005c31c(%rip),%rsi
000000000004bc94	movq	%rax,%rdi
000000000004bc97	call	*%rbx
000000000004bc99	leaq	0x0005c6c0(%rip),%rsi
000000000004bca0	leaq	0x0006a8b1(%rip),%rdx
000000000004bca7	movq	%rax,%rdi
000000000004bcaa	call	*0x0005c6b0(%rip)
000000000004bcb0	testb	%al,%al
000000000004bcb2	je	0x0004bcd1
000000000004bcb4	movq	0x0005c2fd(%rip),%rsi
000000000004bcbb	movq	0xd0(%rbp),%rdx
000000000004bcbf	movq	%r15,%rdi
000000000004bcc2	movq	%r14,%rcx
000000000004bcc5	call	*0x0003840d(%rip)
000000000004bccb	movb	$0x01,%cl
000000000004bccd	testb	%al,%al
000000000004bccf	jne	0x0004bd0b
000000000004bcd1	xorb	%cl,%cl
000000000004bcd3	testq	%r14,%r14
000000000004bcd6	je	0x0004bd0b
000000000004bcd8	movq	0x0005c2e1(%rip),%rsi
000000000004bcdf	movq	0x0005cfca(%rip),%rdi
000000000004bce6	movq	-[PBXGDB_MIStopOnCPPExceptionCommand setIsThrowCommand:](%rip),%rax
000000000004bced	movq	(%rax),%rdx
000000000004bcf0	movl	$0x00000001,%ecx
000000000004bcf5	xorl	%r8d,%r8d
000000000004bcf8	call	*0x000383da(%rip)
000000000004bcfe	movq	%rax,%rdi
000000000004bd01	movq	%r14,%rsi
000000000004bd04	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
000000000004bd09	xorb	%cl,%cl
000000000004bd0b	movzbl	%cl,%eax
000000000004bd0e	addq	$0x38,%rsp
000000000004bd12	popq	%rbx
000000000004bd13	popq	%r12
000000000004bd15	popq	%r13
000000000004bd17	popq	%r14
000000000004bd19	popq	%r15
000000000004bd1b	popq	%rbp
000000000004bd1c	ret
-[DBGGDBSession shouldAcceptFromDebugSession:error:]:
000000000004bd1d	pushq	%rbp
000000000004bd1e	movq	%rsp,%rbp
000000000004bd21	pushq	%r14
000000000004bd23	pushq	%rbx
000000000004bd24	movq	%rcx,%r14
000000000004bd27	movq	0x0005baaa(%rip),%rsi
000000000004bd2e	movq	0x000383a3(%rip),%rbx
000000000004bd35	movq	%rdx,%rdi
000000000004bd38	call	*%rbx
000000000004bd3a	movq	0x0005c26f(%rip),%rsi
000000000004bd41	movq	%rax,%rdi
000000000004bd44	call	*%rbx
000000000004bd46	leaq	0x0005c613(%rip),%rsi
000000000004bd4d	leaq	0x0006a824(%rip),%rdx
000000000004bd54	movq	%rax,%rdi
000000000004bd57	call	*0x0005c603(%rip)
000000000004bd5d	movb	$0x01,%cl
000000000004bd5f	testb	%al,%al
000000000004bd61	jne	0x0004bd9d
000000000004bd63	xorb	%cl,%cl
000000000004bd65	testq	%r14,%r14
000000000004bd68	je	0x0004bd9d
000000000004bd6a	movq	0x0005c24f(%rip),%rsi
000000000004bd71	movq	0x0005cf38(%rip),%rdi
000000000004bd78	movq	0x00038291(%rip),%rax
000000000004bd7f	movq	(%rax),%rdx
000000000004bd82	movl	$0x00000002,%ecx
000000000004bd87	xorl	%r8d,%r8d
000000000004bd8a	call	*0x00038348(%rip)
000000000004bd90	movq	%rax,%rdi
000000000004bd93	movq	%r14,%rsi
000000000004bd96	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
000000000004bd9b	xorb	%cl,%cl
000000000004bd9d	movzbl	%cl,%eax
000000000004bda0	popq	%rbx
000000000004bda1	popq	%r14
000000000004bda3	popq	%rbp
000000000004bda4	ret
-[DBGGDBSession supportedDataValueFormatsForDataValue:]:
000000000004bda5	pushq	%rbp
000000000004bda6	movq	%rsp,%rbp
000000000004bda9	movq	0x0005c218(%rip),%rsi
000000000004bdb0	movq	0x0005cde1(%rip),%rdi
000000000004bdb7	popq	%rbp
000000000004bdb8	jmp	*0x0003831a(%rip)
-[DBGGDBSession printDescriptionOfDataValueToConsole:runAllThreads:]:
000000000004bdbe	pushq	%rbp
000000000004bdbf	movq	%rsp,%rbp
000000000004bdc2	pushq	%r15
000000000004bdc4	pushq	%r14
000000000004bdc6	pushq	%r13
000000000004bdc8	pushq	%r12
000000000004bdca	pushq	%rbx
000000000004bdcb	subq	$0x48,%rsp
000000000004bdcf	movl	%ecx,%r12d
000000000004bdd2	movq	%rdx,%r14
000000000004bdd5	movq	%rdi,0xd0(%rbp)
000000000004bdd9	movq	%rsi,0xc8(%rbp)
000000000004bddd	movq	0x000590dc(%rip),%rsi
000000000004bde4	movq	0x000382ed(%rip),%rbx
000000000004bdeb	call	*%rbx
000000000004bded	movq	0x000590dc(%rip),%rsi
000000000004bdf4	movq	%rax,%rdi
000000000004bdf7	call	*%rbx
000000000004bdf9	movq	%rax,0xc0(%rbp)
000000000004bdfd	testq	%r14,%r14
000000000004be00	jne	0x0004be64
000000000004be02	movq	0x0005ceaf(%rip),%rdi
000000000004be09	leaq	0x0005c520(%rip),%rsi
000000000004be10	call	*0x0005c51a(%rip)
000000000004be16	movq	%rax,%rdi
000000000004be19	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000004be1e	leaq	0xd0(%rbp),%rdi
000000000004be22	leaq	0xc8(%rbp),%rsi
000000000004be26	leaq	0x00019376(%rip),%rdx
000000000004be2d	leaq	0x000191bf(%rip),%rcx
000000000004be34	leaq	0x00063b7d(%rip),%r9
000000000004be3b	leaq	0x000193a6(%rip),%r8
000000000004be42	leaq	0x000193ac(%rip),%rbx
000000000004be49	movq	%rbx,0x18(%rsp)
000000000004be4e	leaq	0x000639e3(%rip),%rbx
000000000004be55	movq	%rbx,0x10(%rsp)
000000000004be5a	movq	%rax,0x08(%rsp)
000000000004be5f	jmp	0x0004bf08
000000000004be64	movq	0x0005ce4d(%rip),%rdi
000000000004be6b	leaq	0x0005c4be(%rip),%rsi
000000000004be72	call	*0x0005c4b8(%rip)
000000000004be78	leaq	0x0005c4c1(%rip),%rsi
000000000004be7f	movq	%r14,%rdi
000000000004be82	movq	%rax,%rdx
000000000004be85	call	*0x0005c4b5(%rip)
000000000004be8b	testb	%al,%al
000000000004be8d	jne	0x0004bf19
000000000004be93	movq	0x0005ce1e(%rip),%rdi
000000000004be9a	leaq	0x0005c48f(%rip),%rsi
000000000004bea1	call	*0x0005c489(%rip)
000000000004bea7	movq	%rax,%rdi
000000000004beaa	callq	0x0004e5c6	; symbol stub for: _NSStringFromClass
000000000004beaf	movq	%rax,%r15
000000000004beb2	movq	0x00058da7(%rip),%rsi
000000000004beb9	movq	%r14,%rdi
000000000004bebc	call	*0x00038216(%rip)
000000000004bec2	leaq	0x00019342(%rip),%r8
000000000004bec9	leaq	0xd0(%rbp),%rdi
000000000004becd	leaq	0xc8(%rbp),%rsi
000000000004bed1	leaq	0x000192cb(%rip),%rdx
000000000004bed8	leaq	0x00019114(%rip),%rcx
000000000004bedf	leaq	0x00063af2(%rip),%r9
000000000004bee6	movq	%r8,0x20(%rsp)
000000000004beeb	leaq	0x00063946(%rip),%rbx
000000000004bef2	movq	%rbx,0x18(%rsp)
000000000004bef7	leaq	0x000192ea(%rip),%r8
000000000004befe	movq	%rax,0x10(%rsp)
000000000004bf03	movq	%r15,0x08(%rsp)
000000000004bf08	movq	%r8,(%rsp)
000000000004bf0c	movl	$0x000000fb,%r8d
000000000004bf12	xorb	%al,%al
000000000004bf14	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000004bf19	testb	%r12b,%r12b
000000000004bf1c	jne	0x0004bf88
000000000004bf1e	movq	0x0005b80b(%rip),%rsi
000000000004bf25	movq	0xd0(%rbp),%rdi
000000000004bf29	movq	0x000381a8(%rip),%r15
000000000004bf30	call	*%r15
000000000004bf33	movq	0x0005919e(%rip),%rsi
000000000004bf3a	movq	%rax,%rdi
000000000004bf3d	call	*%r15
000000000004bf40	movq	%rax,%r13
000000000004bf43	movq	0x0005c506(%rip),%rbx
000000000004bf4a	movq	0x00058d4f(%rip),%rsi
000000000004bf51	movq	%r14,%rdi
000000000004bf54	call	*%r15
000000000004bf57	leaq	0x0006a63a(%rip),%rdx
000000000004bf5e	movq	0x00058c13(%rip),%rsi
000000000004bf65	movq	%rbx,%rdi
000000000004bf68	movq	%rax,%rcx
000000000004bf6b	xorb	%al,%al
000000000004bf6d	call	*%r15
000000000004bf70	movq	0x00059169(%rip),%rsi
000000000004bf77	movq	%r13,%rdi
000000000004bf7a	movq	%rax,%rdx
000000000004bf7d	xorl	%ecx,%ecx
000000000004bf7f	movl	$0x00000001,%r8d
000000000004bf85	call	*%r15
000000000004bf88	movq	0x0005af79(%rip),%rsi
000000000004bf8f	movq	0x00038142(%rip),%rbx
000000000004bf96	movq	%r14,%rdi
000000000004bf99	call	*%rbx
000000000004bf9b	movq	0x0005c02e(%rip),%rsi
000000000004bfa2	movq	%rax,%rdi
000000000004bfa5	call	*%rbx
000000000004bfa7	testb	%al,%al
000000000004bfa9	je	0x0004bffa
000000000004bfab	movq	0x0005c026(%rip),%rsi
000000000004bfb2	movq	0x0003811f(%rip),%r15
000000000004bfb9	movq	%r14,%rdi
000000000004bfbc	call	*%r15
000000000004bfbf	movq	%rax,%r14
000000000004bfc2	movq	0x0005bf37(%rip),%rsi
000000000004bfc9	movq	0xd0(%rbp),%rdi
000000000004bfcd	call	*%r15
000000000004bfd0	movq	%rax,%rbx
000000000004bfd3	movq	0x00058f06(%rip),%rsi
000000000004bfda	movq	0xc0(%rbp),%rdi
000000000004bfde	call	*%r15
000000000004bfe1	movsbl	%ah,%r8d
000000000004bfe5	movq	0x0005bff4(%rip),%rsi
000000000004bfec	movq	%r14,%rdi
000000000004bfef	movq	%rbx,%rdx
000000000004bff2	movq	%rax,%rcx
000000000004bff5	call	*%r15
000000000004bff8	jmp	0x0004c064
000000000004bffa	movq	0x0005b72f(%rip),%rsi
000000000004c001	movq	0xd0(%rbp),%rdi
000000000004c005	movq	0x000380cc(%rip),%r12
000000000004c00c	call	*%r12
000000000004c00f	movq	0x000590c2(%rip),%rsi
000000000004c016	movq	%rax,%rdi
000000000004c019	call	*%r12
000000000004c01c	movq	%rax,%r15
000000000004c01f	movq	0x0005c42a(%rip),%rbx
000000000004c026	movq	0x00059eab(%rip),%rsi
000000000004c02d	movq	%r14,%rdi
000000000004c030	call	*%r12
000000000004c033	leaq	0x000643de(%rip),%rdx
000000000004c03a	movq	0x00058b37(%rip),%rsi
000000000004c041	movq	%rbx,%rdi
000000000004c044	movq	%rax,%rcx
000000000004c047	xorb	%al,%al
000000000004c049	call	*%r12
000000000004c04c	movq	0x0005908d(%rip),%rsi
000000000004c053	movq	%r15,%rdi
000000000004c056	movq	%rax,%rdx
000000000004c059	xorl	%ecx,%ecx
000000000004c05b	movl	$0x00000001,%r8d
000000000004c061	call	*%r12
000000000004c064	addq	$0x48,%rsp
000000000004c068	popq	%rbx
000000000004c069	popq	%r12
000000000004c06b	popq	%r13
000000000004c06d	popq	%r14
000000000004c06f	popq	%r15
000000000004c071	popq	%rbp
000000000004c072	ret
-[DBGGDBSession completeString:resultHandler:]:
000000000004c073	pushq	%rbp
000000000004c074	movq	%rsp,%rbp
000000000004c077	pushq	%r15
000000000004c079	pushq	%r14
000000000004c07b	pushq	%rbx
000000000004c07c	pushq	%rax
000000000004c07d	movq	%rcx,%rbx
000000000004c080	movq	%rdx,%r14
000000000004c083	movq	%rdi,%r15
000000000004c086	movq	0x0005bf5b(%rip),%rsi
000000000004c08d	movq	0x0005cb04(%rip),%rdi
000000000004c094	call	*0x0003803e(%rip)
000000000004c09a	testb	%al,%al
000000000004c09c	je	0x0004c0c8
000000000004c09e	movq	0x0005938b(%rip),%rsi
000000000004c0a5	movq	0x0005c5b4(%rip),%rdi
000000000004c0ac	call	*0x00038026(%rip)
000000000004c0b2	movq	0x10(%rbx),%rcx
000000000004c0b6	movq	%rbx,%rdi
000000000004c0b9	movq	%rax,%rsi
000000000004c0bc	addq	$0x08,%rsp
000000000004c0c0	popq	%rbx
000000000004c0c1	popq	%r14
000000000004c0c3	popq	%r15
000000000004c0c5	popq	%rbp
000000000004c0c6	jmp	*%rcx
000000000004c0c8	movq	0x0005b661(%rip),%rsi
000000000004c0cf	movq	%r15,%rdi
000000000004c0d2	call	*0x00038000(%rip)
000000000004c0d8	movq	0x000589d9(%rip),%rsi
000000000004c0df	movq	%rax,%rdi
000000000004c0e2	call	*0x00037ff0(%rip)
000000000004c0e8	movq	0x0005bf01(%rip),%rsi
000000000004c0ef	movq	%rax,%rdi
000000000004c0f2	movq	%r14,%rdx
000000000004c0f5	movq	%rbx,%rcx
000000000004c0f8	movq	0x00037fd9(%rip),%rax
000000000004c0ff	addq	$0x08,%rsp
000000000004c103	popq	%rbx
000000000004c104	popq	%r14
000000000004c106	popq	%r15
000000000004c108	popq	%rbp
000000000004c109	jmp	*%rax
+[DBGGDBSession _inputEndsInFormatRequest:]:
000000000004c10b	pushq	%rbp
000000000004c10c	movq	%rsp,%rbp
000000000004c10f	pushq	%rbx
000000000004c110	pushq	%rax
000000000004c111	movq	%rdx,%rbx
000000000004c114	movq	0x00058d05(%rip),%rsi
000000000004c11b	leaq	0x0006a496(%rip),%rdx
000000000004c122	movq	%rbx,%rdi
000000000004c125	call	*0x00037fad(%rip)
000000000004c12b	movb	$0x01,%cl
000000000004c12d	testb	%al,%al
000000000004c12f	jne	0x0004c207
000000000004c135	movq	0x00058ce4(%rip),%rsi
000000000004c13c	leaq	0x0006a495(%rip),%rdx
000000000004c143	movq	%rbx,%rdi
000000000004c146	call	*0x00037f8c(%rip)
000000000004c14c	movb	$0x01,%cl
000000000004c14e	testb	%al,%al
000000000004c150	jne	0x0004c207
000000000004c156	movq	0x00058cc3(%rip),%rsi
000000000004c15d	leaq	0x0006a494(%rip),%rdx
000000000004c164	movq	%rbx,%rdi
000000000004c167	call	*0x00037f6b(%rip)
000000000004c16d	movb	$0x01,%cl
000000000004c16f	testb	%al,%al
000000000004c171	jne	0x0004c207
000000000004c177	movq	0x00058ca2(%rip),%rsi
000000000004c17e	leaq	0x0006a493(%rip),%rdx
000000000004c185	movq	%rbx,%rdi
000000000004c188	call	*0x00037f4a(%rip)
000000000004c18e	movb	$0x01,%cl
000000000004c190	testb	%al,%al
000000000004c192	jne	0x0004c207
000000000004c194	movq	0x00058c85(%rip),%rsi
000000000004c19b	leaq	0x0006a496(%rip),%rdx
000000000004c1a2	movq	%rbx,%rdi
000000000004c1a5	call	*0x00037f2d(%rip)
000000000004c1ab	movb	$0x01,%cl
000000000004c1ad	testb	%al,%al
000000000004c1af	jne	0x0004c207
000000000004c1b1	movq	0x00058c68(%rip),%rsi
000000000004c1b8	leaq	0x0006a499(%rip),%rdx
000000000004c1bf	movq	%rbx,%rdi
000000000004c1c2	call	*0x00037f10(%rip)
000000000004c1c8	movb	$0x01,%cl
000000000004c1ca	testb	%al,%al
000000000004c1cc	jne	0x0004c207
000000000004c1ce	movq	0x00058c4b(%rip),%rsi
000000000004c1d5	leaq	0x0006a49c(%rip),%rdx
000000000004c1dc	movq	%rbx,%rdi
000000000004c1df	call	*0x00037ef3(%rip)
000000000004c1e5	movb	$0x01,%cl
000000000004c1e7	testb	%al,%al
000000000004c1e9	jne	0x0004c207
000000000004c1eb	movq	0x00058c2e(%rip),%rsi
000000000004c1f2	leaq	0x0006a49f(%rip),%rdx
000000000004c1f9	movq	%rbx,%rdi
000000000004c1fc	call	*0x00037ed6(%rip)
000000000004c202	testb	%al,%al
000000000004c204	setne	%cl
000000000004c207	movzbl	%cl,%eax
000000000004c20a	addq	$0x08,%rsp
000000000004c20e	popq	%rbx
000000000004c20f	popq	%rbp
000000000004c210	ret
+[DBGGDBSession _gdbDataValueFormats]:
000000000004c211	pushq	%rbp
000000000004c212	movq	%rsp,%rbp
000000000004c215	pushq	%r15
000000000004c217	pushq	%r14
000000000004c219	pushq	%r13
000000000004c21b	pushq	%r12
000000000004c21d	pushq	%rbx
000000000004c21e	subq	$0x38,%rsp
000000000004c222	movq	0x0006b4df(%rip),%rax
000000000004c229	testq	%rax,%rax
000000000004c22c	jne	0x0004c329
000000000004c232	movq	0x0005bdbf(%rip),%rsi
000000000004c239	movq	0x00037e98(%rip),%r15
000000000004c240	call	*%r15
000000000004c243	movq	%rax,0xd0(%rbp)
000000000004c247	movq	0x0005bdb2(%rip),%rsi
000000000004c24e	movq	0x0005ca6b(%rip),%rdi
000000000004c255	movl	$0x00000001,%edx
000000000004c25a	call	*%r15
000000000004c25d	movq	%rax,0xc8(%rbp)
000000000004c261	movq	0x0005bda0(%rip),%rsi
000000000004c268	movq	0x0005ca51(%rip),%rdi
000000000004c26f	movl	$0x00000002,%edx
000000000004c274	call	*%r15
000000000004c277	movq	%rax,%r12
000000000004c27a	movq	0x0005bd8f(%rip),%rsi
000000000004c281	movq	0x0005ca38(%rip),%rdi
000000000004c288	movl	$0x00000004,%edx
000000000004c28d	call	*%r15
000000000004c290	movq	%rax,%r13
000000000004c293	movq	0x0005bd7e(%rip),%rsi
000000000004c29a	movq	0x0005ca1f(%rip),%rdi
000000000004c2a1	movl	$0x00000006,%edx
000000000004c2a6	call	*%r15
000000000004c2a9	movq	%rax,%rbx
000000000004c2ac	movq	0x0005bd6d(%rip),%rsi
000000000004c2b3	movq	0x0005ca06(%rip),%rdi
000000000004c2ba	movl	$0x00000005,%edx
000000000004c2bf	call	*%r15
000000000004c2c2	movq	%rax,%r14
000000000004c2c5	movq	0x0005bd5c(%rip),%rsi
000000000004c2cc	movq	0x0005c9ed(%rip),%rdi
000000000004c2d3	movl	$0x00000003,%edx
000000000004c2d8	call	*%r15
000000000004c2db	movq	0x000596f6(%rip),%rsi
000000000004c2e2	movq	0x0005c377(%rip),%rdi
000000000004c2e9	movq	%rax,0x10(%rsp)
000000000004c2ee	movq	%r14,0x08(%rsp)
000000000004c2f3	movq	%rbx,(%rsp)
000000000004c2f7	movq	$0x00000000,0x18(%rsp)
000000000004c300	movq	0xd0(%rbp),%rdx
000000000004c304	movq	0xc8(%rbp),%rcx
000000000004c308	movq	%r12,%r8
000000000004c30b	movq	%r13,%r9
000000000004c30e	xorb	%al,%al
000000000004c310	call	*%r15
000000000004c313	leaq	0x0006b3ee(%rip),%rsi
000000000004c31a	movq	%rax,%rdi
000000000004c31d	callq	0x0004e602	; symbol stub for: _objc_assign_global
000000000004c322	movq	0x0006b3df(%rip),%rax
000000000004c329	addq	$0x38,%rsp
000000000004c32d	popq	%rbx
000000000004c32e	popq	%r12
000000000004c330	popq	%r13
000000000004c332	popq	%r14
000000000004c334	popq	%r15
000000000004c336	popq	%rbp
000000000004c337	ret
000000000004c338	nop
000000000004c339	nop
000000000004c33a	nop
000000000004c33b	nop
000000000004c33c	nop
000000000004c33d	nop
000000000004c33e	nop
+[DBGGDBSession dataValueFormatForTag:]:
000000000004c33f	pushq	%rbp
000000000004c340	movq	%rsp,%rbp
000000000004c343	pushq	%r15
000000000004c345	pushq	%r14
000000000004c347	pushq	%r13
000000000004c349	pushq	%r12
000000000004c34b	pushq	%rbx
000000000004c34c	subq	$0x000000e8,%rsp
000000000004c353	movq	%rdx,0xfffffef8(%rbp)
000000000004c35a	movq	0x00037d3f(%rip),%rax
000000000004c361	movq	(%rax),%rax
000000000004c364	movq	%rax,0xd0(%rbp)
000000000004c368	movq	%rdi,0xc8(%rbp)
000000000004c36c	movq	%rsi,0xc0(%rbp)
000000000004c370	xorps	%xmm0,%xmm0
000000000004c373	movaps	%xmm0,0xb0(%rbp)
000000000004c377	movaps	%xmm0,0xa0(%rbp)
000000000004c37b	movaps	%xmm0,0x90(%rbp)
000000000004c37f	movaps	%xmm0,0x80(%rbp)
000000000004c383	movq	0x0005bc3e(%rip),%rsi
000000000004c38a	movq	0x0005c807(%rip),%rdi
000000000004c391	call	*0x00037d41(%rip)
000000000004c397	movq	%rax,%r12
000000000004c39a	leaq	0x0005bfdf(%rip),%rsi
000000000004c3a1	leaq	0x80(%rbp),%rdx
000000000004c3a5	leaq	0xffffff00(%rbp),%rcx
000000000004c3ac	movq	%r12,%rdi
000000000004c3af	movl	$0x00000010,%r8d
000000000004c3b5	call	*0x0005bfc5(%rip)
000000000004c3bb	movq	%rax,%rbx
000000000004c3be	testq	%rbx,%rbx
000000000004c3c1	je	0x0004c437
000000000004c3c3	movq	0x90(%rbp),%rax
000000000004c3c7	movq	(%rax),%r15
000000000004c3ca	jmp	0x0004c3fd
000000000004c3cc	incq	%r14
000000000004c3cf	cmpq	%rbx,%r14
000000000004c3d2	jb	0x0004c400
000000000004c3d4	movq	%r12,%rdi
000000000004c3d7	leaq	0x0005bfa2(%rip),%rsi
000000000004c3de	leaq	0x80(%rbp),%rdx
000000000004c3e2	leaq	0xffffff00(%rbp),%rcx
000000000004c3e9	movl	$0x00000010,%r8d
000000000004c3ef	call	*0x0005bf8b(%rip)
000000000004c3f5	movq	%rax,%rbx
000000000004c3f8	testq	%rbx,%rbx
000000000004c3fb	je	0x0004c437
000000000004c3fd	xorl	%r14d,%r14d
000000000004c400	movq	0x90(%rbp),%rax
000000000004c404	cmpq	%r15,(%rax)
000000000004c407	je	0x0004c411
000000000004c409	movq	%r12,%rdi
000000000004c40c	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
000000000004c411	movq	0x88(%rbp),%rax
000000000004c415	movq	(%rax,%r14,8),%r13
000000000004c419	movq	%r13,%rdi
000000000004c41c	movq	0x0005bc15(%rip),%rsi
000000000004c423	call	*0x00037caf(%rip)
000000000004c429	cmpq	0xfffffef8(%rbp),%rax
000000000004c430	jne	0x0004c3cc
000000000004c432	testq	%r13,%r13
000000000004c435	jne	0x0004c46e
000000000004c437	movq	0xfffffef8(%rbp),%rax
000000000004c43e	movl	%eax,(%rsp)
000000000004c441	leaq	0xc8(%rbp),%rdi
000000000004c445	leaq	0xc0(%rbp),%rsi
000000000004c449	leaq	0x00018e2b(%rip),%rdx
000000000004c450	leaq	0x00018b9c(%rip),%rcx
000000000004c457	leaq	0x0006a25a(%rip),%r9
000000000004c45e	movl	$0x00000146,%r8d
000000000004c464	xorb	%al,%al
000000000004c466	callq	0x0004e5b4	; symbol stub for: __DVTAssertionWarningHandler
000000000004c46b	xorl	%r13d,%r13d
000000000004c46e	movq	0x00037c2b(%rip),%rax
000000000004c475	movq	(%rax),%rax
000000000004c478	cmpq	0xd0(%rbp),%rax
000000000004c47c	jne	0x0004c493
000000000004c47e	movq	%r13,%rax
000000000004c481	addq	$0x000000e8,%rsp
000000000004c488	popq	%rbx
000000000004c489	popq	%r12
000000000004c48b	popq	%r13
000000000004c48d	popq	%r14
000000000004c48f	popq	%r15
000000000004c491	popq	%rbp
000000000004c492	ret
000000000004c493	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
-[DBGGDBSession logFilename]:
000000000004c498	pushq	%rbp
000000000004c499	movq	%rsp,%rbp
000000000004c49c	subq	$0x30,%rsp
000000000004c4a0	movq	0x00037be9(%rip),%rax
000000000004c4a7	movq	%rax,0xd8(%rbp)
000000000004c4ab	movl	$0x42000000,0xe0(%rbp)
000000000004c4b2	movl	$0x00000000,0xe4(%rbp)
000000000004c4b9	leaq	0x0000003f(%rip),%rax
000000000004c4c0	movq	%rax,0xe8(%rbp)
000000000004c4c4	leaq	0x0006ae65(%rip),%rax
000000000004c4cb	movq	%rax,0xf0(%rbp)
000000000004c4cf	leaq	0xf8(%rbp),%rsi
000000000004c4d3	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
000000000004c4d8	cmpq	$0xff,0x0006b238(%rip)
000000000004c4e0	je	0x0004c4f2
000000000004c4e2	leaq	0x0006b22f(%rip),%rdi
000000000004c4e9	leaq	0xd8(%rbp),%rsi
000000000004c4ed	callq	0x0004e69e	; symbol stub for: _dispatch_once
000000000004c4f2	movq	0x0006b227(%rip),%rax
000000000004c4f9	addq	$0x30,%rsp
000000000004c4fd	popq	%rbp
000000000004c4fe	ret
___28-[DBGGDBSession logFilename]_block_invoke_0:
000000000004c4ff	pushq	%rbp
000000000004c500	movq	%rsp,%rbp
000000000004c503	pushq	%rbx
000000000004c504	subq	$0x18,%rsp
000000000004c508	movq	0x20(%rdi),%rax
000000000004c50c	movq	%rax,0xe8(%rbp)
000000000004c510	movq	0x0005cba1(%rip),%rax
000000000004c517	movq	%rax,0xf0(%rbp)
000000000004c51b	movq	0x0005bb1e(%rip),%rsi
000000000004c522	leaq	0xe8(%rbp),%rdi
000000000004c526	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000004c52b	leaq	0x0006b1ee(%rip),%rsi
000000000004c532	movq	%rax,%rdi
000000000004c535	callq	0x0004e602	; symbol stub for: _objc_assign_global
000000000004c53a	cmpq	$0x00,0x0006b1de(%rip)
000000000004c542	jne	0x0004c5a5
000000000004c544	movq	0x00058825(%rip),%rsi
000000000004c54b	movq	0x0005bf6e(%rip),%rdi
000000000004c552	movq	0x00037b7f(%rip),%rbx
000000000004c559	call	*%rbx
000000000004c55b	movq	0x000591d6(%rip),%rsi
000000000004c562	leaq	0x0006a16f(%rip),%rdx
000000000004c569	movq	%rax,%rdi
000000000004c56c	call	*%rbx
000000000004c56e	movq	%rax,%rbx
000000000004c571	leaq	0x0005bd78(%rip),%rsi
000000000004c578	movq	%rbx,%rdi
000000000004c57b	call	*0x0005bd6f(%rip)
000000000004c581	testq	%rax,%rax
000000000004c584	je	0x0004c5a5
000000000004c586	movq	0x0005babb(%rip),%rsi
000000000004c58d	movq	%rbx,%rdi
000000000004c590	call	*0x00037b42(%rip)
000000000004c596	leaq	0x0006b183(%rip),%rsi
000000000004c59d	movq	%rax,%rdi
000000000004c5a0	callq	0x0004e602	; symbol stub for: _objc_assign_global
000000000004c5a5	addq	$0x18,%rsp
000000000004c5a9	popq	%rbx
000000000004c5aa	popq	%rbp
000000000004c5ab	ret
000000000004c5ac	nopl	0x00(%rax)
___copy_helper_block_:
000000000004c5b0	pushq	%rbp
000000000004c5b1	movq	%rsp,%rbp
000000000004c5b4	addq	$0x20,%rdi
000000000004c5b8	movq	0x20(%rsi),%rsi
000000000004c5bc	movl	$0x00000003,%edx
000000000004c5c1	popq	%rbp
000000000004c5c2	jmp	0x0004e662	; symbol stub for: __Block_object_assign
000000000004c5c7	nopw	0x00000000(%rax,%rax)
___destroy_helper_block_:
000000000004c5d0	pushq	%rbp
000000000004c5d1	movq	%rsp,%rbp
000000000004c5d4	movq	0x20(%rdi),%rdi
000000000004c5d8	movl	$0x00000003,%esi
000000000004c5dd	popq	%rbp
000000000004c5de	jmp	0x0004e668	; symbol stub for: __Block_object_dispose
-[DBGGDBSession logSuffix]:
000000000004c5e3	pushq	%rbp
000000000004c5e4	movq	%rsp,%rbp
000000000004c5e7	leaq	0x00069b4a(%rip),%rax
000000000004c5ee	popq	%rbp
000000000004c5ef	ret
-[DBGGDBSession PBXDebugSession]:
000000000004c5f0	pushq	%rbp
000000000004c5f1	movq	%rsp,%rbp
000000000004c5f4	movq	0x0006304d(%rip),%rax
000000000004c5fb	movq	(%rdi,%rax),%rax
000000000004c5ff	popq	%rbp
000000000004c600	ret
000000000004c601	nop
000000000004c602	nop
000000000004c603	nop
000000000004c604	nop
000000000004c605	nop
000000000004c606	nop
000000000004c607	nop
000000000004c608	nop
000000000004c609	nop
000000000004c60a	nop
000000000004c60b	nop
000000000004c60c	nop
000000000004c60d	nop
000000000004c60e	nop
000000000004c60f	nop
___copy_helper_block_:
000000000004c610	pushq	%rbp
000000000004c611	movq	%rsp,%rbp
000000000004c614	addq	$0x20,%rdi
000000000004c618	movq	0x20(%rsi),%rsi
000000000004c61c	movl	$0x00000003,%edx
000000000004c621	popq	%rbp
000000000004c622	jmp	0x0004e662	; symbol stub for: __Block_object_assign
000000000004c627	nopw	0x00000000(%rax,%rax)
___destroy_helper_block_:
000000000004c630	pushq	%rbp
000000000004c631	movq	%rsp,%rbp
000000000004c634	movq	0x20(%rdi),%rdi
000000000004c638	movl	$0x00000003,%esi
000000000004c63d	popq	%rbp
000000000004c63e	jmp	0x0004e668	; symbol stub for: __Block_object_dispose
000000000004c643	nop
000000000004c644	nop
000000000004c645	nop
000000000004c646	nop
000000000004c647	nop
000000000004c648	nop
000000000004c649	nop
000000000004c64a	nop
000000000004c64b	nop
000000000004c64c	nop
000000000004c64d	nop
000000000004c64e	nop
000000000004c64f	nop
000000000004c650	nop
-[DBGGDBThread requestStackFrames:resultQueue:resultHandler:]:
000000000004c651	pushq	%rbp
000000000004c652	movq	%rsp,%rbp
000000000004c655	pushq	%r15
000000000004c657	pushq	%r14
000000000004c659	pushq	%r12
000000000004c65b	pushq	%rbx
000000000004c65c	movq	%r8,%r14
000000000004c65f	movq	%rdx,%r15
000000000004c662	movq	%rdi,%rbx
000000000004c665	movq	0x00062fe4(%rip),%rax
000000000004c66c	movq	(%rbx,%rax),%rdi
000000000004c670	movq	0x00058f51(%rip),%rsi
000000000004c677	call	*0x00037a5b(%rip)
000000000004c67d	movq	%rax,%r12
000000000004c680	movq	0x00058851(%rip),%rsi
000000000004c687	movq	%rbx,%rdi
000000000004c68a	call	*0x00037a48(%rip)
000000000004c690	movq	0x0005ba81(%rip),%rsi
000000000004c697	movq	%r12,%rdi
000000000004c69a	movq	%rax,%rdx
000000000004c69d	movq	%r15,%rcx
000000000004c6a0	movq	%r14,%r8
000000000004c6a3	movq	0x00037a2e(%rip),%rax
000000000004c6aa	popq	%rbx
000000000004c6ab	popq	%r12
000000000004c6ad	popq	%r14
000000000004c6af	popq	%r15
000000000004c6b1	popq	%rbp
000000000004c6b2	jmp	*%rax
-[DBGGDBThread requestSuspend]:
000000000004c6b4	pushq	%rbp
000000000004c6b5	movq	%rsp,%rbp
000000000004c6b8	pushq	%rbx
000000000004c6b9	subq	$0x28,%rsp
000000000004c6bd	movq	%rdi,%rbx
000000000004c6c0	movq	%rbx,0xf0(%rbp)
000000000004c6c4	movq	%rsi,0xe8(%rbp)
000000000004c6c8	movq	0x0005ba51(%rip),%rsi
000000000004c6cf	call	*0x00037a03(%rip)
000000000004c6d5	testb	%al,%al
000000000004c6d7	je	0x0004c71e
000000000004c6d9	leaq	0x00063158(%rip),%rax
000000000004c6e0	leaq	0x00018d13(%rip),%rcx
000000000004c6e7	movq	%rcx,0x08(%rsp)
000000000004c6ec	movq	%rax,(%rsp)
000000000004c6f0	leaq	0xf0(%rbp),%rdi
000000000004c6f4	leaq	0xe8(%rbp),%rsi
000000000004c6f8	leaq	0x00018c6e(%rip),%rdx
000000000004c6ff	leaq	0x00018c86(%rip),%rcx
000000000004c706	leaq	0x0006a08b(%rip),%r9
000000000004c70d	movl	$0x000000d7,%r8d
000000000004c713	xorb	%al,%al
000000000004c715	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000004c71a	movq	0xf0(%rbp),%rbx
000000000004c71e	movq	0x00062f2b(%rip),%rax
000000000004c725	movq	(%rbx,%rax),%rdi
000000000004c729	movq	0x0005b9f8(%rip),%rsi
000000000004c730	movq	0x000379a1(%rip),%rbx
000000000004c737	call	*%rbx
000000000004c739	movq	0x0005b9f0(%rip),%rsi
000000000004c740	movq	0xf0(%rbp),%rdi
000000000004c744	movl	$0x00000001,%edx
000000000004c749	call	*%rbx
000000000004c74b	addq	$0x28,%rsp
000000000004c74f	popq	%rbx
000000000004c750	popq	%rbp
000000000004c751	ret
-[DBGGDBThread requestUnsuspend]:
000000000004c752	pushq	%rbp
000000000004c753	movq	%rsp,%rbp
000000000004c756	pushq	%rbx
000000000004c757	subq	$0x28,%rsp
000000000004c75b	movq	%rdi,%rbx
000000000004c75e	movq	%rbx,0xf0(%rbp)
000000000004c762	movq	%rsi,0xe8(%rbp)
000000000004c766	movq	0x0005b9b3(%rip),%rsi
000000000004c76d	call	*0x00037965(%rip)
000000000004c773	testb	%al,%al
000000000004c775	jne	0x0004c7bc
000000000004c777	leaq	0x000630ba(%rip),%rax
000000000004c77e	leaq	0x00018cc7(%rip),%rcx
000000000004c785	movq	%rcx,0x08(%rsp)
000000000004c78a	movq	%rax,(%rsp)
000000000004c78e	leaq	0xf0(%rbp),%rdi
000000000004c792	leaq	0xe8(%rbp),%rsi
000000000004c796	leaq	0x00018c71(%rip),%rdx
000000000004c79d	leaq	0x00018be8(%rip),%rcx
000000000004c7a4	leaq	0x0006a00d(%rip),%r9
000000000004c7ab	movl	$0x000000df,%r8d
000000000004c7b1	xorb	%al,%al
000000000004c7b3	callq	0x0004e5ae	; symbol stub for: __DVTAssertionFailureHandler
000000000004c7b8	movq	0xf0(%rbp),%rbx
000000000004c7bc	movq	0x00062e8d(%rip),%rax
000000000004c7c3	movq	(%rbx,%rax),%rdi
000000000004c7c7	movq	0x0005b96a(%rip),%rsi
000000000004c7ce	movq	0x00037903(%rip),%rbx
000000000004c7d5	call	*%rbx
000000000004c7d7	movq	0x0005b952(%rip),%rsi
000000000004c7de	movq	0xf0(%rbp),%rdi
000000000004c7e2	xorl	%edx,%edx
000000000004c7e4	call	*%rbx
000000000004c7e6	addq	$0x28,%rsp
000000000004c7ea	popq	%rbx
000000000004c7eb	popq	%rbp
000000000004c7ec	ret
000000000004c7ed	nop
000000000004c7ee	nop
000000000004c7ef	nop
000000000004c7f0	nop
000000000004c7f1	nop
000000000004c7f2	nop
000000000004c7f3	nop
000000000004c7f4	nop
-[DBGGDBStackFrame isEqual:]:
000000000004c7f5	pushq	%rbp
000000000004c7f6	movq	%rsp,%rbp
000000000004c7f9	pushq	%r15
000000000004c7fb	pushq	%r14
000000000004c7fd	pushq	%r12
000000000004c7ff	pushq	%rbx
000000000004c800	movq	%rdx,%r14
000000000004c803	movq	%rdi,%r15
000000000004c806	movb	$0x01,%cl
000000000004c808	cmpq	%r15,%r14
000000000004c80b	je	0x0004c90f
000000000004c811	leaq	0x0005bb18(%rip),%r12
000000000004c818	movq	%r15,%rdi
000000000004c81b	movq	%r12,%rsi
000000000004c81e	call	*0x0005bb0c(%rip)
000000000004c824	movq	%rax,%rbx
000000000004c827	movq	%r14,%rdi
000000000004c82a	movq	%r12,%rsi
000000000004c82d	call	*0x0005bafd(%rip)
000000000004c833	xorb	%cl,%cl
000000000004c835	cmpq	%rax,%rbx
000000000004c838	jne	0x0004c90f
000000000004c83e	movq	0x00058a53(%rip),%rsi
000000000004c845	movq	0x0003788c(%rip),%r12
000000000004c84c	movq	%r15,%rdi
000000000004c84f	call	*%r12
000000000004c852	movq	%rax,%rbx
000000000004c855	movq	0x00058a3c(%rip),%rsi
000000000004c85c	movq	%r14,%rdi
000000000004c85f	call	*%r12
000000000004c862	leaq	0x0005bb27(%rip),%rsi
000000000004c869	movq	%rbx,%rdi
000000000004c86c	movq	%rax,%rdx
000000000004c86f	call	*0x0005bb1b(%rip)
000000000004c875	xorb	%cl,%cl
000000000004c877	testb	%al,%al
000000000004c879	je	0x0004c90f
000000000004c87f	movq	0x0005841a(%rip),%rsi
000000000004c886	movq	0x0003784b(%rip),%r12
000000000004c88d	movq	%r15,%rdi
000000000004c890	call	*%r12
000000000004c893	movq	%rax,%rbx
000000000004c896	movq	0x00058403(%rip),%rsi
000000000004c89d	movq	%r14,%rdi
000000000004c8a0	call	*%r12
000000000004c8a3	leaq	0x0005bae6(%rip),%rsi
000000000004c8aa	movq	%rbx,%rdi
000000000004c8ad	movq	%rax,%rdx
000000000004c8b0	call	*0x0005bada(%rip)
000000000004c8b6	xorb	%cl,%cl
000000000004c8b8	testb	%al,%al
000000000004c8ba	je	0x0004c90f
000000000004c8bc	movq	0x0005acad(%rip),%rsi
000000000004c8c3	movq	%r15,%rdi
000000000004c8c6	call	*0x0003780c(%rip)
000000000004c8cc	movb	$0x01,%cl
000000000004c8ce	testq	%rax,%rax
000000000004c8d1	je	0x0004c90f
000000000004c8d3	movq	0x0005ac96(%rip),%rsi
000000000004c8da	movq	0x000377f7(%rip),%r12
000000000004c8e1	movq	%r15,%rdi
000000000004c8e4	call	*%r12
000000000004c8e7	movq	%rax,%rbx
000000000004c8ea	movq	0x0005ac7f(%rip),%rsi
000000000004c8f1	movq	%r14,%rdi
000000000004c8f4	call	*%r12
000000000004c8f7	leaq	0x0005ba92(%rip),%rsi
000000000004c8fe	movq	%rbx,%rdi
000000000004c901	movq	%rax,%rdx
000000000004c904	call	*0x0005ba86(%rip)
000000000004c90a	testb	%al,%al
000000000004c90c	setne	%cl
000000000004c90f	movzbl	%cl,%eax
000000000004c912	popq	%rbx
000000000004c913	popq	%r12
000000000004c915	popq	%r14
000000000004c917	popq	%r15
000000000004c919	popq	%rbp
000000000004c91a	ret
000000000004c91b	nop
000000000004c91c	nop
000000000004c91d	nop
000000000004c91e	nop
000000000004c91f	nop
___Block_byref_object_dispose_:
000000000004c920	pushq	%rbp
000000000004c921	movq	%rsp,%rbp
000000000004c924	movq	0x28(%rdi),%rdi
000000000004c928	movl	$0x00000083,%esi
000000000004c92d	popq	%rbp
000000000004c92e	jmp	0x0004e668	; symbol stub for: __Block_object_dispose
000000000004c933	nop
000000000004c934	nop
000000000004c935	nop
000000000004c936	nop
000000000004c937	nop
000000000004c938	nop
000000000004c939	nop
000000000004c93a	nop
000000000004c93b	nop
000000000004c93c	nop
000000000004c93d	nop
000000000004c93e	nop
000000000004c93f	nop
___copy_helper_block_:
000000000004c940	pushq	%rbp
000000000004c941	movq	%rsp,%rbp
000000000004c944	pushq	%r14
000000000004c946	pushq	%rbx
000000000004c947	movq	%rsi,%r14
000000000004c94a	movq	%rdi,%rbx
000000000004c94d	movq	0x20(%r14),%rsi
000000000004c951	leaq	0x20(%rbx),%rdi
000000000004c955	movl	$0x00000007,%edx
000000000004c95a	callq	0x0004e662	; symbol stub for: __Block_object_assign
000000000004c95f	movq	0x28(%r14),%rsi
000000000004c963	leaq	0x28(%rbx),%rdi
000000000004c967	movl	$0x00000008,%edx
000000000004c96c	callq	0x0004e662	; symbol stub for: __Block_object_assign
000000000004c971	leaq	0x30(%rbx),%rdi
000000000004c975	movq	0x30(%r14),%rsi
000000000004c979	movl	$0x00000008,%edx
000000000004c97e	callq	0x0004e662	; symbol stub for: __Block_object_assign
000000000004c983	addq	$0x38,%rbx
000000000004c987	movq	0x38(%r14),%rsi
000000000004c98b	movq	%rbx,%rdi
000000000004c98e	movl	$0x00000003,%edx
000000000004c993	popq	%rbx
000000000004c994	popq	%r14
000000000004c996	popq	%rbp
000000000004c997	jmp	0x0004e662	; symbol stub for: __Block_object_assign
000000000004c99c	nopl	0x00(%rax)
___destroy_helper_block_:
000000000004c9a0	pushq	%rbp
000000000004c9a1	movq	%rsp,%rbp
000000000004c9a4	pushq	%rbx
000000000004c9a5	pushq	%rax
000000000004c9a6	movq	%rdi,%rbx
000000000004c9a9	movq	0x20(%rbx),%rdi
000000000004c9ad	movl	$0x00000007,%esi
000000000004c9b2	callq	0x0004e668	; symbol stub for: __Block_object_dispose
000000000004c9b7	movq	0x28(%rbx),%rdi
000000000004c9bb	movl	$0x00000008,%esi
000000000004c9c0	callq	0x0004e668	; symbol stub for: __Block_object_dispose
000000000004c9c5	movq	0x30(%rbx),%rdi
000000000004c9c9	movl	$0x00000008,%esi
000000000004c9ce	callq	0x0004e668	; symbol stub for: __Block_object_dispose
000000000004c9d3	movq	0x38(%rbx),%rdi
000000000004c9d7	movl	$0x00000003,%esi
000000000004c9dc	addq	$0x08,%rsp
000000000004c9e0	popq	%rbx
000000000004c9e1	popq	%rbp
000000000004c9e2	jmp	0x0004e668	; symbol stub for: __Block_object_dispose
000000000004c9e7	nop
000000000004c9e8	nop
000000000004c9e9	nop
000000000004c9ea	nop
000000000004c9eb	nop
000000000004c9ec	nop
000000000004c9ed	nop
000000000004c9ee	nop
000000000004c9ef	nop
000000000004c9f0	nop
000000000004c9f1	nop
000000000004c9f2	nop
___106-[DBGGDBStackFrame _requestDataValueForExpression:atLocation:orBlockStartAddress:onQueue:withResultBlock:]_block_invoke_0:
000000000004c9f3	pushq	%rbp
000000000004c9f4	movq	%rsp,%rbp
000000000004c9f7	subq	$0x10,%rsp
000000000004c9fb	movq	%rdi,%rax
000000000004c9fe	movq	0x40(%rax),%r9
000000000004ca02	movq	0x38(%rax),%r8
000000000004ca06	movq	0x30(%rax),%rcx
000000000004ca0a	movq	0x20(%rax),%rdi
000000000004ca0e	movq	0x28(%rax),%rdx
000000000004ca12	movq	0x48(%rax),%rax
000000000004ca16	movq	0x0005b77b(%rip),%rsi
000000000004ca1d	movq	%rax,(%rsp)
000000000004ca21	call	*0x000376b1(%rip)
000000000004ca27	addq	$0x10,%rsp
000000000004ca2b	popq	%rbp
000000000004ca2c	ret
000000000004ca2d	nopl	(%rax)
___copy_helper_block_97:
000000000004ca30	pushq	%rbp
000000000004ca31	movq	%rsp,%rbp
000000000004ca34	pushq	%r14
000000000004ca36	pushq	%rbx
000000000004ca37	movq	%rsi,%r14
000000000004ca3a	movq	%rdi,%rbx
000000000004ca3d	movq	0x20(%r14),%rsi
000000000004ca41	leaq	0x20(%rbx),%rdi
000000000004ca45	movl	$0x00000003,%edx
000000000004ca4a	callq	0x0004e662	; symbol stub for: __Block_object_assign
000000000004ca4f	movq	0x28(%r14),%rsi
000000000004ca53	leaq	0x28(%rbx),%rdi
000000000004ca57	movl	$0x00000003,%edx
000000000004ca5c	callq	0x0004e662	; symbol stub for: __Block_object_assign
000000000004ca61	leaq	0x30(%rbx),%rdi
000000000004ca65	movq	0x30(%r14),%rsi
000000000004ca69	movl	$0x00000003,%edx
000000000004ca6e	callq	0x0004e662	; symbol stub for: __Block_object_assign
000000000004ca73	leaq	0x38(%rbx),%rdi
000000000004ca77	movq	0x38(%r14),%rsi
000000000004ca7b	movl	$0x00000003,%edx
000000000004ca80	callq	0x0004e662	; symbol stub for: __Block_object_assign
000000000004ca85	addq	$0x48,%rbx
000000000004ca89	movq	0x48(%r14),%rsi
000000000004ca8d	movq	%rbx,%rdi
000000000004ca90	movl	$0x00000007,%edx
000000000004ca95	popq	%rbx
000000000004ca96	popq	%r14
000000000004ca98	popq	%rbp
000000000004ca99	jmp	0x0004e662	; symbol stub for: __Block_object_assign
000000000004ca9e	nop
___destroy_helper_block_98:
000000000004caa0	pushq	%rbp
000000000004caa1	movq	%rsp,%rbp
000000000004caa4	pushq	%rbx
000000000004caa5	pushq	%rax
000000000004caa6	movq	%rdi,%rbx
000000000004caa9	movq	0x20(%rbx),%rdi
000000000004caad	movl	$0x00000003,%esi
000000000004cab2	callq	0x0004e668	; symbol stub for: __Block_object_dispose
000000000004cab7	movq	0x28(%rbx),%rdi
000000000004cabb	movl	$0x00000003,%esi
000000000004cac0	callq	0x0004e668	; symbol stub for: __Block_object_dispose
000000000004cac5	movq	0x30(%rbx),%rdi
000000000004cac9	movl	$0x00000003,%esi
000000000004cace	callq	0x0004e668	; symbol stub for: __Block_object_dispose
000000000004cad3	movq	0x38(%rbx),%rdi
000000000004cad7	movl	$0x00000003,%esi
000000000004cadc	callq	0x0004e668	; symbol stub for: __Block_object_dispose
000000000004cae1	movq	0x48(%rbx),%rdi
000000000004cae5	movl	$0x00000007,%esi
000000000004caea	addq	$0x08,%rsp
000000000004caee	popq	%rbx
000000000004caef	popq	%rbp
000000000004caf0	jmp	0x0004e668	; symbol stub for: __Block_object_dispose
___106-[DBGGDBStackFrame _requestDataValueForExpression:atLocation:orBlockStartAddress:onQueue:withResultBlock:]_block_invoke_0104:
000000000004caf5	pushq	%rbp
000000000004caf6	movq	%rsp,%rbp
000000000004caf9	pushq	%r15
000000000004cafb	pushq	%r14
000000000004cafd	pushq	%r13
000000000004caff	pushq	%r12
000000000004cb01	pushq	%rbx
000000000004cb02	subq	$0x68,%rsp
000000000004cb06	movq	%rsi,%r14
000000000004cb09	movq	%rdi,%r15
000000000004cb0c	movq	0x00058ac5(%rip),%rsi
000000000004cb13	movq	%r14,%rdi
000000000004cb16	call	*0x000375bc(%rip)
000000000004cb1c	xorb	%cl,%cl
000000000004cb1e	testl	%eax,%eax
000000000004cb20	je	0x0004cc97
000000000004cb26	movq	0x00058aab(%rip),%rsi
000000000004cb2d	movq	%r14,%rdi
000000000004cb30	call	*0x000375a2(%rip)
000000000004cb36	xorb	%cl,%cl
000000000004cb38	cmpl	$0x01,%eax
000000000004cb3b	je	0x0004cc97
000000000004cb41	movq	0x00058b40(%rip),%rsi
000000000004cb48	movq	0x00037589(%rip),%rbx
000000000004cb4f	movq	%r14,%rdi
000000000004cb52	call	*%rbx
000000000004cb54	movq	0x0005b645(%rip),%rsi
000000000004cb5b	movq	%rax,%rdi
000000000004cb5e	call	*%rbx
000000000004cb60	movq	%rax,%r13
000000000004cb63	movq	$0x00000000,0xa8(%rbp)
000000000004cb6b	xorl	%eax,%eax
000000000004cb6d	leaq	0xfffffdac(%rip),%rcx
000000000004cb74	leaq	0xfffce415(%rip),%rdx
000000000004cb7b	leaq	0xa8(%rbp),%rbx
000000000004cb7f	movq	%rbx,0xb0(%rbp)
000000000004cb83	movl	$0x02000000,0xb8(%rbp)
000000000004cb8a	movl	$0x00000030,0xbc(%rbp)
000000000004cb91	movq	%rdx,0xc0(%rbp)
000000000004cb95	movq	%rcx,0xc8(%rbp)
000000000004cb99	testq	%r13,%r13
000000000004cb9c	je	0x0004cbc9
000000000004cb9e	movq	0x0005c113(%rip),%rdi
000000000004cba5	leaq	0x0005b734(%rip),%rsi
000000000004cbac	call	*0x0005b72e(%rip)
000000000004cbb2	movq	0x20(%r15),%rcx
000000000004cbb6	movq	0x0005b5eb(%rip),%rsi
000000000004cbbd	movq	%rax,%rdi
000000000004cbc0	movq	%r13,%rdx
000000000004cbc3	call	*0x0003750f(%rip)
000000000004cbc9	movq	%rax,0xd0(%rbp)
000000000004cbcd	movq	0x28(%r15),%r12
000000000004cbd1	movq	0x000374b8(%rip),%rax
000000000004cbd8	movq	%rax,0xffffff78(%rbp)
000000000004cbdf	movl	$0x42000000,0x80(%rbp)
000000000004cbe6	movl	$0x00000000,0x84(%rbp)
000000000004cbed	leaq	0x000000b5(%rip),%rax
000000000004cbf4	movq	%rax,0x88(%rbp)
000000000004cbf8	leaq	0x98(%rbp),%rsi
000000000004cbfc	leaq	0x0006a7ed(%rip),%rax
000000000004cc03	movq	%rax,0x90(%rbp)
000000000004cc07	movq	0x30(%r15),%rdi
000000000004cc0b	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
000000000004cc10	leaq	0xffffff78(%rbp),%rsi
000000000004cc17	movq	%rbx,0xa0(%rbp)
000000000004cc1b	movq	%r12,%rdi
000000000004cc1e	callq	0x0004e5a8	; symbol stub for: _DVTAsyncPerformBlock
000000000004cc23	movq	0x000589ae(%rip),%rsi
000000000004cc2a	movq	%r14,%rdi
000000000004cc2d	call	*0x000374a5(%rip)
000000000004cc33	movl	%eax,%ebx
000000000004cc35	testq	%r13,%r13
000000000004cc38	je	0x0004cc56
000000000004cc3a	movq	0x00058997(%rip),%rsi
000000000004cc41	movq	%r13,%rdi
000000000004cc44	call	*0x0003748e(%rip)
000000000004cc4a	cmpl	$0x03,%ebx
000000000004cc4d	je	0x0004cc56
000000000004cc4f	movb	$0x01,%cl
000000000004cc51	cmpl	$0x03,%eax
000000000004cc54	jne	0x0004cc97
000000000004cc56	movq	0x20(%r15),%rax
000000000004cc5a	movq	0x38(%r15),%rdx
000000000004cc5e	movq	0x00062a2b(%rip),%rcx
000000000004cc65	movq	(%rax,%rcx),%rdi
000000000004cc69	movq	0x000586f0(%rip),%rsi
000000000004cc70	movq	0x00037461(%rip),%rbx
000000000004cc77	call	*%rbx
000000000004cc79	movq	0x20(%r15),%rax
000000000004cc7d	movq	0x40(%r15),%rdx
000000000004cc81	movq	0x000629d8(%rip),%rcx
000000000004cc88	movq	(%rax,%rcx),%rdi
000000000004cc8c	movq	0x0005b51d(%rip),%rsi
000000000004cc93	call	*%rbx
000000000004cc95	movb	$0x01,%cl
000000000004cc97	movzbl	%cl,%eax
000000000004cc9a	addq	$0x68,%rsp
000000000004cc9e	popq	%rbx
000000000004cc9f	popq	%r12
000000000004cca1	popq	%r13
000000000004cca3	popq	%r14
000000000004cca5	popq	%r15
000000000004cca7	popq	%rbp
000000000004cca8	ret
___block_global_0:
000000000004cca9	pushq	%rbp
000000000004ccaa	movq	%rsp,%rbp
000000000004ccad	movq	%rdi,%rax
000000000004ccb0	movq	0x20(%rax),%rdi
000000000004ccb4	movq	0x28(%rax),%rcx
000000000004ccb8	movq	0x10(%rdi),%rax
000000000004ccbc	movq	0x08(%rcx),%rcx
000000000004ccc0	movq	0x28(%rcx),%rsi
000000000004ccc4	xorl	%edx,%edx
000000000004ccc6	popq	%rbp
000000000004ccc7	jmp	*%rax
000000000004ccc9	nopl	0x00000000(%rax)
___copy_helper_block_115:
000000000004ccd0	pushq	%rbp
000000000004ccd1	movq	%rsp,%rbp
000000000004ccd4	pushq	%r14
000000000004ccd6	pushq	%rbx
000000000004ccd7	movq	%rsi,%r14
000000000004ccda	movq	%rdi,%rbx
000000000004ccdd	movq	0x20(%r14),%rsi
000000000004cce1	leaq	0x20(%rbx),%rdi
000000000004cce5	movl	$0x00000007,%edx
000000000004ccea	callq	0x0004e662	; symbol stub for: __Block_object_assign
000000000004ccef	addq	$0x28,%rbx
000000000004ccf3	movq	0x28(%r14),%rsi
000000000004ccf7	movq	%rbx,%rdi
000000000004ccfa	movl	$0x00000008,%edx
000000000004ccff	popq	%rbx
000000000004cd00	popq	%r14
000000000004cd02	popq	%rbp
000000000004cd03	jmp	0x0004e662	; symbol stub for: __Block_object_assign
000000000004cd08	nopl	0x00000000(%rax,%rax)
___destroy_helper_block_116:
000000000004cd10	pushq	%rbp
000000000004cd11	movq	%rsp,%rbp
000000000004cd14	pushq	%rbx
000000000004cd15	pushq	%rax
000000000004cd16	movq	%rdi,%rbx
000000000004cd19	movq	0x20(%rbx),%rdi
000000000004cd1d	movl	$0x00000007,%esi
000000000004cd22	callq	0x0004e668	; symbol stub for: __Block_object_dispose
000000000004cd27	movq	0x28(%rbx),%rdi
000000000004cd2b	movl	$0x00000008,%esi
000000000004cd30	addq	$0x08,%rsp
000000000004cd34	popq	%rbx
000000000004cd35	popq	%rbp
000000000004cd36	jmp	0x0004e668	; symbol stub for: __Block_object_dispose
000000000004cd3b	nopl	0x00(%rax,%rax)
___copy_helper_block_123:
000000000004cd40	pushq	%rbp
000000000004cd41	movq	%rsp,%rbp
000000000004cd44	pushq	%r14
000000000004cd46	pushq	%rbx
000000000004cd47	movq	%rsi,%r14
000000000004cd4a	movq	%rdi,%rbx
000000000004cd4d	movq	0x20(%r14),%rsi
000000000004cd51	leaq	0x20(%rbx),%rdi
000000000004cd55	movl	$0x00000003,%edx
000000000004cd5a	callq	0x0004e662	; symbol stub for: __Block_object_assign
000000000004cd5f	movq	0x30(%r14),%rsi
000000000004cd63	leaq	0x30(%rbx),%rdi
000000000004cd67	movl	$0x00000007,%edx
000000000004cd6c	callq	0x0004e662	; symbol stub for: __Block_object_assign
000000000004cd71	leaq	0x38(%rbx),%rdi
000000000004cd75	movq	0x38(%r14),%rsi
000000000004cd79	movl	$0x00000003,%edx
000000000004cd7e	callq	0x0004e662	; symbol stub for: __Block_object_assign
000000000004cd83	addq	$0x40,%rbx
000000000004cd87	movq	0x40(%r14),%rsi
000000000004cd8b	movq	%rbx,%rdi
000000000004cd8e	movl	$0x00000007,%edx
000000000004cd93	popq	%rbx
000000000004cd94	popq	%r14
000000000004cd96	popq	%rbp
000000000004cd97	jmp	0x0004e662	; symbol stub for: __Block_object_assign
000000000004cd9c	nopl	0x00(%rax)
___destroy_helper_block_124:
000000000004cda0	pushq	%rbp
000000000004cda1	movq	%rsp,%rbp
000000000004cda4	pushq	%rbx
000000000004cda5	pushq	%rax
000000000004cda6	movq	%rdi,%rbx
000000000004cda9	movq	0x20(%rbx),%rdi
000000000004cdad	movl	$0x00000003,%esi
000000000004cdb2	callq	0x0004e668	; symbol stub for: __Block_object_dispose
000000000004cdb7	movq	0x30(%rbx),%rdi
000000000004cdbb	movl	$0x00000007,%esi
000000000004cdc0	callq	0x0004e668	; symbol stub for: __Block_object_dispose
000000000004cdc5	movq	0x38(%rbx),%rdi
000000000004cdc9	movl	$0x00000003,%esi
000000000004cdce	callq	0x0004e668	; symbol stub for: __Block_object_dispose
000000000004cdd3	movq	0x40(%rbx),%rdi
000000000004cdd7	movl	$0x00000007,%esi
000000000004cddc	addq	$0x08,%rsp
000000000004cde0	popq	%rbx
000000000004cde1	popq	%rbp
000000000004cde2	jmp	0x0004e668	; symbol stub for: __Block_object_dispose
-[DBGGDBStackFrame requestDataValueForSymbol:symbolKind:atLocation:onQueue:withResultBlock:]:
000000000004cde7	pushq	%rbp
000000000004cde8	movq	%rsp,%rbp
000000000004cdeb	movq	0x0005b3a6(%rip),%rsi
000000000004cdf2	movq	%r8,%rcx
000000000004cdf5	xorl	%r8d,%r8d
000000000004cdf8	popq	%rbp
000000000004cdf9	jmp	*0x000372d9(%rip)
000000000004cdff	nop
___copy_helper_block_137:
000000000004ce00	pushq	%rbp
000000000004ce01	movq	%rsp,%rbp
000000000004ce04	pushq	%r14
000000000004ce06	pushq	%rbx
000000000004ce07	movq	%rsi,%r14
000000000004ce0a	movq	%rdi,%rbx
000000000004ce0d	movq	0x20(%r14),%rsi
000000000004ce11	leaq	0x20(%rbx),%rdi
000000000004ce15	movl	$0x00000008,%edx
000000000004ce1a	callq	0x0004e662	; symbol stub for: __Block_object_assign
000000000004ce1f	movq	0x28(%r14),%rsi
000000000004ce23	leaq	0x28(%rbx),%rdi
000000000004ce27	movl	$0x00000003,%edx
000000000004ce2c	callq	0x0004e662	; symbol stub for: __Block_object_assign
000000000004ce31	addq	$0x30,%rbx
000000000004ce35	movq	0x30(%r14),%rsi
000000000004ce39	movq	%rbx,%rdi
000000000004ce3c	movl	$0x00000007,%edx
000000000004ce41	popq	%rbx
000000000004ce42	popq	%r14
000000000004ce44	popq	%rbp
000000000004ce45	jmp	0x0004e662	; symbol stub for: __Block_object_assign
000000000004ce4a	nopw	0x00(%rax,%rax)
___destroy_helper_block_138:
000000000004ce50	pushq	%rbp
000000000004ce51	movq	%rsp,%rbp
000000000004ce54	pushq	%rbx
000000000004ce55	pushq	%rax
000000000004ce56	movq	%rdi,%rbx
000000000004ce59	movq	0x20(%rbx),%rdi
000000000004ce5d	movl	$0x00000008,%esi
000000000004ce62	callq	0x0004e668	; symbol stub for: __Block_object_dispose
000000000004ce67	movq	0x28(%rbx),%rdi
000000000004ce6b	movl	$0x00000003,%esi
000000000004ce70	callq	0x0004e668	; symbol stub for: __Block_object_dispose
000000000004ce75	movq	0x30(%rbx),%rdi
000000000004ce79	movl	$0x00000007,%esi
000000000004ce7e	addq	$0x08,%rsp
000000000004ce82	popq	%rbx
000000000004ce83	popq	%rbp
000000000004ce84	jmp	0x0004e668	; symbol stub for: __Block_object_dispose
000000000004ce89	nop
000000000004ce8a	nop
000000000004ce8b	nop
000000000004ce8c	nop
000000000004ce8d	nop
000000000004ce8e	nop
000000000004ce8f	nop
___copy_helper_block_148:
000000000004ce90	pushq	%rbp
000000000004ce91	movq	%rsp,%rbp
000000000004ce94	addq	$0x20,%rdi
000000000004ce98	movq	0x20(%rsi),%rsi
000000000004ce9c	movl	$0x00000003,%edx
000000000004cea1	popq	%rbp
000000000004cea2	jmp	0x0004e662	; symbol stub for: __Block_object_assign
000000000004cea7	nopw	0x00000000(%rax,%rax)
___destroy_helper_block_149:
000000000004ceb0	pushq	%rbp
000000000004ceb1	movq	%rsp,%rbp
000000000004ceb4	movq	0x20(%rdi),%rdi
000000000004ceb8	movl	$0x00000003,%esi
000000000004cebd	popq	%rbp
000000000004cebe	jmp	0x0004e668	; symbol stub for: __Block_object_dispose
000000000004cec3	nop
000000000004cec4	nop
000000000004cec5	nop
000000000004cec6	nop
000000000004cec7	nop
000000000004cec8	nop
000000000004cec9	nop
000000000004ceca	nop
000000000004cecb	nop
000000000004cecc	nop
000000000004cecd	nop
000000000004cece	nop
000000000004cecf	nop
___copy_helper_block_159:
000000000004ced0	pushq	%rbp
000000000004ced1	movq	%rsp,%rbp
000000000004ced4	addq	$0x20,%rdi
000000000004ced8	movq	0x20(%rsi),%rsi
000000000004cedc	movl	$0x00000003,%edx
000000000004cee1	popq	%rbp
000000000004cee2	jmp	0x0004e662	; symbol stub for: __Block_object_assign
000000000004cee7	nopw	0x00000000(%rax,%rax)
___destroy_helper_block_160:
000000000004cef0	pushq	%rbp
000000000004cef1	movq	%rsp,%rbp
000000000004cef4	movq	0x20(%rdi),%rdi
000000000004cef8	movl	$0x00000003,%esi
000000000004cefd	popq	%rbp
000000000004cefe	jmp	0x0004e668	; symbol stub for: __Block_object_dispose
000000000004cf03	nop
000000000004cf04	nop
000000000004cf05	nop
000000000004cf06	nop
000000000004cf07	nop
000000000004cf08	nop
000000000004cf09	nop
000000000004cf0a	nop
000000000004cf0b	nop
___block_global_1:
000000000004cf0c	pushq	%rbp
000000000004cf0d	movq	%rsp,%rbp
000000000004cf10	pushq	%r14
000000000004cf12	pushq	%rbx
000000000004cf13	movq	%rdi,%rbx
000000000004cf16	movq	0x20(%rbx),%rdi
000000000004cf1a	movq	0x0005866f(%rip),%rsi
000000000004cf21	call	*0x000371b1(%rip)
000000000004cf27	cmpl	$0x02,%eax
000000000004cf2a	je	0x0004cf30
000000000004cf2c	xorb	%al,%al
000000000004cf2e	jmp	0x0004cf6b
000000000004cf30	movq	0x20(%rbx),%rdi
000000000004cf34	movq	0x28(%rbx),%rbx
000000000004cf38	movq	0x00058749(%rip),%rsi
000000000004cf3f	movq	0x00037192(%rip),%r14
000000000004cf46	call	*%r14
000000000004cf49	movq	0x0005b270(%rip),%rsi
000000000004cf50	movq	%rbx,%rdi
000000000004cf53	movq	%rax,%rdx
000000000004cf56	call	*%r14
000000000004cf59	movq	0x0005b278(%rip),%rsi
000000000004cf60	movq	%rbx,%rdi
000000000004cf63	movq	%rax,%rdx
000000000004cf66	call	*%r14
000000000004cf69	movb	$0x01,%al
000000000004cf6b	movzbl	%al,%eax
000000000004cf6e	popq	%rbx
000000000004cf6f	popq	%r14
000000000004cf71	popq	%rbp
000000000004cf72	ret
000000000004cf73	nopl	%cs:0x00000000(%rax,%rax)
___copy_helper_block_173:
000000000004cf80	pushq	%rbp
000000000004cf81	movq	%rsp,%rbp
000000000004cf84	pushq	%r14
000000000004cf86	pushq	%rbx
000000000004cf87	movq	%rsi,%r14
000000000004cf8a	movq	%rdi,%rbx
000000000004cf8d	movq	0x20(%r14),%rsi
000000000004cf91	leaq	0x20(%rbx),%rdi
000000000004cf95	movl	$0x00000003,%edx
000000000004cf9a	callq	0x0004e662	; symbol stub for: __Block_object_assign
000000000004cf9f	addq	$0x28,%rbx
000000000004cfa3	movq	0x28(%r14),%rsi
000000000004cfa7	movq	%rbx,%rdi
000000000004cfaa	movl	$0x00000003,%edx
000000000004cfaf	popq	%rbx
000000000004cfb0	popq	%r14
000000000004cfb2	popq	%rbp
000000000004cfb3	jmp	0x0004e662	; symbol stub for: __Block_object_assign
000000000004cfb8	nopl	0x00000000(%rax,%rax)
___destroy_helper_block_174:
000000000004cfc0	pushq	%rbp
000000000004cfc1	movq	%rsp,%rbp
000000000004cfc4	pushq	%rbx
000000000004cfc5	pushq	%rax
000000000004cfc6	movq	%rdi,%rbx
000000000004cfc9	movq	0x20(%rbx),%rdi
000000000004cfcd	movl	$0x00000003,%esi
000000000004cfd2	callq	0x0004e668	; symbol stub for: __Block_object_dispose
000000000004cfd7	movq	0x28(%rbx),%rdi
000000000004cfdb	movl	$0x00000003,%esi
000000000004cfe0	addq	$0x08,%rsp
000000000004cfe4	popq	%rbx
000000000004cfe5	popq	%rbp
000000000004cfe6	jmp	0x0004e668	; symbol stub for: __Block_object_dispose
000000000004cfeb	nopl	0x00(%rax,%rax)
___copy_helper_block_178:
000000000004cff0	pushq	%rbp
000000000004cff1	movq	%rsp,%rbp
000000000004cff4	addq	$0x20,%rdi
000000000004cff8	movq	0x20(%rsi),%rsi
000000000004cffc	movl	$0x00000003,%edx
000000000004d001	popq	%rbp
000000000004d002	jmp	0x0004e662	; symbol stub for: __Block_object_assign
000000000004d007	nopw	0x00000000(%rax,%rax)
___destroy_helper_block_179:
000000000004d010	pushq	%rbp
000000000004d011	movq	%rsp,%rbp
000000000004d014	movq	0x20(%rdi),%rdi
000000000004d018	movl	$0x00000003,%esi
000000000004d01d	popq	%rbp
000000000004d01e	jmp	0x0004e668	; symbol stub for: __Block_object_dispose
-[DBGGDBStackFrame registers]:
000000000004d023	pushq	%rbp
000000000004d024	movq	%rsp,%rbp
000000000004d027	pushq	%r15
000000000004d029	pushq	%r14
000000000004d02b	pushq	%r13
000000000004d02d	pushq	%r12
000000000004d02f	pushq	%rbx
000000000004d030	subq	$0x00000118,%rsp
000000000004d037	movq	%rdi,%r14
000000000004d03a	movq	0x0003705f(%rip),%rax
000000000004d041	movq	(%rax),%rax
000000000004d044	movq	%rax,0xd0(%rbp)
000000000004d048	movq	0x00062621(%rip),%rax
000000000004d04f	movq	(%r14,%rax),%rbx
000000000004d053	movq	0x0005bb36(%rip),%rdi
000000000004d05a	leaq	0x0005b2cf(%rip),%rsi
000000000004d061	call	*0x0005b2c9(%rip)
000000000004d067	leaq	0x0005b2d2(%rip),%rsi
000000000004d06e	movq	%rbx,%rdi
000000000004d071	movq	%rax,%rdx
000000000004d074	call	*0x0005b2c6(%rip)
000000000004d07a	testb	%al,%al
000000000004d07c	je	0x0004d2b3
000000000004d082	movq	0x000625e7(%rip),%rdx
000000000004d089	xorl	%edi,%edi
000000000004d08b	movq	%r14,%rsi
000000000004d08e	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000004d093	movq	0x00057e46(%rip),%rsi
000000000004d09a	movq	0x00037037(%rip),%r15
000000000004d0a1	movq	%r14,%rdi
000000000004d0a4	call	*%r15
000000000004d0a7	movq	0x0005851a(%rip),%rsi
000000000004d0ae	movq	%rax,%rdi
000000000004d0b1	call	*%r15
000000000004d0b4	movq	%rax,%rbx
000000000004d0b7	movq	%rbx,0xfffffed0(%rbp)
000000000004d0be	movq	0x0005836b(%rip),%rsi
000000000004d0c5	movq	0x0005b394(%rip),%rdi
000000000004d0cc	call	*%r15
000000000004d0cf	movq	%rax,0xfffffed8(%rbp)
000000000004d0d6	xorps	%xmm0,%xmm0
000000000004d0d9	movaps	%xmm0,0xc0(%rbp)
000000000004d0dd	movaps	%xmm0,0xb0(%rbp)
000000000004d0e1	movaps	%xmm0,0xa0(%rbp)
000000000004d0e5	movaps	%xmm0,0x90(%rbp)
000000000004d0e9	movq	0x00058450(%rip),%rsi
000000000004d0f0	movq	%rbx,%rdi
000000000004d0f3	call	*%r15
000000000004d0f6	movq	%rax,0xfffffee0(%rbp)
000000000004d0fd	leaq	0x0005b27c(%rip),%rsi
000000000004d104	leaq	0x90(%rbp),%rdx
000000000004d108	leaq	0xffffff10(%rbp),%rcx
000000000004d10f	movq	%rax,%rdi
000000000004d112	movl	$0x00000010,%r8d
000000000004d118	call	*0x0005b262(%rip)
000000000004d11e	movq	%rax,%r13
000000000004d121	testq	%r13,%r13
000000000004d124	je	0x0004d286
000000000004d12a	movq	0xa0(%rbp),%rax
000000000004d12e	movq	(%rax),%rax
000000000004d131	movq	%rax,0xfffffec8(%rbp)
000000000004d138	movq	0x00036f99(%rip),%r15
000000000004d13f	xorl	%r12d,%r12d
000000000004d142	movq	%r14,%rbx
000000000004d145	movq	0xa0(%rbp),%rax
000000000004d149	movq	0xfffffec8(%rbp),%rcx
000000000004d150	cmpq	%rcx,(%rax)
000000000004d153	je	0x0004d161
000000000004d155	movq	0xfffffee0(%rbp),%rdi
000000000004d15c	callq	0x0004e626	; symbol stub for: _objc_enumerationMutation
000000000004d161	movq	0x98(%rbp),%rax
000000000004d165	movq	(%rax,%r12,8),%r14
000000000004d169	movq	%r14,%rdi
000000000004d16c	movq	0x00058515(%rip),%rsi
000000000004d173	call	*0x00036f5f(%rip)
000000000004d179	movq	%rax,%rdi
000000000004d17c	leaq	0x0005b18d(%rip),%rsi
000000000004d183	call	*0x0005b187(%rip)
000000000004d189	testq	%rax,%rax
000000000004d18c	jne	0x0004d1a0
000000000004d18e	movq	%r14,%rdi
000000000004d191	movq	0x00058400(%rip),%rsi
000000000004d198	xorl	%edx,%edx
000000000004d19a	call	*0x00036f38(%rip)
000000000004d1a0	movq	0x0005bb11(%rip),%rdi
000000000004d1a7	leaq	0x0005b132(%rip),%rsi
000000000004d1ae	call	*0x0005b12c(%rip)
000000000004d1b4	movq	%rax,%rdi
000000000004d1b7	movq	0x0005afea(%rip),%rsi
000000000004d1be	movq	%r14,%rdx
000000000004d1c1	movq	%rbx,%r14
000000000004d1c4	movq	%r14,%rcx
000000000004d1c7	call	*%r15
000000000004d1ca	movq	%rax,%rbx
000000000004d1cd	movq	0xfffffed8(%rbp),%rdi
000000000004d1d4	leaq	0x0005b125(%rip),%rsi
000000000004d1db	movq	%rbx,%rdx
000000000004d1de	call	*0x0005b11c(%rip)
000000000004d1e4	movq	0x00036ea5(%rip),%rax
000000000004d1eb	movq	%rax,0xfffffee8(%rbp)
000000000004d1f2	movl	$0x42000000,0xfffffef0(%rbp)
000000000004d1fc	movl	$0x00000000,0xfffffef4(%rbp)
000000000004d206	leaq	0x000000d8(%rip),%rax
000000000004d20d	movq	%rax,0xfffffef8(%rbp)
000000000004d214	leaq	0x0006a325(%rip),%rax
000000000004d21b	movq	%rax,0xffffff00(%rbp)
000000000004d222	movq	0xfffffed0(%rbp),%rdi
000000000004d229	leaq	0xffffff08(%rbp),%rsi
000000000004d230	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
000000000004d235	movq	%rbx,%rdi
000000000004d238	movq	0x0005afa1(%rip),%rsi
000000000004d23f	leaq	0xfffffee8(%rbp),%rdx
000000000004d246	call	*%r15
000000000004d249	incq	%r12
000000000004d24c	cmpq	%r13,%r12
000000000004d24f	jb	0x0004d142
000000000004d255	movq	0xfffffee0(%rbp),%rdi
000000000004d25c	leaq	0x0005b11d(%rip),%rsi
000000000004d263	leaq	0x90(%rbp),%rdx
000000000004d267	leaq	0xffffff10(%rbp),%rcx
000000000004d26e	movl	$0x00000010,%r8d
000000000004d274	call	*0x0005b106(%rip)
000000000004d27a	movq	%rax,%r13
000000000004d27d	testq	%r13,%r13
000000000004d280	jne	0x0004d13f
000000000004d286	movq	0x0005a4db(%rip),%rsi
000000000004d28d	movq	0x0005b3cc(%rip),%rdi
000000000004d294	movq	0xfffffed8(%rbp),%rdx
000000000004d29b	call	*0x00036e37(%rip)
000000000004d2a1	movq	0x000623c8(%rip),%rdx
000000000004d2a8	movq	%rax,%rdi
000000000004d2ab	movq	%r14,%rsi
000000000004d2ae	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000004d2b3	movq	0x00036de6(%rip),%rax
000000000004d2ba	movq	(%rax),%rax
000000000004d2bd	cmpq	0xd0(%rbp),%rax
000000000004d2c1	jne	0x0004d2e0
000000000004d2c3	movq	0x000623a6(%rip),%rax
000000000004d2ca	movq	(%r14,%rax),%rax
000000000004d2ce	addq	$0x00000118,%rsp
000000000004d2d5	popq	%rbx
000000000004d2d6	popq	%r12
000000000004d2d8	popq	%r13
000000000004d2da	popq	%r14
000000000004d2dc	popq	%r15
000000000004d2de	popq	%rbp
000000000004d2df	ret
000000000004d2e0	callq	0x0004e686	; symbol stub for: ___stack_chk_fail
___29-[DBGGDBStackFrame registers]_block_invoke_0:
000000000004d2e5	pushq	%rbp
000000000004d2e6	movq	%rsp,%rbp
000000000004d2e9	pushq	%rbx
000000000004d2ea	pushq	%rax
000000000004d2eb	movq	0x20(%rdi),%rbx
000000000004d2ef	movq	0x0005ace2(%rip),%rax
000000000004d2f6	movq	%rsi,%rdi
000000000004d2f9	movq	%rax,%rsi
000000000004d2fc	call	*0x00036dd6(%rip)
000000000004d302	movq	0x00058137(%rip),%rsi
000000000004d309	movq	%rbx,%rdi
000000000004d30c	movq	%rax,%rdx
000000000004d30f	movq	0x00036dc2(%rip),%rax
000000000004d316	addq	$0x08,%rsp
000000000004d31a	popq	%rbx
000000000004d31b	popq	%rbp
000000000004d31c	jmp	*%rax
000000000004d31e	nop
___copy_helper_block_191:
000000000004d320	pushq	%rbp
000000000004d321	movq	%rsp,%rbp
000000000004d324	addq	$0x20,%rdi
000000000004d328	movq	0x20(%rsi),%rsi
000000000004d32c	movl	$0x00000003,%edx
000000000004d331	popq	%rbp
000000000004d332	jmp	0x0004e662	; symbol stub for: __Block_object_assign
000000000004d337	nopw	0x00000000(%rax,%rax)
___destroy_helper_block_192:
000000000004d340	pushq	%rbp
000000000004d341	movq	%rsp,%rbp
000000000004d344	movq	0x20(%rdi),%rdi
000000000004d348	movl	$0x00000003,%esi
000000000004d34d	popq	%rbp
000000000004d34e	jmp	0x0004e668	; symbol stub for: __Block_object_dispose
-[DBGGDBStackFrame stackFrame:requestDisassembly:]:
000000000004d353	pushq	%rbp
000000000004d354	movq	%rsp,%rbp
000000000004d357	pushq	%rbx
000000000004d358	subq	$0x38,%rsp
000000000004d35c	movq	%rcx,%rbx
000000000004d35f	movq	0x00036d2a(%rip),%rax
000000000004d366	movq	%rax,0xc8(%rbp)
000000000004d36a	movl	$0x42000000,0xd0(%rbp)
000000000004d371	movl	$0x00000000,0xd4(%rbp)
000000000004d378	leaq	0x0000003b(%rip),%rax
000000000004d37f	movq	%rax,0xd8(%rbp)
000000000004d383	leaq	0x0006a1e6(%rip),%rax
000000000004d38a	movq	%rax,0xe0(%rbp)
000000000004d38e	leaq	0xe8(%rbp),%rsi
000000000004d392	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
000000000004d397	leaq	0xf0(%rbp),%rsi
000000000004d39b	movq	%rbx,%rdi
000000000004d39e	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
000000000004d3a3	movq	0x00036cfe(%rip),%rdi
000000000004d3aa	leaq	0xc8(%rbp),%rsi
000000000004d3ae	callq	0x0004e5a8	; symbol stub for: _DVTAsyncPerformBlock
000000000004d3b3	addq	$0x38,%rsp
000000000004d3b7	popq	%rbx
000000000004d3b8	popq	%rbp
000000000004d3b9	ret
___50-[DBGGDBStackFrame stackFrame:requestDisassembly:]_block_invoke_0:
000000000004d3ba	pushq	%rbp
000000000004d3bb	movq	%rsp,%rbp
000000000004d3be	movq	0x20(%rdi),%rax
000000000004d3c2	movq	0x28(%rdi),%rdx
000000000004d3c6	movq	0x0006229b(%rip),%rcx
000000000004d3cd	movq	(%rax,%rcx),%rdi
000000000004d3d1	movq	0x0005ae10(%rip),%rsi
000000000004d3d8	popq	%rbp
000000000004d3d9	jmp	*0x00036cf9(%rip)
000000000004d3df	nop
___copy_helper_block_202:
000000000004d3e0	pushq	%rbp
000000000004d3e1	movq	%rsp,%rbp
000000000004d3e4	pushq	%r14
000000000004d3e6	pushq	%rbx
000000000004d3e7	movq	%rsi,%r14
000000000004d3ea	movq	%rdi,%rbx
000000000004d3ed	movq	0x20(%r14),%rsi
000000000004d3f1	leaq	0x20(%rbx),%rdi
000000000004d3f5	movl	$0x00000003,%edx
000000000004d3fa	callq	0x0004e662	; symbol stub for: __Block_object_assign
000000000004d3ff	addq	$0x28,%rbx
000000000004d403	movq	0x28(%r14),%rsi
000000000004d407	movq	%rbx,%rdi
000000000004d40a	movl	$0x00000007,%edx
000000000004d40f	popq	%rbx
000000000004d410	popq	%r14
000000000004d412	popq	%rbp
000000000004d413	jmp	0x0004e662	; symbol stub for: __Block_object_assign
000000000004d418	nopl	0x00000000(%rax,%rax)
___destroy_helper_block_203:
000000000004d420	pushq	%rbp
000000000004d421	movq	%rsp,%rbp
000000000004d424	pushq	%rbx
000000000004d425	pushq	%rax
000000000004d426	movq	%rdi,%rbx
000000000004d429	movq	0x20(%rbx),%rdi
000000000004d42d	movl	$0x00000003,%esi
000000000004d432	callq	0x0004e668	; symbol stub for: __Block_object_dispose
000000000004d437	movq	0x28(%rbx),%rdi
000000000004d43b	movl	$0x00000007,%esi
000000000004d440	addq	$0x08,%rsp
000000000004d444	popq	%rbx
000000000004d445	popq	%rbp
000000000004d446	jmp	0x0004e668	; symbol stub for: __Block_object_dispose
000000000004d44b	nop
-[DBGGDBStackFrame setRegisters:]:
000000000004d44c	pushq	%rbp
000000000004d44d	movq	%rsp,%rbp
000000000004d450	movq	%rdx,%rax
000000000004d453	movq	0x00062216(%rip),%rdx
000000000004d45a	movq	%rax,%rcx
000000000004d45d	xorl	%r8d,%r8d
000000000004d460	movl	$0x00000001,%r9d
000000000004d466	popq	%rbp
000000000004d467	jmp	0x0004e644	; symbol stub for: _objc_setProperty
000000000004d46c	nop
000000000004d46d	nop
000000000004d46e	nop
000000000004d46f	nop
-[DBGGDBDataValue initWithPBXLSDataValue:stackFrame:]:
000000000004d470	pushq	%rbp
000000000004d471	movq	%rsp,%rbp
000000000004d474	pushq	%r14
000000000004d476	pushq	%rbx
000000000004d477	subq	$0x10,%rsp
000000000004d47b	movq	%rdx,%r14
000000000004d47e	movq	%rdi,0xe0(%rbp)
000000000004d482	movq	0x0005bc47(%rip),%rax
000000000004d489	movq	%rax,0xe8(%rbp)
000000000004d48d	movq	0x0005ad5c(%rip),%rsi
000000000004d494	leaq	0xe0(%rbp),%rdi
000000000004d498	movq	%rcx,%rdx
000000000004d49b	callq	0x0004e638	; symbol stub for: _objc_msgSendSuper2
000000000004d4a0	movq	%rax,%rbx
000000000004d4a3	testq	%rbx,%rbx
000000000004d4a6	je	0x0004d5bb
000000000004d4ac	movq	0x000621ed(%rip),%rdx
000000000004d4b3	movq	%r14,%rdi
000000000004d4b6	movq	%rbx,%rsi
000000000004d4b9	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000004d4be	movq	0x000621db(%rip),%rax
000000000004d4c5	movq	(%rbx,%rax),%rdi
000000000004d4c9	movq	0x0005a608(%rip),%rsi
000000000004d4d0	movq	0x00036c01(%rip),%r14
000000000004d4d7	movq	%rbx,%rdx
000000000004d4da	call	*%r14
000000000004d4dd	movq	0x000621bc(%rip),%rax
000000000004d4e4	movq	(%rbx,%rax),%rdi
000000000004d4e8	movq	0x00057f91(%rip),%rsi
000000000004d4ef	call	*%r14
000000000004d4f2	movq	0x00057f8f(%rip),%rsi
000000000004d4f9	movq	%rax,%rdi
000000000004d4fc	call	*%r14
000000000004d4ff	movq	0x0005acf2(%rip),%rsi
000000000004d506	movq	%rbx,%rdi
000000000004d509	movq	%rax,%rdx
000000000004d50c	call	*%r14
000000000004d50f	movq	0x00062192(%rip),%rdx
000000000004d516	movq	%rax,%rdi
000000000004d519	movq	%rbx,%rsi
000000000004d51c	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000004d521	movq	0x00062178(%rip),%rax
000000000004d528	movq	(%rbx,%rax),%rdi
000000000004d52c	movq	0x00058375(%rip),%rsi
000000000004d533	call	*%r14
000000000004d536	movq	0x00057f4b(%rip),%rsi
000000000004d53d	movq	%rax,%rdi
000000000004d540	call	*%r14
000000000004d543	movq	0x0005acae(%rip),%rsi
000000000004d54a	movq	%rbx,%rdi
000000000004d54d	movq	%rax,%rdx
000000000004d550	call	*%r14
000000000004d553	movq	0x0005aca6(%rip),%rsi
000000000004d55a	movq	%rbx,%rdi
000000000004d55d	movq	%rax,%rdx
000000000004d560	call	*%r14
000000000004d563	movq	0x00062146(%rip),%rdx
000000000004d56a	xorl	%edi,%edi
000000000004d56c	movq	%rbx,%rsi
000000000004d56f	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000004d574	movq	0x0005ac8d(%rip),%rsi
000000000004d57b	movq	0x0005b616(%rip),%rdi
000000000004d582	call	*%r14
000000000004d585	movq	0x0006212c(%rip),%rdx
000000000004d58c	movq	%rax,%rdi
000000000004d58f	movq	%rbx,%rsi
000000000004d592	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000004d597	movq	0x00062102(%rip),%rax
000000000004d59e	movq	(%rbx,%rax),%rdi
000000000004d5a2	movq	0x00057fe7(%rip),%rsi
000000000004d5a9	call	*%r14
000000000004d5ac	movq	0x00059e1d(%rip),%rsi
000000000004d5b3	movq	%rbx,%rdi
000000000004d5b6	movl	%eax,%edx
000000000004d5b8	call	*%r14
000000000004d5bb	movq	%rbx,%rax
000000000004d5be	addq	$0x10,%rsp
000000000004d5c2	popq	%rbx
000000000004d5c3	popq	%r14
000000000004d5c5	popq	%rbp
000000000004d5c6	ret
-[DBGGDBDataValue setPbxDataValue:]:
000000000004d5c7	pushq	%rbp
000000000004d5c8	movq	%rsp,%rbp
000000000004d5cb	pushq	%rbx
000000000004d5cc	pushq	%rax
000000000004d5cd	movq	%rdx,%rax
000000000004d5d0	movq	%rdi,%rbx
000000000004d5d3	movq	0x000620c6(%rip),%rdx
000000000004d5da	movq	%rax,%rdi
000000000004d5dd	movq	%rbx,%rsi
000000000004d5e0	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000004d5e5	movq	0x000620b4(%rip),%rax
000000000004d5ec	movq	(%rbx,%rax),%rdi
000000000004d5f0	movq	0x0005a4e1(%rip),%rsi
000000000004d5f7	movq	%rbx,%rdx
000000000004d5fa	call	*0x00036ad8(%rip)
000000000004d600	movq	0x00062099(%rip),%rax
000000000004d607	movq	(%rbx,%rax),%rdi
000000000004d60b	movq	0x00057f7e(%rip),%rsi
000000000004d612	call	*0x00036ac0(%rip)
000000000004d618	movq	0x00059db1(%rip),%rsi
000000000004d61f	movq	%rbx,%rdi
000000000004d622	movl	%eax,%edx
000000000004d624	call	*0x00036aae(%rip)
000000000004d62a	movq	0x0006206f(%rip),%rax
000000000004d631	movq	(%rbx,%rax),%rdi
000000000004d635	movq	0x00057e44(%rip),%rsi
000000000004d63c	call	*0x00036a96(%rip)
000000000004d642	movq	0x00059d3f(%rip),%rsi
000000000004d649	movq	%rbx,%rdi
000000000004d64c	movq	%rax,%rdx
000000000004d64f	call	*0x00036a83(%rip)
000000000004d655	movq	0x00062044(%rip),%rax
000000000004d65c	movq	(%rbx,%rax),%rdi
000000000004d660	movq	0x00058241(%rip),%rsi
000000000004d667	call	*0x00036a6b(%rip)
000000000004d66d	movq	0x00059d24(%rip),%rsi
000000000004d674	movq	%rbx,%rdi
000000000004d677	movq	%rax,%rdx
000000000004d67a	movq	0x00036a57(%rip),%rax
000000000004d681	addq	$0x08,%rsp
000000000004d685	popq	%rbx
000000000004d686	popq	%rbp
000000000004d687	jmp	*%rax
000000000004d689	nop
000000000004d68a	nop
000000000004d68b	nop
000000000004d68c	nop
000000000004d68d	nop
000000000004d68e	nop
000000000004d68f	nop
000000000004d690	nop
000000000004d691	nop
-[DBGGDBDataValue setValue:]:
000000000004d692	pushq	%rbp
000000000004d693	movq	%rsp,%rbp
000000000004d696	pushq	%r14
000000000004d698	pushq	%rbx
000000000004d699	movq	%rdx,%r14
000000000004d69c	movq	%rdi,%rbx
000000000004d69f	movq	0x00058832(%rip),%rsi
000000000004d6a6	call	*0x00036a2c(%rip)
000000000004d6ac	leaq	0x0005acad(%rip),%rsi
000000000004d6b3	movq	%rax,%rdi
000000000004d6b6	movq	%r14,%rdx
000000000004d6b9	call	*0x0005aca1(%rip)
000000000004d6bf	testb	%al,%al
000000000004d6c1	je	0x0004d6c8
000000000004d6c3	popq	%rbx
000000000004d6c4	popq	%r14
000000000004d6c6	popq	%rbp
000000000004d6c7	ret
000000000004d6c8	movq	0x0005a909(%rip),%rsi
000000000004d6cf	movq	%rbx,%rdi
000000000004d6d2	call	*0x00036a00(%rip)
000000000004d6d8	movq	0x0005ab49(%rip),%rsi
000000000004d6df	movq	%rax,%rdi
000000000004d6e2	movq	%r14,%rdx
000000000004d6e5	movq	0x000369ec(%rip),%rax
000000000004d6ec	popq	%rbx
000000000004d6ed	popq	%r14
000000000004d6ef	popq	%rbp
000000000004d6f0	jmp	*%rax
000000000004d6f2	nop
000000000004d6f3	nop
000000000004d6f4	nop
000000000004d6f5	nop
000000000004d6f6	nop
-[DBGGDBDataValue format]:
000000000004d6f7	pushq	%rbp
000000000004d6f8	movq	%rsp,%rbp
000000000004d6fb	pushq	%rbx
000000000004d6fc	pushq	%rax
000000000004d6fd	movq	0x00061f9c(%rip),%rax
000000000004d704	movq	(%rdi,%rax),%rdi
000000000004d708	movq	0x0005b489(%rip),%rbx
000000000004d70f	movq	0x00057d92(%rip),%rsi
000000000004d716	call	*0x000369bc(%rip)
000000000004d71c	movl	%eax,%edx
000000000004d71e	movq	0x0005ab0b(%rip),%rsi
000000000004d725	movq	%rbx,%rdi
000000000004d728	movq	0x000369a9(%rip),%rax
000000000004d72f	addq	$0x08,%rsp
000000000004d733	popq	%rbx
000000000004d734	popq	%rbp
000000000004d735	jmp	*%rax
-[DBGGDBDataValue setFormat:]:
000000000004d737	pushq	%rbp
000000000004d738	movq	%rsp,%rbp
000000000004d73b	pushq	%r14
000000000004d73d	pushq	%rbx
000000000004d73e	movq	%rdx,%rbx
000000000004d741	movq	%rdi,%r14
000000000004d744	movq	0x000586dd(%rip),%rsi
000000000004d74b	call	*0x00036987(%rip)
000000000004d751	leaq	0x0005ac38(%rip),%rsi
000000000004d758	movq	%rbx,%rdi
000000000004d75b	movq	%rax,%rdx
000000000004d75e	call	*0x0005ac2c(%rip)
000000000004d764	testb	%al,%al
000000000004d766	je	0x0004d76d
000000000004d768	popq	%rbx
000000000004d769	popq	%r14
000000000004d76b	popq	%rbp
000000000004d76c	ret
000000000004d76d	movq	0x00061f44(%rip),%rdx
000000000004d774	movq	%rbx,%rdi
000000000004d777	movq	%r14,%rsi
000000000004d77a	callq	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000004d77f	movq	0x0005a8b2(%rip),%rsi
000000000004d786	movq	%rbx,%rdi
000000000004d789	call	*0x00036949(%rip)
000000000004d78f	movq	0x00061f0a(%rip),%rcx
000000000004d796	movq	(%r14,%rcx),%rdi
000000000004d79a	movq	0x00057d0f(%rip),%rsi
000000000004d7a1	movl	%eax,%edx
000000000004d7a3	movq	0x0003692e(%rip),%rax
000000000004d7aa	popq	%rbx
000000000004d7ab	popq	%r14
000000000004d7ad	popq	%rbp
000000000004d7ae	jmp	*%rax
000000000004d7b0	nop
000000000004d7b1	nop
000000000004d7b2	nop
000000000004d7b3	nop
000000000004d7b4	nop
000000000004d7b5	nop
000000000004d7b6	nop
000000000004d7b7	nop
000000000004d7b8	nop
000000000004d7b9	nop
000000000004d7ba	nop
000000000004d7bb	nop
+[DBGGDBDataValue keyPathsForValuesAffectingInScope]:
000000000004d7bc	pushq	%rbp
000000000004d7bd	movq	%rsp,%rbp
000000000004d7c0	movq	0x0005a991(%rip),%rsi
000000000004d7c7	movq	0x0005aea2(%rip),%rdi
000000000004d7ce	leaq	0x000690e3(%rip),%rdx
000000000004d7d5	popq	%rbp
000000000004d7d6	jmp	*0x000368fc(%rip)
000000000004d7dc	nop
000000000004d7dd	nop
000000000004d7de	nop
000000000004d7df	nop
000000000004d7e0	nop
000000000004d7e1	nop
+[DBGGDBDataValue keyPathsForValuesAffectingDynamicTypeHasChanged]:
000000000004d7e2	pushq	%rbp
000000000004d7e3	movq	%rsp,%rbp
000000000004d7e6	movq	0x0005a96b(%rip),%rsi
000000000004d7ed	movq	0x0005ae7c(%rip),%rdi
000000000004d7f4	leaq	0x0006911d(%rip),%rdx
000000000004d7fb	popq	%rbp
000000000004d7fc	jmp	*0x000368d6(%rip)
000000000004d802	nop
-[DBGGDBDataValue objectInChildrenProxyValuesAtIndex:]:
000000000004d803	pushq	%rbp
000000000004d804	movq	%rsp,%rbp
000000000004d807	pushq	%r15
000000000004d809	pushq	%r14
000000000004d80b	pushq	%r13
000000000004d80d	pushq	%r12
000000000004d80f	pushq	%rbx
000000000004d810	pushq	%rax
000000000004d811	movq	%rdx,%r14
000000000004d814	movq	%rdi,%r15
000000000004d817	movq	0x00061e92(%rip),%rax
000000000004d81e	movq	(%r15,%rax),%rdi
000000000004d822	movq	0x0005aa2f(%rip),%rsi
000000000004d829	call	*0x000368a9(%rip)
000000000004d82f	movq	%rax,%rbx
000000000004d832	testq	%rbx,%rbx
000000000004d835	jne	0x0004d8c7
000000000004d83b	movq	0x0005a796(%rip),%rsi
000000000004d842	movq	0x0003688f(%rip),%r13
000000000004d849	movq	%r15,%rdi
000000000004d84c	call	*%r13
000000000004d84f	movq	0x00057e32(%rip),%rsi
000000000004d856	movq	%rax,%rdi
000000000004d859	call	*%r13
000000000004d85c	leaq	0x0005aabd(%rip),%rsi
000000000004d863	movq	%rax,%rdi
000000000004d866	movq	%r14,%rdx
000000000004d869	call	*0x0005aab1(%rip)
000000000004d86f	movq	%rax,%r12
000000000004d872	leaq	0x0005aa67(%rip),%rsi
000000000004d879	movq	0x0005b438(%rip),%rdi
000000000004d880	call	*0x0005aa5a(%rip)
000000000004d886	movq	%rax,%rbx
000000000004d889	movq	0x00058e88(%rip),%rsi
000000000004d890	movq	%r15,%rdi
000000000004d893	call	*%r13
000000000004d896	movq	0x0005a90b(%rip),%rsi
000000000004d89d	movq	%rbx,%rdi
000000000004d8a0	movq	%r12,%rdx
000000000004d8a3	movq	%rax,%rcx
000000000004d8a6	call	*%r13
000000000004d8a9	movq	%rax,%rbx
000000000004d8ac	movq	0x00061dfd(%rip),%rax
000000000004d8b3	movq	(%r15,%rax),%rdi
000000000004d8b7	movq	0x0005a9a2(%rip),%rsi
000000000004d8be	movq	%r14,%rdx
000000000004d8c1	movq	%rbx,%rcx
000000000004d8c4	call	*%r13
000000000004d8c7	movq	%rbx,%rax
000000000004d8ca	addq	$0x08,%rsp
000000000004d8ce	popq	%rbx
000000000004d8cf	popq	%r12
000000000004d8d1	popq	%r13
000000000004d8d3	popq	%r14
000000000004d8d5	popq	%r15
000000000004d8d7	popq	%rbp
000000000004d8d8	ret
000000000004d8d9	nop
000000000004d8da	nop
-[DBGGDBDataValue watch]:
000000000004d8db	pushq	%rbp
000000000004d8dc	movq	%rsp,%rbp
000000000004d8df	pushq	%rbx
000000000004d8e0	subq	$0x28,%rsp
000000000004d8e4	movq	%rdi,%rbx
000000000004d8e7	movq	0x000367a2(%rip),%rax
000000000004d8ee	movq	%rax,0xd0(%rbp)
000000000004d8f2	movl	$0x42000000,0xd8(%rbp)
000000000004d8f9	movl	$0x00000000,0xdc(%rbp)
000000000004d900	leaq	0x00000042(%rip),%rax
000000000004d907	movq	%rax,0xe0(%rbp)
000000000004d90b	leaq	0x00069c8e(%rip),%rax
000000000004d912	movq	%rax,0xe8(%rbp)
000000000004d916	leaq	0xf0(%rbp),%rsi
000000000004d91a	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
000000000004d91f	leaq	0x00069072(%rip),%rdx
000000000004d926	leaq	0xd0(%rbp),%r9
000000000004d92a	movq	0x00059c6f(%rip),%rsi
000000000004d931	movq	%rbx,%rdi
000000000004d934	movl	$0x00000004,%ecx
000000000004d939	movq	%rbx,%r8
000000000004d93c	call	*0x00036796(%rip)
000000000004d942	addq	$0x28,%rsp
000000000004d946	popq	%rbx
000000000004d947	popq	%rbp
000000000004d948	ret
___24-[DBGGDBDataValue watch]_block_invoke_0:
000000000004d949	pushq	%rbp
000000000004d94a	movq	%rsp,%rbp
000000000004d94d	pushq	%r15
000000000004d94f	pushq	%r14
000000000004d951	pushq	%r13
000000000004d953	pushq	%r12
000000000004d955	pushq	%rbx
000000000004d956	pushq	%rax
000000000004d957	movq	%rcx,0xd0(%rbp)
000000000004d95b	movq	%rdi,%rbx
000000000004d95e	movq	0x20(%rbx),%rdi
000000000004d962	movq	0x0005a8ff(%rip),%rsi
000000000004d969	call	*0x00036769(%rip)
000000000004d96f	leaq	0x0005a97a(%rip),%rsi
000000000004d976	movq	%rax,%rdi
000000000004d979	call	*0x0005a971(%rip)
000000000004d97f	movq	%rax,%r15
000000000004d982	testb	%r15b,%r15b
000000000004d985	je	0x0004da05
000000000004d987	movq	0x20(%rbx),%rdi
000000000004d98b	movq	0x00058d86(%rip),%rsi
000000000004d992	movq	0x0003673f(%rip),%r14
000000000004d999	call	*%r14
000000000004d99c	movq	0x000578f5(%rip),%rsi
000000000004d9a3	movq	%rax,%rdi
000000000004d9a6	call	*%r14
000000000004d9a9	movq	0x000573f8(%rip),%rsi
000000000004d9b0	movq	%rax,%rdi
000000000004d9b3	call	*%r14
000000000004d9b6	movq	0x0005a8b3(%rip),%rsi
000000000004d9bd	movq	%rax,%rdi
000000000004d9c0	call	*%r14
000000000004d9c3	movq	0x00058a1e(%rip),%rsi
000000000004d9ca	movq	%rax,%rdi
000000000004d9cd	call	*%r14
000000000004d9d0	movq	%rax,%r12
000000000004d9d3	movq	0x20(%rbx),%rdi
000000000004d9d7	movq	0x0005a88a(%rip),%rsi
000000000004d9de	call	*%r14
000000000004d9e1	movq	%rax,%r13
000000000004d9e4	movq	0x20(%rbx),%rdi
000000000004d9e8	movq	0x000572b1(%rip),%rsi
000000000004d9ef	call	*%r14
000000000004d9f2	movq	0x000589f7(%rip),%rsi
000000000004d9f9	movq	%r12,%rdi
000000000004d9fc	movq	%r13,%rdx
000000000004d9ff	movq	%rax,%rcx
000000000004da02	call	*%r14
000000000004da05	movq	0xd0(%rbp),%rax
000000000004da09	movb	%r15b,(%rax)
000000000004da0c	addq	$0x08,%rsp
000000000004da10	popq	%rbx
000000000004da11	popq	%r12
000000000004da13	popq	%r13
000000000004da15	popq	%r14
000000000004da17	popq	%r15
000000000004da19	popq	%rbp
000000000004da1a	ret
000000000004da1b	nopl	0x00(%rax,%rax)
___copy_helper_block_:
000000000004da20	pushq	%rbp
000000000004da21	movq	%rsp,%rbp
000000000004da24	addq	$0x20,%rdi
000000000004da28	movq	0x20(%rsi),%rsi
000000000004da2c	movl	$0x00000003,%edx
000000000004da31	popq	%rbp
000000000004da32	jmp	0x0004e662	; symbol stub for: __Block_object_assign
000000000004da37	nopw	0x00000000(%rax,%rax)
___destroy_helper_block_:
000000000004da40	pushq	%rbp
000000000004da41	movq	%rsp,%rbp
000000000004da44	movq	0x20(%rdi),%rdi
000000000004da48	movl	$0x00000003,%esi
000000000004da4d	popq	%rbp
000000000004da4e	jmp	0x0004e668	; symbol stub for: __Block_object_dispose
000000000004da53	nop
000000000004da54	nop
000000000004da55	nop
000000000004da56	nop
000000000004da57	nop
000000000004da58	nop
000000000004da59	nop
000000000004da5a	nop
-[DBGGDBDataValue childrenInserted]:
000000000004da5b	pushq	%rbp
000000000004da5c	movq	%rsp,%rbp
000000000004da5f	movq	0x0005a81a(%rip),%rsi
000000000004da66	popq	%rbp
000000000004da67	jmp	*0x0003666b(%rip)
-[DBGGDBDataValue childrenRemoved]:
000000000004da6d	pushq	%rbp
000000000004da6e	movq	%rsp,%rbp
000000000004da71	movq	0x0005a808(%rip),%rsi
000000000004da78	popq	%rbp
000000000004da79	jmp	*0x00036659(%rip)
-[DBGGDBDataValue _handleChildrenInsertedOrRemoved]:
000000000004da7f	pushq	%rbp
000000000004da80	movq	%rsp,%rbp
000000000004da83	pushq	%r15
000000000004da85	pushq	%r14
000000000004da87	pushq	%rbx
000000000004da88	pushq	%rax
000000000004da89	movq	%rdi,%rbx
000000000004da8c	movq	0x00061c1d(%rip),%rax
000000000004da93	cmpq	$0x00,(%rbx,%rax)
000000000004da98	jne	0x0004daa5
000000000004da9a	addq	$0x08,%rsp
000000000004da9e	popq	%rbx
000000000004da9f	popq	%r14
000000000004daa1	popq	%r15
000000000004daa3	popq	%rbp
000000000004daa4	ret
000000000004daa5	movq	0x00057b44(%rip),%rsi
000000000004daac	leaq	0x00068f05(%rip),%r14
000000000004dab3	movq	%rbx,%rdi
000000000004dab6	movq	%r14,%rdx
000000000004dab9	call	*0x00036619(%rip)
000000000004dabf	movq	0x00061bea(%rip),%rax
000000000004dac6	movq	(%rbx,%rax),%r15
000000000004daca	movq	0x00061bcf(%rip),%rax
000000000004dad1	movq	(%rbx,%rax),%rdi
000000000004dad5	movq	0x00057bac(%rip),%rsi
000000000004dadc	call	*0x000365f6(%rip)
000000000004dae2	leaq	0x0005a827(%rip),%rsi
000000000004dae9	movq	%rax,%rdi
000000000004daec	call	*0x0005a81e(%rip)
000000000004daf2	movq	0x0005a77f(%rip),%rsi
000000000004daf9	movq	%r15,%rdi
000000000004dafc	movq	%rax,%rdx
000000000004daff	call	*0x000365d3(%rip)
000000000004db05	movq	0x00057aec(%rip),%rsi
000000000004db0c	movq	%rbx,%rdi
000000000004db0f	movq	%r14,%rdx
000000000004db12	movq	0x000365bf(%rip),%rax
000000000004db19	addq	$0x08,%rsp
000000000004db1d	popq	%rbx
000000000004db1e	popq	%r14
000000000004db20	popq	%r15
000000000004db22	popq	%rbp
000000000004db23	jmp	*%rax
-[DBGGDBDataValue childReplacedAtIndex:oldValue:newValue:]:
000000000004db25	pushq	%rbp
000000000004db26	movq	%rsp,%rbp
000000000004db29	pushq	%r15
000000000004db2b	pushq	%r14
000000000004db2d	pushq	%rbx
000000000004db2e	pushq	%rax
000000000004db2f	movq	%r8,%r14
000000000004db32	movq	%rdx,%r15
000000000004db35	movq	%rdi,%rbx
000000000004db38	movq	0x00059f99(%rip),%rsi
000000000004db3f	movq	%rcx,%rdi
000000000004db42	xorl	%edx,%edx
000000000004db44	call	*0x0003658e(%rip)
000000000004db4a	movq	0x0005a737(%rip),%rsi
000000000004db51	movq	%rbx,%rdi
000000000004db54	call	*0x0003657e(%rip)
000000000004db5a	leaq	0x0005a7bf(%rip),%rsi
000000000004db61	movq	%rax,%rdi
000000000004db64	movq	%r15,%rdx
000000000004db67	call	*0x0005a7b3(%rip)
000000000004db6d	movq	0x0005a71c(%rip),%rsi
000000000004db74	movq	%rax,%rdi
000000000004db77	movq	%r14,%rdx
000000000004db7a	movq	0x00036557(%rip),%rax
000000000004db81	addq	$0x08,%rsp
000000000004db85	popq	%rbx
000000000004db86	popq	%r14
000000000004db88	popq	%r15
000000000004db8a	popq	%rbp
000000000004db8b	jmp	*%rax
-[DBGGDBDataValue baseTypeChanged:]:
000000000004db8d	pushq	%rbp
000000000004db8e	movq	%rsp,%rbp
000000000004db91	pushq	%rbx
000000000004db92	pushq	%rax
000000000004db93	movq	%rdi,%rbx
000000000004db96	movq	0x00061b03(%rip),%rax
000000000004db9d	movq	(%rbx,%rax),%rdi
000000000004dba1	movq	0x000578d8(%rip),%rsi
000000000004dba8	call	*0x0003652a(%rip)
000000000004dbae	movq	0x000578d3(%rip),%rsi
000000000004dbb5	movq	%rax,%rdi
000000000004dbb8	call	*0x0003651a(%rip)
000000000004dbbe	movq	0x0005a633(%rip),%rsi
000000000004dbc5	movq	%rbx,%rdi
000000000004dbc8	movq	%rax,%rdx
000000000004dbcb	call	*0x00036507(%rip)
000000000004dbd1	movq	0x0005a6c0(%rip),%rsi
000000000004dbd8	movq	%rbx,%rdi
000000000004dbdb	movq	%rax,%rdx
000000000004dbde	movq	0x000364f3(%rip),%rax
000000000004dbe5	addq	$0x08,%rsp
000000000004dbe9	popq	%rbx
000000000004dbea	popq	%rbp
000000000004dbeb	jmp	*%rax
-[DBGGDBDataValue dynamicTypeChanged:]:
000000000004dbed	pushq	%rbp
000000000004dbee	movq	%rsp,%rbp
000000000004dbf1	pushq	%rbx
000000000004dbf2	pushq	%rax
000000000004dbf3	movq	%rdi,%rbx
000000000004dbf6	movq	0x00061aa3(%rip),%rax
000000000004dbfd	movq	(%rbx,%rax),%rdi
000000000004dc01	movq	0x00057ca0(%rip),%rsi
000000000004dc08	call	*0x000364ca(%rip)
000000000004dc0e	movq	0x00057873(%rip),%rsi
000000000004dc15	movq	%rax,%rdi
000000000004dc18	call	*0x000364ba(%rip)
000000000004dc1e	movq	0x0005a5d3(%rip),%rsi
000000000004dc25	movq	%rbx,%rdi
000000000004dc28	movq	%rax,%rdx
000000000004dc2b	call	*0x000364a7(%rip)
000000000004dc31	movq	0x00057b58(%rip),%rsi
000000000004dc38	movq	%rbx,%rdi
000000000004dc3b	movq	%rax,%rdx
000000000004dc3e	movq	0x00036493(%rip),%rax
000000000004dc45	addq	$0x08,%rsp
000000000004dc49	popq	%rbx
000000000004dc4a	popq	%rbp
000000000004dc4b	jmp	*%rax
-[DBGGDBDataValue containsFunctionExpressions]:
000000000004dc4d	pushq	%rbp
000000000004dc4e	movq	%rsp,%rbp
000000000004dc51	movq	0x00061a48(%rip),%rax
000000000004dc58	movq	(%rdi,%rax),%rdi
000000000004dc5c	movq	0x00058165(%rip),%rsi
000000000004dc63	call	*0x0003646f(%rip)
000000000004dc69	movsbl	%al,%eax
000000000004dc6c	popq	%rbp
000000000004dc6d	ret
000000000004dc6e	nop
000000000004dc6f	nop
000000000004dc70	nop
000000000004dc71	nop
000000000004dc72	nop
000000000004dc73	nop
000000000004dc74	nop
000000000004dc75	nop
000000000004dc76	nop
000000000004dc77	nop
000000000004dc78	nop
000000000004dc79	nop
000000000004dc7a	nop
000000000004dc7b	nop
-[DBGGDBDataValue parent]:
000000000004dc7c	pushq	%rbp
000000000004dc7d	movq	%rsp,%rbp
000000000004dc80	movq	0x00061a39(%rip),%rax
000000000004dc87	movq	(%rdi,%rax),%rax
000000000004dc8b	popq	%rbp
000000000004dc8c	ret
-[DBGGDBDataValue setParent:]:
000000000004dc8d	pushq	%rbp
000000000004dc8e	movq	%rsp,%rbp
000000000004dc91	movq	%rdx,%rax
000000000004dc94	movq	%rdi,%rcx
000000000004dc97	movq	0x00061a22(%rip),%rdx
000000000004dc9e	movq	%rax,%rdi
000000000004dca1	movq	%rcx,%rsi
000000000004dca4	popq	%rbp
000000000004dca5	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
000000000004dcaa	nop
000000000004dcab	nop
000000000004dcac	nop
000000000004dcad	nop
000000000004dcae	nop
000000000004dcaf	nop
-[DBGGDBDataValue setChildLoadBlock:]:
000000000004dcb0	pushq	%rbp
000000000004dcb1	movq	%rsp,%rbp
000000000004dcb4	movq	%rdx,%rax
000000000004dcb7	movq	0x00061a0a(%rip),%rdx
000000000004dcbe	movq	%rax,%rcx
000000000004dcc1	movl	$0x00000001,%r8d
000000000004dcc7	movl	$0x00000001,%r9d
000000000004dccd	popq	%rbp
000000000004dcce	jmp	0x0004e644	; symbol stub for: _objc_setProperty
000000000004dcd3	nop
-[DBGGDBDataValue setStaticType:]:
000000000004dcd4	pushq	%rbp
000000000004dcd5	movq	%rsp,%rbp
000000000004dcd8	movq	%rdx,%rax
000000000004dcdb	movq	%rdi,%rcx
000000000004dcde	movq	0x000619c3(%rip),%rdx
000000000004dce5	movq	%rax,%rdi
000000000004dce8	movq	%rcx,%rsi
000000000004dceb	popq	%rbp
000000000004dcec	jmp	0x0004e608	; symbol stub for: _objc_assign_ivar
-[DBGGDBDataType isPointer]:
000000000004dcf1	pushq	%rbp
000000000004dcf2	movq	%rsp,%rbp
000000000004dcf5	movq	0x00059584(%rip),%rsi
000000000004dcfc	call	*0x000363d6(%rip)
000000000004dd02	cmpl	$0x01,%eax
000000000004dd05	sete	%al
000000000004dd08	movzbl	%al,%eax
000000000004dd0b	popq	%rbp
000000000004dd0c	ret
_objc_retainedObject:
000000000004dd0d	pushq	%rbp
000000000004dd0e	movq	%rsp,%rbp
000000000004dd11	movq	%rdi,%rax
000000000004dd14	popq	%rbp
000000000004dd15	ret
_objc_unretainedObject:
000000000004dd16	pushq	%rbp
000000000004dd17	movq	%rsp,%rbp
000000000004dd1a	movq	%rdi,%rax
000000000004dd1d	popq	%rbp
000000000004dd1e	ret
_objc_unretainedPointer:
000000000004dd1f	pushq	%rbp
000000000004dd20	movq	%rsp,%rbp
000000000004dd23	movq	%rdi,%rax
000000000004dd26	popq	%rbp
000000000004dd27	ret
___ARCLite__load:
000000000004dd28	pushq	%rbp
000000000004dd29	movq	%rsp,%rbp
000000000004dd2c	pushq	%r14
000000000004dd2e	pushq	%rbx
000000000004dd2f	cmpq	$0x00,0x000363a9(%rip)
000000000004dd37	jne	0x0004dd45
000000000004dd39	leaq	0x000000c2(%rip),%rdi
000000000004dd40	callq	0x0004e68c	; symbol stub for: __dyld_register_func_for_add_image
000000000004dd45	movq	0x0005a914(%rip),%rdi
000000000004dd4c	leaq	0x0005a5dd(%rip),%r14
000000000004dd53	movq	%r14,%rsi
000000000004dd56	call	*0x0005a5d4(%rip)
000000000004dd5c	movq	0x0005a54d(%rip),%rsi
000000000004dd63	leaq	0x0000034e(%rip),%rdx
000000000004dd6a	leaq	0x0006987f(%rip),%rbx
000000000004dd71	movq	%rax,%rdi
000000000004dd74	movq	%rbx,%rcx
000000000004dd77	callq	_installMethod
000000000004dd7c	movq	0x0005a6dd(%rip),%rdi
000000000004dd83	movq	%r14,%rsi
000000000004dd86	call	*0x0005a5a4(%rip)
000000000004dd8c	leaq	0x0000033a(%rip),%rdx
000000000004dd93	movq	0x0005a51e(%rip),%rsi
000000000004dd9a	movq	%rax,%rdi
000000000004dd9d	movq	%rbx,%rcx
000000000004dda0	callq	_installMethod
000000000004dda5	movq	0x0005a8cc(%rip),%rdi
000000000004ddac	movq	%r14,%rsi
000000000004ddaf	call	*0x0005a57b(%rip)
000000000004ddb5	leaq	0x00000391(%rip),%rdx
000000000004ddbc	leaq	0x0006986d(%rip),%rbx
000000000004ddc3	movq	0x0005a4f6(%rip),%rsi
000000000004ddca	movq	%rax,%rdi
000000000004ddcd	movq	%rbx,%rcx
000000000004ddd0	callq	_installMethod
000000000004ddd5	movq	0x0005a6d4(%rip),%rdi
000000000004dddc	movq	%r14,%rsi
000000000004dddf	call	*0x0005a54b(%rip)
000000000004dde5	leaq	0x00000376(%rip),%rdx
000000000004ddec	movq	0x0005a4d5(%rip),%rsi
000000000004ddf3	movq	%rax,%rdi
000000000004ddf6	movq	%rbx,%rcx
000000000004ddf9	popq	%rbx
000000000004ddfa	popq	%r14
000000000004ddfc	popq	%rbp
000000000004ddfd	jmp	_installMethod
_add_image_hook:
000000000004de02	pushq	%rbp
000000000004de03	movq	%rsp,%rbp
000000000004de06	pushq	%r15
000000000004de08	pushq	%r14
000000000004de0a	pushq	%r13
000000000004de0c	pushq	%r12
000000000004de0e	pushq	%rbx
000000000004de0f	subq	$0x58,%rsp
000000000004de13	movq	%rdi,%r13
000000000004de16	movl	0x10(%r13),%eax
000000000004de1a	movl	%eax,0x80(%rbp)
000000000004de1d	testl	%eax,%eax
000000000004de1f	je	0x0004e048
000000000004de25	leaq	0x20(%r13),%rax
000000000004de29	movq	%rax,0xd0(%rbp)
000000000004de2d	xorl	%r15d,%r15d
000000000004de30	movl	0x80(%rbp),%r12d
000000000004de34	movq	$0x00000000,0x98(%rbp)
000000000004de3c	movq	%rax,%r14
000000000004de3f	cmpl	$0x19,(%r14)
000000000004de43	jne	0x0004de88
000000000004de45	leaq	0x08(%r14),%rbx
000000000004de49	movq	%rbx,%rdi
000000000004de4c	leaq	0x00017bbb(%rip),%rsi
000000000004de53	callq	0x0004e6fe	; symbol stub for: _strcmp
000000000004de58	testl	%eax,%eax
000000000004de5a	jne	0x0004de69
000000000004de5c	movq	%r13,%rax
000000000004de5f	subq	0x18(%r14),%rax
000000000004de63	movq	%rax,0x98(%rbp)
000000000004de67	jmp	0x0004de88
000000000004de69	movq	%rbx,%rdi
000000000004de6c	leaq	0x00017ba2(%rip),%rsi
000000000004de73	callq	0x0004e6fe	; symbol stub for: _strcmp
000000000004de78	testl	%eax,%eax
000000000004de7a	jne	0x0004de88
000000000004de7c	movq	0x18(%r14),%r15
000000000004de80	addq	0x98(%rbp),%r15
000000000004de84	subq	0x28(%r14),%r15
000000000004de88	movl	0x04(%r14),%eax
000000000004de8c	addq	%r14,%rax
000000000004de8f	decl	%r12d
000000000004de92	jne	0x0004de3c
000000000004de94	testq	%r15,%r15
000000000004de97	movq	0xd0(%rbp),%rax
000000000004de9b	je	0x0004e048
000000000004dea1	movq	$0x00000000,0xb8(%rbp)
000000000004dea9	movq	%rax,%rcx
000000000004deac	movl	0x80(%rbp),%eax
000000000004deaf	movq	$0x00000000,0xa8(%rbp)
000000000004deb7	movq	%rcx,%rdx
000000000004deba	movq	%rcx,%rsi
000000000004debd	movq	$0x00000000,0xb0(%rbp)
000000000004dec5	movq	%rdx,%rcx
000000000004dec8	movl	(%rcx),%edx
000000000004deca	cmpl	$0x0b,%edx
000000000004decd	je	0x0004deea
000000000004decf	cmpl	$0x02,%edx
000000000004ded2	jne	0x0004def4
000000000004ded4	movl	0x08(%rcx),%edx
000000000004ded7	addq	%r15,%rdx
000000000004deda	movq	%rdx,0xb0(%rbp)
000000000004dede	movl	0x10(%rcx),%edx
000000000004dee1	addq	%r15,%rdx
000000000004dee4	movq	%rdx,0xa8(%rbp)
000000000004dee8	jmp	0x0004def4
000000000004deea	movl	0x38(%rcx),%edx
000000000004deed	addq	%r15,%rdx
000000000004def0	movq	%rdx,0xb8(%rbp)
000000000004def4	movl	0x04(%rcx),%edx
000000000004def7	addq	%rcx,%rdx
000000000004defa	decl	%eax
000000000004defc	jne	0x0004dec5
000000000004defe	cmpq	$0x00,0xb0(%rbp)
000000000004df03	movq	%rsi,%rax
000000000004df06	je	0x0004e048
000000000004df0c	cmpq	$0x00,0xa8(%rbp)
000000000004df11	je	0x0004e048
000000000004df17	cmpq	$0x00,0xb8(%rbp)
000000000004df1c	je	0x0004e048
000000000004df22	movl	$0x00000000,0x84(%rbp)
000000000004df29	movq	%rax,0x88(%rbp)
000000000004df2d	cmpl	$0x19,(%rax)
000000000004df30	jne	0x0004e02d
000000000004df36	movq	0x88(%rbp),%rcx
000000000004df3a	movl	0x40(%rcx),%eax
000000000004df3d	leaq	(%rax,%rax,4),%rax
000000000004df41	shlq	$0x04,%rax
000000000004df45	leaq	0x48(%rcx,%rax),%rax
000000000004df4a	movq	%rax,0x90(%rbp)
000000000004df4e	leaq	0x48(%rcx),%rcx
000000000004df52	cmpq	%rax,%rcx
000000000004df55	movq	%rcx,%rax
000000000004df58	jae	0x0004e02d
000000000004df5e	movq	%rax,0xa0(%rbp)
000000000004df62	cmpb	$0x07,0x40(%rax)
000000000004df66	jne	0x0004e01b
000000000004df6c	movq	0xa0(%rbp),%rax
000000000004df70	movq	0x28(%rax),%rax
000000000004df74	shrq	$0x03,%rax
000000000004df78	movq	%rax,0xd0(%rbp)
000000000004df7c	testq	%rax,%rax
000000000004df7f	je	0x0004e01b
000000000004df85	xorl	%r13d,%r13d
000000000004df88	movq	0xa0(%rbp),%rax
000000000004df8c	movq	0x20(%rax),%rcx
000000000004df90	addq	0x98(%rbp),%rcx
000000000004df94	movq	%rcx,0xc8(%rbp)
000000000004df98	movl	0x44(%rax),%eax
000000000004df9b	movl	%eax,0xc4(%rbp)
000000000004df9e	xorl	%eax,%eax
000000000004dfa0	movq	%r13,%r14
000000000004dfa3	movl	%eax,%r13d
000000000004dfa6	movl	0xc4(%rbp),%eax
000000000004dfa9	leal	0x00(%r13,%rax),%eax
000000000004dfae	movq	0xb8(%rbp),%rcx
000000000004dfb2	movl	(%rcx,%rax,4),%eax
000000000004dfb5	movl	$0x80000000,%ecx
000000000004dfba	cmpq	%rcx,%rax
000000000004dfbd	je	0x0004e00f
000000000004dfbf	cmpl	$0x40000000,%eax
000000000004dfc4	je	0x0004e00f
000000000004dfc6	shlq	$0x04,%rax
000000000004dfca	movq	0xb0(%rbp),%rcx
000000000004dfce	movl	(%rcx,%rax),%ebx
000000000004dfd1	addq	0xa8(%rbp),%rbx
000000000004dfd5	xorl	%r15d,%r15d
000000000004dfd8	jmp	0x0004dfdd
000000000004dfda	incl	%r15d
000000000004dfdd	movl	%r15d,%r12d
000000000004dfe0	leaq	0x00068ec9(%rip),%rax
000000000004dfe7	movq	(%rax,%r12,8),%rdi
000000000004dfeb	testq	%rdi,%rdi
000000000004dfee	je	0x0004e00f
000000000004dff0	movq	%rbx,%rsi
000000000004dff3	callq	0x0004e6fe	; symbol stub for: _strcmp
000000000004dff8	testl	%eax,%eax
000000000004dffa	jne	0x0004dfda
000000000004dffc	leaq	0x00068f2d(%rip),%rax
000000000004e003	movq	(%rax,%r12,8),%rax
000000000004e007	movq	0xc8(%rbp),%rcx
000000000004e00b	movq	%rax,(%rcx,%r14,8)
000000000004e00f	incl	%r13d
000000000004e012	cmpq	0xd0(%rbp),%r13
000000000004e016	movl	%r13d,%eax
000000000004e019	jb	0x0004dfa0
000000000004e01b	movq	0xa0(%rbp),%rax
000000000004e01f	addq	$0x50,%rax
000000000004e023	cmpq	0x90(%rbp),%rax
000000000004e027	jb	0x0004df5e
000000000004e02d	movq	0x88(%rbp),%rcx
000000000004e031	movl	0x04(%rcx),%eax
000000000004e034	addq	%rcx,%rax
000000000004e037	movl	0x84(%rbp),%ecx
000000000004e03a	incl	%ecx
000000000004e03c	movl	%ecx,0x84(%rbp)
000000000004e03f	cmpl	0x80(%rbp),%ecx
000000000004e042	jne	0x0004df29
000000000004e048	addq	$0x58,%rsp
000000000004e04c	popq	%rbx
000000000004e04d	popq	%r12
000000000004e04f	popq	%r13
000000000004e051	popq	%r14
000000000004e053	popq	%r15
000000000004e055	popq	%rbp
000000000004e056	ret
___install_subscripting_methods_block_invoke_0:
000000000004e057	pushq	%rbp
000000000004e058	movq	%rsp,%rbp
000000000004e05b	movq	0x0005a3be(%rip),%rdi
000000000004e062	movl	$0x00000001,%edx
000000000004e067	movl	$0x00000001,%ecx
000000000004e06c	popq	%rbp
000000000004e06d	jmp	0x0004e656	; symbol stub for: _protocol_getMethodDescription
_installMethod:
000000000004e072	pushq	%rbp
000000000004e073	movq	%rsp,%rbp
000000000004e076	pushq	%r15
000000000004e078	pushq	%r14
000000000004e07a	pushq	%r12
000000000004e07c	pushq	%rbx
000000000004e07d	movq	%rcx,%r12
000000000004e080	movq	%rdx,%r14
000000000004e083	movq	%rsi,%rbx
000000000004e086	movq	%rdi,%r15
000000000004e089	callq	0x0004e5d8	; symbol stub for: _class_getInstanceMethod
000000000004e08e	testq	%rax,%rax
000000000004e091	jne	0x0004e0af
000000000004e093	movq	%r12,%rdi
000000000004e096	movq	%rbx,%rsi
000000000004e099	call	*0x10(%r12)
000000000004e09e	movq	%rdx,%rcx
000000000004e0a1	movq	%r15,%rdi
000000000004e0a4	movq	%rax,%rsi
000000000004e0a7	movq	%r14,%rdx
000000000004e0aa	callq	0x0004e5d2	; symbol stub for: _class_addMethod
000000000004e0af	popq	%rbx
000000000004e0b0	popq	%r12
000000000004e0b2	popq	%r14
000000000004e0b4	popq	%r15
000000000004e0b6	popq	%rbp
000000000004e0b7	ret
___arclite_objectAtIndexedSubscript:
000000000004e0b8	pushq	%rbp
000000000004e0b9	movq	%rsp,%rbp
000000000004e0bc	movq	0x0005a25d(%rip),%rax
000000000004e0c3	leaq	0x0005a256(%rip),%rsi
000000000004e0ca	popq	%rbp
000000000004e0cb	jmp	*%rax
___arclite_setObject_atIndexedSubscript:
000000000004e0cd	pushq	%rbp
000000000004e0ce	movq	%rsp,%rbp
000000000004e0d1	pushq	%r15
000000000004e0d3	pushq	%r14
000000000004e0d5	pushq	%rbx
000000000004e0d6	pushq	%rax
000000000004e0d7	movq	%rcx,%r15
000000000004e0da	movq	%rdx,%r14
000000000004e0dd	movq	%rdi,%rbx
000000000004e0e0	leaq	0x0005a229(%rip),%rsi
000000000004e0e7	call	*0x0005a223(%rip)
000000000004e0ed	cmpq	%r15,%rax
000000000004e0f0	jne	0x0004e112
000000000004e0f2	movq	0x0005a207(%rip),%rax
000000000004e0f9	leaq	0x0005a200(%rip),%rsi
000000000004e100	movq	%rbx,%rdi
000000000004e103	movq	%r14,%rdx
000000000004e106	addq	$0x08,%rsp
000000000004e10a	popq	%rbx
000000000004e10b	popq	%r14
000000000004e10d	popq	%r15
000000000004e10f	popq	%rbp
000000000004e110	jmp	*%rax
000000000004e112	movq	0x00059417(%rip),%rsi
000000000004e119	movq	%rbx,%rdi
000000000004e11c	movq	%r15,%rdx
000000000004e11f	movq	%r14,%rcx
000000000004e122	addq	$0x08,%rsp
000000000004e126	popq	%rbx
000000000004e127	popq	%r14
000000000004e129	popq	%r15
000000000004e12b	popq	%rbp
000000000004e12c	jmp	*0x00035fa6(%rip)
___install_subscripting_methods_block_invoke_07:
000000000004e132	pushq	%rbp
000000000004e133	movq	%rsp,%rbp
000000000004e136	movq	0x0005a2eb(%rip),%rdi
000000000004e13d	movl	$0x00000001,%edx
000000000004e142	movl	$0x00000001,%ecx
000000000004e147	popq	%rbp
000000000004e148	jmp	0x0004e656	; symbol stub for: _protocol_getMethodDescription
___arclite_objectForKeyedSubscript:
000000000004e14d	pushq	%rbp
000000000004e14e	movq	%rsp,%rbp
000000000004e151	movq	0x0005a1f8(%rip),%rax
000000000004e158	leaq	0x0005a1f1(%rip),%rsi
000000000004e15f	popq	%rbp
000000000004e160	jmp	*%rax
___arclite_setObject_forKeyedSubscript:
000000000004e162	pushq	%rbp
000000000004e163	movq	%rsp,%rbp
000000000004e166	movq	0x00056bc3(%rip),%rsi
000000000004e16d	popq	%rbp
000000000004e16e	jmp	*0x00035f64(%rip)
___arclite_object_setInstanceVariable:
000000000004e174	pushq	%rbp
000000000004e175	movq	%rsp,%rbp
000000000004e178	pushq	%r15
000000000004e17a	pushq	%r14
000000000004e17c	pushq	%r12
000000000004e17e	pushq	%rbx
000000000004e17f	movq	%rdx,%r14
000000000004e182	movq	%rsi,%r15
000000000004e185	movq	%rdi,%r12
000000000004e188	xorl	%eax,%eax
000000000004e18a	testq	%r12,%r12
000000000004e18d	je	0x0004e1c2
000000000004e18f	testq	%r15,%r15
000000000004e192	je	0x0004e1c2
000000000004e194	movq	%r12,%rdi
000000000004e197	callq	0x0004e64a	; symbol stub for: _object_getClass
000000000004e19c	movq	%rax,%rdi
000000000004e19f	movq	%r15,%rsi
000000000004e1a2	callq	0x0004e5e4	; symbol stub for: _class_getInstanceVariable
000000000004e1a7	movq	%rax,%rbx
000000000004e1aa	xorl	%eax,%eax
000000000004e1ac	testq	%rbx,%rbx
000000000004e1af	je	0x0004e1c2
000000000004e1b1	movq	%r12,%rdi
000000000004e1b4	movq	%rbx,%rsi
000000000004e1b7	movq	%r14,%rdx
000000000004e1ba	callq	0x0004e650	; symbol stub for: _object_setIvar
000000000004e1bf	movq	%rbx,%rax
000000000004e1c2	popq	%rbx
000000000004e1c3	popq	%r12
000000000004e1c5	popq	%r14
000000000004e1c7	popq	%r15
000000000004e1c9	popq	%rbp
000000000004e1ca	ret
___arclite_object_setIvar:
000000000004e1cb	pushq	%rbp
000000000004e1cc	movq	%rsp,%rbp
000000000004e1cf	pushq	%r15
000000000004e1d1	pushq	%r14
000000000004e1d3	pushq	%r13
000000000004e1d5	pushq	%r12
000000000004e1d7	pushq	%rbx
000000000004e1d8	pushq	%rax
000000000004e1d9	movq	%rsi,%r12
000000000004e1dc	movq	%rdi,%r15
000000000004e1df	testq	%r15,%r15
000000000004e1e2	je	0x0004e2c4
000000000004e1e8	testq	%r12,%r12
000000000004e1eb	je	0x0004e2c4
000000000004e1f1	movq	%rdx,0xd0(%rbp)
000000000004e1f5	movq	%r15,%rdi
000000000004e1f8	callq	0x0004e64a	; symbol stub for: _object_getClass
000000000004e1fd	movq	%rax,%rbx
000000000004e200	movq	%r12,%rdi
000000000004e203	callq	0x0004e5f6	; symbol stub for: _ivar_getName
000000000004e208	movq	%rax,%r13
000000000004e20b	xorl	%r14d,%r14d
000000000004e20e	jmp	0x0004e21b
000000000004e210	movq	%rbx,%rdi
000000000004e213	callq	0x0004e5f0	; symbol stub for: _class_getSuperclass
000000000004e218	movq	%rax,%rbx
000000000004e21b	testq	%rbx,%rbx
000000000004e21e	je	0x0004e233
000000000004e220	movq	%rbx,%rdi
000000000004e223	movq	%r13,%rsi
000000000004e226	callq	0x0004e5e4	; symbol stub for: _class_getInstanceVariable
000000000004e22b	cmpq	%r12,%rax
000000000004e22e	jne	0x0004e210
000000000004e230	movq	%rbx,%r14
000000000004e233	movq	%r12,%rdi
000000000004e236	callq	0x0004e5fc	; symbol stub for: _ivar_getOffset
000000000004e23b	movq	%rax,%rbx
000000000004e23e	addq	%rbx,%r15
000000000004e241	movq	0x20(%r14),%rax
000000000004e245	andq	$0xfc,%rax
000000000004e249	movq	0x08(%rax),%rax
000000000004e24d	testb	$0x80,(%rax)
000000000004e250	movq	0xd0(%rbp),%r13
000000000004e254	je	0x0004e2ab
000000000004e256	movl	0x04(%rax),%r12d
000000000004e25a	movq	%r14,%rdi
000000000004e25d	callq	0x0004e5ea	; symbol stub for: _class_getIvarLayout
000000000004e262	testq	%rax,%rax
000000000004e265	je	0x0004e2ab
000000000004e267	addl	$0x07,%r12d
000000000004e26b	andl	$0xf8,%r12d
000000000004e26f	subq	%r12,%rbx
000000000004e272	shrq	$0x03,%rbx
000000000004e276	xorl	%esi,%esi
000000000004e278	jmp	0x0004e27d
000000000004e27a	movq	%rdx,%rsi
000000000004e27d	movzbl	(%rax),%ecx
000000000004e280	testl	%ecx,%ecx
000000000004e282	je	0x0004e2ab
000000000004e284	incq	%rax
000000000004e287	movl	%ecx,%edx
000000000004e289	shrl	$0x04,%edx
000000000004e28c	addq	%rsi,%rdx
000000000004e28f	andl	$0x0f,%ecx
000000000004e292	negl	%ecx
000000000004e294	testl	%ecx,%ecx
000000000004e296	je	0x0004e27a
000000000004e298	cmpq	%rdx,%rbx
000000000004e29b	je	0x0004e2d3
000000000004e29d	incl	%ecx
000000000004e29f	leaq	0x01(%rdx),%rsi
000000000004e2a3	cmpq	%rbx,%rdx
000000000004e2a6	movq	%rsi,%rdx
000000000004e2a9	jle	0x0004e294
000000000004e2ab	movq	%r13,%rdi
000000000004e2ae	movq	%r15,%rsi
000000000004e2b1	addq	$0x08,%rsp
000000000004e2b5	popq	%rbx
000000000004e2b6	popq	%r12
000000000004e2b8	popq	%r13
000000000004e2ba	popq	%r14
000000000004e2bc	popq	%r15
000000000004e2be	popq	%rbp
000000000004e2bf	jmp	0x0004e60e	; symbol stub for: _objc_assign_strongCast
000000000004e2c4	addq	$0x08,%rsp
000000000004e2c8	popq	%rbx
000000000004e2c9	popq	%r12
000000000004e2cb	popq	%r13
000000000004e2cd	popq	%r14
000000000004e2cf	popq	%r15
000000000004e2d1	popq	%rbp
000000000004e2d2	ret
000000000004e2d3	movq	%r15,%rdi
000000000004e2d6	movq	%r13,%rsi
000000000004e2d9	addq	$0x08,%rsp
000000000004e2dd	popq	%rbx
000000000004e2de	popq	%r12
000000000004e2e0	popq	%r13
000000000004e2e2	popq	%r14
000000000004e2e4	popq	%r15
000000000004e2e6	popq	%rbp
000000000004e2e7	jmp	___arclite_objc_storeStrong
___arclite_object_copy:
000000000004e2ec	pushq	%rbp
000000000004e2ed	movq	%rsp,%rbp
000000000004e2f0	pushq	%r15
000000000004e2f2	pushq	%r14
000000000004e2f4	pushq	%r13
000000000004e2f6	pushq	%r12
000000000004e2f8	pushq	%rbx
000000000004e2f9	subq	$0x18,%rsp
000000000004e2fd	movq	%rsi,%r14
000000000004e300	movq	%rdi,%r15
000000000004e303	xorl	%eax,%eax
000000000004e305	testq	%r15,%r15
000000000004e308	je	0x0004e456
000000000004e30e	movq	%r15,%rdi
000000000004e311	callq	0x0004e64a	; symbol stub for: _object_getClass
000000000004e316	movq	%rax,%rbx
000000000004e319	movq	%rbx,%rdi
000000000004e31c	callq	0x0004e5de	; symbol stub for: _class_getInstanceSize
000000000004e321	movq	%rax,%r12
000000000004e324	addq	%r14,%r12
000000000004e327	movl	$0x00000001,%edi
000000000004e32c	movq	%r12,%rsi
000000000004e32f	callq	0x0004e692	; symbol stub for: _calloc
000000000004e334	movq	%rax,%rcx
000000000004e337	movq	%rcx,0xc0(%rbp)
000000000004e33b	xorl	%eax,%eax
000000000004e33d	testq	%rcx,%rcx
000000000004e340	je	0x0004e456
000000000004e346	movq	0xc0(%rbp),%rdi
000000000004e34a	movq	%r15,%rsi
000000000004e34d	movq	%r12,%rdx
000000000004e350	callq	0x0004e6c2	; symbol stub for: _memmove
000000000004e355	jmp	0x0004e362
000000000004e357	movq	%rbx,%rdi
000000000004e35a	callq	0x0004e5f0	; symbol stub for: _class_getSuperclass
000000000004e35f	movq	%rax,%rbx
000000000004e362	testq	%rbx,%rbx
000000000004e365	je	0x0004e452
000000000004e36b	movq	0x20(%rbx),%rax
000000000004e36f	andq	$0xfc,%rax
000000000004e373	movq	0x08(%rax),%rax
000000000004e377	testb	$0x80,(%rax)
000000000004e37a	je	0x0004e357
000000000004e37c	movq	%r15,%rdi
000000000004e37f	callq	0x0004e64a	; symbol stub for: _object_getClass
000000000004e384	jmp	0x0004e38f
000000000004e386	movq	0xc8(%rbp),%rdi
000000000004e38a	callq	0x0004e5f0	; symbol stub for: _class_getSuperclass
000000000004e38f	testq	%rax,%rax
000000000004e392	je	0x0004e452
000000000004e398	movq	%rax,0xc8(%rbp)
000000000004e39c	movq	0x20(%rax),%rax
000000000004e3a0	andq	$0xfc,%rax
000000000004e3a4	movq	0x08(%rax),%rax
000000000004e3a8	testb	$0x80,(%rax)
000000000004e3ab	je	0x0004e386
000000000004e3ad	movq	0xc8(%rbp),%rdi
000000000004e3b1	callq	0x0004e5ea	; symbol stub for: _class_getIvarLayout
000000000004e3b6	movq	%rax,%rbx
000000000004e3b9	testq	%rbx,%rbx
000000000004e3bc	je	0x0004e386
000000000004e3be	movb	(%rbx),%al
000000000004e3c0	testb	%al,%al
000000000004e3c2	je	0x0004e386
000000000004e3c4	movq	0xc8(%rbp),%rcx
000000000004e3c8	movq	0x20(%rcx),%rcx
000000000004e3cc	andq	$0xfc,%rcx
000000000004e3d0	movq	0x08(%rcx),%rcx
000000000004e3d4	movl	0x04(%rcx),%ecx
000000000004e3d7	addl	$0x07,%ecx
000000000004e3da	andl	$0xf8,%ecx
000000000004e3dd	addq	0xc0(%rbp),%rcx
000000000004e3e1	jmp	0x0004e437
000000000004e3e3	movq	%rax,%r12
000000000004e3e6	andq	$0x0f,%r12
000000000004e3ea	movl	$0xffffffff,%ecx
000000000004e3ef	addq	%rcx,%r12
000000000004e3f2	movzbl	%al,%r15d
000000000004e3f6	andl	$0x0f,%r15d
000000000004e3fa	negl	%r15d
000000000004e3fd	movq	(%r14),%rdi
000000000004e400	testq	%rdi,%rdi
000000000004e403	je	0x0004e412
000000000004e405	leaq	0x00059fb4(%rip),%rsi
000000000004e40c	call	*0x00059fae(%rip)
000000000004e412	addq	$0x08,%r14
000000000004e416	incl	%r15d
000000000004e419	jne	0x0004e3fd
000000000004e41b	movl	%r12d,%eax
000000000004e41e	addq	%rax,%r13
000000000004e421	movq	0xd0(%rbp),%rcx
000000000004e425	leaq	0x08(%rcx,%r13,8),%rcx
000000000004e42a	incq	%rbx
000000000004e42d	movb	(%rbx),%al
000000000004e42f	testb	%al,%al
000000000004e431	je	0x0004e386
000000000004e437	movq	%rcx,0xd0(%rbp)
000000000004e43b	movzbl	%al,%eax
000000000004e43e	movq	%rax,%r13
000000000004e441	shrq	$0x04,%r13
000000000004e445	leaq	(%rcx,%r13,8),%r14
000000000004e449	testb	$0x0f,%al
000000000004e44b	jne	0x0004e3e3
000000000004e44d	movq	%r14,%rcx
000000000004e450	jmp	0x0004e42a
000000000004e452	movq	0xc0(%rbp),%rax
000000000004e456	addq	$0x18,%rsp
000000000004e45a	popq	%rbx
000000000004e45b	popq	%r12
000000000004e45d	popq	%r13
000000000004e45f	popq	%r14
000000000004e461	popq	%r15
000000000004e463	popq	%rbp
000000000004e464	ret
___arclite_objc_retain:
000000000004e465	pushq	%rbp
000000000004e466	movq	%rsp,%rbp
000000000004e469	movq	0x00059f50(%rip),%rax
000000000004e470	leaq	0x00059f49(%rip),%rsi
000000000004e477	popq	%rbp
000000000004e478	jmp	*%rax
___arclite_objc_retainBlock:
000000000004e47a	pushq	%rbp
000000000004e47b	movq	%rsp,%rbp
000000000004e47e	popq	%rbp
000000000004e47f	jmp	0x0004e65c	; symbol stub for: __Block_copy
___arclite_objc_release:
000000000004e484	pushq	%rbp
000000000004e485	movq	%rsp,%rbp
000000000004e488	movq	0x00059f51(%rip),%rax
000000000004e48f	leaq	0x00059f4a(%rip),%rsi
000000000004e496	popq	%rbp
000000000004e497	jmp	*%rax
___arclite_objc_autorelease:
000000000004e499	pushq	%rbp
000000000004e49a	movq	%rsp,%rbp
000000000004e49d	movq	0x00059f2c(%rip),%rax
000000000004e4a4	leaq	0x00059f25(%rip),%rsi
000000000004e4ab	popq	%rbp
000000000004e4ac	jmp	*%rax
___arclite_objc_retainAutorelease:
000000000004e4ae	pushq	%rbp
000000000004e4af	movq	%rsp,%rbp
000000000004e4b2	leaq	0x00059f07(%rip),%rsi
000000000004e4b9	call	*0x00059f01(%rip)
000000000004e4bf	movq	0x00059f0a(%rip),%rcx
000000000004e4c6	leaq	0x00059f03(%rip),%rsi
000000000004e4cd	movq	%rax,%rdi
000000000004e4d0	popq	%rbp
000000000004e4d1	jmp	*%rcx
___arclite_objc_autoreleaseReturnValue:
000000000004e4d3	pushq	%rbp
000000000004e4d4	movq	%rsp,%rbp
000000000004e4d7	movq	0x00059ef2(%rip),%rax
000000000004e4de	leaq	0x00059eeb(%rip),%rsi
000000000004e4e5	popq	%rbp
000000000004e4e6	jmp	*%rax
___arclite_objc_retainAutoreleaseReturnValue:
000000000004e4e8	pushq	%rbp
000000000004e4e9	movq	%rsp,%rbp
000000000004e4ec	leaq	0x00059ecd(%rip),%rsi
000000000004e4f3	call	*0x00059ec7(%rip)
000000000004e4f9	movq	0x00059ed0(%rip),%rcx
000000000004e500	leaq	0x00059ec9(%rip),%rsi
000000000004e507	movq	%rax,%rdi
000000000004e50a	popq	%rbp
000000000004e50b	jmp	*%rcx
___arclite_objc_retainAutoreleasedReturnValue:
000000000004e50d	pushq	%rbp
000000000004e50e	movq	%rsp,%rbp
000000000004e511	movq	0x00059ea8(%rip),%rax
000000000004e518	leaq	0x00059ea1(%rip),%rsi
000000000004e51f	popq	%rbp
000000000004e520	jmp	*%rax
___arclite_objc_storeStrong:
000000000004e522	pushq	%rbp
000000000004e523	movq	%rsp,%rbp
000000000004e526	pushq	%r15
000000000004e528	pushq	%r14
000000000004e52a	pushq	%rbx
000000000004e52b	pushq	%rax
000000000004e52c	movq	%rsi,%rbx
000000000004e52f	movq	%rdi,%r15
000000000004e532	movq	(%r15),%r14
000000000004e535	cmpq	%rbx,%r14
000000000004e538	jne	0x0004e545
000000000004e53a	addq	$0x08,%rsp
000000000004e53e	popq	%rbx
000000000004e53f	popq	%r14
000000000004e541	popq	%r15
000000000004e543	popq	%rbp
000000000004e544	ret
000000000004e545	leaq	0x00059e74(%rip),%rsi
000000000004e54c	movq	%rbx,%rdi
000000000004e54f	call	*0x00059e6b(%rip)
000000000004e555	movq	%rbx,%rdi
000000000004e558	movq	%r15,%rsi
000000000004e55b	callq	0x0004e60e	; symbol stub for: _objc_assign_strongCast
000000000004e560	movq	0x00059e79(%rip),%rax
000000000004e567	leaq	0x00059e72(%rip),%rsi
000000000004e56e	movq	%r14,%rdi
000000000004e571	addq	$0x08,%rsp
000000000004e575	popq	%rbx
000000000004e576	popq	%r14
000000000004e578	popq	%r15
000000000004e57a	popq	%rbp
000000000004e57b	jmp	*%rax
___arclite_objc_autoreleasePoolPop:
000000000004e57d	pushq	%rbp
000000000004e57e	movq	%rsp,%rbp
000000000004e581	movq	0x00059d48(%rip),%rsi
000000000004e588	popq	%rbp
000000000004e589	jmp	*0x00035b49(%rip)
___arclite_objc_autoreleasePoolPush:
000000000004e58f	pushq	%rbp
000000000004e590	movq	%rsp,%rbp
000000000004e593	movq	0x00059d3e(%rip),%rsi
000000000004e59a	movq	0x0005a747(%rip),%rdi
000000000004e5a1	popq	%rbp
000000000004e5a2	jmp	*0x00035b30(%rip)
