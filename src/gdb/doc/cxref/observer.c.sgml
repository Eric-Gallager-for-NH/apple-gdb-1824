<!DOCTYPE LINUXDOC SYSTEM>

<!-- This SGML file generated by cxref (version 1.6e). -->
<!-- cxref program (c) Andrew M. Bishop 1995-2014. -->

<!--
Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF observer.c
CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
-->

<article>

<title>Cross reference for observer.c of gdb.cxref.
<author>cxref

<sect>File observer.c

<sect1>Included Files

<p>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<itemize>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
<item><tt>#include &lt;sys/time.h&gt;</tt>
<item><tt>#include &lt;time.h&gt;</tt>
<item><tt>#include &lt;sys/types.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
<item><tt>#include &lt;errno.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
<item><tt>#include &lt;regex.h&gt;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;unistd.h&gt;</tt>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;gdb_locale.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<item><tt>#include &lt;locale.h&gt;</tt>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../gdb/signals.h&quot;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &quot;../include/libiberty.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/symcat.h&quot;</tt>
</itemize>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
<item><tt>#include &quot;ui-file.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;xm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/xm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &lt;mach/mach.h&gt;</tt>
<item><tt>#include &lt;signal.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;nm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/i386/nm-i386.h&quot;</tt>
<item><tt>#include &quot;macosx/nm-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;tm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/tm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;macosx/i386-macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/i386-macosx-thread-status.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &lt;mach/mach_types.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
<item><tt>#include &lt;inttypes.h&gt;</tt>
<item><tt>#include &lt;mach/mach_vm.h&gt;</tt>
<item><tt>#include &lt;mach/kmod.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;macosx/tm-i386-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;../include/fopen-bin.h&quot;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdlib.h&gt;</tt>
<item><tt>#include &quot;gdbarch.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;observer.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;command.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;gdbcmd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;command.h&quot;</tt>
<item><tt>#include &quot;ui-out.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;observer.inc&quot;</tt>
</itemize>

<sect1>Typedef generic_observer_notification_ftype

<p>
<tt>typedef void ( generic_observer_notification_ftype)(const void* data,const void* args)</tt><newline>

<sect1>Type struct observer

<p>
<itemize>
<item><tt>struct observer</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>generic_observer_notification_ftype* notify;</tt><newline>
<item><tt>void* data;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Type struct observer_list

<p>
<itemize>
<item><tt>struct observer_list</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>struct observer_list* next;</tt><newline>
<item><tt>struct observer* observer;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Global Variable observer_test_first_observer

<p>
<tt>int observer_test_first_observer</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>observer.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>observer_test_first_notification_function()  :  observer.c
</itemize>
</descrip>

<sect1>Global Variable observer_test_second_observer

<p>
<tt>int observer_test_second_observer</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>observer.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>observer_test_second_notification_function()  :  observer.c
</itemize>
</descrip>

<sect1>Global Variable observer_test_third_observer

<p>
<tt>int observer_test_third_observer</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>observer.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>observer_test_third_notification_function()  :  observer.c
</itemize>
</descrip>

<sect1>Local Variables

<p>
<bf>observer_debug</bf><newline>
<tt>static int observer_debug</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>_initialize_observer()
<item>observer_notify_executable_changed()
<item>observer_notify_inferior_created()
<item>observer_notify_normal_stop()
<item>observer_notify_solib_loaded()
<item>observer_notify_solib_unloaded()
<item>observer_notify_target_changed()
</itemize>
</descrip>
<p>
<bf>normal_stop_subject</bf><newline>
<tt>static struct observer_list* normal_stop_subject</tt><newline>
<descrip>
<tag>Included from:</tag>
<itemize>
<item>observer.inc
</itemize>
<tag>Used in:</tag>
<itemize>
<item>observer_attach_normal_stop()
<item>observer_detach_normal_stop()
<item>observer_notify_normal_stop()
</itemize>
</descrip>
<p>
<bf>target_changed_subject</bf><newline>
<tt>static struct observer_list* target_changed_subject</tt><newline>
<descrip>
<tag>Included from:</tag>
<itemize>
<item>observer.inc
</itemize>
<tag>Used in:</tag>
<itemize>
<item>observer_attach_target_changed()
<item>observer_detach_target_changed()
<item>observer_notify_target_changed()
</itemize>
</descrip>
<p>
<bf>executable_changed_subject</bf><newline>
<tt>static struct observer_list* executable_changed_subject</tt><newline>
<descrip>
<tag>Included from:</tag>
<itemize>
<item>observer.inc
</itemize>
<tag>Used in:</tag>
<itemize>
<item>observer_attach_executable_changed()
<item>observer_detach_executable_changed()
<item>observer_notify_executable_changed()
</itemize>
</descrip>
<p>
<bf>inferior_created_subject</bf><newline>
<tt>static struct observer_list* inferior_created_subject</tt><newline>
<descrip>
<tag>Included from:</tag>
<itemize>
<item>observer.inc
</itemize>
<tag>Used in:</tag>
<itemize>
<item>observer_attach_inferior_created()
<item>observer_detach_inferior_created()
<item>observer_notify_inferior_created()
</itemize>
</descrip>
<p>
<bf>solib_loaded_subject</bf><newline>
<tt>static struct observer_list* solib_loaded_subject</tt><newline>
<descrip>
<tag>Included from:</tag>
<itemize>
<item>observer.inc
</itemize>
<tag>Used in:</tag>
<itemize>
<item>observer_attach_solib_loaded()
<item>observer_detach_solib_loaded()
<item>observer_notify_solib_loaded()
</itemize>
</descrip>
<p>
<bf>solib_unloaded_subject</bf><newline>
<tt>static struct observer_list* solib_unloaded_subject</tt><newline>
<descrip>
<tag>Included from:</tag>
<itemize>
<item>observer.inc
</itemize>
<tag>Used in:</tag>
<itemize>
<item>observer_attach_solib_unloaded()
<item>observer_detach_solib_unloaded()
<item>observer_notify_solib_unloaded()
</itemize>
</descrip>

<sect1>Global Function _initialize_observer()

<p><tt>void _initialize_observer ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>observer.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>add_setshow_zinteger_cmd()
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>show_observer_debug()  :  observer.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>observer_debug  :  observer.c
<item>setdebuglist, showdebuglist
</itemize>
</descrip>

<sect1>Global Function observer_attach_executable_changed()

<p><tt>struct observer* observer_attach_executable_changed ( observer_executable_changed_ftype* f )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>observer.h
</itemize>
<tag>Included from:</tag>
<itemize>
<item>observer.inc
</itemize>
<tag>Calls:</tag>
<itemize>
<item>generic_observer_attach()  :  observer.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>_initialize_symtab()  :  symtab.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>observer_executable_changed_notification_stub()  :  observer.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>executable_changed_subject  :  observer.c
</itemize>
</descrip>

<sect1>Global Function observer_attach_inferior_created()

<p><tt>struct observer* observer_attach_inferior_created ( observer_inferior_created_ftype* f )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>observer.h
</itemize>
<tag>Included from:</tag>
<itemize>
<item>observer.inc
</itemize>
<tag>Calls:</tag>
<itemize>
<item>generic_observer_attach()  :  observer.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>_initialize_symfile_mem()  :  symfile-mem.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>observer_inferior_created_notification_stub()  :  observer.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>inferior_created_subject  :  observer.c
</itemize>
</descrip>

<sect1>Global Function observer_attach_normal_stop()

<p><tt>struct observer* observer_attach_normal_stop ( observer_normal_stop_ftype* f )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>observer.h
</itemize>
<tag>Included from:</tag>
<itemize>
<item>observer.inc
</itemize>
<tag>Calls:</tag>
<itemize>
<item>generic_observer_attach()  :  observer.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>observer_normal_stop_notification_stub()  :  observer.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>normal_stop_subject  :  observer.c
</itemize>
</descrip>

<sect1>Global Function observer_attach_solib_loaded()

<p><tt>struct observer* observer_attach_solib_loaded ( observer_solib_loaded_ftype* f )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>observer.h
</itemize>
<tag>Included from:</tag>
<itemize>
<item>observer.inc
</itemize>
<tag>Calls:</tag>
<itemize>
<item>generic_observer_attach()  :  observer.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>observer_solib_loaded_notification_stub()  :  observer.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>solib_loaded_subject  :  observer.c
</itemize>
</descrip>

<sect1>Global Function observer_attach_solib_unloaded()

<p><tt>struct observer* observer_attach_solib_unloaded ( observer_solib_unloaded_ftype* f )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>observer.h
</itemize>
<tag>Included from:</tag>
<itemize>
<item>observer.inc
</itemize>
<tag>Calls:</tag>
<itemize>
<item>generic_observer_attach()  :  observer.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>_initialize_breakpoint()  :  breakpoint.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>observer_solib_unloaded_notification_stub()  :  observer.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>solib_unloaded_subject  :  observer.c
</itemize>
</descrip>

<sect1>Global Function observer_attach_target_changed()

<p><tt>struct observer* observer_attach_target_changed ( observer_target_changed_ftype* f )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>observer.h
</itemize>
<tag>Included from:</tag>
<itemize>
<item>observer.inc
</itemize>
<tag>Calls:</tag>
<itemize>
<item>generic_observer_attach()  :  observer.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>_initialize_frame()  :  frame.c
<item>_initialize_regcache()  :  regcache.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>observer_target_changed_notification_stub()  :  observer.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>target_changed_subject  :  observer.c
</itemize>
</descrip>

<sect1>Global Function observer_detach_executable_changed()

<p><tt>void observer_detach_executable_changed ( struct observer* observer )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>observer.h
</itemize>
<tag>Included from:</tag>
<itemize>
<item>observer.inc
</itemize>
<tag>Calls:</tag>
<itemize>
<item>generic_observer_detach()  :  observer.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>executable_changed_subject  :  observer.c
</itemize>
</descrip>

<sect1>Global Function observer_detach_inferior_created()

<p><tt>void observer_detach_inferior_created ( struct observer* observer )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>observer.h
</itemize>
<tag>Included from:</tag>
<itemize>
<item>observer.inc
</itemize>
<tag>Calls:</tag>
<itemize>
<item>generic_observer_detach()  :  observer.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>inferior_created_subject  :  observer.c
</itemize>
</descrip>

<sect1>Global Function observer_detach_normal_stop()

<p><tt>void observer_detach_normal_stop ( struct observer* observer )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>observer.h
</itemize>
<tag>Included from:</tag>
<itemize>
<item>observer.inc
</itemize>
<tag>Calls:</tag>
<itemize>
<item>generic_observer_detach()  :  observer.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>normal_stop_subject  :  observer.c
</itemize>
</descrip>

<sect1>Global Function observer_detach_solib_loaded()

<p><tt>void observer_detach_solib_loaded ( struct observer* observer )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>observer.h
</itemize>
<tag>Included from:</tag>
<itemize>
<item>observer.inc
</itemize>
<tag>Calls:</tag>
<itemize>
<item>generic_observer_detach()  :  observer.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>solib_loaded_subject  :  observer.c
</itemize>
</descrip>

<sect1>Global Function observer_detach_solib_unloaded()

<p><tt>void observer_detach_solib_unloaded ( struct observer* observer )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>observer.h
</itemize>
<tag>Included from:</tag>
<itemize>
<item>observer.inc
</itemize>
<tag>Calls:</tag>
<itemize>
<item>generic_observer_detach()  :  observer.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>solib_unloaded_subject  :  observer.c
</itemize>
</descrip>

<sect1>Global Function observer_detach_target_changed()

<p><tt>void observer_detach_target_changed ( struct observer* observer )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>observer.h
</itemize>
<tag>Included from:</tag>
<itemize>
<item>observer.inc
</itemize>
<tag>Calls:</tag>
<itemize>
<item>generic_observer_detach()  :  observer.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>target_changed_subject  :  observer.c
</itemize>
</descrip>

<sect1>Global Function observer_notify_executable_changed()

<p><tt>void observer_notify_executable_changed ( void* unused_args )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>observer.h
</itemize>
<tag>Included from:</tag>
<itemize>
<item>observer.inc
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fprintf_unfiltered()  :  utils.c
<item>generic_observer_notify()  :  observer.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>reread_symbols()  :  symfile.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>executable_changed_subject  :  observer.c
<item>gdb_stdlog  :  main.c
<item>observer_debug  :  observer.c
</itemize>
</descrip>

<sect1>Global Function observer_notify_inferior_created()

<p><tt>void observer_notify_inferior_created ( struct target_ops* objfile, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>observer.h
</itemize>
<tag>Included from:</tag>
<itemize>
<item>observer.inc
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fprintf_unfiltered()  :  utils.c
<item>generic_observer_notify()  :  observer.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_macosx_complete_create_or_attach()  :  remote.c
<item>remote_open_1()  :  remote.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdlog  :  main.c
<item>inferior_created_subject  :  observer.c
<item>observer_debug  :  observer.c
</itemize>
</descrip>

<sect1>Global Function observer_notify_normal_stop()

<p><tt>void observer_notify_normal_stop ( struct bpstats* bs )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>observer.h
</itemize>
<tag>Included from:</tag>
<itemize>
<item>observer.inc
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fprintf_unfiltered()  :  utils.c
<item>generic_observer_notify()  :  observer.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>normal_stop()  :  infrun.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdlog  :  main.c
<item>normal_stop_subject  :  observer.c
<item>observer_debug  :  observer.c
</itemize>
</descrip>

<sect1>Global Function observer_notify_solib_loaded()

<p><tt>void observer_notify_solib_loaded ( struct so_list* solib )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>observer.h
</itemize>
<tag>Included from:</tag>
<itemize>
<item>observer.inc
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fprintf_unfiltered()  :  utils.c
<item>generic_observer_notify()  :  observer.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>update_solib_list()  :  solib.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdlog  :  main.c
<item>observer_debug  :  observer.c
<item>solib_loaded_subject  :  observer.c
</itemize>
</descrip>

<sect1>Global Function observer_notify_solib_unloaded()

<p><tt>void observer_notify_solib_unloaded ( struct so_list* solib )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>observer.h
</itemize>
<tag>Included from:</tag>
<itemize>
<item>observer.inc
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fprintf_unfiltered()  :  utils.c
<item>generic_observer_notify()  :  observer.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>update_solib_list()  :  solib.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdlog  :  main.c
<item>observer_debug  :  observer.c
<item>solib_unloaded_subject  :  observer.c
</itemize>
</descrip>

<sect1>Global Function observer_notify_target_changed()

<p><tt>void observer_notify_target_changed ( struct target_ops* target )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>observer.h
</itemize>
<tag>Included from:</tag>
<itemize>
<item>observer.inc
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fprintf_unfiltered()  :  utils.c
<item>generic_observer_notify()  :  observer.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>value_assign()  :  valops.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdlog  :  main.c
<item>observer_debug  :  observer.c
<item>target_changed_subject  :  observer.c
</itemize>
</descrip>

<sect1>Global Function observer_test_first_notification_function()

<p><tt>void observer_test_first_notification_function ( struct bpstats* bs )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>observer.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>observer_test_first_observer  :  observer.c
</itemize>
</descrip>

<sect1>Global Function observer_test_second_notification_function()

<p><tt>void observer_test_second_notification_function ( struct bpstats* bs )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>observer.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>observer_test_second_observer  :  observer.c
</itemize>
</descrip>

<sect1>Global Function observer_test_third_notification_function()

<p><tt>void observer_test_third_notification_function ( struct bpstats* bs )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>observer.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>observer_test_third_observer  :  observer.c
</itemize>
</descrip>

<sect1>Local Function generic_observer_attach()

<p><tt>static struct observer* generic_observer_attach ( struct observer_list** subject, generic_observer_notification_ftype* notify, void* data )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>xalloc_observer_list_node()  :  observer.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>observer_attach_executable_changed()  :  observer.c
<item>observer_attach_inferior_created()  :  observer.c
<item>observer_attach_normal_stop()  :  observer.c
<item>observer_attach_solib_loaded()  :  observer.c
<item>observer_attach_solib_unloaded()  :  observer.c
<item>observer_attach_target_changed()  :  observer.c
</itemize>
</descrip>

<sect1>Local Function generic_observer_detach()

<p><tt>static void generic_observer_detach ( struct observer_list** subject, const struct observer* observer )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>warning()  :  utils.c
<item>xfree_observer_list_node()  :  observer.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>observer_detach_executable_changed()  :  observer.c
<item>observer_detach_inferior_created()  :  observer.c
<item>observer_detach_normal_stop()  :  observer.c
<item>observer_detach_solib_loaded()  :  observer.c
<item>observer_detach_solib_unloaded()  :  observer.c
<item>observer_detach_target_changed()  :  observer.c
</itemize>
</descrip>

<sect1>Local Function generic_observer_notify()

<p><tt>static void generic_observer_notify ( struct observer_list* subject, const void* args )</tt><newline>
<descrip>
<tag>Called by:</tag>
<itemize>
<item>observer_notify_executable_changed()  :  observer.c
<item>observer_notify_inferior_created()  :  observer.c
<item>observer_notify_normal_stop()  :  observer.c
<item>observer_notify_solib_loaded()  :  observer.c
<item>observer_notify_solib_unloaded()  :  observer.c
<item>observer_notify_target_changed()  :  observer.c
</itemize>
</descrip>

<sect1>Local Function observer_executable_changed_notification_stub()

<p><tt>static void observer_executable_changed_notification_stub ( const void* data, const void* args_data )</tt><newline>
<descrip>
<tag>Included from:</tag>
<itemize>
<item>observer.inc
</itemize>
<tag>Used in:</tag>
<itemize>
<item>observer_attach_executable_changed()  :  observer.c
</itemize>
</descrip>

<sect1>Local Function observer_inferior_created_notification_stub()

<p><tt>static void observer_inferior_created_notification_stub ( const void* data, const void* args_data )</tt><newline>
<descrip>
<tag>Included from:</tag>
<itemize>
<item>observer.inc
</itemize>
<tag>Used in:</tag>
<itemize>
<item>observer_attach_inferior_created()  :  observer.c
</itemize>
</descrip>

<sect1>Local Function observer_normal_stop_notification_stub()

<p><tt>static void observer_normal_stop_notification_stub ( const void* data, const void* args_data )</tt><newline>
<descrip>
<tag>Included from:</tag>
<itemize>
<item>observer.inc
</itemize>
<tag>Used in:</tag>
<itemize>
<item>observer_attach_normal_stop()  :  observer.c
</itemize>
</descrip>

<sect1>Local Function observer_solib_loaded_notification_stub()

<p><tt>static void observer_solib_loaded_notification_stub ( const void* data, const void* args_data )</tt><newline>
<descrip>
<tag>Included from:</tag>
<itemize>
<item>observer.inc
</itemize>
<tag>Used in:</tag>
<itemize>
<item>observer_attach_solib_loaded()  :  observer.c
</itemize>
</descrip>

<sect1>Local Function observer_solib_unloaded_notification_stub()

<p><tt>static void observer_solib_unloaded_notification_stub ( const void* data, const void* args_data )</tt><newline>
<descrip>
<tag>Included from:</tag>
<itemize>
<item>observer.inc
</itemize>
<tag>Used in:</tag>
<itemize>
<item>observer_attach_solib_unloaded()  :  observer.c
</itemize>
</descrip>

<sect1>Local Function observer_target_changed_notification_stub()

<p><tt>static void observer_target_changed_notification_stub ( const void* data, const void* args_data )</tt><newline>
<descrip>
<tag>Included from:</tag>
<itemize>
<item>observer.inc
</itemize>
<tag>Used in:</tag>
<itemize>
<item>observer_attach_target_changed()  :  observer.c
</itemize>
</descrip>

<sect1>Local Function show_observer_debug()

<p><tt>static void show_observer_debug ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>fprintf_filtered()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_observer()  :  observer.c
</itemize>
</descrip>

<sect1>Local Function xalloc_observer_list_node()

<p><tt>static struct observer_list* xalloc_observer_list_node ( void )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>xmalloc()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>generic_observer_attach()  :  observer.c
</itemize>
</descrip>

<sect1>Local Function xfree_observer_list_node()

<p><tt>static void xfree_observer_list_node ( struct observer_list* node )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>xfree()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>generic_observer_detach()  :  observer.c
</itemize>
</descrip>

</article>
