{\rtf\ansi
\deff0
{\fonttbl
{\f0\froman Times New Roman;}
{\f1\fmodern Courier New;}
}
{\stylesheet
{\s0\f0\fs24 Normal;}
{\s1\f0\fs40\b\sb400\sa200\keepn\keep Heading 1;}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Heading 2;}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Heading 3;}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Heading 4;}
{\s5\f1\fs20\ql\sb50\sa50 Code;}
}
{\info{\comment
 This RTF file generated by cxref (version 1.6e).
 cxref program (c) Andrew M. Bishop 1995-2014.
 Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF tracepoint.c
 CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
}}
\paperw11880\paperh16848\margl1440\margr1440\margt1440\margb1440
\sectd\plain
\s0\f0\fs24
{\s1\f0\fs40\b\sb400\sa200\keepn\keep File tracepoint.c\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Included Files\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <errno.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <unistd.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_locale.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <locale.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../gdb/signals.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/symcat.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-file.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "xm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/xm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "nm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/i386/nm-i386.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/nm-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "tm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/tm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-tdep.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-tdep.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-thread-status.h"\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_types.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <inttypes.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_vm.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/kmod.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/tm-i386-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/fopen-bin.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdlib.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbarch.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/floatformat.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_regex.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "gdbtypes.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "expression.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdbtypes.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "expression.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdbcmd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "command.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-out.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "target.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "dcache.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "memattr.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "language.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_assert.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_string.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "inferior.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "breakpoint.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "gdb-events.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "target.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "tracepoint.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "remote.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/time.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "linespec.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "regcache.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "completer.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb-events.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "block.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "dictionary.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "inlining.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <block.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "ax.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "ax-gdb.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../readline/readline.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../readline/rlstdc.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../readline/rltypedefs.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../readline/keymaps.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../readline/tilde.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../readline/history.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../readline/rlstdc.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <readline/rltypedefs.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <unistd.h>\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Preprocessor definitions\par}
{\s5\f1\fs20\ql\sb50\sa50 #define MAX_AGENT_EXPR_LEN 184\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Type definitions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type enum tracepoint_opcode\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 enum tracepoint_opcode}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 enable_op;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 disable_op;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 delete_op;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct memrange\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct memrange}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int type;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 bfd_signed_vma start;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 bfd_signed_vma end;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct collection_list\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct collection_list}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 unsigned char regs_mask[32];}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 long listsize;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 long next_memrange;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct memrange* list;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 long aexpr_listsize;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 long next_aexpr_elt;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct agent_expr** aexpr_list;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Variables\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable tracepoint_chain\par}
{\s5\f1\fs20\ql\sb50\sa50 struct tracepoint* tracepoint_chain\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell tracepoint.c\cell\cell\row
Used in:\cell _initialize_tracepoint()\cell tracepoint.c\cell\row
\cell delete_trace_command()\cell tracepoint.c\cell\row
\cell get_tracepoint_by_number()\cell tracepoint.c\cell\row
\cell map_args_over_tracepoints()\cell tracepoint.c\cell\row
\cell set_raw_tracepoint()\cell tracepoint.c\cell\row
\cell trace_dump_command()\cell tracepoint.c\cell\row
\cell trace_pass_command()\cell tracepoint.c\cell\row
\cell trace_start_command()\cell tracepoint.c\cell\row
\cell tracepoint_operation()\cell tracepoint.c\cell\row
\cell tracepoint_save_command()\cell tracepoint.c\cell\row
\cell tracepoints_info()\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable trace_running_p\par}
{\s5\f1\fs20\ql\sb50\sa50 unsigned long trace_running_p\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell tracepoint.c\cell\cell\row
Used in:\cell trace_start_command()\cell tracepoint.c\cell\row
\cell trace_status_command()\cell tracepoint.c\cell\row
\cell trace_stop_command()\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable deprecated_trace_find_hook\par}
{\s5\f1\fs20\ql\sb50\sa50 void (*deprecated_trace_find_hook)(const char* arg,int from_tty)\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell tracepoint.c\cell\cell\row
Used in:\cell _initialize_tracepoint()\cell tracepoint.c\cell\row
\cell trace_find_command()\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable deprecated_trace_start_stop_hook\par}
{\s5\f1\fs20\ql\sb50\sa50 void (*deprecated_trace_start_stop_hook)(int start,int from_tty)\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell tracepoint.c\cell\cell\row
Used in:\cell _initialize_tracepoint()\cell tracepoint.c\cell\row
\cell trace_start_command()\cell tracepoint.c\cell\row
\cell trace_stop_command()\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable tracepoint_list\par}
{\s5\f1\fs20\ql\sb50\sa50 struct collection_list tracepoint_list\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell tracepoint.c\cell\cell\row
Used in:\cell _initialize_tracepoint()\cell tracepoint.c\cell\row
\cell encode_actions()\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable stepping_list\par}
{\s5\f1\fs20\ql\sb50\sa50 struct collection_list stepping_list\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell tracepoint.c\cell\cell\row
Used in:\cell _initialize_tracepoint()\cell tracepoint.c\cell\row
\cell encode_actions()\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep External Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable deprecated_readline_begin_hook\par}
{\s5\f1\fs20\ql\sb50\sa50 extern void (*deprecated_readline_begin_hook)(const char*,...)\par}
\trowd\trgaph120\cellx1440\cellx5220
\intbl\plain
Defined in:\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep External Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable deprecated_readline_hook\par}
{\s5\f1\fs20\ql\sb50\sa50 extern char* (*deprecated_readline_hook)(char*)\par}
\trowd\trgaph120\cellx1440\cellx5220
\intbl\plain
Defined in:\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep External Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable deprecated_readline_end_hook\par}
{\s5\f1\fs20\ql\sb50\sa50 extern void (*deprecated_readline_end_hook)(void)\par}
\trowd\trgaph120\cellx1440\cellx5220
\intbl\plain
Defined in:\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep External Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable addressprint\par}
{\s5\f1\fs20\ql\sb50\sa50 extern int addressprint\par}
\trowd\trgaph120\cellx1440\cellx5220
\intbl\plain
Defined in:\cell valprint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep External Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable instream\par}
{\s5\f1\fs20\ql\sb50\sa50 extern FILE* instream\par}
\trowd\trgaph120\cellx1440\cellx5220
\intbl\plain
Defined in:\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep External Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable exec_bfd\par}
{\s5\f1\fs20\ql\sb50\sa50 extern bfd* exec_bfd\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable tracepoint_count\par}
{\s5\f1\fs20\ql\sb50\sa50 static int tracepoint_count\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_tracepoint()\cell\cell\row
\cell get_tracepoint_by_number()\cell\cell\row
\cell set_tracepoint_count()\cell\cell\row
\cell trace_command()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable traceframe_number\par}
{\s5\f1\fs20\ql\sb50\sa50 static int traceframe_number\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_tracepoint()\cell\cell\row
\cell get_traceframe_number()\cell\cell\row
\cell set_traceframe_num()\cell\cell\row
\cell trace_dump_command()\cell\cell\row
\cell trace_find_command()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable tracepoint_number\par}
{\s5\f1\fs20\ql\sb50\sa50 static int tracepoint_number\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_tracepoint()\cell\cell\row
\cell set_tracepoint_num()\cell\cell\row
\cell trace_dump_command()\cell\cell\row
\cell trace_find_tracepoint_command()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable traceframe_fun\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct symbol* traceframe_fun\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell set_traceframe_context()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable traceframe_sal\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct symtab_and_line traceframe_sal\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell set_traceframe_context()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable tfindlist\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct cmd_list_element* tfindlist\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_tracepoint()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable target_buf\par}
{\s5\f1\fs20\ql\sb50\sa50 static char target_buf[2048]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell remote_set_transparent_ranges()\cell\cell\row
\cell trace_find_command()\cell\cell\row
\cell trace_find_line_command()\cell\cell\row
\cell trace_find_outside_command()\cell\cell\row
\cell trace_find_pc_command()\cell\cell\row
\cell trace_find_range_command()\cell\cell\row
\cell trace_find_tracepoint_command()\cell\cell\row
\cell trace_start_command()\cell\cell\row
\cell trace_status_command()\cell\cell\row
\cell trace_stop_command()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable hexchars\par}
{\s5\f1\fs20\ql\sb50\sa50 static const char hexchars[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell mem2hex()\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Functions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function _initialize_tracepoint()\par}
{\s5\f1\fs20\ql\sb50\sa50 void _initialize_tracepoint ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell tracepoint.c\cell\cell\row
Calls: \cell lookup_internalvar()\cell value.c\cell\row
\cell set_internalvar()\cell value.c\cell\row
\cell value_from_longest()\cell value.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  add_cmd(), add_com(), add_com_alias(), add_info(), add_info_alias(), add_prefix_cmd(), set_cmd_completer()\cell\cell\row
Refs Func:\cell collect_pseudocommand()\cell tracepoint.c\cell\row
\cell default_trace_find()\cell tracepoint.c\cell\row
\cell default_trace_start_stop()\cell tracepoint.c\cell\row
\cell delete_trace_command()\cell tracepoint.c\cell\row
\cell disable_trace_command()\cell tracepoint.c\cell\row
\cell enable_trace_command()\cell tracepoint.c\cell\row
\cell end_actions_pseudocommand()\cell tracepoint.c\cell\row
\cell filename_completer()\cell completer.c\cell\row
\cell location_completer()\cell completer.c\cell\row
\cell scope_info()\cell tracepoint.c\cell\row
\cell trace_actions_command()\cell tracepoint.c\cell\row
\cell trace_command()\cell tracepoint.c\cell\row
\cell trace_dump_command()\cell tracepoint.c\cell\row
\cell trace_find_command()\cell tracepoint.c\cell\row
\cell trace_find_end_command()\cell tracepoint.c\cell\row
\cell trace_find_line_command()\cell tracepoint.c\cell\row
\cell trace_find_none_command()\cell tracepoint.c\cell\row
\cell trace_find_outside_command()\cell tracepoint.c\cell\row
\cell trace_find_pc_command()\cell tracepoint.c\cell\row
\cell trace_find_range_command()\cell tracepoint.c\cell\row
\cell trace_find_start_command()\cell tracepoint.c\cell\row
\cell trace_find_tracepoint_command()\cell tracepoint.c\cell\row
\cell trace_pass_command()\cell tracepoint.c\cell\row
\cell trace_start_command()\cell tracepoint.c\cell\row
\cell trace_status_command()\cell tracepoint.c\cell\row
\cell trace_stop_command()\cell tracepoint.c\cell\row
\cell tracepoint_save_command()\cell tracepoint.c\cell\row
\cell tracepoints_info()\cell tracepoint.c\cell\row
\cell while_stepping_pseudocommand()\cell tracepoint.c\cell\row
Refs Var:\cell builtin_type_int\cell gdbtypes.c\cell\row
\cell deprecated_trace_find_hook\cell tracepoint.c\cell\row
\cell deprecated_trace_start_stop_hook\cell tracepoint.c\cell\row
\cell stepping_list\cell tracepoint.c\cell\row
\cell tfindlist\cell tracepoint.c\cell\row
\cell traceframe_number\cell tracepoint.c\cell\row
\cell tracepoint_chain\cell tracepoint.c\cell\row
\cell tracepoint_count\cell tracepoint.c\cell\row
\cell tracepoint_list\cell tracepoint.c\cell\row
\cell tracepoint_number\cell tracepoint.c\cell\row
\cell  cmdlist, deletelist, disablelist, enablelist\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function free_actions()\par}
{\s5\f1\fs20\ql\sb50\sa50 void free_actions ( struct tracepoint* t )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell tracepoint.h\cell\cell\row
Calls: \cell xfree()\cell utils.c\cell\row
Called by:\cell do_free_actions_cleanup()\cell tracepoint.c\cell\row
\cell read_actions()\cell tracepoint.c\cell\row
\cell trace_actions_command()\cell tracepoint.c\cell\row
\cell tracepoint_operation()\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function get_traceframe_number()\par}
{\s5\f1\fs20\ql\sb50\sa50 int get_traceframe_number ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell tracepoint.h\cell\cell\row
Refs Var:\cell traceframe_number\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function get_tracepoint_by_number()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct tracepoint* get_tracepoint_by_number ( const char** arg, int multi_p, int optional_p )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell tracepoint.h\cell\cell\row
Calls: \cell get_number()\cell breakpoint.c\cell\row
\cell get_number_or_range()\cell breakpoint.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell printf_unfiltered()\cell utils.c\cell\row
\cell  error_no_arg()\cell\cell\row
Called by:\cell map_args_over_tracepoints()\cell tracepoint.c\cell\row
\cell trace_actions_command()\cell tracepoint.c\cell\row
\cell trace_pass_command()\cell tracepoint.c\cell\row
Refs Var:\cell tracepoint_chain\cell tracepoint.c\cell\row
\cell tracepoint_count\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function validate_actionline()\par}
{\s5\f1\fs20\ql\sb50\sa50 enum actionline_type validate_actionline ( char** line, struct tracepoint* t )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell tracepoint.h\cell\cell\row
Calls: \cell ax_reqs()\cell ax-general.c\cell\row
\cell block_for_pc()\cell block.c\cell\row
\cell do_cleanups()\cell utils.c\cell\row
\cell error()\cell utils.c\cell\row
\cell gen_trace_for_expr()\cell ax-gdb.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell make_cleanup_free_agent_expr()\cell ax-general.c\cell\row
\cell parse_exp_1()\cell parse.c\cell\row
\cell quit()\cell utils.c\cell\row
\cell warning()\cell utils.c\cell\row
\cell  cmd_cfunc_eq(), isspace(), lookup_cmd(), strchr(), strncasecmp(), strtol()\cell\cell\row
Called by:\cell read_actions()\cell tracepoint.c\cell\row
Refs Func:\cell collect_pseudocommand()\cell tracepoint.c\cell\row
\cell end_actions_pseudocommand()\cell tracepoint.c\cell\row
\cell free_current_contents()\cell utils.c\cell\row
\cell while_stepping_pseudocommand()\cell tracepoint.c\cell\row
\cell xfree()\cell utils.c\cell\row
Refs Var:\cell quit_flag\cell utils.c\cell\row
\cell  cmdlist\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function add_aexpr()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void add_aexpr ( struct collection_list* collect, struct agent_expr* aexpr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell tracepoint.c\cell\cell\row
Calls: \cell xrealloc()\cell utils.c\cell\row
Called by:\cell encode_actions()\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function add_local_symbols()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void add_local_symbols ( struct collection_list* collect, CORE_ADDR pc, long frame_regno, long frame_offset, int type )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell block_for_pc()\cell block.c\cell\row
\cell collect_symbol()\cell tracepoint.c\cell\row
\cell dict_iterator_first()\cell dictionary.c\cell\row
\cell dict_iterator_next()\cell dictionary.c\cell\row
\cell quit()\cell utils.c\cell\row
\cell warning()\cell utils.c\cell\row
Called by:\cell encode_actions()\cell tracepoint.c\cell\row
Refs Var:\cell quit_flag\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function add_memrange()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void add_memrange ( struct collection_list* memranges, int type, bfd_signed_vma base, unsigned long len )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell add_register()\cell tracepoint.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell xrealloc()\cell utils.c\cell\row
\cell  fprintf()\cell\cell\row
Called by:\cell collect_symbol()\cell tracepoint.c\cell\row
\cell encode_actions()\cell tracepoint.c\cell\row
Refs Var:\cell info_verbose\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function add_register()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void add_register ( struct collection_list* collection, unsigned int regno )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell tracepoint.c\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
Called by:\cell add_memrange()\cell tracepoint.c\cell\row
\cell collect_symbol()\cell tracepoint.c\cell\row
\cell encode_actions()\cell tracepoint.c\cell\row
Refs Var:\cell info_verbose\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function clear_collection_list()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void clear_collection_list ( struct collection_list* list )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell free_agent_expr()\cell ax-general.c\cell\row
\cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk()\cell\cell\row
Called by:\cell encode_actions()\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function collect_pseudocommand()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void collect_pseudocommand ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell error()\cell utils.c\cell\row
Used in:\cell _initialize_tracepoint()\cell tracepoint.c\cell\row
\cell encode_actions()\cell tracepoint.c\cell\row
\cell trace_dump_command()\cell tracepoint.c\cell\row
\cell validate_actionline()\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function collect_symbol()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void collect_symbol ( struct collection_list* collect, struct symbol* sym, long frame_regno, long frame_offset )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell add_memrange()\cell tracepoint.c\cell\row
\cell add_register()\cell tracepoint.c\cell\row
\cell check_typedef()\cell gdbtypes.c\cell\row
\cell objc_fixup_class_length()\cell objc-lang.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell register_size()\cell regcache.c\cell\row
\cell  __builtin___snprintf_chk(), __builtin_object_size(), fprintf()\cell\cell\row
Called by:\cell add_local_symbols()\cell tracepoint.c\cell\row
\cell encode_actions()\cell tracepoint.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\cell info_verbose\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function default_trace_find()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void default_trace_find ( const char* arg, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell tracepoint.c\cell\cell\row
Used in:\cell _initialize_tracepoint()\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function default_trace_start_stop()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void default_trace_start_stop ( int start, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell tracepoint.c\cell\cell\row
Used in:\cell _initialize_tracepoint()\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function delete_trace_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void delete_trace_command ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell tracepoint.c\cell\cell\row
Calls: \cell dont_repeat()\cell top.c\cell\row
\cell map_args_over_tracepoints()\cell tracepoint.c\cell\row
\cell query()\cell utils.c\cell\row
Used in:\cell _initialize_tracepoint()\cell tracepoint.c\cell\row
Refs Var:\cell tracepoint_chain\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function disable_trace_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void disable_trace_command ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell tracepoint.c\cell\cell\row
Calls: \cell dont_repeat()\cell top.c\cell\row
\cell map_args_over_tracepoints()\cell tracepoint.c\cell\row
Used in:\cell _initialize_tracepoint()\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function do_free_actions_cleanup()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void do_free_actions_cleanup ( void* t )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell free_actions()\cell tracepoint.c\cell\row
Used in:\cell make_cleanup_free_actions()\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function enable_trace_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void enable_trace_command ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell tracepoint.c\cell\cell\row
Calls: \cell dont_repeat()\cell top.c\cell\row
\cell map_args_over_tracepoints()\cell tracepoint.c\cell\row
Used in:\cell _initialize_tracepoint()\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function encode_actions()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void encode_actions ( struct tracepoint* t, char*** tdp_actions, char*** stepping_actions )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell add_aexpr()\cell tracepoint.c\cell\row
\cell add_local_symbols()\cell tracepoint.c\cell\row
\cell add_memrange()\cell tracepoint.c\cell\row
\cell add_register()\cell tracepoint.c\cell\row
\cell ax_reqs()\cell ax-general.c\cell\row
\cell block_for_pc()\cell block.c\cell\row
\cell check_typedef()\cell gdbtypes.c\cell\row
\cell clear_collection_list()\cell tracepoint.c\cell\row
\cell collect_symbol()\cell tracepoint.c\cell\row
\cell deprecated_value_address_hack()\cell value.c\cell\row
\cell discard_cleanups()\cell utils.c\cell\row
\cell do_cleanups()\cell utils.c\cell\row
\cell error()\cell utils.c\cell\row
\cell evaluate_expression()\cell eval.c\cell\row
\cell gdbarch_num_regs()\cell gdbarch.c\cell\row
\cell gdbarch_virtual_frame_pointer()\cell gdbarch.c\cell\row
\cell gen_trace_for_expr()\cell ax-gdb.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell make_cleanup_free_agent_expr()\cell ax-general.c\cell\row
\cell memrange_sortmerge()\cell tracepoint.c\cell\row
\cell objc_fixup_class_length()\cell objc-lang.c\cell\row
\cell parse_exp_1()\cell parse.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell quit()\cell utils.c\cell\row
\cell stringify_collection_list()\cell tracepoint.c\cell\row
\cell value_offset()\cell value.c\cell\row
\cell  cmd_cfunc_eq(), isspace(), lookup_cmd(), strchr(), strncasecmp()\cell\cell\row
Called by:\cell trace_start_command()\cell tracepoint.c\cell\row
Refs Func:\cell collect_pseudocommand()\cell tracepoint.c\cell\row
\cell end_actions_pseudocommand()\cell tracepoint.c\cell\row
\cell free_current_contents()\cell utils.c\cell\row
\cell while_stepping_pseudocommand()\cell tracepoint.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\cell info_verbose\cell top.c\cell\row
\cell quit_flag\cell utils.c\cell\row
\cell stepping_list\cell tracepoint.c\cell\row
\cell tracepoint_list\cell tracepoint.c\cell\row
\cell  cmdlist\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function end_actions_pseudocommand()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void end_actions_pseudocommand ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell error()\cell utils.c\cell\row
Used in:\cell _initialize_tracepoint()\cell tracepoint.c\cell\row
\cell encode_actions()\cell tracepoint.c\cell\row
\cell trace_dump_command()\cell tracepoint.c\cell\row
\cell tracepoint_save_command()\cell tracepoint.c\cell\row
\cell validate_actionline()\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function finish_tfind_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void finish_tfind_command ( char* msg, long sizeof_msg, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell clear_inlined_subroutine_print_frames()\cell inlining.c\cell\row
\cell do_displays()\cell printcmd.c\cell\row
\cell error()\cell utils.c\cell\row
\cell find_pc_function()\cell blockframe.c\cell\row
\cell flush_cached_frames()\cell frame.c\cell\row
\cell get_current_frame()\cell frame.c\cell\row
\cell get_frame_base()\cell frame.c\cell\row
\cell get_selected_frame()\cell frame.c\cell\row
\cell print_stack_frame()\cell stack.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell read_pc()\cell regcache.c\cell\row
\cell registers_changed()\cell regcache.c\cell\row
\cell remote_get_noisy_reply()\cell tracepoint.c\cell\row
\cell select_frame()\cell frame.c\cell\row
\cell set_traceframe_context()\cell tracepoint.c\cell\row
\cell set_traceframe_num()\cell tracepoint.c\cell\row
\cell set_tracepoint_num()\cell tracepoint.c\cell\row
\cell trace_find_command()\cell tracepoint.c\cell\row
\cell  strtol()\cell\cell\row
Called by:\cell trace_find_command()\cell tracepoint.c\cell\row
\cell trace_find_line_command()\cell tracepoint.c\cell\row
\cell trace_find_outside_command()\cell tracepoint.c\cell\row
\cell trace_find_pc_command()\cell tracepoint.c\cell\row
\cell trace_find_range_command()\cell tracepoint.c\cell\row
\cell trace_find_tracepoint_command()\cell tracepoint.c\cell\row
Refs Var:\cell info_verbose\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function free_actions_list()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void free_actions_list ( char** actions_list )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell tracepoint.c\cell\cell\row
Calls: \cell xfree()\cell utils.c\cell\row
Called by:\cell free_actions_list_cleanup_wrapper()\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function free_actions_list_cleanup_wrapper()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void free_actions_list_cleanup_wrapper ( void* al )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell tracepoint.c\cell\cell\row
Calls: \cell free_actions_list()\cell tracepoint.c\cell\row
Used in:\cell trace_start_command()\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function make_cleanup_free_actions()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct cleanup* make_cleanup_free_actions ( struct tracepoint* t )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell tracepoint.c\cell\cell\row
Calls: \cell make_cleanup()\cell utils.c\cell\row
Called by:\cell read_actions()\cell tracepoint.c\cell\row
Refs Func:\cell do_free_actions_cleanup()\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function map_args_over_tracepoints()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void map_args_over_tracepoints ( const char* args, int from_tty, enum tracepoint_opcode opcode )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell get_tracepoint_by_number()\cell tracepoint.c\cell\row
\cell quit()\cell utils.c\cell\row
\cell tracepoint_operation()\cell tracepoint.c\cell\row
Called by:\cell delete_trace_command()\cell tracepoint.c\cell\row
\cell disable_trace_command()\cell tracepoint.c\cell\row
\cell enable_trace_command()\cell tracepoint.c\cell\row
Refs Var:\cell quit_flag\cell utils.c\cell\row
\cell tracepoint_chain\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function mem2hex()\par}
{\s5\f1\fs20\ql\sb50\sa50 static char* mem2hex ( gdb_byte* mem, char* buf, int count )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell tracepoint.c\cell\cell\row
Called by:\cell stringify_collection_list()\cell tracepoint.c\cell\row
Refs Var:\cell hexchars\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function memrange_cmp()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int memrange_cmp ( const void* va, const void* vb )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell tracepoint.c\cell\cell\row
Used in:\cell memrange_sortmerge()\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function memrange_sortmerge()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void memrange_sortmerge ( struct collection_list* memranges )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell  __builtin___memcpy_chk(), __builtin_object_size(), __inline_memcpy_chk(), qsort()\cell\cell\row
Called by:\cell encode_actions()\cell tracepoint.c\cell\row
Refs Func:\cell memrange_cmp()\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function read_actions()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void read_actions ( struct tracepoint* t )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell tracepoint.c\cell\cell\row
Calls: \cell discard_cleanups()\cell utils.c\cell\row
\cell free_actions()\cell tracepoint.c\cell\row
\cell gdb_flush()\cell ui-file.c\cell\row
\cell gdb_readline()\cell top.c\cell\row
\cell gdb_readline_wrapper()\cell top.c\cell\row
\cell make_cleanup_free_actions()\cell tracepoint.c\cell\row
\cell validate_actionline()\cell tracepoint.c\cell\row
\cell warning()\cell utils.c\cell\row
\cell wrap_here()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  add_history(), fileno(), isatty()\cell\cell\row
Called by:\cell trace_actions_command()\cell tracepoint.c\cell\row
Refs Var:\cell deprecated_readline_hook\cell top.c\cell\row
\cell gdb_stderr\cell main.c\cell\row
\cell gdb_stdout\cell main.c\cell\row
\cell immediate_quit\cell utils.c\cell\row
\cell instream\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_get_noisy_reply()\par}
{\s5\f1\fs20\ql\sb50\sa50 static char* remote_get_noisy_reply ( char* buf, long sizeof_buf )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell error()\cell utils.c\cell\row
\cell getpkt()\cell remote.c\cell\row
\cell quit()\cell utils.c\cell\row
\cell remote_console_output()\cell remote.c\cell\row
\cell trace_error()\cell tracepoint.c\cell\row
Called by:\cell finish_tfind_command()\cell tracepoint.c\cell\row
\cell trace_start_command()\cell tracepoint.c\cell\row
\cell trace_status_command()\cell tracepoint.c\cell\row
\cell trace_stop_command()\cell tracepoint.c\cell\row
Refs Var:\cell quit_flag\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function remote_set_transparent_ranges()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void remote_set_transparent_ranges ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell getpkt()\cell remote.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell  __builtin___snprintf_chk(), __builtin___strcpy_chk(), __builtin_object_size(), __inline_strcpy_chk(), strlen()\cell\cell\row
Called by:\cell trace_start_command()\cell tracepoint.c\cell\row
Refs Var:\cell target_buf\cell tracepoint.c\cell\row
\cell  exec_bfd\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function replace_comma()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void replace_comma ( void* data )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell trace_dump_command()\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function scope_info()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void scope_info ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell block_for_pc()\cell block.c\cell\row
\cell check_typedef()\cell gdbtypes.c\cell\row
\cell decode_line_1()\cell linespec.c\cell\row
\cell deprecated_print_address_numeric()\cell printcmd.c\cell\row
\cell dict_iterator_first()\cell dictionary.c\cell\row
\cell dict_iterator_next()\cell dictionary.c\cell\row
\cell error()\cell utils.c\cell\row
\cell fprintf_filtered()\cell utils.c\cell\row
\cell gdbarch_register_name()\cell gdbarch.c\cell\row
\cell lookup_minimal_symbol()\cell minsyms.c\cell\row
\cell objc_fixup_class_length()\cell objc-lang.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell quit()\cell utils.c\cell\row
\cell resolve_sal_pc()\cell breakpoint.c\cell\row
Used in:\cell _initialize_tracepoint()\cell tracepoint.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\cell gdb_stdout\cell main.c\cell\row
\cell quit_flag\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_raw_tracepoint()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct tracepoint* set_raw_tracepoint ( struct symtab_and_line sal )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell discard_cleanups()\cell utils.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell savestring()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk(), strlen()\cell\cell\row
Called by:\cell trace_command()\cell tracepoint.c\cell\row
Refs Func:\cell xfree()\cell utils.c\cell\row
Refs Var:\cell current_language\cell language.c\cell\row
\cell input_radix\cell valprint.c\cell\row
\cell tracepoint_chain\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_traceframe_context()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void set_traceframe_context ( CORE_ADDR trace_pc )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell allocate_value()\cell value.c\cell\row
\cell create_array_type()\cell gdbtypes.c\cell\row
\cell create_range_type()\cell gdbtypes.c\cell\row
\cell deprecated_set_value_modifiable()\cell value.c\cell\row
\cell deprecated_set_value_type()\cell value.c\cell\row
\cell find_pc_function()\cell blockframe.c\cell\row
\cell find_pc_line()\cell symtab.c\cell\row
\cell lookup_internalvar()\cell value.c\cell\row
\cell lookup_pointer_type()\cell gdbtypes.c\cell\row
\cell set_internalvar()\cell value.c\cell\row
\cell value_contents_raw()\cell value.c\cell\row
\cell value_from_longest()\cell value.c\cell\row
\cell value_from_pointer()\cell value.c\cell\row
\cell  __builtin___memcpy_chk(), __builtin_object_size(), __inline_memcpy_chk(), strlen()\cell\cell\row
Called by:\cell finish_tfind_command()\cell tracepoint.c\cell\row
\cell trace_start_command()\cell tracepoint.c\cell\row
Refs Var:\cell builtin_type_char\cell gdbtypes.c\cell\row
\cell builtin_type_int\cell gdbtypes.c\cell\row
\cell traceframe_fun\cell tracepoint.c\cell\row
\cell traceframe_sal\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_traceframe_num()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void set_traceframe_num ( int num )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell lookup_internalvar()\cell value.c\cell\row
\cell set_internalvar()\cell value.c\cell\row
\cell value_from_longest()\cell value.c\cell\row
Called by:\cell finish_tfind_command()\cell tracepoint.c\cell\row
\cell trace_start_command()\cell tracepoint.c\cell\row
Refs Var:\cell builtin_type_int\cell gdbtypes.c\cell\row
\cell traceframe_number\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_tracepoint_count()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void set_tracepoint_count ( int num )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell lookup_internalvar()\cell value.c\cell\row
\cell set_internalvar()\cell value.c\cell\row
\cell value_from_longest()\cell value.c\cell\row
Called by:\cell trace_command()\cell tracepoint.c\cell\row
Refs Var:\cell builtin_type_int\cell gdbtypes.c\cell\row
\cell tracepoint_count\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_tracepoint_num()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void set_tracepoint_num ( int num )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell lookup_internalvar()\cell value.c\cell\row
\cell set_internalvar()\cell value.c\cell\row
\cell value_from_longest()\cell value.c\cell\row
Called by:\cell finish_tfind_command()\cell tracepoint.c\cell\row
\cell trace_start_command()\cell tracepoint.c\cell\row
Refs Var:\cell builtin_type_int\cell gdbtypes.c\cell\row
\cell tracepoint_number\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function stringify_collection_list()\par}
{\s5\f1\fs20\ql\sb50\sa50 static char** stringify_collection_list ( struct collection_list* list, char* string )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell internal_error()\cell utils.c\cell\row
\cell mem2hex()\cell tracepoint.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell quit()\cell utils.c\cell\row
\cell savestring()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  __builtin___snprintf_chk(), __builtin_object_size(), strlen()\cell\cell\row
Called by:\cell encode_actions()\cell tracepoint.c\cell\row
Refs Var:\cell info_verbose\cell top.c\cell\row
\cell quit_flag\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function target_is_remote()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int target_is_remote ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell  strcmp()\cell\cell\row
Called by:\cell trace_dump_command()\cell tracepoint.c\cell\row
\cell trace_find_command()\cell tracepoint.c\cell\row
\cell trace_find_line_command()\cell tracepoint.c\cell\row
\cell trace_find_outside_command()\cell tracepoint.c\cell\row
\cell trace_find_pc_command()\cell tracepoint.c\cell\row
\cell trace_find_range_command()\cell tracepoint.c\cell\row
\cell trace_find_tracepoint_command()\cell tracepoint.c\cell\row
\cell trace_start_command()\cell tracepoint.c\cell\row
\cell trace_status_command()\cell tracepoint.c\cell\row
\cell trace_stop_command()\cell tracepoint.c\cell\row
Refs Var:\cell current_target\cell target/target.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function trace_actions_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void trace_actions_command ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell tracepoint.c\cell\cell\row
Calls: \cell free_actions()\cell tracepoint.c\cell\row
\cell get_tracepoint_by_number()\cell tracepoint.c\cell\row
\cell input_from_terminal_p()\cell top.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell read_actions()\cell tracepoint.c\cell\row
\cell  __builtin___snprintf_chk(), __builtin_object_size()\cell\cell\row
Used in:\cell _initialize_tracepoint()\cell tracepoint.c\cell\row
Refs Var:\cell deprecated_readline_begin_hook\cell top.c\cell\row
\cell deprecated_readline_end_hook\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function trace_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void trace_command ( const char* arg, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell tracepoint.c\cell\cell\row
Calls: \cell decode_line_1()\cell linespec.c\cell\row
\cell error()\cell utils.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell resolve_sal_pc()\cell breakpoint.c\cell\row
\cell savestring()\cell utils.c\cell\row
\cell set_raw_tracepoint()\cell tracepoint.c\cell\row
\cell set_tracepoint_count()\cell tracepoint.c\cell\row
\cell trace_mention()\cell tracepoint.c\cell\row
Used in:\cell _initialize_tracepoint()\cell tracepoint.c\cell\row
Refs Var:\cell info_verbose\cell top.c\cell\row
\cell tracepoint_count\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function trace_dump_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void trace_dump_command ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell tracepoint.c\cell\cell\row
Calls: \cell args_info()\cell stack.c\cell\row
\cell discard_cleanups()\cell utils.c\cell\row
\cell error()\cell utils.c\cell\row
\cell gdbarch_decr_pc_after_break()\cell gdbarch.c\cell\row
\cell locals_info()\cell stack.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell output_command()\cell printcmd.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell quit()\cell utils.c\cell\row
\cell read_pc()\cell regcache.c\cell\row
\cell registers_info()\cell infcmd.c\cell\row
\cell target_is_remote()\cell tracepoint.c\cell\row
\cell warning()\cell utils.c\cell\row
\cell  cmd_cfunc_eq(), isspace(), lookup_cmd(), strchr(), strncasecmp()\cell\cell\row
Used in:\cell _initialize_tracepoint()\cell tracepoint.c\cell\row
Refs Func:\cell collect_pseudocommand()\cell tracepoint.c\cell\row
\cell end_actions_pseudocommand()\cell tracepoint.c\cell\row
\cell null_cleanup()\cell utils.c\cell\row
\cell replace_comma()\cell tracepoint.c\cell\row
\cell while_stepping_pseudocommand()\cell tracepoint.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\cell quit_flag\cell utils.c\cell\row
\cell traceframe_number\cell tracepoint.c\cell\row
\cell tracepoint_chain\cell tracepoint.c\cell\row
\cell tracepoint_number\cell tracepoint.c\cell\row
\cell  cmdlist\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function trace_error()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void trace_error ( char* buf )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell error()\cell utils.c\cell\row
\cell  strtol()\cell\cell\row
Called by:\cell remote_get_noisy_reply()\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function trace_find_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void trace_find_command ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell tracepoint.c\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
\cell finish_tfind_command()\cell tracepoint.c\cell\row
\cell parse_and_eval_long()\cell eval.c\cell\row
\cell target_is_remote()\cell tracepoint.c\cell\row
\cell  __builtin___snprintf_chk(), __builtin_object_size(), deprecated_trace_find_hook(), strcmp()\cell\cell\row
Called by:\cell finish_tfind_command()\cell tracepoint.c\cell\row
\cell trace_find_end_command()\cell tracepoint.c\cell\row
\cell trace_find_none_command()\cell tracepoint.c\cell\row
\cell trace_find_start_command()\cell tracepoint.c\cell\row
Used in:\cell _initialize_tracepoint()\cell tracepoint.c\cell\row
Refs Var:\cell deprecated_trace_find_hook\cell tracepoint.c\cell\row
\cell target_buf\cell tracepoint.c\cell\row
\cell traceframe_number\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function trace_find_end_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void trace_find_end_command ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell trace_find_command()\cell tracepoint.c\cell\row
Used in:\cell _initialize_tracepoint()\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function trace_find_line_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void trace_find_line_command ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell tracepoint.c\cell\cell\row
Calls: \cell decode_line_spec()\cell symtab.c\cell\row
\cell do_cleanups()\cell utils.c\cell\row
\cell error()\cell utils.c\cell\row
\cell find_line_pc_range()\cell symtab.c\cell\row
\cell find_pc_line()\cell symtab.c\cell\row
\cell finish_tfind_command()\cell tracepoint.c\cell\row
\cell get_current_frame()\cell frame.c\cell\row
\cell get_frame_pc()\cell frame.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell print_address()\cell printcmd.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell target_is_remote()\cell tracepoint.c\cell\row
\cell wrap_here()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  __builtin___snprintf_chk(), __builtin_object_size()\cell\cell\row
Used in:\cell _initialize_tracepoint()\cell tracepoint.c\cell\row
Refs Func:\cell xfree()\cell utils.c\cell\row
Refs Var:\cell gdb_stdout\cell main.c\cell\row
\cell target_buf\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function trace_find_none_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void trace_find_none_command ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell trace_find_command()\cell tracepoint.c\cell\row
Used in:\cell _initialize_tracepoint()\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function trace_find_outside_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void trace_find_outside_command ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell tracepoint.c\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
\cell finish_tfind_command()\cell tracepoint.c\cell\row
\cell parse_and_eval_address()\cell eval.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell target_is_remote()\cell tracepoint.c\cell\row
\cell  __builtin___snprintf_chk(), __builtin_object_size(), isspace(), strchr()\cell\cell\row
Used in:\cell _initialize_tracepoint()\cell tracepoint.c\cell\row
Refs Var:\cell target_buf\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function trace_find_pc_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void trace_find_pc_command ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell tracepoint.c\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
\cell finish_tfind_command()\cell tracepoint.c\cell\row
\cell parse_and_eval_address()\cell eval.c\cell\row
\cell read_pc()\cell regcache.c\cell\row
\cell target_is_remote()\cell tracepoint.c\cell\row
\cell  __builtin___snprintf_chk(), __builtin_object_size()\cell\cell\row
Used in:\cell _initialize_tracepoint()\cell tracepoint.c\cell\row
Refs Var:\cell target_buf\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function trace_find_range_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void trace_find_range_command ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell tracepoint.c\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
\cell finish_tfind_command()\cell tracepoint.c\cell\row
\cell parse_and_eval_address()\cell eval.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell target_is_remote()\cell tracepoint.c\cell\row
\cell  __builtin___snprintf_chk(), __builtin_object_size(), isspace(), strchr()\cell\cell\row
Used in:\cell _initialize_tracepoint()\cell tracepoint.c\cell\row
Refs Var:\cell target_buf\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function trace_find_start_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void trace_find_start_command ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell trace_find_command()\cell tracepoint.c\cell\row
Used in:\cell _initialize_tracepoint()\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function trace_find_tracepoint_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void trace_find_tracepoint_command ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell tracepoint.c\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
\cell finish_tfind_command()\cell tracepoint.c\cell\row
\cell parse_and_eval_long()\cell eval.c\cell\row
\cell target_is_remote()\cell tracepoint.c\cell\row
\cell  __builtin___snprintf_chk(), __builtin_object_size()\cell\cell\row
Used in:\cell _initialize_tracepoint()\cell tracepoint.c\cell\row
Refs Var:\cell target_buf\cell tracepoint.c\cell\row
\cell tracepoint_number\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function trace_mention()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void trace_mention ( struct tracepoint* tp )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell tracepoint.c\cell\cell\row
Calls: \cell deprecated_print_address_numeric()\cell printcmd.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
Called by:\cell trace_command()\cell tracepoint.c\cell\row
Refs Var:\cell addressprint\cell valprint.c\cell\row
\cell gdb_stdout\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function trace_pass_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void trace_pass_command ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell tracepoint.c\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
\cell get_tracepoint_by_number()\cell tracepoint.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell  isspace(), strncasecmp(), strtoul(), tracepoint_modify_event()\cell\cell\row
Used in:\cell _initialize_tracepoint()\cell tracepoint.c\cell\row
Refs Var:\cell tracepoint_chain\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function trace_start_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void trace_start_command ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell tracepoint.c\cell\cell\row
Calls: \cell do_cleanups()\cell utils.c\cell\row
\cell dont_repeat()\cell top.c\cell\row
\cell encode_actions()\cell tracepoint.c\cell\row
\cell error()\cell utils.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell quit()\cell utils.c\cell\row
\cell remote_get_noisy_reply()\cell tracepoint.c\cell\row
\cell remote_set_transparent_ranges()\cell tracepoint.c\cell\row
\cell set_traceframe_context()\cell tracepoint.c\cell\row
\cell set_traceframe_num()\cell tracepoint.c\cell\row
\cell set_tracepoint_num()\cell tracepoint.c\cell\row
\cell target_is_remote()\cell tracepoint.c\cell\row
\cell  __builtin___snprintf_chk(), __builtin___strcat_chk(), __builtin_object_size(), __inline_strcat_chk(), deprecated_trace_start_stop_hook(), strcmp()\cell\cell\row
Used in:\cell _initialize_tracepoint()\cell tracepoint.c\cell\row
Refs Func:\cell free_actions_list_cleanup_wrapper()\cell tracepoint.c\cell\row
Refs Var:\cell deprecated_trace_start_stop_hook\cell tracepoint.c\cell\row
\cell quit_flag\cell utils.c\cell\row
\cell target_buf\cell tracepoint.c\cell\row
\cell trace_running_p\cell tracepoint.c\cell\row
\cell tracepoint_chain\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function trace_status_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void trace_status_command ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell tracepoint.c\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell remote_get_noisy_reply()\cell tracepoint.c\cell\row
\cell target_is_remote()\cell tracepoint.c\cell\row
Used in:\cell _initialize_tracepoint()\cell tracepoint.c\cell\row
Refs Var:\cell target_buf\cell tracepoint.c\cell\row
\cell trace_running_p\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function trace_stop_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void trace_stop_command ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell tracepoint.c\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
\cell putpkt()\cell remote.c\cell\row
\cell remote_get_noisy_reply()\cell tracepoint.c\cell\row
\cell target_is_remote()\cell tracepoint.c\cell\row
\cell  deprecated_trace_start_stop_hook(), strcmp()\cell\cell\row
Used in:\cell _initialize_tracepoint()\cell tracepoint.c\cell\row
Refs Var:\cell deprecated_trace_start_stop_hook\cell tracepoint.c\cell\row
\cell target_buf\cell tracepoint.c\cell\row
\cell trace_running_p\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function tracepoint_operation()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void tracepoint_operation ( struct tracepoint* t, int from_tty, enum tracepoint_opcode opcode )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell free_actions()\cell tracepoint.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell  tracepoint_delete_event(), tracepoint_modify_event()\cell\cell\row
Called by:\cell map_args_over_tracepoints()\cell tracepoint.c\cell\row
Refs Var:\cell tracepoint_chain\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function tracepoint_save_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void tracepoint_save_command ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell tracepoint.c\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell quit()\cell utils.c\cell\row
\cell safe_strerror()\cell utils.c\cell\row
\cell warning()\cell utils.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell  __builtin___snprintf_chk(), __builtin_object_size(), __error(), cmd_cfunc_eq(), fclose(), fopen(), fprintf(), isspace(), lookup_cmd(), tilde_expand()\cell\cell\row
Used in:\cell _initialize_tracepoint()\cell tracepoint.c\cell\row
Refs Func:\cell end_actions_pseudocommand()\cell tracepoint.c\cell\row
\cell while_stepping_pseudocommand()\cell tracepoint.c\cell\row
Refs Var:\cell quit_flag\cell utils.c\cell\row
\cell tracepoint_chain\cell tracepoint.c\cell\row
\cell  cmdlist\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function tracepoints_info()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void tracepoints_info ( const char* tpnum_exp, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell tracepoint.c\cell\cell\row
Calls: \cell find_pc_sect_function()\cell blockframe.c\cell\row
\cell fputs_filtered()\cell utils.c\cell\row
\cell gdbarch_addr_bit()\cell gdbarch.c\cell\row
\cell hex_string_custom()\cell utils.c\cell\row
\cell parse_and_eval_long()\cell eval.c\cell\row
\cell print_address_symbolic()\cell printcmd.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell symbol_natural_name()\cell symtab.c\cell\row
\cell wrap_here()\cell utils.c\cell\row
\cell  __builtin___strcat_chk(), __builtin___strcpy_chk(), __builtin_object_size(), __inline_strcat_chk(), __inline_strcpy_chk()\cell\cell\row
Used in:\cell _initialize_tracepoint()\cell tracepoint.c\cell\row
Refs Var:\cell addressprint\cell valprint.c\cell\row
\cell current_gdbarch\cell gdbarch.c\cell\row
\cell demangle\cell utils.c\cell\row
\cell gdb_stdout\cell main.c\cell\row
\cell tracepoint_chain\cell tracepoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function while_stepping_pseudocommand()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void while_stepping_pseudocommand ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell error()\cell utils.c\cell\row
Used in:\cell _initialize_tracepoint()\cell tracepoint.c\cell\row
\cell encode_actions()\cell tracepoint.c\cell\row
\cell trace_dump_command()\cell tracepoint.c\cell\row
\cell tracepoint_save_command()\cell tracepoint.c\cell\row
\cell validate_actionline()\cell tracepoint.c\cell\row
\intbl0
}
