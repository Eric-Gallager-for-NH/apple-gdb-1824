<!DOCTYPE LINUXDOC SYSTEM>

<!-- This SGML file generated by cxref (version 1.6e). -->
<!-- cxref program (c) Andrew M. Bishop 1995-2014. -->

<!--
Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF ui-file.c
CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
-->

<article>

<title>Cross reference for ui-file.c of gdb.cxref.
<author>cxref

<sect>File ui-file.c

<sect1>Included Files

<p>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<itemize>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
<item><tt>#include &lt;sys/time.h&gt;</tt>
<item><tt>#include &lt;time.h&gt;</tt>
<item><tt>#include &lt;sys/types.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
<item><tt>#include &lt;errno.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
<item><tt>#include &lt;regex.h&gt;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;unistd.h&gt;</tt>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;gdb_locale.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<item><tt>#include &lt;locale.h&gt;</tt>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../gdb/signals.h&quot;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &quot;../include/libiberty.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/symcat.h&quot;</tt>
</itemize>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
<item><tt>#include &quot;ui-file.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;xm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/xm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &lt;mach/mach.h&gt;</tt>
<item><tt>#include &lt;signal.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;nm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/i386/nm-i386.h&quot;</tt>
<item><tt>#include &quot;macosx/nm-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;tm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/tm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;macosx/i386-macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/i386-macosx-thread-status.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &lt;mach/mach_types.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
<item><tt>#include &lt;inttypes.h&gt;</tt>
<item><tt>#include &lt;mach/mach_vm.h&gt;</tt>
<item><tt>#include &lt;mach/kmod.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;macosx/tm-i386-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;../include/fopen-bin.h&quot;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdlib.h&gt;</tt>
<item><tt>#include &quot;gdbarch.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;ui-file.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_string.h&quot;</tt>
<itemize>
<item><tt>#include &lt;string.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &lt;errno.h&gt;</tt>
</itemize>

<sect1>Type struct ui_file

<p>
<itemize>
<item><tt>struct ui_file</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>int* magic;</tt><newline>
<item><tt>ui_file_flush_ftype* to_flush;</tt><newline>
<item><tt>ui_file_write_ftype* to_write;</tt><newline>
<item><tt>ui_file_fputs_ftype* to_fputs;</tt><newline>
<item><tt>ui_file_read_ftype* to_read;</tt><newline>
<item><tt>ui_file_delete_ftype* to_delete;</tt><newline>
<item><tt>ui_file_isatty_ftype* to_isatty;</tt><newline>
<item><tt>ui_file_rewind_ftype* to_rewind;</tt><newline>
<item><tt>ui_file_put_ftype* to_put;</tt><newline>
<item><tt>void* to_data;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Type struct accumulated_ui_file

<p>
<itemize>
<item><tt>struct accumulated_ui_file</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>char* buffer;</tt><newline>
<item><tt>long length;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Type struct mem_file

<p>
<itemize>
<item><tt>struct mem_file</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>int* magic;</tt><newline>
<item><tt>char* buffer;</tt><newline>
<item><tt>int sizeof_buffer;</tt><newline>
<item><tt>int length_buffer;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Type struct stdio_file

<p>
<itemize>
<item><tt>struct stdio_file</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>int* magic;</tt><newline>
<item><tt>FILE* file;</tt><newline>
<item><tt>int close_p;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Type struct tee_file

<p>
<itemize>
<item><tt>struct tee_file</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>int* magic;</tt><newline>
<item><tt>struct ui_file* one;</tt><newline>
<item><tt>struct ui_file* two;</tt><newline>
<item><tt>int close_one;</tt><newline>
<item><tt>int close_two;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Global Variable ui_file_magic

<p>
<tt>int ui_file_magic</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ui-file.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>ui_file_data()  :  ui-file.c
<item>ui_file_new()  :  ui-file.c
</itemize>
</descrip>

<sect1>Local Variables

<p>
<bf>null_file_isatty</bf><newline>
<tt>static ui_file_isatty_ftype null_file_isatty</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>ui_file_new()
</itemize>
</descrip>
<p>
<bf>null_file_write</bf><newline>
<tt>static ui_file_write_ftype null_file_write</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>null_file_fputs()
<item>ui_file_new()
</itemize>
</descrip>
<p>
<bf>null_file_fputs</bf><newline>
<tt>static ui_file_fputs_ftype null_file_fputs</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>null_file_write()
<item>ui_file_new()
</itemize>
</descrip>
<p>
<bf>null_file_read</bf><newline>
<tt>static ui_file_read_ftype null_file_read</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>ui_file_new()
</itemize>
</descrip>
<p>
<bf>null_file_flush</bf><newline>
<tt>static ui_file_flush_ftype null_file_flush</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>ui_file_new()
</itemize>
</descrip>
<p>
<bf>null_file_delete</bf><newline>
<tt>static ui_file_delete_ftype null_file_delete</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>ui_file_new()
</itemize>
</descrip>
<p>
<bf>null_file_rewind</bf><newline>
<tt>static ui_file_rewind_ftype null_file_rewind</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>ui_file_new()
</itemize>
</descrip>
<p>
<bf>null_file_put</bf><newline>
<tt>static ui_file_put_ftype null_file_put</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>ui_file_new()
</itemize>
</descrip>
<p>
<bf>mem_file_rewind</bf><newline>
<tt>static ui_file_rewind_ftype mem_file_rewind</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>mem_file_new()
</itemize>
</descrip>
<p>
<bf>mem_file_put</bf><newline>
<tt>static ui_file_put_ftype mem_file_put</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>mem_file_new()
</itemize>
</descrip>
<p>
<bf>mem_file_write</bf><newline>
<tt>static ui_file_write_ftype mem_file_write</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>mem_file_new()
</itemize>
</descrip>
<p>
<bf>mem_file_delete</bf><newline>
<tt>static ui_file_delete_ftype mem_file_delete</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>mem_file_new()
</itemize>
</descrip>
<p>
<bf>mem_file_magic</bf><newline>
<tt>static int mem_file_magic</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>mem_file_delete()
<item>mem_file_new()
<item>mem_file_put()
<item>mem_file_rewind()
<item>mem_file_write()
</itemize>
</descrip>
<p>
<bf>stdio_file_write</bf><newline>
<tt>static ui_file_write_ftype stdio_file_write</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>stdio_file_new()
</itemize>
</descrip>
<p>
<bf>stdio_file_fputs</bf><newline>
<tt>static ui_file_fputs_ftype stdio_file_fputs</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>stdio_file_new()
</itemize>
</descrip>
<p>
<bf>stdio_file_read</bf><newline>
<tt>static ui_file_read_ftype stdio_file_read</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>stdio_file_new()
</itemize>
</descrip>
<p>
<bf>stdio_file_isatty</bf><newline>
<tt>static ui_file_isatty_ftype stdio_file_isatty</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>stdio_file_new()
</itemize>
</descrip>
<p>
<bf>stdio_file_delete</bf><newline>
<tt>static ui_file_delete_ftype stdio_file_delete</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>stdio_file_new()
</itemize>
</descrip>
<p>
<bf>stdio_file_flush</bf><newline>
<tt>static ui_file_flush_ftype stdio_file_flush</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>stdio_file_new()
</itemize>
</descrip>
<p>
<bf>stdio_file_magic</bf><newline>
<tt>static int stdio_file_magic</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>stdio_file_delete()
<item>stdio_file_flush()
<item>stdio_file_fputs()
<item>stdio_file_isatty()
<item>stdio_file_new()
<item>stdio_file_read()
<item>stdio_file_write()
</itemize>
</descrip>
<p>
<bf>tee_file_write</bf><newline>
<tt>static ui_file_write_ftype tee_file_write</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>tee_file_new()
</itemize>
</descrip>
<p>
<bf>tee_file_fputs</bf><newline>
<tt>static ui_file_fputs_ftype tee_file_fputs</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>tee_file_new()
</itemize>
</descrip>
<p>
<bf>tee_file_isatty</bf><newline>
<tt>static ui_file_isatty_ftype tee_file_isatty</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>tee_file_new()
</itemize>
</descrip>
<p>
<bf>tee_file_delete</bf><newline>
<tt>static ui_file_delete_ftype tee_file_delete</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>tee_file_new()
</itemize>
</descrip>
<p>
<bf>tee_file_flush</bf><newline>
<tt>static ui_file_flush_ftype tee_file_flush</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>tee_file_new()
</itemize>
</descrip>
<p>
<bf>tee_file_magic</bf><newline>
<tt>static int tee_file_magic</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>tee_file_delete()
<item>tee_file_flush()
<item>tee_file_fputs()
<item>tee_file_isatty()
<item>tee_file_new()
<item>tee_file_write()
</itemize>
</descrip>

<sect1>Global Function fputs_unfiltered()

<p><tt>void fputs_unfiltered ( const char* buf, struct ui_file* file )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>defs.h
</itemize>
<tag>Called by:</tag>
<itemize>
<item>captured_main()  :  main.c
<item>clear_complaints()  :  complaints.c
<item>debug_to_find_new_threads()  :  target/target.c
<item>deprecated_debug_xfer_memory()  :  target/target.c
<item>display_gdb_prompt()  :  event-top.c
<item>do_serial_close()  :  serial.c
<item>fputs_maybe_filtered()  :  utils.c
<item>gdb_readline()  :  top.c
<item>internal_vproblem()  :  utils.c
<item>print_gdb_help()  :  main.c
<item>print_spaces()  :  utils.c
<item>puts_debug()  :  utils.c
<item>puts_unfiltered()  :  utils.c
<item>remote_console_output()  :  remote.c
<item>save_breakpoints_command()  :  breakpoint.c
<item>serial_log_command()  :  serial.c
<item>serial_logchar()  :  serial.c
<item>target_xfer_partial()  :  target/target.c
<item>vfprintf_unfiltered()  :  utils.c
<item>vwarning()  :  utils.c
<item>wrap_here()  :  utils.c
<item>write_one_breakpoint()  :  breakpoint.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>fputstr_unfiltered()  :  utils.c
<item>fputstrn_unfiltered()  :  utils.c
</itemize>
</descrip>

<sect1>Global Function gdb_flush()

<p><tt>void gdb_flush ( struct ui_file* file )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>ui-file.h
</itemize>
<tag>Called by:</tag>
<itemize>
<item>ada_lookup_struct_elt_type()  :  ada-lang.c
<item>ada_print_scalar()  :  ada-valprint.c
<item>ada_val_print_1()  :  ada-valprint.c
<item>async_stop_sig()  :  event-top.c
<item>c_val_print()  :  c-valprint.c
<item>captured_main()  :  main.c
<item>cli_flush()  :  cli-out.c
<item>command_line_handler()  :  event-top.c
<item>command_line_input()  :  top.c
<item>dbx_psymtab_to_symtab()  :  dbxread.c
<item>dbx_psymtab_to_symtab_1()  :  dbxread.c
<item>defaulted_query()  :  utils.c
<item>display_gdb_prompt()  :  event-top.c
<item>display_info()  :  printcmd.c
<item>do_examine()  :  printcmd.c
<item>do_one_display()  :  printcmd.c
<item>dwarf2_debug_map_psymtab_to_symtab()  :  dwarf2read.c
<item>dwarf2_kext_psymtab_to_symtab()  :  dwarf2read.c
<item>dwarf2_psymtab_to_symtab()  :  dwarf2read.c
<item>dwarf_psymtab_to_symtab()  :  dwarfread.c
<item>f_val_print()  :  f-valprint.c
<item>follow_exec()  :  infrun.c
<item>gdb_disassembly()  :  disasm.c
<item>gdb_readline()  :  top.c
<item>gdb_wait_for_event()  :  event-loop.c
<item>get_selections()  :  ada-lang.c
<item>handle_command()  :  infrun.c
<item>handle_inferior_event()  :  infrun.c
<item>lookup_struct_elt_type()  :  gdbtypes.c
<item>mdebug_build_psymtabs()  :  mdebugread.c
<item>mdebug_psymtab_to_symtab()  :  mdebugread.c
<item>mem_info_command()  :  memattr.c
<item>output_command()  :  printcmd.c
<item>pascal_val_print()  :  p-valprint.c
<item>print_frame_info()  :  stack.c
<item>print_sys_errmsg()  :  utils.c
<item>print_type_scalar()  :  typeprint.c
<item>proceed()  :  infrun.c
<item>psymtab_to_symtab_1()  :  mdebugread.c
<item>putpkt_binary()  :  remote.c
<item>query()  :  utils.c
<item>read_actions()  :  tracepoint.c
<item>remote_console_output()  :  remote.c
<item>remote_fileio_func_write()  :  remote-fileio.c
<item>scm_val_print()  :  scm-valprint.c
<item>serial_log_command()  :  serial.c
<item>serial_readchar()  :  serial.c
<item>serial_write()  :  serial.c
<item>slide_objfile()  :  objfiles.c
<item>stop_sig()  :  top.c
<item>symbol_file_add_with_addrs_or_offsets_using_objfile()  :  symfile.c
<item>val_print()  :  valprint.c
<item>val_print_string()  :  valprint.c
<item>varobj_lookup_struct_elt_type_by_index()  :  varobj.c
<item>vcomplaint()  :  complaints.c
<item>vwarning()  :  utils.c
</itemize>
</descrip>

<sect1>Global Function gdb_fopen()

<p><tt>struct ui_file* gdb_fopen ( const char* name, const char* mode )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>ui-file.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>stdio_file_new()  :  ui-file.c
<item>fopen()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>maintenance_print_architecture()  :  maint.c
<item>maintenance_print_dummy_frames()  :  dummy-frame.c
<item>maintenance_print_msymbols()  :  symmisc.c
<item>maintenance_print_psymbols()  :  symmisc.c
<item>maintenance_print_reggroups()  :  reggroups.c
<item>maintenance_print_symbols()  :  symmisc.c
<item>regcache_print()  :  regcache.c
<item>save_breakpoints_command()  :  breakpoint.c
<item>serial_open()  :  serial.c
</itemize>
</descrip>

<sect1>Global Function mem_file_write()

<p><tt>void mem_file_write ( struct ui_file* file, const char* buffer, long length_buffer )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
<item>ui_file_data()  :  ui-file.c
<item>xmalloc()  :  utils.c
<item>xrealloc()  :  utils.c
<item>__builtin___memcpy_chk(), __builtin_object_size(), __inline_memcpy_chk()
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>mem_file_magic  :  ui-file.c
</itemize>
</descrip>

<sect1>Global Function mem_fileopen()

<p><tt>struct ui_file* mem_fileopen ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>ui-file.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>mem_file_new()  :  ui-file.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>ada_print_floating()  :  ada-valprint.c
<item>c_value_of_variable()  :  varobj.c
<item>cplusplus_error()  :  linespec.c
<item>delete_breakpoint()  :  breakpoint.c
<item>insert_breakpoints()  :  breakpoint.c
<item>memory_error()  :  corefile.c
<item>type_sprint()  :  typeprint.c
<item>ui_out_stream_new()  :  ui-out.c
<item>verify_gdbarch()  :  gdbarch.c
</itemize>
</descrip>

<sect1>Global Function set_ui_file_data()

<p><tt>void set_ui_file_data ( struct ui_file* file, void* data, ui_file_delete_ftype* deletef )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>ui-file.h
</itemize>
<tag>Called by:</tag>
<itemize>
<item>mem_file_new()  :  ui-file.c
<item>stdio_file_new()  :  ui-file.c
<item>tee_file_new()  :  ui-file.c
<item>ui_file_new()  :  ui-file.c
</itemize>
</descrip>

<sect1>Global Function set_ui_file_flush()

<p><tt>void set_ui_file_flush ( struct ui_file* file, ui_file_flush_ftype* flush )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>ui-file.h
</itemize>
<tag>Called by:</tag>
<itemize>
<item>stdio_file_new()  :  ui-file.c
<item>tee_file_new()  :  ui-file.c
<item>ui_file_new()  :  ui-file.c
</itemize>
</descrip>

<sect1>Global Function set_ui_file_fputs()

<p><tt>void set_ui_file_fputs ( struct ui_file* file, ui_file_fputs_ftype* fputs )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>ui-file.h
</itemize>
<tag>Called by:</tag>
<itemize>
<item>stdio_file_new()  :  ui-file.c
<item>tee_file_new()  :  ui-file.c
<item>ui_file_new()  :  ui-file.c
</itemize>
</descrip>

<sect1>Global Function set_ui_file_isatty()

<p><tt>void set_ui_file_isatty ( struct ui_file* file, ui_file_isatty_ftype* isatty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>ui-file.h
</itemize>
<tag>Called by:</tag>
<itemize>
<item>stdio_file_new()  :  ui-file.c
<item>tee_file_new()  :  ui-file.c
<item>ui_file_new()  :  ui-file.c
</itemize>
</descrip>

<sect1>Global Function set_ui_file_put()

<p><tt>void set_ui_file_put ( struct ui_file* file, ui_file_put_ftype* put )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>ui-file.h
</itemize>
<tag>Called by:</tag>
<itemize>
<item>mem_file_new()  :  ui-file.c
<item>ui_file_new()  :  ui-file.c
</itemize>
</descrip>

<sect1>Global Function set_ui_file_read()

<p><tt>void set_ui_file_read ( struct ui_file* file, ui_file_read_ftype* read )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>ui-file.h
</itemize>
<tag>Called by:</tag>
<itemize>
<item>stdio_file_new()  :  ui-file.c
<item>ui_file_new()  :  ui-file.c
</itemize>
</descrip>

<sect1>Global Function set_ui_file_rewind()

<p><tt>void set_ui_file_rewind ( struct ui_file* file, ui_file_rewind_ftype* rewind )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>ui-file.h
</itemize>
<tag>Called by:</tag>
<itemize>
<item>mem_file_new()  :  ui-file.c
<item>ui_file_new()  :  ui-file.c
</itemize>
</descrip>

<sect1>Global Function set_ui_file_write()

<p><tt>void set_ui_file_write ( struct ui_file* file, ui_file_write_ftype* write )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>ui-file.h
</itemize>
<tag>Called by:</tag>
<itemize>
<item>mem_file_new()  :  ui-file.c
<item>stdio_file_new()  :  ui-file.c
<item>tee_file_new()  :  ui-file.c
<item>ui_file_new()  :  ui-file.c
</itemize>
</descrip>

<sect1>Global Function stdio_fileopen()

<p><tt>struct ui_file* stdio_fileopen ( FILE* file )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>ui-file.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>stdio_file_new()  :  ui-file.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>captured_main()  :  main.c
<item>gdb_setup_readline()  :  event-top.c
</itemize>
</descrip>

<sect1>Global Function tee_file_new()

<p><tt>struct ui_file* tee_file_new ( struct ui_file* one, int close_one, struct ui_file* two, int close_two )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>ui-file.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>set_ui_file_data()  :  ui-file.c
<item>set_ui_file_flush()  :  ui-file.c
<item>set_ui_file_fputs()  :  ui-file.c
<item>set_ui_file_isatty()  :  ui-file.c
<item>set_ui_file_write()  :  ui-file.c
<item>ui_file_new()  :  ui-file.c
<item>xmalloc()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>tee_file_delete  :  ui-file.c
<item>tee_file_flush  :  ui-file.c
<item>tee_file_fputs  :  ui-file.c
<item>tee_file_isatty  :  ui-file.c
<item>tee_file_magic  :  ui-file.c
<item>tee_file_write  :  ui-file.c
</itemize>
</descrip>

<sect1>Global Function ui_file_data()

<p><tt>void* ui_file_data ( struct ui_file* file )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>ui-file.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>mem_file_delete()  :  ui-file.c
<item>mem_file_put()  :  ui-file.c
<item>mem_file_rewind()  :  ui-file.c
<item>mem_file_write()  :  ui-file.c
<item>objc_setup_safe_print()  :  objc-lang.c
<item>stdio_file_delete()  :  ui-file.c
<item>stdio_file_flush()  :  ui-file.c
<item>stdio_file_fputs()  :  ui-file.c
<item>stdio_file_isatty()  :  ui-file.c
<item>stdio_file_read()  :  ui-file.c
<item>stdio_file_write()  :  ui-file.c
<item>tee_file_delete()  :  ui-file.c
<item>tee_file_flush()  :  ui-file.c
<item>tee_file_fputs()  :  ui-file.c
<item>tee_file_isatty()  :  ui-file.c
<item>tee_file_write()  :  ui-file.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>ui_file_magic  :  ui-file.c
</itemize>
</descrip>

<sect1>Global Function ui_file_delete()

<p><tt>void ui_file_delete ( struct ui_file* file )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>ui-file.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xfree()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>do_serial_close()  :  serial.c
<item>do_ui_file_delete()  :  utils.c
<item>maintenance_print_architecture()  :  maint.c
<item>maintenance_print_dummy_frames()  :  dummy-frame.c
<item>maintenance_print_reggroups()  :  reggroups.c
<item>regcache_print()  :  regcache.c
<item>safe_parse_type()  :  gdbtypes.c
<item>tee_file_delete()  :  ui-file.c
<item>ui_out_stream_delete()  :  ui-out.c
</itemize>
</descrip>

<sect1>Global Function ui_file_isatty()

<p><tt>int ui_file_isatty ( struct ui_file* file )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>ui-file.h
</itemize>
<tag>Called by:</tag>
<itemize>
<item>init_page_info()  :  utils.c
</itemize>
</descrip>

<sect1>Global Function ui_file_new()

<p><tt>struct ui_file* ui_file_new ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>ui-file.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>set_ui_file_data()  :  ui-file.c
<item>set_ui_file_flush()  :  ui-file.c
<item>set_ui_file_fputs()  :  ui-file.c
<item>set_ui_file_isatty()  :  ui-file.c
<item>set_ui_file_put()  :  ui-file.c
<item>set_ui_file_read()  :  ui-file.c
<item>set_ui_file_rewind()  :  ui-file.c
<item>set_ui_file_write()  :  ui-file.c
<item>xmalloc()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>captured_main()  :  main.c
<item>mem_file_new()  :  ui-file.c
<item>safe_parse_type()  :  gdbtypes.c
<item>safe_value_objc_target_type()  :  wrapper.c
<item>safe_value_rtti_target_type()  :  varobj.c
<item>stdio_file_new()  :  ui-file.c
<item>tee_file_new()  :  ui-file.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>null_file_delete  :  ui-file.c
<item>null_file_flush  :  ui-file.c
<item>null_file_fputs  :  ui-file.c
<item>null_file_isatty  :  ui-file.c
<item>null_file_put  :  ui-file.c
<item>null_file_read  :  ui-file.c
<item>null_file_rewind  :  ui-file.c
<item>null_file_write  :  ui-file.c
<item>ui_file_magic  :  ui-file.c
</itemize>
</descrip>

<sect1>Global Function ui_file_put()

<p><tt>void ui_file_put ( struct ui_file* file, ui_file_put_method_ftype* write, void* dest )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>ui-file.h
</itemize>
<tag>Called by:</tag>
<itemize>
<item>ada_print_floating()  :  ada-valprint.c
<item>insert_breakpoints()  :  breakpoint.c
<item>ui_file_xstrdup()  :  ui-file.c
</itemize>
</descrip>

<sect1>Global Function ui_file_read()

<p><tt>long ui_file_read ( struct ui_file* file, char* buf, long length_buf )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>ui-file.h
</itemize>
<tag>Called by:</tag>
<itemize>
<item>remote_fileio_func_read()  :  remote-fileio.c
</itemize>
</descrip>

<sect1>Global Function ui_file_rewind()

<p><tt>void ui_file_rewind ( struct ui_file* file )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>ui-file.h
</itemize>
<tag>Called by:</tag>
<itemize>
<item>do_restore_output()  :  utils.c
<item>dump_insns()  :  disasm.c
<item>gdb_print_insn()  :  disasm.c
<item>objc_setup_safe_print()  :  objc-lang.c
<item>read_objc_object()  :  objc-lang.c
<item>ui_out_field_stream()  :  ui-out.c
</itemize>
</descrip>

<sect1>Global Function ui_file_write()

<p><tt>void ui_file_write ( struct ui_file* file, const char* buf, long length_buf )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>ui-file.h
</itemize>
<tag>Called by:</tag>
<itemize>
<item>fputc_unfiltered()  :  utils.c
<item>putchar_unfiltered()  :  utils.c
<item>remote_fileio_func_write()  :  remote-fileio.c
<item>tee_file_write()  :  ui-file.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>insert_breakpoints()  :  breakpoint.c
</itemize>
</descrip>

<sect1>Global Function ui_file_xstrdup()

<p><tt>char* ui_file_xstrdup ( struct ui_file* file, long* length )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>ui-file.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>ui_file_put()  :  ui-file.c
<item>xstrdup()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>c_value_of_variable()  :  varobj.c
<item>error_stream()  :  utils.c
<item>type_sprint()  :  typeprint.c
<item>ui_out_field_stream()  :  ui-out.c
<item>verify_gdbarch()  :  gdbarch.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>do_ui_file_xstrdup()  :  ui-file.c
</itemize>
</descrip>

<sect1>Local Function do_ui_file_xstrdup()

<p><tt>static void do_ui_file_xstrdup ( void* context, const char* buffer, long length )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>xmalloc()  :  utils.c
<item>xrealloc()  :  utils.c
<item>__builtin___memcpy_chk(), __builtin_object_size(), __inline_memcpy_chk()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>ui_file_xstrdup()  :  ui-file.c
</itemize>
</descrip>

<sect1>Local Function mem_file_delete()

<p><tt>static void mem_file_delete ( struct ui_file* file )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
<item>ui_file_data()  :  ui-file.c
<item>xfree()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>mem_file_magic  :  ui-file.c
</itemize>
</descrip>

<sect1>Local Function mem_file_new()

<p><tt>static struct ui_file* mem_file_new ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>ui-file.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>set_ui_file_data()  :  ui-file.c
<item>set_ui_file_put()  :  ui-file.c
<item>set_ui_file_rewind()  :  ui-file.c
<item>set_ui_file_write()  :  ui-file.c
<item>ui_file_new()  :  ui-file.c
<item>xmalloc()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>mem_fileopen()  :  ui-file.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>mem_file_delete  :  ui-file.c
<item>mem_file_magic  :  ui-file.c
<item>mem_file_put  :  ui-file.c
<item>mem_file_rewind  :  ui-file.c
<item>mem_file_write  :  ui-file.c
</itemize>
</descrip>

<sect1>Local Function mem_file_put()

<p><tt>static void mem_file_put ( struct ui_file* file, ui_file_put_method_ftype* write, void* dest )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
<item>ui_file_data()  :  ui-file.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>mem_file_magic  :  ui-file.c
</itemize>
</descrip>

<sect1>Local Function mem_file_rewind()

<p><tt>static void mem_file_rewind ( struct ui_file* file )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
<item>ui_file_data()  :  ui-file.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>mem_file_magic  :  ui-file.c
</itemize>
</descrip>

<sect1>Local Function null_file_delete()

<p><tt>static void null_file_delete ( struct ui_file* file )</tt><newline>

<sect1>Local Function null_file_flush()

<p><tt>static void null_file_flush ( struct ui_file* file )</tt><newline>

<sect1>Local Function null_file_fputs()

<p><tt>static void null_file_fputs ( const char* buf, struct ui_file* file )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>strlen()
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>null_file_write  :  ui-file.c
</itemize>
</descrip>

<sect1>Local Function null_file_isatty()

<p><tt>static int null_file_isatty ( struct ui_file* file )</tt><newline>

<sect1>Local Function null_file_put()

<p><tt>static void null_file_put ( struct ui_file* file, ui_file_put_method_ftype* write, void* dest )</tt><newline>

<sect1>Local Function null_file_read()

<p><tt>static long null_file_read ( struct ui_file* file, char* buf, long sizeof_buf )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>__error()
</itemize>
</descrip>

<sect1>Local Function null_file_rewind()

<p><tt>static void null_file_rewind ( struct ui_file* file )</tt><newline>

<sect1>Local Function null_file_write()

<p><tt>static void null_file_write ( struct ui_file* file, const char* buf, long sizeof_buf )</tt><newline>
<descrip>
<tag>References Variables:</tag>
<itemize>
<item>null_file_fputs  :  ui-file.c
</itemize>
</descrip>

<sect1>Local Function stdio_file_delete()

<p><tt>static void stdio_file_delete ( struct ui_file* file )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
<item>ui_file_data()  :  ui-file.c
<item>xfree()  :  utils.c
<item>fclose()
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>stdio_file_magic  :  ui-file.c
</itemize>
</descrip>

<sect1>Local Function stdio_file_flush()

<p><tt>static void stdio_file_flush ( struct ui_file* file )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
<item>ui_file_data()  :  ui-file.c
<item>fflush()
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>stdio_file_magic  :  ui-file.c
</itemize>
</descrip>

<sect1>Local Function stdio_file_fputs()

<p><tt>static void stdio_file_fputs ( const char* linebuffer, struct ui_file* file )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
<item>ui_file_data()  :  ui-file.c
<item>fputs()
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>stdio_file_magic  :  ui-file.c
</itemize>
</descrip>

<sect1>Local Function stdio_file_isatty()

<p><tt>static int stdio_file_isatty ( struct ui_file* file )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
<item>ui_file_data()  :  ui-file.c
<item>fileno(), isatty()
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>stdio_file_magic  :  ui-file.c
</itemize>
</descrip>

<sect1>Local Function stdio_file_new()

<p><tt>static struct ui_file* stdio_file_new ( FILE* file, int close_p )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>ui-file.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>set_ui_file_data()  :  ui-file.c
<item>set_ui_file_flush()  :  ui-file.c
<item>set_ui_file_fputs()  :  ui-file.c
<item>set_ui_file_isatty()  :  ui-file.c
<item>set_ui_file_read()  :  ui-file.c
<item>set_ui_file_write()  :  ui-file.c
<item>ui_file_new()  :  ui-file.c
<item>xmalloc()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>gdb_fopen()  :  ui-file.c
<item>stdio_fileopen()  :  ui-file.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>stdio_file_delete  :  ui-file.c
<item>stdio_file_flush  :  ui-file.c
<item>stdio_file_fputs  :  ui-file.c
<item>stdio_file_isatty  :  ui-file.c
<item>stdio_file_magic  :  ui-file.c
<item>stdio_file_read  :  ui-file.c
<item>stdio_file_write  :  ui-file.c
</itemize>
</descrip>

<sect1>Local Function stdio_file_read()

<p><tt>static long stdio_file_read ( struct ui_file* file, char* buf, long length_buf )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
<item>ui_file_data()  :  ui-file.c
<item>fileno(), read()
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>stdio_file_magic  :  ui-file.c
</itemize>
</descrip>

<sect1>Local Function stdio_file_write()

<p><tt>static void stdio_file_write ( struct ui_file* file, const char* buf, long length_buf )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
<item>ui_file_data()  :  ui-file.c
<item>fwrite()
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>stdio_file_magic  :  ui-file.c
</itemize>
</descrip>

<sect1>Local Function tee_file_delete()

<p><tt>static void tee_file_delete ( struct ui_file* file )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
<item>ui_file_data()  :  ui-file.c
<item>ui_file_delete()  :  ui-file.c
<item>xfree()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>tee_file_magic  :  ui-file.c
</itemize>
</descrip>

<sect1>Local Function tee_file_flush()

<p><tt>static void tee_file_flush ( struct ui_file* file )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
<item>ui_file_data()  :  ui-file.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>tee_file_magic  :  ui-file.c
</itemize>
</descrip>

<sect1>Local Function tee_file_fputs()

<p><tt>static void tee_file_fputs ( const char* linebuffer, struct ui_file* file )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
<item>ui_file_data()  :  ui-file.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>tee_file_magic  :  ui-file.c
</itemize>
</descrip>

<sect1>Local Function tee_file_isatty()

<p><tt>static int tee_file_isatty ( struct ui_file* file )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
<item>ui_file_data()  :  ui-file.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>tee_file_magic  :  ui-file.c
</itemize>
</descrip>

<sect1>Local Function tee_file_write()

<p><tt>static void tee_file_write ( struct ui_file* file, const char* buf, long length_buf )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
<item>ui_file_data()  :  ui-file.c
<item>ui_file_write()  :  ui-file.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>tee_file_magic  :  ui-file.c
</itemize>
</descrip>

</article>
