<!DOCTYPE LINUXDOC SYSTEM>

<!-- This SGML file generated by cxref (version 1.6e). -->
<!-- cxref program (c) Andrew M. Bishop 1995-2014. -->

<!--
Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF symmisc.c
CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
-->

<article>

<title>Cross reference for symmisc.c of gdb.cxref.
<author>cxref

<sect>File symmisc.c

<sect1>Included Files

<p>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<itemize>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
<item><tt>#include &lt;sys/time.h&gt;</tt>
<item><tt>#include &lt;time.h&gt;</tt>
<item><tt>#include &lt;sys/types.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
<item><tt>#include &lt;errno.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
<item><tt>#include &lt;regex.h&gt;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;unistd.h&gt;</tt>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;gdb_locale.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<item><tt>#include &lt;locale.h&gt;</tt>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../gdb/signals.h&quot;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &quot;../include/libiberty.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/symcat.h&quot;</tt>
</itemize>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
<item><tt>#include &quot;ui-file.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;xm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/xm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &lt;mach/mach.h&gt;</tt>
<item><tt>#include &lt;signal.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;nm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/i386/nm-i386.h&quot;</tt>
<item><tt>#include &quot;macosx/nm-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;tm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/tm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;macosx/i386-macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/i386-macosx-thread-status.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &lt;mach/mach_types.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
<item><tt>#include &lt;inttypes.h&gt;</tt>
<item><tt>#include &lt;mach/mach_vm.h&gt;</tt>
<item><tt>#include &lt;mach/kmod.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;macosx/tm-i386-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;../include/fopen-bin.h&quot;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdlib.h&gt;</tt>
<item><tt>#include &quot;gdbarch.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdbtypes.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;symfile.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;symtab.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;objfiles.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &lt;uuid/uuid.h&gt;</tt>
<item><tt>#include &quot;gdb_obstack.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/obstack.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;symfile.h&quot;</tt>
<item><tt>#include &quot;inlining.h&quot;</tt>
<itemize>
<item><tt>#include &lt;block.h&gt;</tt>
<item><tt>#include &quot;frame.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/floatformat.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;gdb_regex.h&quot;</tt>
<itemize>
<item><tt>#include &lt;regex.h&gt;</tt>
</itemize>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;gdbtypes.h&quot;</tt>
<item><tt>#include &quot;expression.h&quot;</tt>
<itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
</itemize>
</itemize>
</itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
</itemize>
<item><tt>#include &lt;sqlite3.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;breakpoint.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
<item><tt>#include &quot;gdb-events.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;command.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_obstack.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;exceptions.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;ui-out.h&quot;</tt>
<item><tt>#include &lt;setjmp.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;language.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;bcache.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;../include/demangle.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/libiberty.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;block.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_regex.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_stat.h&quot;</tt>
<itemize>
<item><tt>#include &lt;sys/types.h&gt;</tt>
<item><tt>#include &lt;sys/stat.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;dictionary.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_assert.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_string.h&quot;</tt>
<itemize>
<item><tt>#include &lt;string.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;../readline/readline.h&quot;</tt>
<itemize>
<item><tt>#include &lt;../readline/rlstdc.h&gt;</tt>
<item><tt>#include &lt;../readline/rltypedefs.h&gt;</tt>
<item><tt>#include &lt;../readline/keymaps.h&gt;</tt>
<item><tt>#include &lt;../readline/tilde.h&gt;</tt>
</itemize>
</itemize>

<sect1>Preprocessor definitions

<p>
<tt>#define DEV_TTY &quot;/dev/tty&quot;</tt><newline>
<p>
<tt>#define EQUIVALENCE_HASH_SIZE 127</tt><newline>

<sect1>Type struct print_symbol_args

<p>
<itemize>
<item><tt>struct print_symbol_args</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>struct symbol* symbol;</tt><newline>
<item><tt>int depth;</tt><newline>
<item><tt>struct ui_file* outfile;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Type struct equivalence_entry

<p>
<itemize>
<item><tt>struct equivalence_entry</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>char* name;</tt><newline>
<item><tt>struct minimal_symbol* msymbol;</tt><newline>
<item><tt>struct equivalence_entry* next;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Global Variable std_in

<p>
<tt>FILE* std_in</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>symmisc.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_symmisc()  :  symmisc.c
</itemize>
</descrip>

<sect1>Global Variable std_out

<p>
<tt>FILE* std_out</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>symmisc.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_symmisc()  :  symmisc.c
</itemize>
</descrip>

<sect1>Global Variable std_err

<p>
<tt>FILE* std_err</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>symmisc.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_symmisc()  :  symmisc.c
</itemize>
</descrip>

<sect1>Global Function _initialize_symmisc()

<p><tt>void _initialize_symmisc ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symmisc.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>std_err  :  symmisc.c
<item>std_in  :  symmisc.c
<item>std_out  :  symmisc.c
</itemize>
</descrip>

<sect1>Global Function equivalence_table_add()

<p><tt>void equivalence_table_add ( struct objfile* ofile, const char* name, const char* name_end, struct minimal_symbol* msymbol )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
<item>msymbol_hash()  :  minsyms.c
<item>xmalloc()  :  utils.c
<item>__builtin___memcpy_chk(), __builtin_object_size(), __inline_memcpy_chk()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>equivalence_table_build()  :  symmisc.c
</itemize>
</descrip>

<sect1>Global Function equivalence_table_build()

<p><tt>void equivalence_table_build ( struct objfile* ofile )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>equivalence_table_add()  :  symmisc.c
<item>equivalence_table_delete()  :  symmisc.c
<item>equivalence_table_initialize()  :  symmisc.c
<item>isdigit(), isupper(), strchr()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>install_minimal_symbols()  :  minsyms.c
<item>msymbols_sort()  :  minsyms.c
</itemize>
</descrip>

<sect1>Global Function equivalence_table_delete()

<p><tt>void equivalence_table_delete ( struct objfile* ofile )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xfree()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>equivalence_table_build()  :  symmisc.c
<item>free_objfile_internal()  :  objfiles.c
<item>msymbols_sort()  :  minsyms.c
<item>reread_symbols_for_objfile()  :  symfile.c
</itemize>
</descrip>

<sect1>Global Function extend_psymbol_list()

<p><tt>void extend_psymbol_list ( struct psymbol_allocation_list* listp, struct objfile* objfile )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symfile.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xmalloc()  :  utils.c
<item>xrealloc()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>add_psymbol_to_list()  :  symfile.c
<item>add_psymbol_with_dem_name_to_list()  :  symfile.c
</itemize>
</descrip>

<sect1>Global Function find_equivalent_msymbol()

<p><tt>struct minimal_symbol** find_equivalent_msymbol ( struct minimal_symbol* msymbol )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>find_pc_sect_section()  :  objfiles.c
<item>msymbol_hash()  :  minsyms.c
<item>xcalloc()  :  utils.c
<item>xfree()  :  utils.c
<item>strcmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>minsym_found()  :  linespec.c
<item>minsyms_found()  :  linespec.c
</itemize>
</descrip>

<sect1>Global Function free_symtab()

<p><tt>void free_symtab ( struct symtab* s )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>free_symtab_block()  :  symmisc.c
<item>xfree()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>java_rerun_cleanup()  :  jv-lang.c
</itemize>
</descrip>

<sect1>Global Function maintenance_check_symtabs()

<p><tt>void maintenance_check_symtabs ( const char* ignore, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>block_contains_pc()  :  block.c
<item>deprecated_print_address_numeric()  :  printcmd.c
<item>lookup_block_symbol()  :  symtab.c
<item>objfile_get_first()  :  objfiles.c
<item>objfile_get_next()  :  objfiles.c
<item>printf_filtered()  :  utils.c
<item>psymtab_get_first()  :  objfiles.c
<item>psymtab_get_next()  :  objfiles.c
<item>psymtab_to_symtab()  :  symfile.c
<item>puts_filtered()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_maint_cmds()  :  maint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdout  :  main.c
</itemize>
</descrip>

<sect1>Global Function maintenance_info_psymtabs()

<p><tt>void maintenance_info_psymtabs ( const char* regexp, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>deprecated_print_address_numeric()  :  printcmd.c
<item>objfile_get_first()  :  objfiles.c
<item>objfile_get_next()  :  objfiles.c
<item>printf_filtered()  :  utils.c
<item>psymtab_get_first()  :  objfiles.c
<item>psymtab_get_next()  :  objfiles.c
<item>re_comp()  :  utils.c
<item>re_exec()  :  utils.c
<item>wrap_here()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_maint_cmds()  :  maint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdout  :  main.c
</itemize>
</descrip>

<sect1>Global Function maintenance_info_symtabs()

<p><tt>void maintenance_info_symtabs ( const char* regexp, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>objfile_get_first()  :  objfiles.c
<item>objfile_get_next()  :  objfiles.c
<item>printf_filtered()  :  utils.c
<item>re_comp()  :  utils.c
<item>re_exec()  :  utils.c
<item>symtab_get_first()  :  objfiles.c
<item>symtab_get_next()  :  objfiles.c
<item>wrap_here()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_maint_cmds()  :  maint.c
</itemize>
</descrip>

<sect1>Global Function maintenance_print_msymbols()

<p><tt>void maintenance_print_msymbols ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>do_cleanups()  :  utils.c
<item>dont_repeat()  :  top.c
<item>dump_msymbols()  :  symmisc.c
<item>error()  :  utils.c
<item>fprintf_filtered()  :  utils.c
<item>gdb_fopen()  :  ui-file.c
<item>make_cleanup()  :  utils.c
<item>make_cleanup_freeargv()  :  utils.c
<item>make_cleanup_ui_file_delete()  :  utils.c
<item>nomem()  :  utils.c
<item>objfile_get_first()  :  objfiles.c
<item>objfile_get_next()  :  objfiles.c
<item>perror_with_name()  :  utils.c
<item>xfullpath()  :  utils.c
<item>buildargv(), stat(), tilde_expand()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_maint_cmds()  :  maint.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>xfree()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>immediate_quit  :  utils.c
</itemize>
</descrip>

<sect1>Global Function maintenance_print_objfiles()

<p><tt>void maintenance_print_objfiles ( const char* ignore, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>dont_repeat()  :  top.c
<item>dump_objfile()  :  symmisc.c
<item>objfile_get_first()  :  objfiles.c
<item>objfile_get_next()  :  objfiles.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_maint_cmds()  :  maint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>immediate_quit  :  utils.c
</itemize>
</descrip>

<sect1>Global Function maintenance_print_psymbols()

<p><tt>void maintenance_print_psymbols ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>do_cleanups()  :  utils.c
<item>dont_repeat()  :  top.c
<item>dump_psymtab()  :  symmisc.c
<item>error()  :  utils.c
<item>gdb_fopen()  :  ui-file.c
<item>make_cleanup()  :  utils.c
<item>make_cleanup_freeargv()  :  utils.c
<item>make_cleanup_ui_file_delete()  :  utils.c
<item>nomem()  :  utils.c
<item>objfile_get_first()  :  objfiles.c
<item>objfile_get_next()  :  objfiles.c
<item>perror_with_name()  :  utils.c
<item>psymtab_get_first()  :  objfiles.c
<item>psymtab_get_next()  :  objfiles.c
<item>buildargv(), strcmp(), tilde_expand()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_maint_cmds()  :  maint.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>xfree()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>immediate_quit  :  utils.c
</itemize>
</descrip>

<sect1>Global Function maintenance_print_symbols()

<p><tt>void maintenance_print_symbols ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>do_cleanups()  :  utils.c
<item>dont_repeat()  :  top.c
<item>dump_symtab()  :  symmisc.c
<item>error()  :  utils.c
<item>gdb_fopen()  :  ui-file.c
<item>make_cleanup()  :  utils.c
<item>make_cleanup_freeargv()  :  utils.c
<item>make_cleanup_ui_file_delete()  :  utils.c
<item>nomem()  :  utils.c
<item>objfile_get_first()  :  objfiles.c
<item>objfile_get_next()  :  objfiles.c
<item>perror_with_name()  :  utils.c
<item>symtab_get_first()  :  objfiles.c
<item>symtab_get_next()  :  objfiles.c
<item>buildargv(), strcmp(), tilde_expand()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_maint_cmds()  :  maint.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>xfree()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>immediate_quit  :  utils.c
</itemize>
</descrip>

<sect1>Global Function print_objfile_statistics()

<p><tt>void print_objfile_statistics ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>objfiles.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>bcache_memory_used()  :  bcache.c
<item>objfile_get_first()  :  objfiles.c
<item>objfile_get_next()  :  objfiles.c
<item>printf_filtered()  :  utils.c
<item>psymtab_get_first()  :  objfiles.c
<item>psymtab_get_next()  :  objfiles.c
<item>symtab_get_first()  :  objfiles.c
<item>symtab_get_next()  :  objfiles.c
<item>_obstack_memory_used()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>maintenance_print_statistics()  :  maint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>immediate_quit  :  utils.c
</itemize>
</descrip>

<sect1>Global Function print_symbol_bcache_statistics()

<p><tt>void print_symbol_bcache_statistics ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>objfiles.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>objfile_get_first()  :  objfiles.c
<item>objfile_get_next()  :  objfiles.c
<item>print_bcache_statistics()  :  bcache.c
<item>printf_filtered()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>maintenance_print_statistics()  :  maint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>immediate_quit  :  utils.c
</itemize>
</descrip>

<sect1>Local Function block_depth()

<p><tt>static int block_depth ( struct block* block )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symmisc.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>dump_symtab_1()  :  symmisc.c
</itemize>
</descrip>

<sect1>Local Function dump_msymbols()

<p><tt>static void dump_msymbols ( struct objfile* objfile, struct ui_file* outfile )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symmisc.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>deprecated_print_address_numeric()  :  printcmd.c
<item>fprintf_filtered()  :  utils.c
<item>fputs_filtered()  :  utils.c
<item>symbol_demangled_name()  :  symtab.c
<item>warning()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>maintenance_print_msymbols()  :  symmisc.c
</itemize>
</descrip>

<sect1>Local Function dump_objfile()

<p><tt>static void dump_objfile ( struct objfile* objfile )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symmisc.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>gdb_print_host_address()  :  utils.c
<item>paddr_nz()  :  utils.c
<item>printf_filtered()  :  utils.c
<item>psymtab_get_first()  :  objfiles.c
<item>psymtab_get_next()  :  objfiles.c
<item>symtab_get_first()  :  objfiles.c
<item>symtab_get_next()  :  objfiles.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>maintenance_print_objfiles()  :  symmisc.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdout  :  main.c
</itemize>
</descrip>

<sect1>Local Function dump_psymtab()

<p><tt>static void dump_psymtab ( struct objfile* objfile, struct partial_symtab* psymtab, struct ui_file* outfile )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symmisc.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>deprecated_print_address_numeric()  :  printcmd.c
<item>fprintf_filtered()  :  utils.c
<item>fprintf_unfiltered()  :  utils.c
<item>gdb_print_host_address()  :  utils.c
<item>internal_error()  :  utils.c
<item>print_partial_symbols()  :  symmisc.c
<item>wrap_here()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>maintenance_print_psymbols()  :  symmisc.c
</itemize>
</descrip>

<sect1>Local Function dump_symtab()

<p><tt>static void dump_symtab ( struct objfile* objfile, struct symtab* symtab, struct ui_file* outfile )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symmisc.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>dump_symtab_1()  :  symmisc.c
<item>set_language()  :  language.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>maintenance_print_symbols()  :  symmisc.c
</itemize>
</descrip>

<sect1>Local Function dump_symtab_1()

<p><tt>static void dump_symtab_1 ( struct objfile* objfile, struct symtab* symtab, struct ui_file* outfile )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>block_depth()  :  symmisc.c
<item>deprecated_print_address_numeric()  :  printcmd.c
<item>dict_iterator_first()  :  dictionary.c
<item>dict_iterator_next()  :  dictionary.c
<item>dict_size()  :  dictionary.c
<item>fprintf_filtered()  :  utils.c
<item>gdb_print_host_address()  :  utils.c
<item>language_str()  :  language.c
<item>print_spaces()  :  utils.c
<item>symbol_demangled_name()  :  symtab.c
<item>catch_errors()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>dump_symtab()  :  symmisc.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>print_symbol()  :  symmisc.c
</itemize>
</descrip>

<sect1>Local Function equivalence_table_initialize()

<p><tt>static void equivalence_table_initialize ( struct objfile* ofile )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>xcalloc()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>equivalence_table_build()  :  symmisc.c
</itemize>
</descrip>

<sect1>Local Function free_symtab_block()

<p><tt>static void free_symtab_block ( struct objfile* objfile, struct block* b )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symmisc.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>dict_free()  :  dictionary.c
<item>dict_iterator_first()  :  dictionary.c
<item>dict_iterator_next()  :  dictionary.c
<item>xfree()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>free_symtab()  :  symmisc.c
</itemize>
</descrip>

<sect1>Local Function print_partial_symbols()

<p><tt>static void print_partial_symbols ( struct partial_symbol** p, int count, const char* what, struct ui_file* outfile )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symmisc.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>deprecated_print_address_numeric()  :  printcmd.c
<item>fprintf_filtered()  :  utils.c
<item>fputs_filtered()  :  utils.c
<item>symbol_demangled_name()  :  symtab.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>dump_psymtab()  :  symmisc.c
</itemize>
</descrip>

<sect1>Local Function print_symbol()

<p><tt>static int print_symbol ( void* args )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symmisc.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>check_typedef()  :  gdbtypes.c
<item>deprecated_print_address_numeric()  :  printcmd.c
<item>fprintf_filtered()  :  utils.c
<item>gdb_print_host_address()  :  utils.c
<item>objc_fixup_class_length()  :  objc-lang.c
<item>paddr_nz()  :  utils.c
<item>print_spaces()  :  utils.c
<item>symbol_natural_name()  :  symtab.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>dump_symtab_1()  :  symmisc.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_language  :  language.c
<item>demangle  :  utils.c
</itemize>
</descrip>

</article>
