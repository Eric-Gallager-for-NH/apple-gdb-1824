<!DOCTYPE LINUXDOC SYSTEM>

<!-- This SGML file generated by cxref (version 1.6e). -->
<!-- cxref program (c) Andrew M. Bishop 1995-2014. -->

<!--
Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF macrocmd.c
CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
-->

<article>

<title>Cross reference for macrocmd.c of gdb.cxref.
<author>cxref

<sect>File macrocmd.c

<sect1>Included Files

<p>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<itemize>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
<item><tt>#include &lt;sys/time.h&gt;</tt>
<item><tt>#include &lt;time.h&gt;</tt>
<item><tt>#include &lt;sys/types.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
<item><tt>#include &lt;errno.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
<item><tt>#include &lt;regex.h&gt;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;unistd.h&gt;</tt>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;gdb_locale.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<item><tt>#include &lt;locale.h&gt;</tt>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../gdb/signals.h&quot;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &quot;../include/libiberty.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/symcat.h&quot;</tt>
</itemize>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
<item><tt>#include &quot;ui-file.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;xm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/xm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &lt;mach/mach.h&gt;</tt>
<item><tt>#include &lt;signal.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;nm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/i386/nm-i386.h&quot;</tt>
<item><tt>#include &quot;macosx/nm-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;tm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/tm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;macosx/i386-macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/i386-macosx-thread-status.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &lt;mach/mach_types.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
<item><tt>#include &lt;inttypes.h&gt;</tt>
<item><tt>#include &lt;mach/mach_vm.h&gt;</tt>
<item><tt>#include &lt;mach/kmod.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;macosx/tm-i386-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;../include/fopen-bin.h&quot;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdlib.h&gt;</tt>
<item><tt>#include &quot;gdbarch.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;macrotab.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;macroexp.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;macroscope.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macrotab.h&quot;</tt>
<item><tt>#include &quot;symtab.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;command.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;gdbcmd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;command.h&quot;</tt>
<item><tt>#include &quot;ui-out.h&quot;</tt>
</itemize>
</itemize>

<sect1>Local Variables

<p>
<bf>macrolist</bf><newline>
<tt>static struct cmd_list_element* macrolist</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>_initialize_macrocmd()
<item>macro_command()
</itemize>
</descrip>
<p>
<bf>user_macros</bf><newline>
<tt>static struct macro_table* user_macros</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>_initialize_macrocmd()
</itemize>
</descrip>

<sect1>Global Function _initialize_macrocmd()

<p><tt>void _initialize_macrocmd ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>macrocmd.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>new_macro_table()  :  macrotab.c
<item>add_alias_cmd(), add_cmd(), add_prefix_cmd()
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>info_macro_command()  :  macrocmd.c
<item>macro_command()  :  macrocmd.c
<item>macro_define_command()  :  macrocmd.c
<item>macro_expand_command()  :  macrocmd.c
<item>macro_expand_once_command()  :  macrocmd.c
<item>macro_list_command()  :  macrocmd.c
<item>macro_undef_command()  :  macrocmd.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>macrolist  :  macrocmd.c
<item>user_macros  :  macrocmd.c
<item>cmdlist, infolist
</itemize>
</descrip>

<sect1>Local Function info_macro_command()

<p><tt>static void info_macro_command ( const char* name, int from_tty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>default_macro_scope()  :  macroscope.c
<item>do_cleanups()  :  utils.c
<item>error()  :  utils.c
<item>fprintf_filtered()  :  utils.c
<item>fputs_filtered()  :  utils.c
<item>macro_definition_location()  :  macrotab.c
<item>macro_lookup_definition()  :  macrotab.c
<item>make_cleanup()  :  utils.c
<item>show_pp_source_pos()  :  macrocmd.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_macrocmd()  :  macrocmd.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>free_current_contents()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdout  :  main.c
</itemize>
</descrip>

<sect1>Local Function macro_command()

<p><tt>static void macro_command ( const char* arg, int from_tty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>printf_unfiltered()  :  utils.c
<item>help_list()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_macrocmd()  :  macrocmd.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdout  :  main.c
<item>macrolist  :  macrocmd.c
</itemize>
</descrip>

<sect1>Local Function macro_define_command()

<p><tt>static void macro_define_command ( const char* exp, int from_tty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_macrocmd()  :  macrocmd.c
</itemize>
</descrip>

<sect1>Local Function macro_expand_command()

<p><tt>static void macro_expand_command ( const char* exp, int from_tty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>default_macro_scope()  :  macroscope.c
<item>do_cleanups()  :  utils.c
<item>error()  :  utils.c
<item>fputs_filtered()  :  utils.c
<item>macro_expand()  :  macroexp.c
<item>make_cleanup()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_macrocmd()  :  macrocmd.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>free_current_contents()  :  utils.c
<item>standard_macro_lookup()  :  macroscope.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdout  :  main.c
</itemize>
</descrip>

<sect1>Local Function macro_expand_once_command()

<p><tt>static void macro_expand_once_command ( const char* exp, int from_tty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>default_macro_scope()  :  macroscope.c
<item>do_cleanups()  :  utils.c
<item>error()  :  utils.c
<item>fputs_filtered()  :  utils.c
<item>macro_expand_once()  :  macroexp.c
<item>make_cleanup()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_macrocmd()  :  macrocmd.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>free_current_contents()  :  utils.c
<item>standard_macro_lookup()  :  macroscope.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdout  :  main.c
</itemize>
</descrip>

<sect1>Local Function macro_list_command()

<p><tt>static void macro_list_command ( const char* exp, int from_tty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_macrocmd()  :  macrocmd.c
</itemize>
</descrip>

<sect1>Local Function macro_undef_command()

<p><tt>static void macro_undef_command ( const char* exp, int from_tty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_macrocmd()  :  macrocmd.c
</itemize>
</descrip>

<sect1>Local Function show_pp_source_pos()

<p><tt>static void show_pp_source_pos ( struct ui_file* stream, struct macro_source_file* file, int line )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>fprintf_filtered()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>info_macro_command()  :  macrocmd.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdout  :  main.c
</itemize>
</descrip>

</article>
