{\rtf\ansi
\deff0
{\fonttbl
{\f0\froman Times New Roman;}
{\f1\fmodern Courier New;}
}
{\stylesheet
{\s0\f0\fs24 Normal;}
{\s1\f0\fs40\b\sb400\sa200\keepn\keep Heading 1;}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Heading 2;}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Heading 3;}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Heading 4;}
{\s5\f1\fs20\ql\sb50\sa50 Code;}
}
{\info{\comment
 This RTF file generated by cxref (version 1.6e).
 cxref program (c) Andrew M. Bishop 1995-2014.
 Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF ser-unix.c
 CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
}}
\paperw11880\paperh16848\margl1440\margr1440\margt1440\margb1440
\sectd\plain
\s0\f0\fs24
{\s1\f0\fs40\b\sb400\sa200\keepn\keep File ser-unix.c\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Included Files\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <errno.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <unistd.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_locale.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <locale.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../gdb/signals.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/symcat.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-file.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "xm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/xm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "nm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/i386/nm-i386.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/nm-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "tm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/tm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-tdep.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-tdep.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-thread-status.h"\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_types.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <inttypes.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_vm.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/kmod.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/tm-i386-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/fopen-bin.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdlib.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbarch.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "serial.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "ser-base.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "ser-unix.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <fcntl.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "terminal.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <fcntl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sgtty.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/ioctl.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <sys/socket.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <sys/time.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_string.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Preprocessor definitions\par}
{\s5\f1\fs20\ql\sb50\sa50 #define B19200 EXTA\par}
{\s5\f1\fs20\ql\sb50\sa50 #define B38400 EXTB\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Type definitions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct hardwire_ttystate\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct hardwire_ttystate}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct sgttyb sgttyb;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct tchars tc;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct ltchars ltc;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int lmode;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Variables\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable baudtab\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct \{...\} baudtab[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell rate_to_code()\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Functions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function _initialize_ser_hardwire()\par}
{\s5\f1\fs20\ql\sb50\sa50 void _initialize_ser_hardwire ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ser-unix.c\cell\cell\row
Calls: \cell serial_add_interface()\cell serial.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk()\cell\cell\row
Refs Func:\cell hardwire_close()\cell ser-unix.c\cell\row
\cell hardwire_drain_output()\cell ser-unix.c\cell\row
\cell hardwire_flush_input()\cell ser-unix.c\cell\row
\cell hardwire_flush_output()\cell ser-unix.c\cell\row
\cell hardwire_get_tty_state()\cell ser-unix.c\cell\row
\cell hardwire_noflush_set_tty_state()\cell ser-unix.c\cell\row
\cell hardwire_open()\cell ser-unix.c\cell\row
\cell hardwire_print_tty_state()\cell ser-unix.c\cell\row
\cell hardwire_raw()\cell ser-unix.c\cell\row
\cell hardwire_readchar()\cell ser-unix.c\cell\row
\cell hardwire_send_break()\cell ser-unix.c\cell\row
\cell hardwire_set_tty_state()\cell ser-unix.c\cell\row
\cell hardwire_setbaudrate()\cell ser-unix.c\cell\row
\cell hardwire_setstopbits()\cell ser-unix.c\cell\row
\cell ser_base_async()\cell ser-base.c\cell\row
\cell ser_base_write()\cell ser-base.c\cell\row
\cell ser_unix_read_prim()\cell ser-unix.c\cell\row
\cell ser_unix_write_prim()\cell ser-unix.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function ser_unix_read_prim()\par}
{\s5\f1\fs20\ql\sb50\sa50 int ser_unix_read_prim ( struct serial* scb, size_t count )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ser-unix.h\cell\cell\row
Calls: \cell  __error(), read()\cell\cell\row
Used in:\cell _initialize_ser_hardwire()\cell ser-unix.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function ser_unix_write_prim()\par}
{\s5\f1\fs20\ql\sb50\sa50 int ser_unix_write_prim ( struct serial* scb, const void* buf, size_t len )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ser-unix.h\cell\cell\row
Calls: \cell  write()\cell\cell\row
Used in:\cell _initialize_ser_hardwire()\cell ser-unix.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function do_hardwire_readchar()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int do_hardwire_readchar ( struct serial* scb, int timeout )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ser-unix.c\cell\cell\row
Calls: \cell wait_for()\cell ser-unix.c\cell\row
\cell  __error(), deprecated_ui_loop_hook(), read()\cell\cell\row
Used in:\cell hardwire_readchar()\cell ser-unix.c\cell\row
Refs Var:\cell deprecated_ui_loop_hook\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function get_tty_state()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int get_tty_state ( struct serial* scb, struct hardwire_ttystate* state )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ser-unix.c\cell\cell\row
Calls: \cell  ioctl()\cell\cell\row
Called by:\cell hardwire_drain_output()\cell ser-unix.c\cell\row
\cell hardwire_get_tty_state()\cell ser-unix.c\cell\row
\cell hardwire_raw()\cell ser-unix.c\cell\row
\cell hardwire_setbaudrate()\cell ser-unix.c\cell\row
\cell hardwire_setstopbits()\cell ser-unix.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function hardwire_close()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void hardwire_close ( struct serial* scb )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ser-unix.c\cell\cell\row
Calls: \cell  close()\cell\cell\row
Used in:\cell _initialize_ser_hardwire()\cell ser-unix.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function hardwire_drain_output()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int hardwire_drain_output ( struct serial* scb )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ser-unix.c\cell\cell\row
Calls: \cell get_tty_state()\cell ser-unix.c\cell\row
\cell  ioctl()\cell\cell\row
Used in:\cell _initialize_ser_hardwire()\cell ser-unix.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function hardwire_flush_input()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int hardwire_flush_input ( struct serial* scb )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ser-unix.c\cell\cell\row
Calls: \cell ser_base_flush_input()\cell ser-base.c\cell\row
\cell  ioctl()\cell\cell\row
Used in:\cell _initialize_ser_hardwire()\cell ser-unix.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function hardwire_flush_output()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int hardwire_flush_output ( struct serial* scb )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ser-unix.c\cell\cell\row
Calls: \cell  ioctl()\cell\cell\row
Used in:\cell _initialize_ser_hardwire()\cell ser-unix.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function hardwire_get_tty_state()\par}
{\s5\f1\fs20\ql\sb50\sa50 static serial_ttystate hardwire_get_tty_state ( struct serial* scb )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ser-unix.c\cell\cell\row
Calls: \cell get_tty_state()\cell ser-unix.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
Used in:\cell _initialize_ser_hardwire()\cell ser-unix.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function hardwire_noflush_set_tty_state()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int hardwire_noflush_set_tty_state ( struct serial* scb, serial_ttystate new_ttystate, serial_ttystate old_ttystate )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ser-unix.c\cell\cell\row
Calls: \cell set_tty_state()\cell ser-unix.c\cell\row
Used in:\cell _initialize_ser_hardwire()\cell ser-unix.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function hardwire_open()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int hardwire_open ( struct serial* scb, const char* name )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ser-unix.c\cell\cell\row
Calls: \cell  open()\cell\cell\row
Used in:\cell _initialize_ser_hardwire()\cell ser-unix.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function hardwire_print_tty_state()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void hardwire_print_tty_state ( struct serial* scb, serial_ttystate ttystate, struct ui_file* stream )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ser-unix.c\cell\cell\row
Calls: \cell fprintf_filtered()\cell utils.c\cell\row
Used in:\cell _initialize_ser_hardwire()\cell ser-unix.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function hardwire_raw()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void hardwire_raw ( struct serial* scb )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ser-unix.c\cell\cell\row
Calls: \cell fprintf_unfiltered()\cell utils.c\cell\row
\cell get_tty_state()\cell ser-unix.c\cell\row
\cell safe_strerror()\cell utils.c\cell\row
\cell set_tty_state()\cell ser-unix.c\cell\row
\cell  __error()\cell\cell\row
Used in:\cell _initialize_ser_hardwire()\cell ser-unix.c\cell\row
Refs Var:\cell gdb_stderr\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function hardwire_readchar()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int hardwire_readchar ( struct serial* scb, int timeout )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ser-unix.c\cell\cell\row
Calls: \cell generic_readchar()\cell ser-base.c\cell\row
Used in:\cell _initialize_ser_hardwire()\cell ser-unix.c\cell\row
Refs Func:\cell do_hardwire_readchar()\cell ser-unix.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function hardwire_send_break()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int hardwire_send_break ( struct serial* scb )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ser-unix.c\cell\cell\row
Calls: \cell  ioctl(), select()\cell\cell\row
Used in:\cell _initialize_ser_hardwire()\cell ser-unix.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function hardwire_set_tty_state()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int hardwire_set_tty_state ( struct serial* scb, serial_ttystate ttystate )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ser-unix.c\cell\cell\row
Calls: \cell set_tty_state()\cell ser-unix.c\cell\row
Used in:\cell _initialize_ser_hardwire()\cell ser-unix.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function hardwire_setbaudrate()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int hardwire_setbaudrate ( struct serial* scb, int rate )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ser-unix.c\cell\cell\row
Calls: \cell get_tty_state()\cell ser-unix.c\cell\row
\cell rate_to_code()\cell ser-unix.c\cell\row
\cell set_tty_state()\cell ser-unix.c\cell\row
\cell  __error()\cell\cell\row
Used in:\cell _initialize_ser_hardwire()\cell ser-unix.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function hardwire_setstopbits()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int hardwire_setstopbits ( struct serial* scb, int num )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ser-unix.c\cell\cell\row
Calls: \cell get_tty_state()\cell ser-unix.c\cell\row
\cell set_tty_state()\cell ser-unix.c\cell\row
Used in:\cell _initialize_ser_hardwire()\cell ser-unix.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function rate_to_code()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int rate_to_code ( int rate )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ser-unix.c\cell\cell\row
Calls: \cell warning()\cell utils.c\cell\row
Called by:\cell hardwire_setbaudrate()\cell ser-unix.c\cell\row
Refs Var:\cell baudtab\cell ser-unix.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function set_tty_state()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int set_tty_state ( struct serial* scb, struct hardwire_ttystate* state )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ser-unix.c\cell\cell\row
Calls: \cell  ioctl()\cell\cell\row
Called by:\cell hardwire_noflush_set_tty_state()\cell ser-unix.c\cell\row
\cell hardwire_raw()\cell ser-unix.c\cell\row
\cell hardwire_set_tty_state()\cell ser-unix.c\cell\row
\cell hardwire_setbaudrate()\cell ser-unix.c\cell\row
\cell hardwire_setstopbits()\cell ser-unix.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function wait_for()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int wait_for ( struct serial* scb, int timeout )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell ser-unix.c\cell\cell\row
Calls: \cell  __builtin_bzero(), __error(), select()\cell\cell\row
Called by:\cell do_hardwire_readchar()\cell ser-unix.c\cell\row
\intbl0
}
