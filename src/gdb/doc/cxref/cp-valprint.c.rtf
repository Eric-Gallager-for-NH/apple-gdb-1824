{\rtf\ansi
\deff0
{\fonttbl
{\f0\froman Times New Roman;}
{\f1\fmodern Courier New;}
}
{\stylesheet
{\s0\f0\fs24 Normal;}
{\s1\f0\fs40\b\sb400\sa200\keepn\keep Heading 1;}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Heading 2;}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Heading 3;}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Heading 4;}
{\s5\f1\fs20\ql\sb50\sa50 Code;}
}
{\info{\comment
 This RTF file generated by cxref (version 1.6e).
 cxref program (c) Andrew M. Bishop 1995-2014.
 Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF cp-valprint.c
 CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
}}
\paperw11880\paperh16848\margl1440\margr1440\margt1440\margb1440
\sectd\plain
\s0\f0\fs24
{\s1\f0\fs40\b\sb400\sa200\keepn\keep File cp-valprint.c\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Included Files\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <errno.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <unistd.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_locale.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <locale.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../gdb/signals.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/symcat.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-file.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "xm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/xm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "nm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/i386/nm-i386.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/nm-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "tm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/tm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-tdep.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-tdep.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-thread-status.h"\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_types.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <inttypes.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_vm.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/kmod.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/tm-i386-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/fopen-bin.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdlib.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbarch.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_obstack.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/obstack.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdbtypes.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "expression.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/floatformat.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_regex.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbtypes.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "expression.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "command.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdbcmd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "command.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-out.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../include/demangle.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "annotate.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbtypes.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_string.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "c-lang.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "macroexp.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "target.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "dcache.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "memattr.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "cp-abi.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "valprint.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "cp-support.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "language.h"\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Variables\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable vtblprint\par}
{\s5\f1\fs20\ql\sb50\sa50 int vtblprint\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell ada-lang.c\cell\cell\row
\cell ada-typeprint.c\cell\cell\row
\cell ada-valprint.c\cell\cell\row
\cell c-exp.c\cell\cell\row
\cell c-lang.c\cell\cell\row
\cell c-typeprint.c\cell\cell\row
\cell c-valprint.c\cell\cell\row
\cell cp-valprint.c\cell\cell\row
\cell f-lang.c\cell\cell\row
\cell f-valprint.c\cell\cell\row
\cell jv-lang.c\cell\cell\row
\cell jv-typeprint.c\cell\cell\row
\cell jv-valprint.c\cell\cell\row
\cell m2-lang.c\cell\cell\row
\cell m2-valprint.c\cell\cell\row
\cell objc-exp.c\cell\cell\row
\cell objc-lang.c\cell\cell\row
\cell p-exp.c\cell\cell\row
\cell p-lang.c\cell\cell\row
\cell p-typeprint.c\cell\cell\row
\cell p-valprint.c\cell\cell\row
\cell printcmd.c\cell\cell\row
\cell scm-exp.c\cell\cell\row
\cell scm-lang.c\cell\cell\row
\cell scm-valprint.c\cell\cell\row
\cell valprint.c\cell\cell\row
Used in:\cell _initialize_cp_valprint()\cell cp-valprint.c\cell\row
\cell c_val_print()\cell c-valprint.c\cell\row
\cell cp_print_value_fields()\cell cp-valprint.c\cell\row
\cell pascal_val_print()\cell p-valprint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable static_field_print\par}
{\s5\f1\fs20\ql\sb50\sa50 int static_field_print\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell ada-lang.c\cell\cell\row
\cell ada-typeprint.c\cell\cell\row
\cell ada-valprint.c\cell\cell\row
\cell c-exp.c\cell\cell\row
\cell c-lang.c\cell\cell\row
\cell c-typeprint.c\cell\cell\row
\cell c-valprint.c\cell\cell\row
\cell cp-valprint.c\cell\cell\row
\cell jv-lang.c\cell\cell\row
\cell jv-typeprint.c\cell\cell\row
\cell jv-valprint.c\cell\cell\row
\cell m2-lang.c\cell\cell\row
\cell m2-valprint.c\cell\cell\row
\cell objc-exp.c\cell\cell\row
\cell objc-lang.c\cell\cell\row
\cell p-exp.c\cell\cell\row
\cell p-lang.c\cell\cell\row
\cell p-typeprint.c\cell\cell\row
\cell p-valprint.c\cell\cell\row
\cell scm-exp.c\cell\cell\row
\cell scm-lang.c\cell\cell\row
\cell scm-valprint.c\cell\cell\row
Used in:\cell _initialize_cp_valprint()\cell cp-valprint.c\cell\row
\cell cp_print_value_fields()\cell cp-valprint.c\cell\row
\cell java_print_value_fields()\cell jv-valprint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable objectprint\par}
{\s5\f1\fs20\ql\sb50\sa50 int objectprint\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell ada-valprint.c\cell\cell\row
\cell c-lang.c\cell\cell\row
\cell c-valprint.c\cell\cell\row
\cell cp-valprint.c\cell\cell\row
\cell eval.c\cell\cell\row
\cell f-lang.c\cell\cell\row
\cell f-valprint.c\cell\cell\row
\cell jv-valprint.c\cell\cell\row
\cell m2-lang.c\cell\cell\row
\cell objc-lang.c\cell\cell\row
\cell p-lang.c\cell\cell\row
\cell p-valprint.c\cell\cell\row
\cell printcmd.c\cell\cell\row
\cell scm-valprint.c\cell\cell\row
\cell typeprint.c\cell\cell\row
\cell valprint.c\cell\cell\row
Used in:\cell _initialize_cp_valprint()\cell cp-valprint.c\cell\row
\cell c_value_print()\cell c-valprint.c\cell\row
\cell evaluate_subexp_standard()\cell eval.c\cell\row
\cell whatis_exp()\cell typeprint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable vtbl_ptr_name\par}
{\s5\f1\fs20\ql\sb50\sa50 const char vtbl_ptr_name[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell cp-valprint.c\cell\cell\row
Used in:\cell cp_is_vtbl_ptr_type()\cell cp-valprint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable hpacc_vtbl_ptr_name\par}
{\s5\f1\fs20\ql\sb50\sa50 const char hpacc_vtbl_ptr_name[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell cp-valprint.c\cell\cell\row
Used in:\cell cp_print_value_fields()\cell cp-valprint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable hpacc_vtbl_ptr_type_name\par}
{\s5\f1\fs20\ql\sb50\sa50 const char hpacc_vtbl_ptr_type_name[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell cp-valprint.c\cell\cell\row
Used in:\cell cp_print_value_fields()\cell cp-valprint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable dont_print_vb_obstack\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct obstack dont_print_vb_obstack\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_cp_valprint()\cell\cell\row
\cell cp_print_value()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable dont_print_statmem_obstack\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct obstack dont_print_statmem_obstack\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_cp_valprint()\cell\cell\row
\cell cp_print_static_field()\cell\cell\row
\cell cp_print_value_fields()\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Functions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function _initialize_cp_valprint()\par}
{\s5\f1\fs20\ql\sb50\sa50 void _initialize_cp_valprint ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cp-valprint.c\cell\cell\row
Calls: \cell  _obstack_begin(), add_setshow_boolean_cmd()\cell\cell\row
Refs Func:\cell show_objectprint()\cell cp-valprint.c\cell\row
\cell show_static_field_print()\cell cp-valprint.c\cell\row
\cell show_vtblprint()\cell cp-valprint.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
Refs Var:\cell dont_print_statmem_obstack\cell cp-valprint.c\cell\row
\cell dont_print_vb_obstack\cell cp-valprint.c\cell\row
\cell objectprint\cell cp-valprint.c\cell\row
\cell static_field_print\cell cp-valprint.c\cell\row
\cell vtblprint\cell cp-valprint.c\cell\row
\cell  setprintlist, showprintlist\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function cp_is_vtbl_member()\par}
{\s5\f1\fs20\ql\sb50\sa50 int cp_is_vtbl_member ( struct type* type )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell c-lang.h\cell\cell\row
Calls: \cell cp_is_vtbl_ptr_type()\cell cp-valprint.c\cell\row
Called by:\cell c_val_print()\cell c-valprint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function cp_is_vtbl_ptr_type()\par}
{\s5\f1\fs20\ql\sb50\sa50 int cp_is_vtbl_ptr_type ( struct type* the_type )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell c-lang.h\cell\cell\row
Calls: \cell type_name_no_tag()\cell gdbtypes.c\cell\row
\cell  strcmp()\cell\cell\row
Called by:\cell c_val_print()\cell c-valprint.c\cell\row
\cell cp_is_vtbl_member()\cell cp-valprint.c\cell\row
Refs Var:\cell vtbl_ptr_name\cell cp-valprint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function cp_print_class_member()\par}
{\s5\f1\fs20\ql\sb50\sa50 void cp_print_class_member ( const gdb_byte* valaddr, struct type* domain, struct ui_file* stream, const char* prefix )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell c-lang.h\cell\cell\row
Calls: \cell c_type_print_base()\cell c-typeprint.c\cell\row
\cell fprintf_filtered()\cell utils.c\cell\row
\cell fputs_filtered()\cell utils.c\cell\row
\cell objc_fixup_ivar_offset()\cell objc-lang.c\cell\row
\cell quit()\cell utils.c\cell\row
\cell type_name_no_tag()\cell gdbtypes.c\cell\row
\cell unpack_long()\cell value.c\cell\row
Called by:\cell c_val_print()\cell c-valprint.c\cell\row
Refs Var:\cell builtin_type_int\cell gdbtypes.c\cell\row
\cell cplus_struct_default\cell gdbtypes.c\cell\row
\cell quit_flag\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function cp_print_class_method()\par}
{\s5\f1\fs20\ql\sb50\sa50 void cp_print_class_method ( const gdb_byte* valaddr, struct type* type, struct ui_file* stream )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell c-lang.h\cell\cell\row
Calls: \cell check_stub_method_group()\cell gdbtypes.c\cell\row
\cell check_typedef()\cell gdbtypes.c\cell\row
\cell error()\cell utils.c\cell\row
\cell find_pc_function()\cell blockframe.c\cell\row
\cell fprintf_filtered()\cell utils.c\cell\row
\cell fputs_filtered()\cell utils.c\cell\row
\cell type_print()\cell typeprint.c\cell\row
\cell unpack_pointer()\cell value.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell  cplus_demangle(), strcmp()\cell\cell\row
Called by:\cell c_val_print()\cell c-valprint.c\cell\row
Refs Var:\cell cplus_struct_default\cell gdbtypes.c\cell\row
\cell deprecated_hp_som_som_object_present\cell symtab.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function cp_print_value_fields()\par}
{\s5\f1\fs20\ql\sb50\sa50 void cp_print_value_fields ( struct type* type, struct type* real_type, const gdb_byte* valaddr, int offset, CORE_ADDR address, struct ui_file* stream, int format, int recurse, enum val_prettyprint pretty, struct type** dont_print_vb, int dont_print_statmem )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell c-lang.h\cell\cell\row
Calls: \cell check_typedef()\cell gdbtypes.c\cell\row
\cell common_val_print()\cell valprint.c\cell\row
\cell cp_print_static_field()\cell cp-valprint.c\cell\row
\cell cp_print_value()\cell cp-valprint.c\cell\row
\cell fprintf_filtered()\cell utils.c\cell\row
\cell fprintf_symbol_filtered()\cell utils.c\cell\row
\cell fputs_filtered()\cell utils.c\cell\row
\cell lookup_pointer_type()\cell gdbtypes.c\cell\row
\cell n_spaces()\cell utils.c\cell\row
\cell objc_fixup_ivar_offset()\cell objc-lang.c\cell\row
\cell print_spaces_filtered()\cell utils.c\cell\row
\cell type_name_no_tag()\cell gdbtypes.c\cell\row
\cell unpack_field_as_long()\cell value.c\cell\row
\cell val_print()\cell valprint.c\cell\row
\cell value_from_longest()\cell value.c\cell\row
\cell value_from_pointer()\cell value.c\cell\row
\cell value_static_field()\cell value.c\cell\row
\cell warning()\cell utils.c\cell\row
\cell wrap_here()\cell utils.c\cell\row
\cell  annotate_field_begin(), annotate_field_end(), annotate_field_name_end(), annotate_field_value(), strcmp(), strncmp()\cell\cell\row
Called by:\cell c_val_print()\cell c-valprint.c\cell\row
\cell cp_print_static_field()\cell cp-valprint.c\cell\row
\cell cp_print_value()\cell cp-valprint.c\cell\row
Refs Func:\cell  obstack_free()\cell\cell\row
Refs Var:\cell builtin_type_unsigned_long\cell gdbtypes.c\cell\row
\cell cplus_struct_default\cell gdbtypes.c\cell\row
\cell current_language\cell language.c\cell\row
\cell dont_print_statmem_obstack\cell cp-valprint.c\cell\row
\cell hpacc_vtbl_ptr_name\cell cp-valprint.c\cell\row
\cell hpacc_vtbl_ptr_type_name\cell cp-valprint.c\cell\row
\cell inspect_it\cell printcmd.c\cell\row
\cell static_field_print\cell cp-valprint.c\cell\row
\cell vtblprint\cell cp-valprint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function cp_print_hpacc_virtual_table_entries()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void cp_print_hpacc_virtual_table_entries ( struct type* type, int* vfuncs, struct value* v, struct ui_file* stream, int format, int recurse, enum val_prettyprint pretty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cp-valprint.c\cell\cell\row
Calls: \cell common_val_print()\cell valprint.c\cell\row
\cell cp_print_hpacc_virtual_table_entries()\cell cp-valprint.c\cell\row
\cell deprecated_set_value_type()\cell value.c\cell\row
\cell fprintf_filtered()\cell utils.c\cell\row
\cell fputs_filtered()\cell utils.c\cell\row
\cell primary_base_class()\cell gdbtypes.c\cell\row
\cell value_contents_writeable()\cell value.c\cell\row
\cell value_copy()\cell value.c\cell\row
\cell value_fetch_lazy()\cell valops.c\cell\row
\cell value_ind()\cell valops.c\cell\row
\cell value_lazy()\cell value.c\cell\row
\cell value_type()\cell value.c\cell\row
\cell  cplus_demangle()\cell\cell\row
Called by:\cell cp_print_hpacc_virtual_table_entries()\cell cp-valprint.c\cell\row
Refs Var:\cell cplus_struct_default\cell gdbtypes.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function cp_print_static_field()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void cp_print_static_field ( struct type* type, struct value* val, struct ui_file* stream, int format, int recurse, enum val_prettyprint pretty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cp-valprint.c\cell\cell\row
Calls: \cell check_typedef()\cell gdbtypes.c\cell\row
\cell cp_print_value_fields()\cell cp-valprint.c\cell\row
\cell deprecated_value_address_hack()\cell value.c\cell\row
\cell fputs_filtered()\cell utils.c\cell\row
\cell val_print()\cell valprint.c\cell\row
\cell value_contents_all()\cell value.c\cell\row
\cell value_embedded_offset()\cell value.c\cell\row
\cell  __builtin___memcpy_chk(), __builtin_object_size(), __inline_memcpy_chk(), _obstack_newchunk()\cell\cell\row
Called by:\cell cp_print_value_fields()\cell cp-valprint.c\cell\row
Refs Var:\cell dont_print_statmem_obstack\cell cp-valprint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function cp_print_value()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void cp_print_value ( struct type* type, struct type* real_type, const gdb_byte* valaddr, int offset, CORE_ADDR address, struct ui_file* stream, int format, int recurse, enum val_prettyprint pretty, struct type** dont_print_vb )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell cp-valprint.c\cell\cell\row
Calls: \cell baseclass_offset()\cell cp-abi.c\cell\row
\cell check_typedef()\cell gdbtypes.c\cell\row
\cell cp_print_value_fields()\cell cp-valprint.c\cell\row
\cell error()\cell utils.c\cell\row
\cell find_rt_vbase_offset()\cell valops.c\cell\row
\cell fprintf_filtered()\cell utils.c\cell\row
\cell fputs_filtered()\cell utils.c\cell\row
\cell objc_fixup_class_length()\cell objc-lang.c\cell\row
\cell print_spaces_filtered()\cell utils.c\cell\row
\cell target_read_memory()\cell target/target.c\cell\row
\cell warning()\cell utils.c\cell\row
\cell  __builtin_alloca(), _obstack_newchunk()\cell\cell\row
Called by:\cell cp_print_value_fields()\cell cp-valprint.c\cell\row
Refs Func:\cell  obstack_free()\cell\cell\row
Refs Var:\cell cplus_struct_default\cell gdbtypes.c\cell\row
\cell dont_print_vb_obstack\cell cp-valprint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_objectprint()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_objectprint ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell fprintf_filtered()\cell utils.c\cell\row
Used in:\cell _initialize_cp_valprint()\cell cp-valprint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_static_field_print()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_static_field_print ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell fprintf_filtered()\cell utils.c\cell\row
Used in:\cell _initialize_cp_valprint()\cell cp-valprint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_vtblprint()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_vtblprint ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell fprintf_filtered()\cell utils.c\cell\row
Used in:\cell _initialize_cp_valprint()\cell cp-valprint.c\cell\row
\intbl0
}
