<!DOCTYPE LINUXDOC SYSTEM>

<!-- This SGML file generated by cxref (version 1.6e). -->
<!-- cxref program (c) Andrew M. Bishop 1995-2014. -->

<!--
Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF bcache.c
CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
-->

<article>

<title>Cross reference for bcache.c of gdb.cxref.
<author>cxref

<sect>File bcache.c

<sect1>Included Files

<p>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<itemize>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
<item><tt>#include &lt;sys/time.h&gt;</tt>
<item><tt>#include &lt;time.h&gt;</tt>
<item><tt>#include &lt;sys/types.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
<item><tt>#include &lt;errno.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
<item><tt>#include &lt;regex.h&gt;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;unistd.h&gt;</tt>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;gdb_locale.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<item><tt>#include &lt;locale.h&gt;</tt>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../gdb/signals.h&quot;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &quot;../include/libiberty.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/symcat.h&quot;</tt>
</itemize>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
<item><tt>#include &quot;ui-file.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;xm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/xm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &lt;mach/mach.h&gt;</tt>
<item><tt>#include &lt;signal.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;nm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/i386/nm-i386.h&quot;</tt>
<item><tt>#include &quot;macosx/nm-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;tm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/tm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;macosx/i386-macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/i386-macosx-thread-status.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &lt;mach/mach_types.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
<item><tt>#include &lt;inttypes.h&gt;</tt>
<item><tt>#include &lt;mach/mach_vm.h&gt;</tt>
<item><tt>#include &lt;mach/kmod.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;macosx/tm-i386-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;../include/fopen-bin.h&quot;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdlib.h&gt;</tt>
<item><tt>#include &quot;gdbarch.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_obstack.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/obstack.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
</itemize>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;bcache.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_string.h&quot;</tt>
<itemize>
<item><tt>#include &lt;string.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_assert.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &lt;stddef.h&gt;</tt>
</itemize>
<itemize>
<item><tt>#include &lt;stdlib.h&gt;</tt>
</itemize>

<sect1>Preprocessor definitions

<p>
<tt>#define CHAIN_LENGTH_THRESHOLD 5</tt><newline>
<p>
<tt>#define BSTRING_SIZE( n )</tt><newline>

<sect1>Type struct bstring

<p>
<itemize>
<item><tt>struct bstring</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>struct bstring* next;</tt><newline>
<item><tt>unsigned short length;</tt><newline>
<item><tt>unsigned short half_hash;</tt><newline>
<item><tt>union</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>char data[1];</tt><newline>
<item><tt>double dummy;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
<item><tt>d;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Type struct bcache

<p>
<itemize>
<item><tt>struct bcache</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>struct obstack cache;</tt><newline>
<item><tt>void* pool;</tt><newline>
<item><tt>unsigned int num_buckets;</tt><newline>
<item><tt>struct bstring** bucket;</tt><newline>
<item><tt>unsigned long unique_count;</tt><newline>
<item><tt>long total_count;</tt><newline>
<item><tt>long unique_size;</tt><newline>
<item><tt>long total_size;</tt><newline>
<item><tt>long structure_size;</tt><newline>
<item><tt>unsigned long expand_count;</tt><newline>
<item><tt>unsigned long expand_hash_count;</tt><newline>
<item><tt>unsigned long half_hash_miss_count;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Global Function bcache()

<p><tt>const void* bcache ( const void* addr, int length, struct bcache* bcache )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>bcache.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>bcache_data()  :  bcache.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>macro_bcache()  :  macrotab.c
</itemize>
</descrip>

<sect1>Global Function bcache_memory_used()

<p><tt>int bcache_memory_used ( struct bcache* bcache )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>bcache.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>_obstack_memory_used()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>print_objfile_statistics()  :  symmisc.c
</itemize>
</descrip>

<sect1>Global Function bcache_specify_allocation()

<p><tt>void bcache_specify_allocation ( struct bcache* b, void* (*alloc)(size_t), void (*free_f)(void*) )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>bcache.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>_obstack_begin()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>create_objfile_using_objfile()  :  objfiles.c
</itemize>
</descrip>

<sect1>Global Function bcache_specify_allocation_with_arg()

<p><tt>void bcache_specify_allocation_with_arg ( struct bcache* b, void* (*alloc)(void*,size_t), void (*free_f)(void*,void*), void* arg )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>bcache.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>_obstack_begin_1()
</itemize>
</descrip>

<sect1>Global Function bcache_xfree()

<p><tt>void bcache_xfree ( struct bcache* bcache )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>bcache.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xmfree()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>free_objfile_internal()  :  objfiles.c
<item>reread_symbols_for_objfile()  :  symfile.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>obstack_free()
</itemize>
</descrip>

<sect1>Global Function bcache_xmalloc()

<p><tt>struct bcache* bcache_xmalloc ( void* pool )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>bcache.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xmcalloc()  :  utils.c
<item>_obstack_begin_1()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>create_objfile_using_objfile()  :  objfiles.c
<item>reread_symbols_for_objfile()  :  symfile.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>xmfree()  :  utils.c
<item>xmmalloc()  :  utils.c
</itemize>
</descrip>

<sect1>Global Function deprecated_bcache()

<p><tt>void* deprecated_bcache ( const void* addr, int length, struct bcache* bcache )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>bcache.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>bcache_data()  :  bcache.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>add_psymbol_to_list()  :  symfile.c
<item>add_psymbol_with_dem_name_to_list()  :  symfile.c
</itemize>
</descrip>

<sect1>Global Function hash()

<p><tt>unsigned long hash ( const void* addr, int length )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>bcache.h
</itemize>
<tag>Called by:</tag>
<itemize>
<item>bcache_data()  :  bcache.c
<item>expand_hash_table()  :  bcache.c
<item>hashname()  :  buildsym.c
</itemize>
</descrip>

<sect1>Global Function print_bcache_statistics()

<p><tt>void print_bcache_statistics ( struct bcache* c, const char* type )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>bcache.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
<item>print_percentage()  :  bcache.c
<item>printf_filtered()  :  utils.c
<item>xcalloc()  :  utils.c
<item>xfree()  :  utils.c
<item>qsort()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>print_symbol_bcache_statistics()  :  symmisc.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>compare_ints()  :  bcache.c
</itemize>
</descrip>

<sect1>Local Function bcache_data()

<p><tt>static void* bcache_data ( const void* addr, int length, struct bcache* bcache )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>expand_hash_table()  :  bcache.c
<item>hash()  :  bcache.c
<item>__builtin___memcpy_chk(), __builtin_object_size(), __inline_memcpy_chk(), _obstack_newchunk(), memcmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>bcache()  :  bcache.c
<item>deprecated_bcache()  :  bcache.c
</itemize>
</descrip>

<sect1>Local Function compare_ints()

<p><tt>static int compare_ints ( const void* ap, const void* bp )</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>print_bcache_statistics()  :  bcache.c
</itemize>
</descrip>

<sect1>Local Function expand_hash_table()

<p><tt>static void expand_hash_table ( struct bcache* bcache )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>hash()  :  bcache.c
<item>xmfree()  :  utils.c
<item>xmmalloc()  :  utils.c
<item>__builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>bcache_data()  :  bcache.c
</itemize>
</descrip>

<sect1>Local Function print_percentage()

<p><tt>static void print_percentage ( int portion, int total )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>printf_filtered()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>print_bcache_statistics()  :  bcache.c
</itemize>
</descrip>

</article>
