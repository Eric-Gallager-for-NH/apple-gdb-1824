<!DOCTYPE LINUXDOC SYSTEM>

<!-- This SGML file generated by cxref (version 1.6e). -->
<!-- cxref program (c) Andrew M. Bishop 1995-2014. -->

<!--
Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF user-regs.c
CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
-->

<article>

<title>Cross reference for user-regs.c of gdb.cxref.
<author>cxref

<sect>File user-regs.c

<sect1>Included Files

<p>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<itemize>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
<item><tt>#include &lt;sys/time.h&gt;</tt>
<item><tt>#include &lt;time.h&gt;</tt>
<item><tt>#include &lt;sys/types.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
<item><tt>#include &lt;errno.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
<item><tt>#include &lt;regex.h&gt;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;unistd.h&gt;</tt>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;gdb_locale.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<item><tt>#include &lt;locale.h&gt;</tt>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../gdb/signals.h&quot;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &quot;../include/libiberty.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/symcat.h&quot;</tt>
</itemize>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
<item><tt>#include &quot;ui-file.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;xm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/xm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &lt;mach/mach.h&gt;</tt>
<item><tt>#include &lt;signal.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;nm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/i386/nm-i386.h&quot;</tt>
<item><tt>#include &quot;macosx/nm-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;tm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/tm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;macosx/i386-macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/i386-macosx-thread-status.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &lt;mach/mach_types.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
<item><tt>#include &lt;inttypes.h&gt;</tt>
<item><tt>#include &lt;mach/mach_vm.h&gt;</tt>
<item><tt>#include &lt;mach/kmod.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;macosx/tm-i386-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;../include/fopen-bin.h&quot;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdlib.h&gt;</tt>
<item><tt>#include &quot;gdbarch.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;user-regs.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdbtypes.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_string.h&quot;</tt>
<itemize>
<item><tt>#include &lt;string.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_assert.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;frame.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/floatformat.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;gdb_regex.h&quot;</tt>
<itemize>
<item><tt>#include &lt;regex.h&gt;</tt>
</itemize>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;gdbtypes.h&quot;</tt>
<item><tt>#include &quot;expression.h&quot;</tt>
<itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
</itemize>
</itemize>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;value.h&quot;</tt>
</itemize>

<sect1>Type struct user_reg

<p>
<itemize>
<item><tt>struct user_reg</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>const char* name;</tt><newline>
<item><tt>struct value* (*read)(struct frame_info* frame);</tt><newline>
<item><tt>struct user_reg* next;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Type struct gdb_user_regs

<p>
<itemize>
<item><tt>struct gdb_user_regs</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>struct user_reg* first;</tt><newline>
<item><tt>struct user_reg** last;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Local Variables

<p>
<bf>builtin_user_regs</bf><newline>
<tt>static struct gdb_user_regs builtin_user_regs</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>user_reg_add_builtin()
<item>user_regs_init()
</itemize>
</descrip>
<p>
<bf>user_regs_data</bf><newline>
<tt>static struct gdbarch_data* user_regs_data</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>_initialize_user_regs()
<item>user_reg_add()
<item>user_reg_map_name_to_regnum()
<item>user_reg_replace()
<item>usernum_to_user_reg()
</itemize>
</descrip>

<sect1>Global Function _initialize_user_regs()

<p><tt>void _initialize_user_regs ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>user-regs.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>gdbarch_data_register_post_init()  :  gdbarch.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>user_regs_init()  :  user-regs.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>user_regs_data  :  user-regs.c
</itemize>
</descrip>

<sect1>Global Function user_reg_add()

<p><tt>void user_reg_add ( struct gdbarch* gdbarch, const char* name, user_reg_read_ftype* read )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>user-regs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>append_user_reg()  :  user-regs.c
<item>deprecated_set_gdbarch_data()  :  gdbarch.c
<item>gdbarch_obstack_zalloc()  :  gdbarch.c
<item>new_gdbarch_data()  :  gdbarch.c
<item>user_regs_init()  :  user-regs.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>user_regs_data  :  user-regs.c
</itemize>
</descrip>

<sect1>Global Function user_reg_add_builtin()

<p><tt>void user_reg_add_builtin ( const char* name, user_reg_read_ftype* read )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>user-regs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>append_user_reg()  :  user-regs.c
<item>xmalloc()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>_initialize_frame_reg()  :  std-regs.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>builtin_user_regs  :  user-regs.c
</itemize>
</descrip>

<sect1>Global Function user_reg_map_name_to_regnum()

<p><tt>int user_reg_map_name_to_regnum ( struct gdbarch* gdbarch, const char* name, int len )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>user-regs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>gdbarch_num_pseudo_regs()  :  gdbarch.c
<item>gdbarch_num_regs()  :  gdbarch.c
<item>gdbarch_register_name()  :  gdbarch.c
<item>new_gdbarch_data()  :  gdbarch.c
<item>strcmp(), strlen(), strncmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>frame_map_name_to_regnum()  :  frame.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
<item>user_regs_data  :  user-regs.c
</itemize>
</descrip>

<sect1>Global Function user_reg_map_regnum_to_name()

<p><tt>const char* user_reg_map_regnum_to_name ( struct gdbarch* gdbarch, int regnum )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>user-regs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>gdbarch_num_pseudo_regs()  :  gdbarch.c
<item>gdbarch_num_regs()  :  gdbarch.c
<item>gdbarch_register_name()  :  gdbarch.c
<item>usernum_to_user_reg()  :  user-regs.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>frame_map_regnum_to_name()  :  frame.c
<item>print_subexp_standard()  :  expprint.c
</itemize>
</descrip>

<sect1>Global Function user_reg_replace()

<p><tt>void user_reg_replace ( struct gdbarch* gdbarch, const char* name, user_reg_read_ftype* read )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>user-regs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>append_user_reg()  :  user-regs.c
<item>deprecated_set_gdbarch_data()  :  gdbarch.c
<item>gdbarch_obstack_zalloc()  :  gdbarch.c
<item>new_gdbarch_data()  :  gdbarch.c
<item>replace_user_reg()  :  user-regs.c
<item>user_regs_init()  :  user-regs.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>user_regs_data  :  user-regs.c
</itemize>
</descrip>

<sect1>Global Function value_of_user_reg()

<p><tt>struct value* value_of_user_reg ( int regnum, struct frame_info* frame )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>user-regs.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>deprecated_value_frame_id_hack()  :  value.c
<item>gdbarch_num_pseudo_regs()  :  gdbarch.c
<item>gdbarch_num_regs()  :  gdbarch.c
<item>get_frame_arch()  :  frame.c
<item>get_frame_id()  :  frame.c
<item>internal_error()  :  utils.c
<item>usernum_to_user_reg()  :  user-regs.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>value_of_register()  :  findvar.c
</itemize>
</descrip>

<sect1>Local Function append_user_reg()

<p><tt>static void append_user_reg ( struct gdb_user_regs* regs, const char* name, user_reg_read_ftype* read, struct user_reg* reg )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>user_reg_add()  :  user-regs.c
<item>user_reg_add_builtin()  :  user-regs.c
<item>user_reg_replace()  :  user-regs.c
<item>user_regs_init()  :  user-regs.c
</itemize>
</descrip>

<sect1>Local Function replace_user_reg()

<p><tt>static int replace_user_reg ( struct gdb_user_regs* regs, const char* name, user_reg_read_ftype* read )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>strlen(), strncmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>user_reg_replace()  :  user-regs.c
</itemize>
</descrip>

<sect1>Local Function user_regs_init()

<p><tt>static void* user_regs_init ( struct gdbarch* gdbarch )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>append_user_reg()  :  user-regs.c
<item>gdbarch_obstack_zalloc()  :  gdbarch.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>user_reg_add()  :  user-regs.c
<item>user_reg_replace()  :  user-regs.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_user_regs()  :  user-regs.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>builtin_user_regs  :  user-regs.c
</itemize>
</descrip>

<sect1>Local Function usernum_to_user_reg()

<p><tt>static struct user_reg* usernum_to_user_reg ( struct gdbarch* gdbarch, int usernum )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>new_gdbarch_data()  :  gdbarch.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>user_reg_map_regnum_to_name()  :  user-regs.c
<item>value_of_user_reg()  :  user-regs.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>user_regs_data  :  user-regs.c
</itemize>
</descrip>

</article>
