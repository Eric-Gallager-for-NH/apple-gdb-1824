{\rtf\ansi
\deff0
{\fonttbl
{\f0\froman Times New Roman;}
{\f1\fmodern Courier New;}
}
{\stylesheet
{\s0\f0\fs24 Normal;}
{\s1\f0\fs40\b\sb400\sa200\keepn\keep Heading 1;}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Heading 2;}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Heading 3;}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Heading 4;}
{\s5\f1\fs20\ql\sb50\sa50 Code;}
}
{\info{\comment
 This RTF file generated by cxref (version 1.6e).
 cxref program (c) Andrew M. Bishop 1995-2014.
 Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF f-valprint.c
 CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
}}
\paperw11880\paperh16848\margl1440\margr1440\margt1440\margb1440
\sectd\plain
\s0\f0\fs24
{\s1\f0\fs40\b\sb400\sa200\keepn\keep File f-valprint.c\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Included Files\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <errno.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <unistd.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_locale.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <locale.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../gdb/signals.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/symcat.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-file.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "xm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/xm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "nm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/i386/nm-i386.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/nm-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "tm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/tm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-tdep.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-tdep.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-thread-status.h"\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_types.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <inttypes.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_vm.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/kmod.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/tm-i386-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/fopen-bin.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdlib.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbarch.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_assert.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_string.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdbtypes.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "expression.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/floatformat.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_regex.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbtypes.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "expression.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "valprint.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "language.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "f-lang.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdbcore.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "command.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "block.h"\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Preprocessor definitions\par}
{\s5\f1\fs20\ql\sb50\sa50 #define F77_DIM_SIZE( n )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define F77_DIM_OFFSET( n )\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Variables\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable f77_array_offset_tbl\par}
{\s5\f1\fs20\ql\sb50\sa50 int f77_array_offset_tbl[7+1][2]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell f-valprint.c\cell\cell\row
Used in:\cell f77_create_arrayprint_offset_tbl()\cell f-valprint.c\cell\row
\cell f77_print_array_1()\cell f-valprint.c\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Functions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function _initialize_f_valprint()\par}
{\s5\f1\fs20\ql\sb50\sa50 void _initialize_f_valprint ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell f-valprint.c\cell\cell\row
Calls: \cell  add_com(), add_info()\cell\cell\row
Refs Func:\cell info_common_command()\cell f-valprint.c\cell\row
Refs Var:\cell xdb_commands\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function f77_get_dynamic_lowerbound()\par}
{\s5\f1\fs20\ql\sb50\sa50 int f77_get_dynamic_lowerbound ( struct type* type, int* lower_bound )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell f-lang.h\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
\cell get_frame_base()\cell frame.c\cell\row
\cell read_memory_integer()\cell corefile.c\cell\row
\cell read_memory_typed_address()\cell corefile.c\cell\row
Called by:\cell evaluate_subexp_standard()\cell eval.c\cell\row
\cell f77_create_arrayprint_offset_tbl()\cell f-valprint.c\cell\row
\cell f77_get_dynamic_length_of_aggregate()\cell f-valprint.c\cell\row
\cell f77_get_dynamic_upperbound()\cell f-valprint.c\cell\row
\cell f_type_print_varspec_suffix()\cell f-typeprint.c\cell\row
Refs Var:\cell builtin_type_void_data_ptr\cell gdbtypes.c\cell\row
\cell deprecated_selected_frame\cell frame.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function f77_get_dynamic_upperbound()\par}
{\s5\f1\fs20\ql\sb50\sa50 int f77_get_dynamic_upperbound ( struct type* type, int* upper_bound )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell f-lang.h\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
\cell f77_get_dynamic_lowerbound()\cell f-valprint.c\cell\row
\cell get_frame_base()\cell frame.c\cell\row
\cell read_memory_integer()\cell corefile.c\cell\row
\cell read_memory_typed_address()\cell corefile.c\cell\row
Called by:\cell evaluate_subexp_standard()\cell eval.c\cell\row
\cell f77_create_arrayprint_offset_tbl()\cell f-valprint.c\cell\row
\cell f77_get_dynamic_length_of_aggregate()\cell f-valprint.c\cell\row
\cell f_type_print_base()\cell f-typeprint.c\cell\row
\cell f_type_print_varspec_suffix()\cell f-typeprint.c\cell\row
Refs Var:\cell builtin_type_void_data_ptr\cell gdbtypes.c\cell\row
\cell deprecated_selected_frame\cell frame.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function f_val_print()\par}
{\s5\f1\fs20\ql\sb50\sa50 int f_val_print ( struct type* type, const gdb_byte* valaddr, int embedded_offset, CORE_ADDR address, struct ui_file* stream, int format, int deref_ref, int recurse, enum val_prettyprint pretty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell f-lang.h\cell\cell\row
Calls: \cell check_typedef()\cell gdbtypes.c\cell\row
\cell common_val_print()\cell valprint.c\cell\row
\cell deprecated_print_address_numeric()\cell printcmd.c\cell\row
\cell error()\cell utils.c\cell\row
\cell extract_typed_address()\cell findvar.c\cell\row
\cell f77_get_dynamic_length_of_aggregate()\cell f-valprint.c\cell\row
\cell f77_print_array()\cell f-valprint.c\cell\row
\cell f_val_print()\cell f-valprint.c\cell\row
\cell fprintf_filtered()\cell utils.c\cell\row
\cell fputs_filtered()\cell utils.c\cell\row
\cell gdb_flush()\cell ui-file.c\cell\row
\cell lookup_pointer_type()\cell gdbtypes.c\cell\row
\cell objc_fixup_class_length()\cell objc-lang.c\cell\row
\cell print_address_demangle()\cell printcmd.c\cell\row
\cell print_floating()\cell valprint.c\cell\row
\cell print_scalar_formatted()\cell printcmd.c\cell\row
\cell type_print()\cell typeprint.c\cell\row
\cell unpack_long()\cell value.c\cell\row
\cell unpack_pointer()\cell value.c\cell\row
\cell val_print_string()\cell valprint.c\cell\row
\cell val_print_type_code_int()\cell valprint.c\cell\row
\cell value_at()\cell valops.c\cell\row
Called by:\cell f_val_print()\cell f-valprint.c\cell\row
Used in:\cell f-lang.c\cell\cell\row
Refs Var:\cell addressprint\cell valprint.c\cell\row
\cell builtin_type_f_logical\cell f-lang.c\cell\row
\cell builtin_type_f_logical_s1\cell f-lang.c\cell\row
\cell builtin_type_f_logical_s2\cell f-lang.c\cell\row
\cell builtin_type_f_real\cell f-lang.c\cell\row
\cell builtin_type_f_real_s16\cell f-lang.c\cell\row
\cell builtin_type_f_real_s8\cell f-lang.c\cell\row
\cell builtin_type_void\cell gdbtypes.c\cell\row
\cell current_language\cell language.c\cell\row
\cell demangle\cell utils.c\cell\row
\cell output_format\cell valprint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function f77_create_arrayprint_offset_tbl()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void f77_create_arrayprint_offset_tbl ( struct type* type, struct ui_file* stream )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell f-valprint.c\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
\cell f77_get_dynamic_lowerbound()\cell f-valprint.c\cell\row
\cell f77_get_dynamic_upperbound()\cell f-valprint.c\cell\row
\cell fprintf_filtered()\cell utils.c\cell\row
\cell objc_fixup_class_length()\cell objc-lang.c\cell\row
Called by:\cell f77_print_array()\cell f-valprint.c\cell\row
Refs Var:\cell f77_array_offset_tbl\cell f-valprint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function f77_get_dynamic_length_of_aggregate()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void f77_get_dynamic_length_of_aggregate ( struct type* type )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell f-valprint.c\cell\cell\row
Calls: \cell check_typedef()\cell gdbtypes.c\cell\row
\cell error()\cell utils.c\cell\row
\cell f77_get_dynamic_length_of_aggregate()\cell f-valprint.c\cell\row
\cell f77_get_dynamic_lowerbound()\cell f-valprint.c\cell\row
\cell f77_get_dynamic_upperbound()\cell f-valprint.c\cell\row
\cell objc_fixup_class_length()\cell objc-lang.c\cell\row
Called by:\cell f77_get_dynamic_length_of_aggregate()\cell f-valprint.c\cell\row
\cell f_val_print()\cell f-valprint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function f77_print_array()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void f77_print_array ( struct type* type, const gdb_byte* valaddr, CORE_ADDR address, struct ui_file* stream, int format, int deref_ref, int recurse, enum val_prettyprint pretty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell calc_f77_array_dims()\cell eval.c\cell\row
\cell error()\cell utils.c\cell\row
\cell f77_create_arrayprint_offset_tbl()\cell f-valprint.c\cell\row
\cell f77_print_array_1()\cell f-valprint.c\cell\row
Called by:\cell f_val_print()\cell f-valprint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function f77_print_array_1()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void f77_print_array_1 ( int nss, int ndimensions, struct type* type, const gdb_byte* valaddr, CORE_ADDR address, struct ui_file* stream, int format, int deref_ref, int recurse, enum val_prettyprint pretty, int* elts )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell f77_print_array_1()\cell f-valprint.c\cell\row
\cell fprintf_filtered()\cell utils.c\cell\row
\cell val_print()\cell valprint.c\cell\row
Called by:\cell f77_print_array()\cell f-valprint.c\cell\row
\cell f77_print_array_1()\cell f-valprint.c\cell\row
Refs Var:\cell f77_array_offset_tbl\cell f-valprint.c\cell\row
\cell print_max\cell valprint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function info_common_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void info_common_command ( const char* comname, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell f-valprint.c\cell\cell\row
Calls: \cell error()\cell utils.c\cell\row
\cell find_common_for_function()\cell f-lang.c\cell\row
\cell find_pc_function()\cell blockframe.c\cell\row
\cell get_frame_pc()\cell frame.c\cell\row
\cell list_all_visible_commons()\cell f-valprint.c\cell\row
\cell lookup_minimal_symbol_by_pc()\cell minsyms.c\cell\row
\cell print_variable_value()\cell printcmd.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell  strcmp()\cell\cell\row
Used in:\cell _initialize_f_valprint()\cell f-valprint.c\cell\row
Refs Var:\cell deprecated_selected_frame\cell frame.c\cell\row
\cell gdb_stdout\cell main.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function list_all_visible_commons()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void list_all_visible_commons ( const char* funname )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell f-valprint.c\cell\cell\row
Calls: \cell internal_error()\cell utils.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell  strcmp()\cell\cell\row
Called by:\cell info_common_command()\cell f-valprint.c\cell\row
Refs Var:\cell head_common_list\cell f-lang.c\cell\row
\intbl0
}
