{\rtf\ansi
\deff0
{\fonttbl
{\f0\froman Times New Roman;}
{\f1\fmodern Courier New;}
}
{\stylesheet
{\s0\f0\fs24 Normal;}
{\s1\f0\fs40\b\sb400\sa200\keepn\keep Heading 1;}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Heading 2;}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Heading 3;}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Heading 4;}
{\s5\f1\fs20\ql\sb50\sa50 Code;}
}
{\info{\comment
 This RTF file generated by cxref (version 1.6e).
 cxref program (c) Andrew M. Bishop 1995-2014.
 Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF target/x86-shared-tdep.c
 CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
}}
\paperw11880\paperh16848\margl1440\margr1440\margt1440\margb1440
\sectd\plain
\s0\f0\fs24
{\s1\f0\fs40\b\sb400\sa200\keepn\keep File target/x86-shared-tdep.c\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Included Files\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <errno.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <unistd.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_locale.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <locale.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../gdb/signals.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/symcat.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-file.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "xm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/xm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "nm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/i386/nm-i386.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/nm-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "tm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/tm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-tdep.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-tdep.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-thread-status.h"\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_types.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <inttypes.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_vm.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/kmod.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/tm-i386-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/fopen-bin.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdlib.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbarch.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <ctype.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_assert.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../include/dis-asm.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdbcore.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdbarch.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "ui-out.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "target.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "dcache.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "memattr.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/floatformat.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_regex.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "gdbtypes.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "expression.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdbtypes.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "objfiles.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <uuid/uuid.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_obstack.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/obstack.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symfile.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "inlining.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <block.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sqlite3.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "exceptions.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-out.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <setjmp.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "inferior.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "breakpoint.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "gdb-events.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "target.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "objc-lang.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <Availability.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "regcache.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "command.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdbcmd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "command.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-out.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "target/x86-shared-tdep.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "target/i386-tdep.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "target/amd64-tdep.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "target/i386-tdep.h"\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Preprocessor definitions\par}
{\s5\f1\fs20\ql\sb50\sa50 #define REX_W_PREFIX_P( op )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define REX_W_R( op )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define REX_W_B( op )\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Variables\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable debug_x86bt\par}
{\s5\f1\fs20\ql\sb50\sa50 int debug_x86bt\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell target/x86-shared-tdep.c\cell\cell\row
Used in:\cell _initialize_x86_shared_tdep()\cell target/x86-shared-tdep.c\cell\row
\cell x86_analyze_prologue()\cell target/x86-shared-tdep.c\cell\row
\cell x86_frame_prev_register()\cell target/x86-shared-tdep.c\cell\row
\cell x86_frame_this_id()\cell target/x86-shared-tdep.c\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Functions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function _initialize_x86_shared_tdep()\par}
{\s5\f1\fs20\ql\sb50\sa50 void _initialize_x86_shared_tdep ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell target/x86-shared-tdep.c\cell\cell\row
Calls: \cell  add_setshow_zinteger_cmd()\cell\cell\row
Refs Func:\cell show_debug_x86bt()\cell target/x86-shared-tdep.c\cell\row
Refs Var:\cell debug_x86bt\cell target/x86-shared-tdep.c\cell\row
\cell  setdebuglist, showdebuglist\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function build_builtin_type_vec128i_big()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct type* build_builtin_type_vec128i_big ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell target/x86-shared-tdep.h\cell\cell\row
Calls: \cell append_composite_type_field()\cell gdbtypes.c\cell\row
\cell init_composite_type()\cell gdbtypes.c\cell\row
\cell init_type()\cell gdbtypes.c\cell\row
\cell init_vector_type()\cell gdbtypes.c\cell\row
Refs Var:\cell builtin_type_ieee_double_big\cell gdbtypes.c\cell\row
\cell builtin_type_ieee_single_big\cell gdbtypes.c\cell\row
\cell builtin_type_int8\cell gdbtypes.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function i386_argument_regnum_p()\par}
{\s5\f1\fs20\ql\sb50\sa50 int i386_argument_regnum_p ( int r )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell target/x86-shared-tdep.h\cell\cell\row
Used in:\cell x86_initialize_frame_cache()\cell target/x86-shared-tdep.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function i386_machine_regno_to_gdb_regno()\par}
{\s5\f1\fs20\ql\sb50\sa50 int i386_machine_regno_to_gdb_regno ( int r )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell target/x86-shared-tdep.h\cell\cell\row
Used in:\cell x86_initialize_frame_cache()\cell target/x86-shared-tdep.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function i386_nonvolatile_regnum_p()\par}
{\s5\f1\fs20\ql\sb50\sa50 int i386_nonvolatile_regnum_p ( int r )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell target/x86-shared-tdep.h\cell\cell\row
Used in:\cell x86_initialize_frame_cache()\cell target/x86-shared-tdep.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function x86_64_argument_regnum_p()\par}
{\s5\f1\fs20\ql\sb50\sa50 int x86_64_argument_regnum_p ( int r )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell target/x86-shared-tdep.h\cell\cell\row
Used in:\cell x86_initialize_frame_cache()\cell target/x86-shared-tdep.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function x86_64_machine_regno_to_gdb_regno()\par}
{\s5\f1\fs20\ql\sb50\sa50 int x86_64_machine_regno_to_gdb_regno ( int r )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell target/x86-shared-tdep.h\cell\cell\row
Used in:\cell x86_initialize_frame_cache()\cell target/x86-shared-tdep.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function x86_64_nonvolatile_regnum_p()\par}
{\s5\f1\fs20\ql\sb50\sa50 int x86_64_nonvolatile_regnum_p ( int r )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell target/x86-shared-tdep.h\cell\cell\row
Used in:\cell x86_initialize_frame_cache()\cell target/x86-shared-tdep.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function x86_alloc_frame_cache()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct x86_frame_cache* x86_alloc_frame_cache ( int wordsize )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell target/x86-shared-tdep.h\cell\cell\row
Calls: \cell frame_obstack_zalloc()\cell frame.c\cell\row
\cell x86_initialize_frame_cache()\cell target/x86-shared-tdep.c\cell\row
Called by:\cell x86_frame_cache()\cell target/x86-shared-tdep.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function x86_analyze_prologue()\par}
{\s5\f1\fs20\ql\sb50\sa50 CORE_ADDR x86_analyze_prologue ( CORE_ADDR func_start_addr, CORE_ADDR limit, struct x86_frame_cache* cache )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell target/x86-shared-tdep.h\cell\cell\row
Calls: \cell length_of_this_instruction()\cell target/target.c\cell\row
\cell paddr_nz()\cell utils.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell read_memory_unsigned_integer()\cell corefile.c\cell\row
\cell x86_blocks_context_var_copy_pattern_p()\cell target/x86-shared-tdep.c\cell\row
\cell x86_jump_insn_p()\cell target/x86-shared-tdep.c\cell\row
\cell x86_mov_esp_ebp_pattern_p()\cell target/x86-shared-tdep.c\cell\row
\cell x86_mov_reg_to_local_stack_frame_p()\cell target/x86-shared-tdep.c\cell\row
\cell x86_picbase_setup_pattern_p()\cell target/x86-shared-tdep.c\cell\row
\cell x86_pop_p()\cell target/x86-shared-tdep.c\cell\row
\cell x86_push_ebp_pattern_p()\cell target/x86-shared-tdep.c\cell\row
\cell x86_push_reg_p()\cell target/x86-shared-tdep.c\cell\row
\cell x86_ret_pattern_p()\cell target/x86-shared-tdep.c\cell\row
\cell x86_sub_esp_pattern_p()\cell target/x86-shared-tdep.c\cell\row
\cell x86_unopt_arg_copy_to_local_stack_p()\cell target/x86-shared-tdep.c\cell\row
Called by:\cell x86_frame_cache()\cell target/x86-shared-tdep.c\cell\row
\cell x86_frame_prev_register()\cell target/x86-shared-tdep.c\cell\row
Refs Var:\cell debug_x86bt\cell target/x86-shared-tdep.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function x86_cxx_virtual_override_thunk_trampline()\par}
{\s5\f1\fs20\ql\sb50\sa50 CORE_ADDR x86_cxx_virtual_override_thunk_trampline ( CORE_ADDR pc )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell target/x86-shared-tdep.h\cell\cell\row
Calls: \cell length_of_this_instruction()\cell target/target.c\cell\row
\cell lookup_minimal_symbol_by_pc()\cell minsyms.c\cell\row
\cell read_memory_integer()\cell corefile.c\cell\row
\cell read_memory_unsigned_integer()\cell corefile.c\cell\row
\cell  isdigit(), strncmp()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function x86_finalize_saved_reg_locations()\par}
{\s5\f1\fs20\ql\sb50\sa50 void x86_finalize_saved_reg_locations ( struct frame_info* next_frame, struct x86_frame_cache* cache )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell target/x86-shared-tdep.h\cell\cell\row
Calls: \cell extract_unsigned_integer()\cell findvar.c\cell\row
\cell frame_unwind_register()\cell frame.c\cell\row
Called by:\cell x86_frame_prev_register()\cell target/x86-shared-tdep.c\cell\row
\cell x86_frame_this_id()\cell target/x86-shared-tdep.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function x86_frame_cache()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct x86_frame_cache* x86_frame_cache ( struct frame_info* next_frame, void** this_cache, int wordsize )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell target/x86-shared-tdep.h\cell\cell\row
Calls: \cell frame_func_unwind()\cell frame.c\cell\row
\cell frame_pc_unwind()\cell frame.c\cell\row
\cell frame_relative_level()\cell frame.c\cell\row
\cell get_frame_type()\cell frame.c\cell\row
\cell pc_in_objc_trampoline_p()\cell objc-lang.c\cell\row
\cell pc_set_load_state()\cell objfiles.c\cell\row
\cell x86_alloc_frame_cache()\cell target/x86-shared-tdep.c\cell\row
\cell x86_analyze_prologue()\cell target/x86-shared-tdep.c\cell\row
\cell x86_initialize_frame_cache()\cell target/x86-shared-tdep.c\cell\row
\cell x86_quickie_analyze_prologue()\cell target/x86-shared-tdep.c\cell\row
Called by:\cell x86_frame_prev_register()\cell target/x86-shared-tdep.c\cell\row
\cell x86_frame_this_id()\cell target/x86-shared-tdep.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function x86_frame_prev_register()\par}
{\s5\f1\fs20\ql\sb50\sa50 void x86_frame_prev_register ( struct frame_info* next_frame, void** this_cache, int regnum, enum opt_state* optimizedp, enum lval_type* lvalp, CORE_ADDR* addrp, int* realnump, gdb_byte* valuep )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell target/x86-shared-tdep.h\cell\cell\row
Calls: \cell frame_func_unwind()\cell frame.c\cell\row
\cell frame_pc_unwind()\cell frame.c\cell\row
\cell frame_relative_level()\cell frame.c\cell\row
\cell frame_unwind_register()\cell frame.c\cell\row
\cell gdbarch_ptr_bit()\cell gdbarch.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell paddr_nz()\cell utils.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell read_memory()\cell corefile.c\cell\row
\cell read_memory_unsigned_integer()\cell corefile.c\cell\row
\cell register_size()\cell regcache.c\cell\row
\cell store_unsigned_integer()\cell findvar.c\cell\row
\cell x86_analyze_prologue()\cell target/x86-shared-tdep.c\cell\row
\cell x86_finalize_saved_reg_locations()\cell target/x86-shared-tdep.c\cell\row
\cell x86_frame_cache()\cell target/x86-shared-tdep.c\cell\row
\cell x86_initialize_frame_cache()\cell target/x86-shared-tdep.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\cell debug_x86bt\cell target/x86-shared-tdep.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function x86_frame_this_id()\par}
{\s5\f1\fs20\ql\sb50\sa50 void x86_frame_this_id ( struct frame_info* next_frame, void** this_cache, struct frame_id* this_id )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell target/x86-shared-tdep.h\cell\cell\row
Calls: \cell frame_id_build()\cell frame.c\cell\row
\cell frame_pc_unwind()\cell frame.c\cell\row
\cell frame_relative_level()\cell frame.c\cell\row
\cell gdbarch_ptr_bit()\cell gdbarch.c\cell\row
\cell get_frame_type()\cell frame.c\cell\row
\cell get_prev_frame()\cell frame.c\cell\row
\cell lookup_minimal_symbol_by_pc()\cell minsyms.c\cell\row
\cell paddr_nz()\cell utils.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell read_memory()\cell corefile.c\cell\row
\cell safe_read_memory_unsigned_integer()\cell corefile.c\cell\row
\cell x86_finalize_saved_reg_locations()\cell target/x86-shared-tdep.c\cell\row
\cell x86_frame_cache()\cell target/x86-shared-tdep.c\cell\row
\cell  exceptions_state_mc_action_iter(), exceptions_state_mc_action_iter_1(), exceptions_state_mc_init(), sigsetjmp(), strcmp()\cell\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\cell debug_x86bt\cell target/x86-shared-tdep.c\cell\row
\cell inferior_ptid\cell infcmd.c\cell\row
\cell null_frame_id\cell frame.c\cell\row
\cell uiout\cell ui-out.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function x86_initialize_frame_cache()\par}
{\s5\f1\fs20\ql\sb50\sa50 void x86_initialize_frame_cache ( struct x86_frame_cache* cache, int wordsize )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell target/x86-shared-tdep.h\cell\cell\row
Calls: \cell frame_obstack_zalloc()\cell frame.c\cell\row
Called by:\cell x86_alloc_frame_cache()\cell target/x86-shared-tdep.c\cell\row
\cell x86_frame_cache()\cell target/x86-shared-tdep.c\cell\row
\cell x86_frame_prev_register()\cell target/x86-shared-tdep.c\cell\row
Refs Func:\cell i386_argument_regnum_p()\cell target/x86-shared-tdep.c\cell\row
\cell i386_machine_regno_to_gdb_regno()\cell target/x86-shared-tdep.c\cell\row
\cell i386_nonvolatile_regnum_p()\cell target/x86-shared-tdep.c\cell\row
\cell x86_64_argument_regnum_p()\cell target/x86-shared-tdep.c\cell\row
\cell x86_64_machine_regno_to_gdb_regno()\cell target/x86-shared-tdep.c\cell\row
\cell x86_64_nonvolatile_regnum_p()\cell target/x86-shared-tdep.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function x86_quickie_analyze_prologue()\par}
{\s5\f1\fs20\ql\sb50\sa50 CORE_ADDR x86_quickie_analyze_prologue ( CORE_ADDR func_start_addr, CORE_ADDR limit, struct x86_frame_cache* cache, int potentially_frameless )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell target/x86-shared-tdep.h\cell\cell\row
Calls: \cell read_memory()\cell corefile.c\cell\row
\cell safe_read_memory_unsigned_integer()\cell corefile.c\cell\row
\cell  memcmp()\cell\cell\row
Called by:\cell x86_frame_cache()\cell target/x86-shared-tdep.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function show_debug_x86bt()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void show_debug_x86bt ( struct ui_file* file, int from_tty, struct cmd_list_element* c, const char* value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell fprintf_filtered()\cell utils.c\cell\row
Used in:\cell _initialize_x86_shared_tdep()\cell target/x86-shared-tdep.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function x86_blocks_context_var_copy_pattern_p()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int x86_blocks_context_var_copy_pattern_p ( CORE_ADDR memaddr, int wordsize )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell length_of_this_instruction()\cell target/target.c\cell\row
\cell read_memory_unsigned_integer()\cell corefile.c\cell\row
\cell x86_mov_func_arg_to_reg_p()\cell target/x86-shared-tdep.c\cell\row
\cell x86_mov_reg_to_local_stack_frame_p()\cell target/x86-shared-tdep.c\cell\row
Called by:\cell x86_analyze_prologue()\cell target/x86-shared-tdep.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function x86_jump_insn_p()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int x86_jump_insn_p ( CORE_ADDR memaddr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell read_memory_unsigned_integer()\cell corefile.c\cell\row
Called by:\cell x86_analyze_prologue()\cell target/x86-shared-tdep.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function x86_mov_esp_ebp_pattern_p()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int x86_mov_esp_ebp_pattern_p ( CORE_ADDR memaddr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell read_memory_unsigned_integer()\cell corefile.c\cell\row
Called by:\cell x86_analyze_prologue()\cell target/x86-shared-tdep.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function x86_mov_func_arg_to_reg_p()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int x86_mov_func_arg_to_reg_p ( CORE_ADDR memaddr, int* regnum, int* offset )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell read_memory_unsigned_integer()\cell corefile.c\cell\row
Called by:\cell x86_blocks_context_var_copy_pattern_p()\cell target/x86-shared-tdep.c\cell\row
\cell x86_unopt_arg_copy_to_local_stack_p()\cell target/x86-shared-tdep.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function x86_mov_reg_to_local_stack_frame_p()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int x86_mov_reg_to_local_stack_frame_p ( CORE_ADDR memaddr, int* regnum, int* offset )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell read_memory_unsigned_integer()\cell corefile.c\cell\row
\cell  abs()\cell\cell\row
Called by:\cell x86_analyze_prologue()\cell target/x86-shared-tdep.c\cell\row
\cell x86_blocks_context_var_copy_pattern_p()\cell target/x86-shared-tdep.c\cell\row
\cell x86_unopt_arg_copy_to_local_stack_p()\cell target/x86-shared-tdep.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function x86_picbase_setup_pattern_p()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int x86_picbase_setup_pattern_p ( CORE_ADDR memaddr, int* regnum )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell length_of_this_instruction()\cell target/target.c\cell\row
\cell read_memory_unsigned_integer()\cell corefile.c\cell\row
Called by:\cell x86_analyze_prologue()\cell target/x86-shared-tdep.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function x86_pop_p()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int x86_pop_p ( CORE_ADDR memaddr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell read_memory_unsigned_integer()\cell corefile.c\cell\row
Called by:\cell x86_analyze_prologue()\cell target/x86-shared-tdep.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function x86_push_ebp_pattern_p()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int x86_push_ebp_pattern_p ( CORE_ADDR memaddr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell read_memory_unsigned_integer()\cell corefile.c\cell\row
Called by:\cell x86_analyze_prologue()\cell target/x86-shared-tdep.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function x86_push_reg_p()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int x86_push_reg_p ( CORE_ADDR memaddr, int* regnum )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell read_memory_unsigned_integer()\cell corefile.c\cell\row
Called by:\cell x86_analyze_prologue()\cell target/x86-shared-tdep.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function x86_ret_pattern_p()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int x86_ret_pattern_p ( CORE_ADDR memaddr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell read_memory_unsigned_integer()\cell corefile.c\cell\row
Called by:\cell x86_analyze_prologue()\cell target/x86-shared-tdep.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function x86_sub_esp_pattern_p()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int32_t x86_sub_esp_pattern_p ( CORE_ADDR memaddr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell read_memory_integer()\cell corefile.c\cell\row
\cell read_memory_unsigned_integer()\cell corefile.c\cell\row
Called by:\cell x86_analyze_prologue()\cell target/x86-shared-tdep.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function x86_unopt_arg_copy_to_local_stack_p()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int x86_unopt_arg_copy_to_local_stack_p ( CORE_ADDR memaddr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell length_of_this_instruction()\cell target/target.c\cell\row
\cell x86_mov_func_arg_to_reg_p()\cell target/x86-shared-tdep.c\cell\row
\cell x86_mov_reg_to_local_stack_frame_p()\cell target/x86-shared-tdep.c\cell\row
Called by:\cell x86_analyze_prologue()\cell target/x86-shared-tdep.c\cell\row
\intbl0
}
