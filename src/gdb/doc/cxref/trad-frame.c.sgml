<!DOCTYPE LINUXDOC SYSTEM>

<!-- This SGML file generated by cxref (version 1.6e). -->
<!-- cxref program (c) Andrew M. Bishop 1995-2014. -->

<!--
Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF trad-frame.c
CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
-->

<article>

<title>Cross reference for trad-frame.c of gdb.cxref.
<author>cxref

<sect>File trad-frame.c

<sect1>Included Files

<p>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<itemize>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
<item><tt>#include &lt;sys/time.h&gt;</tt>
<item><tt>#include &lt;time.h&gt;</tt>
<item><tt>#include &lt;sys/types.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
<item><tt>#include &lt;errno.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
<item><tt>#include &lt;regex.h&gt;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;unistd.h&gt;</tt>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;gdb_locale.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<item><tt>#include &lt;locale.h&gt;</tt>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../gdb/signals.h&quot;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &quot;../include/libiberty.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/symcat.h&quot;</tt>
</itemize>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
<item><tt>#include &quot;ui-file.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;xm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/xm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &lt;mach/mach.h&gt;</tt>
<item><tt>#include &lt;signal.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;nm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/i386/nm-i386.h&quot;</tt>
<item><tt>#include &quot;macosx/nm-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;tm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/tm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;macosx/i386-macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/i386-macosx-thread-status.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &lt;mach/mach_types.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
<item><tt>#include &lt;inttypes.h&gt;</tt>
<item><tt>#include &lt;mach/mach_vm.h&gt;</tt>
<item><tt>#include &lt;mach/kmod.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;macosx/tm-i386-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;../include/fopen-bin.h&quot;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdlib.h&gt;</tt>
<item><tt>#include &quot;gdbarch.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;frame.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/floatformat.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;gdb_regex.h&quot;</tt>
<itemize>
<item><tt>#include &lt;regex.h&gt;</tt>
</itemize>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;gdbtypes.h&quot;</tt>
<item><tt>#include &quot;expression.h&quot;</tt>
<itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
</itemize>
</itemize>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;trad-frame.h&quot;</tt>
<itemize>
<item><tt>#include &quot;frame.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;regcache.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;value.h&quot;</tt>
</itemize>

<sect1>Type struct trad_frame_cache

<p>
<itemize>
<item><tt>struct trad_frame_cache</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>struct frame_info* next_frame;</tt><newline>
<item><tt>CORE_ADDR this_base;</tt><newline>
<item><tt>struct trad_frame_saved_reg* prev_regs;</tt><newline>
<item><tt>struct frame_id this_id;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Global Function trad_frame_addr_p()

<p><tt>int trad_frame_addr_p ( struct trad_frame_saved_reg this_saved_regs[], int regnum )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>trad-frame.h
</itemize>
<tag>Called by:</tag>
<itemize>
<item>trad_frame_get_prev_register()  :  trad-frame.c
</itemize>
</descrip>

<sect1>Global Function trad_frame_alloc_saved_regs()

<p><tt>struct trad_frame_saved_reg* trad_frame_alloc_saved_regs ( struct frame_info* next_frame )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>trad-frame.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>frame_obstack_zalloc()  :  frame.c
<item>gdbarch_num_pseudo_regs()  :  gdbarch.c
<item>gdbarch_num_regs()  :  gdbarch.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>trad_frame_cache_zalloc()  :  trad-frame.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
</itemize>
</descrip>

<sect1>Global Function trad_frame_cache_zalloc()

<p><tt>struct trad_frame_cache* trad_frame_cache_zalloc ( struct frame_info* next_frame )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>trad-frame.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>frame_obstack_zalloc()  :  frame.c
<item>trad_frame_alloc_saved_regs()  :  trad-frame.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>tramp_frame_cache()  :  tramp-frame.c
</itemize>
</descrip>

<sect1>Global Function trad_frame_get_id()

<p><tt>void trad_frame_get_id ( struct trad_frame_cache* this_trad_cache, struct frame_id* this_id )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>trad-frame.h
</itemize>
<tag>Called by:</tag>
<itemize>
<item>tramp_frame_this_id()  :  tramp-frame.c
</itemize>
</descrip>

<sect1>Global Function trad_frame_get_prev_register()

<p><tt>void trad_frame_get_prev_register ( struct frame_info* next_frame, struct trad_frame_saved_reg this_saved_regs[], int regnum, enum opt_state* optimizedp, enum lval_type* lvalp, CORE_ADDR* addrp, int* realregp, gdb_byte* bufferp )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>trad-frame.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>frame_unwind_register()  :  frame.c
<item>gdbarch_register_name()  :  gdbarch.c
<item>get_frame_arch()  :  frame.c
<item>get_frame_memory()  :  frame.c
<item>register_size()  :  regcache.c
<item>store_unsigned_integer()  :  findvar.c
<item>trad_frame_addr_p()  :  trad-frame.c
<item>trad_frame_realreg_p()  :  trad-frame.c
<item>trad_frame_value_p()  :  trad-frame.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>trad_frame_get_register()  :  trad-frame.c
</itemize>
</descrip>

<sect1>Global Function trad_frame_get_register()

<p><tt>void trad_frame_get_register ( struct trad_frame_cache* this_trad_cache, struct frame_info* next_frame, int regnum, enum opt_state* optimizedp, enum lval_type* lvalp, CORE_ADDR* addrp, int* realregp, gdb_byte* bufferp )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>trad-frame.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>trad_frame_get_prev_register()  :  trad-frame.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>tramp_frame_prev_register()  :  tramp-frame.c
</itemize>
</descrip>

<sect1>Global Function trad_frame_get_this_base()

<p><tt>CORE_ADDR trad_frame_get_this_base ( struct trad_frame_cache* this_trad_cache )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>trad-frame.h
</itemize>
</descrip>

<sect1>Global Function trad_frame_realreg_p()

<p><tt>int trad_frame_realreg_p ( struct trad_frame_saved_reg this_saved_regs[], int regnum )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>trad-frame.h
</itemize>
<tag>Called by:</tag>
<itemize>
<item>trad_frame_get_prev_register()  :  trad-frame.c
</itemize>
</descrip>

<sect1>Global Function trad_frame_set_id()

<p><tt>void trad_frame_set_id ( struct trad_frame_cache* this_trad_cache, struct frame_id this_id )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>trad-frame.h
</itemize>
</descrip>

<sect1>Global Function trad_frame_set_reg_addr()

<p><tt>void trad_frame_set_reg_addr ( struct trad_frame_cache* this_trad_cache, int regnum, CORE_ADDR addr )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>trad-frame.h
</itemize>
</descrip>

<sect1>Global Function trad_frame_set_reg_realreg()

<p><tt>void trad_frame_set_reg_realreg ( struct trad_frame_cache* this_trad_cache, int regnum, int realreg )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>trad-frame.h
</itemize>
</descrip>

<sect1>Global Function trad_frame_set_reg_value()

<p><tt>void trad_frame_set_reg_value ( struct trad_frame_cache* this_trad_cache, int regnum, long val )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>trad-frame.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>trad_frame_set_value()  :  trad-frame.c
</itemize>
</descrip>

<sect1>Global Function trad_frame_set_this_base()

<p><tt>void trad_frame_set_this_base ( struct trad_frame_cache* this_trad_cache, CORE_ADDR this_base )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>trad-frame.h
</itemize>
</descrip>

<sect1>Global Function trad_frame_set_unknown()

<p><tt>void trad_frame_set_unknown ( struct trad_frame_saved_reg this_saved_regs[], int regnum )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>trad-frame.h
</itemize>
</descrip>

<sect1>Global Function trad_frame_set_value()

<p><tt>void trad_frame_set_value ( struct trad_frame_saved_reg this_saved_regs[], int regnum, long val )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>trad-frame.h
</itemize>
<tag>Called by:</tag>
<itemize>
<item>trad_frame_set_reg_value()  :  trad-frame.c
</itemize>
</descrip>

<sect1>Global Function trad_frame_value_p()

<p><tt>int trad_frame_value_p ( struct trad_frame_saved_reg this_saved_regs[], int regnum )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>trad-frame.h
</itemize>
<tag>Called by:</tag>
<itemize>
<item>trad_frame_get_prev_register()  :  trad-frame.c
</itemize>
</descrip>

</article>
