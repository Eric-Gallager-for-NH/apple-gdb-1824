{\rtf\ansi
\deff0
{\fonttbl
{\f0\froman Times New Roman;}
{\f1\fmodern Courier New;}
}
{\stylesheet
{\s0\f0\fs24 Normal;}
{\s1\f0\fs40\b\sb400\sa200\keepn\keep Heading 1;}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Heading 2;}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Heading 3;}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Heading 4;}
{\s5\f1\fs20\ql\sb50\sa50 Code;}
}
{\info{\comment
 This RTF file generated by cxref (version 1.6e).
 cxref program (c) Andrew M. Bishop 1995-2014.
 Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF objfiles.c
 CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
}}
\paperw11880\paperh16848\margl1440\margr1440\margt1440\margb1440
\sectd\plain
\s0\f0\fs24
{\s1\f0\fs40\b\sb400\sa200\keepn\keep File objfiles.c\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Included Files\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <errno.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <unistd.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_locale.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <locale.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../gdb/signals.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/symcat.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-file.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "xm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/xm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "nm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/i386/nm-i386.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/nm-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "tm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/tm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-tdep.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-tdep.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-thread-status.h"\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_types.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <inttypes.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_vm.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/kmod.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/tm-i386-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/fopen-bin.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdlib.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbarch.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "symfile.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "objfiles.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <uuid/uuid.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_obstack.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/obstack.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symfile.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "inlining.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <block.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/floatformat.h"\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_regex.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "gdbtypes.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "expression.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sqlite3.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb-stabs.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "target.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "dcache.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "memattr.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdbcmd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "command.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-out.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "bcache.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "mdebugread.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/coff/sym.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/coff/symconst.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_assert.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_stat.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/stat.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <fcntl.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_obstack.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_string.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "buildsym.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../include/hashtab.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "varobj.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbtypes.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "breakpoint.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb-events.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "block.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "dictionary.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "objc-lang.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <Availability.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-nat-inferior.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-nat-threads.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <pthread.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-nat-sigthread.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-nat-mutils.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "memattr.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "target.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "inferior.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "breakpoint.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "target.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-nat-utils.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-nat-threads.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <sys/wait.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-nat-excthread.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-nat-mutils.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-nat-threads.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <mach/thread_status.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <sys/wait.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-nat-dyld.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-nat-mutils.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-nat-threads.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <mach/machine.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <mach-o/loader.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-nat-dyld-info.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <mach/machine.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <mach-o/loader.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-nat-dyld-path.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-nat-dyld-info.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "target.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "checkpoint.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "db-access-functions.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sqlite3.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "objfiles.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "inferior.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-nat-dyld.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/mach-o.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <mach-o/loader.h>\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Preprocessor definitions\par}
{\s5\f1\fs20\ql\sb50\sa50 #define TARGET_KEEP_SECTION( ASECT )\par}
{\s5\f1\fs20\ql\sb50\sa50 #define ORDERED_SECTIONS_CHUNK_SIZE 3000\par}
{\s5\f1\fs20\ql\sb50\sa50 #define STATIC_DELETE_LIST_SIZE 256\par}
{\s5\f1\fs20\ql\sb50\sa50 #define STATIC_INSERT_LIST_SIZE 256\par}
{\s5\f1\fs20\ql\sb50\sa50 #define HITLIST_INITIAL_MAX_ELEM 1\par}
{\s5\f1\fs20\ql\sb50\sa50 #define MSYMBOL_THUMB_FUNCTION 0x80000000\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Type definitions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct ordered_obj_section\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct ordered_obj_section}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct obj_section* obj_section;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct bfd_section* the_bfd_section;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 CORE_ADDR addr;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 CORE_ADDR endaddr;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct obj_section_with_index\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct obj_section_with_index}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int index;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct obj_section* section;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct swap_objfile_list_cleanup\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct swap_objfile_list_cleanup}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct objfile_list* old_list;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int restrict_state;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct objfile_data\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct objfile_data}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 unsigned int index;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct objfile_data_registration\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct objfile_data_registration}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct objfile_data* data;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct objfile_data_registration* next;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct objfile_data_registry\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct objfile_data_registry}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct objfile_data_registration* registrations;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 unsigned num_registrations;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct objfile_hitlist\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct objfile_hitlist}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 int num_elem;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct objfile* ofiles[];}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Variables\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable current_objfile\par}
{\s5\f1\fs20\ql\sb50\sa50 struct objfile* current_objfile\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell ada-exp.c\cell\cell\row
\cell ada-lang.c\cell\cell\row
\cell ada-typeprint.c\cell\cell\row
\cell ada-valprint.c\cell\cell\row
\cell arch-utils.c\cell\cell\row
\cell ax-gdb.c\cell\cell\row
\cell ax-general.c\cell\cell\row
\cell bcache.c\cell\cell\row
\cell bfd-target.c\cell\cell\row
\cell block.c\cell\cell\row
\cell blockframe.c\cell\cell\row
\cell breakpoint.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell c-exp.c\cell\cell\row
\cell c-lang.c\cell\cell\row
\cell c-typeprint.c\cell\cell\row
\cell c-valprint.c\cell\cell\row
\cell charset.c\cell\cell\row
\cell cli-out.c\cell\cell\row
\cell coff-pe-read.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell complaints.c\cell\cell\row
\cell completer.c\cell\cell\row
\cell corefile.c\cell\cell\row
\cell cp-abi.c\cell\cell\row
\cell cp-namespace.c\cell\cell\row
\cell cp-support.c\cell\cell\row
\cell cp-valprint.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell demangle.c\cell\cell\row
\cell dictionary.c\cell\cell\row
\cell disasm.c\cell\cell\row
\cell doublest.c\cell\cell\row
\cell dummy-frame.c\cell\cell\row
\cell dwarf2-frame.c\cell\cell\row
\cell dwarf2expr.c\cell\cell\row
\cell dwarf2loc.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell environ.c\cell\cell\row
\cell eval.c\cell\cell\row
\cell event-loop.c\cell\cell\row
\cell event-top.c\cell\cell\row
\cell expprint.c\cell\cell\row
\cell f-exp.c\cell\cell\row
\cell f-lang.c\cell\cell\row
\cell f-typeprint.c\cell\cell\row
\cell f-valprint.c\cell\cell\row
\cell findvar.c\cell\cell\row
\cell frame-base.c\cell\cell\row
\cell frame-unwind.c\cell\cell\row
\cell frame.c\cell\cell\row
\cell gdbarch.c\cell\cell\row
\cell gdbtypes.c\cell\cell\row
\cell gnu-v2-abi.c\cell\cell\row
\cell gnu-v3-abi.c\cell\cell\row
\cell hpacc-abi.c\cell\cell\row
\cell inf-loop.c\cell\cell\row
\cell infcall.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell inflow.c\cell\cell\row
\cell infrun.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell interps.c\cell\cell\row
\cell jv-exp.c\cell\cell\row
\cell jv-lang.c\cell\cell\row
\cell jv-typeprint.c\cell\cell\row
\cell jv-valprint.c\cell\cell\row
\cell kod-cisco.c\cell\cell\row
\cell kod.c\cell\cell\row
\cell language.c\cell\cell\row
\cell linespec.c\cell\cell\row
\cell m2-exp.c\cell\cell\row
\cell m2-lang.c\cell\cell\row
\cell m2-typeprint.c\cell\cell\row
\cell m2-valprint.c\cell\cell\row
\cell macrocmd.c\cell\cell\row
\cell macroexp.c\cell\cell\row
\cell macroscope.c\cell\cell\row
\cell macrotab.c\cell\cell\row
\cell main.c\cell\cell\row
\cell maint.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell mem-break.c\cell\cell\row
\cell memattr.c\cell\cell\row
\cell minsyms.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objc-exp.c\cell\cell\row
\cell objc-lang.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell observer.c\cell\cell\row
\cell osabi.c\cell\cell\row
\cell p-exp.c\cell\cell\row
\cell p-lang.c\cell\cell\row
\cell p-typeprint.c\cell\cell\row
\cell p-valprint.c\cell\cell\row
\cell parse.c\cell\cell\row
\cell printcmd.c\cell\cell\row
\cell regcache.c\cell\cell\row
\cell reggroups.c\cell\cell\row
\cell remote-fileio.c\cell\cell\row
\cell remote.c\cell\cell\row
\cell scm-exp.c\cell\cell\row
\cell scm-lang.c\cell\cell\row
\cell scm-valprint.c\cell\cell\row
\cell sentinel-frame.c\cell\cell\row
\cell ser-base.c\cell\cell\row
\cell ser-unix.c\cell\cell\row
\cell serial.c\cell\cell\row
\cell solib-null.c\cell\cell\row
\cell solib.c\cell\cell\row
\cell source.c\cell\cell\row
\cell stabsread.c\cell\cell\row
\cell stack.c\cell\cell\row
\cell std-regs.c\cell\cell\row
\cell symfile-mem.c\cell\cell\row
\cell symfile.c\cell\cell\row
\cell symmisc.c\cell\cell\row
\cell symtab.c\cell\cell\row
\cell target/target.c\cell\cell\row
\cell target/x86-shared-tdep.c\cell\cell\row
\cell thread.c\cell\cell\row
\cell top.c\cell\cell\row
\cell tracepoint.c\cell\cell\row
\cell trad-frame.c\cell\cell\row
\cell tramp-frame.c\cell\cell\row
\cell typeprint.c\cell\cell\row
\cell ui-file.c\cell\cell\row
\cell ui-out.c\cell\cell\row
\cell user-regs.c\cell\cell\row
\cell utils.c\cell\cell\row
\cell valarith.c\cell\cell\row
\cell valops.c\cell\cell\row
\cell valprint.c\cell\cell\row
\cell value.c\cell\cell\row
\cell varobj.c\cell\cell\row
\cell wrapper.c\cell\cell\row
Used in:\cell add_new_header_file()\cell dbxread.c\cell\row
\cell add_old_header_file()\cell dbxread.c\cell\row
\cell add_pending()\cell mdebugread.c\cell\row
\cell alloc_utype()\cell dwarfread.c\cell\row
\cell coff_alloc_type()\cell coffread.c\cell\row
\cell coff_read_enum_type()\cell coffread.c\cell\row
\cell coff_read_struct_type()\cell coffread.c\cell\row
\cell coff_symtab_read()\cell coffread.c\cell\row
\cell cross_ref()\cell mdebugread.c\cell\row
\cell dbx_lookup_type()\cell stabsread.c\cell\row
\cell decode_array_element_type()\cell dwarfread.c\cell\row
\cell decode_base_type()\cell coffread.c\cell\row
\cell decode_die_type()\cell dwarfread.c\cell\row
\cell decode_fund_type()\cell dwarfread.c\cell\row
\cell decode_line_numbers()\cell dwarfread.c\cell\row
\cell decode_mod_fund_type()\cell dwarfread.c\cell\row
\cell decode_mod_u_d_type()\cell dwarfread.c\cell\row
\cell decode_modified_type()\cell dwarfread.c\cell\row
\cell decode_subscript_data_item()\cell dwarfread.c\cell\row
\cell decode_type()\cell coffread.c\cell\row
\cell dwarf_build_psymtabs()\cell dwarfread.c\cell\row
\cell dwarf_read_array_type()\cell dwarfread.c\cell\row
\cell locval()\cell dwarfread.c\cell\row
\cell new_symbol()\cell mdebugread.c\cell\row
\cell new_type()\cell mdebugread.c\cell\row
\cell parse_symbol()\cell mdebugread.c\cell\row
\cell parse_type()\cell mdebugread.c\cell\row
\cell process_coff_symbol()\cell coffread.c\cell\row
\cell psymtab_to_symtab_1()\cell mdebugread.c\cell\row
\cell read_ofile_symtab()\cell dwarfread.c\cell\row
\cell read_ofile_symtab_from_oso()\cell dbxread.c\cell\row
\cell read_tag_string_type()\cell dwarfread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable symfile_objfile\par}
{\s5\f1\fs20\ql\sb50\sa50 struct objfile* symfile_objfile\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell ada-exp.c\cell\cell\row
\cell ada-lang.c\cell\cell\row
\cell blockframe.c\cell\cell\row
\cell breakpoint.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell c-exp.c\cell\cell\row
\cell coff-pe-read.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell corefile.c\cell\cell\row
\cell cp-namespace.c\cell\cell\row
\cell cp-support.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell dwarf2-frame.c\cell\cell\row
\cell dwarf2expr.c\cell\cell\row
\cell dwarf2loc.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell f-exp.c\cell\cell\row
\cell frame.c\cell\cell\row
\cell gdbtypes.c\cell\cell\row
\cell infcall.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell infrun.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell jv-exp.c\cell\cell\row
\cell jv-lang.c\cell\cell\row
\cell linespec.c\cell\cell\row
\cell m2-exp.c\cell\cell\row
\cell macrotab.c\cell\cell\row
\cell maint.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell minsyms.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objc-exp.c\cell\cell\row
\cell objc-lang.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell p-exp.c\cell\cell\row
\cell printcmd.c\cell\cell\row
\cell remote.c\cell\cell\row
\cell solib.c\cell\cell\row
\cell source.c\cell\cell\row
\cell stabsread.c\cell\cell\row
\cell stack.c\cell\cell\row
\cell symfile-mem.c\cell\cell\row
\cell symfile.c\cell\cell\row
\cell symmisc.c\cell\cell\row
\cell symtab.c\cell\cell\row
\cell target/target.c\cell\cell\row
\cell target/x86-shared-tdep.c\cell\cell\row
\cell tramp-frame.c\cell\cell\row
\cell varobj.c\cell\cell\row
Used in:\cell add_symbol_file_from_memory_command()\cell symfile-mem.c\cell\row
\cell addr_inside_main_func()\cell blockframe.c\cell\row
\cell entry_point_address()\cell objfiles.c\cell\row
\cell get_offsets()\cell remote.c\cell\row
\cell get_symbol_leading_char()\cell minsyms.c\cell\row
\cell new_symfile_objfile()\cell symfile.c\cell\row
\cell remote_macosx_complete_create_or_attach()\cell remote.c\cell\row
\cell remote_macosx_open()\cell remote.c\cell\row
\cell remote_open_1()\cell remote.c\cell\row
\cell reread_symbols_for_objfile()\cell symfile.c\cell\row
\cell scan_file_globals()\cell stabsread.c\cell\row
\cell symbol_file_add_with_addrs_or_offsets_using_objfile()\cell symfile.c\cell\row
\cell symbol_file_clear()\cell symfile.c\cell\row
\cell syms_from_objfile()\cell symfile.c\cell\row
\cell target_info()\cell target/target.c\cell\row
\cell update_solib_list()\cell solib.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable rt_common_objfile\par}
{\s5\f1\fs20\ql\sb50\sa50 struct objfile* rt_common_objfile\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell ada-exp.c\cell\cell\row
\cell ada-lang.c\cell\cell\row
\cell blockframe.c\cell\cell\row
\cell breakpoint.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell c-exp.c\cell\cell\row
\cell coff-pe-read.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell corefile.c\cell\cell\row
\cell cp-namespace.c\cell\cell\row
\cell cp-support.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell dwarf2-frame.c\cell\cell\row
\cell dwarf2expr.c\cell\cell\row
\cell dwarf2loc.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell f-exp.c\cell\cell\row
\cell frame.c\cell\cell\row
\cell gdbtypes.c\cell\cell\row
\cell infcall.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell infrun.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell jv-exp.c\cell\cell\row
\cell jv-lang.c\cell\cell\row
\cell linespec.c\cell\cell\row
\cell m2-exp.c\cell\cell\row
\cell macrotab.c\cell\cell\row
\cell maint.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell minsyms.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objc-exp.c\cell\cell\row
\cell objc-lang.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell p-exp.c\cell\cell\row
\cell printcmd.c\cell\cell\row
\cell remote.c\cell\cell\row
\cell solib.c\cell\cell\row
\cell source.c\cell\cell\row
\cell stabsread.c\cell\cell\row
\cell stack.c\cell\cell\row
\cell symfile-mem.c\cell\cell\row
\cell symfile.c\cell\cell\row
\cell symmisc.c\cell\cell\row
\cell symtab.c\cell\cell\row
\cell target/target.c\cell\cell\row
\cell target/x86-shared-tdep.c\cell\cell\row
\cell tramp-frame.c\cell\cell\row
\cell varobj.c\cell\cell\row
Used in:\cell free_objfile_internal()\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable object_files\par}
{\s5\f1\fs20\ql\sb50\sa50 struct objfile* object_files\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell ada-exp.c\cell\cell\row
\cell ada-lang.c\cell\cell\row
\cell blockframe.c\cell\cell\row
\cell breakpoint.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell c-exp.c\cell\cell\row
\cell coff-pe-read.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell corefile.c\cell\cell\row
\cell cp-namespace.c\cell\cell\row
\cell cp-support.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell dwarf2-frame.c\cell\cell\row
\cell dwarf2expr.c\cell\cell\row
\cell dwarf2loc.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell f-exp.c\cell\cell\row
\cell frame.c\cell\cell\row
\cell gdbtypes.c\cell\cell\row
\cell infcall.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell infrun.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell jv-exp.c\cell\cell\row
\cell jv-lang.c\cell\cell\row
\cell linespec.c\cell\cell\row
\cell m2-exp.c\cell\cell\row
\cell macrotab.c\cell\cell\row
\cell maint.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell minsyms.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objc-exp.c\cell\cell\row
\cell objc-lang.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell p-exp.c\cell\cell\row
\cell printcmd.c\cell\cell\row
\cell remote.c\cell\cell\row
\cell solib.c\cell\cell\row
\cell source.c\cell\cell\row
\cell stabsread.c\cell\cell\row
\cell stack.c\cell\cell\row
\cell symfile-mem.c\cell\cell\row
\cell symfile.c\cell\cell\row
\cell symmisc.c\cell\cell\row
\cell symtab.c\cell\cell\row
\cell target/target.c\cell\cell\row
\cell target/x86-shared-tdep.c\cell\cell\row
\cell tramp-frame.c\cell\cell\row
\cell varobj.c\cell\cell\row
Used in:\cell link_objfile()\cell objfiles.c\cell\row
\cell lookup_minimal_symbol_by_pc_section()\cell minsyms.c\cell\row
\cell lookup_minimal_symbol_solib_trampoline()\cell minsyms.c\cell\row
\cell objfile_get_first()\cell objfiles.c\cell\row
\cell objfile_to_front()\cell objfiles.c\cell\row
\cell put_objfile_before()\cell objfiles.c\cell\row
\cell unlink_objfile()\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable objfile_list\par}
{\s5\f1\fs20\ql\sb50\sa50 struct objfile_list* objfile_list\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell ada-exp.c\cell\cell\row
\cell ada-lang.c\cell\cell\row
\cell blockframe.c\cell\cell\row
\cell breakpoint.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell c-exp.c\cell\cell\row
\cell coff-pe-read.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell corefile.c\cell\cell\row
\cell cp-namespace.c\cell\cell\row
\cell cp-support.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell dwarf2-frame.c\cell\cell\row
\cell dwarf2expr.c\cell\cell\row
\cell dwarf2loc.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell f-exp.c\cell\cell\row
\cell frame.c\cell\cell\row
\cell gdbtypes.c\cell\cell\row
\cell infcall.c\cell\cell\row
\cell infcmd.c\cell\cell\row
\cell infrun.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell jv-exp.c\cell\cell\row
\cell jv-lang.c\cell\cell\row
\cell linespec.c\cell\cell\row
\cell m2-exp.c\cell\cell\row
\cell macrotab.c\cell\cell\row
\cell maint.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell minsyms.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objc-exp.c\cell\cell\row
\cell objc-lang.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell p-exp.c\cell\cell\row
\cell printcmd.c\cell\cell\row
\cell remote.c\cell\cell\row
\cell solib.c\cell\cell\row
\cell source.c\cell\cell\row
\cell stabsread.c\cell\cell\row
\cell stack.c\cell\cell\row
\cell symfile-mem.c\cell\cell\row
\cell symfile.c\cell\cell\row
\cell symmisc.c\cell\cell\row
\cell symtab.c\cell\cell\row
\cell target/target.c\cell\cell\row
\cell target/x86-shared-tdep.c\cell\cell\row
\cell tramp-frame.c\cell\cell\row
\cell varobj.c\cell\cell\row
Used in:\cell do_cleanup_restrict_to_objfile()\cell objfiles.c\cell\row
\cell make_cleanup_restrict_to_objfile()\cell objfiles.c\cell\row
\cell make_cleanup_restrict_to_objfile_by_name()\cell objfiles.c\cell\row
\cell objfile_add_to_restrict_list()\cell objfiles.c\cell\row
\cell objfile_clear_restrict_list()\cell objfiles.c\cell\row
\cell objfile_get_first()\cell objfiles.c\cell\row
\cell objfile_get_next()\cell objfiles.c\cell\row
\cell objfile_remove_from_restrict_list()\cell objfiles.c\cell\row
\cell objfile_set_restrict_list()\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable mapped_symbol_files\par}
{\s5\f1\fs20\ql\sb50\sa50 int mapped_symbol_files\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell objfiles.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable use_mapped_symbol_files\par}
{\s5\f1\fs20\ql\sb50\sa50 int use_mapped_symbol_files\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Visible in:\cell objfiles.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep External Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable setshliblist\par}
{\s5\f1\fs20\ql\sb50\sa50 extern struct cmd_list_element* setshliblist\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep External Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable showshliblist\par}
{\s5\f1\fs20\ql\sb50\sa50 extern struct cmd_list_element* showshliblist\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep External Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable infoshliblist\par}
{\s5\f1\fs20\ql\sb50\sa50 extern struct cmd_list_element* infoshliblist\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep External Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable shliblist\par}
{\s5\f1\fs20\ql\sb50\sa50 extern struct cmd_list_element* shliblist\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable cached_symfile_path\par}
{\s5\f1\fs20\ql\sb50\sa50 static char* cached_symfile_path\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_objfiles()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable ordered_sections\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct ordered_obj_section* ordered_sections\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell find_in_ordered_sections_index()\cell\cell\row
\cell find_pc_sect_in_ordered_sections()\cell\cell\row
\cell get_insert_index_in_ordered_sections()\cell\cell\row
\cell objfile_add_to_ordered_sections()\cell\cell\row
\cell objfile_delete_from_ordered_sections()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable num_ordered_sections\par}
{\s5\f1\fs20\ql\sb50\sa50 static int num_ordered_sections\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell find_in_ordered_sections_index()\cell\cell\row
\cell get_insert_index_in_ordered_sections()\cell\cell\row
\cell objfile_add_to_ordered_sections()\cell\cell\row
\cell objfile_delete_from_ordered_sections()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable max_num_ordered_sections\par}
{\s5\f1\fs20\ql\sb50\sa50 static int max_num_ordered_sections\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell objfile_add_to_ordered_sections()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable objfile_list_ptr\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct objfile_list* objfile_list_ptr\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell objfile_get_first()\cell\cell\row
\cell objfile_get_next()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable restrict_search\par}
{\s5\f1\fs20\ql\sb50\sa50 static int restrict_search\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell objfile_get_first()\cell\cell\row
\cell objfile_get_next()\cell\cell\row
\cell objfile_restrict_search()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable should_auto_raise_load_state\par}
{\s5\f1\fs20\ql\sb50\sa50 static int should_auto_raise_load_state\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_objfiles()\cell\cell\row
\cell objfile_name_set_load_state()\cell\cell\row
\cell objfile_set_load_state()\cell\cell\row
\cell pc_set_load_state()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable objfile_data_registry\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct objfile_data_registry objfile_data_registry\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell get_objfile_registry_num_registrations()\cell\cell\row
\cell objfile_alloc_data()\cell\cell\row
\cell register_objfile_data()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable cur_objfile_hitlist\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct objfile_hitlist* cur_objfile_hitlist\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell objfile_add_to_hitlist()\cell\cell\row
\cell objfile_detach_hitlist()\cell\cell\row
\cell objfile_init_hitlist()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable hitlist_max_elem\par}
{\s5\f1\fs20\ql\sb50\sa50 static int hitlist_max_elem\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell objfile_add_to_hitlist()\cell\cell\row
\cell objfile_detach_hitlist()\cell\cell\row
\cell objfile_init_hitlist()\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Functions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function _initialize_objfiles()\par}
{\s5\f1\fs20\ql\sb50\sa50 void _initialize_objfiles ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.c\cell\cell\row
Calls: \cell  add_setshow_boolean_cmd(), xstrdup()\cell\cell\row
Refs Var:\cell cached_symfile_path\cell objfiles.c\cell\row
\cell should_auto_raise_load_state\cell objfiles.c\cell\row
\cell  setlist, showlist\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function allocate_objfile()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct objfile* allocate_objfile ( bfd* abfd, int flags, int symflags, CORE_ADDR mapaddr, const char* prefix )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell allocate_objfile_internal()\cell objfiles.c\cell\row
\cell create_objfile()\cell objfiles.c\cell\row
\cell link_objfile()\cell objfiles.c\cell\row
Called by:\cell get_dynamics_objfile()\cell jv-lang.c\cell\row
\cell symbol_file_add_with_addrs_or_offsets_using_objfile()\cell symfile.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function allocate_objfile_using_objfile()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct objfile* allocate_objfile_using_objfile ( struct objfile* objfile, bfd* abfd, int flags, int symflags, CORE_ADDR mapaddr, const char* prefix )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell allocate_objfile_internal()\cell objfiles.c\cell\row
\cell create_objfile_using_objfile()\cell objfiles.c\cell\row
Called by:\cell symbol_file_add_with_addrs_or_offsets_using_objfile()\cell symfile.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function build_objfile_section_table()\par}
{\s5\f1\fs20\ql\sb50\sa50 int build_objfile_section_table ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell objfile_add_to_ordered_sections()\cell objfiles.c\cell\row
\cell objfile_keeps_section()\cell objfiles.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
Called by:\cell allocate_objfile_internal()\cell objfiles.c\cell\row
\cell reread_symbols_for_objfile()\cell symfile.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function clear_objfile()\par}
{\s5\f1\fs20\ql\sb50\sa50 void clear_objfile ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell clear_objfile()\cell objfiles.c\cell\row
\cell free_objfile_internal()\cell objfiles.c\cell\row
\cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk()\cell\cell\row
Called by:\cell clear_objfile()\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function clear_objfile_data()\par}
{\s5\f1\fs20\ql\sb50\sa50 void clear_objfile_data ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell internal_error()\cell utils.c\cell\row
\cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk()\cell\cell\row
Called by:\cell reread_symbols_for_objfile()\cell symfile.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function clear_restrict_list()\par}
{\s5\f1\fs20\ql\sb50\sa50 void clear_restrict_list ( struct objfile_list** requested_list_head )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell xfree()\cell utils.c\cell\row
Called by:\cell make_cleanup_restrict_to_shlib()\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function create_objfile()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct objfile* create_objfile ( bfd* abfd )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.c\cell\cell\row
Calls: \cell create_objfile_using_objfile()\cell objfiles.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk()\cell\cell\row
Called by:\cell allocate_objfile()\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function create_objfile_using_objfile()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct objfile* create_objfile_using_objfile ( struct objfile* objfile, bfd* abfd )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.c\cell\cell\row
Calls: \cell bcache_specify_allocation()\cell bcache.c\cell\row
\cell bcache_xmalloc()\cell bcache.c\cell\row
\cell objfile_alloc_data()\cell objfiles.c\cell\row
\cell  _obstack_begin()\cell\cell\row
Called by:\cell allocate_objfile_using_objfile()\cell objfiles.c\cell\row
\cell create_objfile()\cell objfiles.c\cell\row
Refs Func:\cell xfree()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function do_cleanup_restrict_to_objfile()\par}
{\s5\f1\fs20\ql\sb50\sa50 void do_cleanup_restrict_to_objfile ( void* arg )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell objfile_clear_restrict_list()\cell objfiles.c\cell\row
\cell objfile_restrict_search()\cell objfiles.c\cell\row
Used in:\cell make_cleanup_restrict_to_objfile()\cell objfiles.c\cell\row
\cell make_cleanup_restrict_to_objfile_by_name()\cell objfiles.c\cell\row
\cell make_cleanup_restrict_to_objfile_list()\cell objfiles.c\cell\row
Refs Var:\cell objfile_list\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function entry_point_address()\par}
{\s5\f1\fs20\ql\sb50\sa50 CORE_ADDR entry_point_address ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Called by:\cell hand_function_call()\cell infcall.c\cell\row
\cell inside_entry_func()\cell frame.c\cell\row
Refs Var:\cell symfile_objfile\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function executable_objfile()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct objfile* executable_objfile ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Called by:\cell append_psymbols_as_msymbols()\cell symfile.c\cell\row
\cell breakpoints_relocate()\cell breakpoint.c\cell\row
\cell coff_end_symtab()\cell coffread.c\cell\row
\cell coff_symtab_read()\cell coffread.c\cell\row
\cell cs_to_section()\cell coffread.c\cell\row
\cell define_symbol()\cell stabsread.c\cell\row
\cell elf_symtab_read()\cell elfread.c\cell\row
\cell find_libobjc_objfile()\cell objc-lang.c\cell\row
\cell get_offsets()\cell remote.c\cell\row
\cell inlined_subroutine_objfile_relocate()\cell inlining.c\cell\row
\cell objfile_bss_section_offset()\cell objfiles.c\cell\row
\cell objfile_data_section_offset()\cell objfiles.c\cell\row
\cell objfile_relocate()\cell objfiles.c\cell\row
\cell objfile_rodata_section_offset()\cell objfiles.c\cell\row
\cell objfile_section_offset()\cell objfiles.c\cell\row
\cell objfile_text_section_offset()\cell objfiles.c\cell\row
\cell parse_partial_symbols()\cell mdebugread.c\cell\row
\cell parse_symbol()\cell mdebugread.c\cell\row
\cell prim_record_minimal_symbol()\cell minsyms.c\cell\row
\cell process_full_comp_unit()\cell dwarf2read.c\cell\row
\cell process_one_symbol()\cell dbxread.c\cell\row
\cell psymtab_to_symtab_1()\cell mdebugread.c\cell\row
\cell read_alphacoff_dynamic_symtab()\cell mipsread.c\cell\row
\cell read_dbx_symtab()\cell dbxread.c\cell\row
\cell read_ofile_symtab()\cell dbxread.c\cell\row
\cell read_ofile_symtab_from_oso()\cell dbxread.c\cell\row
\cell record_minimal_symbol()\cell mdebugread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function find_objfile_by_name()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct objfile* find_objfile_by_name ( const char* name, int exact )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell objfile_get_first()\cell objfiles.c\cell\row
\cell objfile_get_next()\cell objfiles.c\cell\row
\cell objfile_matches_name()\cell objfiles.c\cell\row
\cell  __builtin___strcpy_chk(), __builtin_object_size(), __inline_strcpy_chk(), strchr(), strcmp(), strlen(), strncmp(), strstr()\cell\cell\row
Called by:\cell find_libobjc_objfile()\cell objc-lang.c\cell\row
\cell make_cleanup_restrict_to_objfile_by_name()\cell objfiles.c\cell\row
\cell resolve_pending_breakpoint()\cell breakpoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function find_objfile_by_uuid()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct objfile* find_objfile_by_uuid ( uuid_t uuid )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell objfile_get_first()\cell objfiles.c\cell\row
\cell objfile_get_next()\cell objfiles.c\cell\row
\cell  bfd_mach_o_get_uuid(), memcmp()\cell\cell\row
Called by:\cell find_kext_loadaddrs_from_kernel()\cell symfile.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function find_pc_sect_in_ordered_sections()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct obj_section* find_pc_sect_in_ordered_sections ( CORE_ADDR addr, struct bfd_section* bfd_section )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell find_in_ordered_sections_index()\cell objfiles.c\cell\row
Called by:\cell build_address_symbolic()\cell printcmd.c\cell\row
\cell find_pc_sect_section()\cell objfiles.c\cell\row
\cell lookup_minimal_symbol_by_pc_section()\cell minsyms.c\cell\row
\cell memory_xfer_partial()\cell target/target.c\cell\row
Refs Var:\cell ordered_sections\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function find_pc_sect_section()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct obj_section* find_pc_sect_section ( CORE_ADDR pc, struct bfd_section* section )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell find_pc_sect_in_ordered_sections()\cell objfiles.c\cell\row
\cell objfile_get_first()\cell objfiles.c\cell\row
\cell objfile_get_next()\cell objfiles.c\cell\row
Called by:\cell addr_inside_main_func()\cell blockframe.c\cell\row
\cell breakpoint_re_set_one()\cell breakpoint.c\cell\row
\cell find_equivalent_msymbol()\cell symmisc.c\cell\row
\cell find_pc_partial_function_impl()\cell blockframe.c\cell\row
\cell find_pc_section()\cell objfiles.c\cell\row
\cell print_inlined_frames_lite()\cell inlining.c\cell\row
\cell set_bp_objfile()\cell breakpoint.c\cell\row
Refs Var:\cell cached_mapped_section\cell symtab.c\cell\row
\cell cached_sect_section\cell symtab.c\cell\row
\cell last_mapped_section_lookup_pc\cell symtab.c\cell\row
\cell last_sect_section_lookup_pc\cell symtab.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function find_pc_section()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct obj_section* find_pc_section ( CORE_ADDR pc )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell find_pc_mapped_section()\cell symfile.c\cell\row
\cell find_pc_sect_section()\cell objfiles.c\cell\row
Called by:\cell breakpoint_re_set_one()\cell breakpoint.c\cell\row
\cell find_pc_partial_function_impl()\cell blockframe.c\cell\row
\cell func_sym_is_inlined_function()\cell inlining.c\cell\row
\cell get_pc_function_start()\cell blockframe.c\cell\row
\cell in_plt_section()\cell objfiles.c\cell\row
\cell lookup_minimal_symbol_by_pc_section()\cell minsyms.c\cell\row
\cell objfile_relocate()\cell objfiles.c\cell\row
\cell pc_set_load_state()\cell objfiles.c\cell\row
\cell set_bp_objfile()\cell breakpoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function free_all_objfiles()\par}
{\s5\f1\fs20\ql\sb50\sa50 void free_all_objfiles ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell clear_symtab_users()\cell symfile.c\cell\row
\cell free_objfile()\cell objfiles.c\cell\row
\cell objfile_get_first()\cell objfiles.c\cell\row
\cell objfile_get_next()\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function free_objfile()\par}
{\s5\f1\fs20\ql\sb50\sa50 void free_objfile ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell free_objfile()\cell objfiles.c\cell\row
\cell free_objfile_internal()\cell objfiles.c\cell\row
\cell tell_breakpoints_objfile_removed()\cell breakpoint.c\cell\row
\cell unlink_objfile()\cell objfiles.c\cell\row
\cell xfree()\cell utils.c\cell\row
Called by:\cell do_free_objfile_cleanup()\cell objfiles.c\cell\row
\cell free_all_objfiles()\cell objfiles.c\cell\row
\cell free_objfile()\cell objfiles.c\cell\row
\cell java_rerun_cleanup()\cell jv-lang.c\cell\row
\cell remove_symbol_file_command()\cell symfile.c\cell\row
\cell reread_separate_symbols()\cell symfile.c\cell\row
\cell reread_symbols_for_objfile()\cell symfile.c\cell\row
\cell symbol_file_clear()\cell symfile.c\cell\row
\cell syms_from_objfile()\cell symfile.c\cell\row
\cell update_solib_list()\cell solib.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function get_objfile_data()\par}
{\s5\f1\fs20\ql\sb50\sa50 void* get_objfile_data ( struct objfile* objfile, const struct objfile_data* data )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell internal_error()\cell utils.c\cell\row
Called by:\cell add_fde()\cell dwarf2-frame.c\cell\row
\cell dwarf2_frame_find_fde()\cell dwarf2-frame.c\cell\row
\cell dwarf2_kext_psymtab_to_symtab()\cell dwarf2read.c\cell\row
\cell dwarf2_psymtab_to_symtab()\cell dwarf2read.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function get_objfile_registry_num_registrations()\par}
{\s5\f1\fs20\ql\sb50\sa50 unsigned int get_objfile_registry_num_registrations ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Called by:\cell build_dummy_objfile()\cell dwarf2read.c\cell\row
Refs Var:\cell objfile_data_registry\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function have_full_symbols()\par}
{\s5\f1\fs20\ql\sb50\sa50 int have_full_symbols ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell objfile_get_first()\cell objfiles.c\cell\row
\cell objfile_get_next()\cell objfiles.c\cell\row
Called by:\cell c_parse()\cell c-exp.c\cell\row
\cell decode_all_variables()\cell linespec.c\cell\row
\cell decode_variable()\cell linespec.c\cell\row
\cell f_parse()\cell f-exp.c\cell\row
\cell m2_parse()\cell m2-exp.c\cell\row
\cell make_source_files_completion_list()\cell symtab.c\cell\row
\cell name_lookup()\cell ada-exp.c\cell\row
\cell objc_parse()\cell objc-exp.c\cell\row
\cell pascal_parse()\cell p-exp.c\cell\row
\cell push_expression_name()\cell jv-exp.c\cell\row
\cell set_default_source_symtab_and_line()\cell source.c\cell\row
\cell sources_info()\cell symtab.c\cell\row
\cell symtab_from_filename()\cell linespec.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function have_minimal_symbols()\par}
{\s5\f1\fs20\ql\sb50\sa50 int have_minimal_symbols ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell objfile_get_first()\cell objfiles.c\cell\row
\cell objfile_get_next()\cell objfiles.c\cell\row
Called by:\cell decode_all_variables()\cell linespec.c\cell\row
\cell decode_variable()\cell linespec.c\cell\row
\cell start_command()\cell infcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function have_partial_symbols()\par}
{\s5\f1\fs20\ql\sb50\sa50 int have_partial_symbols ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell objfile_get_first()\cell objfiles.c\cell\row
\cell objfile_get_next()\cell objfiles.c\cell\row
Called by:\cell c_parse()\cell c-exp.c\cell\row
\cell decode_all_variables()\cell linespec.c\cell\row
\cell decode_variable()\cell linespec.c\cell\row
\cell f_parse()\cell f-exp.c\cell\row
\cell m2_parse()\cell m2-exp.c\cell\row
\cell make_source_files_completion_list()\cell symtab.c\cell\row
\cell name_lookup()\cell ada-exp.c\cell\row
\cell objc_parse()\cell objc-exp.c\cell\row
\cell pascal_parse()\cell p-exp.c\cell\row
\cell push_expression_name()\cell jv-exp.c\cell\row
\cell set_default_source_symtab_and_line()\cell source.c\cell\row
\cell sources_info()\cell symtab.c\cell\row
\cell symtab_from_filename()\cell linespec.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function in_plt_section()\par}
{\s5\f1\fs20\ql\sb50\sa50 int in_plt_section ( CORE_ADDR pc, char* name )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell find_pc_section()\cell objfiles.c\cell\row
\cell  strcmp()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function init_entry_point_info()\par}
{\s5\f1\fs20\ql\sb50\sa50 void init_entry_point_info ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Called by:\cell coff_symfile_init()\cell coffread.c\cell\row
\cell reread_symbols_for_objfile()\cell symfile.c\cell\row
\cell syms_from_objfile()\cell symfile.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function is_in_import_list()\par}
{\s5\f1\fs20\ql\sb50\sa50 int is_in_import_list ( char* name, struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell  strcmp()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function link_objfile()\par}
{\s5\f1\fs20\ql\sb50\sa50 void link_objfile ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell internal_error()\cell utils.c\cell\row
\cell objfile_get_first()\cell objfiles.c\cell\row
\cell objfile_get_next()\cell objfiles.c\cell\row
Called by:\cell allocate_objfile()\cell objfiles.c\cell\row
Refs Var:\cell object_files\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function make_cleanup_free_objfile()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct cleanup* make_cleanup_free_objfile ( struct objfile* obj )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell make_cleanup()\cell utils.c\cell\row
Called by:\cell reread_symbols_for_objfile()\cell symfile.c\cell\row
\cell syms_from_objfile()\cell symfile.c\cell\row
Refs Func:\cell do_free_objfile_cleanup()\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function make_cleanup_objfile_init_clear_hitlist()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct cleanup* make_cleanup_objfile_init_clear_hitlist ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell make_cleanup()\cell utils.c\cell\row
\cell objfile_init_hitlist()\cell objfiles.c\cell\row
Called by:\cell varobj_create()\cell varobj.c\cell\row
Refs Func:\cell objfile_clear_hitlist()\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function make_cleanup_restrict_to_objfile()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct cleanup* make_cleanup_restrict_to_objfile ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell make_cleanup()\cell utils.c\cell\row
\cell objfile_add_to_restrict_list()\cell objfiles.c\cell\row
\cell objfile_restrict_search()\cell objfiles.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
Called by:\cell breakpoint_update()\cell breakpoint.c\cell\row
\cell decode_all_digits()\cell linespec.c\cell\row
\cell decode_all_digits_exhaustive()\cell linespec.c\cell\row
\cell find_methods()\cell objc-lang.c\cell\row
\cell make_cleanup_restrict_to_shlib()\cell objfiles.c\cell\row
Refs Func:\cell do_cleanup_restrict_to_objfile()\cell objfiles.c\cell\row
Refs Var:\cell objfile_list\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function make_cleanup_restrict_to_objfile_by_name()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct cleanup* make_cleanup_restrict_to_objfile_by_name ( char* objfile_name )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell find_objfile_by_name()\cell objfiles.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell objfile_add_to_restrict_list()\cell objfiles.c\cell\row
\cell objfile_restrict_search()\cell objfiles.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
Called by:\cell breakpoint_re_set_one()\cell breakpoint.c\cell\row
Refs Func:\cell do_cleanup_restrict_to_objfile()\cell objfiles.c\cell\row
\cell null_cleanup()\cell utils.c\cell\row
Refs Var:\cell objfile_list\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function make_cleanup_restrict_to_objfile_list()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct cleanup* make_cleanup_restrict_to_objfile_list ( struct objfile_list* objlist )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell make_cleanup()\cell utils.c\cell\row
\cell objfile_restrict_search()\cell objfiles.c\cell\row
\cell objfile_set_restrict_list()\cell objfiles.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
Called by:\cell make_cleanup_restrict_to_shlib()\cell objfiles.c\cell\row
Refs Func:\cell do_cleanup_restrict_to_objfile()\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function make_cleanup_restrict_to_shlib()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct cleanup* make_cleanup_restrict_to_shlib ( char* requested_shlib )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell clear_restrict_list()\cell objfiles.c\cell\row
\cell make_cleanup_restrict_to_objfile()\cell objfiles.c\cell\row
\cell make_cleanup_restrict_to_objfile_list()\cell objfiles.c\cell\row
\cell objfile_get_first()\cell objfiles.c\cell\row
\cell objfile_get_next()\cell objfiles.c\cell\row
\cell objfile_matches_name()\cell objfiles.c\cell\row
\cell push_front_restrict_list()\cell objfiles.c\cell\row
Called by:\cell breakpoint_re_set_one()\cell breakpoint.c\cell\row
\cell parse_breakpoint_sals()\cell breakpoint.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function objfile_add_special_psym()\par}
{\s5\f1\fs20\ql\sb50\sa50 void objfile_add_special_psym ( struct objfile* objfile, struct partial_symbol* psym, int short isa_value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell xmalloc()\cell utils.c\cell\row
\cell xrealloc()\cell utils.c\cell\row
Called by:\cell add_partial_symbol()\cell dwarf2read.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function objfile_add_to_hitlist()\par}
{\s5\f1\fs20\ql\sb50\sa50 void objfile_add_to_hitlist ( struct objfile* ofile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell xrealloc()\cell utils.c\cell\row
Called by:\cell lookup_symbol_aux()\cell symtab.c\cell\row
Refs Var:\cell cur_objfile_hitlist\cell objfiles.c\cell\row
\cell hitlist_max_elem\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function objfile_add_to_ordered_sections()\par}
{\s5\f1\fs20\ql\sb50\sa50 void objfile_add_to_ordered_sections ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell gdb_check_fatal()\cell utils.c\cell\row
\cell get_insert_index_in_ordered_sections()\cell objfiles.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell xrealloc()\cell utils.c\cell\row
\cell  bcopy(), qsort()\cell\cell\row
Called by:\cell build_objfile_section_table()\cell objfiles.c\cell\row
\cell objfile_relocate()\cell objfiles.c\cell\row
\cell syms_from_objfile()\cell symfile.c\cell\row
Refs Func:\cell backward_section_compare()\cell objfiles.c\cell\row
Refs Var:\cell max_num_ordered_sections\cell objfiles.c\cell\row
\cell num_ordered_sections\cell objfiles.c\cell\row
\cell ordered_sections\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function objfile_add_to_restrict_list()\par}
{\s5\f1\fs20\ql\sb50\sa50 void objfile_add_to_restrict_list ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell objfile_add_to_restrict_list()\cell objfiles.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
Called by:\cell breakpoint_re_set()\cell breakpoint.c\cell\row
\cell make_cleanup_restrict_to_objfile()\cell objfiles.c\cell\row
\cell make_cleanup_restrict_to_objfile_by_name()\cell objfiles.c\cell\row
\cell objfile_add_to_restrict_list()\cell objfiles.c\cell\row
Refs Var:\cell objfile_list\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function objfile_bss_section_offset()\par}
{\s5\f1\fs20\ql\sb50\sa50 CORE_ADDR objfile_bss_section_offset ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell executable_objfile()\cell objfiles.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell objfile_section_offset()\cell objfiles.c\cell\row
Called by:\cell read_dbx_dynamic_symtab()\cell dbxread.c\cell\row
\cell read_dbx_symtab()\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function objfile_clear_restrict_list()\par}
{\s5\f1\fs20\ql\sb50\sa50 void objfile_clear_restrict_list ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell xfree()\cell utils.c\cell\row
Called by:\cell do_cleanup_restrict_to_objfile()\cell objfiles.c\cell\row
\cell restrict_search_cleanup()\cell breakpoint.c\cell\row
Refs Var:\cell objfile_list\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function objfile_data_section_offset()\par}
{\s5\f1\fs20\ql\sb50\sa50 CORE_ADDR objfile_data_section_offset ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell executable_objfile()\cell objfiles.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell objfile_section_offset()\cell objfiles.c\cell\row
Called by:\cell convert_oso_map_to_final_map()\cell dwarf2read.c\cell\row
\cell read_dbx_dynamic_symtab()\cell dbxread.c\cell\row
\cell read_dbx_symtab()\cell dbxread.c\cell\row
\cell read_ofile_symtab_from_oso()\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function objfile_delete_from_ordered_sections()\par}
{\s5\f1\fs20\ql\sb50\sa50 void objfile_delete_from_ordered_sections ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell find_in_ordered_sections_index()\cell objfiles.c\cell\row
\cell number_of_dots()\cell objfiles.c\cell\row
\cell paddr_nz()\cell utils.c\cell\row
\cell warning()\cell utils.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  bcopy(), qsort()\cell\cell\row
Called by:\cell free_objfile_internal()\cell objfiles.c\cell\row
\cell objfile_relocate()\cell objfiles.c\cell\row
\cell reread_symbols_for_objfile()\cell symfile.c\cell\row
\cell syms_from_objfile()\cell symfile.c\cell\row
Refs Func:\cell forward_int_compare()\cell objfiles.c\cell\row
Refs Var:\cell num_ordered_sections\cell objfiles.c\cell\row
\cell ordered_sections\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function objfile_detach_hitlist()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct objfile_hitlist* objfile_detach_hitlist ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Called by:\cell objfile_clear_hitlist()\cell objfiles.c\cell\row
\cell varobj_create()\cell varobj.c\cell\row
Refs Var:\cell cur_objfile_hitlist\cell objfiles.c\cell\row
\cell hitlist_max_elem\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function objfile_get_first()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct objfile* objfile_get_first ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Called by:\cell ada_decode_symbol()\cell ada-lang.c\cell\row
\cell ada_lookup_simple_minsym()\cell ada-lang.c\cell\row
\cell ada_lookup_symbol()\cell ada-lang.c\cell\row
\cell ada_lookup_symbol_list()\cell ada-lang.c\cell\row
\cell basic_lookup_transparent_type()\cell symtab.c\cell\row
\cell block_inlined_function()\cell inlining.c\cell\row
\cell check_for_additional_inlined_breakpoint_locations()\cell inlining.c\cell\row
\cell classes_info()\cell objc-lang.c\cell\row
\cell dwarf2_frame_find_fde()\cell dwarf2-frame.c\cell\row
\cell find_line_symtab()\cell symtab.c\cell\row
\cell find_main_psymtab()\cell symtab.c\cell\row
\cell find_methods()\cell objc-lang.c\cell\row
\cell find_objfile()\cell symfile.c\cell\row
\cell find_objfile_by_name()\cell objfiles.c\cell\row
\cell find_objfile_by_uuid()\cell objfiles.c\cell\row
\cell find_pc_mapped_section()\cell symfile.c\cell\row
\cell find_pc_overlay()\cell symfile.c\cell\row
\cell find_pc_sect_psymtab()\cell symtab.c\cell\row
\cell find_pc_sect_section()\cell objfiles.c\cell\row
\cell find_pc_sect_symtab()\cell symtab.c\cell\row
\cell find_solib_trampoline_target()\cell minsyms.c\cell\row
\cell forget_cached_source_info()\cell source.c\cell\row
\cell free_all_objfiles()\cell objfiles.c\cell\row
\cell gnu_v3_update_exception_catchpoints()\cell breakpoint.c\cell\row
\cell have_full_symbols()\cell objfiles.c\cell\row
\cell have_minimal_symbols()\cell objfiles.c\cell\row
\cell have_partial_symbols()\cell objfiles.c\cell\row
\cell link_objfile()\cell objfiles.c\cell\row
\cell list_overlays_command()\cell symfile.c\cell\row
\cell lookup_minimal_symbol()\cell minsyms.c\cell\row
\cell lookup_minimal_symbol_all()\cell minsyms.c\cell\row
\cell lookup_minimal_symbol_text()\cell minsyms.c\cell\row
\cell lookup_partial_symtab()\cell symtab.c\cell\row
\cell lookup_partial_symtab_all()\cell symtab.c\cell\row
\cell lookup_possible_namespace_symbol()\cell cp-namespace.c\cell\row
\cell lookup_symbol_aux_block()\cell symtab.c\cell\row
\cell lookup_symbol_aux_psymtabs()\cell symtab.c\cell\row
\cell lookup_symbol_aux_symtabs()\cell symtab.c\cell\row
\cell lookup_symtab()\cell symtab.c\cell\row
\cell lookup_symtab_all()\cell symtab.c\cell\row
\cell maintenance_check_symtabs()\cell symmisc.c\cell\row
\cell maintenance_cplus_namespace()\cell cp-namespace.c\cell\row
\cell maintenance_info_psymtabs()\cell symmisc.c\cell\row
\cell maintenance_info_sections()\cell maint.c\cell\row
\cell maintenance_info_symtabs()\cell symmisc.c\cell\row
\cell maintenance_print_msymbols()\cell symmisc.c\cell\row
\cell maintenance_print_objfiles()\cell symmisc.c\cell\row
\cell maintenance_print_psymbols()\cell symmisc.c\cell\row
\cell maintenance_print_symbols()\cell symmisc.c\cell\row
\cell maintenance_translate_address()\cell maint.c\cell\row
\cell make_cleanup_restrict_to_shlib()\cell objfiles.c\cell\row
\cell make_source_files_completion_list()\cell symtab.c\cell\row
\cell make_symbol_completion_list()\cell symtab.c\cell\row
\cell make_symbol_overload_list_qualified()\cell cp-support.c\cell\row
\cell map_overlay_command()\cell symfile.c\cell\row
\cell objfile_name_set_load_state()\cell objfiles.c\cell\row
\cell objfile_purge_solibs()\cell objfiles.c\cell\row
\cell overlay_invalidate_all()\cell symfile.c\cell\row
\cell parse_breakpoint_sals()\cell breakpoint.c\cell\row
\cell print_objfile_statistics()\cell symmisc.c\cell\row
\cell print_symbol_bcache_statistics()\cell symmisc.c\cell\row
\cell read_in_psymtabs()\cell cp-support.c\cell\row
\cell reread_symbols()\cell symfile.c\cell\row
\cell search_symbols()\cell symtab.c\cell\row
\cell section_is_mapped()\cell symfile.c\cell\row
\cell select_source_symtab()\cell source.c\cell\row
\cell selectors_info()\cell objc-lang.c\cell\row
\cell simple_overlay_update()\cell symfile.c\cell\row
\cell sources_info()\cell symtab.c\cell\row
\cell sym_info()\cell printcmd.c\cell\row
\cell symbol_add_stub()\cell solib.c\cell\row
\cell symtab_for_sym()\cell ada-lang.c\cell\row
\cell unmap_overlay_command()\cell symfile.c\cell\row
Refs Var:\cell object_files\cell objfiles.c\cell\row
\cell objfile_list\cell objfiles.c\cell\row
\cell objfile_list_ptr\cell objfiles.c\cell\row
\cell restrict_search\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function objfile_get_next()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct objfile* objfile_get_next ( struct objfile* in_objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Called by:\cell ada_decode_symbol()\cell ada-lang.c\cell\row
\cell ada_lookup_simple_minsym()\cell ada-lang.c\cell\row
\cell ada_lookup_symbol()\cell ada-lang.c\cell\row
\cell ada_lookup_symbol_list()\cell ada-lang.c\cell\row
\cell basic_lookup_transparent_type()\cell symtab.c\cell\row
\cell block_inlined_function()\cell inlining.c\cell\row
\cell check_for_additional_inlined_breakpoint_locations()\cell inlining.c\cell\row
\cell classes_info()\cell objc-lang.c\cell\row
\cell dwarf2_frame_find_fde()\cell dwarf2-frame.c\cell\row
\cell find_line_symtab()\cell symtab.c\cell\row
\cell find_main_psymtab()\cell symtab.c\cell\row
\cell find_methods()\cell objc-lang.c\cell\row
\cell find_objfile()\cell symfile.c\cell\row
\cell find_objfile_by_name()\cell objfiles.c\cell\row
\cell find_objfile_by_uuid()\cell objfiles.c\cell\row
\cell find_pc_mapped_section()\cell symfile.c\cell\row
\cell find_pc_overlay()\cell symfile.c\cell\row
\cell find_pc_sect_psymtab()\cell symtab.c\cell\row
\cell find_pc_sect_section()\cell objfiles.c\cell\row
\cell find_pc_sect_symtab()\cell symtab.c\cell\row
\cell find_solib_trampoline_target()\cell minsyms.c\cell\row
\cell forget_cached_source_info()\cell source.c\cell\row
\cell free_all_objfiles()\cell objfiles.c\cell\row
\cell gnu_v3_update_exception_catchpoints()\cell breakpoint.c\cell\row
\cell have_full_symbols()\cell objfiles.c\cell\row
\cell have_minimal_symbols()\cell objfiles.c\cell\row
\cell have_partial_symbols()\cell objfiles.c\cell\row
\cell link_objfile()\cell objfiles.c\cell\row
\cell list_overlays_command()\cell symfile.c\cell\row
\cell lookup_minimal_symbol()\cell minsyms.c\cell\row
\cell lookup_minimal_symbol_all()\cell minsyms.c\cell\row
\cell lookup_minimal_symbol_text()\cell minsyms.c\cell\row
\cell lookup_partial_symtab()\cell symtab.c\cell\row
\cell lookup_partial_symtab_all()\cell symtab.c\cell\row
\cell lookup_possible_namespace_symbol()\cell cp-namespace.c\cell\row
\cell lookup_symbol_aux_block()\cell symtab.c\cell\row
\cell lookup_symbol_aux_psymtabs()\cell symtab.c\cell\row
\cell lookup_symbol_aux_symtabs()\cell symtab.c\cell\row
\cell lookup_symtab()\cell symtab.c\cell\row
\cell lookup_symtab_all()\cell symtab.c\cell\row
\cell maintenance_check_symtabs()\cell symmisc.c\cell\row
\cell maintenance_cplus_namespace()\cell cp-namespace.c\cell\row
\cell maintenance_info_psymtabs()\cell symmisc.c\cell\row
\cell maintenance_info_sections()\cell maint.c\cell\row
\cell maintenance_info_symtabs()\cell symmisc.c\cell\row
\cell maintenance_print_msymbols()\cell symmisc.c\cell\row
\cell maintenance_print_objfiles()\cell symmisc.c\cell\row
\cell maintenance_print_psymbols()\cell symmisc.c\cell\row
\cell maintenance_print_symbols()\cell symmisc.c\cell\row
\cell maintenance_translate_address()\cell maint.c\cell\row
\cell make_cleanup_restrict_to_shlib()\cell objfiles.c\cell\row
\cell make_source_files_completion_list()\cell symtab.c\cell\row
\cell make_symbol_completion_list()\cell symtab.c\cell\row
\cell make_symbol_overload_list_qualified()\cell cp-support.c\cell\row
\cell map_overlay_command()\cell symfile.c\cell\row
\cell objfile_name_set_load_state()\cell objfiles.c\cell\row
\cell objfile_purge_solibs()\cell objfiles.c\cell\row
\cell overlay_invalidate_all()\cell symfile.c\cell\row
\cell parse_breakpoint_sals()\cell breakpoint.c\cell\row
\cell print_objfile_statistics()\cell symmisc.c\cell\row
\cell print_symbol_bcache_statistics()\cell symmisc.c\cell\row
\cell read_in_psymtabs()\cell cp-support.c\cell\row
\cell reread_symbols()\cell symfile.c\cell\row
\cell reread_symbols_for_objfile()\cell symfile.c\cell\row
\cell search_symbols()\cell symtab.c\cell\row
\cell section_is_mapped()\cell symfile.c\cell\row
\cell select_source_symtab()\cell source.c\cell\row
\cell selectors_info()\cell objc-lang.c\cell\row
\cell simple_overlay_update()\cell symfile.c\cell\row
\cell sources_info()\cell symtab.c\cell\row
\cell sym_info()\cell printcmd.c\cell\row
\cell symbol_add_stub()\cell solib.c\cell\row
\cell symtab_for_sym()\cell ada-lang.c\cell\row
\cell unmap_overlay_command()\cell symfile.c\cell\row
Refs Var:\cell objfile_list\cell objfiles.c\cell\row
\cell objfile_list_ptr\cell objfiles.c\cell\row
\cell restrict_search\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function objfile_keeps_section()\par}
{\s5\f1\fs20\ql\sb50\sa50 int objfile_keeps_section ( bfd* abfd, asection* asect )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Called by:\cell build_objfile_section_table()\cell objfiles.c\cell\row
\cell symbol_file_add_bfd_safe()\cell symfile.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function objfile_matches_name()\par}
{\s5\f1\fs20\ql\sb50\sa50 enum objfile_matches_name_return objfile_matches_name ( struct objfile* objfile, const char* name )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell bundle_basename()\cell utils.c\cell\row
\cell  lbasename(), strcmp()\cell\cell\row
Called by:\cell find_objfile_by_name()\cell objfiles.c\cell\row
\cell make_cleanup_restrict_to_shlib()\cell objfiles.c\cell\row
\cell objfile_name_set_load_state()\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function objfile_name_set_load_state()\par}
{\s5\f1\fs20\ql\sb50\sa50 int objfile_name_set_load_state ( const char* name, int load_state, int force )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell objfile_get_first()\cell objfiles.c\cell\row
\cell objfile_get_next()\cell objfiles.c\cell\row
\cell objfile_matches_name()\cell objfiles.c\cell\row
\cell objfile_set_load_state()\cell objfiles.c\cell\row
Called by:\cell breakpoint_re_set_one()\cell breakpoint.c\cell\row
Refs Var:\cell should_auto_raise_load_state\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function objfile_on_hitlist_p()\par}
{\s5\f1\fs20\ql\sb50\sa50 int objfile_on_hitlist_p ( struct objfile_hitlist* hitlist, struct objfile* ofile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Called by:\cell varobj_delete_objfiles_vars()\cell varobj.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function objfile_purge_solibs()\par}
{\s5\f1\fs20\ql\sb50\sa50 void objfile_purge_solibs ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell objfile_get_first()\cell objfiles.c\cell\row
\cell objfile_get_next()\cell objfiles.c\cell\row
Called by:\cell no_shared_libraries()\cell solib.c\cell\row
\cell run_command_1()\cell infcmd.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function objfile_relocate()\par}
{\s5\f1\fs20\ql\sb50\sa50 void objfile_relocate ( struct objfile* objfile, struct section_offsets* new_offsets )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell breakpoint_re_set()\cell breakpoint.c\cell\row
\cell breakpoints_relocate()\cell breakpoint.c\cell\row
\cell dict_iterator_first()\cell dictionary.c\cell\row
\cell dict_iterator_next()\cell dictionary.c\cell\row
\cell executable_objfile()\cell objfiles.c\cell\row
\cell find_pc_section()\cell objfiles.c\cell\row
\cell fixup_psymbol_section()\cell symtab.c\cell\row
\cell fixup_symbol_section()\cell symtab.c\cell\row
\cell inlined_subroutine_objfile_relocate()\cell inlining.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell msymbols_sort()\cell minsyms.c\cell\row
\cell objfile_add_to_ordered_sections()\cell objfiles.c\cell\row
\cell objfile_delete_from_ordered_sections()\cell objfiles.c\cell\row
\cell psymtab_get_first()\cell objfiles.c\cell\row
\cell psymtab_get_next()\cell objfiles.c\cell\row
\cell symtab_get_first()\cell objfiles.c\cell\row
\cell symtab_get_next()\cell objfiles.c\cell\row
\cell warning()\cell utils.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  __builtin___memcpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_memcpy_chk(), qsort()\cell\cell\row
Called by:\cell get_offsets()\cell remote.c\cell\row
\cell reread_symbols_for_objfile()\cell symfile.c\cell\row
\cell slide_objfile()\cell objfiles.c\cell\row
Refs Func:\cell compare_line_numbers()\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function objfile_restrict_search()\par}
{\s5\f1\fs20\ql\sb50\sa50 int objfile_restrict_search ( int on )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Called by:\cell breakpoint_re_set_all()\cell breakpoint.c\cell\row
\cell breakpoint_update()\cell breakpoint.c\cell\row
\cell do_cleanup_restrict_to_objfile()\cell objfiles.c\cell\row
\cell make_cleanup_restrict_to_objfile()\cell objfiles.c\cell\row
\cell make_cleanup_restrict_to_objfile_by_name()\cell objfiles.c\cell\row
\cell make_cleanup_restrict_to_objfile_list()\cell objfiles.c\cell\row
\cell restrict_search_cleanup()\cell breakpoint.c\cell\row
Refs Var:\cell restrict_search\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function objfile_rodata_section_offset()\par}
{\s5\f1\fs20\ql\sb50\sa50 CORE_ADDR objfile_rodata_section_offset ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell executable_objfile()\cell objfiles.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell objfile_section_offset()\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function objfile_section_offset()\par}
{\s5\f1\fs20\ql\sb50\sa50 CORE_ADDR objfile_section_offset ( struct objfile* objfile, int sect_idx )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell executable_objfile()\cell objfiles.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell  bfd_mach_o_in_shared_cached_memory()\cell\cell\row
Called by:\cell coff_symtab_read()\cell coffread.c\cell\row
\cell elf_symtab_read()\cell elfread.c\cell\row
\cell execute_stack_op()\cell dwarf2expr.c\cell\row
\cell fixup_section()\cell symtab.c\cell\row
\cell nlm_symfile_read()\cell nlmread.c\cell\row
\cell objfile_bss_section_offset()\cell objfiles.c\cell\row
\cell objfile_data_section_offset()\cell objfiles.c\cell\row
\cell objfile_rodata_section_offset()\cell objfiles.c\cell\row
\cell objfile_text_section_offset()\cell objfiles.c\cell\row
\cell read_dbx_symtab()\cell dbxread.c\cell\row
\cell syms_from_objfile()\cell symfile.c\cell\row
\cell var_decode_location()\cell dwarf2read.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function objfile_set_load_state()\par}
{\s5\f1\fs20\ql\sb50\sa50 int objfile_set_load_state ( struct objfile* o, int load_state, int force )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell  dyld_objfile_set_load_state()\cell\cell\row
Called by:\cell objc_init_trampoline_observer()\cell objc-lang.c\cell\row
\cell objfile_name_set_load_state()\cell objfiles.c\cell\row
\cell parse_breakpoint_sals()\cell breakpoint.c\cell\row
\cell pc_set_load_state()\cell objfiles.c\cell\row
\cell search_symbols()\cell symtab.c\cell\row
Refs Var:\cell should_auto_raise_load_state\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function objfile_text_section_offset()\par}
{\s5\f1\fs20\ql\sb50\sa50 CORE_ADDR objfile_text_section_offset ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell executable_objfile()\cell objfiles.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell objfile_section_offset()\cell objfiles.c\cell\row
Called by:\cell add_partial_symbol()\cell dwarf2read.c\cell\row
\cell coff_symtab_read()\cell coffread.c\cell\row
\cell convert_oso_map_to_final_map()\cell dwarf2read.c\cell\row
\cell create_kext_addr_map()\cell dwarf2read.c\cell\row
\cell dwarf2_build_psymtabs_hard()\cell dwarf2read.c\cell\row
\cell dwarf2_frame_find_fde()\cell dwarf2-frame.c\cell\row
\cell dwarf_decode_lines()\cell dwarf2read.c\cell\row
\cell enter_linenos()\cell coffread.c\cell\row
\cell find_location_expression()\cell dwarf2loc.c\cell\row
\cell loclist_describe_location()\cell dwarf2loc.c\cell\row
\cell new_symbol()\cell dwarf2read.c\cell\row
\cell process_coff_symbol()\cell coffread.c\cell\row
\cell process_full_comp_unit()\cell dwarf2read.c\cell\row
\cell read_dbx_dynamic_symtab()\cell dbxread.c\cell\row
\cell read_dbx_symtab()\cell dbxread.c\cell\row
\cell read_file_scope()\cell dwarf2read.c\cell\row
\cell read_func_scope()\cell dwarf2read.c\cell\row
\cell read_inlined_subroutine_scope()\cell dwarf2read.c\cell\row
\cell read_lexical_block_scope()\cell dwarf2read.c\cell\row
\cell read_ofile_symtab_from_oso()\cell dbxread.c\cell\row
\cell read_pe_exported_syms()\cell coff-pe-read.c\cell\row
\cell scan_partial_inlined_function_symbols()\cell dwarf2read.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function objfile_to_front()\par}
{\s5\f1\fs20\ql\sb50\sa50 void objfile_to_front ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Refs Var:\cell object_files\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function partial_symbol_special_info()\par}
{\s5\f1\fs20\ql\sb50\sa50 char* partial_symbol_special_info ( struct objfile* objfile, struct partial_symbol* psym )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell  bsearch()\cell\cell\row
Called by:\cell append_psymbols_as_msymbols()\cell symfile.c\cell\row
Refs Func:\cell compare_psymbol_ptrs()\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function pc_set_load_state()\par}
{\s5\f1\fs20\ql\sb50\sa50 int pc_set_load_state ( CORE_ADDR pc, int load_state, int force )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell find_pc_section()\cell objfiles.c\cell\row
\cell objfile_set_load_state()\cell objfiles.c\cell\row
Called by:\cell handle_inferior_event()\cell infrun.c\cell\row
\cell print_frame_info()\cell stack.c\cell\row
\cell x86_frame_cache()\cell target/x86-shared-tdep.c\cell\row
Refs Var:\cell should_auto_raise_load_state\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function psymtab_get_first()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct partial_symtab* psymtab_get_first ( struct objfile* objfile, int skip_obsolete )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Called by:\cell ada_lookup_symbol_list()\cell ada-lang.c\cell\row
\cell basic_lookup_transparent_type()\cell symtab.c\cell\row
\cell cashier_psymtab()\cell symfile.c\cell\row
\cell dump_objfile()\cell symmisc.c\cell\row
\cell end_psymtab()\cell dbxread.c\cell\row
\cell find_main_psymtab()\cell symtab.c\cell\row
\cell find_pc_sect_psymtab()\cell symtab.c\cell\row
\cell forget_cached_source_info()\cell source.c\cell\row
\cell lookup_partial_symtab()\cell symtab.c\cell\row
\cell lookup_partial_symtab_all()\cell symtab.c\cell\row
\cell lookup_symbol_aux_psymtabs()\cell symtab.c\cell\row
\cell maintenance_check_symtabs()\cell symmisc.c\cell\row
\cell maintenance_info_psymtabs()\cell symmisc.c\cell\row
\cell maintenance_print_psymbols()\cell symmisc.c\cell\row
\cell make_source_files_completion_list()\cell symtab.c\cell\row
\cell make_symbol_completion_list()\cell symtab.c\cell\row
\cell objfile_relocate()\cell objfiles.c\cell\row
\cell parse_partial_symbols()\cell mdebugread.c\cell\row
\cell print_objfile_statistics()\cell symmisc.c\cell\row
\cell read_in_psymtabs()\cell cp-support.c\cell\row
\cell replace_psymbols_with_correct_psymbols()\cell symfile.c\cell\row
\cell search_symbols()\cell symtab.c\cell\row
\cell select_source_symtab()\cell source.c\cell\row
\cell sources_info()\cell symtab.c\cell\row
\cell symbol_file_add_with_addrs_or_offsets_using_objfile()\cell symfile.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function psymtab_get_next()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct partial_symtab* psymtab_get_next ( struct partial_symtab* ps, int skip_obsolete )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Called by:\cell ada_lookup_symbol_list()\cell ada-lang.c\cell\row
\cell basic_lookup_transparent_type()\cell symtab.c\cell\row
\cell cashier_psymtab()\cell symfile.c\cell\row
\cell dump_objfile()\cell symmisc.c\cell\row
\cell end_psymtab()\cell dbxread.c\cell\row
\cell find_main_psymtab()\cell symtab.c\cell\row
\cell find_pc_sect_psymtab()\cell symtab.c\cell\row
\cell forget_cached_source_info()\cell source.c\cell\row
\cell lookup_partial_symtab()\cell symtab.c\cell\row
\cell lookup_partial_symtab_all()\cell symtab.c\cell\row
\cell lookup_symbol_aux_psymtabs()\cell symtab.c\cell\row
\cell maintenance_check_symtabs()\cell symmisc.c\cell\row
\cell maintenance_info_psymtabs()\cell symmisc.c\cell\row
\cell maintenance_print_psymbols()\cell symmisc.c\cell\row
\cell make_source_files_completion_list()\cell symtab.c\cell\row
\cell make_symbol_completion_list()\cell symtab.c\cell\row
\cell objfile_relocate()\cell objfiles.c\cell\row
\cell parse_partial_symbols()\cell mdebugread.c\cell\row
\cell print_objfile_statistics()\cell symmisc.c\cell\row
\cell read_in_psymtabs()\cell cp-support.c\cell\row
\cell replace_psymbols_with_correct_psymbols()\cell symfile.c\cell\row
\cell search_symbols()\cell symtab.c\cell\row
\cell select_source_symtab()\cell source.c\cell\row
\cell sources_info()\cell symtab.c\cell\row
\cell symbol_file_add_with_addrs_or_offsets_using_objfile()\cell symfile.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function push_front_restrict_list()\par}
{\s5\f1\fs20\ql\sb50\sa50 void push_front_restrict_list ( struct objfile_list** requested_list_head, struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell xmalloc()\cell utils.c\cell\row
Called by:\cell make_cleanup_restrict_to_shlib()\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function put_objfile_before()\par}
{\s5\f1\fs20\ql\sb50\sa50 void put_objfile_before ( struct objfile* objfile, struct objfile* before_this )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell internal_error()\cell utils.c\cell\row
\cell unlink_objfile()\cell objfiles.c\cell\row
Called by:\cell reread_separate_symbols()\cell symfile.c\cell\row
\cell symbol_file_add_with_addrs_or_offsets_using_objfile()\cell symfile.c\cell\row
Refs Var:\cell object_files\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function register_objfile_data()\par}
{\s5\f1\fs20\ql\sb50\sa50 const struct objfile_data* register_objfile_data ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell xmalloc()\cell utils.c\cell\row
Called by:\cell _initialize_dwarf2_frame()\cell dwarf2-frame.c\cell\row
\cell _initialize_dwarf2_read()\cell dwarf2read.c\cell\row
Refs Var:\cell objfile_data_registry\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function separate_debug_objfile()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct objfile* separate_debug_objfile ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function set_objfile_data()\par}
{\s5\f1\fs20\ql\sb50\sa50 void set_objfile_data ( struct objfile* objfile, const struct objfile_data* data, void* value )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell internal_error()\cell utils.c\cell\row
Called by:\cell add_fde()\cell dwarf2-frame.c\cell\row
\cell dwarf2_has_info_1()\cell dwarf2read.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function slide_objfile()\par}
{\s5\f1\fs20\ql\sb50\sa50 void slide_objfile ( struct objfile* objfile, CORE_ADDR slide, struct section_offsets* new_offsets )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell do_cleanups()\cell utils.c\cell\row
\cell gdb_flush()\cell ui-file.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell objfile_relocate()\cell objfiles.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell tell_objc_msgsend_cacher_objfile_changed()\cell objc-lang.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  macho_calculate_offsets_for_dsym()\cell\cell\row
Refs Func:\cell null_cleanup()\cell utils.c\cell\row
\cell xfree()\cell utils.c\cell\row
Refs Var:\cell gdb_stdout\cell main.c\cell\row
\cell info_verbose\cell top.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function sort_objfile_thumb_psyms()\par}
{\s5\f1\fs20\ql\sb50\sa50 void sort_objfile_thumb_psyms ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell  qsort()\cell\cell\row
Called by:\cell dwarf2_build_psymtabs_hard()\cell dwarf2read.c\cell\row
Refs Func:\cell compare_psymbol_ptrs()\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function symtab_get_first()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct symtab* symtab_get_first ( struct objfile* objfile, int skip_obsolete )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Called by:\cell ada_lookup_symbol()\cell ada-lang.c\cell\row
\cell ada_lookup_symbol_list()\cell ada-lang.c\cell\row
\cell basic_lookup_transparent_type()\cell symtab.c\cell\row
\cell coff_symtab_read()\cell coffread.c\cell\row
\cell dump_objfile()\cell symmisc.c\cell\row
\cell find_line_symtab()\cell symtab.c\cell\row
\cell find_pc_sect_symtab()\cell symtab.c\cell\row
\cell forget_cached_source_info()\cell source.c\cell\row
\cell lookup_symbol_aux_block()\cell symtab.c\cell\row
\cell lookup_symbol_aux_symtabs()\cell symtab.c\cell\row
\cell lookup_symtab()\cell symtab.c\cell\row
\cell lookup_symtab_all()\cell symtab.c\cell\row
\cell maintenance_info_symtabs()\cell symmisc.c\cell\row
\cell maintenance_print_symbols()\cell symmisc.c\cell\row
\cell make_source_files_completion_list()\cell symtab.c\cell\row
\cell make_symbol_completion_list()\cell symtab.c\cell\row
\cell make_symbol_overload_list_qualified()\cell cp-support.c\cell\row
\cell objfile_relocate()\cell objfiles.c\cell\row
\cell print_objfile_statistics()\cell symmisc.c\cell\row
\cell search_symbols()\cell symtab.c\cell\row
\cell select_source_symtab()\cell source.c\cell\row
\cell sources_info()\cell symtab.c\cell\row
\cell symtab_for_sym()\cell ada-lang.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function symtab_get_next()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct symtab* symtab_get_next ( struct symtab* s, int skip_obsolete )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Called by:\cell ada_lookup_symbol()\cell ada-lang.c\cell\row
\cell ada_lookup_symbol_list()\cell ada-lang.c\cell\row
\cell basic_lookup_transparent_type()\cell symtab.c\cell\row
\cell coff_symtab_read()\cell coffread.c\cell\row
\cell dump_objfile()\cell symmisc.c\cell\row
\cell find_line_symtab()\cell symtab.c\cell\row
\cell find_pc_sect_symtab()\cell symtab.c\cell\row
\cell forget_cached_source_info()\cell source.c\cell\row
\cell lookup_symbol_aux_block()\cell symtab.c\cell\row
\cell lookup_symbol_aux_symtabs()\cell symtab.c\cell\row
\cell lookup_symtab()\cell symtab.c\cell\row
\cell lookup_symtab_all()\cell symtab.c\cell\row
\cell maintenance_info_symtabs()\cell symmisc.c\cell\row
\cell maintenance_print_symbols()\cell symmisc.c\cell\row
\cell make_source_files_completion_list()\cell symtab.c\cell\row
\cell make_symbol_completion_list()\cell symtab.c\cell\row
\cell make_symbol_overload_list_qualified()\cell cp-support.c\cell\row
\cell objfile_relocate()\cell objfiles.c\cell\row
\cell print_objfile_statistics()\cell symmisc.c\cell\row
\cell search_symbols()\cell symtab.c\cell\row
\cell select_source_symtab()\cell source.c\cell\row
\cell sources_info()\cell symtab.c\cell\row
\cell symtab_for_sym()\cell ada-lang.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function terminate_minimal_symbol_table()\par}
{\s5\f1\fs20\ql\sb50\sa50 void terminate_minimal_symbol_table ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell symbol_init_language_specific()\cell symtab.c\cell\row
\cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk(), _obstack_newchunk()\cell\cell\row
Called by:\cell reread_symbols_for_objfile()\cell symfile.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function unlink_objfile()\par}
{\s5\f1\fs20\ql\sb50\sa50 void unlink_objfile ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.h\cell\cell\row
Calls: \cell internal_error()\cell utils.c\cell\row
Called by:\cell free_objfile()\cell objfiles.c\cell\row
\cell put_objfile_before()\cell objfiles.c\cell\row
Refs Var:\cell object_files\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function allocate_objfile_internal()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct objfile* allocate_objfile_internal ( struct objfile* objfile, bfd* abfd, int flags, int symflags, CORE_ADDR mapaddr, const char* prefix )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell build_objfile_section_table()\cell objfiles.c\cell\row
\cell error()\cell utils.c\cell\row
\cell  bfd_errmsg(), bfd_get_error(), bfd_get_mtime(), strstr(), xstrdup()\cell\cell\row
Called by:\cell allocate_objfile()\cell objfiles.c\cell\row
\cell allocate_objfile_using_objfile()\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function backward_section_compare()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int backward_section_compare ( const void* left_ptr, const void* right_ptr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell objfile_add_to_ordered_sections()\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function compare_psymbol_ptrs()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int compare_psymbol_ptrs ( const void* s1p, const void* s2p )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell partial_symbol_special_info()\cell objfiles.c\cell\row
\cell sort_objfile_thumb_psyms()\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function do_free_objfile_cleanup()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void do_free_objfile_cleanup ( void* obj )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell free_objfile()\cell objfiles.c\cell\row
Used in:\cell make_cleanup_free_objfile()\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function find_in_ordered_sections_index()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int find_in_ordered_sections_index ( CORE_ADDR addr, struct bfd_section* bfd_section )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.c\cell\cell\row
Called by:\cell find_pc_sect_in_ordered_sections()\cell objfiles.c\cell\row
\cell objfile_delete_from_ordered_sections()\cell objfiles.c\cell\row
Refs Var:\cell num_ordered_sections\cell objfiles.c\cell\row
\cell ordered_sections\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function forward_int_compare()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int forward_int_compare ( const void* left_ptr, const void* right_ptr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell objfile_delete_from_ordered_sections()\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function free_objfile_internal()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void free_objfile_internal ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell bcache_xfree()\cell bcache.c\cell\row
\cell clear_pc_function_cache()\cell blockframe.c\cell\row
\cell close_dwarf_repositories()\cell dwarf2read.c\cell\row
\cell equivalence_table_delete()\cell symmisc.c\cell\row
\cell inlined_subroutine_free_objfile_call_sites()\cell inlining.c\cell\row
\cell inlined_subroutine_free_objfile_data()\cell inlining.c\cell\row
\cell objfile_delete_from_ordered_sections()\cell objfiles.c\cell\row
\cell objfile_free_data()\cell objfiles.c\cell\row
\cell objfile_remove_from_restrict_list()\cell objfiles.c\cell\row
\cell remove_target_sections()\cell target/target.c\cell\row
\cell symtab_clear_cached_lookup_values()\cell symtab.c\cell\row
\cell varobj_delete_objfiles_vars()\cell varobj.c\cell\row
\cell warning()\cell utils.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell  bfd_close(), bfd_errmsg(), bfd_get_error(), htab_delete()\cell\cell\row
Called by:\cell clear_objfile()\cell objfiles.c\cell\row
\cell free_objfile()\cell objfiles.c\cell\row
Refs Func:\cell  obstack_free()\cell\cell\row
Refs Var:\cell rt_common_objfile\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function get_insert_index_in_ordered_sections()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int get_insert_index_in_ordered_sections ( struct obj_section* section )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.c\cell\cell\row
Called by:\cell objfile_add_to_ordered_sections()\cell objfiles.c\cell\row
Refs Var:\cell num_ordered_sections\cell objfiles.c\cell\row
\cell ordered_sections\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function number_of_dots()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int number_of_dots ( const char* s )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Called by:\cell objfile_delete_from_ordered_sections()\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function objfile_alloc_data()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void objfile_alloc_data ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.c\cell\cell\row
Calls: \cell internal_error()\cell utils.c\cell\row
\cell xcalloc()\cell utils.c\cell\row
Called by:\cell create_objfile_using_objfile()\cell objfiles.c\cell\row
Refs Var:\cell objfile_data_registry\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function objfile_clear_hitlist()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void objfile_clear_hitlist ( void* notused )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell objfile_detach_hitlist()\cell objfiles.c\cell\row
\cell xfree()\cell utils.c\cell\row
Used in:\cell make_cleanup_objfile_init_clear_hitlist()\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function objfile_free_data()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void objfile_free_data ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.c\cell\cell\row
Calls: \cell internal_error()\cell utils.c\cell\row
\cell xfree()\cell utils.c\cell\row
Called by:\cell free_objfile_internal()\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function objfile_init_hitlist()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void objfile_init_hitlist ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell internal_error()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
Called by:\cell make_cleanup_objfile_init_clear_hitlist()\cell objfiles.c\cell\row
Refs Var:\cell cur_objfile_hitlist\cell objfiles.c\cell\row
\cell hitlist_max_elem\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function objfile_remove_from_restrict_list()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void objfile_remove_from_restrict_list ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell objfiles.c\cell\cell\row
Calls: \cell xfree()\cell utils.c\cell\row
Called by:\cell free_objfile_internal()\cell objfiles.c\cell\row
Refs Var:\cell objfile_list\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function objfile_set_restrict_list()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct objfile_list* objfile_set_restrict_list ( struct objfile_list* objlist )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Called by:\cell make_cleanup_restrict_to_objfile_list()\cell objfiles.c\cell\row
Refs Var:\cell objfile_list\cell objfiles.c\cell\row
\intbl0
}
