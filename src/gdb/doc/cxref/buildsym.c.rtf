{\rtf\ansi
\deff0
{\fonttbl
{\f0\froman Times New Roman;}
{\f1\fmodern Courier New;}
}
{\stylesheet
{\s0\f0\fs24 Normal;}
{\s1\f0\fs40\b\sb400\sa200\keepn\keep Heading 1;}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Heading 2;}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Heading 3;}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Heading 4;}
{\s5\f1\fs20\ql\sb50\sa50 Code;}
}
{\info{\comment
 This RTF file generated by cxref (version 1.6e).
 cxref program (c) Andrew M. Bishop 1995-2014.
 Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF buildsym.c
 CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
}}
\paperw11880\paperh16848\margl1440\margr1440\margt1440\margb1440
\sectd\plain
\s0\f0\fs24
{\s1\f0\fs40\b\sb400\sa200\keepn\keep File buildsym.c\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Included Files\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <errno.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <unistd.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_locale.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <locale.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../gdb/signals.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/symcat.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-file.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "xm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/xm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "nm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/i386/nm-i386.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/nm-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "tm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/tm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-tdep.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-tdep.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-thread-status.h"\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_types.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <inttypes.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_vm.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/kmod.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/tm-i386-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/fopen-bin.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdlib.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbarch.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_obstack.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/obstack.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "symfile.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "objfiles.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <uuid/uuid.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_obstack.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symfile.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "inlining.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <block.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/floatformat.h"\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_regex.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "gdbtypes.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "expression.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sqlite3.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdbtypes.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_assert.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "complaints.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_string.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "expression.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "bcache.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../include/filenames.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/hashtab.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "macrotab.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../include/demangle.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "block.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "cp-support.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "dictionary.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "inlining.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "buildsym.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "stabsread.h"\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Preprocessor definitions\par}
{\s5\f1\fs20\ql\sb50\sa50 #define EXTERN\par}
{\s5\f1\fs20\ql\sb50\sa50 #define INITIAL_CONTEXT_STACK_SIZE 10\par}
{\s5\f1\fs20\ql\sb50\sa50 #define INITIAL_LINE_VECTOR_LENGTH 1000\par}
{\s5\f1\fs20\ql\sb50\sa50 #define PROCESS_LINENUMBER_HOOK\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Variables\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable last_source_file\par}
{\s5\f1\fs20\ql\sb50\sa50 const char* last_source_file\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Inc. from:\cell buildsym.h\cell\row
Visible in:\cell arch-utils.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell dictionary.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell stabsread.c\cell\cell\row
Used in:\cell coff_end_symtab()\cell coffread.c\cell\row
\cell coff_symtab_read()\cell coffread.c\cell\row
\cell complete_symtab()\cell coffread.c\cell\row
\cell end_symtab()\cell buildsym.c\cell\row
\cell parse_partial_symbols()\cell mdebugread.c\cell\row
\cell patch_subfile_names()\cell buildsym.c\cell\row
\cell process_one_symbol()\cell dbxread.c\cell\row
\cell psymtab_to_symtab_1()\cell mdebugread.c\cell\row
\cell read_dbx_symtab()\cell dbxread.c\cell\row
\cell read_ofile_symtab()\cell dbxread.c\cell\row
\cell read_ofile_symtab_from_oso()\cell dbxread.c\cell\row
\cell start_symtab()\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable last_source_start_addr\par}
{\s5\f1\fs20\ql\sb50\sa50 CORE_ADDR last_source_start_addr\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Inc. from:\cell buildsym.h\cell\row
Visible in:\cell arch-utils.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell dictionary.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell stabsread.c\cell\cell\row
Used in:\cell coff_end_symtab()\cell coffread.c\cell\row
\cell end_symtab()\cell buildsym.c\cell\row
\cell read_ofile_symtab()\cell dbxread.c\cell\row
\cell read_ofile_symtab_from_oso()\cell dbxread.c\cell\row
\cell start_symtab()\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable subfiles\par}
{\s5\f1\fs20\ql\sb50\sa50 struct subfile* subfiles\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Inc. from:\cell buildsym.h\cell\row
Visible in:\cell arch-utils.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell dictionary.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell stabsread.c\cell\cell\row
Used in:\cell check_inlined_function_calls()\cell dwarf2read.c\cell\row
\cell dwarf2_start_subfile()\cell dwarf2read.c\cell\row
\cell end_symtab()\cell buildsym.c\cell\row
\cell start_subfile()\cell buildsym.c\cell\row
\cell start_symtab()\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable current_subfile\par}
{\s5\f1\fs20\ql\sb50\sa50 struct subfile* current_subfile\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Inc. from:\cell buildsym.h\cell\row
Visible in:\cell arch-utils.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell dictionary.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell stabsread.c\cell\cell\row
Used in:\cell coff_symtab_read()\cell coffread.c\cell\row
\cell decode_line_numbers()\cell dwarfread.c\cell\row
\cell define_symbol()\cell stabsread.c\cell\row
\cell dwarf2_record_line()\cell dwarf2read.c\cell\row
\cell dwarf2_start_subfile()\cell dwarf2read.c\cell\row
\cell end_symtab()\cell buildsym.c\cell\row
\cell enter_linenos()\cell coffread.c\cell\row
\cell process_dies()\cell dwarfread.c\cell\row
\cell process_one_symbol()\cell dbxread.c\cell\row
\cell psymtab_to_symtab_1()\cell mdebugread.c\cell\row
\cell push_subfile()\cell buildsym.c\cell\row
\cell read_enum_type()\cell stabsread.c\cell\row
\cell record_debugformat()\cell buildsym.c\cell\row
\cell record_producer()\cell buildsym.c\cell\row
\cell start_subfile()\cell buildsym.c\cell\row
\cell start_symtab()\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable processing_gcc_compilation\par}
{\s5\f1\fs20\ql\sb50\sa50 unsigned char processing_gcc_compilation\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Inc. from:\cell buildsym.h\cell\row
Visible in:\cell arch-utils.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell dictionary.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell stabsread.c\cell\cell\row
Used in:\cell default_stabs_argument_has_addr()\cell arch-utils.c\cell\row
\cell define_symbol()\cell stabsread.c\cell\row
\cell finish_block()\cell buildsym.c\cell\row
\cell handle_producer()\cell dwarfread.c\cell\row
\cell parse_partial_symbols()\cell mdebugread.c\cell\row
\cell parse_procedure()\cell mdebugread.c\cell\row
\cell process_one_symbol()\cell dbxread.c\cell\row
\cell psymtab_to_symtab_1()\cell mdebugread.c\cell\row
\cell read_dbx_symtab()\cell dbxread.c\cell\row
\cell read_file_scope()\cell dwarf2read.c\cell\row
\cell read_ofile_symtab()\cell dbxread.c\cell\row
\cell read_ofile_symtab_from_oso()\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable processing_acc_compilation\par}
{\s5\f1\fs20\ql\sb50\sa50 unsigned char processing_acc_compilation\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Inc. from:\cell buildsym.h\cell\row
Visible in:\cell arch-utils.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell dictionary.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell stabsread.c\cell\cell\row
Used in:\cell coffstab_build_psymtabs()\cell dbxread.c\cell\row
\cell elfstab_build_psymtabs()\cell dbxread.c\cell\row
\cell read_dbx_symtab()\cell dbxread.c\cell\row
\cell read_ofile_symtab()\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable symnum\par}
{\s5\f1\fs20\ql\sb50\sa50 unsigned int symnum\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Inc. from:\cell buildsym.h\cell\row
Visible in:\cell arch-utils.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell dictionary.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell stabsread.c\cell\cell\row
Used in:\cell add_old_header_file()\cell dbxread.c\cell\row
\cell coff_read_enum_type()\cell coffread.c\cell\row
\cell coff_read_struct_type()\cell coffread.c\cell\row
\cell coff_symtab_read()\cell coffread.c\cell\row
\cell dbx_lookup_type()\cell stabsread.c\cell\row
\cell dbx_next_symbol_text()\cell dbxread.c\cell\row
\cell find_corresponding_bincl_psymtab()\cell dbxread.c\cell\row
\cell oso_scan_partial_symtab()\cell dbxread.c\cell\row
\cell parse_partial_symbols()\cell mdebugread.c\cell\row
\cell process_one_symbol()\cell dbxread.c\cell\row
\cell read_cpp_abbrev()\cell stabsread.c\cell\row
\cell read_dbx_symtab()\cell dbxread.c\cell\row
\cell read_ofile_symtab()\cell dbxread.c\cell\row
\cell read_ofile_symtab_from_oso()\cell dbxread.c\cell\row
\cell read_one_sym()\cell coffread.c\cell\row
\cell read_oso_nlists()\cell dbxread.c\cell\row
\cell read_type()\cell stabsread.c\cell\row
\cell set_namestring_1()\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable file_symbols\par}
{\s5\f1\fs20\ql\sb50\sa50 struct pending* file_symbols\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Inc. from:\cell buildsym.h\cell\row
Visible in:\cell arch-utils.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell dictionary.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell stabsread.c\cell\cell\row
Used in:\cell dwarfread.c\cell\cell\row
\cell buildsym_init()\cell buildsym.c\cell\row
\cell cleanup_undefined_types()\cell stabsread.c\cell\row
\cell coff_read_enum_type()\cell coffread.c\cell\row
\cell define_symbol()\cell stabsread.c\cell\row
\cell dwarf2_build_psymtabs_hard()\cell dwarf2read.c\cell\row
\cell end_symtab()\cell buildsym.c\cell\row
\cell find_debug_info_for_pst()\cell dwarf2read.c\cell\row
\cell new_symbol()\cell dwarf2read.c\cell\row
\cell process_coff_symbol()\cell coffread.c\cell\row
\cell process_full_comp_unit()\cell dwarf2read.c\cell\row
\cell read_enum_type()\cell stabsread.c\cell\row
\cell read_func_scope()\cell dwarf2read.c\cell\row
\cell read_type()\cell stabsread.c\cell\row
\cell really_free_pendings()\cell buildsym.c\cell\row
\cell start_symtab()\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable global_symbols\par}
{\s5\f1\fs20\ql\sb50\sa50 struct pending* global_symbols\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Inc. from:\cell buildsym.h\cell\row
Visible in:\cell arch-utils.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell dictionary.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell stabsread.c\cell\cell\row
Used in:\cell buildsym_init()\cell buildsym.c\cell\row
\cell define_symbol()\cell stabsread.c\cell\row
\cell end_symtab()\cell buildsym.c\cell\row
\cell finish_global_stabs()\cell stabsread.c\cell\row
\cell new_symbol()\cell dwarf2read.c\cell\row
\cell patch_block_stabs()\cell stabsread.c\cell\row
\cell process_coff_symbol()\cell coffread.c\cell\row
\cell read_common_block()\cell dwarf2read.c\cell\row
\cell really_free_pendings()\cell buildsym.c\cell\row
\cell start_symtab()\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable local_symbols\par}
{\s5\f1\fs20\ql\sb50\sa50 struct pending* local_symbols\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Inc. from:\cell buildsym.h\cell\row
Visible in:\cell arch-utils.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell dictionary.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell stabsread.c\cell\cell\row
Used in:\cell coff_read_enum_type()\cell coffread.c\cell\row
\cell coff_symtab_read()\cell coffread.c\cell\row
\cell common_block_end()\cell stabsread.c\cell\row
\cell common_block_start()\cell stabsread.c\cell\row
\cell define_symbol()\cell stabsread.c\cell\row
\cell end_symtab()\cell buildsym.c\cell\row
\cell process_coff_symbol()\cell coffread.c\cell\row
\cell process_one_symbol()\cell dbxread.c\cell\row
\cell psymtab_to_symtab_1()\cell mdebugread.c\cell\row
\cell push_context()\cell buildsym.c\cell\row
\cell read_func_scope()\cell dwarf2read.c\cell\row
\cell read_inlined_subroutine_scope()\cell dwarf2read.c\cell\row
\cell read_lexical_block_scope()\cell dwarf2read.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable param_symbols\par}
{\s5\f1\fs20\ql\sb50\sa50 struct pending* param_symbols\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Inc. from:\cell buildsym.h\cell\row
Visible in:\cell arch-utils.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell dictionary.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell stabsread.c\cell\cell\row
Used in:\cell push_context()\cell buildsym.c\cell\row
\cell read_func_scope()\cell dwarf2read.c\cell\row
\cell read_inlined_subroutine_scope()\cell dwarf2read.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable context_stack\par}
{\s5\f1\fs20\ql\sb50\sa50 struct context_stack* context_stack\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Inc. from:\cell buildsym.h\cell\row
Visible in:\cell arch-utils.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell dictionary.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell stabsread.c\cell\cell\row
Used in:\cell pop_context()\cell buildsym.c\cell\row
\cell push_context()\cell buildsym.c\cell\row
\cell start_symtab()\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable context_stack_depth\par}
{\s5\f1\fs20\ql\sb50\sa50 int context_stack_depth\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Inc. from:\cell buildsym.h\cell\row
Visible in:\cell arch-utils.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell dictionary.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell stabsread.c\cell\cell\row
Used in:\cell coff_symtab_read()\cell coffread.c\cell\row
\cell end_symtab()\cell buildsym.c\cell\row
\cell pop_context()\cell buildsym.c\cell\row
\cell process_one_symbol()\cell dbxread.c\cell\row
\cell push_context()\cell buildsym.c\cell\row
\cell read_func_scope()\cell dwarf2read.c\cell\row
\cell start_symtab()\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable context_stack_size\par}
{\s5\f1\fs20\ql\sb50\sa50 int context_stack_size\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Inc. from:\cell buildsym.h\cell\row
Visible in:\cell arch-utils.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell dictionary.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell stabsread.c\cell\cell\row
Used in:\cell push_context()\cell buildsym.c\cell\row
\cell start_symtab()\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable within_function\par}
{\s5\f1\fs20\ql\sb50\sa50 int within_function\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Inc. from:\cell buildsym.h\cell\row
Visible in:\cell arch-utils.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell dictionary.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell stabsread.c\cell\cell\row
Used in:\cell coff_read_enum_type()\cell coffread.c\cell\row
\cell coff_symtab_read()\cell coffread.c\cell\row
\cell define_symbol()\cell stabsread.c\cell\row
\cell process_coff_symbol()\cell coffread.c\cell\row
\cell process_one_symbol()\cell dbxread.c\cell\row
\cell start_symtab()\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable pending_blocks\par}
{\s5\f1\fs20\ql\sb50\sa50 struct pending_block* pending_blocks\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Inc. from:\cell buildsym.h\cell\row
Visible in:\cell arch-utils.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell dictionary.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell stabsread.c\cell\cell\row
Used in:\cell buildsym_init()\cell buildsym.c\cell\row
\cell end_symtab()\cell buildsym.c\cell\row
\cell finish_block()\cell buildsym.c\cell\row
\cell free_pending_blocks()\cell buildsym.c\cell\row
\cell make_blockvector()\cell buildsym.c\cell\row
\cell push_context()\cell buildsym.c\cell\row
\cell record_pending_block()\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable subfile_stack\par}
{\s5\f1\fs20\ql\sb50\sa50 struct subfile_stack* subfile_stack\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Inc. from:\cell buildsym.h\cell\row
Visible in:\cell arch-utils.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell dictionary.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell stabsread.c\cell\cell\row
Used in:\cell pop_subfile()\cell buildsym.c\cell\row
\cell push_subfile()\cell buildsym.c\cell\row
\cell read_ofile_symtab()\cell dbxread.c\cell\row
\cell read_ofile_symtab_from_oso()\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable next_symbol_text_func\par}
{\s5\f1\fs20\ql\sb50\sa50 const char* (*next_symbol_text_func)(struct objfile*)\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Inc. from:\cell buildsym.h\cell\row
Visible in:\cell arch-utils.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell dictionary.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell stabsread.c\cell\cell\row
Used in:\cell dbx_psymtab_to_symtab()\cell dbxread.c\cell\row
\cell define_symbol()\cell stabsread.c\cell\row
\cell error_type()\cell stabsread.c\cell\row
\cell mdebug_psymtab_to_symtab()\cell mdebugread.c\cell\row
\cell parse_partial_symbols()\cell mdebugread.c\cell\row
\cell process_symbol_types_only()\cell stabsread.c\cell\row
\cell read_args()\cell stabsread.c\cell\row
\cell read_baseclasses()\cell stabsread.c\cell\row
\cell read_dbx_symtab()\cell dbxread.c\cell\row
\cell read_enum_type()\cell stabsread.c\cell\row
\cell read_member_functions()\cell stabsread.c\cell\row
\cell read_struct_fields()\cell stabsread.c\cell\row
\cell read_tilde_fields()\cell stabsread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable type_vector\par}
{\s5\f1\fs20\ql\sb50\sa50 struct type** type_vector\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Inc. from:\cell buildsym.h\cell\row
Visible in:\cell arch-utils.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell dictionary.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell stabsread.c\cell\cell\row
Used in:\cell coff_lookup_type()\cell coffread.c\cell\row
\cell coff_symtab_read()\cell coffread.c\cell\row
\cell dbx_lookup_type()\cell stabsread.c\cell\row
\cell end_stabs()\cell stabsread.c\cell\row
\cell start_stabs()\cell stabsread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable type_vector_length\par}
{\s5\f1\fs20\ql\sb50\sa50 int type_vector_length\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Inc. from:\cell buildsym.h\cell\row
Visible in:\cell arch-utils.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell dictionary.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell stabsread.c\cell\cell\row
Used in:\cell coff_lookup_type()\cell coffread.c\cell\row
\cell coff_symtab_read()\cell coffread.c\cell\row
\cell dbx_lookup_type()\cell stabsread.c\cell\row
\cell end_stabs()\cell stabsread.c\cell\row
\cell start_stabs()\cell stabsread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Variable pending_macros\par}
{\s5\f1\fs20\ql\sb50\sa50 struct macro_table* pending_macros\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Inc. from:\cell buildsym.h\cell\row
Visible in:\cell arch-utils.c\cell\cell\row
\cell buildsym.c\cell\cell\row
\cell coffread.c\cell\cell\row
\cell dbxread.c\cell\cell\row
\cell dictionary.c\cell\cell\row
\cell dwarf2read.c\cell\cell\row
\cell dwarfread.c\cell\cell\row
\cell elfread.c\cell\cell\row
\cell inlining.c\cell\cell\row
\cell mdebugread.c\cell\cell\row
\cell mipsread.c\cell\cell\row
\cell nlmread.c\cell\cell\row
\cell objfiles.c\cell\cell\row
\cell stabsread.c\cell\cell\row
Used in:\cell buildsym_init()\cell buildsym.c\cell\row
\cell end_symtab()\cell buildsym.c\cell\row
\cell macro_start_file()\cell dwarf2read.c\cell\row
\cell really_free_pendings()\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable free_pendings\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct pending* free_pendings\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell add_free_pendings()\cell\cell\row
\cell add_symbol_to_list()\cell\cell\row
\cell buildsym_init()\cell\cell\row
\cell finish_block()\cell\cell\row
\cell merge_symbol_lists()\cell\cell\row
\cell really_free_pendings()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable have_line_numbers\par}
{\s5\f1\fs20\ql\sb50\sa50 static int have_line_numbers\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell end_symtab()\cell\cell\row
\cell record_line()\cell\cell\row
\cell start_symtab()\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Functions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function add_free_pendings()\par}
{\s5\f1\fs20\ql\sb50\sa50 void add_free_pendings ( struct pending* list )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell buildsym.h\cell\cell\row
Refs Var:\cell free_pendings\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function add_symbol_to_list()\par}
{\s5\f1\fs20\ql\sb50\sa50 void add_symbol_to_list ( struct symbol* symbol, struct pending** listhead )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell buildsym.h\cell\cell\row
Calls: \cell cp_scan_for_anonymous_namespaces()\cell cp-namespace.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
Called by:\cell coff_read_enum_type()\cell coffread.c\cell\row
\cell common_block_end()\cell stabsread.c\cell\row
\cell define_symbol()\cell stabsread.c\cell\row
\cell enum_type()\cell dwarfread.c\cell\row
\cell merge_symbol_lists()\cell buildsym.c\cell\row
\cell new_symbol()\cell dwarf2read.c\cell\row
\cell patch_block_stabs()\cell stabsread.c\cell\row
\cell process_coff_symbol()\cell coffread.c\cell\row
\cell psymtab_to_symtab_1()\cell mdebugread.c\cell\row
\cell read_common_block()\cell dwarf2read.c\cell\row
\cell read_enum_type()\cell stabsread.c\cell\row
\cell synthesize_typedef()\cell dwarfread.c\cell\row
Refs Var:\cell free_pendings\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function buildsym_init()\par}
{\s5\f1\fs20\ql\sb50\sa50 void buildsym_init ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell buildsym.h\cell\cell\row
Called by:\cell buildsym_new_init()\cell buildsym.c\cell\row
\cell dbx_psymtab_to_symtab_1()\cell dbxread.c\cell\row
\cell process_full_comp_unit()\cell dwarf2read.c\cell\row
\cell psymtab_to_symtab_1()\cell dwarfread.c\cell\row
Refs Var:\cell file_symbols\cell buildsym.c\cell\row
\cell free_pendings\cell buildsym.c\cell\row
\cell global_symbols\cell buildsym.c\cell\row
\cell pending_blocks\cell buildsym.c\cell\row
\cell pending_macros\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function buildsym_new_init()\par}
{\s5\f1\fs20\ql\sb50\sa50 void buildsym_new_init ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell buildsym.h\cell\cell\row
Calls: \cell buildsym_init()\cell buildsym.c\cell\row
Called by:\cell coffstab_build_psymtabs()\cell dbxread.c\cell\row
\cell dbx_new_init()\cell dbxread.c\cell\row
\cell elf_new_init()\cell elfread.c\cell\row
\cell elfstab_build_psymtabs()\cell dbxread.c\cell\row
\cell mdebug_build_psymtabs()\cell mdebugread.c\cell\row
\cell mipscoff_new_init()\cell mipsread.c\cell\row
\cell nlm_new_init()\cell nlmread.c\cell\row
\cell stabsect_build_psymtabs()\cell dbxread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function compare_line_numbers()\par}
{\s5\f1\fs20\ql\sb50\sa50 int compare_line_numbers ( const void* ln1p, const void* ln2p )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell buildsym.h\cell\cell\row
Used in:\cell end_symtab()\cell buildsym.c\cell\row
\cell objfile_relocate()\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function end_symtab()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct symtab* end_symtab ( CORE_ADDR end_addr, struct objfile* objfile, int section )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell buildsym.h\cell\cell\row
Calls: \cell allocate_symtab()\cell symfile.c\cell\row
\cell cleanup_undefined_arrays()\cell gdbtypes.c\cell\row
\cell cleanup_undefined_fields()\cell stabsread.c\cell\row
\cell cleanup_undefined_types()\cell stabsread.c\cell\row
\cell complaint()\cell complaints.c\cell\row
\cell cp_finalize_namespace()\cell cp-namespace.c\cell\row
\cell finish_block()\cell buildsym.c\cell\row
\cell finish_global_stabs()\cell stabsread.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell make_blockvector()\cell buildsym.c\cell\row
\cell obsavestring()\cell symfile.c\cell\row
\cell pop_context()\cell buildsym.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell  __builtin___memcpy_chk(), __builtin___strcpy_chk(), __builtin_object_size(), __inline_memcpy_chk(), __inline_strcpy_chk(), _obstack_newchunk(), qsort(), strlen()\cell\cell\row
Called by:\cell coff_end_symtab()\cell coffread.c\cell\row
\cell process_full_comp_unit()\cell dwarf2read.c\cell\row
\cell process_one_symbol()\cell dbxread.c\cell\row
\cell psymtab_to_symtab_1()\cell mdebugread.c\cell\row
\cell read_file_scope()\cell dwarfread.c\cell\row
\cell read_ofile_symtab()\cell dbxread.c\cell\row
\cell read_ofile_symtab_from_oso()\cell dbxread.c\cell\row
Refs Func:\cell compare_line_numbers()\cell buildsym.c\cell\row
Refs Var:\cell context_stack_depth\cell buildsym.c\cell\row
\cell current_subfile\cell buildsym.c\cell\row
\cell file_symbols\cell buildsym.c\cell\row
\cell global_symbols\cell buildsym.c\cell\row
\cell have_line_numbers\cell buildsym.c\cell\row
\cell last_source_file\cell buildsym.c\cell\row
\cell last_source_start_addr\cell buildsym.c\cell\row
\cell local_symbols\cell buildsym.c\cell\row
\cell pending_blocks\cell buildsym.c\cell\row
\cell pending_macros\cell buildsym.c\cell\row
\cell subfiles\cell buildsym.c\cell\row
\cell symfile_complaints\cell complaints.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function find_symbol_in_list()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct symbol* find_symbol_in_list ( struct pending* list, char* name, int length )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell buildsym.h\cell\cell\row
Calls: \cell  strncmp()\cell\cell\row
Called by:\cell patch_block_stabs()\cell stabsread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function finish_block()\par}
{\s5\f1\fs20\ql\sb50\sa50 void finish_block ( struct symbol* symbol, struct pending** listhead, struct pending_block* old_blocks, CORE_ADDR start, CORE_ADDR end, struct address_range_list* ranges, struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell buildsym.h\cell\cell\row
Calls: \cell allocate_block()\cell block.c\cell\row
\cell complaint()\cell complaints.c\cell\row
\cell contained_in()\cell block.c\cell\row
\cell cp_set_block_scope()\cell cp-namespace.c\cell\row
\cell dict_create_hashed()\cell dictionary.c\cell\row
\cell dict_create_linear()\cell dictionary.c\cell\row
\cell dict_iterator_first()\cell dictionary.c\cell\row
\cell dict_iterator_next()\cell dictionary.c\cell\row
\cell paddr_nz()\cell utils.c\cell\row
\cell record_pending_block()\cell buildsym.c\cell\row
\cell symbol_natural_name()\cell symtab.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk(), _obstack_newchunk()\cell\cell\row
Called by:\cell coff_symtab_read()\cell coffread.c\cell\row
\cell end_symtab()\cell buildsym.c\cell\row
\cell process_one_symbol()\cell dbxread.c\cell\row
\cell read_func_scope()\cell dwarf2read.c\cell\row
\cell read_inlined_subroutine_scope()\cell dwarf2read.c\cell\row
\cell read_lexical_block_scope()\cell dwarf2read.c\cell\row
Refs Var:\cell demangle\cell utils.c\cell\row
\cell free_pendings\cell buildsym.c\cell\row
\cell pending_blocks\cell buildsym.c\cell\row
\cell processing_gcc_compilation\cell buildsym.c\cell\row
\cell symfile_complaints\cell complaints.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function free_pending_blocks()\par}
{\s5\f1\fs20\ql\sb50\sa50 void free_pending_blocks ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell buildsym.h\cell\cell\row
Called by:\cell dbx_symfile_read()\cell dbxread.c\cell\row
\cell really_free_pendings()\cell buildsym.c\cell\row
Refs Var:\cell pending_blocks\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function hashname()\par}
{\s5\f1\fs20\ql\sb50\sa50 int hashname ( const char* name )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell buildsym.h\cell\cell\row
Calls: \cell hash()\cell bcache.c\cell\row
\cell  strlen()\cell\cell\row
Called by:\cell common_block_end()\cell stabsread.c\cell\row
\cell define_symbol()\cell stabsread.c\cell\row
\cell parse_symbol()\cell mdebugread.c\cell\row
\cell patch_opaque_types()\cell coffread.c\cell\row
\cell process_coff_symbol()\cell coffread.c\cell\row
\cell scan_file_globals()\cell stabsread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function merge_symbol_lists()\par}
{\s5\f1\fs20\ql\sb50\sa50 void merge_symbol_lists ( struct pending** srclist, struct pending** targetlist )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell buildsym.h\cell\cell\row
Calls: \cell add_symbol_to_list()\cell buildsym.c\cell\row
\cell merge_symbol_lists()\cell buildsym.c\cell\row
Called by:\cell merge_symbol_lists()\cell buildsym.c\cell\row
Refs Var:\cell free_pendings\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function patch_subfile_names()\par}
{\s5\f1\fs20\ql\sb50\sa50 void patch_subfile_names ( struct subfile* subfile, const char* name )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell buildsym.h\cell\cell\row
Calls: \cell deduce_language_from_filename()\cell symfile.c\cell\row
\cell savestring()\cell utils.c\cell\row
\cell  strlen()\cell\cell\row
Called by:\cell process_one_symbol()\cell dbxread.c\cell\row
Refs Var:\cell last_source_file\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function pop_context()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct context_stack* pop_context ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell buildsym.h\cell\cell\row
Calls: \cell internal_error()\cell utils.c\cell\row
Called by:\cell coff_symtab_read()\cell coffread.c\cell\row
\cell end_symtab()\cell buildsym.c\cell\row
\cell process_one_symbol()\cell dbxread.c\cell\row
\cell read_func_scope()\cell dwarf2read.c\cell\row
\cell read_inlined_subroutine_scope()\cell dwarf2read.c\cell\row
\cell read_lexical_block_scope()\cell dwarf2read.c\cell\row
Refs Var:\cell context_stack\cell buildsym.c\cell\row
\cell context_stack_depth\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function pop_subfile()\par}
{\s5\f1\fs20\ql\sb50\sa50 char* pop_subfile ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell buildsym.h\cell\cell\row
Calls: \cell internal_error()\cell utils.c\cell\row
\cell xfree()\cell utils.c\cell\row
Called by:\cell process_one_symbol()\cell dbxread.c\cell\row
Refs Var:\cell subfile_stack\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function push_context()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct context_stack* push_context ( int desc, CORE_ADDR valu )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell buildsym.h\cell\cell\row
Calls: \cell xrealloc()\cell utils.c\cell\row
Called by:\cell coff_symtab_read()\cell coffread.c\cell\row
\cell process_one_symbol()\cell dbxread.c\cell\row
\cell read_func_scope()\cell dwarf2read.c\cell\row
\cell read_inlined_subroutine_scope()\cell dwarf2read.c\cell\row
\cell read_lexical_block_scope()\cell dwarf2read.c\cell\row
Refs Var:\cell context_stack\cell buildsym.c\cell\row
\cell context_stack_depth\cell buildsym.c\cell\row
\cell context_stack_size\cell buildsym.c\cell\row
\cell local_symbols\cell buildsym.c\cell\row
\cell param_symbols\cell buildsym.c\cell\row
\cell pending_blocks\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function push_subfile()\par}
{\s5\f1\fs20\ql\sb50\sa50 void push_subfile ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell buildsym.h\cell\cell\row
Calls: \cell internal_error()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
Called by:\cell process_one_symbol()\cell dbxread.c\cell\row
Refs Var:\cell current_subfile\cell buildsym.c\cell\row
\cell subfile_stack\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function really_free_pendings()\par}
{\s5\f1\fs20\ql\sb50\sa50 void really_free_pendings ( void* dummy )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell buildsym.h\cell\cell\row
Calls: \cell free_macro_table()\cell macrotab.c\cell\row
\cell free_pending_blocks()\cell buildsym.c\cell\row
\cell xfree()\cell utils.c\cell\row
Used in:\cell dbx_psymtab_to_symtab_1()\cell dbxread.c\cell\row
\cell dbx_symfile_read()\cell dbxread.c\cell\row
\cell process_full_comp_unit()\cell dwarf2read.c\cell\row
\cell psymtab_to_symtab_1()\cell dwarfread.c\cell\row
Refs Var:\cell file_symbols\cell buildsym.c\cell\row
\cell free_pendings\cell buildsym.c\cell\row
\cell global_symbols\cell buildsym.c\cell\row
\cell pending_macros\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function record_debugformat()\par}
{\s5\f1\fs20\ql\sb50\sa50 void record_debugformat ( const char* format )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell buildsym.h\cell\cell\row
Calls: \cell savestring()\cell utils.c\cell\row
\cell  strlen()\cell\cell\row
Called by:\cell coff_start_symtab()\cell coffread.c\cell\row
\cell process_one_symbol()\cell dbxread.c\cell\row
\cell read_file_scope()\cell dwarf2read.c\cell\row
Refs Var:\cell current_subfile\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function record_line()\par}
{\s5\f1\fs20\ql\sb50\sa50 void record_line ( struct subfile* subfile, int line, CORE_ADDR pc, CORE_ADDR end_pc, enum line_table_entry_type entry_type )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell buildsym.h\cell\cell\row
Calls: \cell fprintf_unfiltered()\cell utils.c\cell\row
\cell gdbarch_addr_bits_remove()\cell gdbarch.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell xrealloc()\cell utils.c\cell\row
Called by:\cell check_inlined_function_calls()\cell dwarf2read.c\cell\row
\cell coff_symtab_read()\cell coffread.c\cell\row
\cell decode_line_numbers()\cell dwarfread.c\cell\row
\cell dwarf2_record_line()\cell dwarf2read.c\cell\row
\cell enter_linenos()\cell coffread.c\cell\row
\cell process_one_symbol()\cell dbxread.c\cell\row
\cell psymtab_to_symtab_1()\cell mdebugread.c\cell\row
Refs Var:\cell current_gdbarch\cell gdbarch.c\cell\row
\cell dwarf2_debug_inlined_stepping\cell dwarf2read.c\cell\row
\cell gdb_stdout\cell main.c\cell\row
\cell have_line_numbers\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function record_pending_block()\par}
{\s5\f1\fs20\ql\sb50\sa50 void record_pending_block ( struct objfile* objfile, struct block* block, struct pending_block* opblock )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell buildsym.h\cell\cell\row
Calls: \cell  _obstack_newchunk()\cell\cell\row
Called by:\cell finish_block()\cell buildsym.c\cell\row
Refs Var:\cell pending_blocks\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function record_producer()\par}
{\s5\f1\fs20\ql\sb50\sa50 void record_producer ( const char* producer )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell buildsym.h\cell\cell\row
Calls: \cell savestring()\cell utils.c\cell\row
\cell  strlen()\cell\cell\row
Called by:\cell read_file_scope()\cell dwarf2read.c\cell\row
Refs Var:\cell current_subfile\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function start_subfile()\par}
{\s5\f1\fs20\ql\sb50\sa50 void start_subfile ( const char* name, char* dirname )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell buildsym.h\cell\cell\row
Calls: \cell deduce_language_from_filename()\cell symfile.c\cell\row
\cell savestring()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk(), strcmp(), strlen()\cell\cell\row
Called by:\cell dwarf2_start_subfile()\cell dwarf2read.c\cell\row
\cell process_one_symbol()\cell dbxread.c\cell\row
\cell start_symtab()\cell buildsym.c\cell\row
Refs Var:\cell current_subfile\cell buildsym.c\cell\row
\cell subfiles\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function start_symtab()\par}
{\s5\f1\fs20\ql\sb50\sa50 void start_symtab ( const char* name, char* dirname, CORE_ADDR start_addr )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell buildsym.h\cell\cell\row
Calls: \cell cp_initialize_namespace()\cell cp-namespace.c\cell\row
\cell start_subfile()\cell buildsym.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
Called by:\cell coff_start_symtab()\cell coffread.c\cell\row
\cell process_one_symbol()\cell dbxread.c\cell\row
\cell read_file_scope()\cell dwarf2read.c\cell\row
Refs Var:\cell context_stack\cell buildsym.c\cell\row
\cell context_stack_depth\cell buildsym.c\cell\row
\cell context_stack_size\cell buildsym.c\cell\row
\cell current_subfile\cell buildsym.c\cell\row
\cell file_symbols\cell buildsym.c\cell\row
\cell global_symbols\cell buildsym.c\cell\row
\cell have_line_numbers\cell buildsym.c\cell\row
\cell last_source_file\cell buildsym.c\cell\row
\cell last_source_start_addr\cell buildsym.c\cell\row
\cell subfiles\cell buildsym.c\cell\row
\cell within_function\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function compare_blocks()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int compare_blocks ( const void* v1, const void* v2 )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell make_blockvector()\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function make_blockvector()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct blockvector* make_blockvector ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell complaint()\cell complaints.c\cell\row
\cell hex_string()\cell utils.c\cell\row
\cell  _obstack_newchunk(), qsort()\cell\cell\row
Called by:\cell end_symtab()\cell buildsym.c\cell\row
Refs Func:\cell compare_blocks()\cell buildsym.c\cell\row
Refs Var:\cell pending_blocks\cell buildsym.c\cell\row
\cell symfile_complaints\cell complaints.c\cell\row
\intbl0
}
