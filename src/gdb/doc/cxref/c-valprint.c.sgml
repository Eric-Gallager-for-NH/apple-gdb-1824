<!DOCTYPE LINUXDOC SYSTEM>

<!-- This SGML file generated by cxref (version 1.6e). -->
<!-- cxref program (c) Andrew M. Bishop 1995-2014. -->

<!--
Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF c-valprint.c
CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
-->

<article>

<title>Cross reference for c-valprint.c of gdb.cxref.
<author>cxref

<sect>File c-valprint.c

<sect1>Included Files

<p>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<itemize>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
<item><tt>#include &lt;sys/time.h&gt;</tt>
<item><tt>#include &lt;time.h&gt;</tt>
<item><tt>#include &lt;sys/types.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
<item><tt>#include &lt;errno.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
<item><tt>#include &lt;regex.h&gt;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;unistd.h&gt;</tt>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;gdb_locale.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<item><tt>#include &lt;locale.h&gt;</tt>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../gdb/signals.h&quot;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &quot;../include/libiberty.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/symcat.h&quot;</tt>
</itemize>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
<item><tt>#include &quot;ui-file.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;xm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/xm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &lt;mach/mach.h&gt;</tt>
<item><tt>#include &lt;signal.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;nm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/i386/nm-i386.h&quot;</tt>
<item><tt>#include &quot;macosx/nm-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;tm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/tm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;macosx/i386-macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/i386-macosx-thread-status.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &lt;mach/mach_types.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
<item><tt>#include &lt;inttypes.h&gt;</tt>
<item><tt>#include &lt;mach/mach_vm.h&gt;</tt>
<item><tt>#include &lt;mach/kmod.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;macosx/tm-i386-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;../include/fopen-bin.h&quot;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdlib.h&gt;</tt>
<item><tt>#include &quot;gdbarch.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_string.h&quot;</tt>
<itemize>
<item><tt>#include &lt;string.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdbtypes.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;expression.h&quot;</tt>
<itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/floatformat.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;value.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
<item><tt>#include &quot;gdb_regex.h&quot;</tt>
<itemize>
<item><tt>#include &lt;regex.h&gt;</tt>
</itemize>
<item><tt>#include &quot;frame.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
</itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;gdbtypes.h&quot;</tt>
<item><tt>#include &quot;expression.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;valprint.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;language.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;c-lang.h&quot;</tt>
<itemize>
<item><tt>#include &quot;value.h&quot;</tt>
<item><tt>#include &quot;macroexp.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;cp-abi.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;target.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;dcache.h&quot;</tt>
<item><tt>#include &quot;memattr.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
</itemize>
</itemize>

<sect1>Global Function c_val_print()

<p><tt>int c_val_print ( struct type* type, const gdb_byte* valaddr, int embedded_offset, CORE_ADDR address, struct ui_file* stream, int format, int deref_ref, int recurse, enum val_prettyprint pretty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>c-lang.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>check_typedef()  :  gdbtypes.c
<item>common_val_print()  :  valprint.c
<item>cp_is_vtbl_member()  :  cp-valprint.c
<item>cp_is_vtbl_ptr_type()  :  cp-valprint.c
<item>cp_print_class_member()  :  cp-valprint.c
<item>cp_print_class_method()  :  cp-valprint.c
<item>cp_print_value_fields()  :  cp-valprint.c
<item>deprecated_print_address_numeric()  :  printcmd.c
<item>error()  :  utils.c
<item>extract_typed_address()  :  findvar.c
<item>fprintf_filtered()  :  utils.c
<item>fputs_filtered()  :  utils.c
<item>gdb_flush()  :  ui-file.c
<item>lookup_minimal_symbol_by_pc()  :  minsyms.c
<item>lookup_pointer_type()  :  gdbtypes.c
<item>lookup_symbol()  :  symtab.c
<item>objc_fixup_class_length()  :  objc-lang.c
<item>objc_fixup_ivar_offset()  :  objc-lang.c
<item>print_address_demangle()  :  printcmd.c
<item>print_floating()  :  valprint.c
<item>print_function_pointer_address()  :  c-valprint.c
<item>print_longest()  :  valprint.c
<item>print_scalar_formatted()  :  printcmd.c
<item>print_spaces_filtered()  :  utils.c
<item>quit()  :  utils.c
<item>symbol_natural_name()  :  symtab.c
<item>type_print()  :  typeprint.c
<item>unpack_long()  :  value.c
<item>unpack_pointer()  :  value.c
<item>val_print_array_elements()  :  valprint.c
<item>val_print_string()  :  valprint.c
<item>val_print_type_code_int()  :  valprint.c
<item>value_addr()  :  valops.c
<item>value_at()  :  valops.c
<item>value_contents()  :  value.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>ada_val_print_1()  :  ada-valprint.c
<item>java_val_print()  :  jv-valprint.c
<item>m2_val_print()  :  m2-valprint.c
<item>scm_val_print()  :  scm-valprint.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>c-lang.c
<item>objc-lang.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>addressprint  :  valprint.c
<item>builtin_type_void  :  gdbtypes.c
<item>current_language  :  language.c
<item>demangle  :  utils.c
<item>output_format  :  valprint.c
<item>prettyprint_arrays  :  valprint.c
<item>print_max  :  valprint.c
<item>quit_flag  :  utils.c
<item>stop_print_at_null  :  valprint.c
<item>unionprint  :  valprint.c
<item>vtblprint  :  cp-valprint.c
</itemize>
</descrip>

<sect1>Global Function c_value_print()

<p><tt>int c_value_print ( struct value* val, struct ui_file* stream, int format, enum val_prettyprint pretty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>c-lang.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>check_typedef()  :  gdbtypes.c
<item>deprecated_set_value_type()  :  value.c
<item>deprecated_value_address_hack()  :  value.c
<item>fprintf_filtered()  :  utils.c
<item>get_closure_dynamic_type()  :  gdbtypes.c
<item>lookup_pointer_type()  :  gdbtypes.c
<item>lookup_reference_type()  :  gdbtypes.c
<item>type_print()  :  typeprint.c
<item>val_print()  :  valprint.c
<item>value_contents_all()  :  value.c
<item>value_contents_writeable()  :  value.c
<item>value_copy()  :  value.c
<item>value_embedded_offset()  :  value.c
<item>value_enclosing_type()  :  value.c
<item>value_full_object()  :  valops.c
<item>value_offset()  :  value.c
<item>value_rtti_target_type()  :  valops.c
<item>value_rtti_type()  :  cp-abi.c
<item>value_type()  :  value.c
<item>value_var_status()  :  value.c
<item>strcmp()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>c-lang.c
<item>f-lang.c
<item>m2-lang.c
<item>objc-lang.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>objectprint  :  cp-valprint.c
</itemize>
</descrip>

<sect1>Local Function print_function_pointer_address()

<p><tt>static void print_function_pointer_address ( CORE_ADDR address, struct ui_file* stream )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>deprecated_print_address_numeric()  :  printcmd.c
<item>fputs_filtered()  :  utils.c
<item>gdbarch_convert_from_func_ptr_addr()  :  gdbarch.c
<item>print_address_demangle()  :  printcmd.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>c_val_print()  :  c-valprint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>addressprint  :  valprint.c
<item>current_gdbarch  :  gdbarch.c
<item>current_target  :  target/target.c
<item>demangle  :  utils.c
</itemize>
</descrip>

</article>
