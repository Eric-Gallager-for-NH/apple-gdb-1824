<!DOCTYPE LINUXDOC SYSTEM>

<!-- This SGML file generated by cxref (version 1.6e). -->
<!-- cxref program (c) Andrew M. Bishop 1995-2014. -->

<!--
Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF dummy-frame.c
CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
-->

<article>

<title>Cross reference for dummy-frame.c of gdb.cxref.
<author>cxref

<sect>File dummy-frame.c
<descrip>
<tag>References Functions:</tag>
<itemize>
<item>dummy_frame_prev_register()  :  dummy-frame.c
<item>dummy_frame_sniffer()  :  dummy-frame.c
<item>dummy_frame_this_id()  :  dummy-frame.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>dummy_frame_unwinder  :  dummy-frame.c
</itemize>
</descrip>

<sect1>Included Files

<p>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<itemize>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
<item><tt>#include &lt;sys/time.h&gt;</tt>
<item><tt>#include &lt;time.h&gt;</tt>
<item><tt>#include &lt;sys/types.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
<item><tt>#include &lt;errno.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
<item><tt>#include &lt;regex.h&gt;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;unistd.h&gt;</tt>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;gdb_locale.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<item><tt>#include &lt;locale.h&gt;</tt>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../gdb/signals.h&quot;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &quot;../include/libiberty.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/symcat.h&quot;</tt>
</itemize>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
<item><tt>#include &quot;ui-file.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;xm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/xm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &lt;mach/mach.h&gt;</tt>
<item><tt>#include &lt;signal.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;nm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/i386/nm-i386.h&quot;</tt>
<item><tt>#include &quot;macosx/nm-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;tm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/tm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;macosx/i386-macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/i386-macosx-thread-status.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &lt;mach/mach_types.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
<item><tt>#include &lt;inttypes.h&gt;</tt>
<item><tt>#include &lt;mach/mach_vm.h&gt;</tt>
<item><tt>#include &lt;mach/kmod.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;macosx/tm-i386-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;../include/fopen-bin.h&quot;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdlib.h&gt;</tt>
<item><tt>#include &quot;gdbarch.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;dummy-frame.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;regcache.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;frame.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/floatformat.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;gdb_regex.h&quot;</tt>
<itemize>
<item><tt>#include &lt;regex.h&gt;</tt>
</itemize>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;gdbtypes.h&quot;</tt>
<item><tt>#include &quot;expression.h&quot;</tt>
<itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
</itemize>
</itemize>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;inferior.h&quot;</tt>
<itemize>
<item><tt>#include &quot;breakpoint.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
<item><tt>#include &quot;gdb-events.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;target.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;dcache.h&quot;</tt>
<item><tt>#include &quot;memattr.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
</itemize>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_assert.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;frame-unwind.h&quot;</tt>
<itemize>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;command.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;gdbcmd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;command.h&quot;</tt>
<item><tt>#include &quot;ui-out.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_string.h&quot;</tt>
<itemize>
<item><tt>#include &lt;string.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;inlining.h&quot;</tt>
<itemize>
<item><tt>#include &lt;block.h&gt;</tt>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
</itemize>
</itemize>

<sect1>Type struct dummy_frame

<p>
<itemize>
<item><tt>struct dummy_frame</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>struct dummy_frame* next;</tt><newline>
<item><tt>struct frame_id id;</tt><newline>
<item><tt>struct regcache* regcache;</tt><newline>
<item><tt>struct ptid ptid;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Type struct dummy_frame_cache

<p>
<itemize>
<item><tt>struct dummy_frame_cache</tt><newline>
<itemize>
<item><tt>{</tt><newline>
<item><tt>struct frame_id this_id;</tt><newline>
<item><tt>struct regcache* prev_regcache;</tt><newline>
<item><tt>}</tt><newline>
</itemize>
</itemize>

<sect1>Global Variable dummy_frame_unwind

<p>
<tt>const struct frame_unwind* const dummy_frame_unwind</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>blockframe.c
<item>dummy-frame.c
<item>frame-unwind.c
<item>frame.c
<item>infcall.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>frame_unwind_init()  :  frame-unwind.c
</itemize>
</descrip>

<sect1>Local Variables

<p>
<bf>dummy_frame_stack</bf><newline>
<tt>static struct dummy_frame* dummy_frame_stack</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>deprecated_pc_in_call_dummy()
<item>dummy_frame_push()
<item>dummy_frame_sniffer()
<item>fprint_dummy_frames()
</itemize>
</descrip>
<p>
<bf>dummy_frame_unwinder</bf><newline>
<tt>static const struct frame_unwind dummy_frame_unwinder</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>dummy-frame.c
</itemize>
</descrip>

<sect1>Global Function _initialize_dummy_frame()

<p><tt>void _initialize_dummy_frame ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>dummy-frame.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>add_cmd()
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>maintenance_print_dummy_frames()  :  dummy-frame.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>maintenanceprintlist
</itemize>
</descrip>

<sect1>Global Function deprecated_pc_in_call_dummy()

<p><tt>int deprecated_pc_in_call_dummy ( CORE_ADDR pc )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>frame.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>gdbarch_decr_pc_after_break()  :  gdbarch.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
<item>dummy_frame_stack  :  dummy-frame.c
</itemize>
</descrip>

<sect1>Global Function dummy_frame_push()

<p><tt>void dummy_frame_push ( struct regcache* caller_regcache, const struct frame_id* dummy_id )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>dummy-frame.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>frame_id_inner()  :  frame.c
<item>inlined_subroutine_save_before_dummy_call()  :  inlining.c
<item>ptid_equal()  :  infrun.c
<item>regcache_xfree()  :  regcache.c
<item>xfree()  :  utils.c
<item>xzalloc()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>hand_function_call()  :  infcall.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>dummy_frame_stack  :  dummy-frame.c
<item>inferior_ptid  :  infcmd.c
</itemize>
</descrip>

<sect1>Global Function dummy_frame_sniffer()

<p><tt>int dummy_frame_sniffer ( const struct frame_unwind* self, struct frame_info* next_frame, void** this_prologue_cache )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>dummy-frame.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>frame_id_eq()  :  frame.c
<item>frame_obstack_zalloc()  :  frame.c
<item>gdbarch_unwind_dummy_id()  :  gdbarch.c
<item>get_frame_arch()  :  frame.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>dummy-frame.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>dummy_frame_stack  :  dummy-frame.c
</itemize>
</descrip>

<sect1>Local Function dummy_frame_prev_register()

<p><tt>static void dummy_frame_prev_register ( struct frame_info* next_frame, void** this_prologue_cache, int regnum, enum opt_state* optimized, enum lval_type* lvalp, CORE_ADDR* addrp, int* realnum, gdb_byte* bufferp )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
<item>regcache_cooked_read()  :  regcache.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>dummy-frame.c
</itemize>
</descrip>

<sect1>Local Function dummy_frame_this_id()

<p><tt>static void dummy_frame_this_id ( struct frame_info* next_frame, void** this_prologue_cache, struct frame_id* this_id )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>dummy-frame.c
</itemize>
</descrip>

<sect1>Local Function fprint_dummy_frames()

<p><tt>static void fprint_dummy_frames ( struct ui_file* file )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>fprint_frame_id()  :  frame.c
<item>fprintf_unfiltered()  :  utils.c
<item>gdb_print_host_address()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>maintenance_print_dummy_frames()  :  dummy-frame.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>dummy_frame_stack  :  dummy-frame.c
</itemize>
</descrip>

<sect1>Local Function maintenance_print_dummy_frames()

<p><tt>static void maintenance_print_dummy_frames ( const char* args, int from_tty )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>fprint_dummy_frames()  :  dummy-frame.c
<item>gdb_fopen()  :  ui-file.c
<item>perror_with_name()  :  utils.c
<item>ui_file_delete()  :  ui-file.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_dummy_frame()  :  dummy-frame.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdout  :  main.c
</itemize>
</descrip>

</article>
