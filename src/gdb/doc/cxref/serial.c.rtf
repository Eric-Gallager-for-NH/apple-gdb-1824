{\rtf\ansi
\deff0
{\fonttbl
{\f0\froman Times New Roman;}
{\f1\fmodern Courier New;}
}
{\stylesheet
{\s0\f0\fs24 Normal;}
{\s1\f0\fs40\b\sb400\sa200\keepn\keep Heading 1;}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Heading 2;}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Heading 3;}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Heading 4;}
{\s5\f1\fs20\ql\sb50\sa50 Code;}
}
{\info{\comment
 This RTF file generated by cxref (version 1.6e).
 cxref program (c) Andrew M. Bishop 1995-2014.
 Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF serial.c
 CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
}}
\paperw11880\paperh16848\margl1440\margr1440\margt1440\margb1440
\sectd\plain
\s0\f0\fs24
{\s1\f0\fs40\b\sb400\sa200\keepn\keep File serial.c\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Refs Var:\cell logbase_ascii\cell serial.c\cell\row
\cell logbase_hex\cell serial.c\cell\row
\cell logbase_octal\cell serial.c\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Included Files\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <errno.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <unistd.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_locale.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <locale.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../gdb/signals.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/symcat.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-file.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "xm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/xm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "nm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/i386/nm-i386.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/nm-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "tm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/tm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-tdep.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-tdep.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-thread-status.h"\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_types.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <inttypes.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_vm.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/kmod.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/tm-i386-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/fopen-bin.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdlib.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbarch.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <ctype.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "serial.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_string.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdbcmd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "command.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-out.h"\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Preprocessor definitions\par}
{\s5\f1\fs20\ql\sb50\sa50 #define SERIAL_BREAK 1235\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Variables\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable global_serial_debug_p\par}
{\s5\f1\fs20\ql\sb50\sa50 static int global_serial_debug_p\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_serial()\cell\cell\row
\cell serial_debug_p()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable serial_ops_list\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct serial_ops* serial_ops_list\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell serial_add_interface()\cell\cell\row
\cell serial_interface_lookup()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable last_serial_opened\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct serial* last_serial_opened\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell do_serial_close()\cell\cell\row
\cell serial_fdopen()\cell\cell\row
\cell serial_open()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable scb_base\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct serial* scb_base\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell do_serial_close()\cell\cell\row
\cell serial_fdopen()\cell\cell\row
\cell serial_open()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable serial_logfile\par}
{\s5\f1\fs20\ql\sb50\sa50 static char* serial_logfile\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_serial()\cell\cell\row
\cell serial_open()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable serial_logfp\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct ui_file* serial_logfp\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell do_serial_close()\cell\cell\row
\cell serial_log_command()\cell\cell\row
\cell serial_open()\cell\cell\row
\cell serial_readchar()\cell\cell\row
\cell serial_send_break()\cell\cell\row
\cell serial_write()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable logbase_hex\par}
{\s5\f1\fs20\ql\sb50\sa50 static const char logbase_hex[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell serial.c\cell\cell\row
\cell serial_logchar()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable logbase_octal\par}
{\s5\f1\fs20\ql\sb50\sa50 static const char logbase_octal[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell serial.c\cell\cell\row
\cell serial_logchar()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable logbase_ascii\par}
{\s5\f1\fs20\ql\sb50\sa50 static const char logbase_ascii[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell serial.c\cell\cell\row
\cell serial_logchar()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable logbase_enums\par}
{\s5\f1\fs20\ql\sb50\sa50 static const char* logbase_enums[]\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_serial()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable serial_logbase\par}
{\s5\f1\fs20\ql\sb50\sa50 static const char* serial_logbase\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_serial()\cell\cell\row
\cell serial_logchar()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable serial_current_type\par}
{\s5\f1\fs20\ql\sb50\sa50 static int serial_current_type\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell do_serial_close()\cell\cell\row
\cell serial_log_command()\cell\cell\row
\cell serial_logchar()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable serial_set_cmdlist\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct cmd_list_element* serial_set_cmdlist\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_serial()\cell\cell\row
\cell serial_set_cmd()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable serial_show_cmdlist\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct cmd_list_element* serial_show_cmdlist\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_serial()\cell\cell\row
\cell serial_show_cmd()\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Functions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function _initialize_serial()\par}
{\s5\f1\fs20\ql\sb50\sa50 void _initialize_serial ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell serial.c\cell\cell\row
Calls: \cell  add_prefix_cmd(), add_setshow_enum_cmd(), add_setshow_filename_cmd(), add_setshow_zinteger_cmd()\cell\cell\row
Refs Func:\cell serial_set_cmd()\cell serial.c\cell\row
\cell serial_show_cmd()\cell serial.c\cell\row
Refs Var:\cell global_serial_debug_p\cell serial.c\cell\row
\cell logbase_enums\cell serial.c\cell\row
\cell serial_logbase\cell serial.c\cell\row
\cell serial_logfile\cell serial.c\cell\row
\cell serial_set_cmdlist\cell serial.c\cell\row
\cell serial_show_cmdlist\cell serial.c\cell\row
\cell  setdebuglist, setlist, showdebuglist, showlist\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function deprecated_serial_fd()\par}
{\s5\f1\fs20\ql\sb50\sa50 int deprecated_serial_fd ( struct serial* scb )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell serial.h\cell\cell\row
Calls: \cell internal_error()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function serial_add_interface()\par}
{\s5\f1\fs20\ql\sb50\sa50 void serial_add_interface ( struct serial_ops* optable )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell serial.h\cell\cell\row
Called by:\cell _initialize_ser_hardwire()\cell ser-unix.c\cell\row
Refs Var:\cell serial_ops_list\cell serial.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function serial_async()\par}
{\s5\f1\fs20\ql\sb50\sa50 void serial_async ( struct serial* scb, serial_event_ftype* handler, void* context )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell serial.h\cell\cell\row
Called by:\cell do_serial_close()\cell serial.c\cell\row
\cell remote_async()\cell remote.c\cell\row
\cell remote_async_kill()\cell remote.c\cell\row
\cell remote_detach()\cell remote.c\cell\row
\cell remote_disconnect()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function serial_can_async_p()\par}
{\s5\f1\fs20\ql\sb50\sa50 int serial_can_async_p ( struct serial* scb )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell serial.h\cell\cell\row
Called by:\cell remote_can_async_p()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function serial_close()\par}
{\s5\f1\fs20\ql\sb50\sa50 void serial_close ( struct serial* scb )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell serial.h\cell\cell\row
Calls: \cell do_serial_close()\cell serial.c\cell\row
Called by:\cell remote_close()\cell remote.c\cell\row
\cell remote_open_1()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function serial_debug()\par}
{\s5\f1\fs20\ql\sb50\sa50 void serial_debug ( struct serial* scb, int debug_p )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell serial.h\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function serial_debug_p()\par}
{\s5\f1\fs20\ql\sb50\sa50 int serial_debug_p ( struct serial* scb )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell serial.h\cell\cell\row
Called by:\cell reschedule()\cell ser-base.c\cell\row
\cell ser_base_async()\cell ser-base.c\cell\row
\cell serial_readchar()\cell serial.c\cell\row
Refs Var:\cell global_serial_debug_p\cell serial.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function serial_drain_output()\par}
{\s5\f1\fs20\ql\sb50\sa50 int serial_drain_output ( struct serial* scb )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell serial.h\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function serial_fdopen()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct serial* serial_fdopen ( const int fd )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell serial.h\cell\cell\row
Calls: \cell serial_interface_lookup()\cell serial.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
Called by:\cell gdb_has_a_terminal()\cell inflow.c\cell\row
Refs Var:\cell last_serial_opened\cell serial.c\cell\row
\cell scb_base\cell serial.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function serial_flush_input()\par}
{\s5\f1\fs20\ql\sb50\sa50 int serial_flush_input ( struct serial* scb )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell serial.h\cell\cell\row
Called by:\cell remote_open_1()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function serial_flush_output()\par}
{\s5\f1\fs20\ql\sb50\sa50 int serial_flush_output ( struct serial* scb )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell serial.h\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function serial_get_tty_state()\par}
{\s5\f1\fs20\ql\sb50\sa50 serial_ttystate serial_get_tty_state ( struct serial* scb )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell serial.h\cell\cell\row
Called by:\cell gdb_has_a_terminal()\cell inflow.c\cell\row
\cell terminal_init_inferior_with_pgrp()\cell inflow.c\cell\row
\cell terminal_ours_1()\cell inflow.c\cell\row
\cell terminal_save_ours()\cell inflow.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function serial_is_async_p()\par}
{\s5\f1\fs20\ql\sb50\sa50 int serial_is_async_p ( struct serial* scb )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell serial.h\cell\cell\row
Called by:\cell remote_is_async_p()\cell remote.c\cell\row
\cell reschedule()\cell ser-base.c\cell\row
\cell serial_readchar()\cell serial.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function serial_log_command()\par}
{\s5\f1\fs20\ql\sb50\sa50 void serial_log_command ( const char* cmd )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell serial.h\cell\cell\row
Calls: \cell fputs_unfiltered()\cell ui-file.c\cell\row
\cell gdb_flush()\cell ui-file.c\cell\row
Called by:\cell execute_command()\cell top.c\cell\row
Refs Var:\cell serial_current_type\cell serial.c\cell\row
\cell serial_logfp\cell serial.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function serial_noflush_set_tty_state()\par}
{\s5\f1\fs20\ql\sb50\sa50 int serial_noflush_set_tty_state ( struct serial* scb, serial_ttystate new_ttystate, serial_ttystate old_ttystate )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell serial.h\cell\cell\row
Called by:\cell terminal_ours_1()\cell inflow.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function serial_open()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct serial* serial_open ( const char* name )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell serial.h\cell\cell\row
Calls: \cell gdb_fopen()\cell ui-file.c\cell\row
\cell perror_with_name()\cell utils.c\cell\row
\cell serial_interface_lookup()\cell serial.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  strchr(), strcmp(), strncmp(), xstrdup()\cell\cell\row
Called by:\cell remote_serial_open()\cell remote.c\cell\row
Refs Var:\cell last_serial_opened\cell serial.c\cell\row
\cell scb_base\cell serial.c\cell\row
\cell serial_logfile\cell serial.c\cell\row
\cell serial_logfp\cell serial.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function serial_print_tty_state()\par}
{\s5\f1\fs20\ql\sb50\sa50 void serial_print_tty_state ( struct serial* scb, serial_ttystate ttystate, struct ui_file* stream )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell serial.h\cell\cell\row
Called by:\cell child_terminal_info()\cell inflow.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function serial_printf()\par}
{\s5\f1\fs20\ql\sb50\sa50 void serial_printf ( struct serial* desc, const char* format, ... )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell serial.h\cell\cell\row
Calls: \cell serial_write()\cell serial.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell xstrvprintf()\cell utils.c\cell\row
\cell  __builtin_va_end(), __builtin_va_start(), strlen()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function serial_raw()\par}
{\s5\f1\fs20\ql\sb50\sa50 void serial_raw ( struct serial* scb )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell serial.h\cell\cell\row
Called by:\cell remote_open_1()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function serial_readchar()\par}
{\s5\f1\fs20\ql\sb50\sa50 int serial_readchar ( struct serial* scb, int timeout )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell serial.h\cell\cell\row
Calls: \cell fprintf_unfiltered()\cell utils.c\cell\row
\cell gdb_flush()\cell ui-file.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell serial_debug_p()\cell serial.c\cell\row
\cell serial_is_async_p()\cell serial.c\cell\row
\cell serial_logchar()\cell serial.c\cell\row
Called by:\cell readchar()\cell remote.c\cell\row
Refs Var:\cell gdb_stdlog\cell main.c\cell\row
\cell serial_logfp\cell serial.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function serial_send_break()\par}
{\s5\f1\fs20\ql\sb50\sa50 int serial_send_break ( struct serial* scb )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell serial.h\cell\cell\row
Calls: \cell serial_logchar()\cell serial.c\cell\row
Called by:\cell remote_stop()\cell remote.c\cell\row
Refs Var:\cell serial_logfp\cell serial.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function serial_set_tty_state()\par}
{\s5\f1\fs20\ql\sb50\sa50 int serial_set_tty_state ( struct serial* scb, serial_ttystate ttystate )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell serial.h\cell\cell\row
Called by:\cell terminal_inferior()\cell inflow.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function serial_setbaudrate()\par}
{\s5\f1\fs20\ql\sb50\sa50 int serial_setbaudrate ( struct serial* scb, int rate )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell serial.h\cell\cell\row
Called by:\cell remote_open_1()\cell remote.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function serial_setstopbits()\par}
{\s5\f1\fs20\ql\sb50\sa50 int serial_setstopbits ( struct serial* scb, int num )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell serial.h\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function serial_un_fdopen()\par}
{\s5\f1\fs20\ql\sb50\sa50 void serial_un_fdopen ( struct serial* scb )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell serial.h\cell\cell\row
Calls: \cell do_serial_close()\cell serial.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function serial_write()\par}
{\s5\f1\fs20\ql\sb50\sa50 int serial_write ( struct serial* scb, const char* str, int len )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell serial.h\cell\cell\row
Calls: \cell gdb_flush()\cell ui-file.c\cell\row
\cell serial_logchar()\cell serial.c\cell\row
Called by:\cell getpkt_sane()\cell remote.c\cell\row
\cell putpkt_binary()\cell remote.c\cell\row
\cell remote_start_remote()\cell remote.c\cell\row
\cell remote_stop()\cell remote.c\cell\row
\cell serial_printf()\cell serial.c\cell\row
Refs Var:\cell serial_logfp\cell serial.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function do_serial_close()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void do_serial_close ( struct serial* scb, int really_close )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell fputs_unfiltered()\cell ui-file.c\cell\row
\cell serial_async()\cell serial.c\cell\row
\cell ui_file_delete()\cell ui-file.c\cell\row
\cell xfree()\cell utils.c\cell\row
Called by:\cell serial_close()\cell serial.c\cell\row
\cell serial_un_fdopen()\cell serial.c\cell\row
Refs Var:\cell last_serial_opened\cell serial.c\cell\row
\cell scb_base\cell serial.c\cell\row
\cell serial_current_type\cell serial.c\cell\row
\cell serial_logfp\cell serial.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function serial_interface_lookup()\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct serial_ops* serial_interface_lookup ( const char* name )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell serial.c\cell\cell\row
Calls: \cell  strcmp()\cell\cell\row
Called by:\cell serial_fdopen()\cell serial.c\cell\row
\cell serial_open()\cell serial.c\cell\row
Refs Var:\cell serial_ops_list\cell serial.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function serial_logchar()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void serial_logchar ( struct ui_file* stream, int ch_type, int ch, int timeout )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell serial.c\cell\cell\row
Calls: \cell fprintf_unfiltered()\cell utils.c\cell\row
\cell fputc_unfiltered()\cell utils.c\cell\row
\cell fputs_unfiltered()\cell ui-file.c\cell\row
\cell safe_strerror()\cell utils.c\cell\row
\cell  __error(), isprint()\cell\cell\row
Called by:\cell serial_readchar()\cell serial.c\cell\row
\cell serial_send_break()\cell serial.c\cell\row
\cell serial_write()\cell serial.c\cell\row
Refs Var:\cell logbase_ascii\cell serial.c\cell\row
\cell logbase_hex\cell serial.c\cell\row
\cell logbase_octal\cell serial.c\cell\row
\cell serial_current_type\cell serial.c\cell\row
\cell serial_logbase\cell serial.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function serial_set_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void serial_set_cmd ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell printf_unfiltered()\cell utils.c\cell\row
\cell  help_list()\cell\cell\row
Used in:\cell _initialize_serial()\cell serial.c\cell\row
Refs Var:\cell gdb_stdout\cell main.c\cell\row
\cell serial_set_cmdlist\cell serial.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function serial_show_cmd()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void serial_show_cmd ( const char* args, int from_tty )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell  cmd_show_list()\cell\cell\row
Used in:\cell _initialize_serial()\cell serial.c\cell\row
Refs Var:\cell serial_show_cmdlist\cell serial.c\cell\row
\intbl0
}
