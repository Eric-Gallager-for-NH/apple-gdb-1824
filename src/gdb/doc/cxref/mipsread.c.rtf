{\rtf\ansi
\deff0
{\fonttbl
{\f0\froman Times New Roman;}
{\f1\fmodern Courier New;}
}
{\stylesheet
{\s0\f0\fs24 Normal;}
{\s1\f0\fs40\b\sb400\sa200\keepn\keep Heading 1;}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Heading 2;}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Heading 3;}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Heading 4;}
{\s5\f1\fs20\ql\sb50\sa50 Code;}
}
{\info{\comment
 This RTF file generated by cxref (version 1.6e).
 cxref program (c) Andrew M. Bishop 1995-2014.
 Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF mipsread.c
 CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
}}
\paperw11880\paperh16848\margl1440\margr1440\margt1440\margb1440
\sectd\plain
\s0\f0\fs24
{\s1\f0\fs40\b\sb400\sa200\keepn\keep File mipsread.c\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Refs Func:\cell default_symfile_offsets()\cell symfile.c\cell\row
\cell mipscoff_new_init()\cell mipsread.c\cell\row
\cell mipscoff_symfile_finish()\cell mipsread.c\cell\row
\cell mipscoff_symfile_init()\cell mipsread.c\cell\row
\cell mipscoff_symfile_read()\cell mipsread.c\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Included Files\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <errno.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <unistd.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_locale.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <locale.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../gdb/signals.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/symcat.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-file.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "xm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/xm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "nm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/i386/nm-i386.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/nm-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "tm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/tm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-tdep.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-tdep.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-thread-status.h"\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_types.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <inttypes.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_vm.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/kmod.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/tm-i386-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/fopen-bin.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdlib.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbarch.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_string.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "objfiles.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <uuid/uuid.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_obstack.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/obstack.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "symfile.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "inlining.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <block.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "value.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/floatformat.h"\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_regex.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "frame.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "gdbtypes.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "expression.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "doublest.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sqlite3.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "buildsym.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "stabsread.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../include/coff/sym.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../include/coff/internal.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../include/coff/ecoff.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/libcoff.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/bfdlink.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/libecoff.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/bfdlink.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../include/elf/common.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "../include/elf/mips.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/elf/reloc-macros.h"\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Type definitions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Typedef Elfalpha_External_Sym\par}
{\s5\f1\fs20\ql\sb50\sa50 typedef struct \{...\} Elfalpha_External_Sym\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 unsigned char st_name[4];}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 unsigned char st_pad[4];}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 unsigned char st_value[8];}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 unsigned char st_size[4];}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 unsigned char st_info[1];}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 unsigned char st_other[1];}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 unsigned char st_shndx[2];}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Typedef Elfalpha_External_Dyn\par}
{\s5\f1\fs20\ql\sb50\sa50 typedef struct \{...\} Elfalpha_External_Dyn\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 unsigned char d_tag[4];}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 unsigned char d_pad[4];}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 union}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
		{\s5\f1\fs20\ql\sb50\sa50 unsigned char d_ptr[8];}\cell\cell\row
		{\s5\f1\fs20\ql\sb50\sa50 unsigned char d_val[4];}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 d_un;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct alphacoff_dynsecinfo\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct alphacoff_dynsecinfo}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 asection* sym_sect;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 asection* str_sect;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 asection* dyninfo_sect;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 asection* got_sect;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Variables\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Variables\par}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Variable ecoff_sym_fns\par}
{\s5\f1\fs20\ql\sb50\sa50 static struct sym_fns ecoff_sym_fns\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell _initialize_mipsread()\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Functions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function _initialize_mipsread()\par}
{\s5\f1\fs20\ql\sb50\sa50 void _initialize_mipsread ( void )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell mipsread.c\cell\cell\row
Calls: \cell add_symtab_fns()\cell symfile.c\cell\row
Refs Var:\cell ecoff_sym_fns\cell mipsread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function alphacoff_locate_sections()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void alphacoff_locate_sections ( bfd* ignore_abfd, asection* sectp, void* sip )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell  strcmp()\cell\cell\row
Used in:\cell read_alphacoff_dynamic_symtab()\cell mipsread.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function mipscoff_new_init()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void mipscoff_new_init ( struct objfile* ignore )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell buildsym_new_init()\cell buildsym.c\cell\row
\cell stabsread_new_init()\cell stabsread.c\cell\row
Used in:\cell mipsread.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function mipscoff_symfile_finish()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void mipscoff_symfile_finish ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell mipsread.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function mipscoff_symfile_init()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void mipscoff_symfile_init ( struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell mipsread.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function mipscoff_symfile_read()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void mipscoff_symfile_read ( struct objfile* objfile, int mainline )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell do_cleanups()\cell utils.c\cell\row
\cell error()\cell utils.c\cell\row
\cell init_minimal_symbol_collection()\cell minsyms.c\cell\row
\cell install_minimal_symbols()\cell minsyms.c\cell\row
\cell make_cleanup_discard_minimal_symbols()\cell minsyms.c\cell\row
\cell mdebug_build_psymtabs()\cell mdebugread.c\cell\row
\cell read_alphacoff_dynamic_symtab()\cell mipsread.c\cell\row
\cell  bfd_errmsg(), bfd_get_error()\cell\cell\row
Used in:\cell mipsread.c\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function read_alphacoff_dynamic_symtab()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void read_alphacoff_dynamic_symtab ( struct section_offsets* section_offsets, struct objfile* objfile )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell mipsread.c\cell\cell\row
Calls: \cell do_cleanups()\cell utils.c\cell\row
\cell executable_objfile()\cell objfiles.c\cell\row
\cell internal_error()\cell utils.c\cell\row
\cell make_cleanup()\cell utils.c\cell\row
\cell prim_record_minimal_symbol()\cell minsyms.c\cell\row
\cell xmalloc()\cell utils.c\cell\row
\cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk(), bfd_get_arch(), bfd_get_section_contents(), bfd_map_over_sections()\cell\cell\row
Called by:\cell mipscoff_symfile_read()\cell mipsread.c\cell\row
Refs Func:\cell alphacoff_locate_sections()\cell mipsread.c\cell\row
\cell xfree()\cell utils.c\cell\row
\intbl0
}
