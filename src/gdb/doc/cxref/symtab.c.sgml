<!DOCTYPE LINUXDOC SYSTEM>

<!-- This SGML file generated by cxref (version 1.6e). -->
<!-- cxref program (c) Andrew M. Bishop 1995-2014. -->

<!--
Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF symtab.c
CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
-->

<article>

<title>Cross reference for symtab.c of gdb.cxref.
<author>cxref

<sect>File symtab.c

<sect1>Included Files

<p>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<itemize>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
<item><tt>#include &lt;sys/time.h&gt;</tt>
<item><tt>#include &lt;time.h&gt;</tt>
<item><tt>#include &lt;sys/types.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
<item><tt>#include &lt;errno.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
<item><tt>#include &lt;regex.h&gt;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;unistd.h&gt;</tt>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;gdb_locale.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config.h&quot;</tt>
<item><tt>#include &lt;locale.h&gt;</tt>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../gdb/signals.h&quot;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &quot;../include/libiberty.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdarg.h&gt;</tt>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/symcat.h&quot;</tt>
</itemize>
<item><tt>#include &lt;../intl/libintl.h&gt;</tt>
<item><tt>#include &quot;ui-file.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdio.h&gt;</tt>
</itemize>
<item><tt>#include &quot;xm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/xm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &lt;mach/mach.h&gt;</tt>
<item><tt>#include &lt;signal.h&gt;</tt>
<item><tt>#include &lt;limits.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;nm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/i386/nm-i386.h&quot;</tt>
<item><tt>#include &quot;macosx/nm-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;tm.h&quot;</tt>
<itemize>
<item><tt>#include &quot;config/tm-macosx.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;macosx/i386-macosx-tdep.h&quot;</tt>
<itemize>
<item><tt>#include &quot;macosx/i386-macosx-thread-status.h&quot;</tt>
<itemize>
<item><tt>#include &lt;stdint.h&gt;</tt>
<item><tt>#include &lt;mach/mach_types.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
<item><tt>#include &lt;inttypes.h&gt;</tt>
<item><tt>#include &lt;mach/mach_vm.h&gt;</tt>
<item><tt>#include &lt;mach/kmod.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;macosx/tm-i386-macosx.h&quot;</tt>
</itemize>
<item><tt>#include &quot;../include/fopen-bin.h&quot;</tt>
<item><tt>#include &lt;stddef.h&gt;</tt>
<item><tt>#include &lt;stdlib.h&gt;</tt>
<item><tt>#include &quot;gdbarch.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdbtypes.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdbcore.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;frame.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../include/floatformat.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;gdb_regex.h&quot;</tt>
<itemize>
<item><tt>#include &lt;regex.h&gt;</tt>
</itemize>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;gdbtypes.h&quot;</tt>
<item><tt>#include &quot;expression.h&quot;</tt>
<itemize>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;doublest.h&quot;</tt>
</itemize>
</itemize>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;target.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
<item><tt>#include &quot;symtab.h&quot;</tt>
<item><tt>#include &quot;dcache.h&quot;</tt>
<item><tt>#include &quot;memattr.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;value.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;symfile.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;defs.h&quot;</tt>
<item><tt>#include &quot;symtab.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;objfiles.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &lt;uuid/uuid.h&gt;</tt>
<item><tt>#include &quot;gdb_obstack.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/obstack.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &lt;string.h&gt;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;symfile.h&quot;</tt>
<item><tt>#include &quot;inlining.h&quot;</tt>
<itemize>
<item><tt>#include &lt;block.h&gt;</tt>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &quot;../bfd/bfd.h&quot;</tt>
</itemize>
<item><tt>#include &lt;sqlite3.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;gdbcmd.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;command.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
<item><tt>#include &quot;ui-out.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_regex.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;expression.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;language.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;../include/demangle.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/libiberty.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;inferior.h&quot;</tt>
<itemize>
<item><tt>#include &quot;breakpoint.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &quot;value.h&quot;</tt>
<item><tt>#include &quot;gdb-events.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
<item><tt>#include &quot;target.h&quot;</tt>
<item><tt>#include &quot;frame.h&quot;</tt>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;linespec.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;source.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;../include/filenames.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/hashtab.h&quot;</tt>
<itemize>
<item><tt>#include &quot;../include/ansidecl.h&quot;</tt>
</itemize>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;objc-lang.h&quot;</tt>
<itemize>
<item><tt>#include &lt;Availability.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;ada-lang.h&quot;</tt>
<itemize>
<item><tt>#include &quot;value.h&quot;</tt>
<item><tt>#include &quot;gdbtypes.h&quot;</tt>
<item><tt>#include &quot;breakpoint.h&quot;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;../include/hashtab.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_obstack.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_assert.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;block.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;dictionary.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &lt;sys/types.h&gt;</tt>
</itemize>
<itemize>
<item><tt>#include &lt;fcntl.h&gt;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_string.h&quot;</tt>
<itemize>
<item><tt>#include &lt;string.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &quot;gdb_stat.h&quot;</tt>
<itemize>
<item><tt>#include &lt;sys/types.h&gt;</tt>
<item><tt>#include &lt;sys/stat.h&gt;</tt>
</itemize>
</itemize>
<itemize>
<item><tt>#include &lt;ctype.h&gt;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;cp-abi.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;observer.h&quot;</tt>
</itemize>
<itemize>
<item><tt>#include &quot;complaints.h&quot;</tt>
</itemize>

<sect1>Preprocessor definitions

<p>
<tt>#define JAVA_PREFIX &quot;&num;&num;JAVA&dollar;&dollar;&quot;</tt><newline>
<p>
<tt>#define JAVA_PREFIX_LEN 8</tt><newline>
<p>
<tt>#define COMPLETION_LIST_ADD_SYMBOL( symbol, sym_text, len, text, word )</tt><newline>

<sect1>Global Variable deprecated_hp_som_som_object_present

<p>
<tt>int deprecated_hp_som_som_object_present</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bcache.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>charset.c
<item>cli-out.c
<item>coff-pe-read.c
<item>coffread.c
<item>complaints.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>demangle.c
<item>dictionary.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>environ.c
<item>eval.c
<item>event-loop.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>interps.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod-cisco.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macrocmd.c
<item>macroexp.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>observer.c
<item>osabi.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>reggroups.c
<item>remote-fileio.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>ser-base.c
<item>ser-unix.c
<item>serial.c
<item>solib-null.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>ui-file.c
<item>ui-out.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>c_type_print_base()  :  c-typeprint.c
<item>cp_print_class_method()  :  cp-valprint.c
<item>evaluate_subexp_standard()  :  eval.c
<item>parse_nested_classes_for_hpacc()  :  parse.c
<item>value_cast_1()  :  valops.c
</itemize>
</descrip>

<sect1>Global Variable cached_mapped_section

<p>
<tt>asection* cached_mapped_section</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bcache.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>charset.c
<item>cli-out.c
<item>coff-pe-read.c
<item>coffread.c
<item>complaints.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>demangle.c
<item>dictionary.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>environ.c
<item>eval.c
<item>event-loop.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>interps.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod-cisco.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macrocmd.c
<item>macroexp.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>observer.c
<item>osabi.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>reggroups.c
<item>remote-fileio.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>ser-base.c
<item>ser-unix.c
<item>serial.c
<item>solib-null.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>ui-file.c
<item>ui-out.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>block_for_pc_sect()  :  block.c
<item>blockvector_for_pc_sect()  :  block.c
<item>find_pc_mapped_section()  :  symfile.c
<item>find_pc_sect_function()  :  blockframe.c
<item>find_pc_sect_psymtab()  :  symtab.c
<item>find_pc_sect_section()  :  objfiles.c
<item>find_pc_sect_symtab()  :  symtab.c
<item>symtab_clear_cached_lookup_values()  :  symtab.c
</itemize>
</descrip>

<sect1>Global Variable cached_overlay_section

<p>
<tt>asection* cached_overlay_section</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bcache.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>charset.c
<item>cli-out.c
<item>coff-pe-read.c
<item>coffread.c
<item>complaints.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>demangle.c
<item>dictionary.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>environ.c
<item>eval.c
<item>event-loop.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>interps.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod-cisco.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macrocmd.c
<item>macroexp.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>observer.c
<item>osabi.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>reggroups.c
<item>remote-fileio.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>ser-base.c
<item>ser-unix.c
<item>serial.c
<item>solib-null.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>ui-file.c
<item>ui-out.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>find_pc_overlay()  :  symfile.c
<item>find_pc_sect_line()  :  symtab.c
<item>symtab_clear_cached_lookup_values()  :  symtab.c
</itemize>
</descrip>

<sect1>Global Variable cached_sect_section

<p>
<tt>struct obj_section* cached_sect_section</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bcache.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>charset.c
<item>cli-out.c
<item>coff-pe-read.c
<item>coffread.c
<item>complaints.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>demangle.c
<item>dictionary.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>environ.c
<item>eval.c
<item>event-loop.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>interps.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod-cisco.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macrocmd.c
<item>macroexp.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>observer.c
<item>osabi.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>reggroups.c
<item>remote-fileio.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>ser-base.c
<item>ser-unix.c
<item>serial.c
<item>solib-null.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>ui-file.c
<item>ui-out.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>find_pc_sect_section()  :  objfiles.c
<item>symtab_clear_cached_lookup_values()  :  symtab.c
</itemize>
</descrip>

<sect1>Global Variable cached_symtab

<p>
<tt>struct symtab* cached_symtab</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bcache.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>charset.c
<item>cli-out.c
<item>coff-pe-read.c
<item>coffread.c
<item>complaints.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>demangle.c
<item>dictionary.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>environ.c
<item>eval.c
<item>event-loop.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>interps.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod-cisco.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macrocmd.c
<item>macroexp.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>observer.c
<item>osabi.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>reggroups.c
<item>remote-fileio.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>ser-base.c
<item>ser-unix.c
<item>serial.c
<item>solib-null.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>ui-file.c
<item>ui-out.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>find_pc_sect_symtab()  :  symtab.c
<item>symtab_clear_cached_lookup_values()  :  symtab.c
</itemize>
</descrip>

<sect1>Global Variable cached_psymtab

<p>
<tt>struct partial_symtab* cached_psymtab</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bcache.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>charset.c
<item>cli-out.c
<item>coff-pe-read.c
<item>coffread.c
<item>complaints.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>demangle.c
<item>dictionary.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>environ.c
<item>eval.c
<item>event-loop.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>interps.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod-cisco.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macrocmd.c
<item>macroexp.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>observer.c
<item>osabi.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>reggroups.c
<item>remote-fileio.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>ser-base.c
<item>ser-unix.c
<item>serial.c
<item>solib-null.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>ui-file.c
<item>ui-out.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>find_pc_sect_psymtab()  :  symtab.c
<item>symtab_clear_cached_lookup_values()  :  symtab.c
</itemize>
</descrip>

<sect1>Global Variable cached_pc_line

<p>
<tt>struct symtab_and_line* cached_pc_line</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bcache.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>charset.c
<item>cli-out.c
<item>coff-pe-read.c
<item>coffread.c
<item>complaints.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>demangle.c
<item>dictionary.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>environ.c
<item>eval.c
<item>event-loop.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>interps.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod-cisco.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macrocmd.c
<item>macroexp.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>observer.c
<item>osabi.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>reggroups.c
<item>remote-fileio.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>ser-base.c
<item>ser-unix.c
<item>serial.c
<item>solib-null.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>ui-file.c
<item>ui-out.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>find_pc_sect_line()  :  symtab.c
<item>symtab_clear_cached_lookup_values()  :  symtab.c
</itemize>
</descrip>

<sect1>Global Variable cached_pc_function

<p>
<tt>struct symbol* cached_pc_function</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bcache.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>charset.c
<item>cli-out.c
<item>coff-pe-read.c
<item>coffread.c
<item>complaints.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>demangle.c
<item>dictionary.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>environ.c
<item>eval.c
<item>event-loop.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>interps.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod-cisco.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macrocmd.c
<item>macroexp.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>observer.c
<item>osabi.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>reggroups.c
<item>remote-fileio.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>ser-base.c
<item>ser-unix.c
<item>serial.c
<item>solib-null.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>ui-file.c
<item>ui-out.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>find_pc_sect_function()  :  blockframe.c
<item>symtab_clear_cached_lookup_values()  :  symtab.c
</itemize>
</descrip>

<sect1>Global Variable cached_blockvector

<p>
<tt>struct blockvector* cached_blockvector</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bcache.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>charset.c
<item>cli-out.c
<item>coff-pe-read.c
<item>coffread.c
<item>complaints.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>demangle.c
<item>dictionary.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>environ.c
<item>eval.c
<item>event-loop.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>interps.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod-cisco.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macrocmd.c
<item>macroexp.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>observer.c
<item>osabi.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>reggroups.c
<item>remote-fileio.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>ser-base.c
<item>ser-unix.c
<item>serial.c
<item>solib-null.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>ui-file.c
<item>ui-out.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>blockvector_for_pc_sect()  :  block.c
<item>symtab_clear_cached_lookup_values()  :  symtab.c
</itemize>
</descrip>

<sect1>Global Variable cached_blockvector_index

<p>
<tt>int cached_blockvector_index</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bcache.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>charset.c
<item>cli-out.c
<item>coff-pe-read.c
<item>coffread.c
<item>complaints.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>demangle.c
<item>dictionary.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>environ.c
<item>eval.c
<item>event-loop.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>interps.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod-cisco.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macrocmd.c
<item>macroexp.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>observer.c
<item>osabi.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>reggroups.c
<item>remote-fileio.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>ser-base.c
<item>ser-unix.c
<item>serial.c
<item>solib-null.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>ui-file.c
<item>ui-out.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>blockvector_for_pc_sect()  :  block.c
<item>symtab_clear_cached_lookup_values()  :  symtab.c
</itemize>
</descrip>

<sect1>Global Variable cached_block

<p>
<tt>struct block* cached_block</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bcache.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>charset.c
<item>cli-out.c
<item>coff-pe-read.c
<item>coffread.c
<item>complaints.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>demangle.c
<item>dictionary.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>environ.c
<item>eval.c
<item>event-loop.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>interps.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod-cisco.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macrocmd.c
<item>macroexp.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>observer.c
<item>osabi.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>reggroups.c
<item>remote-fileio.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>ser-base.c
<item>ser-unix.c
<item>serial.c
<item>solib-null.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>ui-file.c
<item>ui-out.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>block_for_pc_sect()  :  block.c
<item>symtab_clear_cached_lookup_values()  :  symtab.c
</itemize>
</descrip>

<sect1>Global Variable last_block_lookup_pc

<p>
<tt>CORE_ADDR last_block_lookup_pc</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bcache.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>charset.c
<item>cli-out.c
<item>coff-pe-read.c
<item>coffread.c
<item>complaints.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>demangle.c
<item>dictionary.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>environ.c
<item>eval.c
<item>event-loop.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>interps.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod-cisco.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macrocmd.c
<item>macroexp.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>observer.c
<item>osabi.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>reggroups.c
<item>remote-fileio.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>ser-base.c
<item>ser-unix.c
<item>serial.c
<item>solib-null.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>ui-file.c
<item>ui-out.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>block_for_pc_sect()  :  block.c
<item>symtab_clear_cached_lookup_values()  :  symtab.c
</itemize>
</descrip>

<sect1>Global Variable last_blockvector_lookup_pc

<p>
<tt>CORE_ADDR last_blockvector_lookup_pc</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bcache.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>charset.c
<item>cli-out.c
<item>coff-pe-read.c
<item>coffread.c
<item>complaints.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>demangle.c
<item>dictionary.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>environ.c
<item>eval.c
<item>event-loop.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>interps.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod-cisco.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macrocmd.c
<item>macroexp.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>observer.c
<item>osabi.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>reggroups.c
<item>remote-fileio.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>ser-base.c
<item>ser-unix.c
<item>serial.c
<item>solib-null.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>ui-file.c
<item>ui-out.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>blockvector_for_pc_sect()  :  block.c
<item>symtab_clear_cached_lookup_values()  :  symtab.c
</itemize>
</descrip>

<sect1>Global Variable last_function_lookup_pc

<p>
<tt>CORE_ADDR last_function_lookup_pc</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bcache.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>charset.c
<item>cli-out.c
<item>coff-pe-read.c
<item>coffread.c
<item>complaints.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>demangle.c
<item>dictionary.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>environ.c
<item>eval.c
<item>event-loop.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>interps.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod-cisco.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macrocmd.c
<item>macroexp.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>observer.c
<item>osabi.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>reggroups.c
<item>remote-fileio.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>ser-base.c
<item>ser-unix.c
<item>serial.c
<item>solib-null.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>ui-file.c
<item>ui-out.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>find_pc_sect_function()  :  blockframe.c
<item>symtab_clear_cached_lookup_values()  :  symtab.c
</itemize>
</descrip>

<sect1>Global Variable last_pc_line_lookup_pc

<p>
<tt>CORE_ADDR last_pc_line_lookup_pc</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bcache.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>charset.c
<item>cli-out.c
<item>coff-pe-read.c
<item>coffread.c
<item>complaints.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>demangle.c
<item>dictionary.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>environ.c
<item>eval.c
<item>event-loop.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>interps.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod-cisco.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macrocmd.c
<item>macroexp.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>observer.c
<item>osabi.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>reggroups.c
<item>remote-fileio.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>ser-base.c
<item>ser-unix.c
<item>serial.c
<item>solib-null.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>ui-file.c
<item>ui-out.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>find_pc_sect_line()  :  symtab.c
<item>symtab_clear_cached_lookup_values()  :  symtab.c
</itemize>
</descrip>

<sect1>Global Variable last_psymtab_lookup_pc

<p>
<tt>CORE_ADDR last_psymtab_lookup_pc</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bcache.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>charset.c
<item>cli-out.c
<item>coff-pe-read.c
<item>coffread.c
<item>complaints.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>demangle.c
<item>dictionary.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>environ.c
<item>eval.c
<item>event-loop.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>interps.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod-cisco.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macrocmd.c
<item>macroexp.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>observer.c
<item>osabi.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>reggroups.c
<item>remote-fileio.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>ser-base.c
<item>ser-unix.c
<item>serial.c
<item>solib-null.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>ui-file.c
<item>ui-out.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>find_pc_sect_psymtab()  :  symtab.c
<item>symtab_clear_cached_lookup_values()  :  symtab.c
</itemize>
</descrip>

<sect1>Global Variable last_symtab_lookup_pc

<p>
<tt>CORE_ADDR last_symtab_lookup_pc</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bcache.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>charset.c
<item>cli-out.c
<item>coff-pe-read.c
<item>coffread.c
<item>complaints.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>demangle.c
<item>dictionary.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>environ.c
<item>eval.c
<item>event-loop.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>interps.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod-cisco.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macrocmd.c
<item>macroexp.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>observer.c
<item>osabi.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>reggroups.c
<item>remote-fileio.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>ser-base.c
<item>ser-unix.c
<item>serial.c
<item>solib-null.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>ui-file.c
<item>ui-out.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>find_pc_sect_symtab()  :  symtab.c
<item>symtab_clear_cached_lookup_values()  :  symtab.c
</itemize>
</descrip>

<sect1>Global Variable last_sect_section_lookup_pc

<p>
<tt>CORE_ADDR last_sect_section_lookup_pc</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bcache.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>charset.c
<item>cli-out.c
<item>coff-pe-read.c
<item>coffread.c
<item>complaints.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>demangle.c
<item>dictionary.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>environ.c
<item>eval.c
<item>event-loop.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>interps.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod-cisco.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macrocmd.c
<item>macroexp.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>observer.c
<item>osabi.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>reggroups.c
<item>remote-fileio.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>ser-base.c
<item>ser-unix.c
<item>serial.c
<item>solib-null.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>ui-file.c
<item>ui-out.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>find_pc_sect_section()  :  objfiles.c
<item>symtab_clear_cached_lookup_values()  :  symtab.c
</itemize>
</descrip>

<sect1>Global Variable last_mapped_section_lookup_pc

<p>
<tt>CORE_ADDR last_mapped_section_lookup_pc</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bcache.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>charset.c
<item>cli-out.c
<item>coff-pe-read.c
<item>coffread.c
<item>complaints.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>demangle.c
<item>dictionary.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>environ.c
<item>eval.c
<item>event-loop.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>interps.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod-cisco.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macrocmd.c
<item>macroexp.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>observer.c
<item>osabi.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>reggroups.c
<item>remote-fileio.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>ser-base.c
<item>ser-unix.c
<item>serial.c
<item>solib-null.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>ui-file.c
<item>ui-out.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>block_for_pc_sect()  :  block.c
<item>blockvector_for_pc_sect()  :  block.c
<item>find_pc_mapped_section()  :  symfile.c
<item>find_pc_sect_function()  :  blockframe.c
<item>find_pc_sect_psymtab()  :  symtab.c
<item>find_pc_sect_section()  :  objfiles.c
<item>find_pc_sect_symtab()  :  symtab.c
<item>symtab_clear_cached_lookup_values()  :  symtab.c
</itemize>
</descrip>

<sect1>Global Variable last_overlay_section_lookup_pc

<p>
<tt>CORE_ADDR last_overlay_section_lookup_pc</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bcache.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>charset.c
<item>cli-out.c
<item>coff-pe-read.c
<item>coffread.c
<item>complaints.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>demangle.c
<item>dictionary.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>environ.c
<item>eval.c
<item>event-loop.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>interps.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod-cisco.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macrocmd.c
<item>macroexp.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>observer.c
<item>osabi.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>reggroups.c
<item>remote-fileio.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>ser-base.c
<item>ser-unix.c
<item>serial.c
<item>solib-null.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>ui-file.c
<item>ui-out.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>find_pc_overlay()  :  symfile.c
<item>find_pc_sect_line()  :  symtab.c
<item>symtab_clear_cached_lookup_values()  :  symtab.c
</itemize>
</descrip>

<sect1>Global Variable builtin_type_error

<p>
<tt>struct type* builtin_type_error</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>ada-typeprint.c
<item>ada-valprint.c
<item>arch-utils.c
<item>ax-gdb.c
<item>ax-general.c
<item>bfd-target.c
<item>block.c
<item>blockframe.c
<item>breakpoint.c
<item>buildsym.c
<item>c-exp.c
<item>c-lang.c
<item>c-typeprint.c
<item>c-valprint.c
<item>coff-pe-read.c
<item>coffread.c
<item>completer.c
<item>corefile.c
<item>cp-abi.c
<item>cp-namespace.c
<item>cp-support.c
<item>cp-valprint.c
<item>dbxread.c
<item>disasm.c
<item>doublest.c
<item>dummy-frame.c
<item>dwarf2-frame.c
<item>dwarf2expr.c
<item>dwarf2loc.c
<item>dwarf2read.c
<item>dwarfread.c
<item>elfread.c
<item>eval.c
<item>event-top.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>f-typeprint.c
<item>f-valprint.c
<item>findvar.c
<item>frame-base.c
<item>frame-unwind.c
<item>frame.c
<item>gdbarch.c
<item>gdbtypes.c
<item>gnu-v2-abi.c
<item>gnu-v3-abi.c
<item>hpacc-abi.c
<item>inf-loop.c
<item>infcall.c
<item>infcmd.c
<item>inflow.c
<item>infrun.c
<item>inlining.c
<item>jv-exp.c
<item>jv-lang.c
<item>jv-typeprint.c
<item>jv-valprint.c
<item>kod.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>m2-typeprint.c
<item>m2-valprint.c
<item>macroscope.c
<item>macrotab.c
<item>main.c
<item>maint.c
<item>mdebugread.c
<item>mem-break.c
<item>memattr.c
<item>minsyms.c
<item>mipsread.c
<item>nlmread.c
<item>objc-exp.c
<item>objc-lang.c
<item>objfiles.c
<item>p-exp.c
<item>p-lang.c
<item>p-typeprint.c
<item>p-valprint.c
<item>parse.c
<item>printcmd.c
<item>regcache.c
<item>reggroups.c
<item>remote.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>sentinel-frame.c
<item>solib.c
<item>source.c
<item>stabsread.c
<item>stack.c
<item>std-regs.c
<item>symfile-mem.c
<item>symfile.c
<item>symmisc.c
<item>symtab.c
<item>target/target.c
<item>target/x86-shared-tdep.c
<item>thread.c
<item>top.c
<item>tracepoint.c
<item>trad-frame.c
<item>tramp-frame.c
<item>typeprint.c
<item>user-regs.c
<item>utils.c
<item>valarith.c
<item>valops.c
<item>valprint.c
<item>value.c
<item>varobj.c
<item>wrapper.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_symtab()  :  symtab.c
<item>build_complex()  :  gdbtypes.c
<item>build_flt()  :  gdbtypes.c
<item>build_parse()  :  parse.c
<item>error_type()  :  stabsread.c
<item>find_function_addr()  :  infcall.c
<item>make_cvr_type()  :  gdbtypes.c
<item>rs6000_builtin_type()  :  stabsread.c
</itemize>
</descrip>

<sect1>Global Variable block_found

<p>
<tt>const struct block* block_found</tt><newline>
<descrip>
<tag>Visible in:</tag>
<itemize>
<item>ada-exp.c
<item>ada-lang.c
<item>c-exp.c
<item>c-lang.c
<item>eval.c
<item>expprint.c
<item>f-exp.c
<item>f-lang.c
<item>infcmd.c
<item>jv-exp.c
<item>jv-lang.c
<item>language.c
<item>linespec.c
<item>m2-exp.c
<item>m2-lang.c
<item>objc-exp.c
<item>objc-lang.c
<item>p-exp.c
<item>p-lang.c
<item>parse.c
<item>scm-exp.c
<item>scm-lang.c
<item>scm-valprint.c
<item>symtab.c
<item>valarith.c
<item>varobj.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>c_parse()  :  c-exp.c
<item>f_parse()  :  f-exp.c
<item>lookup_symbol_aux_block()  :  symtab.c
<item>lookup_symbol_aux_symtabs()  :  symtab.c
<item>m2_parse()  :  m2-exp.c
<item>objc_parse()  :  objc-exp.c
<item>pascal_parse()  :  p-exp.c
<item>push_variable()  :  jv-exp.c
<item>standard_lookup()  :  ada-lang.c
<item>varobj_create()  :  varobj.c
<item>write_dollar_variable()  :  parse.c
<item>write_object_renaming()  :  ada-exp.c
</itemize>
</descrip>

<sect1>Local Variables

<p>
<bf>return_val_size</bf><newline>
<tt>static int return_val_size</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>completion_list_add_name()
<item>make_file_symbol_completion_list()
<item>make_symbol_completion_list()
</itemize>
</descrip>
<p>
<bf>return_val_index</bf><newline>
<tt>static int return_val_index</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>completion_list_add_name()
<item>make_file_symbol_completion_list()
<item>make_symbol_completion_list()
</itemize>
</descrip>
<p>
<bf>return_val</bf><newline>
<tt>static char** return_val</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>completion_list_add_name()
<item>make_file_symbol_completion_list()
<item>make_symbol_completion_list()
</itemize>
</descrip>
<p>
<bf>name_of_main</bf><newline>
<tt>static char* name_of_main</tt><newline>
<descrip>
<tag>Used in:</tag>
<itemize>
<item>main_name()
<item>set_main_name()
</itemize>
</descrip>

<sect1>Global Function _initialize_symtab()

<p><tt>void _initialize_symtab ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>init_type()  :  gdbtypes.c
<item>observer_attach_executable_changed()  :  observer.c
<item>add_com(), add_info()
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>functions_info()  :  symtab.c
<item>rbreak_command()  :  symtab.c
<item>sources_info()  :  symtab.c
<item>symtab_observer_executable_changed()  :  symtab.c
<item>types_info()  :  symtab.c
<item>variables_info()  :  symtab.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>builtin_type_error  :  symtab.c
<item>dbx_commands  :  main.c
<item>xdb_commands  :  main.c
</itemize>
</descrip>

<sect1>Global Function basic_lookup_symbol_nonlocal()

<p><tt>struct symbol* basic_lookup_symbol_nonlocal ( const char* name, const char* linkage_name, const struct block* block, const domain_enum domain, struct symtab** symtab )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>lookup_symbol_global()  :  symtab.c
<item>lookup_symbol_static()  :  symtab.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>c-lang.c
<item>f-lang.c
<item>jv-lang.c
<item>language.c
<item>m2-lang.c
<item>objc-lang.c
<item>p-lang.c
<item>scm-lang.c
</itemize>
</descrip>

<sect1>Global Function basic_lookup_transparent_type()

<p><tt>struct type* basic_lookup_transparent_type ( const char* name )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>complaint()  :  complaints.c
<item>lookup_block_symbol()  :  symtab.c
<item>lookup_partial_symbol()  :  symtab.c
<item>objc_fixup_class_length()  :  objc-lang.c
<item>objfile_get_first()  :  objfiles.c
<item>objfile_get_next()  :  objfiles.c
<item>printf_filtered()  :  utils.c
<item>psymtab_get_first()  :  objfiles.c
<item>psymtab_get_next()  :  objfiles.c
<item>psymtab_to_symtab()  :  symfile.c
<item>symtab_get_first()  :  objfiles.c
<item>symtab_get_next()  :  objfiles.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>cp_lookup_transparent_type()  :  cp-namespace.c
<item>cp_lookup_transparent_type_loop()  :  cp-namespace.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>ada-lang.c
<item>c-lang.c
<item>f-lang.c
<item>jv-lang.c
<item>language.c
<item>m2-lang.c
<item>objc-lang.c
<item>p-lang.c
<item>scm-lang.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>cplus_struct_default  :  gdbtypes.c
<item>info_verbose  :  top.c
<item>symfile_complaints  :  complaints.c
</itemize>
</descrip>

<sect1>Global Function copy_sal()

<p><tt>struct symtab_and_line* copy_sal ( struct symtab_and_line* orig )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xmalloc()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>find_pc_sect_line()  :  symtab.c
</itemize>
</descrip>

<sect1>Global Function decode_line_spec()

<p><tt>struct symtabs_and_lines decode_line_spec ( const char* string, int funfirstline )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>decode_line_1()  :  linespec.c
<item>error()  :  utils.c
<item>get_current_source_symtab_and_line()  :  source.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>clear_command()  :  breakpoint.c
<item>func_command()  :  stack.c
<item>select_source_symtab()  :  source.c
<item>trace_find_line_command()  :  tracepoint.c
</itemize>
</descrip>

<sect1>Global Function find_function_start_sal()

<p><tt>struct symtab_and_line find_function_start_sal ( struct symbol* sym, int funfirstline )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>block_contains_pc()  :  block.c
<item>error()  :  utils.c
<item>find_pc_sect_line()  :  symtab.c
<item>fixup_symbol_section()  :  symtab.c
<item>gdbarch_deprecated_function_start_offset()  :  gdbarch.c
<item>gdbarch_skip_prologue()  :  gdbarch.c
<item>gdbarch_skip_prologue_addr_ctx()  :  gdbarch.c
<item>gdbarch_skip_prologue_addr_ctx_p()  :  gdbarch.c
<item>init_address_context()  :  symtab.c
<item>overlay_mapped_address()  :  symfile.c
<item>overlay_unmapped_address()  :  symfile.c
<item>section_is_mapped()  :  symfile.c
<item>section_is_overlay()  :  symfile.c
<item>symbol_natural_name()  :  symtab.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>decode_all_digits()  :  linespec.c
<item>decode_all_digits_exhaustive()  :  linespec.c
<item>decode_line_2()  :  linespec.c
<item>decode_objc()  :  linespec.c
<item>find_method()  :  linespec.c
<item>symbol_found()  :  linespec.c
<item>symbols_found()  :  linespec.c
<item>user_select_syms()  :  ada-lang.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
<item>demangle  :  utils.c
</itemize>
</descrip>

<sect1>Global Function find_line_pc()

<p><tt>int find_line_pc ( struct symtab* symtab, int line, CORE_ADDR* pc )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>find_line_pc_range()  :  symtab.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>decode_all_digits()  :  linespec.c
<item>rest_of_line_contains_inlined_subroutine()  :  inlining.c
</itemize>
</descrip>

<sect1>Global Function find_line_pc_range()

<p><tt>int find_line_pc_range ( struct symtab_and_line sal, CORE_ADDR* startptr, CORE_ADDR* endptr )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>find_line_symtab()  :  symtab.c
<item>find_pc_sect_line()  :  symtab.c
<item>find_source_lines()  :  source.c
<item>internal_error()  :  utils.c
<item>open_source_file()  :  source.c
<item>close()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>find_line_pc()  :  symtab.c
<item>line_info()  :  source.c
<item>resolve_sal_pc()  :  breakpoint.c
<item>trace_find_line_command()  :  tracepoint.c
</itemize>
</descrip>

<sect1>Global Function find_line_symtab()

<p><tt>struct symtab* find_line_symtab ( struct symtab* symtab, int line, int* index, int* exact_match )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>find_line_common()  :  symtab.c
<item>objfile_get_first()  :  objfiles.c
<item>objfile_get_next()  :  objfiles.c
<item>symtab_get_first()  :  objfiles.c
<item>symtab_get_next()  :  objfiles.c
<item>warning()  :  utils.c
<item>strcmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>decode_all_digits()  :  linespec.c
<item>find_line_pc_range()  :  symtab.c
</itemize>
</descrip>

<sect1>Global Function find_main_psymtab()

<p><tt>struct partial_symtab* find_main_psymtab ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>lookup_partial_symbol()  :  symtab.c
<item>main_name()  :  symtab.c
<item>objfile_get_first()  :  objfiles.c
<item>objfile_get_next()  :  objfiles.c
<item>psymtab_get_first()  :  objfiles.c
<item>psymtab_get_next()  :  objfiles.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>set_initial_language()  :  symfile.c
</itemize>
</descrip>

<sect1>Global Function find_pc_line()

<p><tt>struct symtab_and_line find_pc_line ( CORE_ADDR pc, int notcurrent )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>find_pc_overlay()  :  symfile.c
<item>find_pc_sect_line()  :  symtab.c
<item>overlay_mapped_address()  :  symfile.c
<item>pc_in_unmapped_range()  :  symfile.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>address_range_ending_pc()  :  inlining.c
<item>c_preprocess_and_parse()  :  c-lang.c
<item>check_for_additional_inlined_breakpoint_locations()  :  inlining.c
<item>decode_indirect()  :  linespec.c
<item>default_macro_scope()  :  macroscope.c
<item>do_mixed_source_and_assembly()  :  disasm.c
<item>find_frame_sal()  :  frame.c
<item>find_next_inlined_subroutine()  :  inlining.c
<item>find_pc_line_pc_range()  :  symtab.c
<item>find_pc_sect_line()  :  symtab.c
<item>finish_command()  :  infcmd.c
<item>finish_inlined_subroutine_command()  :  infcmd.c
<item>handle_inferior_event()  :  infrun.c
<item>in_prologue()  :  symtab.c
<item>init_execution_control_state()  :  infrun.c
<item>print_block_frame_labels()  :  stack.c
<item>refine_prologue_limit()  :  frame.c
<item>rest_of_line_contains_inlined_subroutine()  :  inlining.c
<item>set_traceframe_context()  :  tracepoint.c
<item>skip_prologue_using_sal()  :  symtab.c
<item>step_1_inlining()  :  infcmd.c
<item>step_into_function()  :  infrun.c
<item>step_once()  :  infcmd.c
<item>trace_find_line_command()  :  tracepoint.c
<item>until_break_command()  :  breakpoint.c
<item>until_next_command()  :  infcmd.c
</itemize>
</descrip>

<sect1>Global Function find_pc_line_pc_range()

<p><tt>int find_pc_line_pc_range ( CORE_ADDR pc, CORE_ADDR* startptr, CORE_ADDR* endptr )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>find_pc_line()  :  symtab.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>step_1_inlining()  :  infcmd.c
<item>step_1_no_inlining()  :  infcmd.c
<item>step_once()  :  infcmd.c
</itemize>
</descrip>

<sect1>Global Function find_pc_psymbol()

<p><tt>struct partial_symbol* find_pc_psymbol ( struct partial_symtab* psymtab, CORE_ADDR pc )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>find_pc_mapped_section()  :  symfile.c
<item>find_pc_sect_psymbol()  :  symtab.c
</itemize>
</descrip>

<sect1>Global Function find_pc_psymtab()

<p><tt>struct partial_symtab* find_pc_psymtab ( CORE_ADDR pc )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>find_pc_mapped_section()  :  symfile.c
<item>find_pc_sect_psymtab()  :  symtab.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>backtrace_command_1()  :  stack.c
</itemize>
</descrip>

<sect1>Global Function find_pc_sect_line()

<p><tt>struct symtab_and_line find_pc_sect_line ( CORE_ADDR pc, struct bfd_section* section, int notcurrent )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>convert_sal()  :  source.c
<item>copy_sal()  :  symtab.c
<item>find_pc_line()  :  symtab.c
<item>find_pc_sect_symtab()  :  symtab.c
<item>init_sal()  :  symtab.c
<item>internal_error()  :  utils.c
<item>lookup_minimal_symbol_by_pc()  :  minsyms.c
<item>lookup_minimal_symbol_text()  :  minsyms.c
<item>warning()  :  utils.c
<item>xfree()  :  utils.c
<item>xmalloc()  :  utils.c
<item>__builtin___memcpy_chk(), __builtin_object_size(), __inline_memcpy_chk()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>block_inlined_function()  :  inlining.c
<item>build_address_symbolic()  :  printcmd.c
<item>find_function_start_sal()  :  symtab.c
<item>find_line_pc_range()  :  symtab.c
<item>find_pc_line()  :  symtab.c
<item>minsym_found()  :  linespec.c
<item>minsyms_found()  :  linespec.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>cached_overlay_section  :  symtab.c
<item>cached_pc_line  :  symtab.c
<item>last_overlay_section_lookup_pc  :  symtab.c
<item>last_pc_line_lookup_pc  :  symtab.c
</itemize>
</descrip>

<sect1>Global Function find_pc_sect_psymbol()

<p><tt>struct partial_symbol* find_pc_sect_psymbol ( struct partial_symtab* psymtab, CORE_ADDR pc, asection* section )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>find_pc_sect_psymtab()  :  symtab.c
<item>fixup_psymbol_section()  :  symtab.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>find_pc_partial_function_impl()  :  blockframe.c
<item>find_pc_psymbol()  :  symtab.c
<item>find_pc_sect_psymtab()  :  symtab.c
</itemize>
</descrip>

<sect1>Global Function find_pc_sect_psymtab()

<p><tt>struct partial_symtab* find_pc_sect_psymtab ( CORE_ADDR pc, asection* section )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>find_pc_sect_psymbol()  :  symtab.c
<item>lookup_minimal_symbol_by_pc_section()  :  minsyms.c
<item>objfile_get_first()  :  objfiles.c
<item>objfile_get_next()  :  objfiles.c
<item>psymtab_get_first()  :  objfiles.c
<item>psymtab_get_next()  :  objfiles.c
<item>skip_non_matching_bfd()  :  symtab.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>find_pc_partial_function_impl()  :  blockframe.c
<item>find_pc_psymtab()  :  symtab.c
<item>find_pc_sect_psymbol()  :  symtab.c
<item>find_pc_sect_symtab()  :  symtab.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>cached_mapped_section  :  symtab.c
<item>cached_psymtab  :  symtab.c
<item>last_mapped_section_lookup_pc  :  symtab.c
<item>last_psymtab_lookup_pc  :  symtab.c
</itemize>
</descrip>

<sect1>Global Function find_pc_sect_symtab()

<p><tt>struct symtab* find_pc_sect_symtab ( CORE_ADDR pc, asection* section )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>block_contains_pc()  :  block.c
<item>block_size()  :  symtab.c
<item>dict_iterator_first()  :  dictionary.c
<item>dict_iterator_next()  :  dictionary.c
<item>find_pc_sect_psymtab()  :  symtab.c
<item>fixup_symbol_section()  :  symtab.c
<item>lookup_minimal_symbol_by_pc_section()  :  minsyms.c
<item>objfile_get_first()  :  objfiles.c
<item>objfile_get_next()  :  objfiles.c
<item>paddr_nz()  :  utils.c
<item>psymtab_to_symtab()  :  symfile.c
<item>skip_non_matching_bfd()  :  symtab.c
<item>symtab_get_first()  :  objfiles.c
<item>symtab_get_next()  :  objfiles.c
<item>warning()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>blockvector_for_pc_sect()  :  block.c
<item>find_pc_sect_line()  :  symtab.c
<item>find_pc_symtab()  :  symtab.c
<item>inlined_function_update_call_stack()  :  inlining.c
<item>update_inlined_function_line_table_entry()  :  symtab.c
<item>update_tmp_frame_stack()  :  inlining.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>cached_mapped_section  :  symtab.c
<item>cached_symtab  :  symtab.c
<item>last_mapped_section_lookup_pc  :  symtab.c
<item>last_symtab_lookup_pc  :  symtab.c
</itemize>
</descrip>

<sect1>Global Function find_pc_symtab()

<p><tt>struct symtab* find_pc_symtab ( CORE_ADDR pc )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>find_pc_mapped_section()  :  symfile.c
<item>find_pc_sect_symtab()  :  symtab.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>ada_lookup_symbol_list()  :  ada-lang.c
<item>add_item_to_inlined_subroutine_stack()  :  inlining.c
<item>add_item_to_temp_frame_stack()  :  inlining.c
<item>dwarf2_frame_find_quirks()  :  dwarf2-frame.c
<item>frame_info()  :  stack.c
<item>gdb_disassembly()  :  disasm.c
<item>get_frame_language()  :  stack.c
<item>print_frame()  :  stack.c
<item>print_frame_info()  :  stack.c
<item>search_symbols()  :  symtab.c
<item>select_frame()  :  frame.c
<item>step_into_function()  :  infrun.c
</itemize>
</descrip>

<sect1>Global Function fixup_psymbol_section()

<p><tt>struct partial_symbol* fixup_psymbol_section ( struct partial_symbol* psym, struct objfile* objfile )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fixup_section()  :  symtab.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>find_pc_sect_psymbol()  :  symtab.c
<item>objfile_relocate()  :  objfiles.c
</itemize>
</descrip>

<sect1>Global Function fixup_symbol_section()

<p><tt>struct symbol* fixup_symbol_section ( struct symbol* sym, struct objfile* objfile )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fixup_section()  :  symtab.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>ada_add_block_symbols()  :  ada-lang.c
<item>ada_lookup_symbol()  :  ada-lang.c
<item>find_function_start_sal()  :  symtab.c
<item>find_pc_sect_symtab()  :  symtab.c
<item>jump_command()  :  infcmd.c
<item>lookup_symbol_aux_block()  :  symtab.c
<item>lookup_symbol_aux_psymtabs()  :  symtab.c
<item>lookup_symbol_aux_symtabs()  :  symtab.c
<item>objfile_relocate()  :  objfiles.c
<item>resolve_sal_pc()  :  breakpoint.c
<item>var_decode_location()  :  dwarf2read.c
</itemize>
</descrip>

<sect1>Global Function free_search_symbols()

<p><tt>void free_search_symbols ( struct symbol_search* symbols )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xfree()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>do_free_search_symbols_cleanup()  :  symtab.c
</itemize>
</descrip>

<sect1>Global Function gdb_mangle_name()

<p><tt>char* gdb_mangle_name ( struct type* type, int method_id, int signature_id )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>gdbtypes.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>is_constructor_name()  :  cp-abi.c
<item>is_destructor_name()  :  cp-abi.c
<item>is_operator_name()  :  cp-abi.c
<item>type_name_no_tag()  :  gdbtypes.c
<item>xmalloc()  :  utils.c
<item>__builtin___snprintf_chk(), __builtin___strcat_chk(), __builtin___strcpy_chk(), __builtin_object_size(), __inline_strcat_chk(), __inline_strcpy_chk(), strcmp(), strlen(), strncmp(), xstrdup()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>add_matching_methods()  :  linespec.c
<item>c_type_print_base()  :  c-typeprint.c
<item>check_stub_method()  :  gdbtypes.c
<item>java_type_print_base()  :  jv-typeprint.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>cplus_struct_default  :  gdbtypes.c
</itemize>
</descrip>

<sect1>Global Function in_prologue()

<p><tt>int in_prologue ( CORE_ADDR pc, CORE_ADDR func_start )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>find_pc_line()  :  symtab.c
<item>find_pc_partial_function_no_inlined()  :  blockframe.c
<item>gdbarch_skip_prologue()  :  gdbarch.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>handle_inferior_event()  :  infrun.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
</itemize>
</descrip>

<sect1>Global Function init_address_context()

<p><tt>void init_address_context ( struct address_context* addr_ctx )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>__builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>decode_line_2()  :  linespec.c
<item>decode_objc()  :  linespec.c
<item>find_function_start_sal()  :  symtab.c
<item>minsym_found()  :  linespec.c
<item>minsyms_found()  :  linespec.c
</itemize>
</descrip>

<sect1>Global Function init_sal()

<p><tt>void init_sal ( struct symtab_and_line* sal )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Called by:</tag>
<itemize>
<item>clear_command()  :  breakpoint.c
<item>create_exec_event_catchpoint()  :  breakpoint.c
<item>create_fork_vfork_event_catchpoint()  :  breakpoint.c
<item>create_internal_breakpoint()  :  breakpoint.c
<item>decode_all_digits()  :  linespec.c
<item>decode_all_digits_exhaustive()  :  linespec.c
<item>decode_dollar()  :  linespec.c
<item>decode_line_2()  :  linespec.c
<item>find_pc_sect_line()  :  symtab.c
<item>gnu_v3_update_exception_catchpoints()  :  breakpoint.c
<item>hand_function_call()  :  infcall.c
<item>handle_inferior_event()  :  infrun.c
<item>insert_step_resume_breakpoint_at_frame()  :  infrun.c
<item>line_info()  :  source.c
<item>parse_breakpoint_sals()  :  breakpoint.c
<item>step_into_function()  :  infrun.c
<item>watch_command_1()  :  breakpoint.c
</itemize>
</descrip>

<sect1>Global Function lookup_block_symbol()

<p><tt>struct symbol* lookup_block_symbol ( const struct block* block, const char* name, const char* linkage_name, const domain_enum domain )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>dict_iter_name_first()  :  dictionary.c
<item>dict_iter_name_next()  :  dictionary.c
<item>psym_name_match()  :  symtab.c
<item>strcmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>basic_lookup_transparent_type()  :  symtab.c
<item>check_one_possible_namespace_symbol()  :  cp-namespace.c
<item>lookup_possible_namespace_symbol()  :  cp-namespace.c
<item>lookup_symbol_aux_block()  :  symtab.c
<item>lookup_symbol_aux_psymtabs()  :  symtab.c
<item>lookup_symbol_aux_symtabs()  :  symtab.c
<item>maintenance_check_symtabs()  :  symmisc.c
<item>symbol_found()  :  linespec.c
<item>symbols_found()  :  linespec.c
<item>value_of_local()  :  valops.c
</itemize>
</descrip>

<sect1>Global Function lookup_block_symbol_all()

<p><tt>struct symbol_search* lookup_block_symbol_all ( const struct block* block, const char* name, const char* linkage_name, const domain_enum domain )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>dict_iter_name_first()  :  dictionary.c
<item>dict_iter_name_next()  :  dictionary.c
<item>psym_name_match()  :  symtab.c
<item>xmalloc()  :  utils.c
<item>strcmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>lookup_symbol_all()  :  symtab.c
<item>lookup_symbol_aux_psymtabs()  :  symtab.c
<item>lookup_symbol_aux_symtabs()  :  symtab.c
</itemize>
</descrip>

<sect1>Global Function lookup_partial_symbol()

<p><tt>struct partial_symbol* lookup_partial_symbol ( struct partial_symtab* pst, const char* name, const char* linkage_name, int global, domain_enum domain )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
<item>strcmp_iw()  :  utils.c
<item>strcmp_iw_ordered()  :  utils.c
<item>symbol_natural_name()  :  symtab.c
<item>symbol_search_name()  :  symtab.c
<item>strcmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>basic_lookup_transparent_type()  :  symtab.c
<item>convert_oso_map_to_final_map()  :  dwarf2read.c
<item>find_main_psymtab()  :  symtab.c
<item>lookup_psymbol_from_namestring()  :  dbxread.c
<item>lookup_symbol_aux_psymtabs()  :  symtab.c
<item>read_in_psymtabs()  :  cp-support.c
</itemize>
</descrip>

<sect1>Global Function lookup_partial_symtab()

<p><tt>struct partial_symtab* lookup_partial_symtab ( const char* name )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>gdb_realpath()  :  utils.c
<item>make_cleanup()  :  utils.c
<item>objfile_get_first()  :  objfiles.c
<item>objfile_get_next()  :  objfiles.c
<item>psymtab_get_first()  :  objfiles.c
<item>psymtab_get_next()  :  objfiles.c
<item>source_full_path_of()  :  source.c
<item>xfullpath()  :  utils.c
<item>lbasename(), strcmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>free_named_symtabs()  :  symfile.c
<item>lookup_symtab()  :  symtab.c
<item>m2_lex()  :  m2-exp.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>xfree()  :  utils.c
</itemize>
</descrip>

<sect1>Global Function lookup_partial_symtab_all()

<p><tt>struct partial_symtab** lookup_partial_symtab_all ( const char* name, int only_unread )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>add_partial_symtab_to_array()  :  symtab.c
<item>gdb_realpath()  :  utils.c
<item>make_cleanup()  :  utils.c
<item>objfile_get_first()  :  objfiles.c
<item>objfile_get_next()  :  objfiles.c
<item>psymtab_get_first()  :  objfiles.c
<item>psymtab_get_next()  :  objfiles.c
<item>psymtab_to_fullname()  :  source.c
<item>xfree()  :  utils.c
<item>xfullpath()  :  utils.c
<item>xmalloc()  :  utils.c
<item>lbasename(), strcmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>lookup_symtab_all()  :  symtab.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>xfree()  :  utils.c
</itemize>
</descrip>

<sect1>Global Function lookup_symbol()

<p><tt>struct symbol* lookup_symbol ( const char* name, const struct block* block, const domain_enum domain, int* is_a_field_of_this, struct symtab** symtab )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>lookup_symbol_aux()  :  symtab.c
<item>xfree()  :  utils.c
<item>__builtin_alloca(), cplus_demangle(), strlen(), tolower()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>address_info()  :  printcmd.c
<item>c_lex()  :  c-exp.c
<item>c_parse()  :  c-exp.c
<item>c_val_print()  :  c-valprint.c
<item>check_typedef()  :  gdbtypes.c
<item>cp_lookup_rtti_type()  :  cp-support.c
<item>decode_dollar()  :  linespec.c
<item>decode_variable()  :  linespec.c
<item>f_lex()  :  f-exp.c
<item>find_imps()  :  objc-lang.c
<item>find_methods()  :  linespec.c
<item>get_java_object_type()  :  jv-lang.c
<item>java_lookup_class()  :  jv-lang.c
<item>lang_bool_type()  :  language.c
<item>lookup_enum()  :  gdbtypes.c
<item>lookup_prefix_sym()  :  linespec.c
<item>lookup_struct()  :  gdbtypes.c
<item>lookup_struct_no_error()  :  gdbtypes.c
<item>lookup_struct_typedef()  :  objc-lang.c
<item>lookup_symbol_in_language()  :  ada-lang.c
<item>lookup_template_type()  :  gdbtypes.c
<item>lookup_typename()  :  gdbtypes.c
<item>lookup_union()  :  gdbtypes.c
<item>m2_lex()  :  m2-exp.c
<item>m2_parse()  :  m2-exp.c
<item>objc_lex()  :  objc-exp.c
<item>objc_parse()  :  objc-exp.c
<item>objc_target_type_from_object()  :  objc-lang.c
<item>parse_nested_classes_for_hpacc()  :  parse.c
<item>pascal_lex()  :  p-exp.c
<item>pascal_parse()  :  p-exp.c
<item>pascal_val_print()  :  p-valprint.c
<item>print_frame_arg_vars()  :  stack.c
<item>print_frame_args()  :  stack.c
<item>push_variable()  :  jv-exp.c
<item>scm_lookup_name()  :  scm-lang.c
<item>search_symbols()  :  symtab.c
<item>select_source_symtab()  :  source.c
<item>value_fn_field()  :  value.c
<item>value_static_field()  :  value.c
<item>value_struct_elt_for_reference()  :  valops.c
<item>write_dollar_variable()  :  parse.c
<item>write_object_renaming()  :  ada-exp.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>case_sensitivity  :  language.c
<item>current_language  :  language.c
</itemize>
</descrip>

<sect1>Global Function lookup_symbol_all()

<p><tt>int lookup_symbol_all ( const char* name, const struct block* block, const domain_enum domain, int* is_a_field_of_this, struct symtab** symtab, struct symbol_search** sym_list )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>block_static_block()  :  block.c
<item>lookup_block_symbol_all()  :  symtab.c
<item>lookup_symbol_aux_psymtabs()  :  symtab.c
<item>lookup_symbol_aux_symtabs()  :  symtab.c
<item>xfree()  :  utils.c
<item>__builtin_alloca(), cplus_demangle(), strlen(), tolower()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>add_constructors()  :  linespec.c
<item>add_matching_methods()  :  linespec.c
<item>collect_methods()  :  linespec.c
<item>decode_all_variables()  :  linespec.c
<item>decode_compound()  :  linespec.c
<item>find_function_in_inferior()  :  valops.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>case_sensitivity  :  language.c
<item>current_language  :  language.c
</itemize>
</descrip>

<sect1>Global Function lookup_symbol_aux_block()

<p><tt>struct symbol* lookup_symbol_aux_block ( const char* name, const char* linkage_name, const struct block* block, const domain_enum domain, struct symtab** symtab )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fixup_symbol_section()  :  symtab.c
<item>lookup_block_symbol()  :  symtab.c
<item>objfile_get_first()  :  objfiles.c
<item>objfile_get_next()  :  objfiles.c
<item>symtab_get_first()  :  objfiles.c
<item>symtab_get_next()  :  objfiles.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>lookup_symbol_aux()  :  symtab.c
<item>lookup_symbol_aux_local()  :  symtab.c
<item>lookup_symbol_file()  :  cp-namespace.c
<item>lookup_symbol_static()  :  symtab.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>block_found  :  symtab.c
</itemize>
</descrip>

<sect1>Global Function lookup_symbol_global()

<p><tt>struct symbol* lookup_symbol_global ( const char* name, const char* linkage_name, const domain_enum domain, struct symtab** symtab )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>lookup_symbol_aux_psymtabs()  :  symtab.c
<item>lookup_symbol_aux_symtabs()  :  symtab.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>basic_lookup_symbol_nonlocal()  :  symtab.c
<item>lookup_symbol_file()  :  cp-namespace.c
</itemize>
</descrip>

<sect1>Global Function lookup_symbol_static()

<p><tt>struct symbol* lookup_symbol_static ( const char* name, const char* linkage_name, const struct block* block, const domain_enum domain, struct symtab** symtab )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>block_static_block()  :  block.c
<item>lookup_symbol_aux_block()  :  symtab.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>basic_lookup_symbol_nonlocal()  :  symtab.c
<item>lookup_symbol_file()  :  cp-namespace.c
</itemize>
</descrip>

<sect1>Global Function lookup_symtab()

<p><tt>struct symtab* lookup_symtab ( const char* name )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>gdb_realpath()  :  utils.c
<item>lookup_partial_symtab()  :  symtab.c
<item>make_cleanup()  :  utils.c
<item>objfile_get_first()  :  objfiles.c
<item>objfile_get_next()  :  objfiles.c
<item>psymtab_to_symtab()  :  symfile.c
<item>symtab_get_first()  :  objfiles.c
<item>symtab_get_next()  :  objfiles.c
<item>symtab_to_fullname()  :  source.c
<item>xfullpath()  :  utils.c
<item>lbasename(), strcmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>block_lookup()  :  ada-exp.c
<item>c_lex()  :  c-exp.c
<item>make_file_symbol_completion_list()  :  symtab.c
<item>objc_lex()  :  objc-exp.c
<item>objc_parse()  :  objc-exp.c
<item>pascal_lex()  :  p-exp.c
<item>pascal_parse()  :  p-exp.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>xfree()  :  utils.c
</itemize>
</descrip>

<sect1>Global Function lookup_symtab_all()

<p><tt>struct symtab** lookup_symtab_all ( const char* name )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>add_symtab_to_array()  :  symtab.c
<item>gdb_realpath()  :  utils.c
<item>lookup_partial_symtab_all()  :  symtab.c
<item>make_cleanup()  :  utils.c
<item>objfile_get_first()  :  objfiles.c
<item>objfile_get_next()  :  objfiles.c
<item>printf_filtered()  :  utils.c
<item>psymtab_to_symtab()  :  symfile.c
<item>symtab_get_first()  :  objfiles.c
<item>symtab_get_next()  :  objfiles.c
<item>symtab_to_fullname()  :  source.c
<item>xfree()  :  utils.c
<item>xfullpath()  :  utils.c
<item>xmalloc()  :  utils.c
<item>lbasename(), strcmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>symtab_from_filename()  :  linespec.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>xfree()  :  utils.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>info_verbose  :  top.c
</itemize>
</descrip>

<sect1>Global Function lookup_transparent_type()

<p><tt>struct type* lookup_transparent_type ( const char* name )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Called by:</tag>
<itemize>
<item>check_typedef()  :  gdbtypes.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_language  :  language.c
</itemize>
</descrip>

<sect1>Global Function main_name()

<p><tt>char* main_name ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>find_main_name()  :  symtab.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>addr_inside_main_func()  :  blockframe.c
<item>find_main_psymtab()  :  symtab.c
<item>inside_main_func()  :  frame.c
<item>run_command_1()  :  infcmd.c
<item>select_source_symtab()  :  source.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>name_of_main  :  symtab.c
</itemize>
</descrip>

<sect1>Global Function make_cleanup_free_search_symbols()

<p><tt>struct cleanup* make_cleanup_free_search_symbols ( struct symbol_search* symbols )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>make_cleanup()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>rbreak_command()  :  symtab.c
<item>search_symbols()  :  symtab.c
<item>symtab_symbol_info()  :  symtab.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>do_free_search_symbols_cleanup()  :  symtab.c
</itemize>
</descrip>

<sect1>Global Function make_file_symbol_completion_list()

<p><tt>char** make_file_symbol_completion_list ( const char* text, char* word, char* srcfile )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>completion_list_add_name()  :  symtab.c
<item>dict_iterator_first()  :  dictionary.c
<item>dict_iterator_next()  :  dictionary.c
<item>language_search_unquoted_string()  :  symtab.c
<item>lookup_symtab()  :  symtab.c
<item>symbol_natural_name()  :  symtab.c
<item>xmalloc()  :  utils.c
<item>lbasename(), strlen()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>location_completer()  :  completer.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>return_val  :  symtab.c
<item>return_val_index  :  symtab.c
<item>return_val_size  :  symtab.c
</itemize>
</descrip>

<sect1>Global Function make_source_files_completion_list()

<p><tt>char** make_source_files_completion_list ( const char* text, const char* word )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>add_filename_to_list()  :  symtab.c
<item>filename_seen()  :  symtab.c
<item>have_full_symbols()  :  objfiles.c
<item>have_partial_symbols()  :  objfiles.c
<item>not_interesting_fname()  :  symtab.c
<item>objfile_get_first()  :  objfiles.c
<item>objfile_get_next()  :  objfiles.c
<item>psymtab_get_first()  :  objfiles.c
<item>psymtab_get_next()  :  objfiles.c
<item>symtab_get_first()  :  objfiles.c
<item>symtab_get_next()  :  objfiles.c
<item>xmalloc()  :  utils.c
<item>lbasename(), strlen(), strncmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>location_completer()  :  completer.c
</itemize>
</descrip>

<sect1>Global Function make_symbol_completion_list()

<p><tt>char** make_symbol_completion_list ( const char* text, char* word )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>completion_list_add_name()  :  symtab.c
<item>completion_list_objc_symbol()  :  symtab.c
<item>dict_iterator_first()  :  dictionary.c
<item>dict_iterator_next()  :  dictionary.c
<item>get_selected_block()  :  stack.c
<item>objfile_get_first()  :  objfiles.c
<item>objfile_get_next()  :  objfiles.c
<item>psymtab_get_first()  :  objfiles.c
<item>psymtab_get_next()  :  objfiles.c
<item>quit()  :  utils.c
<item>symbol_natural_name()  :  symtab.c
<item>symtab_get_first()  :  objfiles.c
<item>symtab_get_next()  :  objfiles.c
<item>xmalloc()  :  utils.c
<item>isalnum(), strlen()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>location_completer()  :  completer.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>cplus_struct_default  :  gdbtypes.c
<item>quit_flag  :  utils.c
<item>return_val  :  symtab.c
<item>return_val_index  :  symtab.c
<item>return_val_size  :  symtab.c
</itemize>
</descrip>

<sect1>Global Function operator_chars()

<p><tt>const char* operator_chars ( const char* p, const char** end )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>isalnum(), isalpha(), strncmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>search_symbols()  :  symtab.c
</itemize>
</descrip>

<sect1>Global Function psym_name_match()

<p><tt>int psym_name_match ( const char* alternate_name, const char* name )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>isdigit(), isupper(), strcmp(), strlen(), strncmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>iter_name_first_hashed()  :  dictionary.c
<item>iter_name_next_hashed()  :  dictionary.c
<item>iter_name_next_linear()  :  dictionary.c
<item>lookup_block_symbol()  :  symtab.c
<item>lookup_block_symbol_all()  :  symtab.c
<item>lookup_equiv_partial_symbol()  :  symtab.c
</itemize>
</descrip>

<sect1>Global Function rbreak_command_wrapper()

<p><tt>void rbreak_command_wrapper ( const char* regexp, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>breakpoint.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>rbreak_command()  :  symtab.c
</itemize>
</descrip>

<sect1>Global Function search_symbols()

<p><tt>void search_symbols ( const char* regexp, domain_enum kind, int nfiles, char* files[], struct symbol_search** matches )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>dict_iterator_first()  :  dictionary.c
<item>dict_iterator_next()  :  dictionary.c
<item>discard_cleanups()  :  utils.c
<item>error()  :  utils.c
<item>file_matches()  :  symtab.c
<item>find_pc_symtab()  :  symtab.c
<item>lookup_symbol()  :  symtab.c
<item>make_cleanup_free_search_symbols()  :  symtab.c
<item>objfile_get_first()  :  objfiles.c
<item>objfile_get_next()  :  objfiles.c
<item>objfile_set_load_state()  :  objfiles.c
<item>operator_chars()  :  symtab.c
<item>psymtab_get_first()  :  objfiles.c
<item>psymtab_get_next()  :  objfiles.c
<item>psymtab_to_symtab()  :  symfile.c
<item>quit()  :  utils.c
<item>re_comp()  :  utils.c
<item>re_exec()  :  utils.c
<item>sort_search_symbols()  :  symtab.c
<item>symbol_natural_name()  :  symtab.c
<item>symtab_get_first()  :  objfiles.c
<item>symtab_get_next()  :  objfiles.c
<item>xmalloc()  :  utils.c
<item>__builtin___snprintf_chk(), __builtin_alloca(), __builtin_object_size(), isalpha(), strlen(), strncmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>rbreak_command()  :  symtab.c
<item>symtab_symbol_info()  :  symtab.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>quit_flag  :  utils.c
</itemize>
</descrip>

<sect1>Global Function set_main_name()

<p><tt>void set_main_name ( const char* name )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xfree()  :  utils.c
<item>xstrdup()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>find_main_name()  :  symtab.c
<item>process_one_symbol()  :  dbxread.c
<item>symtab_observer_executable_changed()  :  symtab.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>name_of_main  :  symtab.c
</itemize>
</descrip>

<sect1>Global Function skip_prologue_using_sal()

<p><tt>CORE_ADDR skip_prologue_using_sal ( CORE_ADDR func_addr )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>find_pc_line()  :  symtab.c
<item>find_pc_partial_function_no_inlined()  :  blockframe.c
<item>gdbarch_deprecated_function_start_offset()  :  gdbarch.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
</itemize>
</descrip>

<sect1>Global Function symbol_demangled_name()

<p><tt>const char* symbol_demangled_name ( struct general_symbol_info* gsymbol )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>ada_decode_symbol()  :  ada-lang.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>add_minsym_to_demangled_hash_table()  :  minsyms.c
<item>dump_msymbols()  :  symmisc.c
<item>dump_symtab_1()  :  symmisc.c
<item>find_oload_champ()  :  valops.c
<item>gnuv3_rtti_type()  :  gnu-v3-abi.c
<item>install_minimal_symbols()  :  minsyms.c
<item>lookup_minimal_symbol()  :  minsyms.c
<item>lookup_minimal_symbol_all()  :  minsyms.c
<item>print_partial_symbols()  :  symmisc.c
</itemize>
</descrip>

<sect1>Global Function symbol_init_demangled_name()

<p><tt>void symbol_init_demangled_name ( struct general_symbol_info* gsymbol, struct obstack* obstack )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>obsavestring()  :  symfile.c
<item>symbol_find_demangled_name()  :  symtab.c
<item>xfree()  :  utils.c
<item>strlen()
</itemize>
</descrip>

<sect1>Global Function symbol_init_language_specific()

<p><tt>void symbol_init_language_specific ( struct general_symbol_info* gsymbol, enum language language )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>__builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>add_psymbol_with_dem_name_to_list()  :  symfile.c
<item>enum_type()  :  dwarfread.c
<item>install_minimal_symbols()  :  minsyms.c
<item>prim_record_minimal_symbol_and_info()  :  minsyms.c
<item>synthesize_typedef()  :  dwarfread.c
<item>terminate_minimal_symbol_table()  :  objfiles.c
</itemize>
</descrip>

<sect1>Global Function symbol_natural_name()

<p><tt>const char* symbol_natural_name ( const struct general_symbol_info* gsymbol )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>ada_decode_symbol()  :  ada-lang.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>ada_evaluate_subexp()  :  ada-lang.c
<item>ada_print_subexp()  :  ada-lang.c
<item>ada_typedef_print()  :  ada-typeprint.c
<item>break_command_2()  :  breakpoint.c
<item>build_address_symbolic()  :  printcmd.c
<item>c_val_print()  :  c-valprint.c
<item>classes_info()  :  objc-lang.c
<item>compare_classes()  :  objc-lang.c
<item>compare_search_syms()  :  symtab.c
<item>compare_selectors()  :  objc-lang.c
<item>completion_list_objc_symbol()  :  symtab.c
<item>decode_line_2()  :  linespec.c
<item>decode_objc()  :  linespec.c
<item>define_symbol()  :  stabsread.c
<item>dwarf2_symbol_mark_computed()  :  dwarf2read.c
<item>dwarf2_tracepoint_var_ref()  :  dwarf2loc.c
<item>dwarf_expr_frame_base()  :  dwarf2loc.c
<item>find_function_start_sal()  :  symtab.c
<item>find_method()  :  linespec.c
<item>find_methods()  :  objc-lang.c
<item>finish_block()  :  buildsym.c
<item>frame_info()  :  stack.c
<item>gen_var_ref()  :  ax-gdb.c
<item>hand_function_call()  :  infcall.c
<item>jump_command()  :  infcmd.c
<item>locate_var_value()  :  findvar.c
<item>loclist_tracepoint_var_ref()  :  dwarf2loc.c
<item>lookup_partial_symbol()  :  symtab.c
<item>maintenance_cplus_namespace()  :  cp-namespace.c
<item>maintenance_translate_address()  :  maint.c
<item>make_file_symbol_completion_list()  :  symtab.c
<item>make_symbol_completion_list()  :  symtab.c
<item>objc_parse()  :  objc-exp.c
<item>overload_list_add_symbol()  :  cp-support.c
<item>pascal_val_print()  :  p-valprint.c
<item>print_block_frame_labels()  :  stack.c
<item>print_block_frame_locals()  :  stack.c
<item>print_frame()  :  stack.c
<item>print_frame_arg_vars()  :  stack.c
<item>print_frame_args()  :  stack.c
<item>print_msymbol_info()  :  symtab.c
<item>print_one_breakpoint()  :  breakpoint.c
<item>print_subexp_standard()  :  expprint.c
<item>print_symbol()  :  symmisc.c
<item>print_symbol_info()  :  symtab.c
<item>rbreak_command()  :  symtab.c
<item>resolve_subexp()  :  ada-lang.c
<item>return_command()  :  stack.c
<item>search_symbols()  :  symtab.c
<item>selectors_info()  :  objc-lang.c
<item>sym_info()  :  printcmd.c
<item>symbol_search_name()  :  symtab.c
<item>tracepoints_info()  :  tracepoint.c
<item>typedef_print()  :  typeprint.c
<item>user_select_syms()  :  ada-lang.c
<item>value_of_variable()  :  valops.c
</itemize>
</descrip>

<sect1>Global Function symbol_search_name()

<p><tt>const char* symbol_search_name ( const struct general_symbol_info* gsymbol )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>symbol_natural_name()  :  symtab.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>build_minimal_symbol_hash_tables()  :  minsyms.c
<item>compare_psymbols()  :  symfile.c
<item>insert_symbol_hashed()  :  dictionary.c
<item>iter_name_first_hashed()  :  dictionary.c
<item>iter_name_next_hashed()  :  dictionary.c
<item>iter_name_next_linear()  :  dictionary.c
<item>lookup_partial_symbol()  :  symtab.c
<item>new_symbol()  :  dwarf2read.c
</itemize>
</descrip>

<sect1>Global Function symbol_set_names()

<p><tt>void symbol_set_names ( struct general_symbol_info* gsymbol, const char* linkage_name, int len, struct objfile* objfile )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>create_demangled_names_hash()  :  symtab.c
<item>symbol_find_demangled_name()  :  symtab.c
<item>xfree()  :  utils.c
<item>__builtin___memcpy_chk(), __builtin_alloca(), __builtin_object_size(), __inline_memcpy_chk(), _obstack_newchunk(), htab_find_slot(), strlen()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>add_psymbol_to_list()  :  symfile.c
<item>check_one_possible_namespace_symbol()  :  cp-namespace.c
<item>define_symbol()  :  stabsread.c
<item>new_symbol()  :  mdebugread.c
<item>prim_record_minimal_symbol_and_info()  :  minsyms.c
<item>process_coff_symbol()  :  coffread.c
</itemize>
</descrip>

<sect1>Global Function symtab_clear_cached_lookup_values()

<p><tt>void symtab_clear_cached_lookup_values ( void )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Called by:</tag>
<itemize>
<item>free_objfile_internal()  :  objfiles.c
<item>print_frame()  :  stack.c
<item>remove_symbol_file_command()  :  symfile.c
<item>reopen_exec_file()  :  corefile.c
<item>replace_psymbols_with_correct_psymbols()  :  symfile.c
<item>reread_symbols_for_objfile()  :  symfile.c
<item>symbol_file_clear()  :  symfile.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>cached_block  :  symtab.c
<item>cached_blockvector  :  symtab.c
<item>cached_blockvector_index  :  symtab.c
<item>cached_mapped_section  :  symtab.c
<item>cached_overlay_section  :  symtab.c
<item>cached_pc_function  :  symtab.c
<item>cached_pc_line  :  symtab.c
<item>cached_psymtab  :  symtab.c
<item>cached_sect_section  :  symtab.c
<item>cached_symtab  :  symtab.c
<item>last_block_lookup_pc  :  symtab.c
<item>last_blockvector_lookup_pc  :  symtab.c
<item>last_function_lookup_pc  :  symtab.c
<item>last_mapped_section_lookup_pc  :  symtab.c
<item>last_overlay_section_lookup_pc  :  symtab.c
<item>last_pc_line_lookup_pc  :  symtab.c
<item>last_psymtab_lookup_pc  :  symtab.c
<item>last_sect_section_lookup_pc  :  symtab.c
<item>last_symtab_lookup_pc  :  symtab.c
</itemize>
</descrip>

<sect1>Global Function update_inlined_function_line_table_entry()

<p><tt>void update_inlined_function_line_table_entry ( CORE_ADDR start_pc, CORE_ADDR current_end_pc, CORE_ADDR proper_end_pc )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.h
</itemize>
<tag>Calls:</tag>
<itemize>
<item>find_pc_overlay()  :  symfile.c
<item>find_pc_sect_symtab()  :  symtab.c
<item>internal_error()  :  utils.c
<item>overlay_mapped_address()  :  symfile.c
<item>pc_in_unmapped_range()  :  symfile.c
</itemize>
</descrip>

<sect1>Local Function add_filename_to_list()

<p><tt>static void add_filename_to_list ( const char* fname, const char* text, const char* word, char*** list, int* list_used, int* list_alloced )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>xmalloc()  :  utils.c
<item>xrealloc()  :  utils.c
<item>__builtin___strcat_chk(), __builtin___strcpy_chk(), __builtin___strncpy_chk(), __builtin_object_size(), __inline_strcat_chk(), __inline_strcpy_chk(), __inline_strncpy_chk(), strlen()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>make_source_files_completion_list()  :  symtab.c
</itemize>
</descrip>

<sect1>Local Function add_partial_symtab_to_array()

<p><tt>static struct partial_symtab** add_partial_symtab_to_array ( struct partial_symtab** arr, void* sym, int* num_elem, int* max_num )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>xrealloc()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>lookup_partial_symtab_all()  :  symtab.c
</itemize>
</descrip>

<sect1>Local Function add_symtab_to_array()

<p><tt>static struct symtab** add_symtab_to_array ( struct symtab** arr, void* sym, int* num_elem, int* max_num )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>xrealloc()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>lookup_symtab_all()  :  symtab.c
</itemize>
</descrip>

<sect1>Local Function block_size()

<p><tt>static CORE_ADDR block_size ( struct block* bl )</tt><newline>
<descrip>
<tag>Called by:</tag>
<itemize>
<item>find_pc_sect_symtab()  :  symtab.c
</itemize>
</descrip>

<sect1>Local Function compare_search_syms()

<p><tt>static int compare_search_syms ( const void* sa, const void* sb )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>symbol_natural_name()  :  symtab.c
<item>strcmp()
</itemize>
<tag>Used in:</tag>
<itemize>
<item>sort_search_symbols()  :  symtab.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>demangle  :  utils.c
</itemize>
</descrip>

<sect1>Local Function completion_list_add_name()

<p><tt>static void completion_list_add_name ( const char* symname, const char* sym_text, int sym_text_len, const char* text, char* word )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>xmalloc()  :  utils.c
<item>xrealloc()  :  utils.c
<item>__builtin___strcat_chk(), __builtin___strcpy_chk(), __builtin___strncpy_chk(), __builtin_object_size(), __inline_strcat_chk(), __inline_strcpy_chk(), __inline_strncpy_chk(), strlen(), strncmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>completion_list_objc_symbol()  :  symtab.c
<item>make_file_symbol_completion_list()  :  symtab.c
<item>make_symbol_completion_list()  :  symtab.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>return_val  :  symtab.c
<item>return_val_index  :  symtab.c
<item>return_val_size  :  symtab.c
</itemize>
</descrip>

<sect1>Local Function completion_list_objc_symbol()

<p><tt>static void completion_list_objc_symbol ( struct minimal_symbol* msymbol, const char* sym_text, int sym_text_len, const char* text, char* word )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>completion_list_add_name()  :  symtab.c
<item>symbol_natural_name()  :  symtab.c
<item>xrealloc()  :  utils.c
<item>__builtin___memcpy_chk(), __builtin___strcpy_chk(), __builtin_object_size(), __inline_memcpy_chk(), __inline_strcpy_chk(), strchr(), strlen()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>make_symbol_completion_list()  :  symtab.c
</itemize>
</descrip>

<sect1>Local Function create_demangled_names_hash()

<p><tt>static void create_demangled_names_hash ( struct objfile* objfile )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>htab_create_alloc()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>symbol_set_names()  :  symtab.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>streq()  :  utils.c
<item>xcalloc()  :  utils.c
<item>xfree()  :  utils.c
<item>htab_hash_string()
</itemize>
</descrip>

<sect1>Local Function do_free_search_symbols_cleanup()

<p><tt>static void do_free_search_symbols_cleanup ( void* symbols )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>free_search_symbols()  :  symtab.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>make_cleanup_free_search_symbols()  :  symtab.c
</itemize>
</descrip>

<sect1>Local Function file_matches()

<p><tt>static int file_matches ( char* file, char* files[], int nfiles )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>lbasename(), strcmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>search_symbols()  :  symtab.c
</itemize>
</descrip>

<sect1>Local Function filename_seen()

<p><tt>static int filename_seen ( const char* file, int add, int* first )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>internal_error()  :  utils.c
<item>xmalloc()  :  utils.c
<item>xrealloc()  :  utils.c
<item>strcmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>make_source_files_completion_list()  :  symtab.c
<item>output_source_filename()  :  symtab.c
</itemize>
</descrip>

<sect1>Local Function find_line_common()

<p><tt>static int find_line_common ( struct linetable* l, int lineno, int* exact_match )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>find_line_symtab()  :  symtab.c
</itemize>
</descrip>

<sect1>Local Function find_main_name()

<p><tt>static void find_main_name ( void )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>ada_main_name()  :  ada-lang.c
<item>set_main_name()  :  symtab.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>main_name()  :  symtab.c
</itemize>
</descrip>

<sect1>Local Function fixup_section()

<p><tt>static void fixup_section ( struct general_symbol_info* ginfo, struct objfile* objfile )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fixup_section()  :  symtab.c
<item>lookup_minimal_symbol()  :  minsyms.c
<item>objfile_section_offset()  :  objfiles.c
<item>xfree()  :  utils.c
<item>xmalloc()  :  utils.c
<item>__builtin___snprintf_chk(), __builtin_object_size(), strlen()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>fixup_psymbol_section()  :  symtab.c
<item>fixup_section()  :  symtab.c
<item>fixup_symbol_section()  :  symtab.c
</itemize>
</descrip>

<sect1>Local Function functions_info()

<p><tt>static void functions_info ( const char* regexp, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>symtab_symbol_info()  :  symtab.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_symtab()  :  symtab.c
</itemize>
</descrip>

<sect1>Local Function language_search_unquoted_string()

<p><tt>static const char* language_search_unquoted_string ( const char* text, const char* p )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>isalnum()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>make_file_symbol_completion_list()  :  symtab.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_language  :  language.c
</itemize>
</descrip>

<sect1>Local Function lookup_equiv_partial_symbol()

<p><tt>static int lookup_equiv_partial_symbol ( struct partial_symtab* pst, const char* name )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>psym_name_match()  :  symtab.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>lookup_symbol_aux_psymtabs()  :  symtab.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>psym_equivalences  :  dwarf2read.c
</itemize>
</descrip>

<sect1>Local Function lookup_symbol_aux()

<p><tt>static struct symbol* lookup_symbol_aux ( const char* name, const char* linkage_name, const struct block* block, const domain_enum domain, int* is_a_field_of_this, struct symtab** in_symtab_ptr )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>block_global_block()  :  block.c
<item>check_field()  :  valops.c
<item>check_typedef()  :  gdbtypes.c
<item>is_ancestor_by_name()  :  gdbtypes.c
<item>lookup_symbol_aux_block()  :  symtab.c
<item>lookup_symbol_aux_local()  :  symtab.c
<item>lookup_symbol_aux_psymtabs()  :  symtab.c
<item>lookup_symbol_aux_symtabs()  :  symtab.c
<item>objfile_add_to_hitlist()  :  objfiles.c
<item>value_type()  :  value.c
<item>strcmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>lookup_symbol()  :  symtab.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_language  :  language.c
</itemize>
</descrip>

<sect1>Local Function lookup_symbol_aux_local()

<p><tt>static struct symbol* lookup_symbol_aux_local ( const char* name, const char* linkage_name, const struct block* block, const domain_enum domain, struct symtab** symtab )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>block_static_block()  :  block.c
<item>lookup_symbol_aux_block()  :  symtab.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>lookup_symbol_aux()  :  symtab.c
</itemize>
</descrip>

<sect1>Local Function lookup_symbol_aux_psymtabs()

<p><tt>static struct symbol* lookup_symbol_aux_psymtabs ( int block_index, const char* name, const char* linkage_name, const domain_enum domain, struct symtab** symtab, struct symbol_search** sym_list, int find_all_occurrences )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>complaint()  :  complaints.c
<item>fixup_symbol_section()  :  symtab.c
<item>internal_error()  :  utils.c
<item>lookup_block_symbol()  :  symtab.c
<item>lookup_block_symbol_all()  :  symtab.c
<item>lookup_equiv_partial_symbol()  :  symtab.c
<item>lookup_partial_symbol()  :  symtab.c
<item>objfile_get_first()  :  objfiles.c
<item>objfile_get_next()  :  objfiles.c
<item>printf_filtered()  :  utils.c
<item>psymtab_get_first()  :  objfiles.c
<item>psymtab_get_next()  :  objfiles.c
<item>psymtab_to_symtab()  :  symfile.c
<item>warning()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>lookup_symbol_all()  :  symtab.c
<item>lookup_symbol_aux()  :  symtab.c
<item>lookup_symbol_global()  :  symtab.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>info_verbose  :  top.c
<item>symfile_complaints  :  complaints.c
</itemize>
</descrip>

<sect1>Local Function lookup_symbol_aux_symtabs()

<p><tt>static struct symbol* lookup_symbol_aux_symtabs ( int block_index, const char* name, const char* linkage_name, const domain_enum domain, struct symtab** symtab, struct symbol_search** sym_list, int find_all_occurrences )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fixup_symbol_section()  :  symtab.c
<item>internal_error()  :  utils.c
<item>lookup_block_symbol()  :  symtab.c
<item>lookup_block_symbol_all()  :  symtab.c
<item>objfile_get_first()  :  objfiles.c
<item>objfile_get_next()  :  objfiles.c
<item>symtab_get_first()  :  objfiles.c
<item>symtab_get_next()  :  objfiles.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>lookup_symbol_all()  :  symtab.c
<item>lookup_symbol_aux()  :  symtab.c
<item>lookup_symbol_global()  :  symtab.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>block_found  :  symtab.c
</itemize>
</descrip>

<sect1>Local Function not_interesting_fname()

<p><tt>static int not_interesting_fname ( const char* fname )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>strcmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>make_source_files_completion_list()  :  symtab.c
</itemize>
</descrip>

<sect1>Local Function output_source_filename()

<p><tt>static void output_source_filename ( const char* name, int* first )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>filename_seen()  :  symtab.c
<item>fputs_filtered()  :  utils.c
<item>printf_filtered()  :  utils.c
<item>wrap_here()  :  utils.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>sources_info()  :  symtab.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>gdb_stdout  :  main.c
</itemize>
</descrip>

<sect1>Local Function print_msymbol_info()

<p><tt>static void print_msymbol_info ( struct minimal_symbol* msymbol )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>gdbarch_addr_bit()  :  gdbarch.c
<item>hex_string_custom()  :  utils.c
<item>printf_filtered()  :  utils.c
<item>symbol_natural_name()  :  symtab.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>symtab_symbol_info()  :  symtab.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>current_gdbarch  :  gdbarch.c
<item>demangle  :  utils.c
</itemize>
</descrip>

<sect1>Local Function print_symbol_info()

<p><tt>static void print_symbol_info ( domain_enum kind, struct symtab* s, struct symbol* sym, int block, char* last )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>fputs_filtered()  :  utils.c
<item>printf_filtered()  :  utils.c
<item>symbol_natural_name()  :  symtab.c
<item>type_print()  :  typeprint.c
<item>typedef_print()  :  typeprint.c
<item>strcmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>rbreak_command()  :  symtab.c
<item>symtab_symbol_info()  :  symtab.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>demangle  :  utils.c
<item>gdb_stdout  :  main.c
</itemize>
</descrip>

<sect1>Local Function rbreak_command()

<p><tt>static void rbreak_command ( const char* regexp, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>do_cleanups()  :  utils.c
<item>internal_error()  :  utils.c
<item>make_cleanup()  :  utils.c
<item>make_cleanup_free_search_symbols()  :  symtab.c
<item>print_symbol_info()  :  symtab.c
<item>printf_filtered()  :  utils.c
<item>rbr_break_command()  :  breakpoint.c
<item>search_symbols()  :  symtab.c
<item>symbol_natural_name()  :  symtab.c
<item>__builtin___strcat_chk(), __builtin___strcpy_chk(), __builtin_object_size(), __inline_strcat_chk(), __inline_strcpy_chk(), strlcat(), strlen(), strncmp()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>rbreak_command_wrapper()  :  symtab.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_symtab()  :  symtab.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>reset_allow_objc_selectors_flag()  :  linespec.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>allow_objc_selectors_flag  :  linespec.c
<item>demangle  :  utils.c
</itemize>
</descrip>

<sect1>Local Function skip_non_matching_bfd()

<p><tt>static int skip_non_matching_bfd ( asection* section, struct objfile* objfile )</tt><newline>
<descrip>
<tag>Called by:</tag>
<itemize>
<item>find_pc_sect_psymtab()  :  symtab.c
<item>find_pc_sect_symtab()  :  symtab.c
</itemize>
</descrip>

<sect1>Local Function sort_search_symbols()

<p><tt>static struct symbol_search* sort_search_symbols ( struct symbol_search* prevtail, int nfound )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>xfree()  :  utils.c
<item>xmalloc()  :  utils.c
<item>qsort()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>search_symbols()  :  symtab.c
</itemize>
<tag>References Functions:</tag>
<itemize>
<item>compare_search_syms()  :  symtab.c
</itemize>
</descrip>

<sect1>Local Function sources_info()

<p><tt>static void sources_info ( const char* ignore, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>error()  :  utils.c
<item>have_full_symbols()  :  objfiles.c
<item>have_partial_symbols()  :  objfiles.c
<item>objfile_get_first()  :  objfiles.c
<item>objfile_get_next()  :  objfiles.c
<item>output_source_filename()  :  symtab.c
<item>printf_filtered()  :  utils.c
<item>psymtab_get_first()  :  objfiles.c
<item>psymtab_get_next()  :  objfiles.c
<item>psymtab_to_fullname()  :  source.c
<item>symtab_get_first()  :  objfiles.c
<item>symtab_get_next()  :  objfiles.c
<item>symtab_to_fullname()  :  source.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_symtab()  :  symtab.c
</itemize>
</descrip>

<sect1>Local Function symbol_find_demangled_name()

<p><tt>static char* symbol_find_demangled_name ( struct general_symbol_info* gsymbol, const char* mangled )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>objc_demangle()  :  objc-lang.c
<item>objcplus_demangle()  :  objc-lang.c
<item>cplus_demangle()
</itemize>
<tag>Called by:</tag>
<itemize>
<item>symbol_init_demangled_name()  :  symtab.c
<item>symbol_set_names()  :  symtab.c
</itemize>
</descrip>

<sect1>Local Function symtab_observer_executable_changed()

<p><tt>static void symtab_observer_executable_changed ( void* unused )</tt><newline>
<descrip>
<tag>Calls:</tag>
<itemize>
<item>set_main_name()  :  symtab.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_symtab()  :  symtab.c
</itemize>
</descrip>

<sect1>Local Function symtab_symbol_info()

<p><tt>static void symtab_symbol_info ( const char* regexp, domain_enum kind, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>do_cleanups()  :  utils.c
<item>make_cleanup_free_search_symbols()  :  symtab.c
<item>print_msymbol_info()  :  symtab.c
<item>print_symbol_info()  :  symtab.c
<item>printf_filtered()  :  utils.c
<item>quit()  :  utils.c
<item>search_symbols()  :  symtab.c
</itemize>
<tag>Called by:</tag>
<itemize>
<item>functions_info()  :  symtab.c
<item>types_info()  :  symtab.c
<item>variables_info()  :  symtab.c
</itemize>
<tag>References Variables:</tag>
<itemize>
<item>quit_flag  :  utils.c
</itemize>
</descrip>

<sect1>Local Function types_info()

<p><tt>static void types_info ( const char* regexp, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>symtab_symbol_info()  :  symtab.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_symtab()  :  symtab.c
</itemize>
</descrip>

<sect1>Local Function variables_info()

<p><tt>static void variables_info ( const char* regexp, int from_tty )</tt><newline>
<descrip>
<tag>Prototyped in:</tag>
<itemize>
<item>symtab.c
</itemize>
<tag>Calls:</tag>
<itemize>
<item>symtab_symbol_info()  :  symtab.c
</itemize>
<tag>Used in:</tag>
<itemize>
<item>_initialize_symtab()  :  symtab.c
</itemize>
</descrip>

</article>
