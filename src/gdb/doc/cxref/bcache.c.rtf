{\rtf\ansi
\deff0
{\fonttbl
{\f0\froman Times New Roman;}
{\f1\fmodern Courier New;}
}
{\stylesheet
{\s0\f0\fs24 Normal;}
{\s1\f0\fs40\b\sb400\sa200\keepn\keep Heading 1;}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Heading 2;}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Heading 3;}
{\s4\f0\fs24\b\sb100\sa50\keepn\keep Heading 4;}
{\s5\f1\fs20\ql\sb50\sa50 Code;}
}
{\info{\comment
 This RTF file generated by cxref (version 1.6e).
 cxref program (c) Andrew M. Bishop 1995-2014.
 Cxref: cxref -Odoc/cxref -Ngdb.cxref -R. -xref -I. -Imacosx -I. -I. -I./config -I./target -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I./../include/opcode -I./../readline/.. -I../bfd -I./../bfd -I./../include -I../intl -I./../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -warn-xref -U__BLOCKS__ -index -latex -html -rtf -sgml -raw -no-comments -DRUNNING_CXREF bcache.c
 CPP  : cxref-cpp -lang-c -C -dD -dI -I. -Imacosx -I. -I. -Iconfig -Itarget -DHAVE_CONFIG_H -DHAVE_SYS_TYPES_H -DLOCALEDIR="/usr/local/share/locale" -I../include/opcode -I.. -I../bfd -I../bfd -I../include -I../intl -I../intl -I/opt/local/include/libxml2 -D__MigTypeCheck=1 -D__DARWIN_UNIX03=1 -DS_SPLINT_S -U__BLOCKS__ -DRUNNING_CXREF
}}
\paperw11880\paperh16848\margl1440\margr1440\margt1440\margb1440
\sectd\plain
\s0\f0\fs24
{\s1\f0\fs40\b\sb400\sa200\keepn\keep File bcache.c\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Included Files\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <time.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <sys/types.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <errno.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <regex.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <unistd.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_locale.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <locale.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../gdb/signals.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/libiberty.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdarg.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../bfd/bfd.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/symcat.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <../intl/libintl.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "ui-file.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <stdio.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "xm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/xm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <signal.h>\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include <limits.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "nm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/i386/nm-i386.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/nm-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "tm.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "config/tm-macosx.h"\par}
			{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/macosx-tdep.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "defs.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-tdep.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/i386-macosx-thread-status.h"\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <stdint.h>\par}
						{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_types.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include "symtab.h"\par}
					{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <inttypes.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/mach_vm.h>\par}
				{\s5\f1\fs20\ql\sb50\sa50 #include <mach/kmod.h>\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "macosx/tm-i386-macosx.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/fopen-bin.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <stdlib.h>\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "gdbarch.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_obstack.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/obstack.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
		{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "bcache.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include "../include/ansidecl.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_string.h"\par}
	{\s5\f1\fs20\ql\sb50\sa50 #include <string.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include "gdb_assert.h"\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <stddef.h>\par}
{\s5\f1\fs20\ql\sb50\sa50 #include <stdlib.h>\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Preprocessor definitions\par}
{\s5\f1\fs20\ql\sb50\sa50 #define CHAIN_LENGTH_THRESHOLD 5\par}
{\s5\f1\fs20\ql\sb50\sa50 #define BSTRING_SIZE( n )\par}
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Type definitions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct bstring\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct bstring}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct bstring* next;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 unsigned short length;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 unsigned short half_hash;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 union}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
		{\s5\f1\fs20\ql\sb50\sa50 char data[1];}\cell\cell\row
		{\s5\f1\fs20\ql\sb50\sa50 double dummy;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 d;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Type struct bcache\par}
\trowd\trgaph120\cellx2880\cellx9000
\intbl\plain
{\s5\f1\fs20\ql\sb50\sa50 struct bcache}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \{}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct obstack cache;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 void* pool;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 unsigned int num_buckets;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 struct bstring** bucket;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 unsigned long unique_count;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 long total_count;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 long unique_size;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 long total_size;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 long structure_size;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 unsigned long expand_count;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 unsigned long expand_hash_count;}\cell\cell\row
	{\s5\f1\fs20\ql\sb50\sa50 unsigned long half_hash_miss_count;}\cell\cell\row
{\s5\f1\fs20\ql\sb50\sa50 \}}\cell\cell\row
\intbl0
{\s2\f0\fs32\b\sb200\sa100\keepn\keep Functions\par}
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function bcache()\par}
{\s5\f1\fs20\ql\sb50\sa50 const void* bcache ( const void* addr, int length, struct bcache* bcache )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell bcache.h\cell\cell\row
Calls: \cell bcache_data()\cell bcache.c\cell\row
Called by:\cell macro_bcache()\cell macrotab.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function bcache_memory_used()\par}
{\s5\f1\fs20\ql\sb50\sa50 int bcache_memory_used ( struct bcache* bcache )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell bcache.h\cell\cell\row
Calls: \cell  _obstack_memory_used()\cell\cell\row
Called by:\cell print_objfile_statistics()\cell symmisc.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function bcache_specify_allocation()\par}
{\s5\f1\fs20\ql\sb50\sa50 void bcache_specify_allocation ( struct bcache* b, void* (*alloc)(size_t), void (*free_f)(void*) )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell bcache.h\cell\cell\row
Calls: \cell  _obstack_begin()\cell\cell\row
Called by:\cell create_objfile_using_objfile()\cell objfiles.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function bcache_specify_allocation_with_arg()\par}
{\s5\f1\fs20\ql\sb50\sa50 void bcache_specify_allocation_with_arg ( struct bcache* b, void* (*alloc)(void*,size_t), void (*free_f)(void*,void*), void* arg )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell bcache.h\cell\cell\row
Calls: \cell  _obstack_begin_1()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function bcache_xfree()\par}
{\s5\f1\fs20\ql\sb50\sa50 void bcache_xfree ( struct bcache* bcache )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell bcache.h\cell\cell\row
Calls: \cell xmfree()\cell utils.c\cell\row
Called by:\cell free_objfile_internal()\cell objfiles.c\cell\row
\cell reread_symbols_for_objfile()\cell symfile.c\cell\row
Refs Func:\cell  obstack_free()\cell\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function bcache_xmalloc()\par}
{\s5\f1\fs20\ql\sb50\sa50 struct bcache* bcache_xmalloc ( void* pool )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell bcache.h\cell\cell\row
Calls: \cell xmcalloc()\cell utils.c\cell\row
\cell  _obstack_begin_1()\cell\cell\row
Called by:\cell create_objfile_using_objfile()\cell objfiles.c\cell\row
\cell reread_symbols_for_objfile()\cell symfile.c\cell\row
Refs Func:\cell xmfree()\cell utils.c\cell\row
\cell xmmalloc()\cell utils.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function deprecated_bcache()\par}
{\s5\f1\fs20\ql\sb50\sa50 void* deprecated_bcache ( const void* addr, int length, struct bcache* bcache )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell bcache.h\cell\cell\row
Calls: \cell bcache_data()\cell bcache.c\cell\row
Called by:\cell add_psymbol_to_list()\cell symfile.c\cell\row
\cell add_psymbol_with_dem_name_to_list()\cell symfile.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function hash()\par}
{\s5\f1\fs20\ql\sb50\sa50 unsigned long hash ( const void* addr, int length )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell bcache.h\cell\cell\row
Called by:\cell bcache_data()\cell bcache.c\cell\row
\cell expand_hash_table()\cell bcache.c\cell\row
\cell hashname()\cell buildsym.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Global Function print_bcache_statistics()\par}
{\s5\f1\fs20\ql\sb50\sa50 void print_bcache_statistics ( struct bcache* c, const char* type )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Prototype:\cell bcache.h\cell\cell\row
Calls: \cell internal_error()\cell utils.c\cell\row
\cell print_percentage()\cell bcache.c\cell\row
\cell printf_filtered()\cell utils.c\cell\row
\cell xcalloc()\cell utils.c\cell\row
\cell xfree()\cell utils.c\cell\row
\cell  qsort()\cell\cell\row
Called by:\cell print_symbol_bcache_statistics()\cell symmisc.c\cell\row
Refs Func:\cell compare_ints()\cell bcache.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function bcache_data()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void* bcache_data ( const void* addr, int length, struct bcache* bcache )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell expand_hash_table()\cell bcache.c\cell\row
\cell hash()\cell bcache.c\cell\row
\cell  __builtin___memcpy_chk(), __builtin_object_size(), __inline_memcpy_chk(), _obstack_newchunk(), memcmp()\cell\cell\row
Called by:\cell bcache()\cell bcache.c\cell\row
\cell deprecated_bcache()\cell bcache.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function compare_ints()\par}
{\s5\f1\fs20\ql\sb50\sa50 static int compare_ints ( const void* ap, const void* bp )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Used in:\cell print_bcache_statistics()\cell bcache.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function expand_hash_table()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void expand_hash_table ( struct bcache* bcache )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell hash()\cell bcache.c\cell\row
\cell xmfree()\cell utils.c\cell\row
\cell xmmalloc()\cell utils.c\cell\row
\cell  __builtin___memset_chk(), __builtin_object_size(), __inline_memset_chk()\cell\cell\row
Called by:\cell bcache_data()\cell bcache.c\cell\row
\intbl0
{\s3\f0\fs28\b\sb100\sa100\keepn\keep Local Function print_percentage()\par}
{\s5\f1\fs20\ql\sb50\sa50 static void print_percentage ( int portion, int total )\par}
\trowd\trgaph120\cellx1440\cellx5220\cellx9000
\intbl\plain
Calls: \cell printf_filtered()\cell utils.c\cell\row
Called by:\cell print_bcache_statistics()\cell bcache.c\cell\row
\intbl0
}
