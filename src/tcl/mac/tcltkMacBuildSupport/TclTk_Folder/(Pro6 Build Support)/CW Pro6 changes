The following bugs in the standard CW Pro 6.3 install need to be fixed beforebeing able to build Mac Tcl/Tk 8.4 with CW Pro6:- apply the patch "(Pro6 Build Support):SIOUX.patch" to the file	MSL:MSL_C:MSL_MacOS:Src:SIOUX.c(this patch includes the changes that are needed  to build with UniversalInterfaces3.4.2, c.f. below)- in	MSL:MSL_C:MSL_MacOS:Include:time.mac.hchange the '#define _mac_msl_epoch_offset_' line to	#define _mac_msl_epoch_offset_  (-((365L * 66L) + 17) * 24L * 60L * 60L)(this is an error fixed in Pro7, it causes utime and stat to report wrong time values)- in	MSL:MSL_C:MSL_MacOS:Src:time.cin the function __get_time() change the -= to read += i.e.	time += _mac_msl_epoch_offset_;(consequence of the fix above, also in Pro7)- in	MSL:MSL_C:MSL_Common:Include:unistd.hchange the '#define X_OK' line to the correct	#define X_OK	1(fixed in Pro7)- optional (but recommended): in	MSL:MSL_C:MSL_Common:Src:printf.creplace the two lines	#define conversion_buff_size	512	#define conversion_max			509by the lines	#define conversion_buff_size	1024	#define conversion_max			1021note that this doubles stack memory usage of printf and friends from 512b to 1kb- optional: in	MacOS Support:Libraries:Runtime:Runtime PPC:(Projects):MW_MSL.Shlb.mcpenable	C/C++ Lang->{AutoInline,DeferredInlining,PoolStrings}- rebuild all libraries using the "Build All" target of project	MSL:(MSL_Build_Projects):68K_and_PPC:Build.MacOS.mcp(but before see below for changes that may be needed with UniversalInterfaces3.4)- in	MacOS Support:Libraries:MacOS 68K:MathLib68K:(Projects):MathLibCFM68K.MTarg.mcpenable	CFM68k->ForceIndirectAccessfor both targets and rebuild----If you use recent UniversalInterfaces from Apple you may also have to applysome or all of the following changes:----When using UniversalInterfaces3.4.2.img available fromApple, I had to change the following to get the"Build All" target of project Build.MacOS.mcpto build without errors:CGlue.c:   * change the line   Boolean lclick(Point *pt, short modifiers, ListHandle lHandle)   to   Boolean lclick(Point *pt, EventModifiers modifiers, ListHandle lHandle)PLStringFuncsGlue.mcp:   * add {Compiler}:MSL to AccessPaths->SystemPaths in all targetsfp68k_glue.c:   * Add the following lines to the top of this file:   #include <ConditionalMacros.h>   #undef TYPE_LONGDOUBLE_IS_DOUBLE   #define TYPE_LONGDOUBLE_IS_DOUBLE 0SIOUX.c:(note that SIOUX.patch already includes these changes, c.f. above)   * change all occurrences of   NewAEEventHandlerProc(   to   NewAEEventHandlerUPP(   * change all occurrences of   UInt32 refCon   to   long refConSIOUXWindows.c:   * change all occurrences of   NewControlActionProc   to   NewControlActionUPPUTBAccessors.h:   * comment out the lines defining   GetWindowPortBounds   GetWindowList   GetWindowFromPortLModelDirector.cp   * change all occurrences of   NewAEEventHandlerProc(   NewOSLAccessorProc(   NewOSLCompareProc(   NewOSLCountProc(   NewOSLDisposeTokenProc(   to   NewAEEventHandlerUPP((AEEventHandlerProcPtr)   NewOSLAccessorUPP(   NewOSLCompareUPP(   NewOSLCountUPP(   NewOSLDisposeTokenUPP(LAMControlImp.cp   * change the line	SInt32	result = ::SendControlMessage(mMacControlH, kControlMsgFocus, inFocusPart);   to	SInt32	result = ::SendControlMessage(mMacControlH, kControlMsgFocus, (void*)inFocusPart);LAMPopupButtonImp.cpLEditText.cp   * change all occurrences of   NewQDTextProc(   NewQDTxMeasProc(   to   NewQDTextUPP((QDTextProcPtr)   NewQDTxMeasUPP((QDTxMeasProcPtr)