# Mappings from configurations to GDB target definitions.  This is
# invoked from the autoconf generated configure script.

# This file sets the following shell variables:
#  gdb_target_cpu	generic name of CPU
#  gdb_target		name of GDB target definition to use

# Map target cpu into the config cpu subdirectory name.
# The default is ${target_cpu}.

case "${target_cpu}" in

alpha*)			gdb_target_cpu=alpha ;;
am33_2.0*)              gdb_target_cpu=mn10300 ;;
arm*)			gdb_target_cpu=arm ;;
avr*)			gdb_target_cpu=avr ;;
hppa*)			gdb_target_cpu=pa ;;
fido*)                  gdb_target_cpu=m68k ;;
i[34567]86*)		gdb_target_cpu=i386 ;;
m68hc11*|m6811*)	gdb_target_cpu=m68hc11 ;;
m68*)			gdb_target_cpu=m68k ;;
m88*)			gdb_target_cpu=m88k ;;
mips*)			gdb_target_cpu=mips ;;
powerpc* | rs6000)      gdb_target_cpu=powerpc ;;
sparc*)			gdb_target_cpu=sparc ;;
thumb*)			gdb_target_cpu=arm ;;
s390*)			gdb_target_cpu=s390 ;;
score*)                 gdb_target_cpu=score ;;
sh*)			gdb_target_cpu=sh ;;
spu*)                   gdb_target_cpu=spu ;;
strongarm*)		gdb_target_cpu=arm ;;
xscale*)		gdb_target_cpu=arm ;;
v850*)			gdb_target_cpu=v850 ;;
x86_64*)		gdb_target_cpu=i386 ;;
xtensa*)                gdb_target_cpu=xtensa ;;
*)			gdb_target_cpu=${target_cpu} ;;

esac

# map target info into gdb names.
# APPLE LOCAL Darwin

case "${target}" in

*-*-nextstep*)		gdb_target=nextstep ;;
*-apple-rhapsody*)	gdb_target=rhapsody ;;
*-apple-macos10*)	gdb_target=macosx ;;
*-apple-darwin*)	gdb_target=macosx ;;

x86_64-*-freebsd* | x86_64-*-kfreebsd*-gnu)
			gdb_target=fbsd64 ;;
*-*-freebsd* | *-*-kfreebsd*-gnu)
			gdb_target=fbsd	;;

a29k-*-aout*)		gdb_target=a29k ;;
a29k-*-coff*)		gdb_target=a29k ;;
a29k-*-elf*)		gdb_target=a29k ;;
a29k-*-ebmon*)		gdb_target=a29k ;;
a29k-*-kern*)		gdb_target=a29k-kern ;;
a29k-*-none*)		gdb_target=a29k ;;
a29k-*-udi*)		gdb_target=a29k-udi ;;
a29k-*-vxworks*)        gdb_target=vx29k ;;

aarch64-*-linux*)	gdb_target=linux ;;
aarch64-*-darwin*)	gdb_target=macosx ;;
aarch64-*-*)		gdb_target=embed ;;

alpha*-*-osf*)		gdb_target=alpha-osf1 ;;
alpha*-*-linux*)	gdb_target=alpha-linux ;;
alpha*-*-freebsd* | alpha*-*-kfreebsd*-gnu)
			gdb_target=fbsd ;;
alpha*-*-netbsd* | alpha*-*-knetbsd*-gnu)
			gdb_target=nbsd ;;
alpha*-*-openbsd*)	gdb_target=nbsd ;;
alpha*-*-*)		gdb_target=alpha ;;

# mn10300 / am33 Linux:
am33_2.0*-*-linux*)	gdb_target=linux ;;

arc-*-*)		gdb_target=arc ;;

arm*-wince-pe | arm*-*-mingw32ce*)
			gdb_target=wince
			build_gdbserver=yes
			configdirs="${configdirs} gdbserver"
			;;
arm*-*-linux*)		gdb_target=linux
			build_gdbserver=yes
			configdirs="${configdirs} gdbserver"
			;;
arm*-*-netbsd* | arm*-*-knetbsd*-gnu)
			gdb_target=nbsd ;;
arm-*-nto*)		gdb_target=nto ;;
arm*-*-openbsd*)	gdb_target=nbsd ;;
arm*-*-* | thumb*-*-* | strongarm*-*-* | xscale-*-*)
			gdb_target=embed
			build_rdi_share=yes
                        configdirs="${configdirs} rdi-share"
                        gdb_sim=../sim/arm/libsim.a
                        ;;
xscale-*-*)		gdb_target=embed
			build_rdi_share=yes
                        configdirs="${configdirs} rdi-share"
                        ;;

avr-*-*)		gdb_target=avr 
			# There is no simulator provided with gdb (yet).
			# See <http://savannah.gnu.org/projects/simulavr/>
			# for the simulator used during development of avr
			# support for gdb.
			# Actually never mind:
			gdb_sim=../sim/avr/libsim.a
			;;

c30-*-*)		gdb_target=c30 ;;

cris*-*-*)		gdb_target=cris ;;

d10v-*-*)		gdb_target=d10v ;;
d30v-*-*)		gdb_target=d30v ;;

frv-*-*)		gdb_target=frv
			gdb_sim=../sim/frv/libsim.a
			;;

moxie-*-elf)		gdb_target=moxie
			# This should work once the moxie sim is committed:
			gdb_sim=../sim/moxie/libsim.a
			;;

h8300-*-*)		gdb_target=h8300
			gdb_sim=../sim/h8300/libsim.a
			;;
h8500-*-*)		gdb_target=h8500 ;;

fr30-*-elf*)		gdb_target=fr30 ;;

hppa*-*pdo-hpux11.0*)	gdb_target=pdo1100 ;;
hppa*-*pdo-hpux*)	gdb_target=pdo1020 ;;
hppa*-*-bsd*)		gdb_target=hppabsd
			build_gdbserver=yes
			configdirs="${configdirs} gdbserver"
			;;
hppa*-*-pro*)		gdb_target=hppapro ;;

hppa*64*-*-hpux11*)	gdb_target=hppa64 ;;
hppa*-*-hpux*)		gdb_target=hppahpux ;;
hppa*-*-hiux*)		gdb_target=hppahpux ;;
hppa*-*-linux*)		gdb_target=linux ;;
hppa*-*-openbsd*)	gdb_target=obsd ;;
hppa*-*-osf*)		gdb_target=hppaosf
			build_gdbserver=yes
			configdirs="${configdirs} gdbserver"
			;;
hppa*-*-*)		gdb_target=hppa ;;

i[3456]86-sequent-bsd*)	gdb_target=symmetry ;;
i[3456]86-sequent-sysv4*) gdb_target=ptx4 ;;
i[3456]86-sequent-sysv*) gdb_target=ptx ;;
i[34567]86-ncr-*)	gdb_target=ncr3000 ;;
i[3456]86-*-aout*)	gdb_target=embed ;;
i[3456]86-*-coff*)	gdb_target=embed ;;
i[3456]86-*-elf*)	gdb_target=embed ;;
i[3456]86-*-aix*)	gdb_target=i386aix ;;
i[3456]86-*-bsd*)	gdb_target=i386bsd ;;
i[34567]86-*-darwin* | x86_64-*-darwin*)
#FIXME: move x86_64 to a separate entry, as per commit 5cd226f to FSF gdb
# on 2009-07-03...
			gdb_target=darwin ;;
i[34567]86-*-dicos*)	gdb_target=i386dicos ;;
i[34567]86-*-freebsd* | i[34567]86-*-kfreebsd*-gnu)
			gdb_target=fbsd ;;
i[3456]86-*-netbsdelf*)	gdb_target=nbsdelf
			build_gdbserver=yes
			configdirs="${configdirs} gdbserver"
			;;
i[34567]86-*-netbsd* | i[34567]86-*-knetbsd*-gnu)
			gdb_target=nbsd
			build_gdbserver=yes
			configdirs="${configdirs} gdbserver"
			;;
i[3456]86-*-os9k)	gdb_target=i386os9k ;;
i[3456]86-*-go32*)	gdb_target=i386aout ;;
i[3456]86-*-msdosdjgpp*) gdb_target=go32 ;;
i[34567]86-*-lynxos*)	gdb_target=i386lynx
			build_gdbserver=yes
			configdirs="${configdirs} gdbserver"
			;;
i[34567]86-*-openbsd*)	gdb_target=obsd ;;
i[34567]86-*-nto*)	gdb_target=nto ;;
i[34567]86-*-solaris2.1[0-9]* | x86_64-*-solaris2*)
			gdb_target=sol2-64 ;;
i[34567]86-*-solaris*)	gdb_target=i386sol2 ;;
i[3456]86-*-sunos*)	gdb_target=sun386 ;;
i[3456]86-*-sysv4.2*)	gdb_target=i386v42mp ;;
i[3456]86-*-sysv4*)	gdb_target=i386v4 ;;
i[3456]86-*-sysv5*)	gdb_target=i386v42mp ;;
i[3456]86-*-unixware2*)	gdb_target=i386v42mp ;;
i[3456]86-*-unixware*)	gdb_target=i386v4 ;;
i[3456]86-*-sco3.2v4*)	gdb_target=i386sco4 ;;
i[3456]86-*-sco3.2v5*)	gdb_target=i386sco5 ;;
i[3456]86-*-sco*)	gdb_target=i386v ;;
i[3456]86-*-sysv*)	gdb_target=i386v ;;
i[34567]86-*-linux*)	gdb_target=linux
			if test "x${enable_64_bit_bfd}" = "xyes"; then
			    gdb_target=linux64
			fi
			build_gdbserver=yes
			configdirs="${configdirs} gdbserver"
			;;
i[3456]86-pc-linux-gnu)	gdb_target=linux
			build_gdbserver=yes
			configdirs="${configdirs} gdbserver"
			;;
i[3456]86-*-isc*)	gdb_target=i386v ;;
i[3456]86-*-mach3*)	gdb_target=i386m3 ;;
i[34567]86-*-gnu*)	gdb_target=i386gnu ;;
i[34567]86-*-netware*)	gdb_target=i386
			build_nlm=yes
			configdirs="${configdirs} nlm"
			;;
i[3456]86-*-osf1mk*)	gdb_target=i386mk ;;
i[34567]86-*-cygwin*)	gdb_target=cygwin
			build_gdbserver=yes
			configdirs="${configdirs} gdbserver"
			;;
i[34567]86-*-mingw32*)	gdb_target=mingw
			build_gdbserver=yes
			configdirs="${configdirs} gdbserver"
			;;
i[67]86-*-mingw64* | x86_64-*-mingw64*)
			gdb_target=mingw64
			build_gdbserver=yes
			configdirs="${configdirs} gdbserver"
			;;
i[3456]86-*-pe*)	gdb_target=embed  ;;
i[3456]86-*-vxworks*)	gdb_target=vxworks ;;
i[34567]86-*-*)		gdb_target=i386 ;;

i960-*-bout*)		gdb_target=vxworks960 ;;
i960-nindy-coff*)	gdb_target=nindy960 ;;
i960-*-coff*)		gdb_target=mon960 ;;
i960-nindy-elf*)	gdb_target=nindy960 ;;
i960-*-elf*)		gdb_target=mon960 ;;
i960-*-nindy*)		gdb_target=nindy960 ;;
i960-*-vxworks*)	gdb_target=vxworks960 ;;

ia64-*-aix*)		gdb_target=aix ;;
ia64-*-linux*)		gdb_target=linux
			build_gdbserver=yes
			configdirs="${configdirs} gdbserver"
			;;
ia64*-*-*)		gdb_target=ia64 ;;

iq2000-*-*)		gdb_target=iq2000 ;;

lm32-*-*)      		gdb_target=lm32
			gdb_sim=../sim/lm32/libsim.a
			;;

m32c-*-*)		gdb_target=m32c
			# There may also be a SID/CGEN simulator for this,
			# but we do have DJ Delorie's mini-sim.
			gdb_sim=../sim/m32c/libsim.a
			;;

m32r*-*-linux*)		gdb_target=linux
			gdb_sim=../sim/m32r/libsim.a
			build_gdbserver=yes
			configdirs="${configdirs} gdbserver"
			;;
m32r-*-elf*)		gdb_target=m32r ;;
m32r*-*-*)		gdb_target=m32r
			gdb_sim=../sim/m32r/libsim.a
			;;

m68hc11*-*-*|m6811*-*-*) gdb_target=m68hc11
			gdb_sim=../sim/m68hc11/libsim.a
			;;

m68000-*-sunos3*)	gdb_target=sun2os3 ;;
m68000-*-sunos4*)	gdb_target=sun2os4 ;;

# "fido" is actually a variant on m68*:
fido-*-elf*)		gdb_target=monitor ;;
m68*-apollo*-bsd*)	gdb_target=apollo68b ;;
m68*-apple-aux*)	gdb_target=aux ;;
m68*-bull-sysv*)	gdb_target=dpx2 ;;
m68*-hp-bsd*)		gdb_target=hp300bsd ;;
m68*-hp-hpux*)		gdb_target=hp300hpux ;;
m68*-att-*)		gdb_target=3b1 ;;
m68*-cisco*-*)		gdb_target=cisco ;;
m68*-ericsson-*)	gdb_target=es1800 ;;
m68*-isi-*)		gdb_target=isi ;;
m68*-motorola-*)	gdb_target=delta68 ;;
m68*-netx-*)		gdb_target=vxworks68 ;;
m68*-sony-*)		gdb_target=news ;;
m68*-tandem-*)		gdb_target=st2000 ;;
m68*-rom68k-*)          gdb_target=monitor ;;
m68*-*bug-*)            gdb_target=monitor ;;
m68*-monitor-*)         gdb_target=monitor ;;
m68*-est-*)		gdb_target=monitor ;;
m68*-*-aout*)		gdb_target=monitor ;;
m68*-*-coff*)		gdb_target=monitor ;;
m68*-*-elf*)		gdb_target=monitor ;;
m68*-*-rtems*)		gdb_target=monitor ;;
m68*-*-linux*)		gdb_target=linux
			build_gdbserver=yes
			configdirs="${configdirs} gdbserver"
			;;
m68*-*-lynxos*)		gdb_target=m68klynx
			build_gdbserver=yes
			configdirs="${configdirs} gdbserver"
			;;
m68*-*-macos*)		gdb_target=macos ;;
m68*-*-netbsd* | m68*-*-knetbsd*-gnu)
			gdb_target=nbsd ;;
m68*-*-openbsd*)	gdb_target=obsd ;;
m68*-*-os68k*)		gdb_target=os68k ;;
m68*-*-sunos3*)		gdb_target=sun3os3 ;;
m68*-*-sunos4*)		gdb_target=sun3os4
			build_gdbserver=yes
			configdirs="${configdirs} gdbserver"
			;;
m68*-*-sysv4*)		gdb_target=m68kv4 ;;
m68*-*-uclinux*)	gdb_target=monitor ;;
m68*-*-vxworks*)	gdb_target=vxworks68 ;;

m88*-*-cxux*)		gdb_target=cxux ;;
m88*-motorola-sysv4*)	gdb_target=delta88v4 ;;
m88*-motorola-*)	gdb_target=delta88 ;;
m88*-*-openbsd*)	gdb_target=obsd ;;
m88*-*-*)		gdb_target=m88k ;;

mcore*-*-*)		gdb_target=mcore ;;

mep-*-*)		gdb_target=mep ;;

mips64*-big-*)		gdb_target=bigmips64 ;;
mips*-big-*)		gdb_target=bigmips ;;
mips*-dec-mach3*)	gdb_target=mach3 ;;
mips*-dec-*)		gdb_target=decstation ;;
mips*-*-pe)		gdb_target=wince ;;
mips64*el-*-ecoff*)	gdb_target=embedl64 ;;
mips64*-*-ecoff*)	gdb_target=embed64 ;;
mips64*vr4xxx*el-*-elf*)gdb_target=vr4xxxel ;;
mips64*vr4xxx*-*-elf*)	gdb_target=vr4xxx ;;
mips64*vr4300*el-*-elf*) gdb_target=vr4300el ;;
mips64*vr4300*-*-elf*)	gdb_target=vr4300 ;;
mips64*vr4100*el-*-elf*) gdb_target=vr4300el ;;
mips64*vr4100*-*-elf*)	gdb_target=vr4100 ;;
mips64*vr5000*el-*-elf*) gdb_target=vr5000el ;;
mips64*vr5000*-*-elf*)	gdb_target=vr5000
			build_gdbserver=yes
			configdirs="${configdirs} gdbserver"
			;;
mips*tx39*el*-elf*)	gdb_target=tx39l ;;
mips*tx39*-elf*)	gdb_target=tx39 ;;
mips64*el-*-elf*)	gdb_target=embedl64 ;;
mips64*-*-elf*)		gdb_target=embed64 ;;
mips*el-*-ecoff*)	gdb_target=embedl ;;
mips*-*-ecoff*)		gdb_target=embed ;;
mips*el-*-elf*)		gdb_target=embedl ;;
mips*-*-elf*)		gdb_target=embed ;;
mips*-little-*)		gdb_target=littlemips ;;
mips*-*-lnews*)		gdb_target=embedl ;;
mips*-sgi-irix5*)	gdb_target=irix5 ;;
mips*-sgi-irix6*)	gdb_target=irix6 ;;
mips*-sgi-*)		gdb_target=irix3 ;;
mips*-sony-*)		gdb_target=bigmips ;;
mips*-*-linux*)		gdb_target=linux
			gdb_sim=../sim/mips/libsim.a
			build_gdbserver=yes
			configdirs="${configdirs} gdbserver"
			;;
mips*-*-mach3*)		gdb_target=mipsm3 ;;
mips*-*-netbsd* | mips*-*-knetbsd*-gnu)
			gdb_target=nbsd 
			gdb_sim=../sim/mips/libsim.a
			;;
mips64*-*-openbsd*)	gdb_target=obsd64 ;;
mips*-*-sysv4*)		gdb_target=mipsv4 ;;
mips*-*-sysv*)		gdb_target=bigmips ;;
mips*-*-riscos*)	gdb_target=bigmips ;;
mips*-*-vxworks*)       gdb_target=vxmips ;;
mips*-*-*)		gdb_target=embed  
			gdb_sim=../sim/mips/libsim.a
			;;

mn10200-*-*)		gdb_target=mn10200 ;;

mn10300-*-linux*)	gdb_target=linux
			gdb_sim=../sim/mn10300/libsim.a
			;;
mn10300-*-*)		gdb_target=mn10300
			gdb_sim=../sim/mn10300/libsim.a
			;;

mt-*-*)			gdb_target=mt ;;

none-*-*)		gdb_target=none ;;

ns32k-*-mach3*)		gdb_target=ns32km3 ;;
ns32k-pc532-mach)	gdb_target=ns32km3 ;;
ns32k-*-netbsd*)	gdb_target=nbsd
			build_gdbserver=yes
			configdirs="${configdirs} gdbserver"
			;;
ns32k-utek-sysv*)	gdb_target=merlin ;;
ns32k-utek-*)		gdb_target=umax ;;

powerpc-*-macos*)	gdb_target=macos ;;
powerpc-*-netbsd* | powerpc-*-knetbsd*-gnu)
			gdb_target=nbsd
			gdb_sim=../sim/ppc/libsim.a
			build_gdbserver=yes
			configdirs="${configdirs} gdbserver"
			;;
powerpc-*-openbsd*)	gdb_target=obsd ;;
powerpc-*-aix*)		gdb_target=aix ;;
powerpc-*-eabi* | powerpc-*-sysv* | powerpc-*-elf*)
			if test -f ../sim/ppc/Makefile; then
			  gdb_target=ppc-sim
			else
			  gdb_target=ppc-eabi
			fi ;;
powerpcle-*-eabi* | powerpcle-*-sysv* | powerpcle-*-elf*)
			if test -f ../sim/ppc/Makefile; then
			  gdb_target=ppcle-sim
			else
			  gdb_target=ppcle-eabi
			fi ;;
powerpc-*-linux*)	gdb_target=linux
			gdb_sim=../sim/ppc/libsim.a
			build_gdbserver=yes
			configdirs="${configdirs} gdbserver"
			;;
powerpc64-*-linux*)	gdb_target=linux
			gdb_sim=../sim/ppc/libsim.a
			build_gdbserver=yes
			configdirs="${configdirs} gdbserver"
			;;
powerpc-*-rhapsody*)	gdb_target=rhapsody ;;
powerpc-*-vxworks*)	gdb_target=vxworks ;;
powerpc*-*-*)		if test -f ../sim/ppc/Makefile; then
			  gdb_target=ppc-sim
			  gdb_sim=../sim/ppc/libsim.a
			else
			  gdb_target=ppc-eabi
			fi ;;

rs6000-*-lynxos*)	gdb_target=rs6000lynx ;;
rs6000-*-aix4*)		gdb_target=aix4 ;;
rs6000-*-*)		gdb_target=rs6000 ;;

s390*-*-*)		gdb_target=s390
			build_gdbserver=yes
			configdirs="${configdirs} gdbserver"
			;;
s390x-*-*)		gdb_target=s390x ;;

score-*-*)		gdb_target=embed ;;

sh*-*-pe)		gdb_target=wince ;;
sh-*-hms)		gdb_target=embed ;;
sh-*-coff*)		gdb_target=embed ;;
sh-*-elf*)		gdb_target=embed ;;
sh*-*-linux*)		gdb_target=linux
			gdb_sim=../sim/sh/libsim.a
			build_gdbserver=yes
			configdirs="${configdirs} gdbserver"
			;;
sh*-*-netbsdelf* | sh*-*-knetbsd*-gnu)
			gdb_target=nbsd
			gdb_sim=../sim/sh/libsim.a ;;
sh-*-nto*)		gdb_target=nto ;;
sh64-*-elf*)		gdb_target=sh64
			gdb_sim=../sim/sh/libsim.a ;;
sh*-*-*)		gdb_target=embed
			gdb_sim=../sim/sh/libsim.a ;;

sparc-*-aout*)		gdb_target=sparc-em ;;
sparc-*-coff*)		gdb_target=sparc-em ;;
sparc-*-elf*)		gdb_target=sparc-em ;;
sparc-*-linux*)		gdb_target=linux 
			if test "x${enable_64_bit_bfd}" = "xyes"; then
			    gdb_target=linux64
			fi
			;;
sparc64-*-linux*)	gdb_target=linux64 
			build_gdbserver=yes
			configdirs="${configdirs} gdbserver"
			;;
sparc-*-lynxos*)	gdb_target=sparclynx
			build_gdbserver=yes
			configdirs="${configdirs} gdbserver"
			;;
sparc*-*-freebsd* | sparc*-*-kfreebsd*-gnu)
			gdb_target=fbsd ;;
sparc-*-netbsd* | sparc-*-knetbsd*-gnu)
			gdb_target=nbsd ;;
sparc64-*-netbsd* | sparc64-*-knetbsd*-gnu)
			gdb_target=nbsd64 ;;
sparc-*-openbsd*)	gdb_target=obsd ;;
sparc64-*-openbsd*)	gdb_target=obsd64 ;;
sparc-*pdo-solaris2*)	gdb_target=pdo ;;
sparc-*-solaris2.[0-6] | sparc-*-solaris2.[0-6].*)
			gdb_target=sol2
			;;
sparc-*-solaris2* | sparcv9-*-solaris2* | sparc64-*-solaris2*)
			gdb_target=sol2-64
			;;
sparc-*-sunos4*)	gdb_target=sun4os4
			build_gdbserver=yes
			configdirs="${configdirs} gdbserver"
			;;
sparc-*-sunos5*)	gdb_target=sun4sol2 ;;
sparc-*-vxworks*)	gdb_target=vxsparc ;;
sparc-*-rtems*) 	gdb_target=embed
			gdb_sim=../sim/erc32/libsim.a
			;;
sparc-*-*)		gdb_target=sparc ;;
sparclet-*-*)		gdb_target=sparclet;;
sparclite-*-*)		gdb_target=sparclite ;;
sparc64-*-*)		gdb_target=sparc64 ;;
sparc86x-*-*)		gdb_target=sparclite ;;
sparcv9-*-* | sparc64-*-*) gdb_target=sp64 ;;

spu*-*-*)		gdb_target=spu
			build_gdbserver=yes
			configdirs="${configdirs} gdbserver"
			;;

tic30-*-*)		gdb_target=tic30 ;;

tic4x-*-*)		gdb_target=tic4x ;;

tic54x-*-* | c54x-*-*)	gdb_target=tic54x ;;

tic6x-*-*linux*)	gdb_target=linux ;;

tic6x-*-*)		gdb_target=tic6x ;;

tic80-*-*)		gdb_target=tic80
			gdb_sim=../sim/tic80/libsim.a
			;;

tilegx-*-*linux*)	gdb_target=linux ;;

tilegx-*-*)		gdb_target=tilegx ;;

xstormy16-*-*)          gdb_target=xstormy16
			# No simulator libs are needed: target uses SID.
			;;

v850*-*-elf)		gdb_target=v850
			gdb_sim=../sim/v850/libsim.a
			;;

vax-*-netbsd* | vax-*-knetbsd*-gnu)
			gdb_target=nbsd ;;
vax-*-openbsd*)		gdb_target=obsd ;;
vax-*-*)		gdb_target=vax ;;

fr30-*-*)		gdb_target=fr30
			;;

v850*-*-*)		gdb_target=v850
			case ${gdb_host} in
			  cygwin*)
				CONFIG_OBS="${CONFIG_OBS} v850ice.o" ;;
			  *) ;;
			esac
			;;

w65-*-*)		gdb_target=w65 ;;

x86_64-*-dicos*)	gdb_target=x86-64dicos ;;
x86_64-*-linux*)	gdb_target=linux64
			build_gdbserver=yes
			configdirs="${configdirs} gdbserver"
			;;
x86_64-*-freebsd* | x86_64-*-kfreebsd*-gnu)
			gdb_target=fbsd64
			;;
x86_64-*-netbsd* | x86_64-*-knetbsd*-gnu)
			gdb_target=nbsd64 ;;
x86_64-*-openbsd*)	gdb_target=obsd64 ;;

xtensa*-*-linux*)	gdb_target=linux
			build_gdbserver=yes
			configdirs="${configdirs} gdbserver"
			;;
xtensa*-*-*)		gdb_target=xtensa ;;

z8k-*-coff*)		gdb_target=z8k ;;

*-*pdo-*)		gdb_target=pdo ;;

esac

# map GDB target onto multi-arch support:
case "${gdb_target}" in
d10v)		gdb_multi_arch=yes ;;
m68hc11)	gdb_multi_arch=yes ;;
mn10300)	gdb_multi_arch=yes ;;
x86-64linux)    gdb_multi_arch=yes ;;
xstormy16)      gdb_multi_arch=yes ;;
esac

# map target onto default OS ABI:
case "${target}" in
*-*-freebsd* | *-*-kfreebsd*-gnu)
		gdb_osabi=GDB_OSABI_FREEBSD_ELF ;;
*-*-linux* | *-*-uclinux*)
		gdb_osabi=GDB_OSABI_LINUX ;;
*-*-nto*)	gdb_osabi=GDB_OSABI_QNXNTO ;;
m68*-*-openbsd* | m88*-*-openbsd* | vax-*-openbsd*) ;;
*-*-openbsd*)	gdb_osabi=GDB_OSABI_OPENBSD_ELF ;;
*-*-solaris*)	gdb_osabi=GDB_OSABI_SOLARIS ;;
*-*-*-gnu*)	;; # prevent non-GNU kernels to match the Hurd rule below
*-*-gnu*)	gdb_osabi=GDB_OSABI_HURD ;;
*-*-mingw32ce*)	gdb_osabi=GDB_OSABI_WINCE ;;
*-*-mingw* | *-*-cygwin*)
		gdb_osabi=GDB_OSABI_CYGWIN ;;
*-*-dicos*)	gdb_osabi=GDB_OSABI_DICOS ;;
*-*-symbianelf*)
		gdb_osabi=GDB_OSABI_SYMBIAN ;;
powerpc-*-aix* | rs6000-*-* | powerpc64-*-aix*)
                gdb_osabi=GDB_OSABI_AIX ;;
esac
